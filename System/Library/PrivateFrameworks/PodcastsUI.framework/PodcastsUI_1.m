id sub_1DA542454(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;

  sub_1DA53F9A4();
  v5 = a3;
  v6 = a1;
  v7 = (void *)sub_1DA6701D4();
  v8 = (void *)sub_1DA6701E0();

  return v8;
}

void sub_1DA5424DC(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a4;
  v34 = a6;
  v31 = a5;
  v32 = a1;
  v8 = sub_1DA66EEC0();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66C430();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA670138();
  if (!v18)
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v20 = a2;
    goto LABEL_5;
  }
  sub_1DA670114();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1DA47E2F0((uint64_t)v13, &qword_1EDADE6C8);
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v19 = a3;
LABEL_5:
    sub_1DA66F58C();
    swift_willThrow();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  v21 = v37;
  sub_1DA541C7C(v33, (uint64_t)v10);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)(v31 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24);
    v37 = *(_QWORD *)(v31 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v31 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), v22);
    v23 = sub_1DA66F700();
    v25 = v24;
    swift_bridgeObjectRelease();
    v35 = v23;
    v36 = v25;
    v26 = v32;
    v27 = sub_1DA67072C();
    v28 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v27, v26);
    swift_unknownObjectRelease();

    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1DA5428A4(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v27 = a5;
  v30 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66C430();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA670138();
  if (!v15)
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v17 = a2;
    goto LABEL_5;
  }
  sub_1DA670114();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1DA47E2F0((uint64_t)v10, &qword_1EDADE6C8);
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v16 = a3;
LABEL_5:
    sub_1DA66F58C();
    swift_willThrow();
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_1DA670138();
  if (v18)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v27 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(v27 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
    v19 = sub_1DA66F6F4();
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v19;
    v29 = v21;
    v22 = v30;
    v23 = sub_1DA67072C();
    v24 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v23, v22);
    swift_unknownObjectRelease();

    if (v24)
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    else
      __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v25 = a4;
    sub_1DA66F58C();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1DA542C6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD v19[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C430();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA670114();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DA47E2F0((uint64_t)v8, &qword_1EDADE6C8);
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v13 = a2;
    sub_1DA66F58C();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer), *(_QWORD *)(a3 + OBJC_IVAR____TtC10PodcastsUI17JSLocalizerObject_localizer + 24));
    if (qword_1EDAE0990 != -1)
      swift_once();
    v14 = sub_1DA66F2C8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EDAE0970);
    v19[0] = sub_1DA66F6E8();
    v19[1] = v15;
    v16 = a1;
    v17 = sub_1DA67072C();
    v18 = objc_msgSend((id)objc_opt_self(), sel_valueWithObject_inContext_, v17, v16);
    swift_unknownObjectRelease();

    if (v18)
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    else
      __break(1u);
  }
}

unint64_t sub_1DA542F34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  _OWORD v28[2];
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2190);
    v1 = (_QWORD *)sub_1DA6705D0();
  }
  else
  {
    v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v23 = a1 + 64;
  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      v10 = (v4 - 1) & v4;
      v11 = __clz(__rbit64(v4)) | (v6 << 6);
      v12 = v6;
    }
    else
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_40;
      if (v13 >= v22)
      {
LABEL_36:
        sub_1DA4F1D6C();
        return (unint64_t)v1;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v6 + 1;
      if (!v14)
      {
        v12 = v6 + 2;
        if (v6 + 2 >= v22)
          goto LABEL_36;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v6 + 3;
          if (v6 + 3 >= v22)
            goto LABEL_36;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v6 + 4;
            if (v6 + 4 >= v22)
              goto LABEL_36;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v6 + 5;
              if (v6 + 5 >= v22)
                goto LABEL_36;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_41;
                  if (v12 >= v22)
                    goto LABEL_36;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1DA49A8F4(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v31);
    sub_1DA49ADD0(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_1DA49A8F4((uint64_t)v28, (uint64_t)v27);
    if (!swift_dynamicCast())
    {
      sub_1DA47E2F0((uint64_t)v28, &qword_1EDAE2160);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1DA4F1D6C();
      swift_release();
      return 0;
    }
    sub_1DA49ADD0((uint64_t)v29 + 8, (uint64_t)v27);
    sub_1DA47E2F0((uint64_t)v28, &qword_1EDAE2160);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_1DA499108(v25, v26);
    if ((v16 & 1) != 0)
    {
      v7 = 16 * result;
      v8 = (uint64_t *)(v1[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v25;
      v8[1] = v26;
      v9 = (uint64_t *)(v1[7] + v7);
      result = swift_bridgeObjectRelease();
      *v9 = v25;
      v9[1] = v26;
      goto LABEL_8;
    }
    if (v1[2] >= v1[3])
      break;
    *(_QWORD *)((char *)v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = (uint64_t *)(v1[6] + 16 * result);
    *v17 = v25;
    v17[1] = v26;
    v18 = (uint64_t *)(v1[7] + 16 * result);
    *v18 = v25;
    v18[1] = v26;
    v19 = v1[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_39;
    v1[2] = v21;
LABEL_8:
    v6 = v12;
    v4 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1DA543338(void *a1)
{
  uint64_t v1;

  sub_1DA542C6C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1DA543354(void *a1)
{
  uint64_t v1;

  sub_1DA5428A4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1DA543370(uint64_t a1)
{
  return sub_1DA5433D8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DA5424DC);
}

id sub_1DA54338C(void *a1)
{
  uint64_t v1;

  return sub_1DA542310(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_1DA5433A4(void *a1)
{
  uint64_t v1;

  return sub_1DA5421D8(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DA5433BC(uint64_t a1)
{
  return sub_1DA5433D8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1DA541EE4);
}

uint64_t sub_1DA5433D8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1DA5433FC(void *a1)
{
  unint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;

  if ((objc_msgSend(a1, sel__pui_isNull) & 1) != 0
    || (objc_msgSend(a1, sel_isUndefined) & 1) != 0)
  {
    return 0;
  }
  v4 = objc_msgSend(a1, sel_toDictionary);
  if (!v4
    || (v5 = v4, v6 = sub_1DA66F754(), v5, v2 = sub_1DA542F34(v6), swift_bridgeObjectRelease(), !v2))
  {
    sub_1DA66F598();
    sub_1DA53F9FC();
    swift_allocError();
    v2 = v7;
    v8 = a1;
    sub_1DA66F58C();
    swift_willThrow();
  }
  return v2;
}

void sub_1DA543510(void *a1)
{
  uint64_t v1;

  sub_1DA54198C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1DA543530(void *a1)
{
  uint64_t v1;

  sub_1DA541718(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1DA54354C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(__n128);
  uint64_t v11;

  v4 = *(_QWORD *)(*a4 + *MEMORY[0x1E0D41370]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - v7;
  v9(v6);
  sub_1DA66F640();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1DA543604()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA543630(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA54354C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t Promise.flatMapError<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14[2];

  v10 = sub_1DA66F658();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = v10;
  sub_1DA66BE60();
  sub_1DA4813E4(a1, (uint64_t)v14);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a2;
  v12[5] = a3;
  v12[6] = v10;
  sub_1DA4841BC(v14, (uint64_t)(v12 + 7));
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66F61C();
  swift_release();
  swift_release();
  return v10;
}

uint64_t sub_1DA54374C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v10;
  _QWORD *v11;

  a2();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a6;
  v10[3] = a7;
  v10[4] = a4;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a6;
  v11[3] = a7;
  v11[4] = a4;
  swift_retain_n();
  sub_1DA66F52C();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA543820()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_1DA543854(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA54374C(a1, *(void (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + 56, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1DA543868()
{
  return sub_1DA66F628();
}

uint64_t sub_1DA543888()
{
  return sub_1DA66F640();
}

uint64_t sub_1DA5438A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t JoeColorCandidates.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t JoeColorCandidates.init(rawValue:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static JoeColorCandidates.background.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static JoeColorCandidates.primaryText.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static JoeColorCandidates.secondaryText.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static JoeColorCandidates.tertiaryText.getter(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void static JoeColorCandidates.quaternaryText.getter(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

_BYTE *sub_1DA543924@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1DA543930(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *sub_1DA543938@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_1DA54394C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_1DA543960@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DA543974(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_1DA5439A4@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_1DA5439D0@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_1DA5439F4(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_1DA543A08(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_1DA543A1C(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_1DA543A30@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DA543A44(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DA543A58(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1DA543A6C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DA543A80()
{
  _BYTE *v0;

  return *v0 == 0;
}

_BYTE *sub_1DA543A90(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_1DA543AA4@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1DA543AB4(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_1DA543AC4()
{
  unint64_t result;

  result = qword_1F026A850;
  if (!qword_1F026A850)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for JoeColorCandidates, &type metadata for JoeColorCandidates);
    atomic_store(result, (unint64_t *)&qword_1F026A850);
  }
  return result;
}

unint64_t sub_1DA543B0C()
{
  unint64_t result;

  result = qword_1F026A858;
  if (!qword_1F026A858)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for JoeColorCandidates, &type metadata for JoeColorCandidates);
    atomic_store(result, (unint64_t *)&qword_1F026A858);
  }
  return result;
}

unint64_t sub_1DA543B54()
{
  unint64_t result;

  result = qword_1F026A860;
  if (!qword_1F026A860)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for JoeColorCandidates, &type metadata for JoeColorCandidates);
    atomic_store(result, (unint64_t *)&qword_1F026A860);
  }
  return result;
}

unint64_t sub_1DA543B9C()
{
  unint64_t result;

  result = qword_1F026A868;
  if (!qword_1F026A868)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for JoeColorCandidates, &type metadata for JoeColorCandidates);
    atomic_store(result, (unint64_t *)&qword_1F026A868);
  }
  return result;
}

id static MPModelPodcastEpisode.propertiesRequiredForPopulatingPlayerItem()()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v52;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v52 = inited;
  *(_QWORD *)(inited + 32) = sub_1DA66F8BC();
  *(_QWORD *)(inited + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DA67C300;
  *(_QWORD *)(v2 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 112) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 120) = v8;
  *(_QWORD *)(v2 + 128) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 136) = v9;
  *(_QWORD *)(v2 + 144) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 152) = v10;
  *(_QWORD *)(v2 + 160) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 168) = v11;
  *(_QWORD *)(v2 + 176) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 184) = v12;
  *(_QWORD *)(v2 + 192) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 200) = v13;
  *(_QWORD *)(v2 + 208) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 216) = v14;
  *(_QWORD *)(v2 + 224) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 232) = v15;
  *(_QWORD *)(v2 + 240) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 248) = v16;
  *(_QWORD *)(v2 + 256) = sub_1DA66F8BC();
  *(_QWORD *)(v2 + 264) = v17;
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DA678FE0;
  *(_QWORD *)(v18 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v18 + 40) = v19;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v20 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v20 + 40) = v21;
  sub_1DA494B9C(MEMORY[0x1E0DEE9D8]);
  v22 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v23 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  sub_1DA544164();
  v24 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithProperties_relationships_, v23, v24);

  *(_QWORD *)(v18 + 48) = v25;
  *(_QWORD *)(v18 + 56) = sub_1DA66F8BC();
  *(_QWORD *)(v18 + 64) = v26;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DA67C310;
  *(_QWORD *)(v27 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 56) = v29;
  *(_QWORD *)(v27 + 64) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 72) = v30;
  *(_QWORD *)(v27 + 80) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 88) = v31;
  *(_QWORD *)(v27 + 96) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 104) = v32;
  v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v33 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v33 + 40) = v34;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v35 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v35 + 40) = v36;
  v37 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), sel_propertySetWithProperties_, v37);

  *(_QWORD *)(v33 + 48) = v38;
  sub_1DA494B9C(v33);
  v39 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v40 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v41 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v42 = objc_msgSend(v39, sel_initWithProperties_relationships_, v40, v41);

  *(_QWORD *)(v18 + 72) = v42;
  sub_1DA494B9C(v18);
  v43 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v44 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v45 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v43, sel_initWithProperties_relationships_, v44, v45);

  *(_QWORD *)(v52 + 48) = v46;
  sub_1DA494B9C(v52);
  v47 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v48 = (void *)sub_1DA66FA90();
  v49 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v47, sel_initWithProperties_relationships_, v48, v49);

  return v50;
}

unint64_t sub_1DA544164()
{
  unint64_t result;

  result = qword_1EDAE5040;
  if (!qword_1EDAE5040)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDAE5040);
  }
  return result;
}

void *MPModelPodcastEpisode.artistSubtitle.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_author);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_name);

    if (v3)
    {
      v2 = (void *)sub_1DA66F8BC();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

Swift::String_optional __swiftcall MPModelPodcastEpisode.miniplayerSubtitleText(for:)(UIUserInterfaceSizeClass a1)
{
  void *v1;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD *v28;
  Swift::String_optional result;
  _QWORD *v30;

  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = objc_msgSend(v1, sel_podcast);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_author);

    if (v6 && (v7 = objc_msgSend(v6, sel_name), v6, v7))
    {
      v8 = sub_1DA66F8BC();
      v10 = v9;

      v3 = sub_1DA4981C8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v11 = v3[2];
      v12 = v3[3];
      v13 = v11 + 1;
      if (v11 >= v12 >> 1)
      {
        v26 = v3;
        v27 = v3[2];
        v28 = sub_1DA4981C8((_QWORD *)(v12 > 1), v11 + 1, 1, v26);
        v11 = v27;
        v3 = v28;
      }
      v3[2] = v13;
      v14 = &v3[2 * v11];
      v14[4] = v8;
      v14[5] = v10;
      v30 = v3;
    }
    else
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  v15 = objc_msgSend(v1, sel_author);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_name);

    if (v17)
    {
      v18 = sub_1DA66F8BC();
      v20 = v19;

      if (!v3[2] || a1 == UIUserInterfaceSizeClassRegular)
      {
        sub_1DA5450AC(0, 0, v18, v20);
        if (v30[2])
          goto LABEL_14;
LABEL_16:
        swift_bridgeObjectRelease();
        v21 = 0;
        v23 = 0;
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (!v3[2])
    goto LABEL_16;
LABEL_14:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5340);
  sub_1DA539538();
  v21 = sub_1DA66F838();
  v23 = v22;
  swift_bridgeObjectRelease();
LABEL_17:
  v24 = v21;
  v25 = v23;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

id IMPlayerItem.init(modelObject:includeArtworkCatalog:)(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  unsigned int v42;
  char v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  _BOOL8 v48;
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  void *v72;
  id v73;
  char **v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  char *v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;

  v100 = a2;
  v3 = sub_1DA66C358();
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  MEMORY[0x1E0C80A78](v3);
  v97 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v5);
  v94 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v98 = (char *)&v93 - v8;
  MEMORY[0x1E0C80A78](v9);
  v99 = (char *)&v93 - v10;
  MEMORY[0x1E0C80A78](v11);
  v95 = (char *)&v93 - v12;
  MEMORY[0x1E0C80A78](v13);
  v96 = (uint64_t)&v93 - v14;
  v15 = sub_1DA66C160();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v93 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v29 = objc_msgSend(a1, sel_title);
  objc_msgSend(v28, sel_setTitle_, v29);

  v30 = objc_msgSend(a1, sel_identifiers);
  v31 = objc_msgSend(v30, sel_vendorID);

  objc_msgSend(v28, sel_setEpisodeGuid_, v31);
  objc_msgSend(a1, sel_duration);
  objc_msgSend(v28, sel_setDuration_);
  objc_msgSend(v28, sel_setIsVideo_, objc_msgSend(a1, sel_hasVideo));
  v32 = objc_msgSend(a1, sel_releaseDateComponents);
  if (v32)
  {
    v33 = v32;
    sub_1DA66C148();

    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, v34, 1, v15);
  sub_1DA4A686C((uint64_t)v21, (uint64_t)v24, &qword_1EDADE6C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15))
  {
    sub_1DA47E2F0((uint64_t)v24, &qword_1EDADE6C0);
    v35 = sub_1DA66C430();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 1, 1, v35);
    v36 = 0;
    v37 = &selRef_ams_isActiveAccountCombined;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v24, v15);
    sub_1DA47E2F0((uint64_t)v24, &qword_1EDADE6C0);
    sub_1DA66C154();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v38 = sub_1DA66C430();
    v39 = *(_QWORD *)(v38 - 8);
    v36 = 0;
    v37 = &selRef_ams_isActiveAccountCombined;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v27, 1, v38) != 1)
    {
      v36 = (void *)sub_1DA66C3F4();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v38);
    }
  }
  objc_msgSend(v28, sel_setPubDate_, v36);

  v40 = objc_msgSend(a1, sel_podcast);
  if (v40)
  {
    v41 = v40;
    v42 = objc_msgSend(v40, sel_supportsSubscription);

  }
  else
  {
    v42 = 1;
  }
  v43 = v100;
  objc_msgSend(v28, sel_setIsNotSubscribeable_, v42 ^ 1);
  objc_msgSend(v28, sel_setIsExplicit_, objc_msgSend(a1, sel_isExplicitEpisode));
  if ((v43 & 1) != 0)
    v44 = objc_msgSend(a1, sel_artworkCatalog);
  else
    v44 = 0;
  objc_msgSend(v28, sel_setArtworkCatalog_, v44);

  objc_msgSend(v28, sel_setSeasonNumber_, objc_msgSend(a1, sel_seasonNumber));
  objc_msgSend(v28, sel_setEpisodeNumber_, objc_msgSend(a1, sel_episodeNumber));
  v45 = objc_msgSend(a1, sel_podcast);
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v45, sel_sortType);

    v48 = v47 == (id)2;
  }
  else
  {
    v48 = 0;
  }
  objc_msgSend(v28, sel_setPodcastIsSerial_, v48);
  v49 = objc_msgSend(a1, sel_episodeType);
  if (v49 == (id)3)
    v50 = 1;
  else
    v50 = 2 * (v49 == (id)2);
  objc_msgSend(v28, sel_setEpisodeType_, v50);
  v51 = objc_msgSend(a1, sel_podcast);
  if (!v51)
    goto LABEL_24;
  v52 = v51;
  v53 = objc_msgSend(v51, sel_author);

  if (!v53)
    goto LABEL_25;
  v54 = objc_msgSend(v53, sel_name);

  if (v54)
  {
    sub_1DA66F8BC();

    v53 = (id)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_24:
    v53 = 0;
  }
LABEL_25:
  objc_msgSend(v28, sel_setAlbum_, v53);

  v55 = a1;
  v56 = objc_msgSend(v55, v37[56]);
  v57 = objc_msgSend(v56, sel_library);

  if (v57)
  {
    v58 = objc_msgSend(v57, sel_databaseID);
    swift_unknownObjectRelease();
    sub_1DA66F8BC();

    v57 = (id)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  objc_msgSend(v28, sel_setEpisodeUuid_, v57);

  v59 = v55;
  v60 = objc_msgSend(v59, v37[56]);
  v61 = (uint64_t)objc_msgSend(v60, sel_universalStore);

  if (v61)
  {
    objc_msgSend((id)v61, sel_adamID);
    swift_unknownObjectRelease();
    v61 = sub_1DA66DCE4();

    if ((v61 & 0x8000000000000000) == 0)
      goto LABEL_32;
    __break(1u);
  }

LABEL_32:
  objc_msgSend(v28, sel_setEpisodeStoreId_, v61);
  v62 = objc_msgSend(v59, sel_podcast);
  v63 = v62;
  if (v62)
  {
    v64 = objc_msgSend(v62, sel_feedURL);

    if (v64)
    {
      v65 = (uint64_t)v95;
      sub_1DA66C304();

      v66 = 0;
    }
    else
    {
      v66 = 1;
      v65 = (uint64_t)v95;
    }
    v68 = v101;
    v67 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(v65, v66, 1, v102);
    v69 = v96;
    sub_1DA4A686C(v65, v96, &qword_1EDAE5020);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v69, 1, v67))
    {
      sub_1DA47E2F0(v69, &qword_1EDAE5020);
      v63 = 0;
    }
    else
    {
      v70 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v97, v69, v67);
      sub_1DA47E2F0(v69, &qword_1EDAE5020);
      sub_1DA66C298();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v67);
      v37 = &selRef_ams_isActiveAccountCombined;
      v63 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v28, sel_setPodcastFeedUrl_, v63);

  v71 = objc_msgSend(v59, sel_author);
  v72 = v71;
  if (v71)
  {
    v73 = objc_msgSend(v71, sel_name);

    v74 = &selRef_tintColorForTheme_;
    if (v73)
    {
      sub_1DA66F8BC();

      v72 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v72 = 0;
    }
  }
  else
  {
    v74 = &selRef_tintColorForTheme_;
  }
  objc_msgSend(v28, sel_setAuthor_, v72);

  v75 = objc_msgSend(v59, v74[483]);
  if (v75)
  {
    v76 = v75;
    v77 = objc_msgSend(v75, v37[56]);
    v78 = (uint64_t)objc_msgSend(v77, sel_universalStore);

    if (!v78)
    {

      goto LABEL_50;
    }
    objc_msgSend((id)v78, sel_adamID);
    swift_unknownObjectRelease();
    v78 = sub_1DA66DCE4();

    v79 = v99;
    if ((v78 & 0x8000000000000000) == 0)
      goto LABEL_51;
    __break(1u);
  }
  v78 = 0;
LABEL_50:
  v79 = v99;
LABEL_51:
  objc_msgSend(v28, sel_setPodcastStoreId_, v78);
  v80 = objc_msgSend(v59, sel_shareURL);
  if (v80)
  {
    v81 = v97;
    sub_1DA66C304();

    v83 = v101;
    v82 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v79, v81, v102);
    v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56);
    v84(v79, 0, 1, v82);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v79, 1, v82) == 1)
    {
      v80 = 0;
    }
    else
    {
      v80 = (id)sub_1DA66C2C8();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v79, v82);
    }
  }
  else
  {
    v83 = v101;
    v82 = v102;
    v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v84(v79, 1, 1, v102);
  }
  objc_msgSend(v28, sel_setEpisodeShareUrl_, v80);

  v85 = objc_msgSend(v59, v74[483]);
  v86 = v85;
  if (v85)
  {
    v87 = objc_msgSend(v85, sel_shareURL);

    if (v87)
    {
      v88 = (uint64_t)v94;
      sub_1DA66C304();

      v89 = 0;
    }
    else
    {
      v89 = 1;
      v88 = (uint64_t)v94;
    }
    v84((char *)v88, v89, 1, v82);
    v90 = (uint64_t)v98;
    sub_1DA4A686C(v88, (uint64_t)v98, &qword_1EDAE5020);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v90, 1, v82) == 1)
    {
      v86 = 0;
    }
    else
    {
      v86 = (void *)sub_1DA66C2C8();
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v90, v82);
    }
  }
  else
  {
    v84(v98, 1, 1, v82);
  }
  objc_msgSend(v28, sel_setPodcastShareUrl_, v86);

  v91 = objc_msgSend(v59, sel_transcriptIdentifier);
  objc_msgSend(v28, sel_setTranscriptIdentifier_, v91);

  return v28;
}

char *sub_1DA5450AC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1DA4981C8(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

char *sub_1DA54522C(uint64_t a1, int64_t a2, uint64_t a3, char a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  char *result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    result = (char *)sub_1DA540690(result, v15, 1, v6);
    v6 = result;
  }
  v16 = (uint64_t)&v6[16 * a1 + 32];
  if (!v10)
    goto LABEL_20;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_26;
  if ((v19 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 16);
    v20 = &v6[16 * a2 + 32];
    v21 = 16 * v19;
    if ((char *)(v16 + 16) != v20 || result >= &v20[v21])
      result = (char *)memmove(result, v20, v21);
    v22 = *((_QWORD *)v6 + 2);
    v18 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v18)
    {
      *((_QWORD *)v6 + 2) = v23;
LABEL_20:
      *(_QWORD *)v16 = a3;
      *(_BYTE *)(v16 + 8) = a4;
      *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA54539C(uint64_t a1, uint64_t a2)
{
  return sub_1DA5453C4(a1, a2, (uint64_t (*)(void))sub_1DA53FE3C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1DA5453B0(uint64_t a1, uint64_t a2)
{
  return sub_1DA5453C4(a1, a2, (uint64_t (*)(void))sub_1DA54067C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E010]);
}

uint64_t sub_1DA5453C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_22;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_28;
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, v10);
    v24 = v22 - v9;
    if (!v23)
    {
      *(_QWORD *)(v6 + 16) = v24;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

unint64_t sub_1DA545574()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDAE4C30;
  if (!qword_1EDAE4C30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE20D0);
    v2 = sub_1DA5455F0(&qword_1EDAE4C38, &qword_1EDAE4C28);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE4C30);
  }
  return result;
}

uint64_t sub_1DA5455F0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1DA47D774(255, a2);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEFD00], v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.LogController()
{
  return &type metadata for PlaybackController.LogController;
}

uint64_t OrderedTipProvider.providers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrderedTipProvider.init(providers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OrderedTipProvider.tips.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char *v65;
  uint64_t v66;
  __int128 *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _OWORD v83[3];
  uint64_t v84;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4350);
  v76 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v55 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4508);
  v75 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE46A0);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4538);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE43A8);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v69 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4518);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v68 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4840);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v0;
  *(_QWORD *)&v83[0] = MEMORY[0x1E0DEE9E0];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC8);
  sub_1DA66E02C();
  v16 = v15;
  sub_1DA4841D4(&qword_1EDAE4838, (uint64_t *)&unk_1EDAE4840, MEMORY[0x1E0C960B0]);
  v63 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v84 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1DA6704E0();
  v17 = *(_QWORD *)(v14 + 16);
  v77 = v14;
  result = swift_bridgeObjectRetain();
  v70 = v17;
  if (v17)
  {
    v19 = 0;
    v20 = v77 + 32;
    v67 = (__int128 *)&v79;
    v66 = (uint64_t)&v80 + 8;
    v65 = (char *)v83 + 8;
    v64 = xmmword_1DA678510;
    v21 = v69;
    while (v19 < *(_QWORD *)(v77 + 16))
    {
      v78 = v19 + 1;
      v22 = v67;
      sub_1DA4813E4(v20, (uint64_t)v67);
      *(_QWORD *)&v80 = v19;
      v23 = v66;
      sub_1DA4841BC(v22, v66);
      v83[1] = v81;
      v83[2] = v82;
      v83[0] = v80;
      v24 = v16;
      v25 = v1;
      v27 = *((_QWORD *)&v82 + 1);
      v26 = v82;
      __swift_project_boxed_opaque_existential_1((_QWORD *)v83 + 1, v82);
      *(_QWORD *)&v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D68);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v64;
      *(_QWORD *)(v28 + 32) = MEMORY[0x1E0DEE9E0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4768);
      sub_1DA4841D4(&qword_1EDAE4760, &qword_1EDAE4768, MEMORY[0x1E0C95D90]);
      sub_1DA66E23C();
      swift_release();
      v1 = v25;
      v16 = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v80 = *(_QWORD *)&v83[0];
      sub_1DA4813E4((uint64_t)v83 + 8, v23);
      v29 = (_OWORD *)swift_allocObject();
      v30 = v81;
      v29[1] = v80;
      v29[2] = v30;
      v29[3] = v82;
      sub_1DA4841D4(&qword_1EDAE43A0, (uint64_t *)&unk_1EDAE43A8, MEMORY[0x1E0C95788]);
      v31 = v68;
      v32 = v74;
      sub_1DA66E17C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v32);
      sub_1DA4841D4(&qword_1EDAE4510, &qword_1EDAE4518, MEMORY[0x1E0C95950]);
      v33 = v72;
      sub_1DA66E11C();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v33);
      sub_1DA47E2F0((uint64_t)v83, &qword_1EDAE4BB0);
      sub_1DA6704BC();
      sub_1DA6704EC();
      sub_1DA6704F8();
      result = sub_1DA6704C8();
      v20 += 40;
      v19 = v78;
      if (v70 == v78)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v34 = v84;
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(v34 + 16);
    if (v35)
    {
      v78 = sub_1DA4841D4(&qword_1EDAE4770, (uint64_t *)&unk_1EDAE4778, MEMORY[0x1E0C95D90]);
      v36 = v63;
      sub_1DA66BE60();
      sub_1DA66BE60();
      v37 = 0;
      v38 = v1;
      v39 = v36;
      v77 = v16;
      v40 = v55;
      v41 = v54;
      v42 = v53;
      do
      {
        v43 = *(_QWORD *)(v34 + 8 * v37++ + 32);
        *(_QWORD *)&v83[0] = v39;
        *(_QWORD *)&v80 = v43;
        sub_1DA66BE60();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4778);
        sub_1DA66E158();
        sub_1DA4841D4(&qword_1EDAE4348, &qword_1EDAE4350, MEMORY[0x1E0C95698]);
        sub_1DA66E17C();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v38);
        sub_1DA4841D4(&qword_1EDAE4500, &qword_1EDAE4508, MEMORY[0x1E0C95950]);
        v39 = sub_1DA66E11C();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v41);
        swift_release();
        swift_release();
      }
      while (v35 != v37);
      swift_release();
    }
    else
    {
      v44 = v63;
      sub_1DA66BE60();
      v39 = v44;
    }
    swift_release();
    *(_QWORD *)&v83[0] = v39;
    sub_1DA486298();
    *(_QWORD *)&v80 = sub_1DA66FE44();
    v45 = sub_1DA66FE8C();
    v46 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v56, 1, 1, v45);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4778);
    sub_1DA4841D4(&qword_1EDAE4770, (uint64_t *)&unk_1EDAE4778, MEMORY[0x1E0C95D90]);
    sub_1DA4A89F0();
    v47 = v57;
    sub_1DA66E248();
    sub_1DA47E2F0(v46, (uint64_t *)&unk_1EDAE20A0);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC0);
    sub_1DA4841D4(&qword_1EDAE4698, (uint64_t *)&unk_1EDAE46A0, MEMORY[0x1E0C95CB8]);
    v48 = v60;
    v49 = v59;
    sub_1DA66E17C();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v49);
    sub_1DA4841D4(&qword_1EDAE4530, (uint64_t *)&unk_1EDAE4538, MEMORY[0x1E0C95950]);
    v50 = v62;
    v51 = sub_1DA66E11C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v50);
    return v51;
  }
  return result;
}

uint64_t sub_1DA545FBC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v8 = *a2;
  sub_1DA4813E4((uint64_t)(a2 + 1), (uint64_t)&v9);
  v7[2] = &v8;
  v5 = sub_1DA546E84((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DA5474A0, (uint64_t)v7, v4);
  result = sub_1DA47E2F0((uint64_t)&v8, &qword_1EDAE4BB0);
  *a3 = v5;
  return result;
}

uint64_t sub_1DA54603C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[40];

  v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA678510;
  v7 = *a2;
  sub_1DA4813E4((uint64_t)(a2 + 1), (uint64_t)v9);
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_bridgeObjectRetain();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  *a3 = v6;
  return result;
}

uint64_t sub_1DA5460E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(_QWORD *@<X8>);
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t result;
  uint64_t v29;
  int64_t v30;

  v29 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
    }
    else
    {
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v11 >= v30)
      {
LABEL_34:
        swift_release();
        sub_1DA4EFFCC((uint64_t)v7);
        return (uint64_t)a2;
      }
      v12 = *(_QWORD *)(v29 + 8 * v11);
      ++v8;
      if (!v12)
      {
        v8 = v11 + 1;
        if (v11 + 1 >= v30)
          goto LABEL_34;
        v12 = *(_QWORD *)(v29 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 2;
          if (v11 + 2 >= v30)
            goto LABEL_34;
          v12 = *(_QWORD *)(v29 + 8 * v8);
          if (!v12)
          {
            v13 = v11 + 3;
            if (v13 >= v30)
              goto LABEL_34;
            v12 = *(_QWORD *)(v29 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v8 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_38;
                if (v8 >= v30)
                  goto LABEL_34;
                v12 = *(_QWORD *)(v29 + 8 * v8);
                ++v13;
                if (v12)
                  goto LABEL_21;
              }
            }
            v8 = v13;
          }
        }
      }
LABEL_21:
      v6 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    v14 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v10);
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    sub_1DA4EFFCC((uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = sub_1DA55CB14(v14);
    v19 = a2[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (a2[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1DA57BD88();
    }
    else
    {
      sub_1DA578A88(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1DA55CB14(v14);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_39;
      v18 = v23;
    }
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      a2[(v18 >> 6) + 8] |= 1 << v18;
      *(_BYTE *)(a2[6] + v18) = v14;
      *(_QWORD *)(a2[7] + 8 * v18) = MEMORY[0x1E0DEE9D8];
      v25 = a2[2];
      v26 = v25 + 1;
      v27 = __OFADD__(v25, 1);
      swift_bridgeObjectRetain();
      if (v27)
        goto LABEL_36;
      a2[2] = v26;
    }
    swift_bridgeObjectRelease();
    sub_1DA65F1C0(v15);
    v7 = sub_1DA5463C0;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_1DA670744();
  __break(1u);
  return result;
}

void sub_1DA5463C0(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1DA5463D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1DA5460E4(*(_QWORD *)a1, *(_QWORD **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1DA5463FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1DA5470A0(*a1);
  *a2 = result;
  return result;
}

Swift::Void __swiftcall OrderedTipProvider.requestRefresh()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)v0 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA4813E4(v2, (uint64_t)v5);
      v3 = v6;
      v4 = v7;
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DA5464D4(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1DA5E7554(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1DA54653C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DA54653C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;

  v3 = a1[1];
  result = sub_1DA670678();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v85 = 0;
      v86 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(_QWORD *)(v86 + 16 * i);
        v89 = v85;
        do
        {
          if (v88 >= *(_QWORD *)(v86 + v89))
            break;
          if (!v86)
            goto LABEL_140;
          v90 = (_QWORD *)(v86 + v89);
          v91 = *(_QWORD *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *v90 = v88;
          v90[1] = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v92 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v93 = *v101;
        do
        {
          v94 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v93)
            goto LABEL_144;
          v95 = v92;
          v96 = *(_QWORD *)&v92[16 * v94 + 32];
          v97 = *(_QWORD *)&v92[16 * v13 + 24];
          sub_1DA546C0C((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(_QWORD *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = sub_1DA5E752C((uint64_t)v95);
          if (v94 >= *((_QWORD *)v95 + 2))
            goto LABEL_133;
          v98 = &v95[16 * v94 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v95 + 2);
          if (v13 > v99)
            goto LABEL_134;
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          v92 = v95;
          *((_QWORD *)v95 + 2) = v99 - 1;
          v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4BC0);
    v8 = sub_1DA66FB08();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 32;
  v100 = *a1 - 16;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(_QWORD *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (uint64_t *)(v102 + 16 * v14);
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 2;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = 16 * v10;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = *(_QWORD *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(_QWORD *)(v25 - 16) = v26;
              *(_QWORD *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v28 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v28 >= v3)
      v28 = v3;
    if (v28 < v14)
      break;
    if (v10 != v28)
    {
      v29 = v100 + 16 * v10;
      do
      {
        v30 = *(_QWORD *)(v11 + 16 * v10);
        v31 = v14;
        v32 = v29;
        do
        {
          if (v30 >= *(_QWORD *)v32)
            break;
          if (!v11)
            goto LABEL_141;
          v33 = *(_QWORD *)(v32 + 24);
          *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
          *(_QWORD *)v32 = v30;
          *(_QWORD *)(v32 + 8) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      v10 = v28;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1DA5E7198(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v35 = *((_QWORD *)v12 + 2);
    v34 = *((_QWORD *)v12 + 3);
    v13 = v35 + 1;
    v11 = v106;
    if (v35 >= v34 >> 1)
    {
      v84 = sub_1DA5E7198((char *)(v34 > 1), v35 + 1, 1, v12);
      v11 = v106;
      v12 = v84;
    }
    *((_QWORD *)v12 + 2) = v13;
    v36 = v12 + 32;
    v37 = &v12[16 * v35 + 32];
    *(_QWORD *)v37 = v14;
    *((_QWORD *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        v38 = v13 - 1;
        if (v13 >= 4)
        {
          v43 = &v36[16 * v13];
          v44 = *((_QWORD *)v43 - 8);
          v45 = *((_QWORD *)v43 - 7);
          v49 = __OFSUB__(v45, v44);
          v46 = v45 - v44;
          if (v49)
            goto LABEL_119;
          v48 = *((_QWORD *)v43 - 6);
          v47 = *((_QWORD *)v43 - 5);
          v49 = __OFSUB__(v47, v48);
          v41 = v47 - v48;
          v42 = v49;
          if (v49)
            goto LABEL_120;
          v50 = v13 - 2;
          v51 = &v36[16 * v13 - 32];
          v53 = *(_QWORD *)v51;
          v52 = *((_QWORD *)v51 + 1);
          v49 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          if (v49)
            goto LABEL_122;
          v49 = __OFADD__(v41, v54);
          v55 = v41 + v54;
          if (v49)
            goto LABEL_125;
          if (v55 >= v46)
          {
            v73 = &v36[16 * v38];
            v75 = *(_QWORD *)v73;
            v74 = *((_QWORD *)v73 + 1);
            v49 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v49)
              goto LABEL_129;
            v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v67 = *((_QWORD *)v12 + 4);
            v68 = *((_QWORD *)v12 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
            goto LABEL_77;
          }
          v40 = *((_QWORD *)v12 + 4);
          v39 = *((_QWORD *)v12 + 5);
          v49 = __OFSUB__(v39, v40);
          v41 = v39 - v40;
          v42 = v49;
        }
        if ((v42 & 1) != 0)
          goto LABEL_121;
        v50 = v13 - 2;
        v56 = &v36[16 * v13 - 32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v59 = __OFSUB__(v57, v58);
        v60 = v57 - v58;
        v61 = v59;
        if (v59)
          goto LABEL_124;
        v62 = &v36[16 * v38];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v49 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v49)
          goto LABEL_127;
        if (__OFADD__(v60, v65))
          goto LABEL_128;
        if (v60 + v65 >= v41)
        {
          v66 = v41 < v65;
LABEL_83:
          if (v66)
            v38 = v50;
          goto LABEL_85;
        }
LABEL_77:
        if ((v61 & 1) != 0)
          goto LABEL_123;
        v69 = &v36[16 * v38];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v49 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v49)
          goto LABEL_126;
        if (v72 < v60)
          goto LABEL_15;
LABEL_85:
        v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v78 = v12;
        v79 = &v36[16 * v77];
        v80 = *(_QWORD *)v79;
        v81 = &v36[16 * v38];
        v82 = *((_QWORD *)v81 + 1);
        sub_1DA546C0C((char *)(v11 + 16 * *(_QWORD *)v79), (char *)(v11 + 16 * *(_QWORD *)v81), v11 + 16 * v82, __dst);
        if (v1)
          goto LABEL_93;
        if (v82 < v80)
          goto LABEL_116;
        if (v38 > *((_QWORD *)v78 + 2))
          goto LABEL_117;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v36[16 * v77 + 8] = v82;
        v83 = *((_QWORD *)v78 + 2);
        if (v38 >= v83)
          goto LABEL_118;
        v12 = v78;
        v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((_QWORD *)v78 + 2) = v83 - 1;
        v11 = v106;
        if (v83 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1DA670564();
  __break(1u);
  return result;
}

uint64_t sub_1DA546C0C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1DA5E7338((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA546E84(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CC0);
  result = sub_1DA6705AC();
  v6 = (_QWORD *)result;
  v7 = 0;
  v26 = a3;
  v10 = *(_QWORD *)(a3 + 64);
  v9 = a3 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v23 = v9;
  v24 = (unint64_t)(v11 + 63) >> 6;
  v14 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v20 = *(_BYTE *)(*(_QWORD *)(v26 + 48) + i);
    v28 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    a1(&v27, &v28);
    result = swift_bridgeObjectRelease();
    if (v3)
    {
      swift_release();
      return (uint64_t)v6;
    }
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_BYTE *)(v6[6] + i) = v20;
    *(_QWORD *)(v6[7] + 8 * i) = v27;
    v21 = v6[2];
    v17 = __OFADD__(v21, 1);
    v22 = v21 + 1;
    if (v17)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v22;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = __OFADD__(v7++, 1);
    if (v17)
      goto LABEL_27;
    if (v7 >= v24)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v23 + 8 * v7);
    if (!v18)
      break;
LABEL_15:
    v13 = (v18 - 1) & v18;
  }
  v19 = v7 + 1;
  if (v7 + 1 >= v24)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 2;
  if (v7 + 2 >= v24)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 3;
  if (v7 + 3 >= v24)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_14:
    v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v24)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v23 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DA5470A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  char v43;
  _QWORD *v44;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CB8);
  v4 = sub_1DA6705AC();
  v5 = (_QWORD *)v4;
  v6 = 0;
  v39 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v35 = (_QWORD *)v4;
  v36 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v38 = v4 + 64;
  if ((v9 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v6 << 6); ; i = __clz(__rbit64(v14)) + (v6 << 6))
  {
    v16 = *(_BYTE *)(*(_QWORD *)(v39 + 48) + i);
    v44 = *(_QWORD **)(*(_QWORD *)(v39 + 56) + 8 * i);
    swift_bridgeObjectRetain_n();
    sub_1DA5464D4(&v44);
    if (v2)
      goto LABEL_57;
    v2 = 0;
    v43 = v16;
    v17 = v44;
    v18 = v44[2];
    if (v18)
      break;
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_41:
    swift_release();
    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_BYTE *)(v5[6] + i) = v43;
    *(_QWORD *)(v5[7] + 8 * i) = v20;
    v32 = v5[2];
    v13 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v13)
      goto LABEL_53;
    v5[2] = v33;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = __OFADD__(v6++, 1);
    if (v13)
      goto LABEL_54;
    if (v6 >= v37)
      return (uint64_t)v5;
    v14 = *(_QWORD *)(v36 + 8 * v6);
    if (!v14)
    {
      v15 = v6 + 1;
      if (v6 + 1 >= v37)
        return (uint64_t)v5;
      v14 = *(_QWORD *)(v36 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 2;
        if (v6 + 2 >= v37)
          return (uint64_t)v5;
        v14 = *(_QWORD *)(v36 + 8 * v15);
        if (!v14)
        {
          v15 = v6 + 3;
          if (v6 + 3 >= v37)
            return (uint64_t)v5;
          v14 = *(_QWORD *)(v36 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v6 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_55;
              if (v6 >= v37)
                return (uint64_t)v5;
              v14 = *(_QWORD *)(v36 + 8 * v6);
              ++v15;
              if (v14)
                goto LABEL_15;
            }
          }
        }
      }
      v6 = v15;
    }
LABEL_15:
    v10 = (v14 - 1) & v14;
  }
  v40 = i;
  v41 = v10;
  v42 = v6;
  sub_1DA66BE60();
  v19 = 5;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v21 = v17[v19];
    v22 = *(_QWORD *)(v21 + 16);
    v23 = v20[2];
    v24 = v23 + v22;
    if (__OFADD__(v23, v22))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v24 <= v20[3] >> 1)
    {
      if (*(_QWORD *)(v21 + 16))
        goto LABEL_30;
    }
    else
    {
      if (v23 <= v24)
        v26 = v23 + v22;
      else
        v26 = v23;
      v20 = sub_1DA53FE50(isUniquelyReferenced_nonNull_native, v26, 1, v20);
      if (*(_QWORD *)(v21 + 16))
      {
LABEL_30:
        v27 = v20[2];
        if ((v20[3] >> 1) - v27 < v22)
          goto LABEL_51;
        v28 = (unint64_t)&v20[5 * v27 + 4];
        if (v21 + 32 < v28 + 40 * v22 && v28 < v21 + 32 + 40 * v22)
          goto LABEL_56;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4070);
        swift_arrayInitWithCopy();
        if (v22)
        {
          v30 = v20[2];
          v13 = __OFADD__(v30, v22);
          v31 = v30 + v22;
          if (v13)
            goto LABEL_52;
          v20[2] = v31;
        }
        goto LABEL_20;
      }
    }
    if (v22)
      goto LABEL_50;
LABEL_20:
    swift_bridgeObjectRelease();
    v19 += 2;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v6 = v42;
      v2 = 0;
      v5 = v35;
      i = v40;
      v10 = v41;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  sub_1DA6705DC();
  __break(1u);
LABEL_57:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DA547464()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1DA547488@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA545FBC(a1, (uint64_t *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for OrderedTipProvider()
{
  return &type metadata for OrderedTipProvider;
}

uint64_t sub_1DA5474A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1DA54603C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1DA5474B8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA66CB98();
  qword_1EDAE3D00 = result;
  unk_1EDAE3D08 = v1;
  return result;
}

uint64_t PageRenderController.presenter.getter()
{
  return sub_1DA66BE60();
}

uint64_t PageRenderController.__allocating_init(eventName:pipeline:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PageRenderController.init(eventName:pipeline:)(a1, a2, a3);
  return v6;
}

uint64_t PageRenderController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_pipeline;
  v2 = sub_1DA66EE54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PageRenderController.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_pipeline;
  v2 = sub_1DA66EE54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PageRenderController.notify(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v31 = a1;
  v2 = sub_1DA66F370();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66F388();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE1EF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s8ActivityOMa();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - v16;
  result = sub_1DA66F37C();
  if ((result & 1) != 0)
  {
    v26 = v3;
    v27 = v2;
    v19 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_state)
                             + ((*(unsigned int *)(**(_QWORD **)(v1
                                                               + OBJC_IVAR____TtC10PodcastsUI20PageRenderController_state)
                                                 + 48)
                               + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v19);
    sub_1DA651824(v31, (uint64_t)v10);
    os_unfair_lock_unlock(v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_1DA547BA8((uint64_t)v10);
    }
    else
    {
      sub_1DA4F7228((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))_s8ActivityOMa);
      sub_1DA484504((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))_s8ActivityOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = v26;
        v20 = v27;
        v22 = v30;
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v14, v27);
        sub_1DA66F3DC();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
      }
      else
      {
        v24 = v28;
        v23 = v29;
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v7, v14, v29);
        sub_1DA66F3E8();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
      }
      return sub_1DA47F880((uint64_t)v17, (uint64_t (*)(_QWORD))_s8ActivityOMa);
    }
  }
  return result;
}

uint64_t PageRenderController.handle(event:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t result;
  uint64_t v10;

  v2 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageRenderEvent();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA484504(a1, (uint64_t)v7, v8);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    sub_1DA4F7228((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
    PageRenderController.notify(_:)((uint64_t)v4);
    return sub_1DA47F880((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
  }
  return result;
}

void PageRenderController.viewDidUpdate(with:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for PageRenderActivity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 2) != 0)
  {
    swift_storeEnumTagMultiPayload();
    PageRenderController.notify(_:)((uint64_t)v4);
    sub_1DA47F880((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PageRenderActivity);
  }
}

Swift::Void __swiftcall PageRenderController.viewDidLoad()()
{
  sub_1DA547AB0(MEMORY[0x1E0D409F8]);
}

Swift::Void __swiftcall PageRenderController.viewWillAppear()()
{
  sub_1DA547AB0(MEMORY[0x1E0D40A08]);
}

Swift::Void __swiftcall PageRenderController.viewDidAppear()()
{
  sub_1DA66F3C4();
}

uint64_t PageRenderController.viewWillDisappear(forReason:)()
{
  return sub_1DA66F3D0();
}

Swift::Void __swiftcall PageRenderController.viewDidDisappear()()
{
  sub_1DA547AB0(MEMORY[0x1E0D40A10]);
}

Swift::Void __swiftcall PageRenderController.viewDidReceiveMemoryWarning()()
{
  sub_1DA547AB0(MEMORY[0x1E0D40A20]);
}

uint64_t sub_1DA547AB0(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v2;

  v2 = sub_1DA66F3F4();
  return a1(v2, MEMORY[0x1E0D40C30]);
}

uint64_t sub_1DA547AEC(uint64_t a1, uint64_t a2)
{
  return sub_1DA547B6C(a1, a2, MEMORY[0x1E0D409F8]);
}

uint64_t sub_1DA547AF8(uint64_t a1, uint64_t a2)
{
  return sub_1DA547B6C(a1, a2, MEMORY[0x1E0D40A08]);
}

uint64_t sub_1DA547B04()
{
  return sub_1DA66F3C4();
}

uint64_t sub_1DA547B2C()
{
  return sub_1DA66F3D0();
}

uint64_t sub_1DA547B54(uint64_t a1, uint64_t a2)
{
  return sub_1DA547B6C(a1, a2, MEMORY[0x1E0D40A10]);
}

uint64_t sub_1DA547B60(uint64_t a1, uint64_t a2)
{
  return sub_1DA547B6C(a1, a2, MEMORY[0x1E0D40A20]);
}

uint64_t sub_1DA547B6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  uint64_t v4;

  v4 = sub_1DA66F3F4();
  return a3(v4, MEMORY[0x1E0D40C30]);
}

uint64_t sub_1DA547BA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EDAE1EF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA547BEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A870;
  if (!qword_1F026A870)
  {
    v1 = type metadata accessor for PageRenderController();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderController, v1);
    atomic_store(result, (unint64_t *)&qword_1F026A870);
  }
  return result;
}

uint64_t sub_1DA547C34()
{
  return type metadata accessor for PageRenderController();
}

uint64_t method lookup function for PageRenderController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PageRenderController.__allocating_init(eventName:pipeline:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t TipAction.init(action:title:identifier:style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, _QWORD *a8@<X8>)
{
  uint64_t result;
  char v17;

  sub_1DA4813E4(a1, (uint64_t)a8);
  a8[5] = a2;
  a8[6] = a3;
  a8[7] = a4;
  a8[8] = a5;
  if ((a7 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
    sub_1DA5329A0();
    v17 = sub_1DA670288();
    __swift_destroy_boxed_opaque_existential_0(a1);
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      a6 = 2;
    else
      a6 = 0;
  }
  else
  {
    result = __swift_destroy_boxed_opaque_existential_0(a1);
  }
  a8[9] = a6;
  return result;
}

uint64_t dispatch thunk of Tip.iconIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Tip.localizedTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Tip.localizedMessage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Tip.actions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t destroy for TipAction(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TipAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for TipAction(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for TipAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipAction()
{
  return &type metadata for TipAction;
}

uint64_t RemoveAbandonedDownloadsActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A880);
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for RemoveEpisodesDownloadAction();
  v3[19] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A888);
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v6 = sub_1DA66C430();
  v3[23] = v6;
  v3[24] = *(_QWORD *)(v6 - 8);
  v3[25] = swift_task_alloc();
  v7 = sub_1DA66FDF0();
  v3[26] = v7;
  v3[27] = *(_QWORD *)(v7 - 8);
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA54807C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  _QWORD *v11;

  v2 = v0[27];
  v1 = v0[28];
  v4 = v0[25];
  v3 = v0[26];
  v5 = v0[23];
  v6 = v0[24];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0D7EF98], v3);
  v7 = (void *)sub_1DA4EAF00(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1DA66C418();
  sub_1DA66C3B8();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v10 = (id)*MEMORY[0x1E0D7F300];
  objc_msgSend(v7, sel_setDouble_forKey_, v10, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3B48);
  v11 = (_QWORD *)swift_task_alloc();
  v0[29] = v11;
  *v11 = v0;
  v11[1] = sub_1DA5481AC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5481AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA548210()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  v3 = (_QWORD *)swift_task_alloc();
  v0[31] = v3;
  *v3 = v0;
  v3[1] = sub_1DA5482A4;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5482A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA548308()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v9;

  v1 = v0[19];
  v2 = v0[17];
  v3 = v0[18];
  v4 = v0[15];
  v5 = v0[16];
  v6 = v0[13];
  v7 = *(_QWORD *)(v6 + *(int *)(type metadata accessor for RemoveAbandonedDownloadsAction() + 20));
  swift_bridgeObjectRetain();
  sub_1DA66ED4C();
  *(_QWORD *)(v1 + *(int *)(v3 + 20)) = v7;
  v0[10] = v3;
  v0[11] = sub_1DA47E32C((unint64_t *)&qword_1F026A890, (uint64_t (*)(uint64_t))type metadata accessor for RemoveEpisodesDownloadAction, (uint64_t)&protocol conformance descriptor for RemoveEpisodesDownloadAction);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_1DA5486F0(v1, (uint64_t)boxed_opaque_existential_1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v2, *MEMORY[0x1E0D3FEC8], v4);
  v0[33] = sub_1DA66EE6C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  sub_1DA548734();
  v9 = (_QWORD *)swift_task_alloc();
  v0[34] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_1DA548468;
  return sub_1DA66F520();
}

uint64_t sub_1DA548468()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5484CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_1DA548780(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54856C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1DA548780(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA548608()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54867C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5486F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoveEpisodesDownloadAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DA548734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A898;
  if (!qword_1F026A898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F02691E8);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D41378], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A898);
  }
  return result;
}

uint64_t sub_1DA548780(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoveEpisodesDownloadAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DA5487C0()
{
  unint64_t result;

  result = qword_1F026A8A0;
  if (!qword_1F026A8A0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveAbandonedDownloadsActionImplementation, &type metadata for RemoveAbandonedDownloadsActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026A8A0);
  }
  return result;
}

uint64_t sub_1DA548804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4AD77C;
  return RemoveAbandonedDownloadsActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

uint64_t sub_1DA54886C()
{
  return sub_1DA47E32C(&qword_1F026A8B0, (uint64_t (*)(uint64_t))type metadata accessor for RemoveAbandonedDownloadsAction, (uint64_t)&protocol conformance descriptor for RemoveAbandonedDownloadsAction);
}

uint64_t sub_1DA548898()
{
  sub_1DA5488E8();
  return sub_1DA66F310();
}

ValueMetadata *type metadata accessor for RemoveAbandonedDownloadsActionImplementation()
{
  return &type metadata for RemoveAbandonedDownloadsActionImplementation;
}

unint64_t sub_1DA5488E8()
{
  unint64_t result;

  result = qword_1F026A8B8[0];
  if (!qword_1F026A8B8[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveAbandonedDownloadsActionImplementation, &type metadata for RemoveAbandonedDownloadsActionImplementation);
    atomic_store(result, qword_1F026A8B8);
  }
  return result;
}

uint64_t destroy for JSPackageManifest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10PodcastsUI17JSPackageManifestVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for JSPackageManifest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSPackageManifest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSPackageManifest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSPackageManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSPackageManifest()
{
  return &type metadata for JSPackageManifest;
}

uint64_t sub_1DA548AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DA549D0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DA548AF8()
{
  return 0;
}

void sub_1DA548B04(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DA548B10()
{
  sub_1DA4AECA8();
  return sub_1DA670810();
}

uint64_t sub_1DA548B38()
{
  sub_1DA4AECA8();
  return sub_1DA67081C();
}

uint64_t sub_1DA548B60(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[0] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A8E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA4AECA8();
  sub_1DA670804();
  v13 = 0;
  sub_1DA670648();
  if (!v4)
  {
    v11[1] = v11[0];
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FA8);
    sub_1DA4A8E48(&qword_1F026A8F0, (uint64_t (*)(void))sub_1DA549E20, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1DA670660();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DA548CCC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1DA548B60(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1DA548CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v8;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_1DA499108(a1, a2);
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1DA548D70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1DA548CE8(a1, a2, *v2);
}

uint64_t sub_1DA548D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a3;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA548D94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (!*(_QWORD *)(v0[5] + 16))
    goto LABEL_5;
  v2 = v0[3];
  v1 = v0[4];
  swift_bridgeObjectRetain();
  v3 = sub_1DA499108(v2, v1);
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v10 = v0[3];
    v9 = v0[4];
    v11 = sub_1DA66EFF8();
    sub_1DA5492AC();
    swift_allocError();
    *v12 = v10;
    v12[1] = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v12, *MEMORY[0x1E0D40208], v11);
    swift_bridgeObjectRetain();
    swift_willThrow();
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  v5 = (uint64_t *)v0[2];
  v6 = *(_QWORD *)(*(_QWORD *)(v0[5] + 56) + 8 * v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = sub_1DA548EBC(v6);
  swift_bridgeObjectRelease();
  v5[3] = (uint64_t)&type metadata for JSPackageManifest.LocalizedStringsContainer;
  v5[4] = sub_1DA5492F4();
  *v5 = v7;
  v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1DA548EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v37 = MEMORY[0x1E0DEE9E0];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v11);
    v13 = v12[1];
    if (v13)
    {
      v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v19 = v18[1];
      v20 = *v12;
      v21 = *(_QWORD *)(v2 + 16);
      v35 = v20;
      v36 = *v18;
      if (*(_QWORD *)(v2 + 24) <= v21)
      {
        v22 = v21 + 1;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1DA578D58(v22, 1);
        v2 = v37;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
      }
      sub_1DA670798();
      sub_1DA66F94C();
      result = sub_1DA6707C8();
      v23 = v2 + 64;
      v24 = -1 << *(_BYTE *)(v2 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v2 + 64 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v23 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v2 + 64 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(_QWORD *)(v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = 16 * v27;
      v33 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v32);
      *v33 = v36;
      v33[1] = v19;
      v34 = (_QWORD *)(*(_QWORD *)(v2 + 56) + v32);
      *v34 = v35;
      v34[1] = v13;
      ++*(_QWORD *)(v2 + 16);
      result = swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_5;
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v15 = *(_QWORD *)(v3 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v15 = *(_QWORD *)(v3 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v15 = *(_QWORD *)(v3 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1DA4F1D6C();
    return v2;
  }
  v15 = *(_QWORD *)(v3 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v7)
      goto LABEL_39;
    v15 = *(_QWORD *)(v3 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DA5491CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_1DA5491E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_1DA549614(v1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v2);
}

uint64_t sub_1DA549234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1DA4AD77C;
  v9[4] = a3;
  v9[5] = v8;
  v9[2] = a1;
  v9[3] = a2;
  return swift_task_switch();
}

unint64_t sub_1DA5492AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A8D8;
  if (!qword_1F026A8D8)
  {
    v1 = sub_1DA66EFF8();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D40218], v1);
    atomic_store(result, (unint64_t *)&qword_1F026A8D8);
  }
  return result;
}

unint64_t sub_1DA5492F4()
{
  unint64_t result;

  result = qword_1F026A8E0;
  if (!qword_1F026A8E0)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C714, &type metadata for JSPackageManifest.LocalizedStringsContainer);
    atomic_store(result, (unint64_t *)&qword_1F026A8E0);
  }
  return result;
}

_QWORD *sub_1DA549338(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1DA66026C((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1DA54942C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A790);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1DA5496F8((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DA4F1D6C();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1DA549520(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A790);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1DA549904((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DA4F1D6C();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1DA549614(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1DA549B10((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DA4F1D6C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1DA5496F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      sub_1DA5242E8(v21, v22, v23);
      goto LABEL_38;
    }
    v11 += 24;
    result = sub_1DA5242E8(v21, v22, v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DA549904(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v22;
    *(_BYTE *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      sub_1DA5242E8(v21, v22, v23);
      goto LABEL_38;
    }
    v11 += 24;
    result = sub_1DA5242E8(v21, v22, v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DA549B10(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DA549D0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617A696C61636F6CLL && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1DA549E20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F026A8F8;
  if (!qword_1F026A8F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE1F98);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = sub_1DA4A8D08((unint64_t *)&qword_1F026A900, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F026A8F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSPackageManifest.LocalizedStringsContainer()
{
  return &type metadata for JSPackageManifest.LocalizedStringsContainer;
}

unint64_t sub_1DA549EB4()
{
  unint64_t result;

  result = qword_1F026A908;
  if (!qword_1F026A908)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67C69C, &type metadata for JSPackageManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026A908);
  }
  return result;
}

uint64_t ActionDispatching.dispatch<A>(action:metrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v8[10] = *(_QWORD *)(a5 - 8);
  v8[11] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A888);
  v8[12] = v9;
  v8[13] = *(_QWORD *)(v9 - 8);
  v8[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA549F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  _QWORD *v4;

  v1 = v0[5];
  v2 = *(_QWORD *)(v0[7] + 8);
  v0[15] = v2;
  v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
  v0[16] = v3;
  v0[17] = v3(v1);
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_1DA54A004;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA54A004()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA54A070()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[15];
  v2 = (uint64_t (*)(uint64_t, uint64_t))v0[16];
  v3 = v0[14];
  v4 = v0[11];
  v5 = v0[8];
  v7 = v0[5];
  v6 = v0[6];
  v8 = (unsigned __int8 *)v0[4];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[10] + 16))(v4, v0[3], v6);
  v9 = v2(v7, v1);
  v0[20] = v9;
  v0[21] = sub_1DA54A8F8(v4, *v8, v9, v3, v6, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  sub_1DA548734();
  v10 = (_QWORD *)swift_task_alloc();
  v0[22] = v10;
  *v10 = v0;
  v10[1] = sub_1DA54A15C;
  return sub_1DA66F520();
}

uint64_t sub_1DA54A15C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA54A1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54A254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54A2EC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActionDispatcher.dispatch(_:withMetrics:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA54A354()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 64) = ActionDispatcher.dispatch(_:withMetrics:asPartOf:)(*(_QWORD **)(v0 + 24), *(_BYTE **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F02691E8);
  sub_1DA548734();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1DA54A3E4;
  return sub_1DA66F520();
}

uint64_t sub_1DA54A3E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA54A448()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54A47C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActionDispatcher.dispatch(_:withMetrics:asPartOf:)(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[4];

  v5 = v4;
  v10 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v10);
  v45 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66F6B8();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DA66F124();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1DA66EE60();
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)v40 - v25;
  if ((*a2 & 1) != 0)
  {
    v41 = v23;
    v42 = v22;
    v43 = a1;
    v44 = v5;
    sub_1DA66EDC4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v26, v20, v17);
      v38 = v41;
      v37 = v42;
      (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v26, *MEMORY[0x1E0D3FEC0], v42);
      v36 = sub_1DA66EE6C();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v37);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return v36;
    }
    v40[1] = a3;
    sub_1DA47E2F0((uint64_t)v16, &qword_1EDAE4A00);
    v40[0] = a4;
    if (qword_1EDAE2850 != -1)
      swift_once();
    v27 = v48;
    v28 = __swift_project_value_buffer(v48, (uint64_t)qword_1EDAE2830);
    v29 = v46;
    v30 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v28, v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
    sub_1DA66EC8C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
    sub_1DA66EC68();
    sub_1DA66EC5C();
    v31 = v43[3];
    v32 = __swift_project_boxed_opaque_existential_1(v43, v31);
    v49[3] = v31;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v49);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(boxed_opaque_existential_1, v32, v31);
    sub_1DA66EC50();
    sub_1DA47E2F0((uint64_t)v49, &qword_1EDAE5130);
    sub_1DA66EC5C();
    sub_1DA66EC80();
    sub_1DA66F55C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v27);
    sub_1DA66F118();
    v35 = v41;
    v34 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v26, *MEMORY[0x1E0D3FEC0], v42);
  }
  else
  {
    v34 = v22;
    v35 = v23;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v23 + 104))(v26, *MEMORY[0x1E0D3FEC8], v22, v24);
  }
  v36 = sub_1DA66EE6C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v34);
  return v36;
}

uint64_t sub_1DA54A8F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;

  v40 = a4;
  v41 = a3;
  LODWORD(v39) = a2;
  v9 = sub_1DA66EC74();
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66F6B8();
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  MEMORY[0x1E0C80A78](v11);
  v36 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4A00);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66F124();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A880);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a5;
  v45 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if ((v39 & 1) != 0)
  {
    sub_1DA66EDC4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1DA47E2F0((uint64_t)v15, &qword_1EDAE4A00);
      v39 = v20;
      if (qword_1EDAE2850 != -1)
        swift_once();
      v26 = v38;
      v27 = __swift_project_value_buffer(v38, (uint64_t)qword_1EDAE2830);
      v28 = v36;
      v29 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v27, v26);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
      sub_1DA66EC8C();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
      sub_1DA66EC68();
      sub_1DA66EC5C();
      v30 = v44;
      v31 = __swift_project_boxed_opaque_existential_1(v43, v44);
      v42[3] = v30;
      v32 = __swift_allocate_boxed_opaque_existential_1(v42);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v32, v31, v30);
      sub_1DA66EC50();
      sub_1DA47E2F0((uint64_t)v42, &qword_1EDAE5130);
      sub_1DA66EC5C();
      sub_1DA66EC80();
      sub_1DA66F55C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v26);
      sub_1DA66F118();
      v33 = v39;
      (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0D3FEC0], v39);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A888);
      v25 = sub_1DA66EE6C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v33);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v19, v16);
      (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0D3FEC0], v20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A888);
      v25 = sub_1DA66EE6C();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0D3FEC8], v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A888);
    v25 = sub_1DA66EE6C();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  return v25;
}

Swift::Void __swiftcall UIViewController.addAndConstrainChild(_:useLayoutMargins:)(UIViewController *_, Swift::Bool useLayoutMargins)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  UIView *v8;
  UIView *v9;
  double *v10;
  UIView *v11;
  UIView *v12;
  id v13;
  UIView *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;

  v3 = v2;
  objc_msgSend(v2, sel_addChildViewController_, _);
  v6 = objc_msgSend(v2, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  v8 = -[UIViewController view](_, sel_view);
  if (!v8)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v9 = v8;
  v10 = (double *)MEMORY[0x1E0DC3298];
  v11 = -[UIView superview](v8, sel_superview);
  if (!v11)
    goto LABEL_5;
  v12 = v11;
  sub_1DA47D774(0, qword_1EDADE950);
  v13 = v7;
  v14 = v12;
  LOBYTE(v12) = sub_1DA6701A4();

  if ((v12 & 1) == 0)
LABEL_5:
    objc_msgSend(v7, sel_addSubview_, v9);
  v16 = *v10;
  v15 = v10[1];
  v18 = v10[2];
  v17 = v10[3];
  -[UIView setTranslatesAutoresizingMaskIntoConstraints:](v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (useLayoutMargins)
    UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(v9, 15, v16, v15, v18, v17);
  else
    UIView.fullSizeSubviewConstraints(_:insets:)(v9, v16, v15, v18, v17);
  v19 = (void *)objc_opt_self();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v20 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_activateConstraints_, v20);

  -[UIViewController didMoveToParentViewController:](_, sel_didMoveToParentViewController_, v3);
}

uint64_t MPCPlayerResponse.currentItem.getter()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_playerPath);
  v2 = objc_msgSend(v1, sel_isInProcess);

  if ((v2 & 1) != 0
    || (v3 = objc_msgSend(v0, sel_playerPath),
        v4 = objc_msgSend(v3, sel_isNativePodcastsPath),
        v3,
        v4))
  {
    v5 = objc_msgSend(v0, sel_tracklist);
    v6 = objc_msgSend(v5, sel_playingItem);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_metadataObject);

      if (v7)
      {
        v8 = objc_msgSend(v7, sel_flattenedGenericObject);

        if (v8)
        {
          v9 = objc_msgSend(v8, sel_anyObject);

          if (v9)
          {
            objc_opt_self();
            result = swift_dynamicCastObjCClass();
            if (result)
              return result;

          }
        }
      }
    }
  }
  return 0;
}

double PlaybackController.PreferredJumpInterval.backward.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double PlaybackController.PreferredJumpInterval.forward.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

BOOL static PlaybackController.PreferredJumpInterval.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_1DA54B104(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1DA54B130@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA54B1AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA54B21C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA54B28C()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__isPlaying, (uint64_t *)&unk_1EDAE1DE0);
}

uint64_t sub_1DA54B2A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA54B5E4(a1);
}

uint64_t sub_1DA54B2B4(void **a1)
{
  return sub_1DA54B670(a1);
}

uint64_t sub_1DA54B2C8()
{
  return sub_1DA54B6F4();
}

uint64_t sub_1DA54B2DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA54B5E4(a1);
}

uint64_t sub_1DA54B2F0(void **a1)
{
  return sub_1DA54B670(a1);
}

uint64_t sub_1DA54B304()
{
  return sub_1DA54B6F4();
}

uint64_t sub_1DA54B318()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__tracklist, (uint64_t *)&unk_1EDAE1E10);
}

double sub_1DA54B32C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

double sub_1DA54B3B4@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1DA54B438()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA54B4B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  return swift_release();
}

uint64_t sub_1DA54B51C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA54B5E4(a1);
}

uint64_t sub_1DA54B530()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA54B5A8()
{
  return sub_1DA54B6F4();
}

uint64_t sub_1DA54B5BC()
{
  return sub_1DA48DFA0((uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__videoOutput, &qword_1EDADFF60);
}

uint64_t sub_1DA54B5D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA54B5E4(a1);
}

uint64_t sub_1DA54B5E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA54B65C(void **a1)
{
  return sub_1DA54B670(a1);
}

uint64_t sub_1DA54B670(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA54B6E0()
{
  return sub_1DA54B6F4();
}

uint64_t sub_1DA54B6F4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA54B794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[3];
  uint64_t v35;
  uint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v26 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A928);
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A930);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v10, (uint64_t)v34);
  v11 = v35;
  v12 = v36;
  __swift_project_boxed_opaque_existential_1(v34, v35);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v13 = v23;
  v14 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v13);
  v34[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A938);
  v15 = v25;
  sub_1DA66E17C();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34[0] = (id)sub_1DA66FEC8();
  v16 = sub_1DA66FE8C();
  v17 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v29, 1, 1, v16);
  sub_1DA4841D4(&qword_1F026A940, &qword_1F026A928, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v19 = v27;
  v18 = v28;
  sub_1DA66E248();
  sub_1DA47E2F0(v17, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v18);
  sub_1DA4841D4(&qword_1F026A948, &qword_1F026A930, MEMORY[0x1E0C95CB8]);
  v20 = v30;
  v21 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
  return v21;
}

void sub_1DA54BC1C(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;

  v3 = *a1;
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_tracklist);
    v5 = objc_msgSend(v4, sel_sleepTimerCommand);

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

uint64_t sub_1DA54BC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[16];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  id v51[3];
  uint64_t v52;
  uint64_t v53;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v49 = &v33[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A950);
  v9 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  v41 = v9;
  MEMORY[0x1E0C80A78](v8);
  v37 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A958);
  v12 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  v43 = v12;
  MEMORY[0x1E0C80A78](v11);
  v38 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A960);
  v47 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v39 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A968);
  v48 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v44 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v16, (uint64_t)v51);
  v17 = v52;
  v18 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  sub_1DA66E26C();
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v5, v3);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v19 = v34;
  v20 = (void *)sub_1DA66E11C();
  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v7, v19);
  v51[0] = v20;
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v21 = v37;
  sub_1DA66E134();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DA4841D4(&qword_1F026A970, &qword_1F026A950, MEMORY[0x1E0C957C0]);
  v22 = v38;
  v23 = v40;
  sub_1DA66E1E8();
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v21, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A978);
  sub_1DA4841D4(&qword_1F026A980, &qword_1F026A958, MEMORY[0x1E0C95AD0]);
  v24 = v39;
  v25 = v42;
  sub_1DA66E128();
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v22, v25);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v51[0] = (id)sub_1DA66FEC8();
  v26 = sub_1DA66FE8C();
  v27 = (uint64_t)v49;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v49, 1, 1, v26);
  sub_1DA4841D4(&qword_1F026A988, &qword_1F026A960, MEMORY[0x1E0C95708]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v29 = v44;
  v28 = v45;
  sub_1DA66E248();
  sub_1DA47E2F0(v27, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v24, v28);
  sub_1DA4841D4((unint64_t *)&unk_1F026A990, &qword_1F026A968, MEMORY[0x1E0C95CB8]);
  v30 = v46;
  v31 = sub_1DA66E11C();
  (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v29, v30);
  return v31;
}

uint64_t sub_1DA54C30C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 64))(1, v2, v3);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA54C3B4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 64))(0, v2, v3);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void *sub_1DA54C45C(void **a1)
{
  void *result;
  id v2;
  char v3;

  result = *a1;
  if (result)
  {
    v2 = objc_msgSend(result, sel_request);
    v3 = sub_1DA56220C();

    return (void *)(v3 & 1);
  }
  return result;
}

void sub_1DA54C4A4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;

  if (!*a1)
    goto LABEL_5;
  v3 = (void *)MPCPlayerResponse.currentItem.getter();
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, sel_transcriptAlignments);

    if (v5)
    {
      sub_1DA47D774(0, &qword_1F026AB18);
      v4 = (void *)sub_1DA66FA9C();

      goto LABEL_6;
    }
LABEL_5:
    v4 = 0;
  }
LABEL_6:
  *a2 = v4;
}

uint64_t sub_1DA54C538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43[3];
  uint64_t v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v1);
  v41 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFD48);
  v8 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  v35 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFD60);
  v39 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v31 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFE78);
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v13, (uint64_t)v43);
  v14 = v44;
  v15 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  sub_1DA66DF78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
  sub_1DA66E2B4();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
  sub_1DA498314();
  v16 = v29;
  sub_1DA66E26C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v16);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
  v17 = v30;
  v18 = (void *)sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v17);
  v43[0] = v18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2070);
  sub_1DA66E17C();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0020);
  v19 = v31;
  v20 = v34;
  sub_1DA66DF3C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v20);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v43[0] = (id)sub_1DA66FEC8();
  v21 = sub_1DA66FE8C();
  v22 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v41, 1, 1, v21);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFD50, (uint64_t *)&unk_1EDADFD60, MEMORY[0x1E0C95950]);
  sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v24 = v36;
  v23 = v37;
  sub_1DA66E248();
  sub_1DA47E2F0(v22, (uint64_t *)&unk_1EDAE20A0);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v23);
  sub_1DA4841D4((unint64_t *)&unk_1EDADFE68, (uint64_t *)&unk_1EDADFE78, MEMORY[0x1E0C95CB8]);
  v25 = v38;
  v26 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v25);
  return v26;
}

void sub_1DA54CA4C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  unsigned int v7;
  id v8;

  v3 = *a1;
  if (*a1)
  {
    v4 = objc_msgSend(*a1, sel_playerPath);
    v5 = objc_msgSend(v4, sel_isInProcess);

    if ((v5 & 1) != 0
      || (v6 = objc_msgSend(v3, sel_playerPath),
          v7 = objc_msgSend(v6, sel_isNativePodcastsPath),
          v6,
          v7))
    {
      v8 = v3;
    }
    else
    {
      v3 = 0;
    }
  }
  *a2 = v3;
}

id sub_1DA54CAF4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1DA54CB00(a1, (SEL *)&selRef_videoOutput, a2);
}

id sub_1DA54CB00@<X0>(id *a1@<X0>, SEL *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = *a1;
  if (result)
    result = objc_msgSend(result, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DA54CB38@<X0>(float *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  uint64_t result;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1DA551770((uint64_t)v6);
  v2 = v7;
  v3 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v4 = (*(float (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  *a1 = v4;
  return result;
}

uint64_t sub_1DA54CBAC(float *a1, uint64_t *a2)
{
  float v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = *a2;
  sub_1DA551770((uint64_t)&v9);
  v4 = v10;
  v5 = v11;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v9, v10);
  (*(void (**)(uint64_t, uint64_t, float))(v5 + 32))(v4, v5, v2);
  sub_1DA4841BC(&v9, (uint64_t)v8);
  v6 = v3 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
  swift_beginAccess();
  sub_1DA55186C((uint64_t)v8, v6);
  return swift_endAccess();
}

float sub_1DA54CC58()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1DA551770((uint64_t)v4);
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v2 = (*(float (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v2;
}

uint64_t sub_1DA54CCC4(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DA551770((uint64_t)&v8);
  v3 = v9;
  v4 = v10;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v8, v9);
  (*(void (**)(uint64_t, uint64_t, float))(v4 + 32))(v3, v4, a1);
  sub_1DA4841BC(&v8, (uint64_t)v7);
  v5 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
  swift_beginAccess();
  sub_1DA55186C((uint64_t)v7, v5);
  return swift_endAccess();
}

void (*sub_1DA54CD6C(float **a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  float v6;

  v3 = (float *)malloc(0x78uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 13) = v1;
  sub_1DA551770((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 3);
  v5 = *((_QWORD *)v3 + 4);
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(float (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  v3[28] = v6;
  return sub_1DA54CDF4;
}

void sub_1DA54CDF4(uint64_t *a1, char a2)
{
  uint64_t v2;
  __int128 *v3;
  float v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (__int128 *)(*a1 + 40);
  v4 = *(float *)(*a1 + 112);
  v5 = *(_QWORD *)(*a1 + 104);
  if ((a2 & 1) != 0)
  {
    sub_1DA551770(*a1);
    v6 = *(_QWORD *)(v2 + 24);
    v7 = *(_QWORD *)(v2 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v2, v6);
    (*(void (**)(uint64_t, uint64_t, float))(v7 + 32))(v6, v7, v4);
    sub_1DA4841BC((__int128 *)v2, (uint64_t)v3);
    v8 = v5 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
    swift_beginAccess();
    v9 = (uint64_t)v3;
  }
  else
  {
    sub_1DA551770(*a1 + 40);
    v10 = *(_QWORD *)(v2 + 64);
    v11 = *(_QWORD *)(v2 + 72);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v10);
    (*(void (**)(uint64_t, uint64_t, float))(v11 + 32))(v10, v11, v4);
    sub_1DA4841BC(v3, v2);
    v8 = v5 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
    swift_beginAccess();
    v9 = v2;
  }
  sub_1DA55186C(v9, v8);
  swift_endAccess();
  free((void *)v2);
}

uint64_t sub_1DA54CF28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  sub_1DA551770((uint64_t)v3);
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t sub_1DA54CF84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  sub_1DA551770((uint64_t)v3);
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
}

uint64_t sub_1DA54CFE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  sub_1DA551770((uint64_t)v3);
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(v0, v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  return v0 & 1;
}

uint64_t sub_1DA54D044()
{
  id v0;
  uint64_t result;
  _UNKNOWN **v2;
  _OWORD v3[2];
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((sub_1DA66C76C() & 1) != 0)
  {
    if (qword_1EDAE3CB8 != -1)
      swift_once();
    v3[0] = xmmword_1EDAE3C90;
    v3[1] = *(_OWORD *)&qword_1EDAE3CA0;
    v4 = qword_1EDAE3CB0;
    v5 = xmmword_1EDAE3C90;
    v6 = *(_OWORD *)&qword_1EDAE3CA0;
    v7 = qword_1EDAE3CB0;
    v0 = objc_allocWithZone((Class)_s9MPCPlayerCMa());
    sub_1DA497B64((uint64_t)&v5);
    sub_1DA497B64((uint64_t)&v6);
    sub_1DA497B8C((uint64_t)&v7);
    result = (uint64_t)sub_1DA6395F0((uint64_t)v3);
    v2 = &off_1EA0D4DA0;
  }
  else
  {
    type metadata accessor for EmptyPlayer();
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_QWORD *)(result + 48) = 0;
    v2 = &off_1EA0D4D68;
  }
  *(_QWORD *)&xmmword_1EDAE3C70 = result;
  *((_QWORD *)&xmmword_1EDAE3C70 + 1) = v2;
  return result;
}

uint64_t sub_1DA54D128()
{
  if (qword_1EDAE0B40 != -1)
    swift_once();
  xmmword_1EDAE3C90 = xmmword_1EDAEAB18;
  qword_1EDAE3CA0 = qword_1EDAEAB28;
  unk_1EDAE3CA8 = unk_1EDAEAB30;
  qword_1EDAE3CB0 = qword_1EDAEAB38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PlaybackController.reachability.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DA54D1B0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController);
  swift_beginAccess();
  *v3 = v2;
  sub_1DA66BE60();
  return swift_release();
}

uint64_t sub_1DA54D218()
{
  swift_beginAccess();
  return sub_1DA66BE60();
}

uint64_t sub_1DA54D260(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1DA54D2B0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PlaybackController.performedCommandsPublisher.getter()
{
  return sub_1DA66BE60();
}

uint64_t sub_1DA54D304(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _BYTE v7[40];
  _BYTE v8[40];

  sub_1DA49CC94(a1, (uint64_t)v8, &qword_1EDADF9A8);
  v3 = *a2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  swift_beginAccess();
  sub_1DA5518B4((uint64_t)v8, v3);
  swift_endAccess();
  if (qword_1EDAE2770 != -1)
    swift_once();
  v4 = *((_QWORD *)&xmmword_1EDAE3C70 + 1);
  ObjectType = swift_getObjectType();
  sub_1DA49CC94(v3, (uint64_t)v7, &qword_1EDADF9A8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 40))(v7, ObjectType, v4);
  return sub_1DA47E2F0((uint64_t)v8, &qword_1EDADF9A8);
}

uint64_t sub_1DA54D3F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  swift_beginAccess();
  return sub_1DA49CC94(v3, a1, &qword_1EDADF9A8);
}

uint64_t sub_1DA54D450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _BYTE v7[40];

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  swift_beginAccess();
  sub_1DA5518B4(a1, v3);
  swift_endAccess();
  if (qword_1EDAE2770 != -1)
    swift_once();
  v4 = *((_QWORD *)&xmmword_1EDAE3C70 + 1);
  ObjectType = swift_getObjectType();
  sub_1DA49CC94(v3, (uint64_t)v7, &qword_1EDADF9A8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 40))(v7, ObjectType, v4);
  return sub_1DA47E2F0(a1, &qword_1EDADF9A8);
}

void (*sub_1DA54D534(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  v3[5] = v1;
  v3[6] = v4;
  swift_beginAccess();
  return sub_1DA54D58C;
}

void sub_1DA54D58C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if (qword_1EDAE2770 != -1)
      swift_once();
    v4 = v3[5] + v3[6];
    v5 = *((_QWORD *)&xmmword_1EDAE3C70 + 1);
    ObjectType = swift_getObjectType();
    sub_1DA49CC94(v4, (uint64_t)v3, &qword_1EDADF9A8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 40))(v3, ObjectType, v5);
  }
  free(v3);
}

uint64_t sub_1DA54D640()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA54D664()
{
  return sub_1DA54C30C();
}

uint64_t sub_1DA54D66C()
{
  return sub_1DA54C3B4();
}

uint64_t sub_1DA54D674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4370);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_performedCommandsPublisher);
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFEC8);
  sub_1DA4841D4(&qword_1EDAE47D0, &qword_1EDADFEC8, MEMORY[0x1E0C95FB8]);
  sub_1DA66E128();
  swift_release();
  sub_1DA4841D4(&qword_1EDAE4368, &qword_1EDAE4370, MEMORY[0x1E0C95708]);
  v5 = sub_1DA66E11C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_1DA54D7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _BYTE v4[24];
  uint64_t v5;

  sub_1DA49CC94(a1, (uint64_t)v4, &qword_1EDAE3BD8);
  if (!v5)
  {
    result = sub_1DA47E2F0((uint64_t)v4, &qword_1EDAE3BD8);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_5:
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(a2 + 8) = -1;
  }
  return result;
}

uint64_t sub_1DA54D828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController);
  }
  else
  {
    type metadata accessor for PlaybackController.QueueController();
    v2 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    swift_weakAssign();
    *(_QWORD *)(v0 + v1) = v2;
    sub_1DA66BE60();
    swift_release();
  }
  sub_1DA66BE60();
  return v2;
}

uint64_t sub_1DA54D8CC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController) = a1;
  return swift_release();
}

uint64_t (*sub_1DA54D8E4(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1DA54D828();
  return sub_1DA54D918;
}

uint64_t sub_1DA54D918(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController) = *a1;
  return swift_release();
}

uint64_t PlaybackController.__allocating_init(reachability:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PlaybackController.init(reachability:)(a1);
  return v2;
}

uint64_t PlaybackController.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4240);
  sub_1DA66EDDC();
  type metadata accessor for PlaybackController();
  v0 = swift_allocObject();
  PlaybackController.init(reachability:)(v2);
  swift_release();
  return v0;
}

void sub_1DA54D9E8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, uint64_t, uint64_t);
  id v12;

  v2 = *a1;
  v3 = *a2;
  v4 = (void **)(*a2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath);
  swift_beginAccess();
  v5 = *v4;
  *v4 = v2;
  v6 = v2;

  v7 = *v4;
  v8 = v3 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v8 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v8, v9);
  v11 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 40);
  v12 = v7;
  v11(v7, v9, v10);
  swift_endAccess();

}

void *sub_1DA54DAB4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1DA54DB00(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);
  id v11;

  v3 = (void **)(v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = *v3;
  v7 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 24);
  v9 = *(_QWORD *)(v7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v7, v8);
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 40);
  v11 = v6;
  v10(v6, v8, v9);
  swift_endAccess();

}

void (*sub_1DA54DBC4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1DA54DC1C;
}

void sub_1DA54DC1C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t);
  id v10;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + v3[4]);
    v6 = v4 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
    swift_beginAccess();
    v7 = *(_QWORD *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v7);
    v9 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 40);
    v10 = v5;
    v9(v5, v7, v8);
    swift_endAccess();
  }
  free(v3);
}

uint64_t sub_1DA54DCBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA54DD04;
  return sub_1DA550B14();
}

uint64_t sub_1DA54DD04(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v5 + 8))(0);
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA54DD84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_1DA54DE04;
  return v6(v0[4], v2, v3);
}

uint64_t sub_1DA54DE04(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA54DE60()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1DA54DE98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v3, (uint64_t)v11);
  v4 = v12;
  v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (v6)
  {
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    v9 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 24))(v6, v7, v8);

  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1DA54DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA54DF84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  _QWORD *v3;

  v1 = v0[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A9C0);
  inited = swift_initStackObject();
  v0[14] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  sub_1DA4813E4(v1, inited + 32);
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_1DA54E014;
  return sub_1DA54F8E8(inited, v0[12]);
}

uint64_t sub_1DA54E014(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
    swift_arrayDestroy();
  }
  return swift_task_switch();
}

void sub_1DA54E0B0()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v2 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF09EE48](0, *(_QWORD *)(v0 + 128));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 128) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_1DA54E17C()
{
  uint64_t v0;

  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
  swift_arrayDestroy();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54E1D8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v4 + 424) = v3;
  *(double *)(v4 + 416) = a3;
  *(_QWORD *)(v4 + 400) = a1;
  *(_QWORD *)(v4 + 408) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A9E0);
  *(_QWORD *)(v4 + 432) = v5;
  *(_QWORD *)(v4 + 440) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 448) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  *(_QWORD *)(v4 + 456) = swift_task_alloc();
  v6 = sub_1DA66FEB0();
  *(_QWORD *)(v4 + 464) = v6;
  *(_QWORD *)(v4 + 472) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 480) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1B60);
  *(_QWORD *)(v4 + 488) = v7;
  *(_QWORD *)(v4 + 496) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 504) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1A70);
  *(_QWORD *)(v4 + 512) = v8;
  *(_QWORD *)(v4 + 520) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 528) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A9E8);
  *(_QWORD *)(v4 + 536) = v9;
  *(_QWORD *)(v4 + 544) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 552) = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A9F0);
  *(_QWORD *)(v4 + 560) = v10;
  *(_QWORD *)(v4 + 568) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 576) = swift_task_alloc();
  v11 = sub_1DA66DEF4();
  *(_QWORD *)(v4 + 584) = v11;
  *(_QWORD *)(v4 + 592) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 600) = swift_task_alloc();
  *(_QWORD *)(v4 + 608) = swift_task_alloc();
  *(_QWORD *)(v4 + 616) = swift_task_alloc();
  *(_QWORD *)(v4 + 624) = swift_task_alloc();
  *(_QWORD *)(v4 + 632) = swift_task_alloc();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 640) = v12;
  *v12 = v4;
  v12[1] = sub_1DA54E3AC;
  return sub_1DA550B14();
}

uint64_t sub_1DA54E3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 648) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_1DA54E4DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[50];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v0[82] = v4;
  *v4 = v0;
  v4[1] = sub_1DA54E55C;
  return v6(v0[81], v2, v3);
}

uint64_t sub_1DA54E55C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 752) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA54E5B8()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59[2];

  v1 = *(_BYTE *)(v0 + 752);

  if ((v1 & 1) != 0)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 744) = v2;
    *v2 = v0;
    v2[1] = sub_1DA54F6C0;
    v3 = *(_QWORD *)(v0 + 424);
    v4 = *(_QWORD *)(v0 + 400);
    v2[12] = 0;
    v2[13] = v3;
    v2[11] = v4;
    return swift_task_switch();
  }
  else
  {
    sub_1DA66DE70();
    v6 = sub_1DA66DEDC();
    v7 = sub_1DA66FDC0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1DA478000, v6, v7, "╭ ⏱️ Await for command", v8, 2u);
      MEMORY[0x1DF0A0474](v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 632);
    v10 = *(_QWORD *)(v0 + 592);
    v11 = *(_QWORD *)(v0 + 584);
    v12 = *(_QWORD *)(v0 + 400);

    v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(_QWORD *)(v0 + 664) = v13;
    v13(v9, v11);
    sub_1DA66DE70();
    sub_1DA4813E4(v12, v0 + 16);
    v14 = sub_1DA66DEDC();
    v15 = sub_1DA66FDC0();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 624);
    v18 = *(_QWORD *)(v0 + 584);
    v58 = v13;
    if (v16)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v59[0] = v20;
      *(_DWORD *)v19 = 136446210;
      sub_1DA4813E4(v0 + 16, v0 + 96);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
      v21 = sub_1DA66F904();
      *(_QWORD *)(v0 + 392) = sub_1DA49AD00(v21, v22, v59);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      _os_log_impl(&dword_1DA478000, v14, v15, "| %{public}s", v19, 0xCu);
      swift_arrayDestroy();
      v23 = v20;
      v13 = v58;
      MEMORY[0x1DF0A0474](v23, -1, -1);
      MEMORY[0x1DF0A0474](v19, -1, -1);

    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);

    }
    v13(v17, v18);
    sub_1DA66DE70();
    v24 = sub_1DA66DEDC();
    v25 = sub_1DA66FDC0();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(_QWORD *)(v0 + 616);
    v28 = *(_QWORD *)(v0 + 584);
    if (v26)
    {
      v57 = *(_QWORD *)(v0 + 616);
      v29 = *(_QWORD *)(v0 + 408);
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v59[0] = v31;
      *(_DWORD *)v30 = 136446210;
      *(_QWORD *)(v0 + 368) = v29;
      type metadata accessor for MPCPlayerChangeRequestOptions(0);
      v32 = sub_1DA66F904();
      *(_QWORD *)(v0 + 376) = sub_1DA49AD00(v32, v33, v59);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v24, v25, "╰ options=%{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v31, -1, -1);
      MEMORY[0x1DF0A0474](v30, -1, -1);

      v58(v57, v28);
    }
    else
    {

      v13(v27, v28);
    }
    v49 = *(_QWORD *)(v0 + 552);
    v56 = *(_QWORD *)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 528);
    v35 = *(_QWORD *)(v0 + 504);
    v45 = *(_QWORD *)(v0 + 512);
    v46 = *(_QWORD *)(v0 + 520);
    v44 = *(_QWORD *)(v0 + 496);
    v43 = *(_QWORD *)(v0 + 488);
    v50 = *(_QWORD *)(v0 + 472);
    v51 = *(_QWORD *)(v0 + 464);
    v47 = *(_QWORD *)(v0 + 480);
    v48 = *(_QWORD *)(v0 + 456);
    v52 = *(_QWORD *)(v0 + 448);
    v53 = *(_QWORD *)(v0 + 536);
    v55 = *(_QWORD *)(v0 + 440);
    v54 = *(_QWORD *)(v0 + 432);
    v36 = *(_QWORD *)(v0 + 424) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
    swift_beginAccess();
    sub_1DA4813E4(v36, v0 + 56);
    v37 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v37);
    *(_QWORD *)(v0 + 352) = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    sub_1DA66DF78();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1C80);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1CE0, &qword_1EDAE1CF0, MEMORY[0x1E0C95FB8]);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1C70, (uint64_t *)&unk_1EDAE1C80, MEMORY[0x1E0C95D90]);
    sub_1DA66E2B4();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1B50, &qword_1EDAE1B60, MEMORY[0x1E0C95B78]);
    sub_1DA498314();
    sub_1DA66E26C();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v35, v43);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE1A60, (uint64_t *)&unk_1EDAE1A70, MEMORY[0x1E0C958E0]);
    v39 = sub_1DA66E11C();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v34, v45);
    *(_QWORD *)(v0 + 344) = v39;
    sub_1DA66FEA4();
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    *(_QWORD *)(v0 + 328) = sub_1DA66FEC8();
    v40 = sub_1DA66FE8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v48, 1, 1, v40);
    sub_1DA4982D4((unint64_t *)&qword_1EDAE20B0, (unint64_t *)&qword_1EDAE5050, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    sub_1DA66E254();
    sub_1DA47E2F0(v48, (uint64_t *)&unk_1EDAE20A0);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v47, v51);
    swift_release();
    v41 = sub_1DA4841D4(&qword_1F026A9F8, &qword_1F026A9E8, MEMORY[0x1E0C95B90]);
    MEMORY[0x1DF09CC7C](v53, v41);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v49, v53);
    sub_1DA66DFB4();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v52, v54);
    *(_QWORD *)(v0 + 672) = sub_1DA4841D4((unint64_t *)&unk_1F026AA00, &qword_1F026A9F0, MEMORY[0x1E0C95E78]);
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 680) = v42;
    *v42 = v0;
    v42[1] = sub_1DA54EDB8;
    return sub_1DA66FB50();
  }
}

uint64_t sub_1DA54EDB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 696) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA54EE1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 320);
  return swift_task_switch();
}

uint64_t sub_1DA54EE38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t (*v20)(id, uint64_t, uint64_t);
  uint64_t v21;

  v1 = *(void **)(v0 + 688);
  if (v1)
  {
    if (v1 == (void *)1)
    {
      v2 = *(_QWORD *)(v0 + 400);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 568) + 8))(*(_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 560));
      sub_1DA66DE70();
      sub_1DA4813E4(v2, v0 + 256);
      v3 = sub_1DA66DEDC();
      v4 = sub_1DA66FDA8();
      v5 = os_log_type_enabled(v3, v4);
      v6 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
      v7 = *(_QWORD *)(v0 + 600);
      v8 = *(_QWORD *)(v0 + 584);
      if (v5)
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v21 = v10;
        *(_DWORD *)v9 = 136446210;
        sub_1DA4813E4(v0 + 256, v0 + 216);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
        v11 = sub_1DA66F904();
        *(_QWORD *)(v0 + 336) = sub_1DA49AD00(v11, v12, &v21);
        sub_1DA6702C4();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0(v0 + 256);
        _os_log_impl(&dword_1DA478000, v3, v4, "⌛️❌ Timed out waiting for command %{public}s", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v10, -1, -1);
        MEMORY[0x1DF0A0474](v9, -1, -1);

        v6(v7, v8);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0(v0 + 256);

        v6(v7, v8);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    else
    {
      v15 = *(_QWORD **)(v0 + 400);
      v16 = v15[3];
      v17 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v16);
      v20 = (uint64_t (*)(id, uint64_t, uint64_t))(**(int **)(v17 + 16) + *(_QWORD *)(v17 + 16));
      v18 = v1;
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 704) = v19;
      *v19 = v0;
      v19[1] = sub_1DA54F1F4;
      return v20(v18, v16, v17);
    }
  }
  else
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 736) = v13;
    *v13 = v0;
    v13[1] = sub_1DA54F65C;
    return sub_1DA66FB50();
  }
}

uint64_t sub_1DA54F190()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 696);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1DA54F1F4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 753) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA54F250()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if (*(_BYTE *)(v0 + 753) == 1)
  {
    v1 = *(_QWORD *)(v0 + 400);
    sub_1DA66DE70();
    sub_1DA4813E4(v1, v0 + 176);
    v2 = sub_1DA66DEDC();
    v3 = sub_1DA66FDC0();
    v4 = os_log_type_enabled(v2, v3);
    v5 = *(void (**)(uint64_t, uint64_t))(v0 + 664);
    v6 = *(_QWORD *)(v0 + 608);
    v7 = *(_QWORD *)(v0 + 584);
    if (v4)
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v17 = v9;
      *(_DWORD *)v8 = 136446210;
      sub_1DA4813E4(v0 + 176, v0 + 136);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
      v10 = sub_1DA66F904();
      *(_QWORD *)(v0 + 360) = sub_1DA49AD00(v10, v11, &v17);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
      _os_log_impl(&dword_1DA478000, v2, v3, "⏱️✅ Command available. Performing: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v9, -1, -1);
      MEMORY[0x1DF0A0474](v8, -1, -1);

      v5(v6, v7);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);

      v5(v6, v7);
    }
    v15 = swift_task_alloc();
    *(_QWORD *)(v0 + 712) = v15;
    *(_QWORD *)v15 = v0;
    *(_QWORD *)(v15 + 8) = sub_1DA54F4D0;
    v16 = *(_OWORD *)(v0 + 400);
    *(_QWORD *)(v15 + 104) = *(_QWORD *)(v0 + 424);
    *(_OWORD *)(v15 + 88) = v16;
    return swift_task_switch();
  }
  else
  {
    v12 = *(void **)(v0 + 688);
    sub_1DA532940(v12);
    sub_1DA532940(v12);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 736) = v13;
    *v13 = v0;
    v13[1] = sub_1DA54F65C;
    return sub_1DA66FB50();
  }
}

uint64_t sub_1DA54F4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 720) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 728) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA54F544()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(void **)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 560);
  sub_1DA532940(v1);
  sub_1DA532940(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = *(_QWORD *)(v0 + 728);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_1DA54F65C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 696) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA54F6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = swift_task_dealloc();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v4);
}

uint64_t sub_1DA54F7D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 560);
  sub_1DA532940(v1);
  sub_1DA532940(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA54F8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[47] = a2;
  v3[48] = v2;
  v3[46] = a1;
  v3[49] = _s12ErrorHandlerVMa();
  v3[50] = swift_task_alloc();
  v4 = sub_1DA66DEF4();
  v3[51] = v4;
  v3[52] = *(_QWORD *)(v4 - 8);
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA54F980()
{
  uint64_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  if ((sub_1DA550E84(v0[46]) & 1) != 0)
  {
    sub_1DA66DE70();
    v1 = sub_1DA66DEDC();
    v2 = sub_1DA66FDC0();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1DA478000, v1, v2, "Converting current route to a buffered AirPlay route", v3, 2u);
      MEMORY[0x1DF0A0474](v3, -1, -1);
    }
    v4 = v0[54];
    v5 = v0[51];
    v6 = v0[52];
    v7 = v0[48];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController);
    result = swift_beginAccess();
    v10 = *v8;
    v0[55] = v10;
    if (v10)
    {
      sub_1DA66BE60();
      v11 = (_QWORD *)swift_task_alloc();
      v0[56] = (uint64_t)v11;
      *v11 = v0;
      v11[1] = sub_1DA54FAF4;
      return sub_1DA5BB5EC();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    v0[58] = (uint64_t)v12;
    *v12 = v0;
    v12[1] = sub_1DA54FEB4;
    return sub_1DA550B14();
  }
  return result;
}

uint64_t sub_1DA54FAF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[35] = v2;
  v3[36] = a1;
  v3[37] = v1;
  v3[57] = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA54FB68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(_QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v1 = v0[46];
  v0[59] = v0[36];
  v2 = MEMORY[0x1E0DEE9D8];
  v0[45] = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  v0[60] = v3;
  if (v3)
  {
    v0[61] = 0;
    v0[62] = v2;
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    sub_1DA4813E4(v4, (uint64_t)(v0 + 7));
    v5 = v0[10];
    v6 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v5);
    v26 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
    v7 = (_QWORD *)swift_task_alloc();
    v0[63] = v7;
    *v7 = v0;
    v7[1] = sub_1DA550298;
    return v26(v0[59], v5, v6);
  }
  else
  {
    v0[66] = v2;
    v0[44] = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AA10);
    sub_1DA4841D4(&qword_1F026AA18, &qword_1F026AA10, MEMORY[0x1E0DEAF50]);
    if ((sub_1DA66FCDC() & 1) != 0)
    {
      v9 = *(_QWORD *)(v2 + 16);
      if (v9)
      {
        v10 = (uint64_t)(v0 + 22);
        v11 = (uint64_t)(v0 + 27);
        v12 = v0[52];
        swift_bridgeObjectRetain_n();
        v13 = v2 + 32;
        do
        {
          sub_1DA4813E4(v13, v11);
          sub_1DA66DE70();
          sub_1DA4813E4(v11, v10);
          v14 = sub_1DA66DEDC();
          v15 = sub_1DA66FDA8();
          v16 = os_log_type_enabled(v14, v15);
          v17 = v0[53];
          v18 = v0[51];
          if (v16)
          {
            v27 = v0[51];
            v19 = swift_slowAlloc();
            v20 = swift_slowAlloc();
            v28 = v20;
            *(_DWORD *)v19 = 136446210;
            sub_1DA4813E4(v10, (uint64_t)(v0 + 17));
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
            v21 = sub_1DA66F904();
            *(_QWORD *)(v19 + 4) = sub_1DA49AD00(v21, v22, &v28);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v10);
            _os_log_impl(&dword_1DA478000, v14, v15, "Trying to perform unavailable command: %{public}s", (uint8_t *)v19, 0xCu);
            swift_arrayDestroy();
            v23 = v20;
            v11 = (uint64_t)(v0 + 27);
            MEMORY[0x1DF0A0474](v23, -1, -1);
            MEMORY[0x1DF0A0474](v19, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v27);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_0(v10);

            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v18);
          }
          __swift_destroy_boxed_opaque_existential_0(v11);
          v13 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
      }
    }
    v24 = v0[45];
    v0[67] = v24;
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)swift_task_alloc();
    v0[68] = v25;
    *v25 = v0;
    v25[1] = sub_1DA550758;
    return sub_1DA552A4C(v24, v0[47]);
  }
}

uint64_t sub_1DA54FEB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)*v2;
  v3[38] = v2;
  v3[39] = a1;
  v3[40] = v1;
  v4 = (_QWORD *)*v2;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v4[1])();
}

uint64_t sub_1DA54FF4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(_QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v1 = v0[46];
  v0[59] = v0[39];
  v2 = MEMORY[0x1E0DEE9D8];
  v0[45] = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  v0[60] = v3;
  if (v3)
  {
    v0[61] = 0;
    v0[62] = v2;
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    sub_1DA4813E4(v4, (uint64_t)(v0 + 7));
    v5 = v0[10];
    v6 = v0[11];
    __swift_project_boxed_opaque_existential_1(v0 + 7, v5);
    v26 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
    v7 = (_QWORD *)swift_task_alloc();
    v0[63] = v7;
    *v7 = v0;
    v7[1] = sub_1DA550298;
    return v26(v0[59], v5, v6);
  }
  else
  {
    v0[66] = v2;
    v0[44] = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AA10);
    sub_1DA4841D4(&qword_1F026AA18, &qword_1F026AA10, MEMORY[0x1E0DEAF50]);
    if ((sub_1DA66FCDC() & 1) != 0)
    {
      v9 = *(_QWORD *)(v2 + 16);
      if (v9)
      {
        v10 = (uint64_t)(v0 + 22);
        v11 = (uint64_t)(v0 + 27);
        v12 = v0[52];
        swift_bridgeObjectRetain_n();
        v13 = v2 + 32;
        do
        {
          sub_1DA4813E4(v13, v11);
          sub_1DA66DE70();
          sub_1DA4813E4(v11, v10);
          v14 = sub_1DA66DEDC();
          v15 = sub_1DA66FDA8();
          v16 = os_log_type_enabled(v14, v15);
          v17 = v0[53];
          v18 = v0[51];
          if (v16)
          {
            v27 = v0[51];
            v19 = swift_slowAlloc();
            v20 = swift_slowAlloc();
            v28 = v20;
            *(_DWORD *)v19 = 136446210;
            sub_1DA4813E4(v10, (uint64_t)(v0 + 17));
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
            v21 = sub_1DA66F904();
            *(_QWORD *)(v19 + 4) = sub_1DA49AD00(v21, v22, &v28);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v10);
            _os_log_impl(&dword_1DA478000, v14, v15, "Trying to perform unavailable command: %{public}s", (uint8_t *)v19, 0xCu);
            swift_arrayDestroy();
            v23 = v20;
            v11 = (uint64_t)(v0 + 27);
            MEMORY[0x1DF0A0474](v23, -1, -1);
            MEMORY[0x1DF0A0474](v19, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v27);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_0(v10);

            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v18);
          }
          __swift_destroy_boxed_opaque_existential_0(v11);
          v13 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
      }
    }
    v24 = v0[45];
    v0[67] = v24;
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)swift_task_alloc();
    v0[68] = v25;
    *v25 = v0;
    v25[1] = sub_1DA550758;
    return sub_1DA552A4C(v24, v0[47]);
  }
}

uint64_t sub_1DA550298(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 512) = a1;
  *(_QWORD *)(v3 + 520) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA550324()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD, uint64_t, uint64_t);
  uint64_t v34;

  v1 = *(void **)(v0 + 512);
  if (v1)
  {
    v2 = v1;
    MEMORY[0x1DF09E464]();
    if (*(_QWORD *)((*(_QWORD *)(v0 + 360) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 360) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1DA66FAC0();
    sub_1DA66FB14();
    sub_1DA66FAB4();

    v3 = *(_QWORD **)(v0 + 496);
  }
  else
  {
    sub_1DA4813E4(v0 + 56, v0 + 96);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *(_QWORD **)(v0 + 496);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v3 = sub_1DA5401A4(0, v3[2] + 1, 1, *(_QWORD **)(v0 + 496));
    v6 = v3[2];
    v5 = v3[3];
    if (v6 >= v5 >> 1)
      v3 = sub_1DA5401A4((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    v3[2] = v6 + 1;
    sub_1DA4841BC((__int128 *)(v0 + 96), (uint64_t)&v3[5 * v6 + 4]);
  }
  v7 = *(_QWORD *)(v0 + 480);
  v8 = *(_QWORD *)(v0 + 488) + 1;
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  if (v8 == v7)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 528) = v3;
    *(_QWORD *)(v0 + 352) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AA10);
    sub_1DA4841D4(&qword_1F026AA18, &qword_1F026AA10, MEMORY[0x1E0DEAF50]);
    if ((sub_1DA66FCDC() & 1) != 0)
    {
      v9 = v3[2];
      if (v9)
      {
        v10 = v0 + 176;
        v11 = v0 + 216;
        v12 = *(_QWORD *)(v0 + 416);
        v13 = (uint64_t)(v3 + 4);
        swift_bridgeObjectRetain_n();
        v32 = v12;
        do
        {
          sub_1DA4813E4(v13, v11);
          sub_1DA66DE70();
          sub_1DA4813E4(v11, v10);
          v14 = sub_1DA66DEDC();
          v15 = sub_1DA66FDA8();
          v16 = os_log_type_enabled(v14, v15);
          v17 = *(_QWORD *)(v0 + 424);
          v18 = *(_QWORD *)(v0 + 408);
          if (v16)
          {
            v19 = swift_slowAlloc();
            v20 = swift_slowAlloc();
            v34 = v20;
            *(_DWORD *)v19 = 136446210;
            sub_1DA4813E4(v10, v0 + 136);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9D0);
            v21 = sub_1DA66F904();
            *(_QWORD *)(v19 + 4) = sub_1DA49AD00(v21, v22, &v34);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v10);
            _os_log_impl(&dword_1DA478000, v14, v15, "Trying to perform unavailable command: %{public}s", (uint8_t *)v19, 0xCu);
            swift_arrayDestroy();
            v23 = v20;
            v12 = v32;
            MEMORY[0x1DF0A0474](v23, -1, -1);
            v24 = v19;
            v11 = v0 + 216;
            MEMORY[0x1DF0A0474](v24, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v17, v18);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_0(v10);

            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v18);
          }
          __swift_destroy_boxed_opaque_existential_0(v11);
          v13 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
      }
    }
    v30 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 536) = v30;
    swift_bridgeObjectRetain();
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 544) = v31;
    *v31 = v0;
    v31[1] = sub_1DA550758;
    return sub_1DA552A4C(v30, *(_QWORD *)(v0 + 376));
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 488) + 1;
    *(_QWORD *)(v0 + 488) = v25;
    *(_QWORD *)(v0 + 496) = v3;
    sub_1DA4813E4(*(_QWORD *)(v0 + 368) + 40 * v25 + 32, v0 + 56);
    v26 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v26);
    v33 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v27 + 8) + *(_QWORD *)(v27 + 8));
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 504) = v28;
    *v28 = v0;
    v28[1] = sub_1DA550298;
    return v33(*(_QWORD *)(v0 + 472), v26, v27);
  }
}

uint64_t sub_1DA550758(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[41] = v2;
  v3[42] = a1;
  v3[43] = v1;
  v3[69] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA5507E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 480))
  {
    v1 = *(_QWORD *)(v0 + 368) + 32;
    swift_bridgeObjectRetain();
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(v0 + 480);
      ++v2;
      sub_1DA4813E4(v1, v0 + 16);
      sub_1DA66DFE4();
      sub_1DA47E2F0(v0 + 16, &qword_1EDAE3BD8);
      v1 += 40;
    }
    while (v2 != v3);
    v4 = *(void **)(v0 + 472);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(void **)(v0 + 472);
  }

  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1DA5508E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;

  v1 = *(void **)(v0 + 552);
  v2 = *(void **)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD **)(v0 + 400);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 384) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_reachability);
  v6 = (char *)v3 + *(int *)(v4 + 20);
  v7 = sub_1DA66CFD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *v3 = v1;
  *(_QWORD *)((char *)v3 + *(int *)(v4 + 24)) = v5;
  v8 = v1;
  swift_unknownObjectRetain();
  sub_1DA5CE4D4();
  sub_1DA552A10((uint64_t)v3);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5509CC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA550A24()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  v1 = *(void **)(v0 + 520);
  v2 = *(void **)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD **)(v0 + 400);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 384) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_reachability);
  v6 = (char *)v3 + *(int *)(v4 + 20);
  v7 = sub_1DA66CFD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *v3 = v1;
  *(_QWORD *)((char *)v3 + *(int *)(v4 + 24)) = v5;
  v8 = v1;
  swift_unknownObjectRetain();
  sub_1DA5CE4D4();
  sub_1DA552A10((uint64_t)v3);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA550B14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  v2 = sub_1DA66DEF4();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA550B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  unsigned int v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  _QWORD *v17;
  id v18;

  v1 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v1, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
LABEL_10:
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v17;
    *v17 = v0;
    v17[1] = sub_1DA550E24;
    return sub_1DA550F9C();
  }
  v5 = (void *)v4;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v6 = objc_msgSend(v5, sel_playerPath);
  v7 = objc_msgSend(v6, sel_isInProcess);

  if ((v7 & 1) == 0)
  {
    v8 = objc_msgSend(v5, sel_playerPath);
    v9 = objc_msgSend(v8, sel_isNativePodcastsPath);

    if (!v9)
    {

      goto LABEL_10;
    }
  }
  sub_1DA66DE70();
  v10 = v5;
  v11 = sub_1DA66DEDC();
  v12 = sub_1DA66FDC0();
  if (os_log_type_enabled(v11, v12))
  {
    v18 = v10;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = objc_msgSend(v10, (SEL)&selRef_imaxStorageSetRetainedValue_forKey_);
    *(_QWORD *)(v0 + 80) = v15;
    sub_1DA6702C4();
    *v14 = v15;
    v10 = v18;

    _os_log_impl(&dword_1DA478000, v11, v12, "Client response - fetched cached response with player path %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v14, -1, -1);
    MEMORY[0x1DF0A0474](v13, -1, -1);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_1DA550E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1DA550E84(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v9[3];
  uint64_t v10;
  uint64_t v11;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if (!v9[0])
    return 0;
  v2 = objc_msgSend(v9[0], sel_isDeviceRoute);

  if ((v2 & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v4 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DA4813E4(v4, (uint64_t)v9);
    v5 = v10;
    v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    if ((v7 & 1) != 0)
      break;
    v4 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1DA550F9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[26] = v0;
  v2 = sub_1DA66DEF4();
  v1[27] = v2;
  v1[28] = *(_QWORD *)(v2 - 8);
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA550FFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;

  v1 = v0[26] + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource;
  swift_beginAccess();
  sub_1DA4813E4(v1, (uint64_t)(v0 + 16));
  v2 = v0[19];
  v3 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if (v4)
  {
    v5 = (void *)v4;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 16));
    v6 = objc_msgSend(v5, sel_route);

    if (v6)
      goto LABEL_6;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 16));
  }
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemRoute);
LABEL_6:
  v0[30] = v6;
  v7 = qword_1EDAE3CB8;
  v8 = v6;
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_pathWithRoute_bundleID_playerID_, v8, v9, v10);
  v0[31] = v11;

  v12 = sub_1DA5643E0();
  v0[32] = v12;
  objc_msgSend(v12, sel_setPlayerPath_, v11);
  sub_1DA66DE70();
  v13 = v11;
  v14 = sub_1DA66DEDC();
  v15 = sub_1DA66FDC0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138412290;
    v0[25] = v13;
    v17 = v13;
    sub_1DA6702C4();
    *v22 = v13;

    _os_log_impl(&dword_1DA478000, v14, v15, "Client response - force fetched response with player path %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v22, -1, -1);
    MEMORY[0x1DF0A0474](v16, -1, -1);
  }
  else
  {

    v14 = v13;
  }
  v19 = v0[28];
  v18 = v0[29];
  v20 = v0[27];

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  return swift_task_switch();
}

uint64_t sub_1DA55131C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = (void *)v0[32];
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_1DA55140C;
  v2 = swift_continuation_init();
  v3 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  *(_QWORD *)(v3 + 16) = v2;
  v4[4] = sub_1DA5537E0;
  v4[5] = v3;
  v4[1] = 1107296256;
  v4[2] = sub_1DA529310;
  v4[3] = &block_descriptor_4;
  v5 = _Block_copy(v4);
  swift_release();
  v6 = objc_msgSend(v1, sel_performWithCompletion_, v5);
  _Block_release(v5);
  swift_unknownObjectRelease();
  return swift_continuation_await();
}

uint64_t sub_1DA55140C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 264) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 272) = *(_QWORD *)(v1 + 192);
  return swift_task_switch();
}

uint64_t sub_1DA551480()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 272));
}

uint64_t sub_1DA5514D4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA551524(void *a1, void *a2, uint64_t a3)
{
  id v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  id v9;

  if (a1)
  {
    **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
    v3 = a1;
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a2)
    {
      v6 = (uint64_t)a2;
    }
    else
    {
      sub_1DA5537E8();
      v6 = swift_allocError();
      *v7 = 0;
      v7[1] = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    swift_allocError();
    *v8 = v6;
    v9 = a2;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_1DA5515DC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  id v8;
  _QWORD *v9;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  swift_bridgeObjectRetain();
  result = sub_1DA6705A0();
  if (!result)
    goto LABEL_9;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1DF09EE48](0, a1);
LABEL_6:
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_error);

    if (v8)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
      swift_allocError();
      *v9 = v8;
      return swift_continuation_throwingResumeWithError();
    }
    goto LABEL_10;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA551704(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1DA47D774(0, (unint64_t *)&unk_1F026AAA0);
  v2 = sub_1DA66FA9C();
  sub_1DA66BE60();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA551770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  _BYTE v6[40];
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController;
  swift_beginAccess();
  sub_1DA49CC94(v3, (uint64_t)&v7, (uint64_t *)&unk_1F026A9A0);
  if (!v8)
  {
    sub_1DA47E2F0((uint64_t)&v7, (uint64_t *)&unk_1F026A9A0);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC2530]), sel_init);
    v8 = sub_1DA47D774(0, &qword_1F026AB10);
    v9 = &off_1EA0D6598;
    *(_QWORD *)&v7 = v4;
    sub_1DA4813E4((uint64_t)&v7, (uint64_t)v6);
    swift_beginAccess();
    sub_1DA55186C((uint64_t)v6, v3);
    swift_endAccess();
  }
  return sub_1DA4841BC(&v7, a1);
}

uint64_t sub_1DA55186C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026A9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5518B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADF9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t PlaybackController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__isPlaying;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__nowPlayingItem;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__tracklist;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__durationSnapshot;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__preferredJumpInterval;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__videoOutput;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController__currentRoute;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1E40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_responseDataSource);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker, &qword_1EDADF9A8);
  swift_release();

  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___volumeController, (uint64_t *)&unk_1F026A9A0);
  return v0;
}

uint64_t PlaybackController.__deallocating_deinit()
{
  PlaybackController.deinit();
  return swift_deallocClassInstance();
}

uint64_t PlaybackController.currentTime.getter()
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  float v6;
  char v7;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  if (v7 == 2)
    return 0;
  sub_1DA66C3C4();
  v2 = v5 + (v1 - v3) * v6;
  if (v2 >= v4)
    v2 = v4;
  return fmax(v2, 0.0);
}

uint64_t PlaybackController.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA551C14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 16) = 1;
  *(_BYTE *)(v0 + 24) = 2;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1DA551CA0;
  v2 = *(_QWORD *)(v0 + 56);
  v1[12] = 0;
  v1[13] = v2;
  v1[11] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_1DA551CA0(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t PlaybackController.play()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA551D48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 2;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1DA551CA0;
  v2 = *(_QWORD *)(v0 + 56);
  v1[12] = 0;
  v1[13] = v2;
  v1[11] = v0 + 16;
  return swift_task_switch();
}

uint64_t PlaybackController.togglePlayback()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA551DE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 16) = 2;
  *(_BYTE *)(v0 + 24) = 2;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1DA551E70;
  v2 = *(_QWORD *)(v0 + 56);
  v1[12] = 0;
  v1[13] = v2;
  v1[11] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_1DA551E70(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA551F00()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaybackController.performIntent(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[13] = a1;
  v2[14] = v1;
  v3 = sub_1DA66DEF4();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v4 = sub_1DA66D018();
  v2[18] = v4;
  v2[19] = *(_QWORD *)(v4 - 8);
  v2[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA551FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  if ((sub_1DA66C76C() & 1) == 0)
    return sub_1DA670570();
  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  sub_1DA66CFAC();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  v4 = *(void **)(v0 + 88);
  v5 = sub_1DA5525B0(v4);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v5 & 1) != 0)
  {
    *(_QWORD *)(v0 + 96) = MEMORY[0x1E0DEE9D8];
    v6 = sub_1DA66CF88();
    if ((v7 & 1) == 0)
    {
      *(_QWORD *)(v0 + 72) = v6;
      *(_BYTE *)(v0 + 80) = 0;
      sub_1DA66FAD8();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    if ((*(_BYTE *)(v0 + 65) & 1) == 0)
    {
      sub_1DA66DE70();
      v8 = sub_1DA66DEDC();
      v9 = sub_1DA66FD90();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_1DA478000, v8, v9, "Resuming episode that's already in the player", v10, 2u);
        MEMORY[0x1DF0A0474](v10, -1, -1);
      }
      v12 = *(_QWORD *)(v0 + 128);
      v11 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD *)(v0 + 120);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      *(_QWORD *)(v0 + 56) = 0;
      *(_BYTE *)(v0 + 64) = 2;
      sub_1DA66FAD8();
    }
    v14 = sub_1DA517F98(*(_QWORD *)(v0 + 96));
    *(_QWORD *)(v0 + 168) = v14;
    swift_bridgeObjectRelease();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v15;
    *v15 = v0;
    v15[1] = sub_1DA55232C;
    return sub_1DA54F8E8(v14, 0);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 40) = type metadata accessor for PlaybackController.QueueCommand();
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
    v19 = sub_1DA66CFD0();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(boxed_opaque_existential_1, v17, v19);
    swift_storeEnumTagMultiPayload();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v20;
    *v20 = v0;
    v20[1] = sub_1DA552480;
    v21 = *(_QWORD *)(v0 + 112);
    v20[12] = 0;
    v20[13] = v21;
    v20[11] = v0 + 16;
    return swift_task_switch();
  }
}

uint64_t sub_1DA55232C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_1DA5523A0()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v2 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1DA6705A0();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x1DF09EE48](0, *(_QWORD *)(v0 + 184));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 184) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_1DA552480(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 208) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1DA552520()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA552568()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5525B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v3 = sub_1DA66D018();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
    goto LABEL_3;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, v1, v3, v5);
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == *MEMORY[0x1E0D7DF48])
    goto LABEL_3;
  if (v8 == *MEMORY[0x1E0D7DF58])
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v7, v3);
    v11 = *(_QWORD *)(*v7 + 16);
    if (v11)
      v12 = *(_QWORD *)(*v7 + 32);
    else
      v12 = 0;
    v16 = a1;
    swift_bridgeObjectRelease();
    v17 = v16;
    v18 = objc_msgSend(v17, sel_identifiers);
    v19 = objc_msgSend(v18, sel_universalStore);

    v9 = v19 == 0;
    if (v19)
    {
      objc_msgSend(v19, sel_adamID);
      swift_unknownObjectRelease();
      v20 = sub_1DA66DCE4();
    }
    else
    {
      v20 = 0;
    }

    if (v11)
    {
      if (v19)
        v21 = v12 == v20;
      else
        v21 = 0;
      v9 = v21;
    }
    return v9 & 1;
  }
  if (v8 == *MEMORY[0x1E0D7DF28])
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v7, v3);
    v13 = (_QWORD *)*v7;
    if (v13[2])
    {
      v15 = v13[4];
      v14 = v13[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = 0;
      v14 = 0;
    }
    v31 = a1;
    swift_bridgeObjectRelease();
    v24 = v31;
    v32 = objc_msgSend(v24, sel_identifiers);
    v33 = objc_msgSend(v32, sel_library);

    if (v33)
    {
      v34 = objc_msgSend(v33, sel_databaseID);
      swift_unknownObjectRelease();
      v35 = sub_1DA66F8BC();
      v37 = v36;

      if (v14)
      {
        if (v15 == v35 && v14 == v37)
        {
LABEL_35:
          v9 = 1;
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return v9 & 1;
        }
LABEL_43:
        v9 = sub_1DA6706D8();
        goto LABEL_44;
      }
LABEL_38:
      swift_bridgeObjectRelease();

      goto LABEL_3;
    }
    goto LABEL_36;
  }
  if (v8 == *MEMORY[0x1E0D7DF20])
    goto LABEL_12;
  if (v8 == *MEMORY[0x1E0D7DF50])
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v7, v3);
    v22 = v7[2];
    v14 = v7[3];
    v23 = a1;
    swift_bridgeObjectRelease();
    v24 = v23;
    v25 = objc_msgSend(v24, sel_identifiers);
    v26 = objc_msgSend(v25, sel_library);

    if (v26)
    {
      v27 = objc_msgSend(v26, sel_databaseID);
      swift_unknownObjectRelease();
      v28 = sub_1DA66F8BC();
      v30 = v29;

      if (v14)
      {
        if (v22 == v28 && v14 == v30)
          goto LABEL_35;
        goto LABEL_43;
      }
      goto LABEL_38;
    }
LABEL_36:

    if (!v14)
    {
      v9 = 1;
      return v9 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (v8 == *MEMORY[0x1E0D7DF60] || v8 == *MEMORY[0x1E0D7DF18] || v8 == *MEMORY[0x1E0D7DF30])
  {
LABEL_12:
    (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v7, v3);
    swift_bridgeObjectRelease();
LABEL_3:
    v9 = 0;
    return v9 & 1;
  }
  if (v8 == *MEMORY[0x1E0D7DF40])
    goto LABEL_3;
  v38 = a1;
  result = sub_1DA6706CC();
  __break(1u);
  return result;
}

uint64_t sub_1DA552A10(uint64_t a1)
{
  uint64_t v2;

  v2 = _s12ErrorHandlerVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA552A4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[18] = a1;
  v2[19] = a2;
  v3 = sub_1DA66DEF4();
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA552AAC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AA88);
  sub_1DA4841D4(&qword_1F026AA90, &qword_1F026AA88, MEMORY[0x1E0DEAF50]);
  if ((sub_1DA66FCDC() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 152);
    v2 = objc_allocWithZone(MEMORY[0x1E0D4B358]);
    sub_1DA47D774(0, &qword_1F026AA98);
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v2, sel_initWithCommandRequests_, v3);
    *(_QWORD *)(v0 + 184) = v4;

    objc_msgSend(v4, sel_setOptions_, v1);
    return swift_task_switch();
  }
  else
  {
    sub_1DA66DE70();
    v6 = sub_1DA66DEDC();
    v7 = sub_1DA66FDA8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1DA478000, v6, v7, "No command requests are available to perform. Skipping.", v8, 2u);
      MEMORY[0x1DF0A0474](v8, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 176);
    v11 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_1DA552C6C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;

  v1 = (void *)v0[23];
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_1DA552D48;
  v2 = swift_continuation_init();
  v3 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  *(_QWORD *)(v3 + 16) = v2;
  v4[4] = sub_1DA55383C;
  v4[5] = v3;
  v4[1] = 1107296256;
  v4[2] = sub_1DA551704;
  v4[3] = &block_descriptor_105;
  v5 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v1, sel_performWithExtendedStatusCompletion_, v5);
  _Block_release(v5);
  return swift_continuation_await();
}

uint64_t sub_1DA552D48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 192) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 200) = *(_QWORD *)(v1 + 136);
  return swift_task_switch();
}

uint64_t sub_1DA552DBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA552E00()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA552E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__isPlaying, (uint64_t *)&unk_1EDAE1DE0);
}

uint64_t sub_1DA552E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1EDAE1D48, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__isPlaying, (uint64_t *)&unk_1EDAE1DE0);
}

uint64_t sub_1DA552E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__nowPlayingItem, &qword_1EDAE1E00);
}

uint64_t sub_1DA552EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1EDAE1D60, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__nowPlayingItem, &qword_1EDAE1E00);
}

uint64_t sub_1DA552EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__tracklist, (uint64_t *)&unk_1EDAE1E10);
}

uint64_t sub_1DA552F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, (uint64_t *)&unk_1EDAE1D68, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__tracklist, (uint64_t *)&unk_1EDAE1E10);
}

uint64_t sub_1DA552F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__durationSnapshot, &qword_1EDAE1E30);
}

uint64_t sub_1DA552F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, (uint64_t *)&unk_1EDAE1D78, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__durationSnapshot, &qword_1EDAE1E30);
}

uint64_t sub_1DA552F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__preferredJumpInterval, (uint64_t *)&unk_1EDAE1DC0);
}

uint64_t sub_1DA552FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1EDAE1D40, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__preferredJumpInterval, (uint64_t *)&unk_1EDAE1DC0);
}

uint64_t sub_1DA552FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__videoOutput, &qword_1EDADFF60);
}

uint64_t sub_1DA552FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, &qword_1EDADFF10, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__videoOutput, &qword_1EDADFF60);
}

uint64_t sub_1DA553024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA52B154(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__currentRoute, (uint64_t *)&unk_1EDAE1E40);
}

uint64_t sub_1DA553048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA52B1C0(a1, a2, a3, a4, (uint64_t *)&unk_1EDAE1D98, (uint64_t)&OBJC_IVAR____TtC10PodcastsUI18PlaybackController__currentRoute, (uint64_t *)&unk_1EDAE1E40);
}

uint64_t sub_1DA55307C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_routeController);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1DA66BE60();
}

uint64_t sub_1DA5530D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playbackPositionTracker;
  swift_beginAccess();
  return sub_1DA49CC94(v3, a2, &qword_1EDADF9A8);
}

uint64_t sub_1DA553134@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA54D828();
  *a1 = result;
  return result;
}

uint64_t sub_1DA55315C(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController____lazy_storage___queueController) = *a1;
  sub_1DA66BE60();
  return swift_release();
}

id sub_1DA553194@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_playerPath);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1DA5531E8()
{
  return type metadata accessor for PlaybackController();
}

uint64_t method lookup function for PlaybackController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaybackController.isPlaying.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PlaybackController.$isPlaying.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of PlaybackController.nowPlayingItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of PlaybackController.tracklist.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of PlaybackController.$tracklist.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of PlaybackController.durationSnapshot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of PlaybackController.preferredJumpInterval.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of PlaybackController.videoOutput.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of PlaybackController.$videoOutput.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of PlaybackController.currentRoute.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of PlaybackController.sleepTimerPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of PlaybackController.transcriptAlignmentsPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of PlaybackController.volume.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of PlaybackController.volume.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of PlaybackController.volume.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of PlaybackController.increaseVolume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of PlaybackController.decreaseVolume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of PlaybackController.isVolumeControlAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of PlaybackController.routeController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of PlaybackController.routeController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of PlaybackController.routeController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of PlaybackController.playbackPositionTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of PlaybackController.playbackPositionTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of PlaybackController.playbackPositionTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of PlaybackController.transportCommandPerformedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of PlaybackController.queueController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of PlaybackController.queueController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of PlaybackController.queueController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of PlaybackController.__allocating_init(reachability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 808))();
}

uint64_t dispatch thunk of PlaybackController.playerPath.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of PlaybackController.playerPath.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of PlaybackController.playerPath.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of PlaybackController.canPerform(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 840) + *(_QWORD *)(*(_QWORD *)v1 + 840));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4B17EC;
  return v6(a1);
}

uint64_t dispatch thunk of PlaybackController.canPerform(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of PlaybackController.performCommand(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 856) + *(_QWORD *)(*(_QWORD *)v2 + 856));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1DA4B17EC;
  return v8(a1, a2);
}

uint64_t dispatch thunk of PlaybackController.performWhenAvailable(_:options:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, double);

  v10 = (uint64_t (*)(uint64_t, uint64_t, double))(**(int **)(*(_QWORD *)v3 + 864)
                                                         + *(_QWORD *)(*(_QWORD *)v3 + 864));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1DA553898;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of PlaybackController.performCommands(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 872) + *(_QWORD *)(*(_QWORD *)v2 + 872));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1DA553898;
  return v8(a1, a2);
}

void destroy for PlaybackController.ResponseError(id *a1)
{
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
  {

  }
}

uint64_t _s10PodcastsUI18PlaybackControllerC13ResponseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = v3;
    v6 = v4;
  }
  return a1;
}

void **assignWithCopy for PlaybackController.ResponseError(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v4 = *a1;
  v5 = *(void **)a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      v10 = *(void **)(a2 + 8);
      a1[1] = v10;
      v11 = v5;
      v12 = v10;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *a1 = v5;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = a1[1];
  a1[1] = v7;
  v9 = v7;

  return a1;
}

void **assignWithTake for PlaybackController.ResponseError(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *a1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void **)a2;

  v5 = a1[1];
  a1[1] = *(void **)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.ResponseError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlaybackController.ResponseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1DA553798(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DA5537B0(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

uint64_t sub_1DA5537D0()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5537E0(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1DA551524(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1DA5537E8()
{
  unint64_t result;

  result = qword_1F026AA80;
  if (!qword_1F026AA80)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67CA84, &type metadata for PlaybackController.ResponseError);
    atomic_store(result, (unint64_t *)&qword_1F026AA80);
  }
  return result;
}

uint64_t sub_1DA55382C()
{
  return swift_deallocObject();
}

uint64_t sub_1DA55383C(unint64_t a1)
{
  uint64_t v1;

  return sub_1DA5515DC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1DA553844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADEBF8;
  if (!qword_1EDADEBF8)
  {
    v1 = sub_1DA66FF70();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1EDADEBF8);
  }
  return result;
}

uint64_t sub_1DA55389C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA657A98(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t sub_1DA5538C8()
{
  uint64_t result;
  uint64_t v1;

  sub_1DA66EF14();
  sub_1DA55397C();
  result = sub_1DA66CB8C();
  qword_1F026AB28 = result;
  unk_1F026AB30 = v1;
  return result;
}

uint64_t static MetricsField<>.eventType.getter()
{
  uint64_t v0;

  if (qword_1F0268520 != -1)
    swift_once();
  v0 = qword_1F026AB28;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1DA55397C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026AB38;
  if (!qword_1F026AB38)
  {
    v1 = sub_1DA66EF14();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MetricsEventType, v1);
    atomic_store(result, (unint64_t *)&qword_1F026AB38);
  }
  return result;
}

uint64_t EpisodeLimitTip.episodeLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EpisodeLimitTip.reclaimedSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EpisodeLimitTip() + 20);
  v4 = sub_1DA66CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for EpisodeLimitTip()
{
  uint64_t result;

  result = qword_1EDAE3BB8;
  if (!qword_1EDAE3BB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EpisodeLimitTip.episodesDeleted.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EpisodeLimitTip() + 24));
}

uint64_t EpisodeLimitTip.spaceDistribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EpisodeLimitTip() + 28);
  v4 = sub_1DA66D63C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EpisodeLimitTip.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EpisodeLimitTip() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeLimitTip.restoreToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EpisodeLimitTip() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EpisodeLimitTip.init(episodeLimit:reclaimedSpace:episodesDeleted:spaceDistribution:osVersion:restoreToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;

  *a9 = a1;
  v17 = (int *)type metadata accessor for EpisodeLimitTip();
  v18 = (char *)a9 + v17[5];
  v19 = sub_1DA66CBE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  *(_QWORD *)((char *)a9 + v17[6]) = a3;
  v20 = (char *)a9 + v17[7];
  v21 = sub_1DA66D63C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a4, v21);
  v23 = (_QWORD *)((char *)a9 + v17[8]);
  *v23 = a5;
  v23[1] = a6;
  v24 = (_QWORD *)((char *)a9 + v17[9]);
  *v24 = a7;
  v24[1] = a8;
  return result;
}

Swift::Void __swiftcall EpisodeLimitTip.markAsIgnored(in:)(NSUserDefaults in)
{
  Class isa;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  isa = in.super.isa;
  v2 = sub_1DA66CBE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EpisodeLimitTip();
  sub_1DA66D624();
  v6 = sub_1DA66CBC8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    -[objc_class setInteger:forKey:](isa, sel_setInteger_forKey_, v6, *MEMORY[0x1E0D7F320]);
    v7 = (void *)sub_1DA66F88C();
    -[objc_class setObject:forKey:](isa, sel_setObject_forKey_, v7, *MEMORY[0x1E0D7F330]);

    v8 = (void *)sub_1DA66F88C();
    -[objc_class setObject:forKey:](isa, sel_setObject_forKey_, v8, *MEMORY[0x1E0D7F338]);

    v9 = (void *)sub_1DA66F88C();
    -[objc_class removeObjectForKey:](isa, sel_removeObjectForKey_, v9);

    v10 = (void *)sub_1DA66F88C();
    -[objc_class removeObjectForKey:](isa, sel_removeObjectForKey_, v10);

  }
}

uint64_t sub_1DA553DB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DA553DF0 + 4 * byte_1DA67CB10[*v0]))(0x4C65646F73697065, 0xEC00000074696D69);
}

uint64_t sub_1DA553DF0()
{
  return 0x656D69616C636572;
}

uint64_t sub_1DA553E14()
{
  return 0x7365646F73697065;
}

unint64_t sub_1DA553E38()
{
  return 0xD000000000000011;
}

uint64_t sub_1DA553E54()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_1DA553E70()
{
  return 0x5465726F74736572;
}

uint64_t sub_1DA553E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DA556190(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DA553EB4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DA553EC0()
{
  sub_1DA55418C();
  return sub_1DA670810();
}

uint64_t sub_1DA553EE8()
{
  sub_1DA55418C();
  return sub_1DA67081C();
}

uint64_t EpisodeLimitTip.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA55418C();
  sub_1DA670804();
  v11 = *v3;
  v10[7] = 0;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  sub_1DA47E32C(&qword_1EDAE2898, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, MEMORY[0x1E0D7F0C8]);
  sub_1DA670660();
  if (!v2)
  {
    type metadata accessor for EpisodeLimitTip();
    v10[6] = 1;
    sub_1DA66CBE0();
    sub_1DA47E32C(&qword_1EDAE4128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DA28], MEMORY[0x1E0D7DA38]);
    sub_1DA670660();
    v10[5] = 2;
    sub_1DA670654();
    v10[4] = 3;
    sub_1DA66D63C();
    sub_1DA47E32C(&qword_1F026AB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E658], MEMORY[0x1E0D7E668]);
    sub_1DA670660();
    v10[3] = 4;
    sub_1DA670648();
    v10[2] = 5;
    sub_1DA670648();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DA55418C()
{
  unint64_t result;

  result = qword_1F026AB48;
  if (!qword_1F026AB48)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67CCBC, &type metadata for EpisodeLimitTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026AB48);
  }
  return result;
}

uint64_t EpisodeLimitTip.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;

  v37 = a2;
  v42 = sub_1DA66D63C();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66CBE0();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB58);
  v7 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EpisodeLimitTip();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DA55418C();
  v43 = v9;
  v13 = v45;
  sub_1DA6707EC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v14 = v6;
  v45 = v7;
  v16 = v40;
  v15 = v41;
  v17 = v12;
  v18 = v42;
  type metadata accessor for MTPodcastEpisodeLimit(0);
  v51 = 0;
  sub_1DA47E32C(&qword_1EDAE28A0, (uint64_t (*)(uint64_t))type metadata accessor for MTPodcastEpisodeLimit, MEMORY[0x1E0D7F0D0]);
  sub_1DA670630();
  v36 = v17;
  *(_QWORD *)v17 = v52;
  v50 = 1;
  sub_1DA47E32C(&qword_1F026AB60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DA28], MEMORY[0x1E0D7DA48]);
  v19 = v14;
  v20 = v15;
  sub_1DA670630();
  v21 = (int *)v10;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v36[*(int *)(v10 + 20)], v19, v20);
  v49 = 2;
  *(_QWORD *)&v36[*(int *)(v10 + 24)] = sub_1DA670624();
  v48 = 3;
  sub_1DA47E32C(&qword_1F026AB68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E658], MEMORY[0x1E0D7E670]);
  v22 = v38;
  sub_1DA670630();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v36[v21[7]], v22, v18);
  v47 = 4;
  v23 = sub_1DA670618();
  v24 = (uint64_t *)&v36[v21[8]];
  *v24 = v23;
  v24[1] = v25;
  v46 = 5;
  v26 = sub_1DA670618();
  v38 = v27;
  v28 = v26;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
  v29 = v21[9];
  v31 = (uint64_t)v36;
  v30 = v37;
  v32 = (uint64_t *)&v36[v29];
  v33 = v38;
  *v32 = v28;
  v32[1] = (uint64_t)v33;
  sub_1DA55464C(v31, v30);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_1DA554690(v31);
}

uint64_t sub_1DA55464C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeLimitTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA554690(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EpisodeLimitTip();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DA5546CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EpisodeLimitTip.init(from:)(a1, a2);
}

uint64_t sub_1DA5546E0(_QWORD *a1)
{
  return EpisodeLimitTip.encode(to:)(a1);
}

void EpisodeLimitTip.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

unint64_t EpisodeLimitTip.iconIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t EpisodeLimitTip.localizedTitle.getter()
{
  return sub_1DA66D2F4();
}

uint64_t EpisodeLimitTip.clickEvent.getter()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;

  v0 = MEMORY[0x1E0DEA968];
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v8 = 0xD000000000000014;
  *((_QWORD *)&v8 + 1) = 0x80000001DA68CF60;
  sub_1DA49ACF0(&v8, v7);
  v1 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA537CBC(v7, 1701667182, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_1DA66D2E8();
  v9 = v0;
  *(_QWORD *)&v8 = v3;
  *((_QWORD *)&v8 + 1) = v4;
  sub_1DA49ACF0(&v8, v7);
  v5 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA537CBC(v7, 0x6973736572706D69, 0xEE00657079546E6FLL, v5);
  swift_bridgeObjectRelease();
  return v1;
}

id EpisodeLimitTip.localizedMessage.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  type metadata accessor for EpisodeLimitTip();
  v1 = sub_1DA66CBC8();
  v2 = sub_1DA554A08(*v0, v1, 0);
  v4 = v3;
  if (!v3)
    return (id)v2;
  if (!v1)
  {
    sub_1DA66D2F4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = sub_1DA486218();
    *(_QWORD *)(v13 + 32) = v2;
    *(_QWORD *)(v13 + 40) = v4;
    goto LABEL_6;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_stringWithBytesize_, v1);
  if (result)
  {
    v6 = result;
    v7 = sub_1DA66F8BC();
    v9 = v8;

    sub_1DA66D2F4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DA678FE0;
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1DA486218();
    *(_QWORD *)(v10 + 32) = v7;
    *(_QWORD *)(v10 + 40) = v9;
    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 72) = v2;
    *(_QWORD *)(v10 + 80) = v4;
LABEL_6:
    v2 = sub_1DA66F8E0();
    swift_bridgeObjectRelease();
    return (id)v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA554A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v6 = sub_1DA66DEF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0x455A49535F4F4E5FLL;
  if (a2)
    v10 = 0;
  v47 = v10;
  v11 = 0xE800000000000000;
  if (a2)
    v11 = 0xE000000000000000;
  v50 = v11;
  v48 = (id)objc_opt_self();
  v12 = objc_msgSend(v48, sel_mainBundle, v47);
  v49 = sub_1DA66C19C();
  v14 = v13;

  if (a1 <= 4294967294)
  {
    switch(a1)
    {
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      case 1:
      case 6:
        v15 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        sub_1DA66F988();
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v16 = objc_msgSend(v48, sel_mainBundle);
        goto LABEL_25;
      case 2:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD000000000000030;
        v52 = 0x80000001DA68D990;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v30 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v31 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v31;
        v25 = 2;
        goto LABEL_27;
      case 3:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD000000000000030;
        v52 = 0x80000001DA68D990;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v34 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v35 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v35;
        v25 = 3;
        goto LABEL_27;
      case 4:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD000000000000030;
        v52 = 0x80000001DA68D990;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v21 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v24 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v24;
        v25 = 5;
        goto LABEL_27;
      case 5:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD000000000000030;
        v52 = 0x80000001DA68D990;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v38 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v39 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v39;
        v25 = 10;
        goto LABEL_27;
      case 7:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD00000000000002ELL;
        v52 = 0x80000001DA68D920;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v36 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v37 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v37;
        *(_QWORD *)(v22 + 32) = 7;
        goto LABEL_28;
      case 8:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD00000000000002ELL;
        v52 = 0x80000001DA68D920;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v43 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v43;
        v25 = 14;
        goto LABEL_27;
      case 9:
        v20 = v14;
        v51 = 0;
        v52 = 0xE000000000000000;
        sub_1DA670444();
        swift_bridgeObjectRelease();
        v51 = 0xD00000000000002ELL;
        v52 = 0x80000001DA68D920;
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v48, sel_mainBundle);
        sub_1DA66C19C();
        swift_bridgeObjectRelease();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
        v22 = swift_allocObject();
        v23 = (_QWORD *)v22;
        *(_OWORD *)(v22 + 16) = xmmword_1DA678FE0;
        v33 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v22 + 64) = v33;
        v25 = 30;
LABEL_27:
        *(_QWORD *)(v22 + 32) = v25;
LABEL_28:
        *(_QWORD *)(v22 + 96) = MEMORY[0x1E0DEA968];
        v23[13] = sub_1DA486218();
        v23[9] = v49;
        v23[10] = v20;
        goto LABEL_29;
      default:
        goto LABEL_33;
    }
  }
  if (a1 == 0xFFFFFFFFLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = sub_1DA66FFAC();
    v18 = a2;
    v19 = 0;
    return sub_1DA554A08(v17, v18, v19);
  }
  if (a1 == 0x100000000)
  {
    v15 = v14;
    v51 = 0;
    v52 = 0xE000000000000000;
    sub_1DA670444();
    swift_bridgeObjectRelease();
    v51 = 0xD000000000000022;
    v52 = 0x80000001DA68D8F0;
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v48, sel_mainBundle);
LABEL_25:
    v40 = v16;
    sub_1DA66C19C();
    swift_bridgeObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v41 + 64) = sub_1DA486218();
    *(_QWORD *)(v41 + 32) = v49;
    *(_QWORD *)(v41 + 40) = v15;
LABEL_29:
    v29 = sub_1DA66F8E0();
    swift_bridgeObjectRelease();
    return v29;
  }
  if (a1 != 0x100000001)
  {
LABEL_33:
    type metadata accessor for MTPodcastEpisodeLimit(0);
    v51 = a1;
    sub_1DA670714();
    __break(1u);
    JUMPOUT(0x1DA5555E0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!a3)
  {
    v45 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSettingsUserDefaults);
    v46 = objc_msgSend(v45, sel_episodeLimitForKey_, *MEMORY[0x1E0D7F368]);

    v17 = (uint64_t)v46;
    v18 = a2;
    v19 = 1;
    return sub_1DA554A08(v17, v18, v19);
  }
  sub_1DA66DED0();
  v26 = sub_1DA66DEDC();
  v27 = sub_1DA66FDA8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1DA478000, v26, v27, "Encountered a device where the global limit has been configured to point to itself, causing infinite recursion. This is invalid, so this logic is exiting without a value -- no storage tip can be displayed.", v28, 2u);
    MEMORY[0x1DF0A0474](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

_OWORD *EpisodeLimitTip.actions.getter()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  _BYTE v19[48];
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB70);
  v2 = (_OWORD *)swift_allocObject();
  v2[1] = xmmword_1DA678FE0;
  v3 = type metadata accessor for ApplyEpisodeLimitRecommendationAction();
  v21 = v3;
  v4 = sub_1DA47E32C(&qword_1F026AB78, (uint64_t (*)(uint64_t))type metadata accessor for ApplyEpisodeLimitRecommendationAction, (uint64_t)&protocol conformance descriptor for ApplyEpisodeLimitRecommendationAction);
  v22 = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1DA55464C(v1, (uint64_t)boxed_opaque_existential_1 + *(int *)(v3 + 20));
  sub_1DA66ED4C();
  *((_BYTE *)boxed_opaque_existential_1 + *(int *)(v3 + 24)) = 0;
  v6 = sub_1DA66D2F4();
  v8 = v7;
  sub_1DA4813E4((uint64_t)v20, (uint64_t)&v17);
  *(_QWORD *)&v19[8] = v6;
  *(_QWORD *)&v19[16] = v8;
  *(_QWORD *)&v19[24] = 0xD000000000000014;
  *(_QWORD *)&v19[32] = 0x80000001DA689D90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
  sub_1DA5329A0();
  LOBYTE(v6) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    v9 = 2;
  else
    v9 = 0;
  *(_QWORD *)&v19[40] = v9;
  v10 = *(_OWORD *)&v19[16];
  v2[4] = *(_OWORD *)v19;
  v2[5] = v10;
  v11 = v18;
  v2[2] = v17;
  v2[3] = v11;
  v2[6] = *(_OWORD *)&v19[32];
  v21 = v3;
  v22 = v4;
  v12 = __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1DA55464C(v1, (uint64_t)v12 + *(int *)(v3 + 20));
  sub_1DA66ED4C();
  *((_BYTE *)v12 + *(int *)(v3 + 24)) = 1;
  sub_1DA4813E4((uint64_t)v20, (uint64_t)&v17);
  memset(&v19[8], 0, 32);
  LOBYTE(v12) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    v13 = 2;
  else
    v13 = 0;
  *(_QWORD *)&v19[40] = v13;
  v14 = *(_OWORD *)&v19[16];
  v2[9] = *(_OWORD *)v19;
  v2[10] = v14;
  v15 = v18;
  v2[7] = v17;
  v2[8] = v15;
  v2[11] = *(_OWORD *)&v19[32];
  return v2;
}

unint64_t sub_1DA555830()
{
  return 0xD000000000000018;
}

uint64_t sub_1DA55584C()
{
  return sub_1DA66D2F4();
}

uint64_t *initializeBufferWithCopyOfBuffer for EpisodeLimitTip(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1DA66CBE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1DA66D63C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[8];
    v16 = a3[9];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)v4 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EpisodeLimitTip(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EpisodeLimitTip(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66CBE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66D63C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EpisodeLimitTip(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66CBE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66D63C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for EpisodeLimitTip(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66CBE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66D63C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for EpisodeLimitTip(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66CBE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66D63C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeLimitTip()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA555D64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_1DA66CBE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_1DA66D63C();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeLimitTip()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA555E18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_1DA66CBE0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_1DA66D63C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DA555EBC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66CBE0();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66D63C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EpisodeLimitTip.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeLimitTip.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DA556038 + 4 * byte_1DA67CB1B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DA55606C + 4 * byte_1DA67CB16[v4]))();
}

uint64_t sub_1DA55606C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA556074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA55607CLL);
  return result;
}

uint64_t sub_1DA556088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA556090);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DA556094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA55609C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EpisodeLimitTip.CodingKeys()
{
  return &type metadata for EpisodeLimitTip.CodingKeys;
}

unint64_t sub_1DA5560BC()
{
  unint64_t result;

  result = qword_1F026AB80;
  if (!qword_1F026AB80)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67CC94, &type metadata for EpisodeLimitTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026AB80);
  }
  return result;
}

unint64_t sub_1DA556104()
{
  unint64_t result;

  result = qword_1F026AB88;
  if (!qword_1F026AB88)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67CC04, &type metadata for EpisodeLimitTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026AB88);
  }
  return result;
}

unint64_t sub_1DA55614C()
{
  unint64_t result;

  result = qword_1F026AB90;
  if (!qword_1F026AB90)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67CC2C, &type metadata for EpisodeLimitTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F026AB90);
  }
  return result;
}

uint64_t sub_1DA556190(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C65646F73697065 && a2 == 0xEC00000074696D69;
  if (v2 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D69616C636572 && a2 == 0xEE00656361705364 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365646F73697065 && a2 == 0xEF646574656C6544 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DA68D8B0 || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_1DA6706D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5465726F74736572 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t PendingPlaybackController.__allocating_init(pendingPlaybackStore:playbackController:playStateEstimationProvider:legacyPlayerController:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1DA4841BC(a3, v8 + 32);
  *(_QWORD *)(v8 + 24) = a2;
  sub_1DA4841BC(a4, v8 + 72);
  return v8;
}

uint64_t PendingPlaybackController.init(pendingPlaybackStore:playbackController:playStateEstimationProvider:legacyPlayerController:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  sub_1DA4841BC(a3, v4 + 32);
  *(_QWORD *)(v4 + 24) = a2;
  sub_1DA4841BC(a4, v4 + 72);
  return v4;
}

uint64_t PendingPlaybackController.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DA66D690();
  sub_1DA66EE30();
  sub_1DA66F580();
  type metadata accessor for PlaybackController();
  sub_1DA66F580();
  v0 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB98);
  sub_1DA66F580();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026ABA0);
  sub_1DA66F580();
  swift_release();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v6;
  sub_1DA4841BC(&v4, v1 + 32);
  *(_QWORD *)(v1 + 24) = v0;
  sub_1DA4841BC(&v3, v1 + 72);
  return v1;
}

uint64_t PendingPlaybackController.preflight(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  id v24;
  unsigned int v25;
  uint64_t v26;
  char *v27;
  id v28[5];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66D8AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66C784();
  v28[3] = (id)v12;
  v28[4] = (id)sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v28);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D548], v12);
  LOBYTE(v12) = sub_1DA66C5F8();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  if ((v12 & 1) != 0)
  {
    v27 = v8;
    sub_1DA66D87C();
    sub_1DA66D888();
    v15 = sub_1DA66D75C();
    swift_bridgeObjectRelease();
    sub_1DA66BE60();
    v16 = sub_1DA556A44(v15, v0);
    swift_bridgeObjectRelease();
    swift_release();
    v17 = *(_QWORD *)(v16 + 16);
    v18 = sub_1DA66D1BC();
    v19 = *(_QWORD *)(v18 - 8);
    if (v17)
    {
      sub_1DA556DD4(v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), (uint64_t)v11);
      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v11, v20, 1, v18);
    swift_bridgeObjectRelease();
    sub_1DA66D864();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1DA47E2F0((uint64_t)v11, &qword_1EDADED78);
      v21 = &qword_1EDADFC88;
      v22 = (uint64_t)v4;
    }
    else
    {
      v23 = v27;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v27, v4, v5);
      sub_1DA66D678();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1DA66E0BC();
      swift_release();
      swift_release();
      v24 = v28[0];
      if (!v28[0] || (v25 = objc_msgSend(v28[0], sel_isDeviceRoute), v24, v25))
      {
        if ((sub_1DA66C76C() & 1) == 0)
        {
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 96));
          sub_1DA66D7B0();
        }
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v5);
      v21 = &qword_1EDADED78;
      v22 = (uint64_t)v11;
    }
    return sub_1DA47E2F0(v22, v21);
  }
  return result;
}

Swift::Void __swiftcall PendingPlaybackController.reset()()
{
  sub_1DA66D66C();
}

uint64_t PendingPlaybackController.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  return v0;
}

uint64_t PendingPlaybackController.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA556A00()
{
  return PendingPlaybackController.preflight(_:)();
}

uint64_t sub_1DA556A20()
{
  return sub_1DA66D66C();
}

uint64_t sub_1DA556A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1DA66D1BC();
  v40 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v31 = (uint64_t)&v30 - v9;
  v10 = *(_QWORD *)(a1 + 56);
  v34 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v38 = a2;
  v39 = a1;
  v35 = (unint64_t)(v11 + 63) >> 6;
  v36 = (_QWORD *)(a2 + 32);
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v33 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    goto LABEL_7;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    v18 = *(_QWORD *)(v39 + 48) + 24 * i;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_BYTE *)(v18 + 16);
    __swift_project_boxed_opaque_existential_1(v36, *(_QWORD *)(v38 + 56));
    sub_1DA5242E8(v20, v19, v21);
    sub_1DA66DA74();
    sub_1DA5242F8(v20, v19, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v6, 1, v37) == 1)
    {
      result = sub_1DA47E2F0((uint64_t)v6, &qword_1EDADED78);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v25 = v31;
      sub_1DA556E54((uint64_t)v6, v31);
      sub_1DA556E54(v25, v32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1DA5402E4(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
      v27 = *(_QWORD *)(v33 + 16);
      v26 = *(_QWORD *)(v33 + 24);
      if (v27 >= v26 >> 1)
        v33 = sub_1DA5402E4(v26 > 1, v27 + 1, 1, v33);
      v28 = v32;
      v29 = v33;
      *(_QWORD *)(v33 + 16) = v27 + 1;
      result = sub_1DA556E54(v28, v29+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v27);
      if (v13)
        goto LABEL_4;
    }
LABEL_7:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_29;
      v23 = *(_QWORD *)(v34 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v35)
          goto LABEL_29;
        v23 = *(_QWORD *)(v34 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v35)
            goto LABEL_29;
          v23 = *(_QWORD *)(v34 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v35)
  {
LABEL_29:
    swift_release();
    return v33;
  }
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DA556DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66D1BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PendingPlaybackController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PendingPlaybackController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PendingPlaybackController.__allocating_init(pendingPlaybackStore:playbackController:playStateEstimationProvider:legacyPlayerController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1DA556E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66D1BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA556E98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA556F14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

uint64_t sub_1DA556F84()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA556FFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66BE60();
  return sub_1DA66E0C8();
}

void (*sub_1DA557068(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1DA66E0B0();
  return sub_1DA5570E0;
}

void sub_1DA5570E0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1DA55712C()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA557190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1DA5572A0()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  return swift_endAccess();
}

uint64_t sub_1DA557300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E0A4();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1DA5573D4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1D48);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC10PodcastsUI30TranscriptSyncingStateObserver__isSyncing;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  sub_1DA66E098();
  swift_endAccess();
  return sub_1DA55749C;
}

void sub_1DA55749C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1DA66E0A4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1DA66E0A4();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t TranscriptSyncingStateObserver.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1DA66E08C();
  return v0;
}

uint64_t TranscriptSyncingStateObserver.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v7[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = v0 + OBJC_IVAR____TtC10PodcastsUI30TranscriptSyncingStateObserver__isSyncing;
  v7[15] = 0;
  sub_1DA66E08C();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t TranscriptSyncingStateObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI30TranscriptSyncingStateObserver__isSyncing;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TranscriptSyncingStateObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI30TranscriptSyncingStateObserver__isSyncing;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA557750()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1DA55775C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TranscriptSyncingStateObserver();
  result = sub_1DA66DFC0();
  *a1 = result;
  return result;
}

uint64_t sub_1DA5577A0()
{
  return type metadata accessor for TranscriptSyncingStateObserver();
}

uint64_t type metadata accessor for TranscriptSyncingStateObserver()
{
  uint64_t result;

  result = qword_1EDADFB00;
  if (!qword_1EDADFB00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA5577E4()
{
  unint64_t v0;

  sub_1DA4A9F5C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for TranscriptSyncingStateObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.isSyncing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.isSyncing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.isSyncing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.$isSyncing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.$isSyncing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.$isSyncing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TranscriptSyncingStateObserver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1DA5578AC()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  __swift_allocate_value_buffer(v0, qword_1F026ABA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F026ABA8);
  return sub_1DA66C334();
}

uint64_t static URL.iOSGlobalPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA5579D4(&qword_1F0268528, (uint64_t)qword_1F026ABA8, a1);
}

uint64_t sub_1DA55792C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  __swift_allocate_value_buffer(v0, qword_1F026ABC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F026ABC0);
  sub_1DA670444();
  swift_bridgeObjectRelease();
  return sub_1DA66C334();
}

uint64_t static URL.iOSAutomaticallyDownloadPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA5579D4(&qword_1F0268530, (uint64_t)qword_1F026ABC0, a1);
}

uint64_t sub_1DA5579D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_1DA4B2F78(v6, a3);
}

ValueMetadata *type metadata accessor for ViewControllerContainment()
{
  return &type metadata for ViewControllerContainment;
}

uint64_t sub_1DA557A34()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for LibraryImageProvider();
  __swift_allocate_value_buffer(v0, qword_1EDAE3CD0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE3CD0);
  return sub_1DA557A7C(v1);
}

uint64_t sub_1DA557A7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  _BYTE v13[24];
  ValueMetadata *v14;
  _UNKNOWN **v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1EDAE0190 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_1EDAE0178);
  sub_1DA484504(v8, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  if (qword_1EDAE0888 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4200);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE41F0, &qword_1EDAE4200, MEMORY[0x1E0D7E440]);
  sub_1DA66C934();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  v14 = &type metadata for ThumbnailImageResizer;
  v15 = &protocol witness table for ThumbnailImageResizer;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v10 = (void *)sub_1DA66FE14();
  return LibraryImageProvider.init(caches:taskImageSource:imageStore:resizer:workQueue:)((uint64_t)v7, (uint64_t)v4, v9, (uint64_t)v13, v10, a1);
}

uint64_t LibraryImageProvider.init(caches:taskImageSource:imageStore:resizer:workQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;

  sub_1DA484504(a1, a6, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v11 = (int *)type metadata accessor for LibraryImageProvider();
  v12 = a6 + v11[5];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a2, v13);
  *(_QWORD *)(a6 + v11[7]) = a3;
  sub_1DA4813E4(a4, a6 + v11[6]);
  *(_QWORD *)(a6 + v11[8]) = a5;
  v15 = a3;
  v16 = a5;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1DA63CBE8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C80);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(a6 + v11[9]) = v19;
  v20 = sub_1DA4899EC(v17);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE00B8);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 16) = v20;
  __swift_destroy_boxed_opaque_existential_0(a4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  result = sub_1DA47F880(a1, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  *(_QWORD *)(a6 + v11[10]) = v21;
  return result;
}

uint64_t static LibraryImageProvider.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE3CE8 != -1)
    swift_once();
  v2 = type metadata accessor for LibraryImageProvider();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE3CD0);
  return sub_1DA484504(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
}

uint64_t LibraryImageProvider.caches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA484504(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
}

uint64_t LibraryImageProvider.taskImageSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LibraryImageProvider() + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LibraryImageProvider.resizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LibraryImageProvider();
  return sub_1DA4813E4(v1 + *(int *)(v3 + 24), a1);
}

id LibraryImageProvider.imageStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for LibraryImageProvider() + 28));
}

id LibraryImageProvider.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for LibraryImageProvider() + 32));
}

uint64_t LibraryImageProvider.load(artwork:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = sub_1DA66CEBC();
  v2 = *(_QWORD *)(v26 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v26);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66D7A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4158);
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE43F0);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00B0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_DWORD *)(v12 + 40) = 0;
  sub_1DA66D90C();
  sub_1DA5582AC(a1, (uint64_t)v8, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, a1, v26);
  v14 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v15 = (v3 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v16 + v14, v4, v13);
  v17 = v16 + v15;
  *(_QWORD *)v17 = "LibraryImageProvider";
  *(_QWORD *)(v17 + 8) = 20;
  *(_BYTE *)(v17 + 16) = 2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v12;
  *(_QWORD *)(v18 + 24) = "LibraryImageProvider";
  *(_QWORD *)(v18 + 32) = 20;
  *(_BYTE *)(v18 + 40) = 2;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v12;
  *(_QWORD *)(v19 + 24) = "LibraryImageProvider";
  *(_QWORD *)(v19 + 32) = 20;
  *(_BYTE *)(v19 + 40) = 2;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v12;
  *(_QWORD *)(v20 + 24) = "LibraryImageProvider";
  *(_QWORD *)(v20 + 32) = 20;
  *(_BYTE *)(v20 + 40) = 2;
  sub_1DA4841D4(&qword_1EDAE4150, &qword_1EDAE4158, MEMORY[0x1E0D7DB08]);
  swift_retain_n();
  v21 = v28;
  v22 = v27;
  sub_1DA66E134();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v21);
  sub_1DA4841D4(&qword_1EDAE43E8, (uint64_t *)&unk_1EDAE43F0, MEMORY[0x1E0C957C0]);
  v23 = v29;
  v24 = sub_1DA66E11C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v23);
  return v24;
}

uint64_t sub_1DA5582AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  void *v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, uint64_t);
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  _UNKNOWN **v198;
  uint64_t v199;
  uint64_t v200;
  char v201[8];

  v191 = a2;
  v189 = a1;
  v178 = a3;
  v3 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v3);
  v175 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4280);
  v176 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v187 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C0);
  v181 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v185 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41E0);
  v137 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v132 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v130 - v9;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4250);
  v148 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v131 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4260);
  v179 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v134 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4308);
  v182 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v135 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4320);
  v145 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v138 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE42B0);
  v146 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v141 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4068);
  MEMORY[0x1E0C80A78](v144);
  v142 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41C0);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v151 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v184 = (char *)&v130 - v19;
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3F00);
  MEMORY[0x1E0C80A78](v150);
  v149 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v154 = (uint64_t)&v130 - v22;
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE42A8);
  v160 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v159 = (char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v155 = (char *)&v130 - v25;
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3EA8);
  MEMORY[0x1E0C80A78](v157);
  v156 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4298);
  v167 = *(_QWORD *)(v166 - 8);
  MEMORY[0x1E0C80A78](v166);
  v161 = (char *)&v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3F10);
  MEMORY[0x1E0C80A78](v164);
  v162 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4330);
  v169 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v163 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41D0);
  v173 = *(_QWORD *)(v186 - 8);
  MEMORY[0x1E0C80A78](v186);
  v165 = (char *)&v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4288);
  v172 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  v170 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DA66CEBC();
  v133 = *(_QWORD *)(v32 - 8);
  v33 = v133;
  MEMORY[0x1E0C80A78](v32);
  v183 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v130 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v130 - v39;
  sub_1DA66CE20();
  sub_1DA66CDE4();
  v41 = *(void (**)(char *, uint64_t))(v33 + 8);
  v41(v37, v32);
  v192 = v41;
  sub_1DA66CC1C();
  _s10PodcastsUI22PreparedArtworkRequestV4with6formatAC0A10Foundation0D6FormatO_tF_0();
  v188 = type metadata accessor for LibraryImageProvider();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  sub_1DA4841D4((unint64_t *)&qword_1EDAE4160, &qword_1EDAE4170, MEMORY[0x1E0D7DC20]);
  v130 = v37;
  sub_1DA66CC58();
  v193 = v32;
  v41(v37, v32);
  v42 = v132;
  v174 = v40;
  sub_1DA66CC58();
  sub_1DA4841D4(&qword_1EDAE41D8, &qword_1EDAE41E0, MEMORY[0x1E0D7DEF0]);
  v43 = v131;
  v44 = v42;
  v45 = v136;
  sub_1DA66D4EC();
  v46 = *(void (**)(char *, uint64_t))(v137 + 8);
  v46(v44, v45);
  v46(v10, v45);
  v47 = v188;
  v48 = *(int *)(v188 + 28);
  v49 = v194;
  *(_QWORD *)&v195 = *(_QWORD *)(v194 + v48);
  v50 = MEMORY[0x1E0D7E7C0];
  sub_1DA4841D4(&qword_1EDAE4248, &qword_1EDAE4250, MEMORY[0x1E0D7E7C0]);
  sub_1DA483D94();
  v51 = v134;
  v52 = v139;
  sub_1DA66D4F8();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v43, v52);
  v148 = *(int *)(v47 + 32);
  sub_1DA4841D4(&qword_1EDAE4258, &qword_1EDAE4260, v50);
  v53 = v135;
  v54 = v140;
  sub_1DA66D4E0();
  (*(void (**)(char *, uint64_t))(v179 + 8))(v51, v54);
  sub_1DA66CC1C();
  sub_1DA4841D4(&qword_1EDAE4300, &qword_1EDAE4308, MEMORY[0x1E0D7EB38]);
  v55 = v138;
  v56 = v180;
  sub_1DA66D4BC();
  (*(void (**)(char *, uint64_t))(v182 + 8))(v53, v56);
  v182 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v57 = v185;
  sub_1DA66C97C();
  sub_1DA66D798();
  v58 = v190;
  v59 = sub_1DA66C964();
  v181 = *(_QWORD *)(v181 + 8);
  ((void (*)(char *, uint64_t))v181)(v57, v58);
  *(_QWORD *)&v195 = v59;
  v201[0] = 4;
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41B0);
  sub_1DA4841D4(&qword_1EDAE4318, &qword_1EDAE4320, MEMORY[0x1E0D7EBD0]);
  v179 = sub_1DA55B670();
  v60 = v141;
  v61 = v143;
  sub_1DA66D4C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v55, v61);
  v62 = *(void **)(v49 + v48);
  v197 = sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  v198 = &protocol witness table for MTImageStore;
  *(_QWORD *)&v195 = v62;
  v63 = v146;
  v64 = (uint64_t)v142;
  v65 = v147;
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v142, v60, v147);
  sub_1DA4813E4((uint64_t)&v195, v64 + *(int *)(v144 + 36));
  v66 = *(void (**)(char *, uint64_t))(v63 + 8);
  v67 = v62;
  v66(v60, v65);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v195);
  sub_1DA4841D4(&qword_1EDAE4060, &qword_1EDAE4068, (uint64_t)&protocol conformance descriptor for InvalidateImageStoreValueProcessingStep<A>);
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  v68 = v184;
  sub_1DA66D510();
  sub_1DA47E2F0(v64, &qword_1EDAE4068);
  v69 = sub_1DA66CE8C();
  v70 = v152;
  v71 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  v72 = v151;
  v73 = v153;
  v71(v151, v68, v153);
  v74 = v150;
  v75 = (uint64_t)v149;
  v71(&v149[*(int *)(v150 + 36)], v72, v73);
  sub_1DA4841D4(&qword_1EDAE41B8, &qword_1EDAE41C0, MEMORY[0x1E0D7DEE0]);
  swift_bridgeObjectRetain();
  v76 = v183;
  sub_1DA66D4A4();
  v77 = v130;
  sub_1DA66CE08();
  v78 = *(void (**)(char *, uint64_t))(v70 + 8);
  v78(v72, v73);
  v79 = v76;
  v80 = v193;
  v192(v79, v193);
  v152 = *(_QWORD *)(v133 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v152)(v75, v77, v80);
  *(_QWORD *)(v75 + *(int *)(v74 + 40)) = v69;
  v81 = v154;
  sub_1DA55B6CC(v75, v154);
  swift_bridgeObjectRelease();
  v78(v184, v73);
  v82 = v185;
  v83 = v194;
  sub_1DA66C97C();
  sub_1DA66D78C();
  v84 = v190;
  v85 = sub_1DA66C964();
  ((void (*)(char *, uint64_t))v181)(v82, v84);
  *(_QWORD *)&v195 = v85;
  v201[0] = 4;
  sub_1DA4841D4(&qword_1EDAE3EF8, &qword_1EDAE3F00, (uint64_t)&protocol conformance descriptor for EffectsArtworkProcessingStep<A>);
  v86 = v155;
  sub_1DA66D4C8();
  swift_release();
  sub_1DA47E2F0(v81, &qword_1EDAE3F00);
  v87 = v83 + *(int *)(v188 + 24);
  sub_1DA66CDC0();
  v89 = v88;
  v91 = v90;
  sub_1DA66CDD8();
  v93 = v92;
  sub_1DA4813E4(v87, (uint64_t)&v195);
  v94 = v160;
  v95 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
  v96 = v159;
  v97 = v158;
  v95(v159, v86, v158);
  v98 = (int *)v157;
  v99 = (uint64_t)v156;
  v95(&v156[*(int *)(v157 + 36)], v96, v97);
  sub_1DA4841D4(&qword_1EDAE42A0, &qword_1EDAE42A8, MEMORY[0x1E0D7E900]);
  v100 = v183;
  sub_1DA66D4A4();
  sub_1DA66CE98();
  v101 = *(void (**)(char *, uint64_t))(v94 + 8);
  v101(v96, v97);
  v102 = v193;
  v192(v100, v193);
  ((void (*)(uint64_t, char *, uint64_t))v152)(v99, v77, v102);
  v103 = (_QWORD *)(v99 + v98[10]);
  *v103 = v89;
  v103[1] = v91;
  *(_QWORD *)(v99 + v98[11]) = v93;
  sub_1DA4841BC(&v195, v99 + v98[12]);
  v101(v86, v97);
  sub_1DA66C97C();
  sub_1DA66D78C();
  v104 = v190;
  v105 = sub_1DA66C964();
  ((void (*)(char *, uint64_t))v181)(v82, v104);
  *(_QWORD *)&v195 = v105;
  v201[0] = 4;
  sub_1DA4841D4(&qword_1EDAE3EA0, &qword_1EDAE3EA8, (uint64_t)&protocol conformance descriptor for ResizeArtworkProcessingStep<A>);
  v106 = v161;
  sub_1DA66D4C8();
  swift_release();
  sub_1DA47E2F0(v99, &qword_1EDAE3EA8);
  sub_1DA4841D4(&qword_1EDAE4290, &qword_1EDAE4298, MEMORY[0x1E0D7E900]);
  v107 = v162;
  v108 = v166;
  sub_1DA66D4A4();
  v109 = (uint64_t)v107;
  (*(void (**)(char *, char *, uint64_t))(v167 + 32))(&v107[*(int *)(v164 + 36)], v106, v108);
  sub_1DA4841D4(&qword_1EDAE3F08, (uint64_t *)&unk_1EDAE3F10, (uint64_t)&protocol conformance descriptor for PrepareUIImageProcessingStep<A>);
  v110 = v163;
  sub_1DA66D504();
  sub_1DA47E2F0(v109, (uint64_t *)&unk_1EDAE3F10);
  sub_1DA4841D4(&qword_1EDAE4328, &qword_1EDAE4330, MEMORY[0x1E0D7EC18]);
  sub_1DA47E32C(&qword_1EDADF990, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  v111 = v165;
  v112 = v168;
  sub_1DA66D510();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v110, v112);
  type metadata accessor for AssetCaches();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  *(_QWORD *)&v195 = sub_1DA66C988();
  v201[0] = 4;
  v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE52E8);
  v114 = sub_1DA4841D4(&qword_1EDAE41C8, &qword_1EDAE41D0, MEMORY[0x1E0D7DEE0]);
  v115 = sub_1DA4841D4(&qword_1EDADFC70, (uint64_t *)&unk_1EDAE52E8, MEMORY[0x1E0D7E3B0]);
  v116 = sub_1DA47E32C((unint64_t *)&qword_1EDAE52D0, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  v117 = sub_1DA47E32C(&qword_1EDADF988, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  sub_1DA47E32C(&qword_1EDADF980, (uint64_t (*)(uint64_t))type metadata accessor for PreparedArtworkRequest, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
  v118 = v170;
  v119 = v186;
  v194 = v113;
  sub_1DA66D4C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v111, v119);
  v120 = v171;
  sub_1DA66D8B8();
  (*(void (**)(char *, uint64_t))(v172 + 8))(v118, v120);
  sub_1DA66CE74();
  *(_QWORD *)&v195 = 0;
  *((_QWORD *)&v195 + 1) = 0xE000000000000000;
  v121 = (uint64_t)v175;
  sub_1DA66CE68();
  v122 = *(_QWORD *)(v121 + 16);
  v123 = *(_QWORD *)(v121 + 24);
  v124 = *(unsigned __int8 *)(v121 + 32);
  sub_1DA47F9DC(v122, v123, *(_BYTE *)(v121 + 32));
  sub_1DA47F880(v121, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  if (v124 != 255)
  {
    sub_1DA66CC94();
    sub_1DA47F9F0(v122, v123, v124);
  }
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  v125 = (void *)_s10PodcastsUI22PreparedArtworkRequestV3keySo8NSStringCvg_0();
  v126 = objc_msgSend(v125, sel_description);
  sub_1DA66F8BC();

  sub_1DA66F988();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v195 = type metadata accessor for PreparedArtworkRequest();
  *((_QWORD *)&v195 + 1) = v186;
  v196 = v194;
  v197 = v116;
  v198 = (_UNKNOWN **)v117;
  v199 = v114;
  v200 = v115;
  swift_getOpaqueTypeConformance2();
  v127 = v177;
  sub_1DA66CC64();
  v128 = v187;
  sub_1DA66E0F8();
  swift_bridgeObjectRelease();
  sub_1DA47E2F0((uint64_t)v201, &qword_1EDAE5310);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v128, v127);
  return ((uint64_t (*)(char *, uint64_t))v192)(v174, v193);
}

void sub_1DA5597D0(uint64_t a1, os_unfair_lock_s *a2, void (*a3)(char *, uint64_t), const char *a4, uint64_t a5, int a6)
{
  uint64_t v10;
  os_unfair_lock_s *v11;

  v10 = (uint64_t)&a2[4];
  v11 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA55991C(v10, a3, a4, a5, a6);
  os_unfair_lock_unlock(v11);
}

uint64_t sub_1DA559840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66CEBC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DA5598C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1DA5597D0(a1, *(os_unfair_lock_s **)(v1 + 16), (void (*)(char *, uint64_t))(v1 + v4), *(const char **)v5, *(_QWORD *)(v5 + 8), *(unsigned __int8 *)(v5 + 16));
}

void sub_1DA55991C(uint64_t a1, void (*a2)(char *, uint64_t), const char *a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char *v30;
  char *v31;
  Class isa;
  uint64_t v33;
  NSObject *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  void (*v42)(char *, char *, uint64_t);
  uint8_t *v43;
  uint64_t v44;
  os_signpost_id_t v45;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  uint8_t *v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70[3];
  uint64_t v71;
  uint64_t v72;

  v68 = (char *)a3;
  LODWORD(v66) = a5;
  v67 = a2;
  v65 = sub_1DA66DD74();
  v5 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v55 - v9;
  v11 = sub_1DA66DDD4();
  v12 = *(NSObject **)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v55 - v16;
  v18 = sub_1DA66C454();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v21)
  {
    v56 = v20;
    v57 = v21;
    v58 = v14;
    v59 = v12;
    v63 = v7;
    v64 = v17;
    v61 = v11;
    v62 = v10;
    v60 = v5;
    v24 = v65;
    sub_1DA66CE74();
    if (v71)
    {
      __swift_project_boxed_opaque_existential_1(v70, v71);
      v25 = sub_1DA66DC90();
      v27 = v26;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
    }
    else
    {
      sub_1DA47E2F0((uint64_t)v70, &qword_1EDAE5310);
      sub_1DA66C448();
      v25 = sub_1DA66C43C();
      v27 = v28;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v56);
    }
    v29 = v66;
    sub_1DA66DDA4();
    v30 = v58;
    sub_1DA66DDA4();
    sub_1DA66DDB0();
    v31 = v62;
    sub_1DA66DD50();
    isa = v59[1].isa;
    v33 = v61;
    ((void (*)(char *, uint64_t))isa)(v30, v61);
    swift_bridgeObjectRetain_n();
    v34 = sub_1DA66DDB0();
    LODWORD(v65) = sub_1DA66FF58();
    v35 = sub_1DA670240();
    v36 = v69;
    v37 = v60;
    v66 = v25;
    v67 = (void (*)(char *, uint64_t))isa;
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      v39 = v27;
      v41 = v57;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v63, v31, v24);
LABEL_15:
      sub_1DA66DE10();
      swift_allocObject();
      v51 = sub_1DA66DE04();
      v52 = v31;
      v53 = v51;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v24);
      v67(v64, v33);
      v54 = v66;
      *v41 = v53;
      v41[1] = v54;
      v41[2] = v39;
      return;
    }
    v59 = v34;
    v38 = v63;
    if ((v29 & 1) == 0)
    {
      v39 = v27;
      if (v68)
      {
        v40 = v25;
LABEL_14:
        v42 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
        v42(v38, v31, v24);
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v70[0] = v44;
        *(_DWORD *)v43 = 136315138;
        swift_bridgeObjectRetain();
        v72 = sub_1DA49AD00(v40, v39, v70);
        sub_1DA6702C4();
        swift_bridgeObjectRelease_n();
        v45 = sub_1DA66DD5C();
        v46 = v59;
        _os_signpost_emit_with_name_impl(&dword_1DA478000, v59, (os_signpost_type_t)v65, v45, v68, "[identifier=%{name=identifier}s] LibraryImageProviderFetch", v43, 0xCu);
        swift_arrayDestroy();
        v47 = v44;
        v48 = v63;
        MEMORY[0x1DF0A0474](v47, -1, -1);
        v49 = v43;
        v31 = v62;
        MEMORY[0x1DF0A0474](v49, -1, -1);

        (*(void (**)(char *, uint64_t))(v37 + 8))(v48, v24);
        v50 = v42;
        v41 = v57;
        v33 = v61;
        v50(v48, v31, v24);
        goto LABEL_15;
      }
      goto LABEL_19;
    }
    if ((unint64_t)v68 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v68 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        swift_bridgeObjectRelease_n();
        __break(1u);
        return;
      }
      if (v68 >> 16 <= 0x10)
      {
        v40 = v25;
        v39 = v27;
        v68 = sub_1DA5C964C();
        v69 = v36;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
}

void sub_1DA559DA0(uint64_t a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, char a5)
{
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v8 = a2 + 4;
  v9 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA559E3C(v8, a3, a4, a5);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1DA559E08()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA559E2C(uint64_t a1)
{
  uint64_t v1;

  sub_1DA559DA0(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

void sub_1DA559E3C(_QWORD *a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  const char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  unint64_t v21;
  NSObject *v22;
  char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_signpost_id_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a2;
  v47 = sub_1DA66DDE0();
  v7 = *(const char **)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66DD74();
  v50 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  v15 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    v42 = v7;
    v43 = v17;
    v20 = a4;
    v44 = v16;
    v45 = v10;
    v48 = v4;
    v21 = a1[2];
    v40 = a1[1];
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v41 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v45);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v44);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    v38 = v19;
    v39 = v21;
    if ((v20 & 1) == 0)
    {
      if (v49)
      {
        v23 = v14;
        v24 = v47;
        v25 = v42;
LABEL_11:
        sub_1DA66BE60();
        sub_1DA66DE1C();
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v25 + 11))(v9, v24) == *MEMORY[0x1E0DF2190])
        {
          v28 = 0;
          v29 = 0;
          v42 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v25 + 1))(v9, v24);
          v42 = "[identifier=%{name=identifier}s] SUCCESS";
          v29 = 2;
          v28 = 1;
        }
        v30 = v45;
        v31 = v46;
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v46, v23, v45);
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v47 = (uint64_t)v23;
        v34 = v33;
        v52 = v33;
        *(_BYTE *)v32 = v29;
        *(_BYTE *)(v32 + 1) = v28;
        *(_WORD *)(v32 + 2) = 2080;
        v35 = v39;
        swift_bridgeObjectRetain();
        v51 = sub_1DA49AD00(v40, v35, &v52);
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v36 = sub_1DA66DD5C();
        _os_signpost_emit_with_name_impl(&dword_1DA478000, v22, (os_signpost_type_t)v41, v36, v49, v42, (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v34, -1, -1);
        MEMORY[0x1DF0A0474](v32, -1, -1);

        v37 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
        v37(v47, v30);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
        swift_bridgeObjectRelease();
        swift_release();
        v37((uint64_t)v31, v30);
        goto LABEL_15;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    if ((unint64_t)v49 >> 32)
    {
      __break(1u);
    }
    else
    {
      v24 = v47;
      v25 = v42;
      if (v49 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v49 >> 16 <= 0x10)
      {
        v23 = v14;
        v26 = v48;
        v27 = sub_1DA5C964C();
        v48 = v26;
        v49 = v27;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1DA55A278(uint64_t *a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v8 = *a1;
  v9 = (uint64_t)&a2[4];
  v10 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA55A2F8(v9, v8, a3, a4, a5);
  os_unfair_lock_unlock(v10);
}

void sub_1DA55A2E8(uint64_t *a1)
{
  uint64_t v1;

  sub_1DA55A278(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

void sub_1DA55A2F8(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  const char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  char v36;
  char v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_signpost_id_t v42;
  void (*v43)(NSObject *, uint64_t);
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  char v49;
  char v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  os_signpost_id_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  _QWORD *v58;
  _BYTE v59[12];
  int v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _BYTE *v67;
  uint64_t v68;
  const char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v70 = (char *)a3;
  v7 = (const char *)sub_1DA66DDE0();
  v68 = *((_QWORD *)v7 - 1);
  v69 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v59[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v59[-v11];
  v13 = sub_1DA66DD74();
  v71 = *(_QWORD *)(v13 - 8);
  v72 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = &v59[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v67 = &v59[-v17];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v59[-v19];
  v21 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v21);
  v23 = &v59[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v24);
  v29 = &v59[-v28];
  if (*v26)
  {
    v64 = v27;
    v65 = v25;
    v63 = a5;
    v30 = v26[2];
    v62 = v26[1];
    v66 = v26;
    if (!a2)
      goto LABEL_7;
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v12 = (_BYTE *)sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
LABEL_11:
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(NSObject *, uint64_t))(v71 + 8))(v15, v72);
      (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v23, v65);
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_30:
      v58 = v66;
      *v66 = 0;
      v58[1] = 0;
      v58[2] = 0;
      return;
    }
    v60 = (int)v12;
    if ((v63 & 1) == 0)
    {
      if (!v70)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        __break(1u);
LABEL_7:
        sub_1DA66DDA4();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        v15 = sub_1DA66DDB0();
        sub_1DA66DDF8();
        v23 = (_BYTE *)sub_1DA66FF4C();
        if ((sub_1DA670240() & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_release_n();

          (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v20, v72);
          (*(void (**)(NSObject *, uint64_t))(v64 + 8))(v29, v65);
          goto LABEL_13;
        }
        v61 = v30;
        if ((v63 & 1) == 0)
        {
          v31 = v69;
          v32 = v68;
          if (!v70)
          {
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            goto LABEL_11;
          }
LABEL_26:
          sub_1DA66BE60();
          sub_1DA66DE1C();
          swift_release();
          v47 = (*(uint64_t (**)(_BYTE *, const char *))(v32 + 88))(v12, v31);
          v48 = *MEMORY[0x1E0DF2190];
          v60 = (int)v23;
          if (v47 == v48)
          {
            v49 = 0;
            v50 = 0;
            v69 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(_BYTE *, const char *))(v32 + 8))(v12, v31);
            v69 = "[identifier=%{name=identifier}s] EMPTY";
            v50 = 2;
            v49 = 1;
          }
          v51 = v67;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(v67, v20, v72);
          v52 = swift_slowAlloc();
          v53 = swift_slowAlloc();
          v75 = v53;
          *(_BYTE *)v52 = v50;
          *(_BYTE *)(v52 + 1) = v49;
          *(_WORD *)(v52 + 2) = 2080;
          v54 = v61;
          swift_bridgeObjectRetain();
          v74 = sub_1DA49AD00(v62, v54, &v75);
          sub_1DA6702C4();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v55 = sub_1DA66DD5C();
          _os_signpost_emit_with_name_impl(&dword_1DA478000, v15, (os_signpost_type_t)v60, v55, v70, v69, (uint8_t *)v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v53, -1, -1);
          MEMORY[0x1DF0A0474](v52, -1, -1);

          v56 = v72;
          v57 = *(void (**)(_BYTE *, uint64_t))(v71 + 8);
          v57(v20, v72);
          (*(void (**)(NSObject *, uint64_t))(v64 + 8))(v29, v65);
          swift_bridgeObjectRelease();
          swift_release();
          v57(v51, v56);
          goto LABEL_30;
        }
        v31 = v69;
        v32 = v68;
        if (!((unint64_t)v70 >> 32))
        {
          if (v70 >> 11 == 27)
          {
LABEL_37:
            __break(1u);
            return;
          }
          if (v70 >> 16 <= 0x10)
          {
            v46 = v73;
            v70 = sub_1DA5C964C();
            v73 = v46;
            goto LABEL_26;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_18:
      v61 = v30;
      sub_1DA66BE60();
      sub_1DA66DE1C();
      swift_release();
      v35 = v68;
      v34 = v69;
      if ((*(unsigned int (**)(_BYTE *, const char *))(v68 + 88))(v9, v69) == *MEMORY[0x1E0DF2190])
      {
        v36 = 0;
        v37 = 0;
        v69 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_BYTE *, const char *))(v35 + 8))(v9, v34);
        v69 = "[identifier=%{name=identifier}s] FAILURE";
        v37 = 2;
        v36 = 1;
      }
      v38 = v67;
      (*(void (**)(_BYTE *, NSObject *, uint64_t))(v71 + 16))(v67, v15, v72);
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v75 = v40;
      *(_BYTE *)v39 = v37;
      *(_BYTE *)(v39 + 1) = v36;
      *(_WORD *)(v39 + 2) = 2080;
      v41 = v61;
      swift_bridgeObjectRetain();
      v74 = sub_1DA49AD00(v62, v41, &v75);
      sub_1DA6702C4();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      v42 = sub_1DA66DD5C();
      _os_signpost_emit_with_name_impl(&dword_1DA478000, v29, (os_signpost_type_t)v60, v42, v70, v69, (uint8_t *)v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v40, -1, -1);
      MEMORY[0x1DF0A0474](v39, -1, -1);

      v43 = *(void (**)(NSObject *, uint64_t))(v71 + 8);
      v44 = v15;
      v45 = v72;
      v43(v44, v72);
      (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v23, v65);
      swift_bridgeObjectRelease();
      swift_release();
      v43(v38, v45);
      goto LABEL_30;
    }
    if ((unint64_t)v70 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v70 >> 11 == 27)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v70 >> 16 <= 0x10)
      {
        v33 = v73;
        v70 = sub_1DA5C964C();
        v73 = v33;
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
}

void sub_1DA55AA48(os_unfair_lock_s *a1, const char *a2, uint64_t a3, char a4)
{
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;

  v7 = a1 + 4;
  v8 = a1 + 10;
  os_unfair_lock_lock(a1 + 10);
  sub_1DA55AAC0(v7, a2, a3, a4);
  os_unfair_lock_unlock(v8);
}

void sub_1DA55AAB0()
{
  uint64_t v0;

  sub_1DA55AA48(*(os_unfair_lock_s **)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void sub_1DA55AAC0(_QWORD *a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  const char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  unint64_t v21;
  NSObject *v22;
  char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_signpost_id_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a2;
  v47 = sub_1DA66DDE0();
  v7 = *(const char **)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66DD74();
  v50 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  v15 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    v42 = v7;
    v43 = v17;
    v20 = a4;
    v44 = v16;
    v45 = v10;
    v48 = v4;
    v21 = a1[2];
    v40 = a1[1];
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v41 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v45);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v44);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    v38 = v19;
    v39 = v21;
    if ((v20 & 1) == 0)
    {
      if (v49)
      {
        v23 = v14;
        v24 = v47;
        v25 = v42;
LABEL_11:
        sub_1DA66BE60();
        sub_1DA66DE1C();
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v25 + 11))(v9, v24) == *MEMORY[0x1E0DF2190])
        {
          v28 = 0;
          v29 = 0;
          v42 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(char *, uint64_t))v25 + 1))(v9, v24);
          v42 = "[identifier=%{name=identifier}s] CANCEL";
          v29 = 2;
          v28 = 1;
        }
        v30 = v45;
        v31 = v46;
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v46, v23, v45);
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v47 = (uint64_t)v23;
        v34 = v33;
        v52 = v33;
        *(_BYTE *)v32 = v29;
        *(_BYTE *)(v32 + 1) = v28;
        *(_WORD *)(v32 + 2) = 2080;
        v35 = v39;
        swift_bridgeObjectRetain();
        v51 = sub_1DA49AD00(v40, v35, &v52);
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v36 = sub_1DA66DD5C();
        _os_signpost_emit_with_name_impl(&dword_1DA478000, v22, (os_signpost_type_t)v41, v36, v49, v42, (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v34, -1, -1);
        MEMORY[0x1DF0A0474](v32, -1, -1);

        v37 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
        v37(v47, v30);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v44);
        swift_bridgeObjectRelease();
        swift_release();
        v37((uint64_t)v31, v30);
        goto LABEL_15;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    if ((unint64_t)v49 >> 32)
    {
      __break(1u);
    }
    else
    {
      v24 = v47;
      v25 = v42;
      if (v49 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v49 >> 16 <= 0x10)
      {
        v23 = v14;
        v26 = v48;
        v27 = sub_1DA5C964C();
        v48 = v26;
        v49 = v27;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

BOOL static LibraryImageProviderError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LibraryImageProviderError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t LibraryImageProviderError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA55AF88()
{
  unint64_t result;

  result = qword_1F026ABD8;
  if (!qword_1F026ABD8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for LibraryImageProviderError, &type metadata for LibraryImageProviderError);
    atomic_store(result, (unint64_t *)&qword_1F026ABD8);
  }
  return result;
}

uint64_t assignWithCopy for LibraryImageProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for AssetCaches();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[5];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  v20 = a3[7];
  v21 = *(void **)(a2 + v20);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  v23 = v21;

  v24 = a3[8];
  v25 = *(void **)(a2 + v24);
  v26 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v27 = v25;

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  sub_1DA66BE60();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for LibraryImageProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for AssetCaches();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[5];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[6];
  v21 = a3[7];
  v22 = a1 + v20;
  v23 = a2 + v20;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v25 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for LibraryImageProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for AssetCaches();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[5];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_0(a1 + v20);
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = a3[7];
  v25 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);

  v26 = a3[8];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_1DA55B3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for AssetCaches();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1DA55B494(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for AssetCaches();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

void sub_1DA55B540()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE4178)
  {
    sub_1DA66CEBC();
    sub_1DA66CDA8();
    v0 = sub_1DA66CD9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE4178);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryImageProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA55B5F0 + 4 * byte_1DA67CEE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA55B624 + 4 * asc_1DA67CEE0[v4]))();
}

uint64_t sub_1DA55B624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA55B62C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA55B634);
  return result;
}

uint64_t sub_1DA55B640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA55B648);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA55B64C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA55B654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryImageProviderError()
{
  return &type metadata for LibraryImageProviderError;
}

unint64_t sub_1DA55B670()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EDAE41A8;
  if (!qword_1EDAE41A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE41B0);
    v2 = MEMORY[0x1E0D7DD20];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7DDA0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EDAE41A8);
  }
  return result;
}

uint64_t sub_1DA55B6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA55B71C()
{
  uint64_t v0;

  v0 = sub_1DA66F40C();
  __swift_allocate_value_buffer(v0, qword_1EDAE4A08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE4A08);
  return sub_1DA66F400();
}

uint64_t static MetricsFieldExclusionRequest.xpAccountsMatch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE4A20 != -1)
    swift_once();
  v2 = sub_1DA66F40C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE4A08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

id MPModelPodcastEpisode.isVideoEpisode.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hasVideo);
}

uint64_t MPModelPodcastEpisode.showArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;

  v3 = sub_1DA66DEF4();
  v4 = objc_msgSend(v1, sel_artworkInfo, MEMORY[0x1E0C80A78](v3).n128_f64[0]);
  if (!v4)
  {
    v21 = 0u;
    v22 = 0u;
LABEL_10:
    sub_1DA480E84((uint64_t)&v21);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = sub_1DA66F754();

  sub_1DA66D5DC();
  sub_1DA6703F0();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1DA49A800((uint64_t)v20), (v8 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_1DA49A930((uint64_t)v20);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = v20[0];
    v9 = v20[1];
    sub_1DA66C058();
    swift_allocObject();
    sub_1DA66C04C();
    sub_1DA66CD24();
    sub_1DA47E32C(&qword_1EDAE24E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DBA0], MEMORY[0x1E0D7DBA8]);
    sub_1DA66C040();
    swift_release();
    v12 = (void *)v20[0];
    v13 = sub_1DA55BC88();
    v15 = v14;
    v17 = v16;
    PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)((uint64_t)v13, v14, v16, a1);

    sub_1DA4986F8(v10, v9);
    sub_1DA47F9F0((uint64_t)v13, v15, v17);
    v18 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
LABEL_11:
  v11 = type metadata accessor for NowPlayingArtwork.Data();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

id sub_1DA55BC88()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_podcast);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_identifiers);
  v4 = objc_msgSend(v3, sel_library);

  if (v4)
  {
    v5 = objc_msgSend(v4, sel_databaseID);
    swift_unknownObjectRelease();
    v4 = (id)sub_1DA66F8BC();

  }
  else
  {

  }
  return v4;
}

uint64_t MPModelPodcastEpisode.episodeArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;

  v2 = v1;
  v4 = sub_1DA66DEF4();
  v5 = objc_msgSend(v1, sel_artworkInfo, MEMORY[0x1E0C80A78](v4).n128_f64[0]);
  if (!v5)
  {
    v23 = 0u;
    v24 = 0u;
LABEL_10:
    sub_1DA480E84((uint64_t)&v23);
    goto LABEL_11;
  }
  v6 = v5;
  v7 = sub_1DA66F754();

  sub_1DA66D5F4();
  sub_1DA6703F0();
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1DA49A800((uint64_t)v22), (v9 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1DA49A930((uint64_t)v22);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v12 = type metadata accessor for NowPlayingArtwork.Data();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  v11 = v22[0];
  v10 = v22[1];
  sub_1DA66C058();
  swift_allocObject();
  sub_1DA66C04C();
  sub_1DA66CD24();
  sub_1DA47E32C(&qword_1EDAE24E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DBA0], MEMORY[0x1E0D7DBA8]);
  sub_1DA66C040();
  swift_release();
  v14 = (void *)v22[0];
  v15 = objc_msgSend(v2, sel_identifiers);
  v16 = objc_msgSend(v15, sel_library);

  if (v16)
  {
    v17 = objc_msgSend(v16, sel_databaseID);
    swift_unknownObjectRelease();
    v16 = (id)sub_1DA66F8BC();
    v19 = v18;

    v20 = 0;
  }
  else
  {
    v19 = 0;
    v20 = -1;
  }
  PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)((uint64_t)v16, v19, v20, a1);

  sub_1DA4986F8(v11, v10);
  sub_1DA47F9F0((uint64_t)v16, v19, v20);
  v21 = type metadata accessor for NowPlayingArtwork.Data();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 0, 1, v21);
}

uint64_t MPModelPodcastEpisode.showPageTallArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  uint64_t v18;
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;

  v3 = sub_1DA66DEF4();
  v4 = objc_msgSend(v1, sel_artworkInfo, MEMORY[0x1E0C80A78](v3).n128_f64[0]);
  if (!v4)
  {
    v21 = 0u;
    v22 = 0u;
LABEL_10:
    sub_1DA480E84((uint64_t)&v21);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = sub_1DA66F754();

  sub_1DA66D5E8();
  sub_1DA6703F0();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1DA49A800((uint64_t)v20), (v8 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_1DA49A930((uint64_t)v20);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = v20[0];
    v9 = v20[1];
    sub_1DA66C058();
    swift_allocObject();
    sub_1DA66C04C();
    sub_1DA66CD24();
    sub_1DA47E32C(&qword_1EDAE24E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DBA0], MEMORY[0x1E0D7DBA8]);
    sub_1DA66C040();
    swift_release();
    v12 = (void *)v20[0];
    v13 = sub_1DA55BC88();
    v15 = v14;
    v17 = v16;
    PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)((uint64_t)v13, v14, v16, a1);

    sub_1DA4986F8(v10, v9);
    sub_1DA47F9F0((uint64_t)v13, v15, v17);
    v18 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 0, 1, v18);
  }
LABEL_11:
  v11 = type metadata accessor for NowPlayingArtwork.Data();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t MPModelPodcastEpisode.chapterArtworkData(at:)@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = objc_msgSend(v1, sel_artworkCatalog);
  if (!v3)
    goto LABEL_5;
  v4 = v3;
  if (!objc_msgSend(v1, sel_shouldShowChapterArtwork))
  {

LABEL_5:
    v9 = type metadata accessor for NowPlayingArtwork.Data();
    v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v7 = a1;
    v8 = 1;
    return v6(v7, v8, 1, v9);
  }
  *a1 = v4;
  v5 = type metadata accessor for NowPlayingArtwork.Data();
  swift_storeEnumTagMultiPayload();
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7 = a1;
  v8 = 0;
  v9 = v5;
  return v6(v7, v8, 1, v9);
}

id sub_1DA55C77C()
{
  id *v0;

  return objc_msgSend(*v0, sel_hasVideo);
}

uint64_t sub_1DA55C79C@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showArtworkData.getter(a1);
}

uint64_t sub_1DA55C7BC@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.episodeArtworkData.getter(a1);
}

uint64_t sub_1DA55C7DC@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showPageTallArtworkData.getter(a1);
}

uint64_t sub_1DA55C7FC@<X0>(_QWORD *a1@<X8>)
{
  void **v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  v4 = objc_msgSend(v3, sel_artworkCatalog);
  if (!v4)
    goto LABEL_5;
  v5 = v4;
  if ((objc_msgSend(v3, sel_shouldShowChapterArtwork) & 1) == 0)
  {

LABEL_5:
    v10 = type metadata accessor for NowPlayingArtwork.Data();
    v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a1;
    v9 = 1;
    return v7(v8, v9, 1, v10);
  }
  *a1 = v5;
  v6 = type metadata accessor for NowPlayingArtwork.Data();
  swift_storeEnumTagMultiPayload();
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v8 = a1;
  v9 = 0;
  v10 = v6;
  return v7(v8, v9, 1, v10);
}

unint64_t sub_1DA55C8B8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66D5C4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0];
  sub_1DA47E32C((unint64_t *)&qword_1F026E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0], MEMORY[0x1E0D7E5E0]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, (unint64_t *)&unk_1F026E440, MEMORY[0x1E0D7E5E8]);
}

unint64_t sub_1DA55C950(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66FDF0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7EFB0];
  sub_1DA47E32C(&qword_1EDAE4BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7EFB0], MEMORY[0x1E0D7EFC0]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1EDAE4BF0, MEMORY[0x1E0D7EFC8]);
}

unint64_t sub_1DA55C9E8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66C4E4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00];
  sub_1DA47E32C(&qword_1EDAE3AD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00], MEMORY[0x1E0CB0F10]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, (unint64_t *)&qword_1EDAE0168, MEMORY[0x1E0CB0F18]);
}

unint64_t sub_1DA55CA80(uint64_t a1)
{
  uint64_t v2;

  sub_1DA670798();
  type metadata accessor for CFString(0);
  sub_1DA47E32C((unint64_t *)&unk_1EDAE5350, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1DA677BB8);
  sub_1DA66C670();
  v2 = sub_1DA6707C8();
  return sub_1DA55D1F4(a1, v2);
}

uint64_t sub_1DA55CB08(uint64_t a1)
{
  return sub_1DA55CF4C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1DA55D334);
}

unint64_t sub_1DA55CB14(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1DA670798();
  sub_1DA6707A4();
  v2 = sub_1DA6707C8();
  return sub_1DA55D3D0(v1, v2);
}

unint64_t sub_1DA55CB70(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA670198();
  return sub_1DA55D608(a1, v2, (unint64_t *)&qword_1EDAE4C00);
}

unint64_t sub_1DA55CBBC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA67078C();
  return sub_1DA55D334(a1, v2);
}

unint64_t sub_1DA55CBEC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a3 & 1;
  sub_1DA670798();
  sub_1DA66D774();
  v6 = sub_1DA6707C8();
  return sub_1DA55D48C(a1, a2, v5, v6);
}

unint64_t sub_1DA55CC64(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66EF14();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D40048];
  sub_1DA47E32C(&qword_1EDAE4908, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40048], MEMORY[0x1E0D40058]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1EDAE4910, MEMORY[0x1E0D40060]);
}

unint64_t sub_1DA55CCFC(uint64_t a1)
{
  uint64_t v2;

  sub_1DA670798();
  sub_1DA66CEBC();
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  sub_1DA66F7FC();
  v2 = sub_1DA6707C8();
  return sub_1DA55D718(a1, v2);
}

unint64_t sub_1DA55CD84(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66CEBC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28];
  sub_1DA47E32C(&qword_1EDAE4188, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DD28], MEMORY[0x1E0D7DD40]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1F026ABF8, MEMORY[0x1E0D7DD48]);
}

unint64_t sub_1DA55CE1C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66C454();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1DA47E32C(&qword_1EDAE4F90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1EDAE4F98, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1DA55CEB4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66CA3C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D848];
  sub_1DA47E32C((unint64_t *)&unk_1F026E890, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7D848], MEMORY[0x1E0D7D858]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1F026ABF0, MEMORY[0x1E0D7D860]);
}

uint64_t sub_1DA55CF4C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;

  sub_1DA670798();
  sub_1DA6707BC();
  v3 = sub_1DA6707C8();
  return a2(a1, v3);
}

unint64_t sub_1DA55CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DA670798();
  sub_1DA6707A4();
  if (a2)
    sub_1DA66F94C();
  v4 = sub_1DA6707C8();
  return sub_1DA55D810(a1, a2, v4);
}

unint64_t sub_1DA55D02C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1DA66EFB0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D40198];
  sub_1DA47E32C(&qword_1EDAE4930, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40198], MEMORY[0x1E0D401A8]);
  v3 = sub_1DA66F7F0();
  return sub_1DA55D0C4(a1, v3, v2, &qword_1EDAE4938, MEMORY[0x1E0D401B0]);
}

unint64_t sub_1DA55D0C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      sub_1DA47E32C(v22, v21, v23);
      v18 = sub_1DA66F850();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1DA55D1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1DA47E32C((unint64_t *)&unk_1EDAE5350, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1DA677BB8);
    v7 = v6;
    v8 = sub_1DA66C664();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_1DA66C664();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1DA55D334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DA55D3D0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1DA55D48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v8 = *(_QWORD *)(v4 + 48) + 24 * i;
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(_BYTE *)(v8 + 16);
    sub_1DA5242E8(*(_QWORD *)v8, v10, v11);
    v12 = sub_1DA66D768();
    sub_1DA5242F8(v9, v10, v11);
    if ((v12 & 1) == 0)
    {
      v13 = ~v6;
      for (i = (i + 1) & v13; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
      {
        v14 = *(_QWORD *)(v4 + 48) + 24 * i;
        v15 = *(_QWORD *)v14;
        v16 = *(_QWORD *)(v14 + 8);
        v17 = *(_BYTE *)(v14 + 16);
        sub_1DA5242E8(*(_QWORD *)v14, v16, v17);
        v18 = sub_1DA66D768();
        sub_1DA5242F8(v15, v16, v17);
        if ((v18 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1DA55D608(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1DA47D774(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1DA6701A4();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1DA6701A4();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1DA55D718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v5 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1DA481308(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      v13 = MEMORY[0x1DF09B818](v8, a1);
      sub_1DA4ED998((uint64_t)v8);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1DA55D810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1DA6706D8() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

_QWORD *sub_1DA55D8D8(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1DA6705A0())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1DF09EE48](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_assetURL);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1DA66F8BC();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1DA4981C8(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1DA4981C8((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DA55DA6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t i;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  v14 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v12 = v5;
    v13 = v2;
    v7 = a2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      if (objc_msgSend(v7, sel_itemWithPersistentID_, *(_QWORD *)(a1 + 8 * i + 32), v12, v13))
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
    }
    swift_bridgeObjectRelease();
    v9 = v14;
  }
  else
  {
    v10 = a2;
    v9 = MEMORY[0x1E0DEE9D8];
  }

  swift_release();
  return v9;
}

unint64_t sub_1DA55DBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  char *v22;
  char *v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v23 = (char *)v21 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v21[2] = v1;
  swift_bridgeObjectRetain();
  v21[1] = a1;
  v13 = a1 + 40;
  v14 = MEMORY[0x1E0DEE9D8];
  v22 = v9;
  do
  {
    swift_bridgeObjectRetain();
    sub_1DA66C334();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1DA4ED9D4((uint64_t)v5);
    }
    else
    {
      v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v16 = v23;
      v15(v23, v5, v6);
      v15(v9, v16, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1DA540304(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
        v14 = sub_1DA540304(v17 > 1, v18 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v18 + 1;
      v19 = v14
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + *(_QWORD *)(v7 + 72) * v18;
      v9 = v22;
      v15((char *)v19, v22, v6);
    }
    v13 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t MediaSpaceCalculator.init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD v12[7];

  v0 = sub_1DA66C358();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_managedAssetsDirectoryURL);
  sub_1DA66C304();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v8 = (void *)v12[2];
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  sub_1DA66FE5C();
  v9 = objc_msgSend(v8, sel_loggingContext);
  sub_1DA47D774(0, &qword_1EDAE2890);
  sub_1DA66EDDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4120);
  sub_1DA66EDDC();
  v10 = sub_1DA66D654();
  sub_1DA66BE60();
  sub_1DA66D648();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v10;
}

uint64_t sub_1DA55DFC0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v2;
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  result = a2;
  v8 = (void *)result;
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v6 == v9)
    {

      swift_release();
      swift_bridgeObjectRelease();
      return v10;
    }
    if (v9 >= *(_QWORD *)(a1 + 16))
      break;
    v11 = *(_QWORD *)(a1 + 8 * v9++ + 32);
    result = (uint64_t)objc_msgSend(v8, sel_itemExistsWithPersistentID_, v11);
    if ((_DWORD)result)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v14 = v3;
      if ((result & 1) == 0)
        result = sub_1DA509EA4(0, *(_QWORD *)(v10 + 16) + 1, 1);
      v13 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      if (v13 >= v12 >> 1)
        result = sub_1DA509EA4(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v10 + 16) = v13 + 1;
      *(_QWORD *)(v10 + 8 * v13 + 32) = v11;
      v3 = v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t static MediaSpaceCalculator.spaceOccupied(by:managedObjectContext:mediaLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA55E12C()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v3;

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnDesktop))
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[7] = (uint64_t)v1;
    *v1 = v0;
    v1[1] = sub_1DA55E1DC;
    return sub_1DA55E26C(v0[2], v0[3], v0[4]);
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[8] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = sub_1DA55E224;
    return sub_1DA55E714(v0[2], v0[3], v0[4], v0[5]);
  }
}

uint64_t sub_1DA55E1DC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA55E224()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA55E26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_1DA66C358();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v3[9] = swift_task_alloc();
  v5 = sub_1DA670078();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA55E31C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = swift_allocObject();
  v0[13] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[14] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AC20);
  *v8 = v0;
  v8[1] = sub_1DA55E404;
  return sub_1DA67009C();
}

uint64_t sub_1DA55E404()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[12], v2[10]);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA55E488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, _QWORD);
  void (*v12)(_QWORD, _QWORD);
  void (*v14)(uint64_t, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD v23[2];

  v1 = *(_QWORD *)(v0 + 16);
  v23[0] = 0;
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 56);
  if (!v2)
  {
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
LABEL_6:
    v9(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 48));
    goto LABEL_7;
  }
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22 = *(_QWORD *)(v3 + 72);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  v21 = v5;
  v5(v7, v1 + v4, v8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v9(v7, 0, 1, v8);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v20(v7, 1, v8) != 1)
  {
    v10 = *(_QWORD *)(v0 + 64);
    v11 = *(void (**)(uint64_t, _QWORD, _QWORD))(v3 + 32);
    v11(v10, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    sub_1DA55EC1C(v23, v10);
    v12 = *(void (**)(_QWORD, _QWORD))(v3 + 8);
    if (v6)
    {
      v12(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
      return swift_bridgeObjectRelease();
    }
    v14 = v11;
    v12(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    v15 = v2 - 1;
    if (v15)
    {
      v16 = v1 + v22 + v4;
      while (1)
      {
        v17 = *(_QWORD *)(v0 + 72);
        v18 = *(_QWORD *)(v0 + 48);
        v21(v17, v16, v18);
        v9(v17, 0, 1, v18);
        if (v20(v17, 1, v18) == 1)
          goto LABEL_7;
        v19 = *(_QWORD *)(v0 + 64);
        v14(v19, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
        sub_1DA55EC1C(v23, v19);
        v12(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
        v16 += v22;
        if (!--v15)
          goto LABEL_6;
      }
    }
    goto LABEL_6;
  }
LABEL_7:
  swift_bridgeObjectRelease_n();
  sub_1DA66CBBC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55E6CC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55E714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_1DA670078();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA55E778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = swift_allocObject();
  v0[10] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AC30);
  *v8 = v0;
  v8[1] = sub_1DA55E860;
  return sub_1DA67009C();
}

uint64_t sub_1DA55E860()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[8] + 8))(v2[9], v2[7]);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA55E8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if ((v5 & 0x8000000000000000) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1DA5402F8(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_1DA5402F8((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v8 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();
  v9 = v8;
  v10 = sub_1DA55DFC0((uint64_t)v4, v9);
  v11 = v9;
  v12 = sub_1DA55DA6C(v10, v11);
  swift_bridgeObjectRelease();

  v13 = _sSo14MPMediaLibraryC10PodcastsUIE4size2ofSiSaySo0A4ItemCG_tF_0(v12);
  swift_bridgeObjectRelease();
  if (v13 < 0)
    return sub_1DA670564();
  sub_1DA66CBBC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55EAC4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA55EAF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;

  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = sub_1DA516DE0(result);
    result = swift_bridgeObjectRelease();
    *a1 = v4;
  }
  return result;
}

unint64_t sub_1DA55EB74@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  _QWORD *v4;
  unint64_t v5;

  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = sub_1DA55D8D8(result);
    swift_bridgeObjectRelease();
    v5 = sub_1DA55DBBC((uint64_t)v4);
    result = swift_bridgeObjectRelease();
    *a1 = v5;
  }
  return result;
}

unint64_t sub_1DA55EC04@<X0>(unint64_t *a1@<X8>)
{
  return sub_1DA55EB74(a1);
}

uint64_t sub_1DA55EC1C(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  _BYTE v29[12];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = sub_1DA66C358();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1DA66DEF4();
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1DA66CBE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DA66C274();
  if (v2)
  {
    sub_1DA66DED0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v34 + 16))(v7, a2, v35);
    v15 = v2;
    v16 = v2;
    v17 = sub_1DA66DEDC();
    v18 = sub_1DA66FDA8();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v37 = v31;
      *(_DWORD *)v20 = 136315394;
      v30 = v19;
      v36 = (uint64_t)v2;
      v21 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
      v22 = sub_1DA66F904();
      v32 = v8;
      v36 = sub_1DA49AD00(v22, v23, &v37);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      *(_WORD *)(v20 + 12) = 2080;
      v24 = sub_1DA66C298();
      v36 = sub_1DA49AD00(v24, v25, &v37);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v7, v35);
      _os_log_impl(&dword_1DA478000, v17, (os_log_type_t)v30, "Failed to compute file size of file (%s: '%s'", (uint8_t *)v20, 0x16u);
      v26 = v31;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v26, -1, -1);
      MEMORY[0x1DF0A0474](v20, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v10, v32);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v7, v35);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v10, v8);
    }
  }
  else
  {
    v28 = sub_1DA66CBC8();
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    if (__CFADD__(*a1, v28))
      __break(1u);
    else
      *a1 += v28;
  }
  return result;
}

unint64_t sub_1DA55EF68@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA55EAF8(a1);
}

uint64_t sub_1DA55EF80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t DebugLibraryStorageTipSuggestedLimitIntentImplementation.perform(_:objectGraph:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[10] = a1;
  v2 = sub_1DA66DEF4();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1E90);
  v3 = (_QWORD *)swift_task_alloc();
  v1[16] = v3;
  *v3 = v1;
  v3[1] = sub_1DA55F06C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA55F06C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA55F0D0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v20;
  os_log_type_t v21;
  NSObject *v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  os_log_type_t type;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  swift_getObjectType();
  if (qword_1EDAE48F0 != -1)
    swift_once();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4900);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EDAEAB58);
  sub_1DA52A3C8();
  sub_1DA66ED34();
  v2 = *(NSObject **)(v0 + 48);
  if (!objc_msgSend((id)objc_opt_self(), sel_isRunningOnInternalOS))
  {
    swift_unknownObjectRelease();

LABEL_12:
    v3 = 0;
    v17 = 4;
    goto LABEL_13;
  }
  if (!v2)
  {
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  v3 = (uint64_t)-[NSObject longLongValue](v2, sel_longLongValue);
  v31 = sub_1DA66FFAC();
  sub_1DA66DED0();
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    *(_QWORD *)(v0 + 72) = v3;
    sub_1DA6702C4();
    _os_log_impl(&dword_1DA478000, v4, v5, "Using UserDefault override value for storage tip level: %lld", v6, 0xCu);
    MEMORY[0x1DF0A0474](v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);

  v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v7, v9);
  if (v3 < 0)
  {
    sub_1DA66DED0();
    v20 = sub_1DA66DEDC();
    v21 = sub_1DA66FD90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = v2;
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1DA478000, v20, v21, "Recommending hiding tip", v23, 2u);
      MEMORY[0x1DF0A0474](v23, -1, -1);
      v2 = v20;
      v20 = v22;
    }

    swift_unknownObjectRelease();
    v10(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    v17 = 0;
    v3 = v31;
  }
  else
  {
    sub_1DA66DED0();
    v11 = sub_1DA66DEDC();
    v12 = sub_1DA66FD90();
    v13 = os_log_type_enabled(v11, v12);
    v30 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 104);
    if (v13)
    {
      type = v12;
      v14 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v34 = v29;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)(v0 + 56) = v3;
      type metadata accessor for MTPodcastEpisodeLimit(0);
      v15 = sub_1DA66F904();
      *(_QWORD *)(v0 + 64) = sub_1DA49AD00(v15, v16, &v34);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v11, type, "Recommending %s episode level", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v29, -1, -1);
      MEMORY[0x1DF0A0474](v14, -1, -1);

      v10(v32, v30);
    }
    else
    {

      v10(v32, v30);
    }
    if (qword_1EDAE48E8 != -1)
      swift_once();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA0);
    __swift_project_value_buffer(v24, (uint64_t)qword_1EDAEABC0);
    sub_1DA66ED34();
    v25 = *(void **)(v0 + 40);
    if (v25)
    {
      v26 = *(_QWORD *)(v0 + 32);
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = v26;
      v27._object = v25;
      EpisodeLimitSuggestion.DisplayCondition.init(rawValue:)(v27);

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v33;
      if (v33 == 4)
        v17 = 1;
    }
    else
    {

      swift_unknownObjectRelease();
      v17 = 1;
    }
  }
LABEL_13:
  v18 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)v18 = v3;
  *(_BYTE *)(v18 + 8) = v17;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55F5A4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55F5EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4AD77C;
  return DebugLibraryStorageTipSuggestedLimitIntentImplementation.perform(_:objectGraph:)(a1);
}

uint64_t sub_1DA55F644@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1DA55F670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE3FC0;
  if (!qword_1EDAE3FC0)
  {
    v1 = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for LibraryStorageTipSuggestedLimitIntent, v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE3FC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugLibraryStorageTipSuggestedLimitIntentImplementation()
{
  return &type metadata for DebugLibraryStorageTipSuggestedLimitIntentImplementation;
}

id UpdateEpisodeDownloadBehaviorImplementation.managedObjectContext.getter()
{
  id *v0;

  return *v0;
}

uint64_t UpdateEpisodeDownloadBehaviorImplementation.intentDispatcher.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 8, a1);
}

uint64_t UpdateEpisodeDownloadBehaviorImplementation.intent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t UpdateEpisodeDownloadBehaviorImplementation.objectGraph.getter()
{
  return sub_1DA66BE60();
}

uint64_t UpdateEpisodeDownloadBehaviorImplementation.init(asPartOf:performing:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  id v11;

  v5 = *a2;
  v6 = a2[1];
  v7 = sub_1DA640738(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AC50);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 16) = v7;
  a3[8] = a1;
  a3[9] = v8;
  a3[6] = v5;
  a3[7] = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66BE60();
  sub_1DA66EDDC();
  v9 = objc_msgSend(v11, sel_privateQueueContext);
  swift_unknownObjectRelease();
  *a3 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDDC();
  return swift_release();
}

uint64_t UpdateEpisodeDownloadBehaviorImplementation.perform()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[38] = v0;
  v2 = sub_1DA66DEF4();
  v1[39] = v2;
  v1[40] = *(_QWORD *)(v2 - 8);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA55F848()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 304);
  sub_1DA66DED0();
  sub_1DA5606D4(v1, v0 + 16);
  sub_1DA5606D4(v1, v0 + 96);
  v2 = sub_1DA66DEDC();
  v3 = sub_1DA66FD90();
  if (os_log_type_enabled(v2, v3))
  {
    v18 = *(_QWORD *)(v0 + 320);
    v19 = *(_QWORD *)(v0 + 312);
    v20 = *(_QWORD *)(v0 + 336);
    v4 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 72);
    type metadata accessor for MTEpisodeDownloadBehavior(0);
    v5 = sub_1DA66F904();
    *(_QWORD *)(v0 + 288) = sub_1DA49AD00(v5, v6, &v21);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA560708((id *)(v0 + 16));
    *(_WORD *)(v4 + 12) = 2080;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x1DF09E488](v7, MEMORY[0x1E0D7EDE0]);
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 296) = sub_1DA49AD00(v8, v10, &v21);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA560708((id *)(v0 + 96));
    _os_log_impl(&dword_1DA478000, v2, v3, "Updating episodes to new download behavior (%s: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v11(v20, v19);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 320);
    sub_1DA560708((id *)(v0 + 16));
    sub_1DA560708((id *)(v0 + 96));

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  *(_QWORD *)(v0 + 344) = v11;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v15;
  *v15 = v0;
  v15[1] = sub_1DA55FABC;
  return sub_1DA55FD90();
}

uint64_t sub_1DA55FABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA55FB34()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 304);
  sub_1DA66DED0();
  sub_1DA5606D4(v1, v0 + 176);
  v2 = sub_1DA66DEDC();
  v3 = sub_1DA66FDC0();
  if (os_log_type_enabled(v2, v3))
  {
    v15 = *(_QWORD *)(v0 + 328);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v14 = *(_QWORD *)(v0 + 312);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AC68);
    sub_1DA66CBF8();
    type metadata accessor for MTEpisodeDownloadBehavior(0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B30);
    sub_1DA560734();
    v6 = sub_1DA66F760();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = sub_1DA49AD00(v6, v8, &v17);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA560708((id *)(v0 + 176));
    _os_log_impl(&dword_1DA478000, v2, v3, "Mass-updated download behaviors. Prior behaviors: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v5, -1, -1);
    MEMORY[0x1DF0A0474](v4, -1, -1);

    v16(v15, v14);
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v10 = *(_QWORD *)(v0 + 328);
    v11 = *(_QWORD *)(v0 + 312);
    sub_1DA560708((id *)(v0 + 176));

    v9(v10, v11);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AC68);
  sub_1DA66CBF8();
  v12 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_1DA55FD90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  v2 = sub_1DA670078();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA55FDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  sub_1DA5606D4(*(_QWORD *)(v0 + 96), v0 + 16);
  v4 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 128) = v4;
  v5 = *(_OWORD *)(v0 + 64);
  v4[3] = *(_OWORD *)(v0 + 48);
  v4[4] = v5;
  v4[5] = *(_OWORD *)(v0 + 80);
  v6 = *(_OWORD *)(v0 + 32);
  v4[1] = *(_OWORD *)(v0 + 16);
  v4[2] = v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v7;
  *v7 = v0;
  v7[1] = sub_1DA55FEC8;
  return sub_1DA67009C();
}

uint64_t sub_1DA55FEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA55FF5C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA55FF90()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA55FFC4(void **a1)
{
  uint64_t v1;
  void *v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *a1;
  result = sub_1DA67006C();
  if (!v1)
  {
    v4 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
          __break(1u);
        for (i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v7 = (id)MEMORY[0x1DF09EE48](i, v4);
          else
            v7 = *(id *)(v4 + 8 * i + 32);
          v8 = v7;
          sub_1DA560148(v7);

        }
      }
    }
    swift_bridgeObjectRelease();
    v10[0] = 0;
    if (objc_msgSend(v2, sel_save_, v10))
    {
      return (unint64_t)v10[0];
    }
    else
    {
      v9 = v10[0];
      sub_1DA66C1FC();

      return swift_willThrow();
    }
  }
  return result;
}

id sub_1DA560148(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  os_unfair_lock_s *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37[2];
  id v38[10];

  v2 = v1;
  v4 = sub_1DA66DEF4();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_uuid, v9);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1DA66F8BC();
    v16 = v15;

  }
  else
  {
    v17 = objc_msgSend(a1, sel_objectID);
    v18 = objc_msgSend(v17, sel_URIRepresentation);

    sub_1DA66C304();
    v14 = sub_1DA66C298();
    v16 = v19;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  sub_1DA66DED0();
  sub_1DA5606D4(v2, (uint64_t)v38);
  swift_bridgeObjectRetain_n();
  v20 = sub_1DA66DEDC();
  v21 = sub_1DA66FD90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v34 = v2;
    v24 = v23;
    v37[0] = v23;
    *(_DWORD *)v22 = 136315394;
    swift_bridgeObjectRetain();
    v36 = (id)sub_1DA49AD00(v14, v16, v37);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    v36 = v38[7];
    type metadata accessor for MTEpisodeDownloadBehavior(0);
    v33 = v4;
    v25 = sub_1DA66F904();
    v36 = (id)sub_1DA49AD00(v25, v26, v37);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA560708(v38);
    _os_log_impl(&dword_1DA478000, v20, v21, "Updating download behavior of episode (%s to %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    v27 = v24;
    v2 = v34;
    MEMORY[0x1DF0A0474](v27, -1, -1);
    MEMORY[0x1DF0A0474](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v33);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1DA560708(v38);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
  }
  v28 = objc_msgSend(a1, sel_downloadBehavior);
  swift_bridgeObjectRelease();
  v29 = *(os_unfair_lock_s **)(v2 + 72);
  v30 = v29 + 4;
  v31 = v29 + 6;
  os_unfair_lock_lock(v29 + 6);
  sub_1DA5604C8(v30, (uint64_t)v28, a1);
  os_unfair_lock_unlock(v31);
  return objc_msgSend(a1, sel_setDownloadBehavior_, *(_QWORD *)(v2 + 56));
}

uint64_t sub_1DA5604C8(_QWORD **a1, uint64_t a2, id a3)
{
  id v5;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v5 = objc_msgSend(a3, sel_objectID);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *a1;
  v21 = *a1;
  *a1 = (_QWORD *)0x8000000000000000;
  v9 = sub_1DA55CB08(a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    result = (uint64_t)sub_1DA540318(0, v7[2] + 1, 1, v7);
    v7 = (_QWORD *)result;
    a1[v9] = (_QWORD *)result;
    goto LABEL_10;
  }
  v13 = v8;
  if (v7[3] >= v12)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DA57C158();
      v7 = v21;
    }
  }
  else
  {
    sub_1DA579410(v12, isUniquelyReferenced_nonNull_native);
    v7 = v21;
    v14 = sub_1DA55CB08(a2);
    if ((v13 & 1) != (v15 & 1))
    {
      type metadata accessor for MTEpisodeDownloadBehavior(0);
      result = sub_1DA670744();
      __break(1u);
      return result;
    }
    v9 = v14;
  }
  *a1 = v7;
  swift_bridgeObjectRelease();
  v16 = *a1;
  if ((v13 & 1) == 0)
    sub_1DA538A90(v9, a2, MEMORY[0x1E0DEE9D8], *a1);
  a1 = (_QWORD **)v16[7];
  v7 = a1[v9];
  result = swift_isUniquelyReferenced_nonNull_native();
  a1[v9] = v7;
  if ((result & 1) == 0)
    goto LABEL_14;
LABEL_10:
  v19 = v7[2];
  v18 = v7[3];
  if (v19 >= v18 >> 1)
  {
    result = (uint64_t)sub_1DA540318((_QWORD *)(v18 > 1), v19 + 1, 1, v7);
    v7 = (_QWORD *)result;
    a1[v9] = (_QWORD *)result;
  }
  v7[2] = v19 + 1;
  v20 = &v7[3 * v19];
  v20[4] = v5;
  v20[5] = 0;
  *((_BYTE *)v20 + 48) = 2;
  return result;
}

uint64_t sub_1DA56068C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1DA527068;
  return UpdateEpisodeDownloadBehaviorImplementation.perform()();
}

uint64_t sub_1DA5606D4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UpdateEpisodeDownloadBehaviorImplementation(a2, a1);
  return a2;
}

id *sub_1DA560708(id *a1)
{
  destroy for UpdateEpisodeDownloadBehaviorImplementation(a1);
  return a1;
}

unint64_t sub_1DA560734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026AC78[0];
  if (!qword_1F026AC78[0])
  {
    type metadata accessor for MTEpisodeDownloadBehavior(255);
    result = MEMORY[0x1DF0A039C](&unk_1DA677DBC, v1);
    atomic_store(result, qword_1F026AC78);
  }
  return result;
}

unint64_t sub_1DA560780()
{
  unint64_t result;

  result = qword_1EDAE3F50;
  if (!qword_1EDAE3F50)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UpdateEpisodeDownloadBehavior, &type metadata for UpdateEpisodeDownloadBehavior);
    atomic_store(result, (unint64_t *)&qword_1EDAE3F50);
  }
  return result;
}

uint64_t destroy for UpdateEpisodeDownloadBehaviorImplementation(id *a1)
{

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for UpdateEpisodeDownloadBehaviorImplementation(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  v13 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRetain();
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

uint64_t assignWithCopy for UpdateEpisodeDownloadBehaviorImplementation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1DA66BE60();
  swift_release();
  return a1;
}

uint64_t assignWithTake for UpdateEpisodeDownloadBehaviorImplementation(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorImplementation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateEpisodeDownloadBehaviorImplementation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateEpisodeDownloadBehaviorImplementation()
{
  return &type metadata for UpdateEpisodeDownloadBehaviorImplementation;
}

uint64_t sub_1DA560A58()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1DA560A9C()
{
  uint64_t v0;

  return sub_1DA55FFC4((void **)(v0 + 16));
}

void AMPCFStringInlineBuffer.character(at:)(int64_t a1)
{
  uint64_t v1;
  int64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  CFRange v13;
  CFRange v14;

  if ((a1 & 0x8000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v1 + 288);
    if (v3 > a1)
    {
      v4 = *(_QWORD *)(v1 + 264);
      if (v4)
      {
        v5 = *(_WORD *)(v4 + 2 * (*(_QWORD *)(v1 + 280) + a1));
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 272);
        if (v6)
        {
          v5 = *(char *)(v6 + *(_QWORD *)(v1 + 280) + a1);
        }
        else
        {
          if (*(_QWORD *)(v1 + 304) <= a1 || (v7 = *(_QWORD *)(v1 + 296), v7 > a1))
          {
            v8 = a1 - 4;
            if ((unint64_t)a1 < 4)
              v8 = 0;
            if (v8 + 128 < v3)
              v3 = v8 + 128;
            *(_QWORD *)(v1 + 296) = v8;
            *(_QWORD *)(v1 + 304) = v3;
            v13.location = *(_QWORD *)(v1 + 280) + v8;
            v13.length = v3 - v8;
            CFStringGetCharacters(*(CFStringRef *)(v1 + 256), v13, (UniChar *)v1);
            v7 = *(_QWORD *)(v1 + 296);
          }
          v5 = *(_WORD *)(v1 + 2 * (a1 - v7));
        }
      }
      if ((unsigned __int16)((unsigned __int16)(v5 + 9216) >> 10) >= 0x3Fu)
      {
        v9 = *(_QWORD *)(v1 + 288);
        if (__OFSUB__(v9, 1))
        {
          __break(1u);
        }
        else if (v9 - 1 > a1)
        {
          v10 = a1 + 1;
          if (v9 > a1 + 1 && !*(_QWORD *)(v1 + 264) && !*(_QWORD *)(v1 + 272))
          {
            if (*(_QWORD *)(v1 + 304) <= v10 || (v11 = *(_QWORD *)(v1 + 296), v11 > v10))
            {
              v12 = a1 - 3;
              if ((unint64_t)a1 < 3)
                v12 = 0;
              if (v12 + 128 < v9)
                v9 = v12 + 128;
              *(_QWORD *)(v1 + 296) = v12;
              *(_QWORD *)(v1 + 304) = v9;
              v14.location = *(_QWORD *)(v1 + 280) + v12;
              v14.length = v9 - v12;
              CFStringGetCharacters(*(CFStringRef *)(v1 + 256), v14, (UniChar *)v1);
            }
          }
        }
      }
    }
  }
}

id NSAttributedString.baseWritingDirection(forCharacterAt:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  if ((uint64_t)objc_msgSend(v1, sel_length) <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1DA678FF0;
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    v4 = sub_1DA486218();
    v5 = MEMORY[0x1E0DEB418];
    v6 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v3 + 32) = 0xD000000000000025;
    *(_QWORD *)(v3 + 40) = 0x80000001DA68DBA0;
    *(_QWORD *)(v3 + 96) = v5;
    *(_QWORD *)(v3 + 104) = v6;
    *(_QWORD *)(v3 + 64) = v4;
    *(_QWORD *)(v3 + 72) = a1;
    v7 = objc_msgSend(v1, sel_length);
    *(_QWORD *)(v3 + 136) = v5;
    *(_QWORD *)(v3 + 144) = v6;
    *(_QWORD *)(v3 + 112) = v7;
    sub_1DA66F8E0();
    v8 = (void *)*MEMORY[0x1E0C99858];
    v9 = objc_allocWithZone(MEMORY[0x1E0C99DA0]);
    v10 = v8;
    v11 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v9, sel_initWithName_reason_userInfo_, v10, v11, 0);

    objc_msgSend(v12, sel_raise);
    return 0;
  }
  if (objc_msgSend(v1, sel_attribute_atIndex_effectiveRange_, *MEMORY[0x1E0DC1178], a1, 0))
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1DA480EC4((uint64_t)v16, (uint64_t)v17);
  if (!v18)
  {
    sub_1DA480E84((uint64_t)v17);
    return 0;
  }
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v13 = objc_msgSend(v15, sel_baseWritingDirection);

  return v13;
}

uint64_t NSAttributedString.baseWritingDirectionForCharacterAtIndex(_:unknownStyle:)(uint64_t a1, _BYTE *a2)
{
  uint64_t result;
  char v4;

  result = (uint64_t)NSAttributedString.baseWritingDirection(forCharacterAt:)(a1);
  if (a2)
    *a2 = v4 & 1;
  if ((v4 & 1) != 0)
    return -1;
  return result;
}

uint64_t sub_1DA560F28(void *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  id v7;
  char v8;
  uint64_t v9;

  v6 = a1;
  v7 = NSAttributedString.baseWritingDirection(forCharacterAt:)(a3);
  if (a4)
    *a4 = v8 & 1;
  if ((v8 & 1) != 0)
    v9 = -1;
  else
    v9 = (uint64_t)v7;

  return v9;
}

Swift::String __swiftcall NSAttributedString.convertedWritingDirectionToBidiControlCharacters()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v0);
  if (qword_1F0268540 != -1)
    swift_once();
  v2 = qword_1F026ACC8;
  v3 = objc_retainAutorelease(v1);
  objc_msgSend(v3, sel_performSelector_, v2);
  v4 = objc_msgSend(v3, sel_string);
  v5 = sub_1DA66F8BC();
  v7 = v6;

  v8 = v5;
  v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

Swift::Void __swiftcall NSMutableAttributedString.convertWritingDirectionToBidiControlCharacters()()
{
  void *v0;

  if (qword_1F0268540 != -1)
    swift_once();
  objc_msgSend(objc_retainAutorelease(v0), sel_performSelector_, qword_1F026ACC8);
}

void sub_1DA56109C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v1 = (void *)sub_1DA66F88C();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  qword_1F026ACC0 = (uint64_t)v2;
}

id static NSAttributedString.empty.getter()
{
  if (qword_1F0268538 != -1)
    swift_once();
  return (id)qword_1F026ACC0;
}

id sub_1DA561138()
{
  if (qword_1F0268538 != -1)
    swift_once();
  return (id)qword_1F026ACC0;
}

uint64_t sub_1DA561178(void *a1)
{
  objc_msgSend(a1, sel_length);
  return 0;
}

uint64_t NSAttributedString.fullRange.getter()
{
  void *v0;

  objc_msgSend(v0, sel_length);
  return 0;
}

uint64_t NSAttributedString.strongBaseWritingDirectionOfParagraph(atOrBefore:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  _QWORD v20[6];
  uint64_t v21;
  char v22;

  if ((uint64_t)objc_msgSend(v1, sel_length) <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DA678FF0;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v11 = sub_1DA486218();
    v12 = MEMORY[0x1E0DEB418];
    v13 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v10 + 32) = 0xD000000000000032;
    *(_QWORD *)(v10 + 40) = 0x80000001DA68DBD0;
    *(_QWORD *)(v10 + 96) = v12;
    *(_QWORD *)(v10 + 104) = v13;
    *(_QWORD *)(v10 + 64) = v11;
    *(_QWORD *)(v10 + 72) = a1;
    v14 = objc_msgSend(v1, sel_length);
    *(_QWORD *)(v10 + 136) = v12;
    *(_QWORD *)(v10 + 144) = v13;
    *(_QWORD *)(v10 + 112) = v14;
    sub_1DA66F8E0();
    v15 = (void *)*MEMORY[0x1E0C99858];
    v16 = objc_allocWithZone(MEMORY[0x1E0C99DA0]);
    v17 = v15;
    v18 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v16, sel_initWithName_reason_userInfo_, v17, v18, 0);

    objc_msgSend(v19, sel_raise);
    return 0;
  }
  v21 = 0;
  v22 = 1;
  v3 = *MEMORY[0x1E0DC1178];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = &v21;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1DA561690;
  *(_QWORD *)(v5 + 24) = v4;
  v20[4] = sub_1DA4E4158;
  v20[5] = v5;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1DA561548;
  v20[3] = &block_descriptor_5;
  v6 = _Block_copy(v20);
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v1, sel_enumerateAttribute_inRange_options_usingBlock_, v3, 0, a1, 2, v6);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v9 = v21;
    swift_release();
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1DA561474(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  id v7;
  _BYTE v8[24];
  uint64_t v9;

  sub_1DA4F2340(a1, (uint64_t)v8);
  if (v9)
  {
    sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (objc_msgSend(v7, sel_baseWritingDirection) == (id)1 || !objc_msgSend(v7, sel_baseWritingDirection))
      {
        *(_QWORD *)a5 = objc_msgSend(v7, sel_baseWritingDirection);
        *(_BYTE *)(a5 + 8) = 0;
        *a4 = 1;
      }

    }
  }
  else
  {
    sub_1DA480E84((uint64_t)v8);
  }
}

uint64_t sub_1DA561548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(__int128 *, uint64_t, uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;

  v9 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType();
    *(_QWORD *)&v11 = a2;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_1DA480E84((uint64_t)&v11);
}

uint64_t NSAttributedString.strongBaseWritingDirectionOfParagraphAtOrBeforeIndex(_:)(uint64_t a1)
{
  uint64_t result;
  char v2;

  result = NSAttributedString.strongBaseWritingDirectionOfParagraph(atOrBefore:)(a1);
  if ((v2 & 1) != 0)
    return -1;
  return result;
}

uint64_t sub_1DA5615EC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = a1;
  v5 = NSAttributedString.strongBaseWritingDirectionOfParagraph(atOrBefore:)(a3);
  v7 = v6;

  if ((v7 & 1) != 0)
    return -1;
  else
    return v5;
}

void sub_1DA561634()
{
  NSString *v0;
  SEL v1;

  v0 = (NSString *)sub_1DA66F88C();
  v1 = NSSelectorFromString(v0);

  qword_1F026ACC8 = (uint64_t)v1;
}

uint64_t sub_1DA561680()
{
  return swift_deallocObject();
}

void sub_1DA561690(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  sub_1DA561474(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1DA561698()
{
  return swift_deallocObject();
}

id NSParagraphStyle.withBaseWritingDirection(_:)(uint64_t a1)
{
  void *v1;
  id v4;

  objc_msgSend(v1, sel_mutableCopy);
  sub_1DA670360();
  swift_unknownObjectRelease();
  sub_1DA47D774(0, &qword_1EDADE7C0);
  swift_dynamicCast();
  objc_msgSend(v4, sel_setBaseWritingDirection_, a1);
  objc_msgSend(v4, sel_copy);
  sub_1DA670360();

  swift_unknownObjectRelease();
  sub_1DA47D774(0, (unint64_t *)&unk_1EDAE5100);
  swift_dynamicCast();
  return v4;
}

id sub_1DA5617A8(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;

  v4 = a1;
  v5 = NSParagraphStyle.withBaseWritingDirection(_:)(a3);

  return v5;
}

NSTextAlignment __swiftcall UIUserInterfaceLayoutDirection.textAlignment(whenLeftToRight:rightToLeft:)(NSTextAlignment whenLeftToRight, NSTextAlignment rightToLeft)
{
  uint64_t v2;

  if (v2 == 1)
    return rightToLeft;
  return whenLeftToRight;
}

uint64_t sub_1DA5617EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA657ABC(a1, a2);
  if (!v3)
    *a3 = result & 1;
  return result;
}

uint64_t SearchFiltersSource.scope.getter()
{
  uint64_t v1;

  sub_1DA66CBF8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SearchFiltersSource.filter.getter()
{
  uint64_t v1;

  sub_1DA66CBF8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SearchFiltersSource.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C58);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_DWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t SearchFiltersSource.init()()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C58);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_DWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

Swift::Void __swiftcall SearchFiltersSource.update(scope:)(Swift::String_optional scope)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;

  object = scope.value._object;
  countAndFlagsBits = scope.value._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 48));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 16) = countAndFlagsBits;
  *(_QWORD *)(v4 + 24) = object;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
}

Swift::Void __swiftcall SearchFiltersSource.update(filter:)(Swift::String_optional filter)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;

  object = filter.value._object;
  countAndFlagsBits = filter.value._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 48));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 32) = countAndFlagsBits;
  *(_QWORD *)(v4 + 40) = object;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 48));
}

Swift::Void __swiftcall SearchFiltersSource.reset()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 48));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 48));
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 48));
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 48));
}

uint64_t SearchFiltersSource.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t SearchFiltersSource.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchFiltersSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchFiltersSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchFiltersSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for SearchFiltersSource.Source()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchFiltersSource.Source(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchFiltersSource.Source(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SearchFiltersSource.Source(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchFiltersSource.Source(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchFiltersSource.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchFiltersSource.Source()
{
  return &type metadata for SearchFiltersSource.Source;
}

PodcastsUI::SheetView::SizeRestrictions __swiftcall SheetView.SizeRestrictions.init(fixedSize:)(CGSize fixedSize)
{
  CGFloat *v1;
  PodcastsUI::SheetView::SizeRestrictions result;

  *v1 = fixedSize.width;
  v1[1] = fixedSize.height;
  v1[2] = fixedSize.width;
  v1[3] = fixedSize.height;
  result.minSize.height = fixedSize.height;
  result.minSize.width = fixedSize.width;
  return result;
}

id SheetView.__allocating_init(frame:sizeRestrictions:)(_OWORD *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  __int128 v13;
  objc_super v15;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  v13 = a1[1];
  *(_OWORD *)v12 = *a1;
  *((_OWORD *)v12 + 1) = v13;
  v15.receiver = v11;
  v15.super_class = v5;
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a2, a3, a4, a5);
}

double SheetView.SizeRestrictions.minSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double SheetView.SizeRestrictions.maxSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

PodcastsUI::SheetView::SizeRestrictions __swiftcall SheetView.SizeRestrictions.init(minSize:maxSize:)(CGSize minSize, CGSize maxSize)
{
  CGFloat *v2;
  PodcastsUI::SheetView::SizeRestrictions result;

  *v2 = minSize.width;
  v2[1] = minSize.height;
  v2[2] = maxSize.width;
  v2[3] = maxSize.height;
  result.maxSize.height = maxSize.height;
  result.maxSize.width = maxSize.width;
  result.minSize.height = minSize.height;
  result.minSize.width = minSize.width;
  return result;
}

id SheetView.init(frame:sizeRestrictions:)(_OWORD *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  __int128 v10;
  char *v11;
  objc_super v13;

  v10 = a1[1];
  v11 = &v5[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  *(_OWORD *)v11 = *a1;
  *((_OWORD *)v11 + 1) = v10;
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for SheetView();
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a2, a3, a4, a5);
}

uint64_t type metadata accessor for SheetView()
{
  return objc_opt_self();
}

void sub_1DA561E18(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  if (a1)
  {
    v12 = a1;
    v2 = objc_msgSend(v12, sel_windowScene);
    if (!v2)
    {
LABEL_16:

      return;
    }
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v5 = objc_msgSend(v4, sel_delegate);

    if (v5)
    {
      if ((objc_msgSend(v5, sel_respondsToSelector_, sel_window) & 1) != 0)
      {
        v6 = objc_msgSend(v5, sel_window);
        swift_unknownObjectRelease();
        if (v6)
        {

          if (v6 == v12)
          {
            v7 = v12;
            v12 = v3;
LABEL_15:

            goto LABEL_16;
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    objc_msgSend(v12, sel_setCanResizeToFitContent_, 1);
    v8 = objc_msgSend(v3, sel_sizeRestrictions);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_setMinimumSize_, *(double *)(v1 + OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions), *(double *)(v1 + OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions + 8));

    }
    v10 = objc_msgSend(v3, sel_sizeRestrictions);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_setMaximumSize_, *(double *)(v1 + OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions + 16), *(double *)(v1 + OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions + 24));

    }
    v7 = v3;
    goto LABEL_15;
  }
}

id SheetView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void SheetView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SheetView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SheetView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SheetView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SheetView.__allocating_init(frame:sizeRestrictions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for SheetView.SizeRestrictions()
{
  return &type metadata for SheetView.SizeRestrictions;
}

uint64_t sub_1DA56211C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1DA562124(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1DA56212C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1DA562134(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1DA56213C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1DA562144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1DA56214C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1DA562154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1DA56215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1DA562164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4B17EC;
  return v7(a1, a2);
}

uint64_t sub_1DA5621D0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(__int128 *);
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v3 = *((_QWORD *)a1 + 2);
  v4 = *(uint64_t (**)(__int128 *))(a3 + 88);
  v6 = *a1;
  v7 = v3;
  v8 = *(__int128 *)((char *)a1 + 24);
  return v4(&v6);
}

uint64_t sub_1DA56220C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = objc_msgSend(v0, sel_playingItemProperties);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_relationships);

    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5040);
    v4 = sub_1DA66F754();

    v5 = sub_1DA66F8BC();
    if (*(_QWORD *)(v4 + 16))
    {
      v7 = sub_1DA499108(v5, v6);
      if ((v8 & 1) != 0)
      {
        v9 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = objc_msgSend(v9, sel_properties);
        v11 = sub_1DA66FC58();

        v12 = sub_1DA66F8BC();
        v14 = sub_1DA523D48(v12, v13, v11);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_1DA562374(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  _QWORD v23[2];
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v2 = v1;
  v31 = *MEMORY[0x1E0C80C00];
  v4 = sub_1DA66DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath;
  v9 = *(void **)&v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath];
  if (a1)
  {
    if (v9)
    {
      sub_1DA47D774(0, (unint64_t *)&unk_1F026A758);
      v10 = v9;
      v11 = a1;
      v12 = sub_1DA6701A4();

      if ((v12 & 1) != 0)
        return;
    }
  }
  else if (!v9)
  {
    return;
  }
  v27 = v5;
  sub_1DA66DE70();
  v13 = v2;
  v14 = sub_1DA66DEDC();
  v15 = sub_1DA66FDC0();
  if (os_log_type_enabled(v14, v15))
  {
    v26 = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138412290;
    v17 = *(void **)&v2[v8];
    if (v17)
    {
      v23[1] = v16 + 12;
      v24 = v4;
      v28 = v17;
      v18 = v17;
      v4 = v24;
    }
    else
    {
      v28 = 0;
    }
    sub_1DA6702C4();
    v19 = v25;
    *v25 = v17;

    _os_log_impl(&dword_1DA478000, v14, v15, "ExplicitResponseDataSource did set player path %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v19, -1, -1);
    MEMORY[0x1DF0A0474](v16, -1, -1);
    a1 = v26;
  }
  else
  {

    v14 = v13;
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
  if (*(_QWORD *)&v2[v8])
  {
    v20 = *(Class *)((char *)&v13->isa
                   + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerRequestController);
    v21 = objc_msgSend(v20, sel_request);
    v22 = *(id *)&v2[v8];
    objc_msgSend(v21, sel_setPlayerPath_, v22);

    v28 = 0;
    v29 = 0;
    v30 = 0;
    sub_1DA66DFE4();
    if (a1)
      objc_msgSend(v20, sel_setNeedsReloadForSignificantRequestChange);
    else
      objc_msgSend(v20, sel_beginAutomaticResponseLoading);
  }
  else
  {
    if (a1)
      objc_msgSend(*(id *)((char *)&v13->isa+ OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerRequestController), sel_endAutomaticResponseLoading);
    v28 = 0;
    v29 = 0;
    v30 = 0;
    sub_1DA66DFE4();
  }
}

void sub_1DA5626A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_responsePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  swift_allocObject();
  *(_QWORD *)&v0[v2] = sub_1DA66DFFC();
  v0[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_includeTranscripts] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath] = 0;
  v3 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerRequestController;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC24E0]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_subscriptions] = MEMORY[0x1E0DEE9D8];

  sub_1DA670570();
  __break(1u);
}

uint64_t sub_1DA5627C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5627DC()
{
  uint64_t v0;

  sub_1DA670444();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AE10);
  sub_1DA66F904();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return sub_1DA670570();
}

id sub_1DA5628B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s26ExplicitResponseDataSourceCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s26ExplicitResponseDataSourceCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DA562958()
{
  return sub_1DA66BE60();
}

void *sub_1DA56296C()
{
  return sub_1DA563B78();
}

uint64_t sub_1DA562978()
{
  return 0;
}

void *sub_1DA562980()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath);
  v2 = v1;
  return v1;
}

void sub_1DA5629B0(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *v1;
  v3 = *(void **)(v2 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_playerPath) = a1;
  v4 = a1;
  sub_1DA562374(v3);

}

uint64_t sub_1DA5629FC(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController26ExplicitResponseDataSource_includeTranscripts) = result;
  return result;
}

uint64_t sub_1DA562A10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4B1798;
  v3[3] = v2;
  return swift_task_switch();
}

char *sub_1DA562A70(uint64_t *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  objc_class *v28;
  char *v29;
  void *v30;
  char *v31;
  id v32;
  char *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  char *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  char v64;
  objc_super v65;
  uint64_t v66;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEDB8);
  v4 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v61 = v4;
  MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1D30);
  v10 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  v56 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1BB0);
  v14 = *((_QWORD *)v13 - 1);
  v57 = v13;
  v58 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController;
  v18 = objc_allocWithZone(MEMORY[0x1E0CC24E0]);
  v19 = v1;
  *(_QWORD *)&v1[v17] = objc_msgSend(v18, sel_init);
  *(_QWORD *)&v19[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_subscriptions] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v19[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_pathCoordinator] = 0;
  v20 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_responsePublisher;
  v62 = 0;
  v63 = 0;
  v64 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  swift_allocObject();
  *(_QWORD *)&v19[v20] = sub_1DA66DFFC();
  v19[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_includeTranscripts] = 0;
  v21 = *a1;
  v22 = a1[1];
  v24 = a1[2];
  v23 = a1[3];
  v66 = a1[4];
  v25 = v66;
  v26 = &v19[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_config];
  v27 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v26 = *(_OWORD *)a1;
  *((_OWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 4) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DA497B8C((uint64_t)&v66);

  v28 = (objc_class *)_s27AutomaticResponseDataSourceCMa();
  v65.receiver = v19;
  v65.super_class = v28;
  v29 = (char *)objc_msgSendSuper2(&v65, sel_init);
  v53 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController;
  v30 = *(void **)&v29[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController];
  v31 = v29;
  objc_msgSend(v30, sel_setDelegate_, v31);
  v32 = objc_allocWithZone((Class)_s21PlayerPathCoordinatorCMa());
  v33 = sub_1DA489BE4(v21, v22, v24, v23);
  sub_1DA4A8BFC((uint64_t)&v66);
  v34 = sub_1DA5643E0();
  v54 = v34;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  v35 = v62;

  objc_msgSend(v34, sel_setPlayerPath_, v35);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1DA8);
  sub_1DA66E098();
  swift_endAccess();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v62 = (id)sub_1DA66FEC8();
  v36 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1D20, (uint64_t *)&unk_1EDAE1D30, MEMORY[0x1E0C96190]);
  sub_1DA4A89F0();
  v37 = v55;
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v37);
  v38 = v53;
  v39 = *(void **)&v29[v53];
  *(_QWORD *)(swift_allocObject() + 16) = v39;
  sub_1DA4841D4(&qword_1EDAE1BA8, &qword_1EDAE1BB0, MEMORY[0x1E0C95CB8]);
  v40 = v39;
  v41 = v57;
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, char *))(v58 + 8))(v16, v41);
  swift_beginAccess();
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE1FD0);
  sub_1DA4841D4(&qword_1EDAE1FE0, (uint64_t *)&unk_1EDAE1FD0, MEMORY[0x1E0DEAF58]);
  sub_1DA66DF90();
  swift_endAccess();
  swift_release();
  v42 = v31;
  v43 = *(void **)&v31[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_pathCoordinator];
  *(_QWORD *)&v31[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_pathCoordinator] = v33;
  v57 = v33;

  v44 = *(void **)&v29[v38];
  v45 = v38;
  v46 = v54;
  objc_msgSend(v44, sel_setRequest_, v54);
  objc_msgSend(v44, sel_beginAutomaticResponseLoading);
  v62 = (id)sub_1DA49170C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1C50);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE1C40, &qword_1EDAE1C50, MEMORY[0x1E0C95D90]);
  v47 = v59;
  sub_1DA66E1E8();
  swift_release();
  v48 = *(void **)&v29[v45];
  *(_QWORD *)(swift_allocObject() + 16) = v48;
  sub_1DA4841D4((unint64_t *)&unk_1EDADFDD0, &qword_1EDADEDB8, MEMORY[0x1E0C95AD0]);
  v49 = v48;
  v50 = v60;
  sub_1DA66E284();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v50);
  swift_beginAccess();
  sub_1DA66DF90();
  swift_endAccess();

  swift_release();
  return v42;
}

id sub_1DA5630D8(uint64_t a1, id a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = objc_msgSend(a2, sel_request);
  objc_msgSend(v4, sel_setPlayerPath_, v3);

  return objc_msgSend(a2, sel_setNeedsReloadForSignificantRequestChange);
}

void sub_1DA56313C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC24E0]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_subscriptions] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_pathCoordinator] = 0;
  v3 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_responsePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CF0);
  swift_allocObject();
  *(_QWORD *)&v1[v3] = sub_1DA66DFFC();
  v1[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_includeTranscripts] = 0;

  sub_1DA670570();
  __break(1u);
}

id sub_1DA563240()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController], sel_endAutomaticResponseLoading);
  v2.receiver = v0;
  v2.super_class = (Class)_s27AutomaticResponseDataSourceCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DA56336C(char a1)
{
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v13;

  if ((a1 & 1) == 0)
    return v1;
  v13 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  *(_QWORD *)(inited + 32) = sub_1DA66F8BC();
  *(_QWORD *)(inited + 40) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v4 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v4 + 40) = v5;
  v6 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_propertySetWithProperties_, v6);

  *(_QWORD *)(inited + 48) = v8;
  sub_1DA494B9C(inited);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5040);
  v9 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_propertySetWithRelationships_, v9);

  v11 = objc_msgSend(v13, sel_propertySetByCombiningWithPropertySet_, v10);
  return v11;
}

id sub_1DA56351C(id result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_includeTranscripts;
  v3 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_includeTranscripts);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_includeTranscripts) = (_BYTE)result;
  if (v3 != (result & 1))
  {
    v4 = *(void **)(v1
                  + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_playerRequestController);
    v5 = objc_msgSend(v4, sel_request);
    v6 = sub_1DA563DA8();
    v7 = sub_1DA56336C(*(_BYTE *)(v1 + v2));

    objc_msgSend(v5, sel_setPlayingItemProperties_, v7);
    return objc_msgSend(v4, sel_setNeedsReload);
  }
  return result;
}

uint64_t sub_1DA5635E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5635F8()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_systemRoute);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_pathWithRoute_bundleID_playerID_, v1, v2, v3);
  *(_QWORD *)(v0 + 144) = v4;

  v5 = sub_1DA5643E0();
  *(_QWORD *)(v0 + 152) = v5;
  objc_msgSend(v5, sel_setPlayerPath_, v4);
  return swift_task_switch();
}

uint64_t sub_1DA563710()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = (void *)v0[19];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_1DA563800;
  v2 = swift_continuation_init();
  v3 = swift_allocObject();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  *(_QWORD *)(v3 + 16) = v2;
  v4[4] = sub_1DA5644C0;
  v4[5] = v3;
  v4[1] = 1107296256;
  v4[2] = sub_1DA529310;
  v4[3] = &block_descriptor_6;
  v5 = _Block_copy(v4);
  swift_release();
  v6 = objc_msgSend(v1, sel_performWithCompletion_, v5);
  _Block_release(v5);
  swift_unknownObjectRelease();
  return swift_continuation_await();
}

uint64_t sub_1DA563800()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 160) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 168) = *(_QWORD *)(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_1DA563874()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168));
}

uint64_t sub_1DA5638B0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5638E8(void *a1, void *a2, uint64_t a3)
{
  id v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  id v9;

  if (a1)
  {
    **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
    v3 = a1;
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a2)
    {
      v6 = (uint64_t)a2;
    }
    else
    {
      sub_1DA5537E8();
      v6 = swift_allocError();
      *v7 = 0;
      v7[1] = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    swift_allocError();
    *v8 = v6;
    v9 = a2;
    return swift_continuation_throwingResumeWithError();
  }
}

void sub_1DA5639AC(void *a1, int a2, void *a3, void *aBlock, uint64_t a5)
{
  void *v8;
  id v9;
  id v10;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  sub_1DA5644C8(v9, (uint64_t)v10, (uint64_t)v8, a5);
  _Block_release(v8);
  _Block_release(v8);

}

uint64_t sub_1DA563A38(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;
  void *v11;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = objc_msgSend(v6, sel_request);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRetain();
    v11 = (void *)sub_1DA66C1F0();
    sub_1DA66DFE4();

    swift_unknownObjectRelease_n();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return 1;
}

uint64_t _s27AutomaticResponseDataSourceCMa()
{
  return objc_opt_self();
}

uint64_t sub_1DA563B58()
{
  return sub_1DA66BE60();
}

void *sub_1DA563B6C()
{
  return sub_1DA563B78();
}

void *sub_1DA563B78()
{
  void *result;
  void *v1;
  void *v2;
  char v3;

  sub_1DA66DFF0();
  result = v1;
  if (v3 == 1)
  {
    sub_1DA563D70(v1, v2, 1);
    return 0;
  }
  return result;
}

void *sub_1DA563BCC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtCC10PodcastsUI18PlaybackController27AutomaticResponseDataSource_pathCoordinator);
  v2 = v1;
  return v1;
}

id sub_1DA563BFC()
{
  id v0;
  void *v2;
  void *v3;
  char v4;

  sub_1DA66DFF0();
  if ((v4 & 1) != 0)
  {
    sub_1DA563D70(v2, v3, 1);
    return 0;
  }
  if (!v2)
    return 0;
  v0 = objc_msgSend(v2, sel_playerPath);
  sub_1DA563D70(v2, v3, 0);
  return v0;
}

void sub_1DA563C98()
{
  sub_1DA670570();
  __break(1u);
}

id sub_1DA563CF0(void *a1)
{
  return sub_1DA56351C(a1);
}

uint64_t sub_1DA563D10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA564788;
  v3[17] = v2;
  return swift_task_switch();
}

void sub_1DA563D70(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    sub_1DA563D7C(a1, a2);
  else

}

void sub_1DA563D7C(void *a1, void *a2)
{
  if (a1)
  {

  }
}

id sub_1DA563DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v61;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DA67D280;
  *(_QWORD *)(v0 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 160) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 168) = v9;
  *(_QWORD *)(v0 + 176) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 184) = v10;
  *(_QWORD *)(v0 + 192) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 200) = v11;
  *(_QWORD *)(v0 + 208) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 216) = v12;
  *(_QWORD *)(v0 + 224) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 232) = v13;
  *(_QWORD *)(v0 + 240) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 248) = v14;
  *(_QWORD *)(v0 + 256) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 264) = v15;
  *(_QWORD *)(v0 + 272) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 280) = v16;
  *(_QWORD *)(v0 + 288) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 296) = v17;
  *(_QWORD *)(v0 + 304) = sub_1DA66F8BC();
  *(_QWORD *)(v0 + 312) = v18;
  v19 = sub_1DA66F8BC();
  v21 = v20;
  v23 = *(_QWORD *)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 24);
  if (v23 >= v22 >> 1)
    v0 = (uint64_t)sub_1DA4981C8((_QWORD *)(v22 > 1), v23 + 1, 1, (_QWORD *)v0);
  *(_QWORD *)(v0 + 16) = v23 + 1;
  v24 = v0 + 16 * v23;
  *(_QWORD *)(v24 + 32) = v19;
  *(_QWORD *)(v24 + 40) = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v61 = inited;
  *(_QWORD *)(inited + 32) = sub_1DA66F8BC();
  *(_QWORD *)(inited + 40) = v26;
  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DA678FE0;
  *(_QWORD *)(v27 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 40) = v28;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v29 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v29 + 40) = v30;
  sub_1DA494B9C(MEMORY[0x1E0DEE9D8]);
  v31 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v32 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5040);
  v33 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v31, sel_initWithProperties_relationships_, v32, v33);

  *(_QWORD *)(v27 + 48) = v34;
  *(_QWORD *)(v27 + 56) = sub_1DA66F8BC();
  *(_QWORD *)(v27 + 64) = v35;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1DA67C310;
  *(_QWORD *)(v36 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v36 + 40) = v37;
  *(_QWORD *)(v36 + 48) = sub_1DA66F8BC();
  *(_QWORD *)(v36 + 56) = v38;
  *(_QWORD *)(v36 + 64) = sub_1DA66F8BC();
  *(_QWORD *)(v36 + 72) = v39;
  *(_QWORD *)(v36 + 80) = sub_1DA66F8BC();
  *(_QWORD *)(v36 + 88) = v40;
  *(_QWORD *)(v36 + 96) = sub_1DA66F8BC();
  *(_QWORD *)(v36 + 104) = v41;
  v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v42 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v42 + 40) = v43;
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v44 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v44 + 40) = v45;
  v46 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v47 = objc_msgSend((id)objc_opt_self(), sel_propertySetWithProperties_, v46);

  *(_QWORD *)(v42 + 48) = v47;
  sub_1DA494B9C(v42);
  v48 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v49 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v50 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v51 = objc_msgSend(v48, sel_initWithProperties_relationships_, v49, v50);

  *(_QWORD *)(v27 + 72) = v51;
  sub_1DA494B9C(v27);
  v52 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v53 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v54 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v55 = objc_msgSend(v52, sel_initWithProperties_relationships_, v53, v54);

  *(_QWORD *)(v61 + 48) = v55;
  sub_1DA494B9C(v61);
  v56 = objc_allocWithZone(MEMORY[0x1E0CC24C0]);
  v57 = (void *)sub_1DA66FA90();
  v58 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v56, sel_initWithProperties_relationships_, v57, v58);

  return v59;
}

id sub_1DA5643E0()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D4B380]), sel_init);
  v1 = (void *)sub_1DA66F88C();
  objc_msgSend(v0, sel_setLabel_, v1);

  v2 = sub_1DA563DA8();
  objc_msgSend(v0, sel_setPlayingItemProperties_, v2);

  v3 = sub_1DA563DA8();
  objc_msgSend(v0, sel_setQueueItemProperties_, v3);

  objc_msgSend(v0, sel_setTracklistRange_, 0, 99);
  return v0;
}

uint64_t sub_1DA5644B0()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5644C0(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1DA5638E8(a1, a2, *(_QWORD *)(v2 + 16));
}

id sub_1DA5644C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  char v28;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, __n128))(a3 + 16))(a3, v10);
  result = objc_msgSend(a1, sel_response);
  if (result)
  {
    objc_opt_self();
    v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      v15 = v14;
      v25 = a2;
      sub_1DA66DE70();
      swift_unknownObjectRetain_n();
      v16 = sub_1DA66DEDC();
      v17 = sub_1DA66FDC0();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v27[0] = v23;
        v24 = a4;
        *(_DWORD *)v18 = 136315138;
        v22 = v18 + 4;
        v19 = sub_1DA490B20();
        v26 = sub_1DA49AD00(v19, v20, v27);
        sub_1DA6702C4();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DA478000, v16, v17, "Received playback response: %s", v18, 0xCu);
        v21 = v23;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v21, -1, -1);
        MEMORY[0x1DF0A0474](v18, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v27[0] = v15;
      v27[1] = 0;
      v28 = 0;
      swift_unknownObjectRetain();
      sub_1DA66DFE4();
      return (id)swift_unknownObjectRelease_n();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DA564748()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DA56476C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5630D8(a1, *(id *)(v1 + 16));
}

id sub_1DA564774()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setNeedsReloadForSignificantRequestChange);
}

uint64_t LocalLibraryPlaybackPositionTracker.__allocating_init(stateCoordinator:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F230]), sel_init);
  sub_1DA4841BC(a1, v2 + 16);
  return v2;
}

uint64_t LocalLibraryPlaybackPositionTracker.init(stateCoordinator:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F230]), sel_init);
  sub_1DA4841BC(a1, v1 + 16);
  return v1;
}

void sub_1DA564830(_QWORD *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  void *v18;
  _BYTE *v19;
  _QWORD aBlock[6];
  __int128 v21[2];

  v4 = v3;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1DA5BBA7C(v8, v9);
  if (v12 == 0xFF)
  {
    sub_1DA5649F0();
    v18 = (void *)swift_allocError();
    *v19 = 0;
    a2(v18, 1);

  }
  else
  {
    sub_1DA564A34(v10, v11, v12);
    v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v14 = objc_msgSend(v13, sel_privateQueueContext);

    sub_1DA4813E4((uint64_t)a1, (uint64_t)v21);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v4;
    sub_1DA4841BC(v21, (uint64_t)(v15 + 3));
    v15[8] = v14;
    v15[9] = a2;
    v15[10] = a3;
    aBlock[4] = sub_1DA564F48;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA4A9194;
    aBlock[3] = &block_descriptor_7;
    v16 = _Block_copy(aBlock);
    sub_1DA66BE60();
    v17 = v14;
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v17, sel_performBlock_, v16);
    _Block_release(v16);

  }
}

unint64_t sub_1DA5649F0()
{
  unint64_t result;

  result = qword_1F026AE18;
  if (!qword_1F026AE18)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA685138, &type metadata for PlaybackPositionTrackerError);
    atomic_store(result, (unint64_t *)&qword_1F026AE18);
  }
  return result;
}

uint64_t sub_1DA564A34(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1DA5242F8(result, a2, a3 & 1);
  return result;
}

void sub_1DA564A4C(uint64_t a1, _QWORD *a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _BYTE *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void *, uint64_t);
  uint64_t v61;
  id v62;
  __int128 v63[2];

  v59 = a5;
  v60 = a4;
  v56 = sub_1DA66DEF4();
  v58 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AE20);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66C8D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2[3];
  v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v19);
  v21 = (void *)sub_1DA5BBAD8(v19, v20);
  v61 = a1;
  v22 = *(void **)(a1 + 56);
  v23 = a3;
  v62 = objc_msgSend(v22, sel_findEpisodeWithRequest_context_, v21, a3);

  v25 = a2[3];
  v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v24 + 64))(v25, v24);
  if (v62)
  {
    v27 = v26;
    v28 = a2[3];
    v29 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v28);
    v30 = (*(double (**)(uint64_t, uint64_t))(v29 + 56))(v28, v29);
    v31 = a2[3];
    v32 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v31);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 80))(v31, v32);
    sub_1DA5655C0(v62, v33 & 1, v27, v30);
    objc_msgSend(v23, sel_saveInCurrentBlock);
    v60(0, 0);

  }
  else
  {
    v34 = v58;
    v35 = v18;
    v36 = v61;
    v62 = v23;
    if (v26 <= *MEMORY[0x1E0D7F310])
    {
      v40 = v57;
      sub_1DA66DE7C();
      v41 = sub_1DA66DEDC();
      v42 = sub_1DA66FD90();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_1DA478000, v41, v42, "􁀮 Episode not found. No action performed", v43, 2u);
        MEMORY[0x1DF0A0474](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v56);
      v60(0, 0);
    }
    else
    {
      sub_1DA4813E4((uint64_t)a2, (uint64_t)v63);
      sub_1DA564F54((uint64_t)v63, (uint64_t)v14);
      v37 = v15;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1DA47E2F0((uint64_t)v14, &qword_1F026AE20);
        sub_1DA5649F0();
        v38 = (void *)swift_allocError();
        *v39 = 3;
        v60(v38, 1);

      }
      else
      {
        v44 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v57 = v35;
        v44(v35, v14, v15);
        v45 = v11;
        sub_1DA66DE7C();
        v55 = v16;
        v46 = sub_1DA66DEDC();
        v47 = sub_1DA66FDC0();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          _os_log_impl(&dword_1DA478000, v46, v47, "􁹟 Episode played beyond threshold. Performing implicit follow", v48, 2u);
          MEMORY[0x1DF0A0474](v48, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v56);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 40));
        sub_1DA4813E4((uint64_t)a2, (uint64_t)v63);
        v49 = (_QWORD *)swift_allocObject();
        v50 = v59;
        v49[2] = v60;
        v49[3] = v50;
        v51 = v62;
        v49[4] = v62;
        v49[5] = v36;
        sub_1DA4841BC(v63, (uint64_t)(v49 + 6));
        sub_1DA66BE60();
        v52 = v51;
        sub_1DA66BE60();
        v53 = v57;
        sub_1DA66C874();
        swift_release();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v37);
      }
    }
  }
}

uint64_t sub_1DA564F48()
{
  return sub_1DA56736C((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1DA564A4C);
}

uint64_t sub_1DA564F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD v31[5];

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AE28);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66D30C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AE30);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66D264();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v28 - v20;
  sub_1DA4813E4(a1, (uint64_t)v31);
  sub_1DA5661BC(v31, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    v22 = (uint64_t *)&unk_1F026AE30;
    v23 = (uint64_t)v14;
LABEL_5:
    sub_1DA47E2F0(v23, v22);
    v24 = sub_1DA66C8D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v30, 1, 1, v24);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_1DA4813E4(a1, (uint64_t)v31);
  sub_1DA566534(v31, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    v22 = &qword_1F026AE28;
    v23 = (uint64_t)v5;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v5, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v11, v6);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
  v26 = v30;
  sub_1DA66C8C8();
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  v27 = sub_1DA66C8D4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
}

void sub_1DA565234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  _BYTE *v17;
  _QWORD aBlock[6];
  __int128 v19[2];

  if (a3 && a5)
  {
    sub_1DA4813E4(a10, (uint64_t)v19);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a9;
    sub_1DA4841BC(v19, (uint64_t)(v13 + 3));
    v13[8] = a8;
    v13[9] = a6;
    v13[10] = a7;
    aBlock[4] = sub_1DA567360;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DA4A9194;
    aBlock[3] = &block_descriptor_9;
    v14 = _Block_copy(aBlock);
    sub_1DA66BE60();
    v15 = a8;
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v15, sel_performBlock_, v14);
    _Block_release(v14);
  }
  else
  {
    sub_1DA5649F0();
    v16 = (void *)swift_allocError();
    *v17 = 2;
    a6(v16, 1);

  }
}

uint64_t sub_1DA565384(uint64_t a1, _QWORD *a2, void *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t (*v15)(_QWORD, _QWORD);
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  void *v33;

  v8 = sub_1DA66DEF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DE7C();
  v12 = sub_1DA66DEDC();
  v13 = sub_1DA66FD90();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v33 = a3;
    v15 = a4;
    v16 = v14;
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1DA478000, v12, v13, "􁹟 Show implicitly followed. Updating newly inserted episode", v14, 2u);
    v17 = v16;
    a4 = v15;
    a3 = v33;
    MEMORY[0x1DF0A0474](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  v20 = (void *)sub_1DA5BBAD8(v18, v19);
  v21 = objc_msgSend(*(id *)(a1 + 56), sel_findEpisodeWithRequest_context_, v20, a3);

  if (v21)
  {
    v22 = a2[3];
    v23 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v22);
    v24 = (*(double (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
    v25 = a2[3];
    v26 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v25);
    v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 56))(v25, v26);
    v28 = a2[3];
    v29 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v28);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 80))(v28, v29);
    sub_1DA5655C0(v21, v30 & 1, v24, v27);

  }
  objc_msgSend(a3, sel_saveInCurrentBlock);
  return a4(0, 0);
}

void sub_1DA5655C0(void *a1, char a2, float a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  float v48;
  char **v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  NSObject *v59;
  int v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  os_log_t v74;
  uint64_t v75;
  double v76;
  id v77;
  id v78;
  NSObject *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  double v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  uint64_t v101;

  v5 = v4;
  v10 = sub_1DA66DEF4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v94 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v94 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v94 - v21;
  sub_1DA66C3C4();
  v24 = v23;
  objc_msgSend(a1, sel_lastUserMarkedAsPlayedDate);
  v26 = v24 - v25;
  if (v26 > 2.0)
  {
    if ((a2 & 1) != 0)
    {
      LODWORD(v26) = 0;
      objc_msgSend(a1, sel_setPlayhead_, v26);
      objc_msgSend(a1, sel_setPlayed_manually_source_, 1, 0, 9);
      sub_1DA66DE7C();
      v27 = a1;
      swift_retain_n();
      v28 = v27;
      v29 = sub_1DA66DEDC();
      v30 = sub_1DA66FDC0();
      if (os_log_type_enabled(v29, v30))
      {
        v98 = v10;
        v99 = v11;
        v31 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        v101 = v32;
        *(_DWORD *)v31 = 136315906;
        v33 = objc_msgSend(v28, sel_uuid);
        if (v33)
        {
          v34 = v33;
          v35 = sub_1DA66F8BC();
          v37 = v36;

        }
        else
        {
          v35 = 4999502;
          v37 = 0xE300000000000000;
        }
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v35, v37, &v101));
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        sub_1DA56712C(a3);
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v70, v71, &v101));
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 22) = 2048;
        v100 = roundf(a3);
        sub_1DA6702C4();
        *(_WORD *)(v31 + 32) = 2048;
        v100 = round(a4);
        sub_1DA6702C4();
        _os_log_impl(&dword_1DA478000, v29, v30, "􀁢 Marking episode [%s] as played with elapsed duration: %s (%f / %f)", (uint8_t *)v31, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v32, -1, -1);
        MEMORY[0x1DF0A0474](v31, -1, -1);

        v69 = v98;
        v67 = *(void (**)(char *, uint64_t))(v99 + 8);
        v68 = v22;
        goto LABEL_26;
      }

      swift_release_n();
      v67 = *(void (**)(char *, uint64_t))(v11 + 8);
      v68 = v22;
LABEL_21:
      v69 = v10;
LABEL_26:
      v67(v68, v69);
      return;
    }
    v48 = *MEMORY[0x1E0D7F310];
    v49 = &selRef_tintColorForTheme_;
    if (*MEMORY[0x1E0D7F310] < a3
      && ((objc_msgSend(a1, sel_isUnplayed) & 1) != 0 || objc_msgSend(a1, sel_backCatalog)))
    {
      v98 = v10;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
      sub_1DA66C880();
      objc_msgSend(a1, sel_setPlayState_manually_source_, 1, 0, 9);
      v50 = objc_msgSend(a1, sel_podcast);
      if (v50)
      {
        v51 = v50;
        objc_msgSend(v50, sel_lastRemovedFromUpNextDate);
        v53 = v52;

        sub_1DA66C3C4();
        if (v54 - v53 > v48)
        {
          v55 = objc_msgSend(a1, sel_podcast);
          if (v55)
          {
            v56 = v55;
            objc_msgSend(v55, sel_setLastRemovedFromUpNextDate_, 0.0);

          }
        }
      }
      sub_1DA66DE7C();
      v57 = a1;
      swift_retain_n();
      v58 = v57;
      v59 = sub_1DA66DEDC();
      v60 = sub_1DA66FDC0();
      if (os_log_type_enabled(v59, (os_log_type_t)v60))
      {
        LODWORD(v96) = v60;
        v99 = v11;
        v61 = swift_slowAlloc();
        v95 = swift_slowAlloc();
        v101 = v95;
        *(_DWORD *)v61 = 136315906;
        v62 = objc_msgSend(v58, sel_uuid);
        v97 = v59;
        if (v62)
        {
          v63 = v62;
          v64 = sub_1DA66F8BC();
          v66 = v65;

        }
        else
        {
          v64 = 4999502;
          v66 = 0xE300000000000000;
        }
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v64, v66, &v101));
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 12) = 2080;
        sub_1DA56712C(a3);
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v72, v73, &v101));
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 22) = 2048;
        v100 = roundf(a3);
        sub_1DA6702C4();
        *(_WORD *)(v61 + 32) = 2048;
        v100 = round(a4);
        sub_1DA6702C4();
        v74 = v97;
        _os_log_impl(&dword_1DA478000, v97, (os_log_type_t)v96, "􀹴 Marked episode [%s] as partially played with elapsed duration: %s (%f / %f)", (uint8_t *)v61, 0x2Au);
        v75 = v95;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v75, -1, -1);
        MEMORY[0x1DF0A0474](v61, -1, -1);

        v10 = v98;
        v11 = v99;
        (*(void (**)(char *, uint64_t))(v99 + 8))(v19, v98);
        v49 = &selRef_tintColorForTheme_;
      }
      else
      {

        swift_release_n();
        v10 = v98;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v98);
      }
    }
    objc_msgSend(a1, sel_playhead);
    if (vabds_f32(a3, *(float *)&v76) > 0.2)
    {
      v99 = v11;
      *(float *)&v76 = a3;
      objc_msgSend(a1, sel_setPlayhead_, v76);
      sub_1DA66DE7C();
      v77 = a1;
      swift_retain_n();
      v78 = v77;
      v79 = sub_1DA66DEDC();
      v80 = sub_1DA66FDC0();
      if (os_log_type_enabled(v79, (os_log_type_t)v80))
      {
        v81 = swift_slowAlloc();
        v82 = swift_slowAlloc();
        v101 = v82;
        *(_DWORD *)v81 = 136315906;
        v83 = objc_msgSend(v78, sel_uuid);
        v98 = v10;
        LODWORD(v97) = v80;
        v96 = v82;
        if (v83)
        {
          v84 = v83;
          v85 = sub_1DA66F8BC();
          v87 = v86;

        }
        else
        {
          v85 = 4999502;
          v87 = 0xE300000000000000;
        }
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v85, v87, &v101));
        sub_1DA6702C4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 12) = 2080;
        sub_1DA56712C(a3);
        v100 = COERCE_DOUBLE(sub_1DA49AD00(v88, v89, &v101));
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 22) = 2048;
        v100 = roundf(a3);
        sub_1DA6702C4();
        *(_WORD *)(v81 + 32) = 2048;
        v100 = round(a4);
        sub_1DA6702C4();
        _os_log_impl(&dword_1DA478000, v79, (os_log_type_t)v97, "􀐫 Set [%s] last playhead to %s (%f / %f)", (uint8_t *)v81, 0x2Au);
        v90 = v96;
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v90, -1, -1);
        MEMORY[0x1DF0A0474](v81, -1, -1);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v16, v98);
        v49 = &selRef_tintColorForTheme_;
        if (a4 > 0.0)
        {
LABEL_40:
          objc_msgSend(a1, sel_duration);
          if (v91 != a4)
            objc_msgSend(a1, sel_setDuration_, a4);
        }
LABEL_42:
        sub_1DA66C3C4();
        objc_msgSend(a1, sel_setLastDatePlayed_);
        v92 = objc_msgSend(a1, v49[483]);
        if (v92)
        {
          v93 = v92;
          objc_msgSend(v92, sel_resetGoDarkWithReason_, 4);

        }
        return;
      }

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v16, v10);
    }
    if (a4 > 0.0)
      goto LABEL_40;
    goto LABEL_42;
  }
  sub_1DA66DE7C();
  v38 = a1;
  v39 = sub_1DA66DEDC();
  v40 = sub_1DA66FDC0();
  if (!os_log_type_enabled(v39, v40))
  {

    v67 = *(void (**)(char *, uint64_t))(v11 + 8);
    v68 = v13;
    goto LABEL_21;
  }
  v98 = v10;
  v99 = v11;
  v41 = (uint8_t *)swift_slowAlloc();
  v42 = swift_slowAlloc();
  v101 = v42;
  *(_DWORD *)v41 = 136315138;
  v43 = objc_msgSend(v38, sel_uuid);
  if (v43)
  {
    v44 = v43;
    v45 = sub_1DA66F8BC();
    v47 = v46;

  }
  else
  {
    v45 = 4999502;
    v47 = 0xE300000000000000;
  }
  v100 = COERCE_DOUBLE(sub_1DA49AD00(v45, v47, &v101));
  sub_1DA6702C4();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DA478000, v39, v40, "􀁞 Ignoring last playback position for [%s]. Episode was marked as played by user.", v41, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1DF0A0474](v42, -1, -1);
  MEMORY[0x1DF0A0474](v41, -1, -1);

  (*(void (**)(char *, uint64_t))(v99 + 8))(v13, v98);
}

uint64_t LocalLibraryPlaybackPositionTracker.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return v0;
}

uint64_t LocalLibraryPlaybackPositionTracker.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocClassInstance();
}

void sub_1DA566150(_QWORD *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  sub_1DA564830(a1, a2, a3);
}

uint64_t type metadata accessor for LocalLibraryPlaybackPositionTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocalLibraryPlaybackPositionTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalLibraryPlaybackPositionTracker.__allocating_init(stateCoordinator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocalLibraryPlaybackPositionTracker.shouldTrackPosition(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of LocalLibraryPlaybackPositionTracker.updatePlaybackPosition(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1DA5661BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD v33[3];

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if (!v7)
    goto LABEL_54;
  v8 = v7;
  v9 = HIBYTE(v7) & 0xF;
  v10 = result & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0)
    v11 = v9;
  else
    v11 = result & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_54:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v31 = sub_1DA66D264();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    sub_1DA566910(result, v8, 10);
    v14 = v32;
    goto LABEL_45;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v12 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v12 = (unsigned __int8 *)sub_1DA6704A4();
    sub_1DA5669F4(v12, v10, 10);
    v14 = v13 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      sub_1DA66D258();
      v27 = sub_1DA66D264();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 0, 1, v27);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
    goto LABEL_54;
  }
  v33[0] = result;
  v33[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v9)
      goto LABEL_58;
    if (v9 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    if (v9 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v15 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v16 = v9 - 3;
      if (v16)
      {
        v17 = (unsigned __int8 *)v33 + 3;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_32;
          v19 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_32;
          v15 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_32;
          v14 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v14 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v9 || (result - 48) > 9u)
      goto LABEL_32;
    if (v9 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v20 = 10 * (result - 48) + (BYTE1(result) - 48);
      v21 = v9 - 2;
      if (v21)
      {
        v22 = (unsigned __int8 *)v33 + 2;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_32;
          v24 = 10 * v20;
          if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
            goto LABEL_32;
          v20 = v24 + v23;
          if (__OFADD__(v24, v23))
            goto LABEL_32;
          v14 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v9)
  {
    if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v9 == 2)
      {
        v14 = 0;
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v25 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v26 = v9 - 3;
        if (!v26)
          goto LABEL_44;
        v28 = (unsigned __int8 *)v33 + 3;
        while (1)
        {
          v29 = *v28 - 48;
          if (v29 > 9)
            break;
          v30 = 10 * v25;
          if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63)
            break;
          v25 = v30 - v29;
          if (__OFSUB__(v30, v29))
            break;
          v14 = 0;
          ++v28;
          if (!--v26)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v14 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1DA566534@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD v37[3];

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!v7)
    goto LABEL_54;
  v8 = v7;
  v9 = HIBYTE(v7) & 0xF;
  v10 = result & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0)
    v11 = v9;
  else
    v11 = result & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_54:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    v35 = sub_1DA66D30C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a2, 1, 1, v35);
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    sub_1DA566910(result, v8, 10);
    v14 = v36;
    goto LABEL_45;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v12 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v12 = (unsigned __int8 *)sub_1DA6704A4();
    sub_1DA5669F4(v12, v10, 10);
    v14 = v13 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      v27 = a1[3];
      v28 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v27);
      (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
      v29 = a1[3];
      v30 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v29);
      (*(void (**)(uint64_t, uint64_t))(v30 + 72))(v29, v30);
      sub_1DA66D300();
      v31 = sub_1DA66D30C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 0, 1, v31);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
    goto LABEL_54;
  }
  v37[0] = result;
  v37[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v9)
      goto LABEL_58;
    if (v9 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    if (v9 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v15 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v16 = v9 - 3;
      if (v16)
      {
        v17 = (unsigned __int8 *)v37 + 3;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_32;
          v19 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_32;
          v15 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_32;
          v14 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v14 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v9 || (result - 48) > 9u)
      goto LABEL_32;
    if (v9 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v20 = 10 * (result - 48) + (BYTE1(result) - 48);
      v21 = v9 - 2;
      if (v21)
      {
        v22 = (unsigned __int8 *)v37 + 2;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_32;
          v24 = 10 * v20;
          if ((unsigned __int128)(v20 * (__int128)10) >> 64 != (10 * v20) >> 63)
            goto LABEL_32;
          v20 = v24 + v23;
          if (__OFADD__(v24, v23))
            goto LABEL_32;
          v14 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v9)
  {
    if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v9 == 2)
      {
        v14 = 0;
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v25 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v26 = v9 - 3;
        if (!v26)
          goto LABEL_44;
        v32 = (unsigned __int8 *)v37 + 3;
        while (1)
        {
          v33 = *v32 - 48;
          if (v33 > 9)
            break;
          v34 = 10 * v25;
          if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63)
            break;
          v25 = v34 - v33;
          if (__OFSUB__(v34, v33))
            break;
          v14 = 0;
          ++v32;
          if (!--v26)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v14 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1DA5668FC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA5669F4(a1, a2, a3);
}

unsigned __int8 *sub_1DA566910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1DA66FA18();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1DA566C70();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1DA6704A4();
  }
LABEL_7:
  v11 = sub_1DA5669F4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1DA5669F4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1DA566C70()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1DA66FA24();
  v4 = sub_1DA566CEC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DA566CEC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1DA566E30(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1DA49B45C(v9, 0);
      v12 = sub_1DA566F1C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1DF09E320](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1DF09E320);
LABEL_9:
      sub_1DA6704A4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1DF09E320]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1DA566E30(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1DA64D0B0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1DA64D0B0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1DA66F9B8();
  }
  __break(1u);
  return result;
}

unint64_t sub_1DA566F1C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1DA64D0B0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1DA66F9C4();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1DA6704A4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1DA64D0B0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1DA66F9A0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_1DA56712C(long double a1)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v2 = fmod(a1, 1.0);
  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_10;
  v3 = v2 * 100000.0;
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_10;
  if (v3 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v3 < 9.22337204e18)
  {
    v4 = (uint64_t)v3 / 1000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v5 = swift_allocObject();
    v6 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v5 + 16) = xmmword_1DA678FA0;
    v7 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v5 + 56) = v6;
    *(_QWORD *)(v5 + 64) = v7;
    *(_QWORD *)(v5 + 32) = (uint64_t)a1 / 3600;
    *(_QWORD *)(v5 + 96) = v6;
    *(_QWORD *)(v5 + 104) = v7;
    *(_QWORD *)(v5 + 72) = (int)(((__int16)((34953 * ((uint64_t)a1 % 3600)) >> 16) >> 5)
                               + (((((uint64_t)a1 % 3600)
                                  + ((-30583 * ((uint64_t)a1 % 3600)) >> 16)) & 0x8000) >> 15));
    *(_QWORD *)(v5 + 136) = v6;
    *(_QWORD *)(v5 + 144) = v7;
    *(_QWORD *)(v5 + 112) = (uint64_t)a1 % 60;
    *(_QWORD *)(v5 + 176) = v6;
    *(_QWORD *)(v5 + 184) = v7;
    *(_QWORD *)(v5 + 152) = v4;
    sub_1DA66F8E0();
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1DA5672F4()
{
  uint64_t v0;

  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  return swift_deallocObject();
}

void sub_1DA567330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1DA565234(a1, a2, a3, a4, a5, *(void (**)(void *, uint64_t))(v5 + 16), *(_QWORD *)(v5 + 24), *(void **)(v5 + 32), *(_QWORD *)(v5 + 40), v5 + 48);
}

uint64_t sub_1DA567360()
{
  return sub_1DA56736C((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))sub_1DA565384);
}

uint64_t sub_1DA56736C(uint64_t (*a1)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1 + 3, v1[8], v1[9], v1[10]);
}

uint64_t IMPlayerItem.adamID.getter()
{
  void *v0;

  objc_msgSend(v0, sel_episodeStoreId);
  return sub_1DA66DCE4();
}

id IMPlayerItem.isVideoEpisode.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isVideo);
}

uint64_t IMPlayerItem.showArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_showArtworkProperties);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v2, sel_podcastUuid);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1DA66F8BC();
      v10 = v9;

      v11 = 1;
    }
    else
    {
      v8 = 0;
      v10 = 0;
      v11 = -1;
    }
    PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)(v8, v10, v11, a1);

    sub_1DA47F9F0(v8, v10, v11);
    v16 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v14 = a1;
    v15 = 0;
    v12 = v16;
  }
  else
  {
    v12 = type metadata accessor for NowPlayingArtwork.Data();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a1;
    v15 = 1;
  }
  return v13(v14, v15, 1, v12);
}

uint64_t IMPlayerItem.episodeArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_episodeArtworkProperties);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v2, sel_episodeUuid);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1DA66F8BC();
      v10 = v9;

      v11 = 0;
    }
    else
    {
      v8 = 0;
      v10 = 0;
      v11 = -1;
    }
    PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)(v8, v10, v11, a1);

    sub_1DA47F9F0(v8, v10, v11);
    v16 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v14 = a1;
    v15 = 0;
    v12 = v16;
  }
  else
  {
    v12 = type metadata accessor for NowPlayingArtwork.Data();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a1;
    v15 = 1;
  }
  return v13(v14, v15, 1, v12);
}

uint64_t IMPlayerItem.showPageTallArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_uberArtworkProperties);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v2, sel_podcastUuid);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1DA66F8BC();
      v10 = v9;

      v11 = 1;
    }
    else
    {
      v8 = 0;
      v10 = 0;
      v11 = -1;
    }
    PlayerArtwork.artworkModel(libraryEntity:fallbackWidth:fallbackHeight:)(v8, v10, v11, a1);

    sub_1DA47F9F0(v8, v10, v11);
    v16 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v14 = a1;
    v15 = 0;
    v12 = v16;
  }
  else
  {
    v12 = type metadata accessor for NowPlayingArtwork.Data();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a1;
    v15 = 1;
  }
  return v13(v14, v15, 1, v12);
}

uint64_t IMPlayerItem.chapterArtworkData(at:)@<X0>(_QWORD *a1@<X8>, uint64_t a2@<D0>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  char *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a1;
  v4 = sub_1DA66DEF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  sub_1DA66DE94();
  v13 = v2;
  v14 = sub_1DA66DEDC();
  v15 = sub_1DA66FD9C();
  v16 = os_log_type_enabled(v14, v15);
  v47 = v4;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v49 = v18;
    *(_DWORD *)v17 = 136315907;
    v48 = sub_1DA49AD00(0xD000000000000017, 0x80000001DA68E030, &v49);
    v44 = v7;
    sub_1DA6702C4();
    *(_WORD *)(v17 + 12) = 2160;
    v48 = 1752392040;
    sub_1DA6702C4();
    *(_WORD *)(v17 + 22) = 2081;
    objc_msgSend(v13, sel_episodeStoreId);
    v48 = sub_1DA66DCE4();
    sub_1DA4F726C();
    v19 = sub_1DA670354();
    v48 = sub_1DA49AD00(v19, v20, &v49);
    v7 = v44;
    sub_1DA6702C4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 32) = 2050;
    v48 = a2;
    sub_1DA6702C4();
    _os_log_impl(&dword_1DA478000, v14, v15, "%s Fetching chapter artwork for episode %{private,mask.hash}s at %{public}f.", (uint8_t *)v17, 0x2Au);
    swift_arrayDestroy();
    v21 = v18;
    v4 = v47;
    MEMORY[0x1DF0A0474](v21, -1, -1);
    MEMORY[0x1DF0A0474](v17, -1, -1);

  }
  else
  {

  }
  v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v12, v4);
  v23 = objc_msgSend(v13, sel_retrieveChapterArtworkAtTime_, *(double *)&a2);
  if (v23)
  {
    v24 = v23;
    v25 = v45;
    sub_1DA66DE94();
    v26 = v13;
    v27 = sub_1DA66DEDC();
    v28 = sub_1DA66FD9C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v49 = v30;
      *(_DWORD *)v29 = 136315907;
      v48 = sub_1DA49AD00(0xD000000000000017, 0x80000001DA68E030, &v49);
      sub_1DA6702C4();
      *(_WORD *)(v29 + 12) = 2160;
      v48 = 1752392040;
      sub_1DA6702C4();
      *(_WORD *)(v29 + 22) = 2081;
      objc_msgSend(v26, sel_episodeStoreId);
      v48 = sub_1DA66DCE4();
      sub_1DA4F726C();
      v31 = sub_1DA670354();
      v48 = sub_1DA49AD00(v31, v32, &v49);
      v44 = (char *)v22;
      sub_1DA6702C4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 32) = 2050;
      v48 = a2;
      sub_1DA6702C4();
      _os_log_impl(&dword_1DA478000, v27, v28, "%s Found chapter artwork for episode %{private,mask.hash}s at %{public}f.", (uint8_t *)v29, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v30, -1, -1);
      MEMORY[0x1DF0A0474](v29, -1, -1);

      ((void (*)(char *, uint64_t))v44)(v45, v47);
    }
    else
    {

      v22(v25, v4);
    }
    v40 = v46;
    *v46 = v24;
    v41 = type metadata accessor for NowPlayingArtwork.Data();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  else
  {
    sub_1DA66DE94();
    v33 = v13;
    v34 = sub_1DA66DEDC();
    v35 = sub_1DA66FD9C();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v49 = v37;
      *(_DWORD *)v36 = 136315907;
      v48 = sub_1DA49AD00(0xD000000000000017, 0x80000001DA68E030, &v49);
      sub_1DA6702C4();
      *(_WORD *)(v36 + 12) = 2160;
      v48 = 1752392040;
      sub_1DA6702C4();
      *(_WORD *)(v36 + 22) = 2081;
      objc_msgSend(v33, sel_episodeStoreId);
      v48 = sub_1DA66DCE4();
      sub_1DA4F726C();
      v38 = sub_1DA670354();
      v48 = sub_1DA49AD00(v38, v39, &v49);
      sub_1DA6702C4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 32) = 2050;
      v48 = a2;
      sub_1DA6702C4();
      _os_log_impl(&dword_1DA478000, v34, v35, "%s Could not find chapter artwork for episode %{private,mask.hash}s at %{public}f.", (uint8_t *)v36, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v37, -1, -1);
      MEMORY[0x1DF0A0474](v36, -1, -1);

      v22(v7, v47);
    }
    else
    {

      v22(v7, v4);
    }
    v43 = type metadata accessor for NowPlayingArtwork.Data();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v46, 1, 1, v43);
  }
}

uint64_t sub_1DA567E8C()
{
  id *v0;

  objc_msgSend(*v0, sel_episodeStoreId);
  return sub_1DA66DCE4();
}

id sub_1DA567EB8()
{
  id *v0;

  return objc_msgSend(*v0, sel_isVideo);
}

uint64_t sub_1DA567ED8@<X0>(uint64_t a1@<X8>)
{
  return IMPlayerItem.showArtworkData.getter(a1);
}

uint64_t sub_1DA567EF8@<X0>(uint64_t a1@<X8>)
{
  return IMPlayerItem.episodeArtworkData.getter(a1);
}

uint64_t sub_1DA567F18@<X0>(uint64_t a1@<X8>)
{
  return IMPlayerItem.showPageTallArtworkData.getter(a1);
}

uint64_t sub_1DA567F38@<X0>(_QWORD *a1@<X8>, uint64_t a2@<D0>)
{
  return IMPlayerItem.chapterArtworkData(at:)(a1, a2);
}

uint64_t sub_1DA567F58(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1DA6702C4();
  *a1 = v5;
  return result;
}

uint64_t Promise.init(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v10[40];

  sub_1DA4813E4(a1, (uint64_t)v10);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = *(_QWORD *)(v3 + *MEMORY[0x1E0D41370]);
  v7[3] = a2;
  v7[4] = a3;
  v8 = sub_1DA66F604();
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v8;
}

uint64_t sub_1DA568034(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(__n128);
  uint64_t v15;

  v9 = *(_QWORD *)(a7 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  a1(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a7);
}

uint64_t sub_1DA5680FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA568120(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1DA568034(a1, a2, a3, a4, v4[3], v4[4], v4[2]);
}

uint64_t sub_1DA56812C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t i;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  v14 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v12 = v5;
    v13 = v2;
    v7 = a2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      if (objc_msgSend(v7, sel_itemWithPersistentID_, *(_QWORD *)(a1 + 8 * i + 32), v12, v13))
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
    }
    swift_bridgeObjectRelease();
    v9 = v14;
  }
  else
  {
    v10 = a2;
    v9 = MEMORY[0x1E0DEE9D8];
  }

  swift_release();
  return v9;
}

uint64_t sub_1DA56827C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v2;
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  result = a2;
  v8 = (void *)result;
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v6 == v9)
    {

      swift_release();
      swift_bridgeObjectRelease();
      return v10;
    }
    if (v9 >= *(_QWORD *)(a1 + 16))
      break;
    v11 = *(_QWORD *)(a1 + 8 * v9++ + 32);
    result = (uint64_t)objc_msgSend(v8, sel_itemExistsWithPersistentID_, v11);
    if ((_DWORD)result)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      v14 = v3;
      if ((result & 1) == 0)
        result = sub_1DA509EA4(0, *(_QWORD *)(v10 + 16) + 1, 1);
      v13 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      if (v13 >= v12 >> 1)
        result = sub_1DA509EA4(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v10 + 16) = v13 + 1;
      *(_QWORD *)(v10 + 8 * v13 + 32) = v11;
      v3 = v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5683C8()
{
  void *v0;
  uint64_t v1;

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v0 = (void *)sub_1DA66FE38();
  v1 = sub_1DA66FE2C();

  return v1;
}

uint64_t sub_1DA568424(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(a1, (uint64_t)v4, &qword_1EDAE3BC8);
  return sub_1DA568500((uint64_t)v4);
}

uint64_t sub_1DA5684A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit;
  swift_beginAccess();
  return sub_1DA49CC94(v3, a1, &qword_1EDAE3BC8);
}

uint64_t sub_1DA568500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit;
  swift_beginAccess();
  sub_1DA568678(a1, v10);
  swift_endAccess();
  sub_1DA49CC94(v10, (uint64_t)v9, &qword_1EDAE3BC8);
  sub_1DA66D948();
  sub_1DA47E2F0((uint64_t)v9, &qword_1EDAE3BC8);
  sub_1DA49CC94(v10, (uint64_t)v9, &qword_1EDAE3BC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B88);
  sub_1DA66FBA4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1DA47E2F0(a1, &qword_1EDAE3BC8);
}

uint64_t sub_1DA568678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void (*sub_1DA5686C0(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B70);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(_QWORD *)(v5 + 64));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  v7 = malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  v8 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit;
  v3[7] = v7;
  v3[8] = v8;
  swift_beginAccess();
  return sub_1DA568764;
}

void sub_1DA568764(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0)
  {
    v5 = (void *)v3[6];
    v4 = (void *)v3[7];
  }
  else
  {
    v4 = (void *)v3[7];
    v6 = v3[5];
    v5 = (void *)v3[6];
    v7 = v3[4];
    v8 = v3[3] + v3[8];
    sub_1DA49CC94(v8, (uint64_t)v4, &qword_1EDAE3BC8);
    sub_1DA66D948();
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDAE3BC8);
    sub_1DA49CC94(v8, (uint64_t)v4, &qword_1EDAE3BC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B88);
    sub_1DA66FBA4();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v7);
  }
  free(v4);
  free(v5);
  free(v3);
}

uint64_t JSLibraryStorageTipProvider.suggestedEpisodeLimitStream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimitStream;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DA5688A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher);
  swift_beginAccess();
  *v3 = v2;
  sub_1DA66BE60();
  return swift_release();
}

uint64_t sub_1DA56890C()
{
  swift_beginAccess();
  return sub_1DA66BE60();
}

void *sub_1DA568954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___mediaLibrary;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___mediaLibrary);
  v4 = v3;
  if (v3 == (void *)1)
  {
    sub_1DA47D774(0, &qword_1EDAE4BE0);
    sub_1DA66EDC4();
    v4 = v8;
    v5 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v8;
    v6 = v8;
    sub_1DA532940(v5);
  }
  sub_1DA532950(v3);
  return v4;
}

uint64_t sub_1DA5689F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___restoreToken);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___restoreToken + 8))
  {
    v2 = *v1;
  }
  else
  {
    v2 = sub_1DA568A6C();
    *v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DA568A6C()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = sub_1DA568954();
  if (!v0)
    v0 = objc_msgSend((id)objc_opt_self(), sel_defaultMediaLibrary);
  v1 = v0;
  if (objc_msgSend(v0, sel_valueForDatabaseProperty_, *MEMORY[0x1E0D7F1B0]))
  {
    sub_1DA670360();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1DA4A686C((uint64_t)v5, (uint64_t)v6, &qword_1EDAE5130);
  if (!v7)
  {
    sub_1DA47E2F0((uint64_t)v6, &qword_1EDAE5130);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:

    return 0;
  }
  v2 = v4;

  return v2;
}

uint64_t JSLibraryStorageTipProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  JSLibraryStorageTipProvider.init(asPartOf:)(a1);
  return v2;
}

uint64_t JSLibraryStorageTipProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  id v70;

  v2 = v1;
  v65 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4690);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4438);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B80);
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BA0);
  v66 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B98);
  MEMORY[0x1E0C80A78](v16);
  v64 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v52 - v19;
  v21 = v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit;
  v22 = type metadata accessor for EpisodeLimitTip();
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v59(v21, 1, 1, v22);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher) = 0;
  v23 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider__globalAutomaticDownloadLimit;
  sub_1DA66FFAC();
  sub_1DA670030();
  sub_1DA66F8BC();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel__applePodcastsFoundationSettingsUserDefaults);
  *(_QWORD *)(v2 + v23) = sub_1DA66E2CC();
  v26 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider__ignoredConsumedSpaceQuantity;
  sub_1DA66F8BC();
  v27 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)(v2 + v26) = sub_1DA66E314();
  v28 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider__lastDismissedRestoreToken;
  sub_1DA66F8BC();
  v29 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)(v2 + v28) = sub_1DA66E2FC();
  v30 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider__lastDismissedOSVersion;
  sub_1DA66F8BC();
  v31 = objc_msgSend(v24, sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)(v2 + v30) = sub_1DA66E2FC();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___mediaLibrary) = 1;
  v32 = v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_spaceDistribution;
  v33 = sub_1DA66D63C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  v34 = (_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___restoreToken);
  *v34 = 0;
  v34[1] = 0;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B88);
  v36 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v20, 1, 1, v35);
  v68 = v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v12, *MEMORY[0x1E0DF07B8], v61);
  v37 = v15;
  sub_1DA66FBB0();
  v38 = v22;
  v39 = v65;
  v59((uint64_t)v62, 1, 1, v38);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE42C0);
  swift_allocObject();
  v40 = (void *)sub_1DA66D954();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_objectGraph) = v39;
  sub_1DA66D660();
  sub_1DA66BE60();
  sub_1DA66EDDC();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_mediaSpaceCalculator) = v69;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v41 = objc_msgSend(v69, sel_importContext);
  v42 = (uint64_t)v64;
  swift_unknownObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_managedObjectContext) = v41;
  v63 = v20;
  sub_1DA49CC94((uint64_t)v20, v42, &qword_1EDAE4B98);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v42, 1, v35);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_streamContinuation, v42, v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimitStream, v37, v67);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeSubject) = v40;
    v69 = v40;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
    sub_1DA66BE60();
    v70 = (id)sub_1DA66FEC8();
    v44 = sub_1DA66FE8C();
    v45 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v52, 1, 1, v44);
    sub_1DA4841D4(&qword_1EDAE42B8, (uint64_t *)&unk_1EDAE42C0, MEMORY[0x1E0D7E990]);
    sub_1DA4A89F0();
    v46 = v53;
    sub_1DA66E248();
    sub_1DA47E2F0(v45, (uint64_t *)&unk_1EDAE20A0);

    swift_allocObject();
    swift_weakInit();
    sub_1DA4841D4(&qword_1EDAE4688, &qword_1EDAE4690, MEMORY[0x1E0C95CB8]);
    sub_1DA66BE60();
    v47 = v55;
    v48 = v56;
    sub_1DA66E134();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v47);
    swift_release();
    sub_1DA4841D4(&qword_1EDAE4430, &qword_1EDAE4438, MEMORY[0x1E0C957C0]);
    v49 = v58;
    v50 = sub_1DA66E11C();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v67);
    v51 = (uint64_t *)(v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher);
    swift_beginAccess();
    *v51 = v50;
    swift_release();
    sub_1DA47E2F0((uint64_t)v63, &qword_1EDAE4B98);
    return v2;
  }
  return result;
}

uint64_t sub_1DA5693B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1DA47E2F0(a2, &qword_1EDAE4B98);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B88);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1DA569424(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5693B0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DA56942C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA569450()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    sub_1DA66FB80();
    v5 = sub_1DA66FB98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_1DA66BE60();
    sub_1DA569804((uint64_t)v2, (uint64_t)&unk_1F026AF18, (uint64_t)v6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA569550()
{
  return sub_1DA569450();
}

uint64_t sub_1DA569558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66FB80();
  v4 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v0;
  sub_1DA66BE60();
  sub_1DA569804((uint64_t)v3, (uint64_t)&unk_1F026AE48, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_1DA569620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  v4[3] = swift_task_alloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  v4[4] = sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA5696C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask))
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    sub_1DA66FB80();
    v5 = sub_1DA66FB98();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v1;
    v6[3] = v4;
    v6[4] = v1;
    swift_retain_n();
    *(_QWORD *)(v1 + v2) = sub_1DA569804(v3, (uint64_t)&unk_1F026AF10, (uint64_t)v6);
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA569798(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DA4A9520;
  return sub_1DA569620(a1, v4, v5, v6);
}

uint64_t sub_1DA569804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DA66FB98();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DA66FB8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DA47E2F0(a1, &qword_1EDAE2000);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA66FB38();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1DA569950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask))
  {
    sub_1DA66FB80();
    v5 = sub_1DA66FB98();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
    v6 = sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v0;
    v7[3] = v6;
    v7[4] = v0;
    swift_retain_n();
    *(_QWORD *)(v0 + v4) = sub_1DA569804((uint64_t)v3, (uint64_t)&unk_1F026AE60, (uint64_t)v7);
    swift_release();
  }
}

uint64_t sub_1DA569A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[247] = a4;
  v5 = sub_1DA66DEF4();
  v4[253] = v5;
  v4[259] = *(_QWORD *)(v5 - 8);
  v4[265] = swift_task_alloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  v4[271] = sub_1DA66FB38();
  v4[277] = v6;
  return swift_task_switch();
}

uint64_t sub_1DA569B04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0[247];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D90);
  v2 = swift_allocObject();
  v0[278] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1DA678510;
  v3 = (void *)*MEMORY[0x1E0DC4860];
  *(_QWORD *)(v2 + 32) = *MEMORY[0x1E0DC4860];
  v4 = swift_task_alloc();
  v0[279] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v3;
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  v6 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  v0[280] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53E0);
  v7 = swift_allocObject();
  v0[281] = v7;
  *(_OWORD *)(v7 + 16) = xmmword_1DA678FD0;
  *(_QWORD *)(v7 + 32) = sub_1DA66F8BC();
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 48) = sub_1DA66F8BC();
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = sub_1DA66F8BC();
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = sub_1DA66F8BC();
  *(_QWORD *)(v7 + 88) = v11;
  if (qword_1EDAE48F0 != -1)
    swift_once();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4900);
  __swift_project_value_buffer(v12, (uint64_t)qword_1EDAEAB58);
  *(_QWORD *)(v7 + 96) = sub_1DA66ED7C();
  *(_QWORD *)(v7 + 104) = v13;
  if (qword_1EDAE48E8 != -1)
    swift_once();
  v14 = v0[247];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1EA0);
  __swift_project_value_buffer(v15, (uint64_t)qword_1EDAEABC0);
  *(_QWORD *)(v7 + 112) = sub_1DA66ED7C();
  *(_QWORD *)(v7 + 120) = v16;
  v17 = (_QWORD *)swift_task_alloc();
  v0[282] = v17;
  v17[2] = v6;
  v17[3] = v7;
  v17[4] = v14;
  swift_asyncLet_begin();
  sub_1DA66D648();
  return swift_asyncLet_get();
}

uint64_t sub_1DA569DB8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 2279) = *(_BYTE *)(v0 + 2278);
  return swift_asyncLet_get();
}

uint64_t sub_1DA569DD8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 2280) = *(_BYTE *)(v0 + 2277);
  return swift_asyncLet_get();
}

uint64_t sub_1DA569DF8()
{
  return swift_task_switch();
}

uint64_t sub_1DA569E0C()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 2276);
  if ((sub_1DA66FBD4() & 1) == 0)
  {
    sub_1DA66DED0();
    v2 = sub_1DA66DEDC();
    v3 = sub_1DA66FDA8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(unsigned __int8 *)(v0 + 2280);
      v5 = *(unsigned __int8 *)(v0 + 2279);
      v6 = swift_slowAlloc();
      *(_DWORD *)v6 = 67109632;
      *(_DWORD *)(v0 + 2268) = v5;
      sub_1DA6702C4();
      *(_WORD *)(v6 + 8) = 1024;
      *(_DWORD *)(v0 + 2272) = v4;
      sub_1DA6702C4();
      *(_WORD *)(v6 + 14) = 1024;
      *(_DWORD *)(v0 + 2264) = v1;
      sub_1DA6702C4();
      _os_log_impl(&dword_1DA478000, v2, v3, "Unexpectedly exited all observer loops without task cancellation: %{BOOL}d, %{BOOL}d, %{BOOL}d", (uint8_t *)v6, 0x14u);
      MEMORY[0x1DF0A0474](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 2120);
    v8 = *(_QWORD *)(v0 + 2072);
    v9 = *(_QWORD *)(v0 + 2024);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  return swift_asyncLet_finish();
}

uint64_t sub_1DA569F7C()
{
  return swift_task_switch();
}

uint64_t sub_1DA569F90()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_asyncLet_finish();
}

uint64_t sub_1DA56A004()
{
  return swift_task_switch();
}

uint64_t sub_1DA56A018()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1DA56A030()
{
  return swift_task_switch();
}

uint64_t sub_1DA56A044()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for JSLibraryStorageTipProvider()
{
  uint64_t result;

  result = qword_1EDAE3E80;
  if (!qword_1EDAE3E80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA56A0CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DA4A9520;
  return sub_1DA569A60(a1, v4, v5, v6);
}

uint64_t sub_1DA56A138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56A154()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1DA56A1F0;
  return sub_1DA66FF88();
}

uint64_t sub_1DA56A1F0(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 40);
  *(_BYTE *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  swift_release();

  return swift_task_switch();
}

uint64_t sub_1DA56A25C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56A274(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a2;
  v3 = sub_1DA66DEF4();
  v2[3] = v3;
  v2[4] = *(_QWORD *)(v3 - 8);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA56A2D4()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1DA66DED0();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "Updating tip recommendations in response to foreground", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }
  v5 = v0[4];
  v4 = v0[5];
  v6 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[6] = v7;
  *v7 = v0;
  v7[1] = sub_1DA56A3B4;
  return sub_1DA56ACA8();
}

uint64_t sub_1DA56A3B4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA56A408(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = a2;
  v2[5] = OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_mediaSpaceCalculator;
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA56A48C()
{
  _QWORD *v0;

  v0[6] = *(_QWORD *)(v0[4] + v0[5]);
  sub_1DA66BE60();
  return swift_task_switch();
}

uint64_t sub_1DA56A4D0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = v0[6];
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  sub_1DA66D660();
  sub_1DA47E32C((unint64_t *)&unk_1EDAE4230, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E688], MEMORY[0x1E0D7E698]);
  *v1 = v0;
  v1[1] = sub_1DA56A578;
  return sub_1DA66FC1C();
}

uint64_t sub_1DA56A578(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA56A5E8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 24) = *(_BYTE *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56A600(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4218);
  v2[7] = swift_task_alloc();
  v3 = sub_1DA66DEF4();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA56A684()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DA66DED0();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "Updating tip recommendations in response to new storage distribution", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }
  v5 = v0[9];
  v4 = v0[10];
  v6 = v0[8];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA56A798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = sub_1DA66D63C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = v2 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_spaceDistribution;
  swift_beginAccess();
  sub_1DA56DD24(v1, v6);
  swift_endAccess();
  v7 = (_QWORD *)swift_task_alloc();
  v0[11] = v7;
  *v7 = v0;
  v7[1] = sub_1DA56A86C;
  return sub_1DA56ACA8();
}

uint64_t sub_1DA56A86C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA56A8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA56A8E8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1DA56A950;
  return sub_1DA66FDFC();
}

uint64_t sub_1DA56A950(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA56A9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_1DA66DEF4();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA56AA18()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DA66DED0();
  swift_bridgeObjectRetain_n();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v12 = v0[7];
    v13 = v0[6];
    v14 = v0[8];
    v3 = v0[4];
    v4 = v0[3];
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_1DA49AD00(v4, v3, &v15);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DA478000, v1, v2, "Updating library in response to defaults key: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v6, -1, -1);
    MEMORY[0x1DF0A0474](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  }
  else
  {
    v8 = v0[7];
    v7 = v0[8];
    v9 = v0[6];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = (_QWORD *)swift_task_alloc();
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_1DA56ABF4;
  return sub_1DA56ACA8();
}

uint64_t sub_1DA56ABF4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA56AC48()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_observersTask))
  {
    sub_1DA66BE60();
    sub_1DA66FBC8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DA56ACA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1[6] = v0;
  v2 = sub_1DA66FB44();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v3 = sub_1DA66DEF4();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v4 = swift_task_alloc();
  v1[18] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v1[19] = v5;
  *v5 = v1;
  v5[1] = sub_1DA56ADAC;
  return sub_1DA56B3F0(v4);
}

uint64_t sub_1DA56ADAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  sub_1DA66FB38();
  return swift_task_switch();
}

uint64_t sub_1DA56AE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  sub_1DA66DED0();
  sub_1DA49CC94(v2, v1, &qword_1EDAE3BC8);
  v3 = sub_1DA66DEDC();
  v4 = sub_1DA66FD9C();
  if (os_log_type_enabled(v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 112);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v20 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1DA49CC94(v5, v6, &qword_1EDAE3BC8);
    v9 = sub_1DA66F904();
    *(_QWORD *)(v0 + 40) = sub_1DA49AD00(v9, v10, &v20);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA47E2F0(v5, &qword_1EDAE3BC8);
    _os_log_impl(&dword_1DA478000, v3, v4, "Issuing retention policy change recommendation: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v8, -1, -1);
    MEMORY[0x1DF0A0474](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    sub_1DA47E2F0(*(_QWORD *)(v0 + 136), &qword_1EDAE3BC8);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 128);
  sub_1DA49CC94(v14, v15, &qword_1EDAE3BC8);
  sub_1DA568500(v15);
  sub_1DA47E2F0(v14, &qword_1EDAE3BC8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56B0B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 160);
  if ((v3 & 1) != 0)
  {

    sub_1DA66DED0();
    v5 = sub_1DA66DEDC();
    v6 = sub_1DA66FD9C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1DA478000, v5, v6, "Computing episode limit suggestion cancelled", v7, 2u);
      MEMORY[0x1DF0A0474](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);

  }
  else
  {

    sub_1DA66DED0();
    v14 = v4;
    v15 = v4;
    v16 = sub_1DA66DEDC();
    v17 = sub_1DA66FDA8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void **)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 80);
    if (v18)
    {
      v30 = *(_QWORD *)(v0 + 80);
      v23 = (uint8_t *)swift_slowAlloc();
      v29 = v21;
      v24 = swift_slowAlloc();
      v31 = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)(v0 + 24) = v19;
      v25 = v19;
      v26 = sub_1DA66F904();
      *(_QWORD *)(v0 + 32) = sub_1DA49AD00(v26, v27, &v31);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DA478000, v16, v17, "Encountered fatal error to computing episode limit suggestion: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v24, -1, -1);
      MEMORY[0x1DF0A0474](v23, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, v30);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56B3F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_1DA66CBE0();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_1DA66D63C();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4218);
  v2[16] = swift_task_alloc();
  v5 = sub_1DA66DEF4();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3D68);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v6 = swift_task_alloc();
  v2[26] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v2[27] = v7;
  *v7 = v2;
  v7[1] = sub_1DA56B568;
  return sub_1DA56C6EC(v6);
}

uint64_t sub_1DA56B568()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  v3 = sub_1DA66FB38();
  if (!v0)
  {
    *(_QWORD *)(v2 + 232) = v3;
    *(_QWORD *)(v2 + 240) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_1DA56B618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  char v51;
  void *v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = (uint64_t *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  sub_1DA66DED0();
  sub_1DA49CC94(v1, v3, &qword_1EDAE3D68);
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FD90();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 200);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 192);
    v9 = (uint8_t *)swift_slowAlloc();
    v62 = swift_slowAlloc();
    v63 = v62;
    *(_DWORD *)v9 = 136315138;
    sub_1DA49CC94(v7, v8, &qword_1EDAE3D68);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D58);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
    v12 = *(_QWORD *)(v0 + 192);
    if (v11 == 1)
    {
      sub_1DA47E2F0(v12, &qword_1EDAE3D68);
      v13 = 0;
      v14 = 4;
    }
    else
    {
      v13 = *(_QWORD *)v12;
      v14 = *(_BYTE *)(v12 + 8);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v12 + *(int *)(v10 + 48), *(_QWORD *)(v0 + 88));
    }
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 144);
    v58 = *(_QWORD *)(v0 + 136);
    v60 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 16) = v13;
    *(_BYTE *)(v0 + 24) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3D50);
    v21 = sub_1DA66F904();
    *(_QWORD *)(v0 + 40) = sub_1DA49AD00(v21, v22, &v63);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA47E2F0(v19, &qword_1EDAE3D68);
    _os_log_impl(&dword_1DA478000, v4, v5, "Received episode limit suggestion from the JS layer: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v62, -1, -1);
    MEMORY[0x1DF0A0474](v9, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v18(v60, v58);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    sub_1DA47E2F0(v7, &qword_1EDAE3D68);

    v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v18(v15, v16);
  }
  v23 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 184);
  sub_1DA66DED0();
  sub_1DA49CC94(v23, v24, &qword_1EDAE3D68);
  v25 = sub_1DA66DEDC();
  v26 = sub_1DA66FD9C();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(_QWORD *)(v0 + 184);
  if (v27)
  {
    v29 = *(_QWORD *)(v0 + 176);
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v63 = v31;
    *(_DWORD *)v30 = 136315138;
    sub_1DA49CC94(v28, v29, &qword_1EDAE3D68);
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D58);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v29, 1, v32);
    v34 = *(_QWORD *)(v0 + 176);
    if (v33 == 1)
    {
      sub_1DA47E2F0(v34, &qword_1EDAE3D68);
      v35 = 1;
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 128), v34 + *(int *)(v32 + 48), *(_QWORD *)(v0 + 88));
      v35 = 0;
    }
    v38 = *(_QWORD *)(v0 + 184);
    v59 = *(_QWORD *)(v0 + 136);
    v61 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 128), v35, 1, *(_QWORD *)(v0 + 88));
    v39 = sub_1DA66F904();
    *(_QWORD *)(v0 + 32) = sub_1DA49AD00(v39, v40, &v63);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    sub_1DA47E2F0(v38, &qword_1EDAE3D68);
    _os_log_impl(&dword_1DA478000, v25, v26, "Storage distribution: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v31, -1, -1);
    MEMORY[0x1DF0A0474](v30, -1, -1);

    v18(v61, v59);
  }
  else
  {
    v36 = *(_QWORD *)(v0 + 152);
    v37 = *(_QWORD *)(v0 + 136);
    sub_1DA47E2F0(*(_QWORD *)(v0 + 184), &qword_1EDAE3D68);

    v18(v36, v37);
  }
  v41 = *(_QWORD *)(v0 + 168);
  sub_1DA49CC94(*(_QWORD *)(v0 + 208), v41, &qword_1EDAE3D68);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42) == 1)
  {
    sub_1DA47E2F0(*v2, &qword_1EDAE3D68);
    v2 = (uint64_t *)(v0 + 168);
LABEL_19:
    v55 = *(_QWORD *)(v0 + 48);
    sub_1DA47E2F0(*v2, &qword_1EDAE3D68);
    v56 = type metadata accessor for EpisodeLimitTip();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 1, v56);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 112);
  v45 = *(_QWORD *)(v0 + 88);
  v46 = *(_QWORD *)(v0 + 96);
  v47 = *(_QWORD *)v43;
  *(_QWORD *)(v0 + 248) = *(_QWORD *)v43;
  v48 = *(_BYTE *)(v43 + 8);
  v49 = v43 + *(int *)(v42 + 48);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
  *(_QWORD *)(v0 + 256) = v50;
  v50(v44, v49, v45);
  LOBYTE(v63) = v48;
  sub_1DA56CFF8((uint64_t)&v63);
  if ((v51 & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    goto LABEL_19;
  }
  v52 = sub_1DA568954();
  *(_QWORD *)(v0 + 264) = v52;
  if (v52)
  {
    v53 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v53;
    *v53 = v0;
    v53[1] = sub_1DA56BCC0;
    return sub_1DA66FFA0();
  }
  else
  {
    v57 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v57;
    *v57 = v0;
    v57[1] = sub_1DA56BEBC;
    return sub_1DA56C318(v47);
  }
}

uint64_t sub_1DA56BCC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 280) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 288) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56BD34()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(id *)(v0 + 264);
  v3 = sub_1DA56827C(v1, v2);
  v4 = v2;
  v5 = sub_1DA56812C(v3, v4);
  swift_bridgeObjectRelease();

  v6 = _sSo14MPMediaLibraryC10PodcastsUIE4size2ofSiSaySo0A4ItemCG_tF_0(v5);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v7 = v6;
    if (!(v5 >> 62))
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
LABEL_4:

      *(_QWORD *)(v0 + 304) = v7;
      *(_QWORD *)(v0 + 312) = v8;
      return swift_task_switch();
    }
    swift_bridgeObjectRetain();
    v8 = sub_1DA6705A0();
    swift_bridgeObjectRelease_n();
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  return sub_1DA670564();
}

uint64_t sub_1DA56BE7C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 280);
  return swift_task_switch();
}

uint64_t sub_1DA56BEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v6;

  v6 = (_QWORD *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    v6[40] = v2;
  }
  else
  {
    v6[38] = a1;
    v6[39] = a2;
  }
  return swift_task_switch();
}

uint64_t sub_1DA56BF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);

  v24 = *(_QWORD *)(v0 + 312);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 256);
  v19 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 72);
  v22 = v1;
  v23 = *(_QWORD *)(v0 + 64);
  v6 = *(char **)(v0 + 48);
  sub_1DA66CBBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v8 = objc_msgSend(v7, sel_operatingSystemVersionString);

  v9 = sub_1DA66F8BC();
  v11 = v10;

  v12 = sub_1DA5689F4();
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1DA47E2F0(v19, &qword_1EDAE3D68);
  *(_QWORD *)v6 = v20;
  v15 = (int *)type metadata accessor for EpisodeLimitTip();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(&v6[v15[5]], v5, v23);
  *(_QWORD *)&v6[v15[6]] = v24;
  v25(&v6[v15[7]], v22, v4);
  v16 = (uint64_t *)&v6[v15[8]];
  *v16 = v9;
  v16[1] = v11;
  v17 = (uint64_t *)&v6[v15[9]];
  *v17 = v12;
  v17[1] = v14;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v15 - 1) + 56))(v6, 0, 1, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56C154()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  sub_1DA47E2F0(v1, &qword_1EDAE3D68);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56C248()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56C318(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1DA66C358();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[7] = swift_task_alloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  v2[8] = sub_1DA66FB38();
  v2[9] = v4;
  return swift_task_switch();
}

uint64_t sub_1DA56C3D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_1DA56C438;
  return sub_1DA66FF94();
}

uint64_t sub_1DA56C438(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1DA56C4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD, uint64_t);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v1 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v1 + 16);
  v25[0] = 0;
  v2 = *(_QWORD *)(v0 + 40);
  if (!v24)
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain();
LABEL_6:
    v8(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 32));
    goto LABEL_7;
  }
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 72);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  v22 = v4;
  v4(v6, v1 + v3, v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v8(v6, 0, 1, v7);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v9(v6, 1, v7) != 1)
  {
    v10 = *(_QWORD *)(v0 + 48);
    v11 = *(_QWORD *)(v0 + 32);
    v21 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 32);
    v21(v10, *(_QWORD *)(v0 + 56), v11);
    sub_1DA55EC1C(v25, v10);
    v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v12(v10, v11);
    if (v5)
      return swift_bridgeObjectRelease();
    v15 = v24 - 1;
    if (v24 != 1)
    {
      v16 = v1 + v23 + v3;
      while (1)
      {
        v17 = *(_QWORD *)(v0 + 56);
        v18 = *(_QWORD *)(v0 + 32);
        v22(v17, v16, v18);
        v8(v17, 0, 1, v18);
        if (v9(v17, 1, v18) == 1)
          goto LABEL_7;
        v19 = *(_QWORD *)(v0 + 48);
        v20 = *(_QWORD *)(v0 + 32);
        v21(v19, *(_QWORD *)(v0 + 56), v20);
        sub_1DA55EC1C(v25, v19);
        v12(v19, v20);
        v16 += v23;
        if (!--v15)
          goto LABEL_6;
      }
    }
    goto LABEL_6;
  }
LABEL_7:
  swift_bridgeObjectRelease_n();
  v14 = v25[0];
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v14, v24);
}

uint64_t sub_1DA56C6EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1DA66DEF4();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4130);
  v2[20] = swift_task_alloc();
  v4 = sub_1DA66CBE0();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = type metadata accessor for LibraryStorageTipSuggestedLimitIntent();
  v2[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4218);
  v2[27] = swift_task_alloc();
  v5 = sub_1DA66D63C();
  v2[28] = v5;
  v2[29] = *(_QWORD *)(v5 - 8);
  v2[30] = swift_task_alloc();
  type metadata accessor for JSLibraryStorageTipProvider();
  sub_1DA47E32C(&qword_1EDAE3E78, (uint64_t (*)(uint64_t))type metadata accessor for JSLibraryStorageTipProvider, (uint64_t)&protocol conformance descriptor for JSLibraryStorageTipProvider);
  v2[31] = sub_1DA66FB38();
  v2[32] = v6;
  return swift_task_switch();
}

uint64_t sub_1DA56C854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 128);
  sub_1DA66BE60();
  sub_1DA66E2D8();
  swift_release();
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 112);
  v5 = v4 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_spaceDistribution;
  swift_beginAccess();
  sub_1DA49CC94(v5, v3, (uint64_t *)&unk_1EDAE4218);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 216), (uint64_t *)&unk_1EDAE4218);
    sub_1DA66DED0();
    v6 = sub_1DA66DEDC();
    v7 = sub_1DA66FDA8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1DA478000, v6, v7, "Unable to compute dependent information for determining the storage tip threshold. The tip will not be displayed.", v8, 2u);
      MEMORY[0x1DF0A0474](v8, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 120);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 224);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 32);
    *(_QWORD *)(v0 + 272) = v19;
    v19(v15, v16, v17);
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v18 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_objectGraph);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v20;
    *v20 = v0;
    v20[1] = sub_1DA56CACC;
    return sub_1DA66EDD0();
  }
}

uint64_t sub_1DA56CACC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA56CB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  _QWORD *v12;

  sub_1DA66D624();
  sub_1DA66D630();
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BB8);
  sub_1DA66E2D8();
  swift_release();
  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
  {
    v1 = 1;
LABEL_5:
    v2 = *(_QWORD *)(v0 + 264);
    v4 = *(int **)(v0 + 200);
    v3 = *(char **)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, v1, 1, v8);
    v10 = sub_1DA670024();
    *(_QWORD *)v3 = v2;
    *((_QWORD *)v3 + 1) = v10;
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    v11(&v3[v4[6]], v5, v8);
    v11(&v3[v4[7]], v6, v8);
    sub_1DA4A686C(v9, (uint64_t)&v3[v4[8]], &qword_1EDAE4130);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v12;
    sub_1DA47E32C((unint64_t *)&qword_1EDAE3FC0, (uint64_t (*)(uint64_t))type metadata accessor for LibraryStorageTipSuggestedLimitIntent, (uint64_t)&protocol conformance descriptor for LibraryStorageTipSuggestedLimitIntent);
    *v12 = v0;
    v12[1] = sub_1DA56CD40;
    return sub_1DA66EE90();
  }
  if ((*(_QWORD *)(v0 + 80) & 0x8000000000000000) == 0)
  {
    sub_1DA66CBBC();
    v1 = 0;
    goto LABEL_5;
  }
  return sub_1DA670564();
}

uint64_t sub_1DA56CD40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA56CDA0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 120);
  sub_1DA47F880(*(_QWORD *)(v0 + 208), (uint64_t (*)(_QWORD))type metadata accessor for LibraryStorageTipSuggestedLimitIntent);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_BYTE *)(v0 + 104);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE3D58);
  v8 = v4 + *(int *)(v7 + 48);
  *(_QWORD *)v4 = v5;
  *(_BYTE *)(v4 + 8) = v6;
  v1(v8, v2, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56CEA4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56CF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  sub_1DA47F880(*(_QWORD *)(v0 + 208), (uint64_t (*)(_QWORD))type metadata accessor for LibraryStorageTipSuggestedLimitIntent);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA56CFF8(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1DA56D02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1DA5689F4();
  v2 = v1;
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
  sub_1DA66E2D8();
  swift_release();
  if (v7)
  {
    if (v0 == v6 && v7 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = 0;
    }
    else
    {
      v4 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v4 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = 1;
  }
  return v3 & 1;
}

uint64_t JSLibraryStorageTipProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit, &qword_1EDAE3BC8);
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimitStream;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_streamContinuation;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4B88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DA532940(*(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider____lazy_storage___mediaLibrary));

  swift_release();
  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_spaceDistribution, (uint64_t *)&unk_1EDAE4218);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t JSLibraryStorageTipProvider.__deallocating_deinit()
{
  JSLibraryStorageTipProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t JSLibraryStorageTipProvider.tips.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE44A0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher);
  result = swift_beginAccess();
  if (*v5)
  {
    v8 = *v5;
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4748);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC0);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4738, &qword_1EDAE4748, MEMORY[0x1E0C95D90]);
    sub_1DA66E17C();
    swift_release();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4490, (uint64_t *)&unk_1EDAE44A0, MEMORY[0x1E0C95950]);
    v7 = sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1DA56D490@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t result;
  unint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  __int128 v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3BC8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EpisodeLimitTip();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA49CC94(a1, (uint64_t)v6, &qword_1EDAE3BC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA47E2F0((uint64_t)v6, &qword_1EDAE3BC8);
    result = sub_1DA640834(MEMORY[0x1E0DEE9D8]);
    v12 = result;
  }
  else
  {
    sub_1DA56DAFC((uint64_t)v6, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D30);
    inited = swift_initStackObject();
    v16 = xmmword_1DA678510;
    *(_OWORD *)(inited + 16) = xmmword_1DA678510;
    *(_BYTE *)(inited + 32) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AE90);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = v16;
    *(_QWORD *)(v14 + 56) = v7;
    *(_QWORD *)(v14 + 64) = &protocol witness table for EpisodeLimitTip;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 32));
    sub_1DA55464C((uint64_t)v10, (uint64_t)boxed_opaque_existential_1);
    *(_QWORD *)(inited + 40) = v14;
    v12 = sub_1DA640834(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4098);
    swift_arrayDestroy();
    result = sub_1DA47F880((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EpisodeLimitTip);
  }
  *a2 = v12;
  return result;
}

uint64_t sub_1DA56D660()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE44A0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(*v0 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher);
  result = swift_beginAccess();
  if (*v5)
  {
    v8 = *v5;
    sub_1DA66BE60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4748);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4AC0);
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4738, &qword_1EDAE4748, MEMORY[0x1E0C95D90]);
    sub_1DA66E17C();
    swift_release();
    sub_1DA4841D4((unint64_t *)&unk_1EDAE4490, (uint64_t *)&unk_1EDAE44A0, MEMORY[0x1E0C95950]);
    v7 = sub_1DA66E11C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA56D7BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_suggestedEpisodeLimit;
  swift_beginAccess();
  return sub_1DA49CC94(v3, a2, &qword_1EDAE3BC8);
}

uint64_t sub_1DA56D81C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC10PodcastsUI27JSLibraryStorageTipProvider_storageTipPublisher);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1DA66BE60();
}

uint64_t sub_1DA56D874()
{
  return type metadata accessor for JSLibraryStorageTipProvider();
}

void sub_1DA56D87C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DA56DA8C(319, &qword_1EDAE3BD0, (void (*)(uint64_t))type metadata accessor for EpisodeLimitTip);
  if (v0 <= 0x3F)
  {
    sub_1DA56DA30(319, &qword_1EDAE4BA8, MEMORY[0x1E0DF0838]);
    if (v1 <= 0x3F)
    {
      sub_1DA56DA30(319, &qword_1EDAE4B90, MEMORY[0x1E0DF07E8]);
      if (v2 <= 0x3F)
      {
        sub_1DA56DA8C(319, &qword_1EDAE4228, (void (*)(uint64_t))MEMORY[0x1E0D7E658]);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for JSLibraryStorageTipProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.unownedExecutor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.suggestedEpisodeLimit.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.suggestedEpisodeLimit.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.suggestedEpisodeLimit.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.storageTipPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.startListeningTaskRoot()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.beginListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of JSLibraryStorageTipProvider.endListening()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

void sub_1DA56DA30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE3BC8);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1DA56DA8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DA670294();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1DA56DAD8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA56DAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EpisodeLimitTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA56DB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1DA4A9520;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56DBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4AD77C;
  return sub_1DA56A408(a1, v1);
}

uint64_t sub_1DA56DBFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1DA4A9520;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56DC74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1DA4A9520;
  return sub_1DA56A9B4(a1, a2, v2);
}

uint64_t sub_1DA56DCD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4A9520;
  return sub_1DA56A600(a1, v1);
}

uint64_t sub_1DA56DD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA56DD6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4A9520;
  return sub_1DA56A274(a1, v1);
}

uint64_t sub_1DA56DDBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA56DDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1F026E498 + dword_1F026E498))(a1, v4);
}

uint64_t sub_1DA56DE54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DA4AD77C;
  return sub_1DA569A60(a1, v4, v5, v6);
}

uint64_t objectdestroy_2Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1DA56DEF4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1DA66CA0C();
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v24 = (uint64_t)&v22 - v10;
  if (a1 >> 62)
    goto LABEL_18;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_1DA6705A0())
  {
    v22 = v2;
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = a1 & 0xC000000000000001;
    v14 = 4;
    v23 = a1;
    while (1)
    {
      v15 = v13 ? (id)MEMORY[0x1DF09EE48](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      v16 = v15;
      v2 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      sub_1DA670210();

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v26) == 1)
      {
        sub_1DA47E2F0((uint64_t)v6, &qword_1EDAE4108);
      }
      else
      {
        v17 = v24;
        v18 = MEMORY[0x1E0D7D7F0];
        sub_1DA4F7228((uint64_t)v6, v24, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
        sub_1DA4F7228(v17, v25, (uint64_t (*)(_QWORD))v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1DA53FE78(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v20 = *(_QWORD *)(v12 + 16);
        v19 = *(_QWORD *)(v12 + 24);
        if (v20 >= v19 >> 1)
          v12 = sub_1DA53FE78(v19 > 1, v20 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v20 + 1;
        sub_1DA4F7228(v25, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
        a1 = v23;
      }
      ++v14;
      if (v2 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

id ObjCArtworkProvider.__allocating_init(bucketingStrategy:backingCache:imageProvider:managedObjectContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a3, v12);
  v15 = sub_1DA573BBC(v11, a2, v14, a4, v4, v9, v12, v10, v13);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v15;
}

id static ObjCArtworkProvider.shared.getter()
{
  return sub_1DA4853A8(qword_1EDADECC8, (id *)&qword_1EDADF970);
}

uint64_t sub_1DA56E250(uint64_t a1)
{
  return sub_1DA56E264(a1, (SEL *)&selRef_mainQueueContext, &qword_1F026AF28);
}

uint64_t sub_1DA56E264(uint64_t a1, SEL *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  SEL *v49;
  _QWORD *v50;
  _BYTE v51[24];
  ValueMetadata *v52;
  _UNKNOWN **v53;

  v49 = a2;
  v50 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27D0);
  v42 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for LibraryImageProvider();
  MEMORY[0x1E0C80A78](v11);
  v48 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40B0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EDADF9D0 != -1)
    swift_once();
  v20 = *(double *)&qword_1EDADF9B8;
  v21 = qword_1EDAE0190;
  v44 = qword_1EDADF9C0;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v8, (uint64_t)qword_1EDAE0178);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  sub_1DA66C97C();
  v43 = sub_1DA66C958();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_1DA484504(v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  sub_1DA66CEBC();
  sub_1DA66D7F8();
  sub_1DA4841D4(&qword_1EDAE4270, (uint64_t *)&unk_1EDAE27D0, MEMORY[0x1E0D7E858]);
  v24 = v45;
  sub_1DA66C934();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v3);
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE2018);
  v25 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultStore);
  v52 = &type metadata for ThumbnailImageResizer;
  v53 = &protocol witness table for ThumbnailImageResizer;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v26 = (void *)sub_1DA66FE44();
  sub_1DA484504((uint64_t)v10, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v28 = v46;
  v27 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v15[v11[5]], v24, v47);
  *(_QWORD *)&v15[v11[7]] = v25;
  sub_1DA4813E4((uint64_t)v51, (uint64_t)&v15[v11[6]]);
  *(_QWORD *)&v15[v11[8]] = v26;
  v29 = v25;
  v30 = v26;
  v31 = MEMORY[0x1E0DEE9D8];
  v32 = sub_1DA63CBE8(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C80);
  v33 = swift_allocObject();
  *(_DWORD *)(v33 + 24) = 0;
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)&v15[v11[9]] = v33;
  v34 = sub_1DA4899EC(v31);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE00B8);
  v35 = swift_allocObject();
  *(_DWORD *)(v35 + 24) = 0;
  *(_QWORD *)(v35 + 16) = v34;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
  sub_1DA47F880((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  *(_QWORD *)&v15[v11[10]] = v35;
  v36 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v37 = objc_msgSend(v36, *v49);

  v38 = v48;
  sub_1DA484504((uint64_t)v15, v48, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  v39 = swift_bridgeObjectRetain();
  v40 = sub_1DA573A44(v39, v43, v38, (uint64_t)v37, v20);
  swift_bridgeObjectRelease();
  sub_1DA47F880((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  result = swift_bridgeObjectRelease();
  *v50 = v40;
  return result;
}

id static ObjCArtworkProvider.uiShared.getter()
{
  return sub_1DA4853A8(qword_1F0268550, (id *)&qword_1F026AF28);
}

id sub_1DA56E7A4(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t ObjCArtworkProvider.backingCache.getter()
{
  return sub_1DA66BE60();
}

uint64_t ObjCArtworkProvider.backingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider, a1);
}

uint64_t ObjCArtworkProvider.bucketingStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy, a1);
}

id ObjCArtworkProvider.managedObjectContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext);
}

id ObjCArtworkProvider.init(bucketingStrategy:backingCache:imageProvider:managedObjectContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v24[2];

  v9 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(a1, v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
  v16 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(a3 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a3, v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v21 + 16))(v20, v18);
  v22 = sub_1DA57393C((uint64_t)v13, a2, (uint64_t)v20, a4, v24[1], v9, v16, v8, v15);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v22;
}

id ObjCArtworkProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  id v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  _BYTE v30[48];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40B0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for AssetCaches();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DA66EDDC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, &v10[*(int *)(v8 + 20)], v4);
  sub_1DA47F880((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  sub_1DA66C97C();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v11 = sub_1DA66C958();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026AF50);
  sub_1DA66EDDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  sub_1DA66EDDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v12 = objc_msgSend(v26[0], sel_privateQueueContext);
  swift_unknownObjectRelease();
  sub_1DA4813E4((uint64_t)v30, (uint64_t)v26);
  sub_1DA4813E4((uint64_t)v29, (uint64_t)v23);
  v13 = v27;
  v14 = v28;
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  v17 = v24;
  v16 = v25;
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  v19 = v12;
  v20 = sub_1DA573BBC(v15, v11, v18, (uint64_t)v19, v22, v13, v17, v14, v16);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return v20;
}

uint64_t sub_1DA56EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v9 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = a1;
  sub_1DA572920(a2, a4, a5, (uint64_t)v11);
  sub_1DA4ED950();
  sub_1DA66CF10();
  return sub_1DA47F880((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
}

uint64_t sub_1DA56EE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA572920(a1, a3, a4, (uint64_t)v9);
  sub_1DA4ED950();
  LOBYTE(a4) = sub_1DA66CEF8();
  sub_1DA47F880((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
  return a4 & 1;
}

uint64_t sub_1DA56F03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 48) = a3;
  *(double *)(v7 + 32) = a5;
  *(double *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  type metadata accessor for PreparedArtworkRequest();
  *(_QWORD *)(v7 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA56F0A0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[8];
  sub_1DA572920(v0[2], v0[6], v0[7], v0[9]);
  v2 = (_QWORD *)(v1 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1DA56F134;
  return ImageProvider.load(request:)(v0[9], v4, v3);
}

uint64_t sub_1DA56F134(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56F1A8()
{
  uint64_t v0;

  sub_1DA47F880(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_1DA56F1F4()
{
  uint64_t v0;

  sub_1DA47F880(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56F38C(uint64_t a1, double a2, double a3, uint64_t a4, const void *a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a2;
  *(double *)(v6 + 24) = a3;
  type metadata accessor for PreparedArtworkRequest();
  *(_QWORD *)(v6 + 40) = swift_task_alloc();
  *(_QWORD *)(v6 + 48) = _Block_copy(a5);
  if (a1)
  {
    v10 = sub_1DA66F8BC();
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v6 + 56) = v10;
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 72) = sub_1DA66F8BC();
  *(_QWORD *)(v6 + 80) = v12;
  v13 = a6;
  return swift_task_switch();
}

uint64_t sub_1DA56F438()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[4];
  sub_1DA572920(v0[7], v0[9], v0[10], v0[5]);
  v2 = (_QWORD *)(v1 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v3 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1DA56F4CC;
  return ImageProvider.load(request:)(v0[5], v4, v3);
}

uint64_t sub_1DA56F4CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 104) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56F540()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 48);
  v3 = *(void **)(v0 + 32);
  sub_1DA47F880(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *, _QWORD))v2)[2](v2, v1, 0);
  _Block_release(v2);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56F5D4()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 96);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 48);
  v3 = *(void **)(v0 + 32);
  sub_1DA47F880(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1DA66C1F0();

  ((void (**)(_QWORD, _QWORD, void *))v2)[2](v2, 0, v4);
  _Block_release(v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56F67C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 64) = v4;
  *(double *)(v5 + 48) = a3;
  *(double *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  v6 = sub_1DA66CEBC();
  *(_QWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA56F6F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[8] + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v0[8] + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
  sub_1DA66DABC();
  v0[2] = v1;
  v0[3] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_1DA56F794;
  return sub_1DA572C60(v0[11], v0[4], v0[5]);
}

uint64_t sub_1DA56F794()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    *(int8x16_t *)(v2 + 120) = vextq_s8(*(int8x16_t *)(v2 + 16), *(int8x16_t *)(v2 + 16), 8uLL);
  return swift_task_switch();
}

uint64_t sub_1DA56F804()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[11];
  v2 = v0[9];
  v3 = v0[10];
  v4 = v0[8];
  sub_1DA66CE98();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[17] = v5;
  v5(v1, v2);
  v7 = *(_QWORD *)(v4 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v6 = *(_QWORD *)(v4 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider), v7);
  v8 = (_QWORD *)swift_task_alloc();
  v0[18] = v8;
  *v8 = v0;
  v8[1] = sub_1DA56F8B4;
  return ImageProvider.load(request:)(v0[12], v7, v6);
}

uint64_t sub_1DA56F8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 160) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56F928()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160));
}

uint64_t sub_1DA56F97C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56F9B8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA56FB48(int a1, void *aBlock, double a3, double a4, void *a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v9 = sub_1DA66F8BC();
  v11 = v10;
  v5[4] = v10;
  a5;
  v12 = (_QWORD *)swift_task_alloc();
  v5[5] = v12;
  *v12 = v5;
  v12[1] = sub_1DA56FBEC;
  return sub_1DA56F67C(v9, v11, a3, a4);
}

uint64_t sub_1DA56FBEC(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_1DA66C1F0();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](*(_QWORD *)(v6 + 24), a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1DA56FCB8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD *v9;

  v4[2] = a1;
  v4[3] = a2;
  v9 = (_QWORD *)swift_task_alloc();
  v4[4] = v9;
  *v9 = v4;
  v9[1] = sub_1DA56FD30;
  return sub_1DA56F67C(a1, a2, a3, a4);
}

uint64_t sub_1DA56FD30(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA56FDAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v3)(_QWORD, uint64_t, _QWORD);

  v1 = v0[3];
  v3 = (uint64_t (*)(_QWORD, uint64_t, _QWORD))v0[1];
  swift_bridgeObjectRetain();
  return v3(v0[2], v1, v0[5]);
}

uint64_t sub_1DA56FF3C(int a1, void *aBlock, double a3, double a4, void *a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v9 = sub_1DA66F8BC();
  v11 = v10;
  v5[4] = v9;
  v5[5] = v10;
  a5;
  v12 = (_QWORD *)swift_task_alloc();
  v5[6] = v12;
  *v12 = v5;
  v12[1] = sub_1DA56FFE0;
  return sub_1DA56F67C(v9, v11, a3, a4);
}

uint64_t sub_1DA56FFE0(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    v6 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v4 + 24);

    swift_bridgeObjectRelease();
    v7 = (void *)sub_1DA66C1F0();

    ((void (**)(_QWORD, _QWORD, _QWORD, void *))v6)[2](v6, 0, 0, v7);
    _Block_release(v6);
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 56) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_1DA5700A8()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 24);

  v3 = (void *)sub_1DA66F88C();
  ((void (**)(_QWORD, void *, void *, _QWORD))v2)[2](v2, v3, v1, 0);

  _Block_release(v2);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA570128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 72) = v7;
  *(_QWORD *)(v8 + 56) = a4;
  *(double *)(v8 + 40) = a6;
  *(double *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  v9 = sub_1DA66C358();
  *(_QWORD *)(v8 + 80) = v9;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  type metadata accessor for PreparedArtworkRequest();
  *(_QWORD *)(v8 + 104) = swift_task_alloc();
  v10 = sub_1DA66CEBC();
  *(_QWORD *)(v8 + 112) = v10;
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5701E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v2 = v0[15];
  v1 = v0[16];
  v4 = v0[13];
  v3 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  v7 = v0[9];
  v13 = v0[10];
  sub_1DA572920(v0[3], v0[7], v0[8], v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  sub_1DA66CEE0();
  sub_1DA66D780();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[17] = (uint64_t)v8;
  v8(v5, v13);
  v10 = *(_QWORD *)(v7 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v9 = *(_QWORD *)(v7 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider), v10);
  v11 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_1DA570300;
  return ImageProvider.load(request:)(v0[16], v10, v9);
}

uint64_t sub_1DA570300(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1DA57036C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5703D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA57059C(uint64_t a1, double a2, double a3, uint64_t a4, const void *a5, void *a6)
{
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v6[2] = a6;
  v12 = sub_1DA66C358();
  v6[3] = v12;
  v6[4] = *(_QWORD *)(v12 - 8);
  v13 = swift_task_alloc();
  v6[5] = v13;
  v6[6] = _Block_copy(a5);
  if (a1)
  {
    a1 = sub_1DA66F8BC();
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v6[7] = v15;
  v16 = sub_1DA66F8BC();
  v18 = v17;
  v6[8] = v17;
  a6;
  v19 = (_QWORD *)swift_task_alloc();
  v6[9] = v19;
  *v19 = v6;
  v19[1] = sub_1DA5706B4;
  return sub_1DA570128(v13, a1, v15, v16, v18, a2, a3);
}

uint64_t sub_1DA5706B4()
{
  void *v0;
  uint64_t *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v3 = *(void **)(*v1 + 16);
  v4 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v5 = sub_1DA66C1F0();

    v6 = 0;
    v7 = (void *)v5;
  }
  else
  {
    v9 = v2[4];
    v8 = v2[5];
    v10 = v2[3];
    v6 = sub_1DA66C2C8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v5 = 0;
    v7 = (void *)v6;
  }
  v11 = (void (**)(_QWORD, _QWORD, _QWORD))v2[6];
  v11[2](v11, v6, v5);

  _Block_release(v11);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA5707A0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 40) = v5;
  *(double *)(v6 + 24) = a4;
  *(double *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  v9 = sub_1DA66C358();
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 64) = swift_task_alloc();
  v10 = sub_1DA66CEBC();
  *(_QWORD *)(v6 + 72) = v10;
  *(_QWORD *)(v6 + 80) = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = v11;
  *(_QWORD *)(v6 + 96) = swift_task_alloc();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 104) = v12;
  *v12 = v6;
  v12[1] = sub_1DA57087C;
  return sub_1DA572C60(v11, a2, a3);
}

uint64_t sub_1DA57087C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5708E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[11];
  v2 = v0[9];
  v3 = v0[10];
  v4 = v0[8];
  v5 = v0[5];
  v12 = v0[7];
  v13 = v0[6];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v5 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
  sub_1DA66DABC();
  sub_1DA66CE98();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[15] = v6;
  v6(v1, v2);
  sub_1DA66CEE0();
  sub_1DA66D780();
  v7 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[16] = v7;
  v7(v4, v13);
  v9 = *(_QWORD *)(v5 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v8 = *(_QWORD *)(v5 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider), v9);
  v10 = (_QWORD *)swift_task_alloc();
  v0[17] = v10;
  *v10 = v0;
  v10[1] = sub_1DA570A3C;
  return ImageProvider.load(request:)(v0[12], v9, v8);
}

uint64_t sub_1DA570A3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1DA570AA8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA570B08()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA570B58()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(v0 + 128))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 48));
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA570D10(double a1, double a2, uint64_t a3, const void *a4, void *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5[2] = a5;
  v10 = sub_1DA66C358();
  v5[3] = v10;
  v5[4] = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  v5[5] = v11;
  v5[6] = _Block_copy(a4);
  v12 = sub_1DA66F8BC();
  v14 = v13;
  v5[7] = v13;
  a5;
  v15 = (_QWORD *)swift_task_alloc();
  v5[8] = v15;
  *v15 = v5;
  v15[1] = sub_1DA570DF4;
  return sub_1DA5707A0(v11, v12, v14, a1, a2);
}

uint64_t sub_1DA570DF4()
{
  void *v0;
  uint64_t *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v3 = *(void **)(*v1 + 16);
  v4 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v0)
  {
    v5 = sub_1DA66C1F0();

    v6 = 0;
    v7 = (void *)v5;
  }
  else
  {
    v9 = v2[4];
    v8 = v2[5];
    v10 = v2[3];
    v6 = sub_1DA66C2C8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v5 = 0;
    v7 = (void *)v6;
  }
  v11 = (void (**)(_QWORD, _QWORD, _QWORD))v2[6];
  v11[2](v11, v6, v5);

  _Block_release(v11);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA570ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v4 = sub_1DA66CEBC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA573098(a1, a2, (uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
  sub_1DA4ED950();
  sub_1DA66CF04();
  sub_1DA47F880((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
  return v12[0];
}

uint64_t sub_1DA571140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = type metadata accessor for PreparedArtworkRequest();
  v35 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v33 = (uint64_t)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026AF90);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - v6;
  v8 = sub_1DA66CEBC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AFA0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  sub_1DA670210();
  v21 = sub_1DA66CA0C();
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v14, 1, v21);
  v36 = v0;
  if (v22 == 1)
  {
    sub_1DA47E2F0((uint64_t)v14, &qword_1EDAE4108);
    v23 = 1;
  }
  else
  {
    ArtworkModel.preferredRequest.getter((uint64_t)v11);
    sub_1DA47F880((uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v0 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
    sub_1DA66DABC();
    sub_1DA66CE98();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = 0;
  }
  v24 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v20, v23, 1, v8);
  sub_1DA49CC94((uint64_t)v20, (uint64_t)v17, &qword_1F026AFA0);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8);
  v26 = (uint64_t)v34;
  if (v25 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v17, v8);
    v24 = 0;
  }
  v27 = v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v7, v24, 1, v1);
  sub_1DA49CC94((uint64_t)v7, v26, (uint64_t *)&unk_1F026AF90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v26, 1, v1) == 1)
  {
    sub_1DA66BE60();
    v28 = 0;
  }
  else
  {
    v29 = v26;
    v30 = v33;
    sub_1DA4F7228(v29, v33, (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
    sub_1DA4ED950();
    sub_1DA66BE60();
    sub_1DA66CF04();
    v28 = v37;
    sub_1DA47F880(v30, (uint64_t (*)(_QWORD))type metadata accessor for PreparedArtworkRequest);
  }
  sub_1DA47E2F0((uint64_t)v7, (uint64_t *)&unk_1F026AF90);
  sub_1DA47E2F0((uint64_t)v20, &qword_1F026AFA0);
  swift_release();
  return v28;
}

uint64_t sub_1DA571568(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 40) = v3;
  *(double *)(v4 + 24) = a2;
  *(double *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = sub_1DA66CEBC();
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_QWORD *)(v4 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AFA0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA571638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1DA670210();
  v2 = sub_1DA66CA0C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_1DA47E2F0(*(_QWORD *)(v0 + 80), &qword_1EDAE4108);
    v3 = 1;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    ArtworkModel.preferredRequest.getter(v5);
    sub_1DA47F880(v4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v8 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
    sub_1DA66DABC();
    sub_1DA66CE98();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v3 = 0;
  }
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v3, 1, v11);
  sub_1DA49CC94(v10, v9, &qword_1F026AFA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    v13 = *(_QWORD *)(v0 + 88);
    sub_1DA47E2F0(*(_QWORD *)(v0 + 96), &qword_1F026AFA0);
    sub_1DA47E2F0(v13, &qword_1F026AFA0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 48));
    v16 = (_QWORD *)(v15 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
    v18 = *(_QWORD *)(v15 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
    v17 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v18);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v19;
    *v19 = v0;
    v19[1] = sub_1DA571880;
    return ImageProvider.load(request:)(*(_QWORD *)(v0 + 64), v18, v17);
  }
}

uint64_t sub_1DA571880(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 120) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5718F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  sub_1DA47E2F0(v2, &qword_1F026AFA0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA57198C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  sub_1DA47E2F0(v1, &qword_1F026AFA0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA571B60(void *a1, void *aBlock, void *a3, double a4, double a5)
{
  _QWORD *v5;
  id v10;
  _QWORD *v11;

  v5[2] = a1;
  v5[3] = a3;
  v5[4] = _Block_copy(aBlock);
  v10 = a1;
  a3;
  v11 = (_QWORD *)swift_task_alloc();
  v5[5] = v11;
  *v11 = v5;
  v11[1] = sub_1DA571BF4;
  return sub_1DA571568((uint64_t)v10, a4, a5);
}

uint64_t sub_1DA571BF4(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  void *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v6 = *(void **)(*v2 + 16);
  v5 = *(void **)(*v2 + 24);
  v7 = *v2;
  swift_task_dealloc();

  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 32);
  if (v3)
  {
    v9 = (void *)sub_1DA66C1F0();

    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1DA571CBC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 192) = v4;
  *(double *)(v5 + 176) = a3;
  *(double *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 160) = a1;
  *(_QWORD *)(v5 + 168) = a2;
  sub_1DA66D5C4();
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  v6 = sub_1DA66D1F8();
  *(_QWORD *)(v5 + 208) = v6;
  *(_QWORD *)(v5 + 216) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  *(_QWORD *)(v5 + 240) = swift_task_alloc();
  sub_1DA66C928();
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  sub_1DA66CA0C();
  *(_QWORD *)(v5 + 256) = swift_task_alloc();
  *(_QWORD *)(v5 + 264) = swift_task_alloc();
  v7 = sub_1DA66CEBC();
  *(_QWORD *)(v5 + 272) = v7;
  *(_QWORD *)(v5 + 280) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 288) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA571DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 224);
  v17 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 232);
  v21 = *(_QWORD *)(v0 + 192);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v21 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v21 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
  sub_1DA66DABC();
  v6 = v5;
  v8 = v7;
  *(_OWORD *)(v0 + 16) = xmmword_1DA67D4C0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 57) = 0u;
  swift_bridgeObjectRetain();
  sub_1DA66C904();
  BYTE2(v16) = 0;
  LOWORD(v16) = sub_1DA66CC1C();
  LOBYTE(v15) = 3;
  sub_1DA66CA00();
  v9 = sub_1DA66DD14();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  *(_QWORD *)(v0 + 112) = 0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen, v15, v3, 0, 0, v16, 0, 0);
  objc_msgSend(v10, sel_scale);

  sub_1DA484504(v1, v17, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA66C9F4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v4, *MEMORY[0x1E0D7E1C8], v19);
  CGSize.fitting(_:aspectRule:)(v4, v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4, v19);
  sub_1DA49CC94(v2, v20, &qword_1EDAE53D8);
  sub_1DA66D5AC();
  sub_1DA49CC94(v0 + 80, v0 + 120, &qword_1EDAE5310);
  sub_1DA66CE5C();
  sub_1DA47E2F0(v0 + 80, &qword_1EDAE5310);
  sub_1DA47E2F0(v2, &qword_1EDAE53D8);
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  v12 = *(_QWORD *)(v21 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
  v11 = *(_QWORD *)(v21 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v21 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider), v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v13;
  *v13 = v0;
  v13[1] = sub_1DA57212C;
  return ImageProvider.load(request:)(*(_QWORD *)(v0 + 288), v12, v11);
}

uint64_t sub_1DA57212C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 304) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 312) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5721A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 312);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA572258()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA572444(int a1, void *aBlock, double a3, double a4, void *a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v9 = sub_1DA66F8BC();
  v11 = v10;
  v5[4] = v10;
  a5;
  v12 = (_QWORD *)swift_task_alloc();
  v5[5] = v12;
  *v12 = v5;
  v12[1] = sub_1DA56FBEC;
  return sub_1DA571CBC(v9, v11, a3, a4);
}

uint64_t sub_1DA5724E8(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = v2;
  *(double *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1DA572504()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
  v3 = v1[3];
  v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_1DA572584;
  return ImageProvider.placeholder(with:)(v3, v2, *(double *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1DA572584(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1DA57271C(const void *a1, void *a2, double a3, double a4)
{
  uint64_t v4;
  id v6;

  *(_QWORD *)(v4 + 32) = a2;
  *(double *)(v4 + 16) = a3;
  *(double *)(v4 + 24) = a4;
  *(_QWORD *)(v4 + 40) = _Block_copy(a1);
  v6 = a2;
  return swift_task_switch();
}

uint64_t sub_1DA572768()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
  v3 = v1[3];
  v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_1DA5727E8;
  return ImageProvider.placeholder(with:)(v3, v2, *(double *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1DA5727E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA57285C()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);

  v1 = *(void **)(v0 + 64);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);

  ((void (**)(_QWORD, void *, _QWORD))v2)[2](v2, v1, 0);
  _Block_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5728B0()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);
  void *v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);

  v3 = (void *)sub_1DA66C1F0();
  ((void (**)(_QWORD, _QWORD, void *))v2)[2](v2, 0, v3);

  _Block_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA572920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[25];

  v21[1] = a3;
  v21[2] = a2;
  v21[0] = a1;
  v24 = a4;
  v5 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1DA66CEBC();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v21 - v16;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy), *(_QWORD *)(v4 + OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy + 24));
  sub_1DA66DABC();
  v28 = xmmword_1DA67D4C0;
  v29 = 0u;
  memset(v30, 0, sizeof(v30));
  swift_bridgeObjectRetain();
  sub_1DA66C904();
  sub_1DA66CC1C();
  swift_bridgeObjectRetain();
  sub_1DA66CA00();
  v18 = MEMORY[0x1E0D7D7F0];
  sub_1DA484504((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  v19 = sub_1DA66DD14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  sub_1DA66D5AC();
  sub_1DA66CE5C();
  sub_1DA47F880((uint64_t)v17, (uint64_t (*)(_QWORD))v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v10, v23);
}

uint64_t sub_1DA572C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1DA66CA0C();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_1DA670078();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA572D24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v0[4];
  v5 = v0[3];
  v6 = *(void **)(v0[5] + OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext);
  v7 = (_QWORD *)swift_allocObject();
  v0[15] = v7;
  v7[2] = v6;
  v7[3] = v5;
  v7[4] = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0C977C0], v3);
  v6;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[16] = v8;
  *v8 = v0;
  v8[1] = sub_1DA572E10;
  return sub_1DA67009C();
}

uint64_t sub_1DA572E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_1DA572E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  sub_1DA49CC94(*(_QWORD *)(v0 + 112), v1, &qword_1EDAE4108);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 112);
    sub_1DA47E2F0(*(_QWORD *)(v0 + 104), &qword_1EDAE4108);
    sub_1DA574B34();
    swift_allocError();
    *v5 = 2;
    swift_willThrow();
    sub_1DA47E2F0(v4, &qword_1EDAE4108);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 16);
    v9 = MEMORY[0x1E0D7D7F0];
    sub_1DA4F7228(*(_QWORD *)(v0 + 104), v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    ArtworkModel.preferredRequest.getter(v8);
    sub_1DA47F880(v7, (uint64_t (*)(_QWORD))v9);
    sub_1DA47E2F0(v6, &qword_1EDAE4108);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA572FF8(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;

  v4 = (void *)sub_1DA66F88C();
  v5 = objc_msgSend(a1, sel_podcastForUuid_, v4);

  if (v5)
  {
    sub_1DA670210();

  }
  else
  {
    v6 = sub_1DA66CA0C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
}

uint64_t sub_1DA573098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = a3;
  v6 = sub_1DA66CA0C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - v14;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext);
  v22 = a1;
  v23 = a2;
  sub_1DA670054();
  sub_1DA49CC94((uint64_t)v15, (uint64_t)v12, &qword_1EDAE4108);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_1DA47E2F0((uint64_t)v12, &qword_1EDAE4108);
    sub_1DA574B34();
    swift_allocError();
    *v16 = 2;
    swift_willThrow();
  }
  else
  {
    v18 = MEMORY[0x1E0D7D7F0];
    sub_1DA4F7228((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
    ArtworkModel.preferredRequest.getter(v20);
    sub_1DA47F880((uint64_t)v9, (uint64_t (*)(_QWORD))v18);
  }
  return sub_1DA47E2F0((uint64_t)v15, &qword_1EDAE4108);
}

void sub_1DA57326C(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = (void *)sub_1DA66F88C();
  v6 = objc_msgSend(a1, sel_podcastForUuid_, v4);

  if (v6)
  {
    sub_1DA670210();

  }
  else
  {
    v5 = sub_1DA66CA0C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

uint64_t sub_1DA57331C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 320) = v0;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 96) + 8))(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 88));
  }
  else
  {
    *(_BYTE *)(v2 + 329) &= *(_BYTE *)(v2 + 330) & 1;
  }
  return swift_task_switch();
}

uint64_t sub_1DA5733A4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1DA573478(unint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DA66F8BC();
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v4 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
  v6 = sub_1DA670090();
  if (v1)
  {

  }
  else
  {
    v7 = sub_1DA56DEF4(v6);
    swift_bridgeObjectRelease();

    *a1 = v7;
  }
}

uint64_t sub_1DA573574()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4B10);
  sub_1DA4841D4((unint64_t *)&unk_1EDAE4B20, (uint64_t *)&unk_1EDAE4B10, MEMORY[0x1E0DEAF38]);
  return sub_1DA66DF54();
}

uint64_t sub_1DA5735FC()
{
  char v0;

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE0080);
  swift_bridgeObjectRetain();
  sub_1DA67021C();
  sub_1DA484214();
  sub_1DA484258();
  v0 = sub_1DA66F814();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1DA5736A8@<X0>(uint64_t a1@<X8>)
{
  return ArtworkModel.preferredRequest.getter(a1);
}

uint64_t sub_1DA5736C8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA66E17C();
  return swift_release();
}

void sub_1DA57378C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

BOOL static ObjCArtworkProvider.ArtworkBridgingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ObjCArtworkProvider.ArtworkBridgingError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ObjCArtworkProvider.ArtworkBridgingError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

id ObjCArtworkProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ObjCArtworkProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ObjCArtworkProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ObjCArtworkProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DA573918@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = ObjCArtworkProvider.__allocating_init(asPartOf:)();
  *a1 = result;
  return result;
}

id sub_1DA57393C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v17;
  id v18;
  objc_super v20;
  uint64_t v21[5];
  uint64_t v22[5];

  v22[3] = a6;
  v22[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  v21[3] = a7;
  v21[4] = a9;
  v17 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v17, a3, a7);
  *(_QWORD *)&a5[OBJC_IVAR___PUIObjCArtworkProvider_backingCache] = a2;
  sub_1DA4813E4((uint64_t)v22, (uint64_t)&a5[OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy]);
  sub_1DA4813E4((uint64_t)v21, (uint64_t)&a5[OBJC_IVAR___PUIObjCArtworkProvider_backingProvider]);
  *(_QWORD *)&a5[OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext] = a4;
  v20.receiver = a5;
  v20.super_class = (Class)type metadata accessor for ObjCArtworkProvider();
  v18 = objc_msgSendSuper2(&v20, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  return v18;
}

id sub_1DA573A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  id v17;
  objc_super v19;
  uint64_t v20[5];
  _QWORD v21[5];

  v10 = type metadata accessor for LibraryImageProvider();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4F7228(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  v13 = (objc_class *)type metadata accessor for ObjCArtworkProvider();
  v14 = (char *)objc_allocWithZone(v13);
  v21[3] = &type metadata for UniformBucketingStrategy;
  v15 = sub_1DA574BC0();
  *(double *)v21 = a5;
  v21[4] = v15;
  v21[1] = a1;
  v20[3] = v10;
  v20[4] = (uint64_t)&protocol witness table for LibraryImageProvider;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  sub_1DA484504((uint64_t)v12, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  *(_QWORD *)&v14[OBJC_IVAR___PUIObjCArtworkProvider_backingCache] = a2;
  sub_1DA4813E4((uint64_t)v21, (uint64_t)&v14[OBJC_IVAR___PUIObjCArtworkProvider_bucketingStrategy]);
  sub_1DA4813E4((uint64_t)v20, (uint64_t)&v14[OBJC_IVAR___PUIObjCArtworkProvider_backingProvider]);
  *(_QWORD *)&v14[OBJC_IVAR___PUIObjCArtworkProvider_managedObjectContext] = a4;
  v19.receiver = v14;
  v19.super_class = v13;
  swift_bridgeObjectRetain();
  v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  sub_1DA47F880((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LibraryImageProvider);
  return v17;
}

id sub_1DA573BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a4;
  v26 = a8;
  v24 = a2;
  v13 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (char *)objc_allocWithZone((Class)type metadata accessor for ObjCArtworkProvider());
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, a7);
  return sub_1DA57393C((uint64_t)v20, v24, (uint64_t)v15, v25, v21, a6, a7, v26, a9);
}

uint64_t sub_1DA573CCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA573CF0(unint64_t *a1@<X8>)
{
  sub_1DA573478(a1);
}

uint64_t sub_1DA573D08@<X0>(uint64_t a1@<X8>)
{
  return ArtworkModel.preferredRequest.getter(a1);
}

uint64_t sub_1DA573D28()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1DA573D4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DA5736C8(a1, (_QWORD *)(v1 + 16));
}

unint64_t sub_1DA573D58()
{
  unint64_t result;

  result = qword_1F026AFC8;
  if (!qword_1F026AFC8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ObjCArtworkProvider.ArtworkBridgingError, &type metadata for ObjCArtworkProvider.ArtworkBridgingError);
    atomic_store(result, (unint64_t *)&qword_1F026AFC8);
  }
  return result;
}

uint64_t method lookup function for ObjCArtworkProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjCArtworkProvider.__allocating_init(bucketingStrategy:backingCache:imageProvider:managedObjectContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.cache(artwork:dimensions:show:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.hasArtwork(for:dimensions:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.artwork(for:size:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  _QWORD *v6;
  uint64_t v7;
  int *v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v14 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v6) + 0x90);
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)v14 + *v14);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1DA553898;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ObjCArtworkProvider.artwork(for:size:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, double, double);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x98);
  v13 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA553898;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ObjCArtworkProvider.keyedArtwork(for:size:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, double, double);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xA0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA573FD0;
  return v13(a1, a2, a3, a4);
}

uint64_t sub_1DA573FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t dispatch thunk of ObjCArtworkProvider.artworkPath(for:size:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  _QWORD *v7;
  uint64_t v8;
  int *v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v16 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v7) + 0xA8);
  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)v16 + *v16);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1DA4A9520;
  return v19(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ObjCArtworkProvider.artworkPath(for:size:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, double, double);

  v12 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v5) + 0xB0);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double))((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1DA4AD77C;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ObjCArtworkProvider.legacyUICachedArtwork(forPodcastUuid:size:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.cachedArtwork(forPodcast:size:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ObjCArtworkProvider.artwork(forPodcast:size:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, double, double);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0xC8);
  v11 = (uint64_t (*)(uint64_t, double, double))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1DA553898;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ObjCArtworkProvider.artwork(forURL:size:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, double, double);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xD0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1DA553898;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ObjCArtworkProvider.placeholder(with:)(double a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(double, double);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xD8);
  v9 = (uint64_t (*)(double, double))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4B17EC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ObjCArtworkProvider.migrateLibraryArtworkFromImageStore()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4B17EC;
  return v5();
}

uint64_t storeEnumTagSinglePayload for ObjCArtworkProvider.ArtworkBridgingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA57443C + 4 * byte_1DA67D4D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA574470 + 4 * byte_1DA67D4D0[v4]))();
}

uint64_t sub_1DA574470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA574478(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA574480);
  return result;
}

uint64_t sub_1DA57448C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA574494);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA574498(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5744A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ObjCArtworkProvider.ArtworkBridgingError()
{
  return &type metadata for ObjCArtworkProvider.ArtworkBridgingError;
}

uint64_t sub_1DA5744BC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1DA5744EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1F026B8A8 + dword_1F026B8A8))(v2, v3, v4);
}

uint64_t sub_1DA574568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1F026B8B8 + dword_1F026B8B8))(a1, v4, v5, v6);
}

uint64_t sub_1DA5745EC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_1DA574618()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  const void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (const void *)*((_QWORD *)v0 + 4);
  v5 = (void *)*((_QWORD *)v0 + 5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1DA4A9520;
  return ((uint64_t (*)(const void *, void *, double, double))((char *)&dword_1F026B048 + dword_1F026B048))(v4, v5, v2, v3);
}

uint64_t sub_1DA57469C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v6 = (void *)*((_QWORD *)v0 + 5);
  v5 = (void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(int, void *, double, double, void *))((char *)&dword_1F026B068 + dword_1F026B068))(v2, v6, v3, v4, v5);
}

uint64_t sub_1DA574728()
{
  double *v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = (void *)*((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v6 = (void *)*((_QWORD *)v0 + 5);
  v5 = (void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(void *, void *, void *, double, double))((char *)&dword_1F026B088 + dword_1F026B088))(v2, v6, v5, v3, v4);
}

uint64_t sub_1DA5747B4()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  void *v5;
  const void *v6;
  _QWORD *v7;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v6 = (const void *)*((_QWORD *)v0 + 5);
  v5 = (void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(double, double, uint64_t, const void *, void *))((char *)&dword_1F026B0A8
                                                                                + dword_1F026B0A8))(v3, v4, v2, v6, v5);
}

uint64_t sub_1DA574840()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  _QWORD *v8;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v5 = *((_QWORD *)v0 + 5);
  v6 = (const void *)*((_QWORD *)v0 + 6);
  v7 = (void *)*((_QWORD *)v0 + 7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, double, double, uint64_t, const void *, void *))((char *)&dword_1F026B0C8
                                                                                         + dword_1F026B0C8))(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1DA5748DC()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v6 = (void *)*((_QWORD *)v0 + 5);
  v5 = (void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(int, void *, double, double, void *))((char *)&dword_1F026B0E8 + dword_1F026B0E8))(v2, v6, v3, v4, v5);
}

uint64_t objectdestroy_62Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1DA57499C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v6 = (void *)*((_QWORD *)v0 + 5);
  v5 = (void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1DA4A9520;
  return ((uint64_t (*)(int, void *, double, double, void *))((char *)&dword_1F026B108 + dword_1F026B108))(v2, v6, v3, v4, v5);
}

uint64_t objectdestroy_107Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1DA574A64()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  _QWORD *v8;

  v2 = *((_QWORD *)v0 + 2);
  v3 = v0[3];
  v4 = v0[4];
  v5 = *((_QWORD *)v0 + 5);
  v6 = (const void *)*((_QWORD *)v0 + 6);
  v7 = (void *)*((_QWORD *)v0 + 7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1DA4A9520;
  return ((uint64_t (*)(uint64_t, double, double, uint64_t, const void *, void *))((char *)&dword_1F026B128
                                                                                         + dword_1F026B128))(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_38Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA574B28(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DA57326C(*(void **)(v1 + 16), a1);
}

unint64_t sub_1DA574B34()
{
  unint64_t result;

  result = qword_1F026B148[0];
  if (!qword_1F026B148[0])
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ObjCArtworkProvider.ArtworkBridgingError, &type metadata for ObjCArtworkProvider.ArtworkBridgingError);
    atomic_store(result, qword_1F026B148);
  }
  return result;
}

uint64_t sub_1DA574B78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DA574BA4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1DA572FF8(*(void **)(v1 + 16), a1);
}

unint64_t sub_1DA574BC0()
{
  unint64_t result;

  result = qword_1EDAE3DA0;
  if (!qword_1EDAE3DA0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UniformBucketingStrategy, &type metadata for UniformBucketingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EDAE3DA0);
  }
  return result;
}

uint64_t dispatch thunk of JetDispatching.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL static TipGroup.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TipGroup.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t TipGroup.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA574C94()
{
  unint64_t result;

  result = qword_1EDAE4090;
  if (!qword_1EDAE4090)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for TipGroup, &type metadata for TipGroup);
    atomic_store(result, (unint64_t *)&qword_1EDAE4090);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TipGroup(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA574D24 + 4 * byte_1DA67D675[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA574D58 + 4 * byte_1DA67D670[v4]))();
}

uint64_t sub_1DA574D58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA574D60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA574D68);
  return result;
}

uint64_t sub_1DA574D74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA574D7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA574D80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA574D88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipGroup()
{
  return &type metadata for TipGroup;
}

uint64_t PlayStationIntent.init(station:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DA574DAC(a1, a2);
}

uint64_t sub_1DA574DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t static PlayStationIntent.kind.getter()
{
  return 0xD000000000000011;
}

uint64_t PlayStationIntent.station.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA50C4C0(v1, a1);
}

void sub_1DA574E18(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001DA67D6F0;
}

_QWORD *initializeBufferWithCopyOfBuffer for PlayStationIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id *v36;
  int v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  unsigned int (*v58)(_QWORD *, uint64_t, int *);
  _QWORD *__dst;
  _QWORD *v60;
  uint64_t v61;

  v4 = type metadata accessor for StationEntity();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v9 = (void *)a2[4];
    v8 = a2[5];
    a1[4] = v9;
    a1[5] = v8;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v60 = a2;
    v61 = v4;
    v11 = *(int *)(v4 + 40);
    __dst = (_QWORD *)((char *)a1 + v11);
    v12 = (_QWORD *)((char *)a2 + v11);
    v13 = (int *)sub_1DA66CA0C();
    v14 = *((_QWORD *)v13 - 1);
    v58 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    if (v58(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = v60;
    }
    else
    {
      v19 = v12[1];
      *__dst = *v12;
      __dst[1] = v19;
      v20 = *((unsigned __int8 *)v12 + 32);
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v12 + 1);
        *((_BYTE *)__dst + 32) = *((_BYTE *)v12 + 32);
      }
      else
      {
        v21 = v12[2];
        v22 = v12[3];
        sub_1DA481390(v21, v22, v20);
        __dst[2] = v21;
        __dst[3] = v22;
        *((_BYTE *)__dst + 32) = v20;
      }
      v23 = v14;
      v17 = v60;
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v12 + 5);
      v24 = (id *)(v12 + 7);
      v25 = *((unsigned __int8 *)v12 + 64);
      if (v25 == 255)
      {
        __dst[7] = *v24;
        *((_BYTE *)__dst + 64) = *((_BYTE *)v12 + 64);
      }
      else
      {
        v26 = *v24;
        sub_1DA4E762C(*v24, *((_BYTE *)v12 + 64));
        __dst[7] = v26;
        *((_BYTE *)__dst + 64) = v25;
      }
      v27 = (id *)(v12 + 9);
      v28 = *((unsigned __int8 *)v12 + 80);
      if (v28 == 255)
      {
        __dst[9] = *v27;
        *((_BYTE *)__dst + 80) = *((_BYTE *)v12 + 80);
      }
      else
      {
        v29 = *v27;
        sub_1DA4E762C(*v27, *((_BYTE *)v12 + 80));
        __dst[9] = v29;
        *((_BYTE *)__dst + 80) = v28;
      }
      v30 = (id *)(v12 + 11);
      v31 = *((unsigned __int8 *)v12 + 96);
      if (v31 == 255)
      {
        __dst[11] = *v30;
        *((_BYTE *)__dst + 96) = *((_BYTE *)v12 + 96);
      }
      else
      {
        v32 = *v30;
        sub_1DA4E762C(*v30, *((_BYTE *)v12 + 96));
        __dst[11] = v32;
        *((_BYTE *)__dst + 96) = v31;
      }
      v33 = (id *)(v12 + 13);
      v34 = *((unsigned __int8 *)v12 + 112);
      if (v34 == 255)
      {
        __dst[13] = *v33;
        *((_BYTE *)__dst + 112) = *((_BYTE *)v12 + 112);
      }
      else
      {
        v35 = *v33;
        sub_1DA4E762C(*v33, *((_BYTE *)v12 + 112));
        __dst[13] = v35;
        *((_BYTE *)__dst + 112) = v34;
      }
      v36 = (id *)(v12 + 15);
      v37 = *((unsigned __int8 *)v12 + 128);
      if (v37 == 255)
      {
        __dst[15] = *v36;
        *((_BYTE *)__dst + 128) = *((_BYTE *)v12 + 128);
      }
      else
      {
        v38 = *v36;
        sub_1DA4E762C(*v36, *((_BYTE *)v12 + 128));
        __dst[15] = v38;
        *((_BYTE *)__dst + 128) = v37;
      }
      *((_BYTE *)__dst + 129) = *((_BYTE *)v12 + 129);
      v39 = v13[11];
      v40 = (char *)__dst + v39;
      v41 = (char *)v12 + v39;
      v42 = sub_1DA66C928();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      v43 = v13[12];
      v44 = (_QWORD *)((char *)__dst + v43);
      v45 = (_QWORD *)((char *)v12 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      *((_BYTE *)__dst + v13[13]) = *((_BYTE *)v12 + v13[13]);
      *((_BYTE *)__dst + v13[14]) = *((_BYTE *)v12 + v13[14]);
      *((_BYTE *)__dst + v13[15]) = *((_BYTE *)v12 + v13[15]);
      v47 = v13[16];
      v48 = (_QWORD *)((char *)__dst + v47);
      v49 = (_QWORD *)((char *)v12 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      v51 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(__dst, 0, 1, v13);
    }
    v52 = *(int *)(v61 + 44);
    v53 = (char *)a1 + v52;
    v54 = (_QWORD *)((char *)v17 + v52);
    v55 = v54[1];
    if (v55 >> 60 == 15)
    {
      *(_OWORD *)v53 = *(_OWORD *)v54;
    }
    else
    {
      v56 = *v54;
      sub_1DA498750(*v54, v54[1]);
      *(_QWORD *)v53 = v56;
      *((_QWORD *)v53 + 1) = v55;
    }
  }
  return a1;
}

uint64_t destroy for PlayStationIntent(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  v2 = type metadata accessor for StationEntity();
  v3 = a1 + *(int *)(v2 + 40);
  v4 = sub_1DA66CA0C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v6 = *(unsigned __int8 *)(v3 + 32);
    if (v6 != 255)
      sub_1DA47F868(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v6);
    v7 = *(unsigned __int8 *)(v3 + 64);
    if (v7 != 255)
      sub_1DA4E7898(*(id *)(v3 + 56), v7);
    v8 = *(unsigned __int8 *)(v3 + 80);
    if (v8 != 255)
      sub_1DA4E7898(*(id *)(v3 + 72), v8);
    v9 = *(unsigned __int8 *)(v3 + 96);
    if (v9 != 255)
      sub_1DA4E7898(*(id *)(v3 + 88), v9);
    v10 = *(unsigned __int8 *)(v3 + 112);
    if (v10 != 255)
      sub_1DA4E7898(*(id *)(v3 + 104), v10);
    v11 = *(unsigned __int8 *)(v3 + 128);
    if (v11 != 255)
      sub_1DA4E7898(*(id *)(v3 + 120), v11);
    v12 = v3 + *(int *)(v4 + 44);
    v13 = sub_1DA66C928();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v14 = (uint64_t *)(a1 + *(int *)(v2 + 44));
  v15 = v14[1];
  if (v15 >> 60 != 15)
    return sub_1DA4986F8(*v14, v15);
  return result;
}

_QWORD *initializeWithCopy for PlayStationIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, int *);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  int v22;
  id v23;
  id *v24;
  int v25;
  id v26;
  id *v27;
  int v28;
  id v29;
  id *v30;
  int v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  void (*v48)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *__dst;
  uint64_t v57;
  _QWORD *v58;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v5;
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v57 = type metadata accessor for StationEntity();
  v8 = *(int *)(v57 + 40);
  __dst = (_QWORD *)((char *)a1 + v8);
  v58 = a2;
  v9 = (_QWORD *)((char *)a2 + v8);
  v10 = (int *)sub_1DA66CA0C();
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v5;
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  if (v12(v9, 1, v10))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v15 = a1;
  }
  else
  {
    v16 = v9[1];
    *__dst = *v9;
    __dst[1] = v16;
    v17 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v17 == 255)
    {
      *((_OWORD *)__dst + 1) = *((_OWORD *)v9 + 1);
      *((_BYTE *)__dst + 32) = *((_BYTE *)v9 + 32);
    }
    else
    {
      v18 = v9[2];
      v19 = v9[3];
      sub_1DA481390(v18, v19, v17);
      __dst[2] = v18;
      __dst[3] = v19;
      *((_BYTE *)__dst + 32) = v17;
    }
    v20 = v11;
    *(_OWORD *)(__dst + 5) = *(_OWORD *)(v9 + 5);
    v21 = (id *)(v9 + 7);
    v22 = *((unsigned __int8 *)v9 + 64);
    v15 = a1;
    if (v22 == 255)
    {
      __dst[7] = *v21;
      *((_BYTE *)__dst + 64) = *((_BYTE *)v9 + 64);
    }
    else
    {
      v23 = *v21;
      sub_1DA4E762C(*v21, *((_BYTE *)v9 + 64));
      __dst[7] = v23;
      *((_BYTE *)__dst + 64) = v22;
    }
    v24 = (id *)(v9 + 9);
    v25 = *((unsigned __int8 *)v9 + 80);
    if (v25 == 255)
    {
      __dst[9] = *v24;
      *((_BYTE *)__dst + 80) = *((_BYTE *)v9 + 80);
    }
    else
    {
      v26 = *v24;
      sub_1DA4E762C(*v24, *((_BYTE *)v9 + 80));
      __dst[9] = v26;
      *((_BYTE *)__dst + 80) = v25;
    }
    v27 = (id *)(v9 + 11);
    v28 = *((unsigned __int8 *)v9 + 96);
    if (v28 == 255)
    {
      __dst[11] = *v27;
      *((_BYTE *)__dst + 96) = *((_BYTE *)v9 + 96);
    }
    else
    {
      v29 = *v27;
      sub_1DA4E762C(*v27, *((_BYTE *)v9 + 96));
      __dst[11] = v29;
      *((_BYTE *)__dst + 96) = v28;
    }
    v30 = (id *)(v9 + 13);
    v31 = *((unsigned __int8 *)v9 + 112);
    if (v31 == 255)
    {
      __dst[13] = *v30;
      *((_BYTE *)__dst + 112) = *((_BYTE *)v9 + 112);
    }
    else
    {
      v32 = *v30;
      sub_1DA4E762C(*v30, *((_BYTE *)v9 + 112));
      __dst[13] = v32;
      *((_BYTE *)__dst + 112) = v31;
    }
    v33 = (id *)(v9 + 15);
    v34 = *((unsigned __int8 *)v9 + 128);
    if (v34 == 255)
    {
      __dst[15] = *v33;
      *((_BYTE *)__dst + 128) = *((_BYTE *)v9 + 128);
    }
    else
    {
      v35 = *v33;
      sub_1DA4E762C(*v33, *((_BYTE *)v9 + 128));
      __dst[15] = v35;
      *((_BYTE *)__dst + 128) = v34;
    }
    *((_BYTE *)__dst + 129) = *((_BYTE *)v9 + 129);
    v36 = v10[11];
    v37 = (char *)__dst + v36;
    v38 = (char *)v9 + v36;
    v39 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = v10[12];
    v41 = (_QWORD *)((char *)__dst + v40);
    v42 = (_QWORD *)((char *)v9 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    *((_BYTE *)__dst + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)__dst + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)__dst + v10[15]) = *((_BYTE *)v9 + v10[15]);
    v44 = v10[16];
    v45 = (_QWORD *)((char *)__dst + v44);
    v46 = (_QWORD *)((char *)v9 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(__dst, 0, 1, v10);
  }
  v49 = *(int *)(v57 + 44);
  v50 = (char *)v15 + v49;
  v51 = (char *)v58 + v49;
  v52 = *((_QWORD *)v51 + 1);
  if (v52 >> 60 == 15)
  {
    *(_OWORD *)v50 = *(_OWORD *)v51;
  }
  else
  {
    v53 = *(_QWORD *)v51;
    sub_1DA498750(*(_QWORD *)v51, *((_QWORD *)v51 + 1));
    *(_QWORD *)v50 = v53;
    *((_QWORD *)v50 + 1) = v52;
  }
  return v15;
}

_QWORD *assignWithCopy for PlayStationIntent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  id *v29;
  int v30;
  id v31;
  id v32;
  id *v33;
  int v34;
  id v35;
  id v36;
  id *v37;
  int v38;
  id v39;
  id v40;
  id *v41;
  int v42;
  id v43;
  id v44;
  id *v45;
  int v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  id *v64;
  id *v65;
  int v66;
  id v67;
  void *v68;
  char v69;
  id v70;
  char v71;
  id v72;
  id *v73;
  id *v74;
  int v75;
  id v76;
  void *v77;
  char v78;
  id v79;
  char v80;
  id v81;
  id *v82;
  id *v83;
  int v84;
  id v85;
  void *v86;
  char v87;
  id v88;
  char v89;
  id v90;
  id *v91;
  id *v92;
  int v93;
  id v94;
  void *v95;
  char v96;
  id v97;
  char v98;
  id v99;
  id *v100;
  id *v101;
  int v102;
  id v103;
  void *v104;
  char v105;
  id v106;
  char v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  sub_1DA66BE60();
  swift_release();
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  a1[7] = a2[7];
  sub_1DA66BE60();
  swift_release();
  v7 = type metadata accessor for StationEntity();
  v8 = *(int *)(v7 + 40);
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)sub_1DA66CA0C();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_QWORD *)(v9 + 8) = *((_QWORD *)v10 + 1);
      v16 = v10[32];
      swift_bridgeObjectRetain();
      if (v16 == 255)
      {
        v28 = *((_OWORD *)v10 + 1);
        *(_BYTE *)(v9 + 32) = v10[32];
        *(_OWORD *)(v9 + 16) = v28;
      }
      else
      {
        v17 = *((_QWORD *)v10 + 2);
        v18 = *((_QWORD *)v10 + 3);
        sub_1DA481390(v17, v18, v16);
        *(_QWORD *)(v9 + 16) = v17;
        *(_QWORD *)(v9 + 24) = v18;
        *(_BYTE *)(v9 + 32) = v16;
      }
      *(_QWORD *)(v9 + 40) = *((_QWORD *)v10 + 5);
      *(_QWORD *)(v9 + 48) = *((_QWORD *)v10 + 6);
      v29 = (id *)(v10 + 56);
      v30 = v10[64];
      if (v30 == 255)
      {
        v32 = *v29;
        *(_BYTE *)(v9 + 64) = v10[64];
        *(_QWORD *)(v9 + 56) = v32;
      }
      else
      {
        v31 = *v29;
        sub_1DA4E762C(*v29, v10[64]);
        *(_QWORD *)(v9 + 56) = v31;
        *(_BYTE *)(v9 + 64) = v30;
      }
      v33 = (id *)(v10 + 72);
      v34 = v10[80];
      if (v34 == 255)
      {
        v36 = *v33;
        *(_BYTE *)(v9 + 80) = v10[80];
        *(_QWORD *)(v9 + 72) = v36;
      }
      else
      {
        v35 = *v33;
        sub_1DA4E762C(*v33, v10[80]);
        *(_QWORD *)(v9 + 72) = v35;
        *(_BYTE *)(v9 + 80) = v34;
      }
      v37 = (id *)(v10 + 88);
      v38 = v10[96];
      if (v38 == 255)
      {
        v40 = *v37;
        *(_BYTE *)(v9 + 96) = v10[96];
        *(_QWORD *)(v9 + 88) = v40;
      }
      else
      {
        v39 = *v37;
        sub_1DA4E762C(*v37, v10[96]);
        *(_QWORD *)(v9 + 88) = v39;
        *(_BYTE *)(v9 + 96) = v38;
      }
      v41 = (id *)(v10 + 104);
      v42 = v10[112];
      if (v42 == 255)
      {
        v44 = *v41;
        *(_BYTE *)(v9 + 112) = v10[112];
        *(_QWORD *)(v9 + 104) = v44;
      }
      else
      {
        v43 = *v41;
        sub_1DA4E762C(*v41, v10[112]);
        *(_QWORD *)(v9 + 104) = v43;
        *(_BYTE *)(v9 + 112) = v42;
      }
      v45 = (id *)(v10 + 120);
      v46 = v10[128];
      if (v46 == 255)
      {
        v48 = *v45;
        *(_BYTE *)(v9 + 128) = v10[128];
        *(_QWORD *)(v9 + 120) = v48;
      }
      else
      {
        v47 = *v45;
        sub_1DA4E762C(*v45, v10[128]);
        *(_QWORD *)(v9 + 120) = v47;
        *(_BYTE *)(v9 + 128) = v46;
      }
      *(_BYTE *)(v9 + 129) = v10[129];
      v49 = v11[11];
      v50 = v9 + v49;
      v51 = &v10[v49];
      v52 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      v53 = v11[12];
      v54 = (_QWORD *)(v9 + v53);
      v55 = &v10[v53];
      *v54 = *(_QWORD *)v55;
      v54[1] = *((_QWORD *)v55 + 1);
      *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
      *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
      *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
      v56 = v11[16];
      v57 = (_QWORD *)(v9 + v56);
      v58 = &v10[v56];
      *v57 = *(_QWORD *)v58;
      v57[1] = *((_QWORD *)v58 + 1);
      v59 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(v9, 0, 1, v11);
      goto LABEL_68;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_68;
  }
  if (v15)
  {
    sub_1DA4E8990(v9);
    goto LABEL_7;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *((_QWORD *)v10 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (__int128 *)(v9 + 16);
  v21 = (__int128 *)(v10 + 16);
  v22 = v10[32];
  if (*(unsigned __int8 *)(v9 + 32) == 255)
  {
    if (v22 == 255)
    {
      v63 = *v21;
      *(_BYTE *)(v9 + 32) = v10[32];
      *v20 = v63;
    }
    else
    {
      v60 = *((_QWORD *)v10 + 2);
      v61 = *((_QWORD *)v10 + 3);
      sub_1DA481390(v60, v61, v10[32]);
      *(_QWORD *)(v9 + 16) = v60;
      *(_QWORD *)(v9 + 24) = v61;
      *(_BYTE *)(v9 + 32) = v22;
    }
  }
  else if (v22 == 255)
  {
    sub_1DA4E8928(v9 + 16);
    v62 = v10[32];
    *v20 = *v21;
    *(_BYTE *)(v9 + 32) = v62;
  }
  else
  {
    v23 = *((_QWORD *)v10 + 2);
    v24 = *((_QWORD *)v10 + 3);
    sub_1DA481390(v23, v24, v10[32]);
    v25 = *(_QWORD *)(v9 + 16);
    v26 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v9 + 16) = v23;
    *(_QWORD *)(v9 + 24) = v24;
    v27 = *(_BYTE *)(v9 + 32);
    *(_BYTE *)(v9 + 32) = v22;
    sub_1DA47F868(v25, v26, v27);
  }
  *(_QWORD *)(v9 + 40) = *((_QWORD *)v10 + 5);
  *(_QWORD *)(v9 + 48) = *((_QWORD *)v10 + 6);
  v64 = (id *)(v9 + 56);
  v65 = (id *)(v10 + 56);
  v66 = v10[64];
  if (*(unsigned __int8 *)(v9 + 64) == 255)
  {
    if (v66 == 255)
    {
      v72 = *v65;
      *(_BYTE *)(v9 + 64) = v10[64];
      *v64 = v72;
    }
    else
    {
      v70 = *v65;
      sub_1DA4E762C(*v65, v10[64]);
      *(_QWORD *)(v9 + 56) = v70;
      *(_BYTE *)(v9 + 64) = v66;
    }
  }
  else if (v66 == 255)
  {
    sub_1DA4E895C(v9 + 56);
    v71 = v10[64];
    *v64 = *v65;
    *(_BYTE *)(v9 + 64) = v71;
  }
  else
  {
    v67 = *v65;
    sub_1DA4E762C(*v65, v10[64]);
    v68 = *(void **)(v9 + 56);
    *(_QWORD *)(v9 + 56) = v67;
    v69 = *(_BYTE *)(v9 + 64);
    *(_BYTE *)(v9 + 64) = v66;
    sub_1DA4E7898(v68, v69);
  }
  v73 = (id *)(v9 + 72);
  v74 = (id *)(v10 + 72);
  v75 = v10[80];
  if (*(unsigned __int8 *)(v9 + 80) == 255)
  {
    if (v75 == 255)
    {
      v81 = *v74;
      *(_BYTE *)(v9 + 80) = v10[80];
      *v73 = v81;
    }
    else
    {
      v79 = *v74;
      sub_1DA4E762C(*v74, v10[80]);
      *(_QWORD *)(v9 + 72) = v79;
      *(_BYTE *)(v9 + 80) = v75;
    }
  }
  else if (v75 == 255)
  {
    sub_1DA4E895C(v9 + 72);
    v80 = v10[80];
    *v73 = *v74;
    *(_BYTE *)(v9 + 80) = v80;
  }
  else
  {
    v76 = *v74;
    sub_1DA4E762C(*v74, v10[80]);
    v77 = *(void **)(v9 + 72);
    *(_QWORD *)(v9 + 72) = v76;
    v78 = *(_BYTE *)(v9 + 80);
    *(_BYTE *)(v9 + 80) = v75;
    sub_1DA4E7898(v77, v78);
  }
  v82 = (id *)(v9 + 88);
  v83 = (id *)(v10 + 88);
  v84 = v10[96];
  if (*(unsigned __int8 *)(v9 + 96) == 255)
  {
    if (v84 == 255)
    {
      v90 = *v83;
      *(_BYTE *)(v9 + 96) = v10[96];
      *v82 = v90;
    }
    else
    {
      v88 = *v83;
      sub_1DA4E762C(*v83, v10[96]);
      *(_QWORD *)(v9 + 88) = v88;
      *(_BYTE *)(v9 + 96) = v84;
    }
  }
  else if (v84 == 255)
  {
    sub_1DA4E895C(v9 + 88);
    v89 = v10[96];
    *v82 = *v83;
    *(_BYTE *)(v9 + 96) = v89;
  }
  else
  {
    v85 = *v83;
    sub_1DA4E762C(*v83, v10[96]);
    v86 = *(void **)(v9 + 88);
    *(_QWORD *)(v9 + 88) = v85;
    v87 = *(_BYTE *)(v9 + 96);
    *(_BYTE *)(v9 + 96) = v84;
    sub_1DA4E7898(v86, v87);
  }
  v91 = (id *)(v9 + 104);
  v92 = (id *)(v10 + 104);
  v93 = v10[112];
  if (*(unsigned __int8 *)(v9 + 112) == 255)
  {
    if (v93 == 255)
    {
      v99 = *v92;
      *(_BYTE *)(v9 + 112) = v10[112];
      *v91 = v99;
    }
    else
    {
      v97 = *v92;
      sub_1DA4E762C(*v92, v10[112]);
      *(_QWORD *)(v9 + 104) = v97;
      *(_BYTE *)(v9 + 112) = v93;
    }
  }
  else if (v93 == 255)
  {
    sub_1DA4E895C(v9 + 104);
    v98 = v10[112];
    *v91 = *v92;
    *(_BYTE *)(v9 + 112) = v98;
  }
  else
  {
    v94 = *v92;
    sub_1DA4E762C(*v92, v10[112]);
    v95 = *(void **)(v9 + 104);
    *(_QWORD *)(v9 + 104) = v94;
    v96 = *(_BYTE *)(v9 + 112);
    *(_BYTE *)(v9 + 112) = v93;
    sub_1DA4E7898(v95, v96);
  }
  v100 = (id *)(v9 + 120);
  v101 = (id *)(v10 + 120);
  v102 = v10[128];
  if (*(unsigned __int8 *)(v9 + 128) == 255)
  {
    if (v102 == 255)
    {
      v108 = *v101;
      *(_BYTE *)(v9 + 128) = v10[128];
      *v100 = v108;
    }
    else
    {
      v106 = *v101;
      sub_1DA4E762C(*v101, v10[128]);
      *(_QWORD *)(v9 + 120) = v106;
      *(_BYTE *)(v9 + 128) = v102;
    }
  }
  else if (v102 == 255)
  {
    sub_1DA4E895C(v9 + 120);
    v107 = v10[128];
    *v100 = *v101;
    *(_BYTE *)(v9 + 128) = v107;
  }
  else
  {
    v103 = *v101;
    sub_1DA4E762C(*v101, v10[128]);
    v104 = *(void **)(v9 + 120);
    *(_QWORD *)(v9 + 120) = v103;
    v105 = *(_BYTE *)(v9 + 128);
    *(_BYTE *)(v9 + 128) = v102;
    sub_1DA4E7898(v104, v105);
  }
  *(_BYTE *)(v9 + 129) = v10[129];
  v109 = v11[11];
  v110 = v9 + v109;
  v111 = &v10[v109];
  v112 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 24))(v110, v111, v112);
  v113 = v11[12];
  v114 = (_QWORD *)(v9 + v113);
  v115 = &v10[v113];
  *v114 = *(_QWORD *)v115;
  v114[1] = *((_QWORD *)v115 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
  *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
  *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
  v116 = v11[16];
  v117 = (_QWORD *)(v9 + v116);
  v118 = &v10[v116];
  *v117 = *(_QWORD *)v118;
  v117[1] = *((_QWORD *)v118 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  v119 = *(int *)(v7 + 44);
  v120 = (_QWORD *)((char *)a1 + v119);
  v121 = (_QWORD *)((char *)a2 + v119);
  v122 = *(_QWORD *)((char *)a2 + v119 + 8);
  if (*(_QWORD *)((char *)a1 + v119 + 8) >> 60 != 15)
  {
    if (v122 >> 60 != 15)
    {
      v124 = *v121;
      sub_1DA498750(v124, v122);
      v125 = *v120;
      v126 = v120[1];
      *v120 = v124;
      v120[1] = v122;
      sub_1DA4986F8(v125, v126);
      return a1;
    }
    sub_1DA4E89CC((uint64_t)v120);
    goto LABEL_73;
  }
  if (v122 >> 60 == 15)
  {
LABEL_73:
    *(_OWORD *)v120 = *(_OWORD *)v121;
    return a1;
  }
  v123 = *v121;
  sub_1DA498750(v123, v122);
  *v120 = v123;
  v120[1] = v122;
  return a1;
}

_OWORD *initializeWithTake for PlayStationIntent(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = type metadata accessor for StationEntity();
  v7 = *(int *)(v6 + 40);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)sub_1DA66CA0C();
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_BYTE *)v8 + 32) = *((_BYTE *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_BYTE *)v8 + 64) = *((_BYTE *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((_BYTE *)v8 + 129) = *((_BYTE *)v9 + 129);
    v14 = v10[11];
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_1DA66C928();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((_BYTE *)v8 + v10[13]) = *((_BYTE *)v9 + v10[13]);
    *((_BYTE *)v8 + v10[14]) = *((_BYTE *)v9 + v10[14]);
    *((_BYTE *)v8 + v10[15]) = *((_BYTE *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v6 + 44)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 44));
  return a1;
}

_QWORD *assignWithTake for PlayStationIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _OWORD *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  int v37;
  void *v38;
  _QWORD *v39;
  int v40;
  int v41;
  void *v42;
  _QWORD *v43;
  int v44;
  int v45;
  void *v46;
  _QWORD *v47;
  int v48;
  int v49;
  void *v50;
  _QWORD *v51;
  int v52;
  int v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  a1[4] = a2[4];

  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  v7 = type metadata accessor for StationEntity();
  v8 = *(int *)(v7 + 40);
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)sub_1DA66CA0C();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v16;
      *(_BYTE *)(v9 + 32) = v10[32];
      *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
      *(_QWORD *)(v9 + 56) = *((_QWORD *)v10 + 7);
      *(_BYTE *)(v9 + 64) = v10[64];
      *(_OWORD *)(v9 + 113) = *(_OWORD *)(v10 + 113);
      *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
      *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
      *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
      *(_BYTE *)(v9 + 129) = v10[129];
      v17 = v11[11];
      v18 = v9 + v17;
      v19 = &v10[v17];
      v20 = sub_1DA66C928();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      *(_OWORD *)(v9 + v11[12]) = *(_OWORD *)&v10[v11[12]];
      *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
      *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
      *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
      *(_OWORD *)(v9 + v11[16]) = *(_OWORD *)&v10[v11[16]];
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1DA4E8990(v9);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4108);
    memcpy((void *)v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v29 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v29;
  swift_bridgeObjectRelease();
  v30 = v10 + 16;
  v31 = *(unsigned __int8 *)(v9 + 32);
  if (v31 != 255)
  {
    v32 = v10[32];
    if (v32 != 255)
    {
      v33 = *(_QWORD *)(v9 + 16);
      v34 = *(_QWORD *)(v9 + 24);
      *(_OWORD *)(v9 + 16) = *v30;
      *(_BYTE *)(v9 + 32) = v32;
      sub_1DA47F868(v33, v34, v31);
      goto LABEL_18;
    }
    sub_1DA4E8928(v9 + 16);
  }
  *(_OWORD *)(v9 + 16) = *v30;
  *(_BYTE *)(v9 + 32) = v10[32];
LABEL_18:
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  v35 = v10 + 56;
  v36 = *(unsigned __int8 *)(v9 + 64);
  if (v36 != 255)
  {
    v37 = v10[64];
    if (v37 != 255)
    {
      v38 = *(void **)(v9 + 56);
      *(_QWORD *)(v9 + 56) = *v35;
      *(_BYTE *)(v9 + 64) = v37;
      sub_1DA4E7898(v38, v36);
      goto LABEL_23;
    }
    sub_1DA4E895C(v9 + 56);
  }
  *(_QWORD *)(v9 + 56) = *v35;
  *(_BYTE *)(v9 + 64) = v10[64];
LABEL_23:
  v39 = v10 + 72;
  v40 = *(unsigned __int8 *)(v9 + 80);
  if (v40 != 255)
  {
    v41 = v10[80];
    if (v41 != 255)
    {
      v42 = *(void **)(v9 + 72);
      *(_QWORD *)(v9 + 72) = *v39;
      *(_BYTE *)(v9 + 80) = v41;
      sub_1DA4E7898(v42, v40);
      goto LABEL_28;
    }
    sub_1DA4E895C(v9 + 72);
  }
  *(_QWORD *)(v9 + 72) = *v39;
  *(_BYTE *)(v9 + 80) = v10[80];
LABEL_28:
  v43 = v10 + 88;
  v44 = *(unsigned __int8 *)(v9 + 96);
  if (v44 != 255)
  {
    v45 = v10[96];
    if (v45 != 255)
    {
      v46 = *(void **)(v9 + 88);
      *(_QWORD *)(v9 + 88) = *v43;
      *(_BYTE *)(v9 + 96) = v45;
      sub_1DA4E7898(v46, v44);
      goto LABEL_33;
    }
    sub_1DA4E895C(v9 + 88);
  }
  *(_QWORD *)(v9 + 88) = *v43;
  *(_BYTE *)(v9 + 96) = v10[96];
LABEL_33:
  v47 = v10 + 104;
  v48 = *(unsigned __int8 *)(v9 + 112);
  if (v48 != 255)
  {
    v49 = v10[112];
    if (v49 != 255)
    {
      v50 = *(void **)(v9 + 104);
      *(_QWORD *)(v9 + 104) = *v47;
      *(_BYTE *)(v9 + 112) = v49;
      sub_1DA4E7898(v50, v48);
      goto LABEL_38;
    }
    sub_1DA4E895C(v9 + 104);
  }
  *(_QWORD *)(v9 + 104) = *v47;
  *(_BYTE *)(v9 + 112) = v10[112];
LABEL_38:
  v51 = v10 + 120;
  v52 = *(unsigned __int8 *)(v9 + 128);
  if (v52 == 255)
  {
LABEL_42:
    *(_QWORD *)(v9 + 120) = *v51;
    *(_BYTE *)(v9 + 128) = v10[128];
    goto LABEL_43;
  }
  v53 = v10[128];
  if (v53 == 255)
  {
    sub_1DA4E895C(v9 + 120);
    goto LABEL_42;
  }
  v54 = *(void **)(v9 + 120);
  *(_QWORD *)(v9 + 120) = *v51;
  *(_BYTE *)(v9 + 128) = v53;
  sub_1DA4E7898(v54, v52);
LABEL_43:
  *(_BYTE *)(v9 + 129) = v10[129];
  v55 = v11[11];
  v56 = v9 + v55;
  v57 = &v10[v55];
  v58 = sub_1DA66C928();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  v59 = v11[12];
  v60 = (_QWORD *)(v9 + v59);
  v61 = &v10[v59];
  v63 = *(_QWORD *)v61;
  v62 = *((_QWORD *)v61 + 1);
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v11[13]) = v10[v11[13]];
  *(_BYTE *)(v9 + v11[14]) = v10[v11[14]];
  *(_BYTE *)(v9 + v11[15]) = v10[v11[15]];
  v64 = v11[16];
  v65 = (_QWORD *)(v9 + v64);
  v66 = &v10[v64];
  v68 = *(_QWORD *)v66;
  v67 = *((_QWORD *)v66 + 1);
  *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
LABEL_7:
  v22 = *(int *)(v7 + 44);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      v27 = *v23;
      *v23 = *v24;
      v23[1] = v26;
      sub_1DA4986F8(v27, v25);
      return a1;
    }
    sub_1DA4E89CC((uint64_t)v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayStationIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA57664C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StationEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlayStationIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA576694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StationEntity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlayStationIntent()
{
  uint64_t result;

  result = qword_1EDAE3C30;
  if (!qword_1EDAE3C30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA576710()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StationEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeStateMediaAPIRequest()
{
  return &type metadata for EpisodeStateMediaAPIRequest;
}

unint64_t sub_1DA57678C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026B180;
  if (!qword_1F026B180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B188);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7E750], v1);
    atomic_store(result, (unint64_t *)&qword_1F026B180);
  }
  return result;
}

uint64_t sub_1DA5767D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(unint64_t, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(unint64_t, _QWORD, uint64_t);
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;

  v75 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v3);
  v74 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1C0);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFD0);
  MEMORY[0x1E0C80A78](v7);
  v88 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D0);
  MEMORY[0x1E0C80A78](v9);
  v87 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026DFE0);
  MEMORY[0x1E0C80A78](v11);
  v86 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA66CA30();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66DEF4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A85EC();
  sub_1DA670264();
  swift_bridgeObjectRetain();
  v20 = sub_1DA66DEDC();
  v21 = sub_1DA66FD9C();
  v22 = os_log_type_enabled(v20, v21);
  v84 = a1;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 134217984;
    v91 = *(_QWORD *)(a1 + 16);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v20, v21, "Fetching play state for %ld episodes", v23, 0xCu);
    MEMORY[0x1DF0A0474](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v85, *MEMORY[0x1E0D7D818], v13);
  v24 = *MEMORY[0x1E0D7D838];
  v25 = sub_1DA66CA3C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
  v28 = v86;
  v80 = v24;
  v27(v86, v24, v25);
  v78 = v25;
  v79 = v27;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
  v29 = sub_1DA66CA9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v87, 1, 1, v29);
  v30 = sub_1DA66CA54();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v88, 1, 1, v30);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1D8);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v35 = (v34 + 32) & ~v34;
  v81 = v34 | 7;
  v82 = v35 + v33;
  v36 = swift_allocObject();
  v89 = xmmword_1DA678510;
  *(_OWORD *)(v36 + 16) = xmmword_1DA678510;
  v77 = *(int *)(v31 + 48);
  v27((char *)(v36 + v35), v24, v25);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B1E8);
  v37 = sub_1DA66CA60();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v89;
  v41 = *(void (**)(unint64_t, _QWORD, uint64_t))(v38 + 104);
  v41(v40 + v39, *MEMORY[0x1E0D7D8A8], v37);
  *(_QWORD *)(v36 + v35 + v77) = v40;
  v77 = sub_1DA63CC0C(v36);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v89;
  v43 = v42 + v35;
  v44 = *(int *)(v31 + 48);
  v79((char *)v43, v80, v78);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v89;
  v41(v45 + v39, *MEMORY[0x1E0D7D8C0], v37);
  *(_QWORD *)(v43 + v44) = v45;
  v46 = sub_1DA63CC0C(v42);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1F0);
  v47 = sub_1DA66CA6C();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(_QWORD *)(v48 + 72);
  v50 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1DA67C310;
  v52 = *(void (**)(unint64_t, _QWORD, uint64_t))(v48 + 104);
  v52(v51 + v50, *MEMORY[0x1E0D7D8E0], v47);
  v52(v51 + v50 + v49, *MEMORY[0x1E0D7D8F0], v47);
  v52(v51 + v50 + 2 * v49, *MEMORY[0x1E0D7D8E8], v47);
  v52(v51 + v50 + 3 * v49, *MEMORY[0x1E0D7D8D8], v47);
  v52(v51 + v50 + 4 * v49, *MEMORY[0x1E0D7D8F8], v47);
  v53 = v84;
  v54 = *(_QWORD *)(v84 + 16);
  v55 = MEMORY[0x1E0DEE9D8];
  if (v54)
  {
    v82 = v51;
    v83 = v46;
    v91 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DA498794(0, v54, 0);
    v56 = v91;
    result = sub_1DA6047A4(v53);
    v58 = result;
    v60 = v59;
    v62 = v61 & 1;
    *(_QWORD *)&v89 = v53 + 56;
    while ((v58 & 0x8000000000000000) == 0 && v58 < 1 << *(_BYTE *)(v53 + 32))
    {
      if (((*(_QWORD *)(v89 + (((unint64_t)v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v53 + 36) != (_DWORD)v60)
        goto LABEL_17;
      v90 = *(_QWORD *)(*(_QWORD *)(v53 + 48) + 8 * v58);
      sub_1DA4F726C();
      v63 = sub_1DA670354();
      v65 = v64;
      v91 = v56;
      v67 = *(_QWORD *)(v56 + 16);
      v66 = *(_QWORD *)(v56 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1DA498794(v66 > 1, v67 + 1, 1);
        v56 = v91;
      }
      *(_QWORD *)(v56 + 16) = v67 + 1;
      v68 = v56 + 16 * v67;
      *(_QWORD *)(v68 + 32) = v63;
      *(_QWORD *)(v68 + 40) = v65;
      result = sub_1DA604848(v58, v60, v62 & 1, v53);
      v58 = result;
      v60 = v69;
      v62 = v70 & 1;
      if (!--v54)
      {
        sub_1DA57DB40(result, v69, v70 & 1);
        swift_bridgeObjectRelease();
        v55 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_14:
    v71 = sub_1DA66CA48();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v73, 1, 1, v71);
    v72 = sub_1DA66C358();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v74, 1, 1, v72);
    sub_1DA656BAC(v55);
    sub_1DA656BAC(v55);
    sub_1DA656BD0(v55);
    sub_1DA656D64(v55);
    sub_1DA656D88(v55);
    return sub_1DA66CA84();
  }
  return result;
}

uint64_t sub_1DA577028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  double v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66DAB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D6C0();
  v10 = sub_1DA66DCF0();
  if ((v11 & 1) != 0)
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  v30 = v10;
  v12 = sub_1DA66D6A8();
  v32 = v1;
  v31 = a1;
  if (!v12)
    goto LABEL_13;
  v13 = (void *)v12;
  v14 = sub_1DA66DA80();

  if (!v14)
    goto LABEL_13;
  v15 = sub_1DA66DBC4();
  result = swift_release();
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1DA6705A0();
    result = swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_6;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v17 = 0;
    goto LABEL_14;
  }
LABEL_6:
  if ((v15 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1DF09EE48](0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    sub_1DA66BE60();
  }
  swift_bridgeObjectRelease();
  v17 = sub_1DA66DA98();
  swift_release();
LABEL_14:
  sub_1DA66D69C();
  v20 = sub_1DA66D93C();
  swift_release();
  sub_1DA66D69C();
  v21 = sub_1DA66D930();
  v23 = v22;
  swift_release();
  v24 = *(double *)&v21;
  if ((v23 & 1) != 0)
    v24 = 0.0;
  ThinClientEpisodeStateModel.init(playbackData:duration:isBookmarked:)(v17, v20, (uint64_t)v5, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1DA47E2F0((uint64_t)v5, (uint64_t *)&unk_1F026B1B0);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v31, 1, 1, v25);
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v26(v9, v5, v6);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
    v28 = v31;
    v29 = (char *)v31 + *(int *)(v27 + 48);
    *v31 = v30;
    v26(v29, v9, v6);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v28, 0, 1, v27);
  }
}

uint64_t sub_1DA577320@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1DA5767D8(*v1, a1);
}

uint64_t sub_1DA577328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA57D7B8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA57734C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DA66D5C4();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E470);
  v11 = sub_1DA6705B8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_39;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = sub_1DA66BE60();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v19++, 1))
      goto LABEL_41;
    if (v19 >= v45)
      break;
    v26 = v46;
    v27 = v46[v19];
    if (!v27)
    {
      v28 = v19 + 1;
      if (v19 + 1 >= v45)
      {
LABEL_31:
        v40 = v48;
        swift_release();
        v3 = v44;
        if ((v43 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v27 = v46[v28];
      if (!v27)
      {
        while (1)
        {
          v19 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v19 >= v45)
            goto LABEL_31;
          v27 = v46[v19];
          ++v28;
          if (v27)
            goto LABEL_21;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v19;
    }
LABEL_21:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_22:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1DA47E32C((unint64_t *)&qword_1F026E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0], MEMORY[0x1E0D7E5E0]);
    result = sub_1DA66F7F0();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1DA577730(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1DA66FDF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CF0);
  v42 = a2;
  v10 = sub_1DA6705B8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_39;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = sub_1DA66BE60();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_41;
    if (v18 >= v39)
      break;
    v23 = v40;
    v24 = v40[v18];
    if (!v24)
    {
      v25 = v18 + 1;
      if (v18 + 1 >= v39)
      {
LABEL_32:
        swift_release();
        v3 = v38;
        if ((v42 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v24 = v40[v25];
      if (!v24)
      {
        while (1)
        {
          v18 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v18 >= v39)
            goto LABEL_32;
          v24 = v40[v18];
          ++v25;
          if (v24)
            goto LABEL_19;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_19:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_20:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1DA47E32C(&qword_1EDAE4BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7EFB0], MEMORY[0x1E0D7EFC0]);
    result = sub_1DA66F7F0();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1DA577AAC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1DA66C544();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DA66C4E4();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CA0);
  v11 = sub_1DA6705B8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_39;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = sub_1DA66BE60();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v19++, 1))
      goto LABEL_41;
    if (v19 >= v45)
      break;
    v26 = v46;
    v27 = v46[v19];
    if (!v27)
    {
      v28 = v19 + 1;
      if (v19 + 1 >= v45)
      {
LABEL_31:
        v40 = v48;
        swift_release();
        v3 = v44;
        if ((v43 & 1) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v27 = v46[v28];
      if (!v27)
      {
        while (1)
        {
          v19 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v19 >= v45)
            goto LABEL_31;
          v27 = v46[v19];
          ++v28;
          if (v27)
            goto LABEL_21;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v19;
    }
LABEL_21:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_22:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1DA47E32C(&qword_1EDAE3AD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00], MEMORY[0x1E0CB0F10]);
    result = sub_1DA66F7F0();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_39;
LABEL_35:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1DA577E8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E400);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
      v33 = v31;
    result = sub_1DA670198();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA578158(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1DA66BE60();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1DA49ACF0(v24, v35);
      }
      else
      {
        sub_1DA49ADD0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1DA670798();
      sub_1DA66F94C();
      result = sub_1DA6707C8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1DA49ACF0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA578454(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B200);
  result = sub_1DA6705B8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1DA67078C();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA578708(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;

  v3 = v2;
  v5 = sub_1DA66D1BC();
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B218);
  v45 = a2;
  v8 = sub_1DA6705B8();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v41 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v43 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v42 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = sub_1DA66BE60();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v42)
          goto LABEL_34;
        v22 = v43[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v42)
            goto LABEL_34;
          v22 = v43[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v42)
            {
LABEL_34:
              swift_release();
              v3 = v41;
              if ((v45 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v7 + 32);
                if (v39 >= 64)
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v39;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v43[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v42)
                  goto LABEL_34;
                v22 = v43[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = *(_QWORD *)(v7 + 48) + 24 * v20;
      v28 = *(_QWORD *)v26;
      v27 = *(_QWORD *)(v26 + 8);
      v29 = *(_BYTE *)(v26 + 16);
      v30 = *(_QWORD *)(v44 + 72);
      v31 = v24 + v30 * v20;
      if ((v45 & 1) != 0)
      {
        sub_1DA556E54(v31, v46);
      }
      else
      {
        sub_1DA556DD4(v31, v46);
        sub_1DA5242E8(v28, v27, v29);
      }
      sub_1DA670798();
      sub_1DA66D774();
      result = sub_1DA6707C8();
      v32 = -1 << *(_BYTE *)(v9 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v14 + 8 * v34);
        }
        while (v38 == -1);
        v17 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v9 + 48) + 24 * v17;
      *(_QWORD *)v18 = v28;
      *(_QWORD *)(v18 + 8) = v27;
      *(_BYTE *)(v18 + 16) = v29;
      result = sub_1DA556E54(v46, *(_QWORD *)(v9 + 56) + v30 * v17);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1DA578A88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CC0);
  result = sub_1DA6705B8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1DA670798();
      sub_1DA6707A4();
      result = sub_1DA6707C8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DA578D58(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2190);
  v42 = a2;
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1DA66BE60();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DA670798();
    sub_1DA66F94C();
    result = sub_1DA6707C8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA57907C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1DA66C454();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5018);
  v42 = a2;
  v10 = sub_1DA6705B8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = sub_1DA66BE60();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      sub_1DA66BE60();
    }
    sub_1DA47E32C(&qword_1EDAE4F90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1DA66F7F0();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1DA579410(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B208);
  result = sub_1DA6705B8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1DA670798();
      sub_1DA6707BC();
      result = sub_1DA6707C8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DA5796E8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = sub_1DA66DAB0();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1A0);
  result = sub_1DA6705B8();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    v36 = a2;
    v17 = 16;
    if ((a2 & 1) != 0)
      v17 = 32;
    v39 = v17;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_40;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v38, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v11 >= v37)
                  goto LABEL_33;
                v22 = v38[v11];
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v11 = v23;
          }
        }
LABEL_23:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v20);
      v25 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + v39))(v7, *(_QWORD *)(v8 + 56) + v25 * v20, v40);
      sub_1DA670798();
      sub_1DA6707BC();
      result = sub_1DA6707C8();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v18 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v18) = v24;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v25 * v18, v7, v40);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v10;
  return result;
}

uint64_t sub_1DA579A24(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CB0);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v31 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1DA66BE60();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30)
          goto LABEL_35;
        v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v30)
            goto LABEL_35;
          v18 = v31[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v31 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v13 >= v30)
                  goto LABEL_35;
                v18 = v31[v13];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v13 = v19;
          }
        }
LABEL_21:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DA670798();
      sub_1DA6707A4();
      if (v21)
        sub_1DA66F94C();
      result = sub_1DA6707C8();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v32;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v20;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA579D34(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1DA66EFB0();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CE0);
  v8 = sub_1DA6705B8();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = sub_1DA66BE60();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_1DA47E32C(&qword_1EDAE4930, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40198], MEMORY[0x1E0D401A8]);
    result = sub_1DA66F7F0();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DA57A0D0(uint64_t a1, char a2)
{
  return sub_1DA57A0E8(a1, a2, (uint64_t *)&unk_1EDAE21A0);
}

uint64_t sub_1DA57A0DC(uint64_t a1, char a2)
{
  return sub_1DA57A0E8(a1, a2, (uint64_t *)&unk_1EDAE21B0);
}

uint64_t sub_1DA57A0E8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1DA6705B8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1DA670798();
    sub_1DA66F94C();
    result = sub_1DA6707C8();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1DA57A3F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D6F0);
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_1DA66BE60();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_unknownObjectRetain();
    }
    result = sub_1DA670198();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DA57A6C4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1DA66DA68();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DA66D5C4();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B220);
  v11 = sub_1DA6705B8();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = sub_1DA66BE60();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1DA47E32C((unint64_t *)&qword_1F026E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0], MEMORY[0x1E0D7E5E0]);
    result = sub_1DA66F7F0();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1DA57AABC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CE8);
  v42 = a2;
  v6 = sub_1DA6705B8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1DA66BE60();
  v13 = 0;
  v14 = v5;
  v41 = v5;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v39)
      break;
    v24 = v40;
    v25 = v40[v23];
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v39)
        goto LABEL_34;
      v25 = v40[v13];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_35;
        }
        v25 = v40[v26];
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v13 >= v39)
              goto LABEL_34;
            v25 = v40[v13];
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v14 + 56) + (v22 << 6);
    v35 = *(_QWORD *)(v34 + 8);
    v43 = *(_QWORD *)v34;
    v44 = *(_QWORD *)(v34 + 16);
    v45 = *(_OWORD *)(v34 + 40);
    v46 = *(_OWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 56);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v41;
      swift_bridgeObjectRetain();
    }
    sub_1DA670798();
    sub_1DA66F94C();
    result = sub_1DA6707C8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v7 + 56) + (v18 << 6);
    *(_QWORD *)v20 = v43;
    *(_QWORD *)(v20 + 8) = v35;
    *(_QWORD *)(v20 + 16) = v44;
    *(_OWORD *)(v20 + 24) = v46;
    *(_OWORD *)(v20 + 40) = v45;
    *(_QWORD *)(v20 + 56) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v24 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_35:
  v37 = 1 << *(_BYTE *)(v41 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v41 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

char *sub_1DA57AE54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DA66D5C4();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026E470);
  v4 = *v0;
  v5 = sub_1DA6705AC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (char *)swift_release();
LABEL_25:
    *v1 = v6;
    return result;
  }
  result = (char *)(v5 + 64);
  v8 = (char *)(v4 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v30 = v1;
  v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9])
    result = (char *)memmove(result, v8, 8 * v9);
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v38 = v4;
  v39 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v40 = (unint64_t)(v12 + 63) >> 6;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = v36;
  v19 = v6;
  while (1)
  {
    if (v14)
    {
      v41 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v10 << 6);
      v21 = v38;
      goto LABEL_9;
    }
    v27 = __OFADD__(v10++, 1);
    v21 = v38;
    if (v27)
      goto LABEL_27;
    if (v10 >= v40)
    {
LABEL_24:
      result = (char *)swift_release();
      v1 = v30;
      v6 = v39;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    if (!v28)
      break;
LABEL_21:
    v41 = (v28 - 1) & v28;
    v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v15 + 72) * v20;
    v23 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v21 + 48) + v22, v35);
    v24 = *(_QWORD *)(v16 + 72) * v20;
    v25 = *(_QWORD *)(v21 + 56) + v24;
    v26 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v25, v37);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 48) + v22, v17, v23);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v19 + 56) + v24, v18, v26);
    v14 = v41;
  }
  v29 = v10 + 1;
  if (v10 + 1 >= v40)
    goto LABEL_24;
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  v6 = v39;
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v40)
    {
      result = (char *)swift_release();
      v1 = v30;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_21;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DA57B12C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = sub_1DA66FDF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CF0);
  v6 = *v0;
  v7 = sub_1DA6705AC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (id)swift_release();
LABEL_26:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (id)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      result = (id)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v6 + 56) + v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1DA57B348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v37 = sub_1DA66C544();
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DA66C4E4();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CA0);
  v4 = *v0;
  v5 = sub_1DA6705AC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (char *)swift_release();
LABEL_25:
    *v1 = v6;
    return result;
  }
  result = (char *)(v5 + 64);
  v8 = (char *)(v4 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v30 = v1;
  v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9])
    result = (char *)memmove(result, v8, 8 * v9);
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v38 = v4;
  v39 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v40 = (unint64_t)(v12 + 63) >> 6;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = v36;
  v19 = v6;
  while (1)
  {
    if (v14)
    {
      v41 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v10 << 6);
      v21 = v38;
      goto LABEL_9;
    }
    v27 = __OFADD__(v10++, 1);
    v21 = v38;
    if (v27)
      goto LABEL_27;
    if (v10 >= v40)
    {
LABEL_24:
      result = (char *)swift_release();
      v1 = v30;
      v6 = v39;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    if (!v28)
      break;
LABEL_21:
    v41 = (v28 - 1) & v28;
    v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v15 + 72) * v20;
    v23 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v21 + 48) + v22, v35);
    v24 = *(_QWORD *)(v16 + 72) * v20;
    v25 = *(_QWORD *)(v21 + 56) + v24;
    v26 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v25, v37);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 48) + v22, v17, v23);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v19 + 56) + v24, v18, v26);
    v14 = v41;
  }
  v29 = v10 + 1;
  if (v10 + 1 >= v40)
    goto LABEL_24;
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  v6 = v39;
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v40)
    {
      result = (char *)swift_release();
      v1 = v30;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_21;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DA57B61C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E400);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57B7BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE21C0);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1DA49ADD0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1DA49ACF0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DA57B9A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B200);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57BB4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = sub_1DA66D1BC();
  v29 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B218);
  v26 = v0;
  v4 = *v0;
  v5 = sub_1DA6705AC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v6;
    return result;
  }
  result = (void *)(v5 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  v27 = v4 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v11 = 1 << *(_BYTE *)(v4 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v4 + 64);
  v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v4 + 48) + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(v29 + 72) * v15;
    sub_1DA556DD4(*(_QWORD *)(v4 + 56) + v21, (uint64_t)v3);
    v22 = *(_QWORD *)(v6 + 48) + v16;
    *(_QWORD *)v22 = v18;
    *(_QWORD *)(v22 + 8) = v19;
    *(_BYTE *)(v22 + 16) = v20;
    sub_1DA556E54((uint64_t)v3, *(_QWORD *)(v6 + 56) + v21);
    result = (void *)sub_1DA5242E8(v18, v19, v20);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
    goto LABEL_26;
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57BD88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4CC0);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57BF28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DA66C454();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5018);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DA6705AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)sub_1DA66BE60();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57C158()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B208);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57C2F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DA66DAB0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1A0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DA6705AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57C518()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CB0);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57C6C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1DA66EFB0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CE0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1DA6705AC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DA57C8EC()
{
  return sub_1DA57C904((uint64_t *)&unk_1EDAE21A0);
}

id sub_1DA57C8F8()
{
  return sub_1DA57C904((uint64_t *)&unk_1EDAE21B0);
}

id sub_1DA57C904(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1DA6705AC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57CAAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026D6F0);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1DA57CC54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1DA66DA68();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1DA66D5C4();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B220);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1DA6705AC();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DA57CF34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4CE8);
  v32 = v0;
  v1 = *v0;
  v2 = sub_1DA6705AC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v32 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v29 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v29);
    ++v8;
    if (!v30)
    {
      v8 = v29 + 1;
      if (v29 + 1 >= v12)
        goto LABEL_26;
      v30 = *(_QWORD *)(v5 + 8 * v8);
      if (!v30)
        break;
    }
LABEL_25:
    v11 = (v30 - 1) & v30;
    v14 = __clz(__rbit64(v30)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = v14 << 6;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 56);
    v25 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v26 = *(_OWORD *)(v20 + 24);
    v27 = *(_OWORD *)(v20 + 40);
    *v25 = v17;
    v25[1] = v18;
    v28 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v28 = v21;
    *(_QWORD *)(v28 + 8) = v22;
    *(_QWORD *)(v28 + 16) = v23;
    *(_OWORD *)(v28 + 24) = v26;
    *(_OWORD *)(v28 + 40) = v27;
    *(_QWORD *)(v28 + 56) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v12)
    goto LABEL_26;
  v30 = *(_QWORD *)(v5 + 8 * v31);
  if (v30)
  {
    v8 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v8);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DA57D148()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE780);
  v2 = *v0;
  v3 = sub_1DA6705AC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1DA49A8F4(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1DA49ADD0(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1DA49ACF0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1DA57D32C(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;

  v7 = sub_1DA66DAB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
  MEMORY[0x1E0C80A78](v11);
  v15 = (_QWORD *)((char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v56) = a2;
  v52[1] = v3;
  v53 = v16;
  v17 = (char *)v15 + *(int *)(v12 + 48);
  v52[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v52[0];
  v58 = *(_QWORD *)(v13 + 72);
  v55 = a1;
  swift_bridgeObjectRetain();
  sub_1DA57DAF8(v18, (uint64_t)v15);
  v63 = *v15;
  v19 = v63;
  v54 = v8;
  v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v57 = v17;
  v59 = v7;
  v20(v10, v17, v7);
  v21 = (_QWORD *)*a3;
  v23 = sub_1DA55CB08(v19);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
    goto LABEL_23;
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((v56 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1DA57C2F8();
      if ((v27 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v32 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(_QWORD *)(v32[6] + 8 * v23) = v19;
    v33 = v32[7];
    v56 = *(_QWORD *)(v54 + 72);
    v34 = v59;
    v20((char *)(v33 + v56 * v23), v10, v59);
    v35 = v32[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v32[2] = v37;
    v38 = v53 - 1;
    if (v53 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v39 = v55 + v58 + v52[0];
    while (1)
    {
      sub_1DA57DAF8(v39, (uint64_t)v15);
      v63 = *v15;
      v40 = v63;
      v20(v10, v57, v34);
      v41 = (_QWORD *)*a3;
      v42 = sub_1DA55CB08(v40);
      v44 = v41[2];
      v45 = (v43 & 1) == 0;
      v36 = __OFADD__(v44, v45);
      v46 = v44 + v45;
      if (v36)
        break;
      v47 = v43;
      if (v41[3] < v46)
      {
        sub_1DA5796E8(v46, 1);
        v42 = sub_1DA55CB08(v40);
        if ((v47 & 1) != (v48 & 1))
          goto LABEL_25;
      }
      if ((v47 & 1) != 0)
        goto LABEL_10;
      v49 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(_QWORD *)(v49[6] + 8 * v42) = v40;
      v34 = v59;
      v20((char *)(v49[7] + v56 * v42), v10, v59);
      v50 = v49[2];
      v36 = __OFADD__(v50, 1);
      v51 = v50 + 1;
      if (v36)
        goto LABEL_24;
      v49[2] = v51;
      v39 += v58;
      if (!--v38)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1DA5796E8(v26, v56 & 1);
  v28 = sub_1DA55CB08(v19);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    if ((v27 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v30 = (void *)swift_allocError();
    swift_willThrow();
    v62 = v30;
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v59);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1DA670744();
  __break(1u);
LABEL_26:
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_1DA670444();
  sub_1DA66F988();
  sub_1DA670528();
  sub_1DA66F988();
  sub_1DA670570();
  __break(1u);
}

uint64_t sub_1DA57D7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B190);
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v24 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v23 = (uint64_t)&v21 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B188);
  v8 = sub_1DA66D720();
  v9 = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DA6705A0();
    if (v10)
      goto LABEL_3;
LABEL_17:
    v12 = MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_17;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  v22 = v3;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x1DF09EE48](v11, v9);
    else
      v13 = *(id *)(v9 + 8 * v11 + 32);
    v14 = v13;
    v25 = (uint64_t)v13;
    sub_1DA577028(v2);

    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1DA47E2F0((uint64_t)v2, (uint64_t *)&unk_1F026B190);
    }
    else
    {
      v15 = v23;
      sub_1DA57DAB0((uint64_t)v2, v23);
      sub_1DA57DAB0(v15, v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_1DA540458(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
        v12 = sub_1DA540458(v16 > 1, v17 + 1, 1, v12);
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_1DA57DAB0(v24, v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v17);
      v3 = v22;
    }
    ++v11;
  }
  while (v10 != v11);
LABEL_18:
  swift_bridgeObjectRelease_n();
  if (*(_QWORD *)(v12 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026B1A0);
    v18 = sub_1DA6705D0();
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E0];
  }
  v25 = v18;
  v19 = swift_bridgeObjectRetain();
  sub_1DA57D32C(v19, 1, &v25);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1DA57DAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA57DAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026A810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA57DB40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t storeEnumTagSinglePayload for ConfirmationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA57DB98 + 4 * byte_1DA67D815[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA57DBCC + 4 * byte_1DA67D810[v4]))();
}

uint64_t sub_1DA57DBCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA57DBD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA57DBDCLL);
  return result;
}

uint64_t sub_1DA57DBE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA57DBF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA57DBF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA57DBFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationStyle()
{
  return &type metadata for ConfirmationStyle;
}

uint64_t sub_1DA57DC18()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DA57DC20()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1DA66E95C();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66E8F0();
    if (v2 <= 0x3F)
    {
      result = sub_1DA66E338();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_1DA57DCFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v7 | 7;
  v11 = sub_1DA66E338();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = (v10 | v13) == 7 && ((*(_DWORD *)(v12 + 80) | v7) & 0x100000) == 0;
  if (v14
    && (v15 = ((v7 + 16) & ~(unint64_t)v7) + v9 + v10,
        v16 = v9 + 7,
        v17 = (v9 + 7) & 0xFFFFFFFFFFFFFFF8,
        ((((*(_QWORD *)(v12 + 64)
          + 7
          + ((v13
            + 16
            + ((((((v17 + (v15 & ~v10) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 17 <= 0x18))
  {
    v18 = ~v8;
    v19 = ~v10;
    v53 = *(_QWORD *)(v11 - 8);
    v54 = ~v13;
    v55 = *(_QWORD *)(v12 + 64) + 7;
    v56 = v11;
    *a1 = *a2;
    v51 = v17 + 8;
    v52 = v13 + 16;
    v20 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = (char *)v21 + v8;
    v23 = ((unint64_t)v20 + v8 + 8) & ~v8;
    v24 = (unint64_t)(v22 + 8) & v18;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    sub_1DA66BE60();
    sub_1DA66BE60();
    v25(v23, v24, v5);
    v26 = ((unint64_t)a1 + v15) & ~v10;
    v27 = ((unint64_t)a2 + v15) & v19;
    v25(((unint64_t)a1 + v15) & v19, v27, v5);
    *(_QWORD *)((v16 + v26) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v16 + v27) & 0xFFFFFFFFFFFFF8);
    v28 = v26 + v51;
    *(_BYTE *)v28 = *(_BYTE *)(v27 + v51);
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v27 + v51 + 8);
    v29 = (_QWORD *)((v26 + v51 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)((v27 + v51 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v33 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    v36 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = ((unint64_t)v35 + v52) & v54;
    v39 = ((unint64_t)v36 + v52) & v54;
    v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    v40(v38, v39, v56);
    v41 = (_QWORD *)((v55 + v38) & 0xFFFFFFFFFFFFFFF8);
    v42 = (_QWORD *)((v55 + v39) & 0xFFFFFFFFFFFFFFF8);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    v45 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
    v46 = *(_QWORD *)v45;
    sub_1DA66BE60();
    if (v46 < 0xFFFFFFFF)
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
    }
    else
    {
      v47 = *(_QWORD *)(v45 + 8);
      *(_QWORD *)v44 = v46;
      *(_QWORD *)(v44 + 8) = v47;
      sub_1DA66BE60();
    }
    *(_BYTE *)(v44 + 16) = *(_BYTE *)(v45 + 16);
    return a1;
  }
  else
  {
    v48 = *a2;
    *a1 = *a2;
    v49 = v48 + (((v10 | v13) + 16) & ~(v10 | v13));
    sub_1DA66BE60();
  }
  return (_QWORD *)v49;
}

uint64_t sub_1DA57DFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  v4 = a1 + 15;
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  v9 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v9(v8, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = (v10 + a1 + (v7 | 7) + ((v7 + 16) & ~v7)) & ~(v7 | 7);
  v9(v11, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v12 = (((((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v13 = sub_1DA66E338();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v12 + *(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v15, v13);
  v16 = (*(_QWORD *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  result = swift_release();
  if (*(_QWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    return swift_release();
  return result;
}

_QWORD *sub_1DA57E13C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v44;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = ((v9 + 16) & ~v9) + v13 + (v9 | 7);
  v44 = a1;
  v15 = ((unint64_t)a1 + v14) & ~(v9 | 7);
  v16 = ((unint64_t)a2 + v14) & ~(v9 | 7);
  v12(v15, v16, v7);
  *(_QWORD *)((v13 + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 7 + v16) & 0xFFFFFFFFFFFFF8);
  v17 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = sub_1DA66E338();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = ((unint64_t)v26 + v31 + 16) & ~v31;
  v33 = ((unint64_t)v27 + v31 + 16) & ~v31;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v34(v32, v33, v29);
  v35 = *(_QWORD *)(v30 + 64) + 7;
  v36 = (_QWORD *)((v35 + v32) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)((v35 + v33) & 0xFFFFFFFFFFFFFFF8);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v40;
  sub_1DA66BE60();
  if (v41 < 0xFFFFFFFF)
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
  }
  else
  {
    v42 = *(_QWORD *)(v40 + 8);
    *(_QWORD *)v39 = v41;
    *(_QWORD *)(v39 + 8) = v42;
    sub_1DA66BE60();
  }
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  return v44;
}

_QWORD *sub_1DA57E370(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  sub_1DA66BE60();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  sub_1DA66BE60();
  swift_release();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 8 + v6) & ~v10;
  v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 24);
  v12(((unint64_t)v7 + v10 + 8) & ~v10, v11, v8);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = ((v10 + 16) & ~v10) + v13 + (v10 | 7);
  v15 = ((unint64_t)a1 + v14) & ~(v10 | 7);
  v16 = ((unint64_t)a2 + v14) & ~(v10 | 7);
  v12(v15, v16, v8);
  *(_QWORD *)((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 7 + v16) & 0xFFFFFFFFFFFFF8);
  sub_1DA66BE60();
  swift_release();
  v17 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  sub_1DA66BE60();
  swift_release();
  v20 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  sub_1DA66BE60();
  swift_release();
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  sub_1DA66BE60();
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  sub_1DA66BE60();
  swift_release();
  v29 = sub_1DA66E338();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = ((unint64_t)v26 + v31 + 16) & ~v31;
  v33 = ((unint64_t)v27 + v31 + 16) & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24))(v32, v33, v29);
  v34 = *(_QWORD *)(v30 + 64) + 7;
  v35 = (_QWORD *)((v34 + v32) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_QWORD *)((v34 + v33) & 0xFFFFFFFFFFFFFFF8);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  sub_1DA66BE60();
  swift_release();
  v38 = ((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_QWORD *)v39;
  if (*(_QWORD *)v38 < 0xFFFFFFFFuLL)
  {
    if (v40 >= 0xFFFFFFFF)
    {
      v42 = *(_QWORD *)(v39 + 8);
      *(_QWORD *)v38 = v40;
      *(_QWORD *)(v38 + 8) = v42;
      sub_1DA66BE60();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    goto LABEL_8;
  }
  if (v40 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v41 = *(_QWORD *)(v39 + 8);
  *(_QWORD *)v38 = v40;
  *(_QWORD *)(v38 + 8) = v41;
  sub_1DA66BE60();
  swift_release();
LABEL_8:
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  return a1;
}

_QWORD *sub_1DA57E610(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, unint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
  v10(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9, v7);
  v11 = *(_QWORD *)(v8 + 64);
  v12 = ((v9 + 16) & ~v9) + v11 + (v9 | 7);
  v13 = ((unint64_t)a1 + v12) & ~(v9 | 7);
  v14 = ((unint64_t)a2 + v12) & ~(v9 | 7);
  v10(v13, v14, v7);
  *(_QWORD *)((v11 + 7 + v13) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + 7 + v14) & 0xFFFFFFFFFFFFF8);
  v15 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v16 = (_OWORD *)(v13 + v15);
  v17 = (_OWORD *)(v14 + v15);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = sub_1DA66E338();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = ((unint64_t)v22 + v26 + 16) & ~v26;
  v28 = ((unint64_t)v23 + v26 + 16) & ~v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v27, v28, v24);
  v29 = *(_QWORD *)(v25 + 64) + 7;
  v30 = (_OWORD *)((v29 + v27) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v29 + v28) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v33 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  else
  {
    v34 = *(_QWORD *)(v33 + 8);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *(_QWORD *)(v32 + 8) = v34;
  }
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  return a1;
}

_QWORD *sub_1DA57E7C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_release();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v7 + v10 + 8) & ~v10;
  v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 40);
  v12(v11, (v10 + 8 + v6) & ~v10, v8);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = ((v10 + 16) & ~v10) + v13 + (v10 | 7);
  v15 = ((unint64_t)a1 + v14) & ~(v10 | 7);
  v16 = ((unint64_t)a2 + v14) & ~(v10 | 7);
  v12(v15, v16, v8);
  *(_QWORD *)((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 7 + v16) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v17 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  swift_release();
  v20 = (_OWORD *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)((v19 + 23) & 0xFFFFFFFFFFFFF8);
  *v20 = *v21;
  swift_release();
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
  *v22 = *v23;
  swift_release();
  v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  swift_release();
  v26 = sub_1DA66E338();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = ((unint64_t)v24 + v28 + 16) & ~v28;
  v30 = ((unint64_t)v25 + v28 + 16) & ~v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40))(v29, v30, v26);
  v31 = *(_QWORD *)(v27 + 64) + 7;
  v32 = (_OWORD *)((v31 + v29) & 0xFFFFFFFFFFFFFFF8);
  v33 = v31 + v30;
  v34 = (v33 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v32 = *(_OWORD *)(v33 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v35 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = v34 & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  if (*(_QWORD *)v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v39 = *(_QWORD *)(v36 + 8);
      *(_QWORD *)v35 = v37;
      *(_QWORD *)(v35 + 8) = v39;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    goto LABEL_8;
  }
  if (v37 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)v35 = v37;
  *(_QWORD *)(v35 + 8) = v38;
  swift_release();
LABEL_8:
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  return a1;
}

uint64_t sub_1DA57EA08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = *(_DWORD *)(v6 + 84);
  v10 = sub_1DA66E338();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = *(_DWORD *)(v11 + 84);
  if (!a2)
    return 0;
  v14 = v10;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = *(_QWORD *)(v6 + 64);
  v17 = v15 | 7;
  v18 = ((v15 + 16) & ~v15) + v16 + (v15 | 7);
  v19 = v16 + 7;
  v20 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 31;
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = v21 + 16;
  if (v13 < a2)
  {
    v23 = ((((*(_QWORD *)(v11 + 64)
            + ((v22
              + ((((((v20 + (v18 & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v21)
            + 7) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 17;
    if (v23 < 4)
      v24 = ((a2 - v13 + 255) >> (8 * v23)) + 1;
    else
      v24 = 2;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v26 = v25;
    else
      v26 = 0;
    __asm { BR              X5 }
  }
  if (v8 >= v12)
  {
    v30 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v7 & 0x80000000) != 0)
    {
      v28 = ((unint64_t)v30 + v15 + 8) & ~v15;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v28, v7, v5);
    }
    v31 = *v30;
  }
  else
  {
    v28 = (v18 + a1) & ~v17;
    if (v9 == v13)
    {
      if (v7 < 0x7FFFFFFE)
      {
        v29 = *(_QWORD *)((v19 + v28) & 0xFFFFFFFFFFFFF8);
        if (v29 >= 0xFFFFFFFF)
          LODWORD(v29) = -1;
        if ((v29 + 1) >= 2)
          return v29;
        else
          return 0;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v28, v7, v5);
    }
    v32 = (unint64_t *)((v20 + v28) & 0xFFFFFFFFFFFFFFF8);
    if ((v13 & 0x80000000) != 0)
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v22 + (((((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v21, v12, v14);
    v31 = *v32;
  }
  if (v31 >= 0xFFFFFFFF)
    LODWORD(v31) = -1;
  return (v31 + 1);
}

void sub_1DA57EC84(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1DA66E338() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = ((((*(_QWORD *)(v9 + 64)
          + ((*(unsigned __int8 *)(v9 + 80)
            + 16
            + ((((((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)
                  + 31
                  + ((((v11 + 16) & ~v11) + *(_QWORD *)(v7 + 64) + (v11 | 7)) & ~(v11 | 7))) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v10 >= a3)
  {
    v15 = 0u;
    if (v10 >= a2)
      goto LABEL_20;
  }
  else
  {
    if (v12 <= 3)
      v13 = ((a3 - v10 + 255) >> (8 * v12)) + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    if (v10 >= a2)
LABEL_20:
      __asm { BR              X5 }
  }
  if (v12 >= 4)
    v16 = ~v10 + a2;
  else
    v16 = (~(_BYTE)v10 + a2);
  bzero(a1, v12);
  if ((_DWORD)v12 == 1)
    *a1 = v16;
  else
    *(_DWORD *)a1 = v16;
  __asm { BR              X10 }
}

void sub_1DA57EE40()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EE48()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1DA57EE50);
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EEE8()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EEF0()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EEF8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EF00(uint64_t a1, size_t a2, unsigned int a3)
{
  int v3;
  int v4;
  unsigned int v5;
  char *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;

  *(_WORD *)&v6[v8] = 0;
  if (v5)
  {
    if (v9 < a3)
    {
      if (v10 == v4)
      {
        if (v7 < 0x7FFFFFFE)
        {
          if (v5 <= 0x7FFFFFFE)
            JUMPOUT(0x1DA57EFC0);
          JUMPOUT(0x1DA57EF9CLL);
        }
        JUMPOUT(0x1DA57EF70);
      }
      JUMPOUT(0x1DA57EF0CLL);
    }
    if (v9 >= v5)
      JUMPOUT(0x1DA57EF28);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v3 = a2;
      else
        v3 = 4;
      bzero(v6, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EFE0()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EFF0()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x1DA57EFC4);
}

void sub_1DA57EFF8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x1DA57EFC4);
}

void type metadata accessor for SelectionConfirmingPicker()
{
  JUMPOUT(0x1DF0A02F4);
}

unint64_t sub_1DA57F014()
{
  unint64_t result;

  result = qword_1F026B2A8;
  if (!qword_1F026B2A8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67D910, &type metadata for ConfirmationStyle);
    atomic_store(result, (unint64_t *)&qword_1F026B2A8);
  }
  return result;
}

void sub_1DA57F058(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[19];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v24 = a2;
  v3 = a1[2];
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v22 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1DA66E95C();
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v27 = (char *)v16 - v7;
  v17 = sub_1DA66E338();
  v16[18] = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v25 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v28 = MEMORY[0x1E0CDDD78];
  v29 = v3;
  v30 = v10;
  v31 = MEMORY[0x1E0CDDD58];
  v13 = v10;
  v26 = v10;
  v32 = v11;
  v33 = v12;
  v14 = v11;
  v15 = sub_1DA66E92C();
  v19 = v15;
  v18 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v15);
  v28 = v3;
  v29 = v13;
  v30 = v15;
  v31 = v14;
  v32 = v12;
  v33 = v18;
  type metadata accessor for PickerWithConfirmation();
}

void sub_1DA57F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, int *, __n128);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, int *);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  __int128 v48;

  *(_QWORD *)(v17 - 208) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v17 - 256) = a1;
  v19 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v17 - 296) = (char *)&a9 - v20;
  v21 = MEMORY[0x1DF0A039C](&unk_1DA67D9D0, a1, v19);
  v22 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v17 - 248) = v22;
  *(_QWORD *)(v17 - 240) = v21;
  *(_QWORD *)(v17 - 400) = v16;
  *(_QWORD *)(v17 - 136) = a1;
  *(_QWORD *)(v17 - 128) = v10;
  *(_QWORD *)(v17 - 120) = v21;
  *(_QWORD *)(v17 - 112) = v22;
  v23 = MEMORY[0x1DF0A0348](0, v17 - 136, MEMORY[0x1E0CDF150], 0);
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v17 - 224) = v23;
  *(_QWORD *)(v17 - 216) = v24;
  MEMORY[0x1E0C80A78](v23);
  *(_QWORD *)(v17 - 280) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v26);
  *(_QWORD *)(v17 - 232) = (char *)&a9 - v28;
  v29 = *(void (**)(uint64_t, uint64_t, int *, __n128))(v14 + 16);
  *(_QWORD *)(v17 - 328) = v29;
  *(_QWORD *)(v17 - 368) = v9;
  v29(v9, v13, v12, v27);
  v30 = *(unsigned __int8 *)(v14 + 80);
  v31 = (v30 + 48) & ~v30;
  *(_QWORD *)(v17 - 344) = v31 + v11;
  v32 = v31;
  *(_QWORD *)(v17 - 336) = v31;
  *(_QWORD *)(v17 - 352) = v30 | 7;
  v33 = (char *)swift_allocObject();
  v34 = *(_QWORD *)(v17 - 168);
  *((_QWORD *)v33 + 2) = v10;
  *((_QWORD *)v33 + 3) = v34;
  *((_QWORD *)v33 + 4) = v16;
  *((_QWORD *)v33 + 5) = v15;
  *(_QWORD *)(v17 - 456) = v15;
  v35 = *(void (**)(char *, uint64_t, int *))(v14 + 32);
  *(_QWORD *)(v17 - 360) = v35;
  v35(&v33[v32], v9, v12);
  v36 = (_QWORD *)(v13 + v12[19]);
  v37 = v36[1];
  *(_QWORD *)(v17 - 376) = *v36;
  *(_QWORD *)(v17 - 424) = v37;
  *(_DWORD *)(v17 - 380) = *(unsigned __int8 *)(v13 + v12[21]);
  v38 = v12[16];
  v39 = (_QWORD *)(v13 + v12[15]);
  v40 = v39[1];
  *(_QWORD *)(v17 - 408) = *v39;
  *(_QWORD *)(v17 - 432) = v40;
  v41 = *(_QWORD *)(v13 + v38 + 8);
  *(_QWORD *)(v17 - 392) = *(_QWORD *)(v13 + v38);
  *(_QWORD *)(v17 - 440) = v41;
  v42 = v12[18];
  v43 = (_QWORD *)(v13 + v12[17]);
  v44 = v43[1];
  *(_QWORD *)(v17 - 416) = *v43;
  *(_QWORD *)(v17 - 448) = v44;
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v17 - 320) + 16))(*(_QWORD *)(v17 - 176), v13 + v42, *(_QWORD *)(v17 - 312));
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66E950();
  sub_1DA66E8F0();
  sub_1DA66E8E4();
  v45 = (char *)(v13 + v12[14]);
  v46 = *v45;
  v47 = *((_QWORD *)v45 + 1);
  *(_BYTE *)(v17 - 152) = v46;
  *(_QWORD *)(v17 - 144) = v47;
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
  sub_1DA66E8E4();
  *((_QWORD *)&v48 + 1) = *(_QWORD *)(v17 - 416);
  *(_QWORD *)&v48 = *(_QWORD *)(v17 - 440);
  sub_1DA57F8C8((uint64_t)sub_1DA580C40, (uint64_t)v33, *(_QWORD *)(v17 - 376), *(_QWORD *)(v17 - 424), *(_DWORD *)(v17 - 380), *(_QWORD *)(v17 - 408), *(_QWORD *)(v17 - 432), *(_QWORD *)(v17 - 392), *(_QWORD *)(v17 - 296), v48, *(_QWORD *)(v17 - 448));
}

uint64_t sub_1DA57F56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v7 = *(_QWORD *)(v6 - 200);
  sub_1DA66E8CC();
  v8 = *(_QWORD *)(v6 - 368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 - 328))(v8, v2, v1);
  v9 = (char *)swift_allocObject();
  *((_QWORD *)v9 + 2) = v0;
  *((_QWORD *)v9 + 3) = v4;
  v10 = *(_QWORD *)(v6 - 456);
  *((_QWORD *)v9 + 4) = v3;
  *((_QWORD *)v9 + 5) = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 - 360))(&v9[*(_QWORD *)(v6 - 336)], v8, v1);
  v11 = *(_QWORD *)(v6 - 280);
  v13 = *(_QWORD *)(v6 - 256);
  v12 = *(_QWORD *)(v6 - 248);
  v14 = *(_QWORD *)(v6 - 240);
  sub_1DA66E7DC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 192) + 8))(v7, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 208) + 8))(v5, v13);
  *(_QWORD *)(v6 - 136) = v13;
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = v14;
  *(_QWORD *)(v6 - 112) = v12;
  swift_getOpaqueTypeConformance2();
  v16 = *(_QWORD *)(v6 - 232);
  v15 = *(_QWORD *)(v6 - 224);
  sub_1DA5A4720(v11, v15, v16);
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 216) + 8);
  v17(v11, v15);
  sub_1DA59C98C(v16, v15, *(_QWORD *)(v6 - 184));
  return ((uint64_t (*)(uint64_t, uint64_t))v17)(v16, v15);
}

void sub_1DA57F6F0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];

  v13[1] = a4;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a5;
  v9 = sub_1DA66E95C();
  MEMORY[0x1E0C80A78](v9);
  v13[2] = (char *)v13 - v10;
  v13[0] = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v13[6] = a1;
  v13[7] = a2;
  v13[8] = a3;
  v13[9] = a4;
  type metadata accessor for SelectionConfirmingPicker();
}

uint64_t sub_1DA57F7C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + *(int *)(a1 + 60));
  MEMORY[0x1DF09D318](v1);
  sub_1DA66E8F0();
  sub_1DA66E8CC();
  v8 = v7(v5, v4);
  v10 = v9;
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 160) + 8);
  v11(v4, v2);
  v11(v5, v2);
  *(_QWORD *)(v6 - 112) = v8;
  *(_QWORD *)(v6 - 104) = v10;
  sub_1DA66E8E4();
  sub_1DA498918();
  return sub_1DA66E920();
}

void sub_1DA57F8C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = a5 & 1;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA57F944(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;

  v9 = v1 + a1[22];
  v10 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v4, v10);
  v11 = v1 + a1[23];
  v12 = sub_1DA66E95C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v11, v3, v12);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v1 + a1[24], v2, v12);
  v15 = v1 + a1[25];
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = v6;
  *(_BYTE *)(v15 + 16) = v5;
  return result;
}

void sub_1DA57F9E4(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for SelectionConfirmingPicker();
}

uint64_t sub_1DA57FA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1DA66E8F0();
  sub_1DA66E8CC();
  sub_1DA57FA9C(v2, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

uint64_t sub_1DA57FA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  char v19;
  char *v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  _QWORD v24[2];
  char *v25;
  char v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - v11;
  v13 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  v14 = sub_1DA66F850();
  v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  result = v15(v12, v6);
  if ((v14 & 1) == 0)
  {
    v25 = v9;
    v17 = v3 + *(int *)(a2 + 80);
    v18 = *(uint64_t (**)(char *, uint64_t))v17;
    if (*(_QWORD *)v17
      && (v24[1] = *(_QWORD *)(v17 + 8), MEMORY[0x1DF09D318](v13), v19 = v18(v12, a1), v15(v12, v6), (v19 & 1) == 0))
    {
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v23(v12, a1, v6);
      v23(v25, (uint64_t)v12, v6);
      sub_1DA66E944();
      return v15(v12, v6);
    }
    else
    {
      v20 = (char *)(v3 + *(int *)(a2 + 56));
      v21 = *v20;
      v22 = *((_QWORD *)v20 + 1);
      v27 = v21;
      v28 = v22;
      v26 = 1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
      return sub_1DA66E8D8();
    }
  }
  return result;
}

uint64_t sub_1DA57FC54()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  sub_1DA66E950();
  return v1;
}

uint64_t sub_1DA57FCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;

  v34 = a2;
  v5 = *(_QWORD *)(a1 + 56);
  v36 = *(_QWORD *)(a1 + 32);
  v4 = v36;
  v37 = v5;
  v6 = MEMORY[0x1DF0A0348](0, &v36, MEMORY[0x1E0CDDFB8], 0);
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v30 = (uint64_t)&v29 - v11;
  v36 = v4;
  v37 = v5;
  v12 = MEMORY[0x1DF0A0348](0, &v36, MEMORY[0x1E0CDEEB8], 0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v29 - v17;
  v19 = sub_1DA66E578();
  v32 = *(_QWORD *)(v19 - 8);
  v33 = v19;
  MEMORY[0x1E0C80A78](v19);
  v31 = (char *)&v29 - v20;
  if ((*(_BYTE *)(v2 + 32) & 1) != 0)
  {
    sub_1DA580024(a1, (uint64_t)sub_1DA582440, MEMORY[0x1E0CDDFB0]);
    v36 = v4;
    v37 = v5;
    swift_getOpaqueTypeConformance2();
    v21 = v30;
    sub_1DA5A4720((uint64_t)v8, v6, v30);
    v22 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22(v8, v6);
    sub_1DA59C98C(v21, v6, (uint64_t)v8);
    v36 = v4;
    v37 = v5;
    swift_getOpaqueTypeConformance2();
    v23 = (uint64_t)v31;
    sub_1DA59CA68((uint64_t)v8, v12, v6);
    v22(v8, v6);
    v22((char *)v21, v6);
  }
  else
  {
    sub_1DA580024(a1, (uint64_t)sub_1DA582108, MEMORY[0x1E0CDEEB0]);
    v36 = v4;
    v37 = v5;
    swift_getOpaqueTypeConformance2();
    sub_1DA5A4720((uint64_t)v15, v12, (uint64_t)v18);
    v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v15, v12);
    sub_1DA59C98C((uint64_t)v18, v12, (uint64_t)v15);
    v36 = v4;
    v37 = v5;
    swift_getOpaqueTypeConformance2();
    v23 = (uint64_t)v31;
    sub_1DA59C9A4((uint64_t)v15, v12);
    v24(v15, v12);
    v24(v18, v12);
  }
  v36 = v4;
  v37 = v5;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v4;
  v37 = v5;
  v26 = swift_getOpaqueTypeConformance2();
  v35[0] = OpaqueTypeConformance2;
  v35[1] = v26;
  v27 = v33;
  MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v33, v35);
  sub_1DA59C98C(v23, v27, v34);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v23, v27);
}

uint64_t sub_1DA580024(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void (**v3)(__n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  void (*v12)(void);
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (**v17)(__n128);

  v12 = a3;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*v3)(v7);
  sub_1DA57FC54();
  v13 = *(_OWORD *)(a1 + 16);
  v14 = v5;
  v15 = *(_OWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = v3;
  v12();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1DA580124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(char *, char *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a2;
  v4 = sub_1DA66E818();
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v27 = (uint64_t)v26 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - v14;
  v16 = *(uint64_t (**)(char *, char *))(v2 + 40);
  v17 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  MEMORY[0x1DF09D318](v17);
  v18 = v16(v15, v12);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  v21(v15, v8);
  v30 = v18;
  v31 = v20;
  sub_1DA498918();
  v22 = sub_1DA66E734();
  v26[2] = v23;
  v26[3] = v22;
  v26[1] = v24;
  sub_1DA580AC0(a1);
  sub_1DA5804F0(a1, v27);
  sub_1DA58092C((_OWORD *)a1);
  return sub_1DA66E7E8();
}

uint64_t sub_1DA580314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(char *, char *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v25[8];

  v25[4] = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  v11 = *(uint64_t (**)(char *, char *))(v2 + 40);
  v12 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  MEMORY[0x1DF09D318](v12);
  v13 = v11(v10, v7);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v7, v4);
  v16(v10, v4);
  v25[6] = v13;
  v25[7] = v15;
  sub_1DA498918();
  v17 = sub_1DA66E734();
  v25[2] = v18;
  v25[3] = v17;
  v25[1] = v19;
  sub_1DA580AC0(a1);
  v25[0] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B340);
  v21 = sub_1DA66E818();
  v22 = (*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DA678FE0;
  sub_1DA5804F0(a1, v23 + v22);
  sub_1DA58092C((_OWORD *)a1);
  return sub_1DA66E350();
}

uint64_t sub_1DA5804F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, _BYTE *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  v39 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v34[-v9];
  v11 = sub_1DA66E338();
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(a1 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v17 = MEMORY[0x1E0C80A78](v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v14 + 16))(&v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a1, v17);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v5;
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(a1 + 56);
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v14 + 32))(v19 + v18, &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  sub_1DA66E320();
  v35 = sub_1DA66E32C();
  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v13, v37);
  v20 = *(uint64_t (**)(_BYTE *, _BYTE *))(v3 + 72);
  v21 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  MEMORY[0x1DF09D318](v21);
  v22 = v20(v10, v7);
  v24 = v23;
  v25 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
  v25(v7, v5);
  v25(v10, v5);
  v40 = v22;
  v41 = v24;
  if ((v35 & 1) != 0)
  {
    sub_1DA498918();
    v26 = sub_1DA66E734();
    v28 = v27;
    v30 = v29 & 1;
    sub_1DA66BE60();
    sub_1DA66E7F4();
  }
  else
  {
    sub_1DA498918();
    v26 = sub_1DA66E734();
    v28 = v31;
    v30 = v32 & 1;
    sub_1DA66BE60();
    sub_1DA66E80C();
  }
  swift_release();
  sub_1DA5251EC(v26, v28, v30);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1DA5807DC(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA580868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;

  v6 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  MEMORY[0x1DF09D318](v6);
  v7 = sub_1DA66F850();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v3, v1);
  result = v8(v2, v1);
  if ((v7 & 1) == 0)
  {
    MEMORY[0x1DF09D318](v6);
    sub_1DA582124(v2, a1);
    return v8(v2, v1);
  }
  return result;
}

uint64_t sub_1DA58092C(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  unint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v9;

  v2 = *((_QWORD *)a1 - 1);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v2 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = (char *)swift_allocObject();
  v7 = a1[2];
  *((_OWORD *)v6 + 1) = a1[1];
  *((_OWORD *)v6 + 2) = v7;
  *((_OWORD *)v6 + 3) = a1[3];
  (*(void (**)(char *, char *, _OWORD *))(v2 + 32))(&v6[v5], (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DA66E800();
  return swift_release();
}

void sub_1DA580A04(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA580A68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_1DA66E95C();
  MEMORY[0x1DF09D318](v5);
  sub_1DA5821B0(v2, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

uint64_t sub_1DA580AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(char *, char *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - v7;
  v9 = *(uint64_t (**)(char *, char *))(v1 + 56);
  v10 = sub_1DA66E95C();
  MEMORY[0x1DF09D318]();
  MEMORY[0x1DF09D318](v10);
  v11 = v9(v8, v5);
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  v14(v8, v2);
  if (!v13)
    return 0;
  v16[0] = v11;
  v16[1] = v13;
  sub_1DA498918();
  return sub_1DA66E734();
}

uint64_t sub_1DA580BFC()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for PickerWithConfirmation()
{
  JUMPOUT(0x1DF0A02F4);
}

void sub_1DA580C40()
{
  type metadata accessor for SelectionConfirmingPicker();
}

void sub_1DA580C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DA57F6F0(v1, v2, v3, v4, v0);
}

void sub_1DA580CBC()
{
  type metadata accessor for SelectionConfirmingPicker();
}

void sub_1DA580CFC()
{
  uint64_t v0;

  sub_1DA57F9E4(v0);
}

uint64_t sub_1DA580D44()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DA580D4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66E338();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66E95C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1DA580E00(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(unint64_t, unint64_t, uint64_t);
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v6 = sub_1DA66E338();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 | 7;
  v14 = ((v12 + 16) & ~v12) + *(_QWORD *)(v11 + 64);
  v15 = v14 + (v12 | 7);
  v16 = v14 + 7;
  v17 = ((v14 + 7 + ((v15 + (((v12 | 7) + v9 + ((v8 + 88) & ~v8)) & ~(v12 | 7))) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  v18 = *a2;
  if ((v12 | v8) > 7 || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0 || v17 > 0x18)
  {
    *a1 = v18;
    v50 = (_QWORD *)(v18 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
  }
  else
  {
    v57 = v6;
    v58 = ~v13;
    v59 = ~v12;
    v21 = a2[1];
    *a1 = v18;
    a1[1] = v21;
    v22 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v24;
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    v25 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v61 = a1;
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    v32 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = ((unint64_t)v31 + v8 + 16) & ~v8;
    v35 = ((unint64_t)v32 + v8 + 16) & ~v8;
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v55 = v10;
    v60 = v16;
    v56 = v15;
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    v54(v34, v35, v57);
    v36 = (_QWORD *)((v34 + v9 + v13) & ~v13);
    v37 = (_QWORD *)((v35 + v9 + v13) & ~v13);
    *v36 = *v37;
    v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
    v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v38 = *v39;
    v40 = v12 + 8;
    v41 = ((unint64_t)v38 + v40) & v59;
    v42 = ((unint64_t)v39 + v40) & v59;
    v43 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    sub_1DA66BE60();
    sub_1DA66BE60();
    v43(v41, v42, v55);
    v44 = (_QWORD *)(((unint64_t)v37 + v56) & v58);
    v45 = (_QWORD *)(((unint64_t)v36 + v56) & v58);
    *v45 = *v44;
    v46 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v46 = *v47;
    v48 = ((unint64_t)v46 + v40) & v59;
    v49 = ((unint64_t)v47 + v40) & v59;
    sub_1DA66BE60();
    sub_1DA66BE60();
    v43(v48, v49, v55);
    v50 = v61;
    v51 = ((unint64_t)v45 + v60) & 0xFFFFFFFFFFFFFFF8;
    v52 = ((unint64_t)v44 + v60) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_QWORD *)(v51 + 8) = *(_QWORD *)(v52 + 8);
    *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
    sub_1DA66BE60();
  }
  sub_1DA66BE60();
  return v50;
}

uint64_t sub_1DA5810F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, uint64_t);
  uint64_t v13;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = sub_1DA66E338();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((((((a1 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + *(unsigned __int8 *)(v5 + 80)
      + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + (v10 | 7);
  swift_release();
  swift_release();
  v12 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v12((v10 + 8 + (((v11 & ~(v10 | 7)) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10, v8);
  v13 = ((v11 | v10 | 7) + *(_QWORD *)(v9 + 64) + ((v10 + 16) & ~v10)) & ~(v10 | 7);
  swift_release();
  swift_release();
  v12((v10 + 8 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10, v8);
  swift_release();
  return swift_release();
}

_QWORD *sub_1DA58124C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v44;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)v4 = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 8) = v6;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
  v7 = (_QWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = sub_1DA66E338();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v13 + v18 + 16) & ~v18;
  v20 = ((unint64_t)v14 + v18 + 16) & ~v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v21(v19, v20, v16);
  v44 = *(_QWORD *)(a3 + 16);
  v22 = *(_QWORD *)(v44 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v23 | 7) + *(_QWORD *)(v17 + 64);
  v25 = (_QWORD *)((v24 + v19) & ~(v23 | 7));
  v26 = (_QWORD *)((v24 + v20) & ~(v23 | 7));
  *v25 = *v26;
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = ((unint64_t)v27 + v23 + 8) & ~v23;
  v30 = ((unint64_t)v28 + v23 + 8) & ~v23;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v31(v29, v30, v44);
  v32 = *(_QWORD *)(v22 + 64) + ((v23 + 16) & ~v23);
  v33 = (_QWORD *)(((unint64_t)v26 + v32 + (v23 | 7)) & ~(v23 | 7));
  v34 = (_QWORD *)(((unint64_t)v25 + v32 + (v23 | 7)) & ~(v23 | 7));
  *v34 = *v33;
  v35 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = ((unint64_t)v35 + v23 + 8) & ~v23;
  v38 = ((unint64_t)v36 + v23 + 8) & ~v23;
  sub_1DA66BE60();
  sub_1DA66BE60();
  v31(v37, v38, v44);
  v39 = ((unint64_t)v34 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v32 + 7 + (((unint64_t)v26 + v32 + (v23 | 7)) & ~(v23 | 7))) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_BYTE *)(v39 + 16) = *(_BYTE *)(v40 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  return a1;
}

_QWORD *sub_1DA581494(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(unint64_t, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a1;
  sub_1DA66BE60();
  swift_release();
  v45 = v7;
  v8 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v11 = (_QWORD *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + 47) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  sub_1DA66BE60();
  swift_release();
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  sub_1DA66BE60();
  swift_release();
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  sub_1DA66BE60();
  swift_release();
  v20 = sub_1DA66E338();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = ((unint64_t)v17 + v22 + 16) & ~v22;
  v24 = ((unint64_t)v18 + v22 + 16) & ~v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(v23, v24, v20);
  v25 = *(_QWORD *)(v21 + 64);
  v26 = *(_QWORD *)(a3 + 16);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v28 | 7;
  v30 = (v28 | 7) + v25;
  v31 = (_QWORD *)((v30 + v23) & ~(v28 | 7));
  v32 = (_QWORD *)((v30 + v24) & ~(v28 | 7));
  *v31 = *v32;
  sub_1DA66BE60();
  swift_release();
  v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  sub_1DA66BE60();
  swift_release();
  v35 = ((unint64_t)v34 + v28 + 8) & ~v28;
  v36 = *(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 24);
  v36(((unint64_t)v33 + v28 + 8) & ~v28, v35, v26);
  v37 = *(_QWORD *)(v27 + 64) + ((v28 + 16) & ~v28);
  v38 = (_QWORD *)(((unint64_t)v31 + v37 + v29) & ~v29);
  v39 = (_QWORD *)(((unint64_t)v32 + v37 + v29) & ~v29);
  *v38 = *v39;
  sub_1DA66BE60();
  swift_release();
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  sub_1DA66BE60();
  swift_release();
  v36(((unint64_t)v40 + v28 + 8) & ~v28, ((unint64_t)v41 + v28 + 8) & ~v28, v26);
  v42 = ((unint64_t)v38 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v43 = ((unint64_t)v39 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(v42 + 16) = *(_BYTE *)(v43 + 16);
  return v45;
}

_OWORD *sub_1DA581734(_OWORD *a1, __int128 *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  unint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  char v36;
  __int128 v37;
  unint64_t v38;

  v5 = (unint64_t)a2 + 23;
  v7 = *a2;
  v6 = (unint64_t)a2 + 47;
  *a1 = v7;
  v8 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v8 = *(_OWORD *)v5;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v5 + 16);
  v9 = (_OWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFF8);
  *v9 = *(_OWORD *)(v6 & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = (_OWORD *)(((v6 & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = sub_1DA66E338();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v12 + v16 + 16) & ~v16;
  v18 = ((unint64_t)v13 + v16 + 16) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64);
  v20 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 | 7) + v19;
  v24 = (_QWORD *)((v23 + v17) & ~(v22 | 7));
  v25 = (_QWORD *)((v23 + v18) & ~(v22 | 7));
  *v24 = *v25;
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 32);
  v28(((unint64_t)v26 + v22 + 8) & ~v22, ((unint64_t)v27 + v22 + 8) & ~v22, v20);
  v29 = *(_QWORD *)(v21 + 64) + ((v22 + 16) & ~v22);
  v30 = (unint64_t)v24 + v29 + (v22 | 7);
  v31 = (_QWORD *)(((unint64_t)v25 + v29 + (v22 | 7)) & ~(v22 | 7));
  v32 = (_QWORD *)(v30 & ~(v22 | 7));
  *v32 = *v31;
  v33 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v28(((unint64_t)v33 + v22 + 8) & ~v22, ((unint64_t)v34 + v22 + 8) & ~v22, v20);
  v35 = ((unint64_t)v31 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_BYTE *)(v35 + 16);
  v37 = *(_OWORD *)v35;
  v38 = ((unint64_t)v32 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v38 = v37;
  *(_BYTE *)(v38 + 16) = v36;
  return a1;
}

_OWORD *sub_1DA5818F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(unint64_t, uint64_t, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;

  v6 = (unint64_t)a2 + 47;
  *a1 = *a2;
  swift_release();
  v7 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  swift_release();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  v9 = (_OWORD *)(((unint64_t)a1 + 47) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFF8uLL;
  *v9 = *(_OWORD *)v6;
  swift_release();
  v10 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_OWORD *)((v6 + 23) & 0xFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_release();
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_release();
  v14 = sub_1DA66E338();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v12 + v16 + 16) & ~v16;
  v18 = ((unint64_t)v13 + v16 + 16) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64);
  v20 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v22 | 7;
  v24 = (v22 | 7) + v19;
  v25 = (_QWORD *)((v24 + v17) & ~(v22 | 7));
  v26 = (_QWORD *)((v24 + v18) & ~(v22 | 7));
  *v25 = *v26;
  swift_release();
  v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  swift_release();
  v29 = ((unint64_t)v28 + v22 + 8) & ~v22;
  v30 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 40);
  v30(((unint64_t)v27 + v22 + 8) & ~v22, v29, v20);
  v31 = *(_QWORD *)(v21 + 64) + ((v22 + 16) & ~v22);
  v32 = (_QWORD *)(((unint64_t)v25 + v31 + v23) & ~v23);
  v33 = (_QWORD *)(((unint64_t)v26 + v31 + v23) & ~v23);
  *v32 = *v33;
  swift_release();
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  swift_release();
  v30(((unint64_t)v34 + v22 + 8) & ~v22, ((unint64_t)v35 + v22 + 8) & ~v22, v20);
  v36 = ((unint64_t)v32 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v33 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  swift_release();
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  swift_release();
  *(_BYTE *)(v36 + 16) = *(_BYTE *)(v37 + 16);
  return a1;
}

uint64_t sub_1DA581B24(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v6 = *(_QWORD *)(sub_1DA66E338() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= 0x7FFFFFFFu)
    v9 = 0x7FFFFFFF;
  else
    v9 = *(_DWORD *)(v8 + 84);
  if (v7 <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v6 + 64);
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = v13 | 7;
  if (v10 < a2)
  {
    v15 = ((v13 + 16) & ~v13) + *(_QWORD *)(v8 + 64);
    v16 = ((v15 + ((v15 + v14 + ((v14 + v12 + ((v11 + 88) & ~(_DWORD)v11)) & ~(_DWORD)v14)) & ~(_DWORD)v14) + 7) & 0xFFFFFFF8)
        + 17;
    if (v16 < 4)
      v17 = ((a2 - v10 + 255) >> (8 * v16)) + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X6 }
  }
  if ((v10 & 0x80000000) != 0)
  {
    v22 = ((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + v11
         + 16) & ~v11;
    if (v7 >= v9)
      return (*(uint64_t (**)(unint64_t))(v6 + 48))(v22);
    else
      return (*(uint64_t (**)(unint64_t))(v8 + 48))((v13
                                                                    + ((((v22 + v12 + v14) & ~v14) + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + 8) & ~v13);
  }
  else
  {
    v21 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v21) = -1;
    return (v21 + 1);
  }
}

void sub_1DA581D20(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v8 = *(_QWORD *)(sub_1DA66E338() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (*(_DWORD *)(v8 + 84) <= v10)
    v11 = v10;
  else
    v11 = *(_DWORD *)(v8 + 84);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v12 + 16) & ~v12) + *(_QWORD *)(v9 + 64);
  v14 = ((v13
        + ((v13
          + (v12 | 7)
          + (((v12 | 7)
            + *(_QWORD *)(v8 + 64)
            + ((*(unsigned __int8 *)(v8 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(v12 | 7))) & ~(v12 | 7))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v11 >= a3)
  {
    v17 = 0u;
    if (v11 >= a2)
      goto LABEL_20;
  }
  else
  {
    if (v14 <= 3)
      v15 = ((a3 - v11 + 255) >> (8 * v14)) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    if (v11 >= a2)
LABEL_20:
      __asm { BR              X22 }
  }
  if (v14 >= 4)
    v18 = ~v11 + a2;
  else
    v18 = (~(_BYTE)v11 + a2);
  bzero(a1, v14);
  if ((_DWORD)v14 == 1)
    *a1 = v18;
  else
    *(_DWORD *)a1 = v18;
  __asm { BR              X10 }
}

void sub_1DA581EAC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581EB4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1DA581EBCLL);
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581ECC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581ED4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581EDC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (v1)
  {
    if ((v0 & 0x80000000) == 0)
    {
      if ((v1 & 0x80000000) == 0)
        JUMPOUT(0x1DA581F8CLL);
      JUMPOUT(0x1DA581F84);
    }
    JUMPOUT(0x1DA581EE8);
  }
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581F7C()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581FE8()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA581FF0()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x1DA581F90);
}

void sub_1DA582000()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x1DA581F90);
}

void sub_1DA58200C()
{
  uint64_t v0;

  v0 = sub_1DA66E92C();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v0);
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA582080(uint64_t a1)
{
  MEMORY[0x1DF0A039C](&unk_1DA67D9D0, a1);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5820CC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1DA582108()
{
  sub_1DA58244C();
}

void sub_1DA582118()
{
  sub_1DA5823B0();
}

uint64_t sub_1DA582124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_1DA66E95C();
  return sub_1DA66E944();
}

uint64_t sub_1DA5821B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_1DA66E95C();
  return sub_1DA66E944();
}

void objectdestroy_6Tm()
{
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA58227C(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v13;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = v4 + a1[22];
  v6 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + a1[23];
  swift_release();
  swift_release();
  v8 = sub_1DA66E95C();
  v9 = v7 + *(int *)(v8 + 32);
  v10 = *(void (**)(uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v10(v9);
  v11 = v4 + a1[24];
  swift_release();
  swift_release();
  v10(v11 + *(int *)(v8 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5823A4()
{
  sub_1DA5823B0();
}

void sub_1DA5823B0()
{
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA5823F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v10(v2 + ((v8 + 64) & ~v8), v1, v3, v4, v5, v6, v7);
}

void sub_1DA582440()
{
  sub_1DA58244C();
}

void sub_1DA58244C()
{
  type metadata accessor for PickerWithConfirmation();
}

uint64_t sub_1DA582488()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1DA5824A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 16);
  v1 = v7;
  v8 = v2;
  MEMORY[0x1DF0A0348](255, &v7, MEMORY[0x1E0CDEEB8], 0);
  v7 = v1;
  v8 = v2;
  MEMORY[0x1DF0A0348](255, &v7, MEMORY[0x1E0CDDFB8], 0);
  v3 = sub_1DA66E578();
  v7 = v1;
  v8 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v7 = v1;
  v8 = v2;
  v6[0] = OpaqueTypeConformance2;
  v6[1] = swift_getOpaqueTypeConformance2();
  return MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v3, v6);
}

id sub_1DA5825F0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCO10PodcastsUI6Legacy12JSUserObject_accountStore), sel_ams_activeiTunesAccount);
  v2 = v1;
  if (!v1)
    return 0;
  v3 = objc_msgSend(v1, sel_ams_DSID);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_stringValue);

    v3 = (id)sub_1DA66F8BC();
  }
  return v3;
}

id sub_1DA5826C0(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  v4 = *(void **)&a1[OBJC_IVAR____TtCO10PodcastsUI6Legacy12JSUserObject_accountStore];
  v5 = a1;
  v6 = objc_msgSend(v4, sel_ams_activeiTunesAccount);
  if (v6 && (v7 = v6, v8 = objc_msgSend(v6, *a3), v7, v8))
  {
    sub_1DA66F8BC();

    v9 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {

    v9 = 0;
  }
  return v9;
}

uint64_t dispatch thunk of NowPlayingArtworkProviding.fetch(for:dataProvider:at:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of NowPlayingArtworkProviding.fetch(for:placement:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of NowPlayingArtworkProviding.data(for:dataProvider:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t UIResponder.responderChain.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE7D0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1DA5828EC;
  *(_QWORD *)(result + 24) = v2;
  *a1 = result;
  return result;
}

uint64_t sub_1DA582838()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA58285C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + 16;
  v4 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1DF0A054C](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE7C8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1DA582C20;
  *(_QWORD *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_1DA5828EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA58285C(v1, a1);
}

void sub_1DA5828F4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;

  swift_beginAccess();
  v4 = *(void **)(a1 + 16);
  v5 = objc_msgSend(v4, sel_nextResponder);
  swift_beginAccess();
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;

  *a2 = v4;
}

uint64_t UIResponder.firstViewInResponderChain.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t inited;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;

  v0 = swift_allocObject() + 16;
  swift_unknownObjectWeakInit();
  v1 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v2 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1DF0A054C](v0);
  v3 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE7C8);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = sub_1DA582C20;
  *(_QWORD *)(inited + 24) = v2;
  sub_1DA66BE60();
  swift_beginAccess();
  v5 = *(void **)(v2 + 16);
  v6 = v5;
  v7 = objc_msgSend(v6, sel_nextResponder);
  v8 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v7;

  if (v5)
  {
    do
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      else
      {

      }
      v9 = *v3;
      v6 = *v3;
      v10 = objc_msgSend(v6, sel_nextResponder);
      v11 = *v3;
      *v3 = v10;

    }
    while (v9);
    v1 = v16;
  }
  swift_release();
  swift_release();
  result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1DA6705A0();
  result = swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_17;
LABEL_12:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1DF09EE48](0, v1);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v1 + 32);
LABEL_15:
    v14 = v13;
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA582BFC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA582C20(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1DA5828F4(v1, a1);
}

unint64_t sub_1DA582C2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026B350;
  if (!qword_1F026B350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B358);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEC320], v1);
    atomic_store(result, (unint64_t *)&qword_1F026B350);
  }
  return result;
}

uint64_t RestorePurgedEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RestorePurgedEpisodesAction.episodesToRestore.getter()
{
  type metadata accessor for RestorePurgedEpisodesAction();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for RestorePurgedEpisodesAction()
{
  uint64_t result;

  result = qword_1F026B3B8;
  if (!qword_1F026B3B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RestorePurgedEpisodesAction.init(actionMetrics:episodesToRestore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for RestorePurgedEpisodesAction();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1DA582D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for RestorePurgedEpisodesAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66ED64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RestorePurgedEpisodesAction(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for RestorePurgedEpisodesAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RestorePurgedEpisodesAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA583008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RestorePurgedEpisodesAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA583090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DA583108()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66ED64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1DA58317C(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4B50], &qword_1EDAE2540);
}

id static UIFont.title1.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2548, (id *)&qword_1EDAE2540);
}

void sub_1DA5831AC(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4B50], &qword_1EDAE2508);
}

id static UIFont.preferredFont(forTextStyle:traits:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;

  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, a1);
  v5 = objc_msgSend(v4, sel_fontDescriptorWithSymbolicTraits_, a2);

  v6 = (void *)objc_opt_self();
  if (!v5)
    return objc_msgSend(v6, sel_preferredFontForTextStyle_, a1);
  v7 = objc_msgSend(v6, sel_fontWithDescriptor_size_, v5, 0.0);

  return v7;
}

id static UIFont.title1Emph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2510, (id *)&qword_1EDAE2508);
}

id static UIFont.title2.getter()
{
  return sub_1DA4853A8(&qword_1EDAE51E8, (id *)&qword_1EDAE51D8);
}

id sub_1DA5832C4()
{
  uint64_t v0;
  double v1;
  void *v2;
  id result;

  v0 = *MEMORY[0x1E0DC4B58];
  v1 = *MEMORY[0x1E0DC1448];
  v2 = (void *)objc_opt_self();
  result = objc_msgSend(v2, sel__preferredFontForTextStyle_weight_, v0, v1);
  if (!result)
    result = objc_msgSend(v2, sel_preferredFontForTextStyle_, v0);
  qword_1EDAE25A8 = (uint64_t)result;
  return result;
}

id static UIFont.preferredFont(forTextStyle:weight:)(uint64_t a1, double a2)
{
  void *v4;
  id result;

  v4 = (void *)objc_opt_self();
  result = objc_msgSend(v4, sel__preferredFontForTextStyle_weight_, a1, a2);
  if (!result)
    return objc_msgSend(v4, sel_preferredFontForTextStyle_, a1);
  return result;
}

id static UIFont.title2SemiBold.getter()
{
  return sub_1DA4853A8(&qword_1EDAE25B0, (id *)&qword_1EDAE25A8);
}

void sub_1DA5833EC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  v0 = *MEMORY[0x1E0DC4B60];
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x1E0DC4B60]);
  v2 = objc_msgSend(v1, sel_fontDescriptorWithSymbolicTraits_, 32770);

  v3 = (void *)objc_opt_self();
  if (v2)
  {
    v4 = objc_msgSend(v3, sel_fontWithDescriptor_size_, v2, 0.0);

  }
  else
  {
    v4 = objc_msgSend(v3, sel_preferredFontForTextStyle_, v0);
  }
  qword_1EDADEDE0 = (uint64_t)v4;
}

id static UIFont.title3EmphTight.getter()
{
  return sub_1DA4853A8(&qword_1EDADEDE8, (id *)&qword_1EDADEDE0);
}

id sub_1DA5834D8(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4AD0], &qword_1EDAE25B8);
}

id static UIFont.headline.getter()
{
  return sub_1DA4853A8(&qword_1EDAE25C0, (id *)&qword_1EDAE25B8);
}

void sub_1DA583508(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4AD0], qword_1EDADE7E8);
}

id static UIFont.headlineEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDADE7F8, (id *)qword_1EDADE7E8);
}

void sub_1DA583538(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4A88], &qword_1EDADE800);
}

id static UIFont.bodyEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDADE808, (id *)&qword_1EDADE800);
}

void sub_1DA583568(uint64_t a1)
{
  sub_1DA5835DC(a1, MEMORY[0x1E0DC4A88], &qword_1EDADE758);
}

id static UIFont.bodyShort.getter()
{
  return sub_1DA4853A8(&qword_1EDADE820, (id *)&qword_1EDADE758);
}

void sub_1DA583598(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4A90], &qword_1EDAE2518);
}

id static UIFont.calloutEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2520, (id *)&qword_1EDAE2518);
}

void sub_1DA5835C8(uint64_t a1)
{
  sub_1DA5835DC(a1, MEMORY[0x1E0DC4B10], &qword_1EDADE748);
}

void sub_1DA5835DC(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v4 = *a2;
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *a2);
  v6 = objc_msgSend(v5, sel_fontDescriptorWithSymbolicTraits_, 0x8000);

  v7 = (void *)objc_opt_self();
  if (v6)
  {
    v8 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v6, 0.0);

  }
  else
  {
    v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v4);
  }
  *a3 = v8;
}

id static UIFont.subheadShort.getter()
{
  return sub_1DA4853A8(qword_1EDADE918, (id *)&qword_1EDADE748);
}

id sub_1DA5836C0(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4AB8], &qword_1EDAE5098);
}

id static UIFont.footnote.getter()
{
  return sub_1DA4853A8(&qword_1EDAE5270, (id *)&qword_1EDAE5098);
}

void sub_1DA5836F0(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4AB8], &qword_1EDADE8F8);
}

id static UIFont.footnoteEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDADE908, (id *)&qword_1EDADE8F8);
}

id sub_1DA583720(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4A98], qword_1EDADE810);
}

id static UIFont.caption1.getter()
{
  return sub_1DA4853A8(&qword_1EDADE930, (id *)qword_1EDADE810);
}

void sub_1DA583750(uint64_t a1)
{
  sub_1DA48C140(a1, MEMORY[0x1E0DC4A98], &qword_1EDAE2688);
}

id static UIFont.caption1Emph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2608, (id *)&qword_1EDAE2688);
}

id sub_1DA583780(uint64_t a1)
{
  return sub_1DA48C0F8(a1, MEMORY[0x1E0DC4AA0], &qword_1EDADE938);
}

id static UIFont.caption2.getter()
{
  return sub_1DA4853A8(&qword_1EDADE940, (id *)&qword_1EDADE938);
}

id sub_1DA5837B0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 26.0);
  qword_1EDAE24F8 = (uint64_t)result;
  return result;
}

id static UIFont.largeTitle.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2500, (id *)&qword_1EDAE24F8);
}

id sub_1DA583808()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x1E0DC1420]);
  qword_1EDAE2528 = (uint64_t)result;
  return result;
}

id static UIFont.largeTitleEmph.getter()
{
  return sub_1DA4853A8(&qword_1EDAE2538, (id *)&qword_1EDAE2528);
}

id static UIFont.systemFont(ofSize:traits:weight:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  void *v8;
  id v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_systemFontOfSize_, a4);
  if ((a3 & 1) != 0)
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B3F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DA678510;
    v11 = (void *)*MEMORY[0x1E0DC13C0];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC13C0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B3F8);
    v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v12 + 32) = sub_1DA66F8BC();
    *(_QWORD *)(v12 + 40) = v13;
    *(_QWORD *)(v12 + 48) = a2;
    *(_BYTE *)(v12 + 56) = 0;
    v14 = v11;
    v15 = sub_1DA63CC30(v12);
    *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B400);
    *(_QWORD *)(inited + 40) = v15;
    v16 = inited;
  }
  sub_1DA63CD50(v16);
  v17 = objc_msgSend(v9, sel_fontDescriptor);
  v18 = objc_msgSend(v17, sel_fontDescriptorWithSymbolicTraits_, a1);

  if (v18)
  {
    type metadata accessor for AttributeName(0);
    sub_1DA491518();
    v19 = (void *)sub_1DA66F748();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_fontDescriptorByAddingAttributes_, v19);

    if (v20)
    {
      v21 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v20, a4);

      return v21;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v9;
}

id UIFont.metrics.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = (id)UIFont.textStyle.getter();
  if (!v0)
    v0 = (id)*MEMORY[0x1E0DC4A88];
  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, v0);

  return v2;
}

id MTImageStore.image(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return sub_1DA583D5C(a4, a5, a1, a2, a3, (SEL *)&selRef_imageForKey_size_modifier_);
}

uint64_t MTImageStore.asyncImage(forKey:size:imageBlur:completionHandler:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  double v12;
  char v13;
  char v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  double v19;
  void *v20;
  _QWORD v22[6];

  v12 = *(double *)a5;
  v13 = *(_BYTE *)(a5 + 8);
  v14 = *(_BYTE *)(a5 + 9);
  v15 = (void *)sub_1DA66F88C();
  if ((v14 & 1) != 0)
  {
    v16 = 0;
  }
  else
  {
    v17 = objc_allocWithZone((Class)IMImageBlur);
    if ((v13 & 1) != 0)
    {
      v19 = 0.0;
      v18 = 0;
    }
    else
    {
      v18 = 1;
      v19 = v12;
    }
    v16 = objc_msgSend(v17, sel_initWithStyle_radius_, v18, v19);
  }
  v22[4] = a6;
  v22[5] = a7;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_1DA583C14;
  v22[3] = &block_descriptor_8;
  v20 = _Block_copy(v22);
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v7, sel_asyncImageForKey_size_modifier_completionHandler_, v15, v16, v20, a1, a2);
  _Block_release(v20);

  return swift_unknownObjectRelease();
}

void sub_1DA583C14(uint64_t a1, void *a2)
{
  void (*v3)(void *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v4 = sub_1DA66F8BC();
  v6 = v5;
  sub_1DA66BE60();
  v7 = a2;
  v3(a2, v4, v6);
  swift_release();
  swift_bridgeObjectRelease();

}

id MTImageStore.hasItem(forKey:size:imageBlur:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  double v8;
  char v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  double v15;
  id v16;

  v8 = *(double *)a5;
  v9 = *(_BYTE *)(a5 + 8);
  v10 = *(_BYTE *)(a5 + 9);
  v11 = (void *)sub_1DA66F88C();
  if ((v10 & 1) != 0)
  {
    v12 = 0;
  }
  else
  {
    v13 = objc_allocWithZone((Class)IMImageBlur);
    if ((v9 & 1) != 0)
    {
      v15 = 0.0;
      v14 = 0;
    }
    else
    {
      v14 = 1;
      v15 = v8;
    }
    v12 = objc_msgSend(v13, sel_initWithStyle_radius_, v14, v15);
  }
  v16 = objc_msgSend(v5, sel_hasItemForKey_size_modifier_, v11, v12, a1, a2);

  swift_unknownObjectRelease();
  return v16;
}

id MTImageStore.imageInMemory(forKey:size:imageBlur:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return sub_1DA583D5C(a4, a5, a1, a2, a3, (SEL *)&selRef_imageInMemoryForKey_size_modifier_);
}

id sub_1DA583D5C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v6;
  double v10;
  char v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  double v17;
  id v18;

  v10 = *(double *)a5;
  v11 = *(_BYTE *)(a5 + 8);
  v12 = *(_BYTE *)(a5 + 9);
  v13 = (void *)sub_1DA66F88C();
  if ((v12 & 1) != 0)
  {
    v14 = 0;
  }
  else
  {
    v15 = objc_allocWithZone((Class)IMImageBlur);
    if ((v11 & 1) != 0)
    {
      v17 = 0.0;
      v16 = 0;
    }
    else
    {
      v16 = 1;
      v17 = v10;
    }
    v14 = objc_msgSend(v15, sel_initWithStyle_radius_, v16, v17);
  }
  v18 = objc_msgSend(v6, *a6, v13, v14, a1, a2);

  swift_unknownObjectRelease();
  return v18;
}

Swift::Void __swiftcall MTImageStore.invalidate(for:)(Swift::String a1)
{
  void *v1;
  id v2;

  v2 = (id)sub_1DA66F88C();
  objc_msgSend(v1, sel_invalidateImageForKey_, v2);

}

id sub_1DA583E64()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1DA66F88C();
  v3 = objc_msgSend(v1, sel_imageForKey_, v2);

  return v3;
}

id sub_1DA583EB0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return MTImageStore.image(forKey:size:imageBlur:)(a1, a2, a3, a4, a5);
}

id sub_1DA583ED0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return MTImageStore.imageInMemory(forKey:size:imageBlur:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1DA583EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  return MTImageStore.asyncImage(forKey:size:imageBlur:completionHandler:)(a6, a7, a1, a2, a3, a4, a5);
}

unint64_t sub_1DA583F10(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return (unint64_t)MTImageStore.hasItem(forKey:size:imageBlur:)(a4, a5, a1, a2, a3) & 1;
}

id sub_1DA583F34()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1DA66F88C();
  v3 = objc_msgSend(v1, sel_hasItemForKey_, v2);

  return v3;
}

void sub_1DA583F78()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = (id)sub_1DA66F88C();
  objc_msgSend(v1, sel_invalidateImageForKey_, v2);

}

uint64_t NowPlayingItemPlayheadSynchronizer.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v2;

  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4268);
  sub_1DA66EDDC();
  *(_QWORD *)(v0 + 16) = v2;
  type metadata accessor for PlaybackController();
  sub_1DA66EDDC();
  swift_release();
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t NowPlayingItemPlayheadSynchronizer.init(asPartOf:)()
{
  uint64_t v0;
  uint64_t v2;

  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4268);
  sub_1DA66EDDC();
  *(_QWORD *)(v0 + 16) = v2;
  type metadata accessor for PlaybackController();
  sub_1DA66EDDC();
  swift_release();
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_1DA5840C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  __int128 aBlock;
  __int128 v7;
  void (*v8)(uint64_t, uint64_t, double);
  uint64_t v9;

  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1DA5845A4;
  v9 = v2;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v7 = sub_1DA58470C;
  *((_QWORD *)&v7 + 1) = &block_descriptor_9;
  v3 = _Block_copy(&aBlock);
  swift_release();
  v4 = objc_msgSend(v1, sel_addEpisodeObserverUsingBlock_, v3);
  _Block_release(v3);
  if (v4)
  {
    *((_QWORD *)&v7 + 1) = swift_getObjectType();
    *(_QWORD *)&aBlock = v4;
  }
  else
  {
    aBlock = 0u;
    v7 = 0u;
  }
  swift_beginAccess();
  sub_1DA584770((uint64_t)&aBlock, v0 + 32);
  return swift_endAccess();
}

uint64_t sub_1DA5841D8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1DA5841FC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66DEF4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v14 = Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    v15 = v31;
    if (v31)
    {
      v16 = objc_msgSend(v31, sel_identifiers);
      v17 = objc_msgSend(v16, sel_library);

      if (!v17)
      {
        swift_release();

        return;
      }
      v30 = v8;
      v18 = objc_msgSend(v17, sel_databaseID);
      swift_unknownObjectRelease();
      v19 = sub_1DA66F8BC();
      v21 = v20;

      if (v19 == a1 && v21 == a2)
      {
        swift_bridgeObjectRelease();
        v22 = (uint64_t)v30;
        goto LABEL_9;
      }
      v23 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      v22 = (uint64_t)v30;
      if ((v23 & 1) != 0)
      {
LABEL_9:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1DA66BE60();
        sub_1DA66E0BC();
        swift_release();
        swift_release();
        swift_release();
        if (v31 != 1)
        {
          sub_1DA66DE70();
          v24 = sub_1DA66DEDC();
          v25 = sub_1DA66FDC0();
          if (os_log_type_enabled(v24, v25))
          {
            v26 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v26 = 134217984;
            v31 = *(id *)&a3;
            sub_1DA6702C4();
            _os_log_impl(&dword_1DA478000, v24, v25, "Received playhead sync event for currently playing item. Moving playhead to %f", v26, 0xCu);
            MEMORY[0x1DF0A0474](v26, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v27 = sub_1DA66FB98();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v22, 1, 1, v27);
          v28 = swift_allocObject();
          *(_QWORD *)(v28 + 16) = 0;
          *(_QWORD *)(v28 + 24) = 0;
          *(_QWORD *)(v28 + 32) = v14;
          *(double *)(v28 + 40) = a3;
          *(_BYTE *)(v28 + 48) = 0;
          sub_1DA66BE60();
          sub_1DA5C0808(v22, (uint64_t)&unk_1F026B410, v28);
          swift_release();
        }
      }
    }
    swift_release();
  }
}

void sub_1DA5845A4(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DA5841FC(a1, a2, a3);
}

uint64_t sub_1DA5845AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 104) = a6;
  *(_QWORD *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 72) = a5;
  *(_QWORD *)(v6 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5845CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v3;
  *v3 = v0;
  v3[1] = sub_1DA584644;
  return sub_1DA54DF68(v0 + 16, 0);
}

uint64_t sub_1DA584644(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 96) = a1;
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1DA5846C0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5846D8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA58470C(uint64_t a1, double a2)
{
  void (*v3)(uint64_t, uint64_t, double);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t, double))(a1 + 32);
  v4 = sub_1DA66F8BC();
  v6 = v5;
  sub_1DA66BE60();
  v3(v4, v6, a2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA584770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NowPlayingItemPlayheadSynchronizer.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_1DA480E84(v0 + 32);
  return v0;
}

uint64_t NowPlayingItemPlayheadSynchronizer.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_1DA480E84(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingItemPlayheadSynchronizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for NowPlayingItemPlayheadSynchronizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingItemPlayheadSynchronizer.__allocating_init(asPartOf:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of NowPlayingItemPlayheadSynchronizer.beginObserving()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1DA584868()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA584894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1DA4AD77C;
  *(_BYTE *)(v7 + 104) = v6;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  *(_QWORD *)(v7 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA58490C()
{
  uint64_t v0;

  v0 = sub_1DA66F46C();
  __swift_allocate_value_buffer(v0, qword_1EDAE27E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE27E8);
  return sub_1DA66F460();
}

uint64_t static MetricsFieldInclusionRequest.searchFilters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDAE4A30 != -1)
    swift_once();
  v2 = sub_1DA66F46C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDAE27E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

char *sub_1DA5849E4(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  id v7;
  char *v8;
  id v9;
  uint64_t inited;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  char *v19;
  void *v20;
  char *v21;
  char *v22;
  id v23;
  objc_super v25;

  v7 = objc_allocWithZone(MEMORY[0x1E0DC12C0]);
  v8 = v4;
  v9 = objc_msgSend(v7, sel_initWithSize_, a1, 1.79769313e308);
  *(_QWORD *)&v8[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer] = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F026E7E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  v11 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 64) = sub_1DA5853B0();
  *(_QWORD *)(inited + 40) = a4;
  v12 = v11;
  v13 = a4;
  sub_1DA63CD6C(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v15 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DA5853EC();
  v16 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1320]), sel_initWithAttributedString_, v17);
  *(_QWORD *)&v8[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_storage] = v18;

  v25.receiver = v8;
  v25.super_class = (Class)type metadata accessor for TranscriptsLayoutManager();
  v19 = (char *)objc_msgSendSuper2(&v25, sel_init);
  v20 = *(void **)&v19[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_textContainer];
  v21 = v19;
  objc_msgSend(v20, sel_setLineFragmentPadding_, 0.0);
  objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC10PodcastsUI24TranscriptsLayoutManager_storage], sel_addLayoutManager_, v21);
  v22 = v21;
  v23 = v20;
  objc_msgSend(v22, sel_addTextContainer_, v23);

  return v22;
}

uint64_t sub_1DA584C6C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[6];

  v1 = v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1DA66D0C0();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = objc_msgSend(v1, sel_numberOfGlyphs);
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v4;
  v7[4] = v2;
  v7[5] = v3;
  v11[4] = sub_1DA5853A4;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1DA653958;
  v11[3] = &block_descriptor_10;
  v8 = _Block_copy(v11);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v1, sel_enumerateLineFragmentsForGlyphRange_usingBlock_, 0, v5, v8);
  _Block_release(v8);
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

void sub_1DA584E2C(uint64_t a1, unint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, char *);
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v44 = a8;
  v47 = a6;
  v51 = sub_1DA66D0A8();
  v12 = *(_QWORD **)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)&v44 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - v18;
  swift_beginAccess();
  v20 = MEMORY[0x1DF0A054C](a5 + 16);
  if (!v20)
    return;
  v50 = &a3[a2];
  if (__OFADD__(a2, a3))
  {
LABEL_28:
    __break(1u);
  }
  else
  {
    v21 = (void *)v20;
    v22 = v47;
    swift_beginAccess();
    v48 = a7 + 16;
    swift_beginAccess();
    swift_beginAccess();
    a3 = *(char **)(v22 + 16);
    a7 = *(char **)(v22 + 24);
    if (!__OFADD__(a3, a7))
    {
      a2 = MEMORY[0x1E0DEE9D8];
      if ((uint64_t)&a7[(_QWORD)a3] < (uint64_t)v50)
      {
        v46 = v21;
        v45 = v14;
        while (*(_QWORD *)(*(_QWORD *)v48 + 16))
        {
          v23 = (*((unsigned __int8 *)v12 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v12 + 80);
          v24 = (void (*)(char *, unint64_t, uint64_t))v12[2];
          v24(v19, *(_QWORD *)v48 + v23, v51);
          v25 = (char *)objc_msgSend(v21, sel_characterRangeForGlyphRange_actualGlyphRange_, a3, a7, 0);
          a3 = &v25[v26];
          if (__OFADD__(v25, v26))
          {
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v27 = a2;
          a2 = (unint64_t)v14;
          v28 = v19;
          sub_1DA66D078();
          a7 = v29;
          v30 = sub_1DA66F958();
          swift_bridgeObjectRelease();
          v31 = (char *)objc_msgSend(v21, sel_glyphRangeForCharacterRange_actualCharacterRange_, a3, v30, 0);
          v33 = &v31[v32];
          if (__OFADD__(v31, v32))
            goto LABEL_25;
          if ((uint64_t)v50 < (uint64_t)v33)
          {
            ((void (*)(char *, uint64_t))v12[1])(v28, v51);
            v21 = v46;
            a2 = v27;
            break;
          }
          a7 = v48;
          swift_beginAccess();
          if (!*(_QWORD *)(*(_QWORD *)a7 + 16))
            goto LABEL_26;
          v34 = v49;
          v35 = v51;
          v24(v49, *(_QWORD *)a7 + v23, v51);
          sub_1DA5453B0(0, 1);
          swift_endAccess();
          v24((char *)a2, (unint64_t)v34, v35);
          a2 = v27;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a2 = sub_1DA54067C(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
          v37 = *(_QWORD *)(a2 + 16);
          v36 = *(_QWORD *)(a2 + 24);
          v19 = v28;
          if (v37 >= v36 >> 1)
            a2 = sub_1DA54067C(v36 > 1, v37 + 1, 1, a2);
          v14 = v45;
          *(_QWORD *)(a2 + 16) = v37 + 1;
          v38 = a2 + v23 + v12[9] * v37;
          a3 = (char *)v51;
          ((void (*)(unint64_t, char *, uint64_t))v12[4])(v38, v14, v51);
          v39 = (void (*)(char *, char *))v12[1];
          v39(v49, a3);
          v39(v19, a3);
          a7 = v33 + 1;
          if (__OFADD__(v33, 1))
            goto LABEL_27;
          a3 = 0;
          v21 = v46;
          v40 = v47;
          *(_QWORD *)(v47 + 16) = 0;
          *(_QWORD *)(v40 + 24) = a7;
          if ((uint64_t)a7 >= (uint64_t)v50)
            break;
        }
      }
      a7 = (char *)(v44 + 16);
      swift_beginAccess();
      a3 = *(char **)a7;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)a7 = a3;
      v12 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_20;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_30:
  a3 = (char *)sub_1DA540668(0, *((_QWORD *)a3 + 2) + 1, 1, a3);
  *(_QWORD *)a7 = a3;
LABEL_20:
  v43 = *((_QWORD *)a3 + 2);
  v42 = *((_QWORD *)a3 + 3);
  if (v43 >= v42 >> 1)
  {
    a3 = (char *)sub_1DA540668((_QWORD *)(v42 > 1), v43 + 1, 1, a3);
    *(_QWORD *)a7 = a3;
  }
  *((_QWORD *)a3 + 2) = v43 + 1;
  *(_QWORD *)&a3[8 * v43 + 32] = a2;
  swift_endAccess();

}

id sub_1DA585288()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptsLayoutManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TranscriptsLayoutManager()
{
  return objc_opt_self();
}

uint64_t sub_1DA585310()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA585334()
{
  return swift_deallocObject();
}

uint64_t sub_1DA585344()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA585368()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5853A4(uint64_t a1, unint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DA584E2C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(char **)(v4 + 32), *(_QWORD *)(v4 + 40));
}

unint64_t sub_1DA5853B0()
{
  unint64_t result;

  result = qword_1EDADE948;
  if (!qword_1EDADE948)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDADE948);
  }
  return result;
}

unint64_t sub_1DA5853EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDADE7A0;
  if (!qword_1EDADE7A0)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1DF0A039C](&unk_1DA6783CC, v1);
    atomic_store(result, (unint64_t *)&qword_1EDADE7A0);
  }
  return result;
}

uint64_t RestorePurgedEpisodesActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3B48);
  v4 = (_QWORD *)swift_task_alloc();
  v3[18] = v4;
  *v4 = v3;
  v4[1] = sub_1DA5854BC;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5854BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v4;
  *v4 = v2;
  v4[1] = sub_1DA58557C;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA58557C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5855E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[16];
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RestorePurgedEpisodesAction() + 20));
  v0[22] = v2;
  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  v0[12] = v2;
  v0[13] = 0;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[23] = v3;
  sub_1DA560780();
  *v3 = v0;
  v3[1] = sub_1DA5856B4;
  return sub_1DA66EE90();
}

uint64_t sub_1DA5856B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1DA58572C()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[25] = v1;
  sub_1DA585988();
  *v1 = v0;
  v1[1] = sub_1DA5857B0;
  return sub_1DA66EE90();
}

uint64_t sub_1DA5857B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA585814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v4 = *MEMORY[0x1E0D3F990];
  v5 = sub_1DA66ED70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v1, v4, v5);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5858BC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5858C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5858FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA585948()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1DA585988()
{
  unint64_t result;

  result = qword_1F026B458;
  if (!qword_1F026B458)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ReevaluateAutoDownloadsIntent, &type metadata for ReevaluateAutoDownloadsIntent);
    atomic_store(result, (unint64_t *)&qword_1F026B458);
  }
  return result;
}

unint64_t sub_1DA5859D0()
{
  unint64_t result;

  result = qword_1F026B460;
  if (!qword_1F026B460)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RestorePurgedEpisodesActionImplementation, &type metadata for RestorePurgedEpisodesActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026B460);
  }
  return result;
}

uint64_t sub_1DA585A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4AD77C;
  return RestorePurgedEpisodesActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

unint64_t sub_1DA585A80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026B470;
  if (!qword_1F026B470)
  {
    v1 = type metadata accessor for RestorePurgedEpisodesAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RestorePurgedEpisodesAction, v1);
    atomic_store(result, (unint64_t *)&qword_1F026B470);
  }
  return result;
}

uint64_t sub_1DA585AC8()
{
  sub_1DA585B18();
  return sub_1DA66F310();
}

ValueMetadata *type metadata accessor for RestorePurgedEpisodesActionImplementation()
{
  return &type metadata for RestorePurgedEpisodesActionImplementation;
}

unint64_t sub_1DA585B18()
{
  unint64_t result;

  result = qword_1F026B478;
  if (!qword_1F026B478)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RestorePurgedEpisodesActionImplementation, &type metadata for RestorePurgedEpisodesActionImplementation);
    atomic_store(result, (unint64_t *)&qword_1F026B478);
  }
  return result;
}

uint64_t PageID.init(type:id:)()
{
  sub_1DA66F988();
  sub_1DA4F726C();
  sub_1DA670354();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return sub_1DA66F568();
}

{
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return sub_1DA66F568();
}

uint64_t PageID.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1DA66ED1C();
  if (v4)
  {
    v5 = v4;
    v6 = sub_1DA66CB08();
    sub_1DA585DDC(v6, v7, v5);
    v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      v10 = sub_1DA66CB14();
      sub_1DA585DDC(v10, v11, v5);
      v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
      {
        sub_1DA66F988();
        sub_1DA66F988();
        swift_bridgeObjectRelease();
        sub_1DA66F568();
        v14 = sub_1DA66ED28();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
        v15 = sub_1DA66F574();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
      }
    }
    v18 = sub_1DA66ED28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_1DA66ED28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  }
  v19 = sub_1DA66F574();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19);
}

uint64_t sub_1DA585DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  if (!*(_QWORD *)(a3 + 16))
  {
    v12 = 0u;
    v13 = 0u;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1DA591C4C(a1, a2);
  if ((v7 & 1) == 0)
  {
    v12 = 0u;
    v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1DA49ADD0(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v13 + 1))
  {
LABEL_10:
    sub_1DA480E84((uint64_t)&v12);
    return 0;
  }
  sub_1DA49ACF0(&v12, v14);
  sub_1DA49ADD0((uint64_t)v14, (uint64_t)&v12);
  if (swift_dynamicCast())
    v9 = v11;
  else
    v9 = 0;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  return v9;
}

uint64_t sub_1DA585EDC(uint64_t a1)
{
  return sub_1DA585FD0(a1, qword_1EDAE2800, MEMORY[0x1E0D7DF80], MEMORY[0x1E0D7DB38]);
}

uint64_t static PageID.searchFocus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA585F4C(&qword_1EDAE4A48, (uint64_t)qword_1EDAE2800, a1);
}

uint64_t sub_1DA585F14(uint64_t a1)
{
  return sub_1DA585FD0(a1, qword_1EDAE4A50, MEMORY[0x1E0D7DF80], MEMORY[0x1E0D7DB40]);
}

uint64_t static PageID.searchHints.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA585F4C(&qword_1EDAE4A70, (uint64_t)qword_1EDAE4A50, a1);
}

uint64_t sub_1DA585F4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1DA66F574();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1DA585FB4(uint64_t a1)
{
  return sub_1DA585FD0(a1, qword_1EDAE4A78, MEMORY[0x1E0D7DF88], MEMORY[0x1E0D7DB48]);
}

uint64_t sub_1DA585FD0(uint64_t a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t v7;

  v7 = sub_1DA66F574();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  a3();
  a4();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return sub_1DA66F568();
}

uint64_t static PageID.searchLanding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA585F4C(&qword_1EDAE4A98, (uint64_t)qword_1EDAE4A78, a1);
}

uint64_t static PageID.searchResults(id:)()
{
  sub_1DA66D024();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return sub_1DA66F568();
}

uint64_t static PageID.searchResults(id:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = sub_1DA66C454();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1DA66C448();
    sub_1DA66C43C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1DA66F910();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v9[0] = sub_1DA66D024();
  v9[1] = v7;
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F568();
  return swift_bridgeObjectRelease();
}

uint64_t BaseObjectGraph.inject<A>(_:named:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v26 = (char *)&v24 - v8;
  v9 = sub_1DA670294();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - v11;
  v14 = type metadata accessor for NamedDependencies(0, a2, a3, v13);
  sub_1DA66EDDC();
  v15 = v29;
  v25 = a1;
  NamedDependencies.dependency(named:)(a1, v14);
  v16 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, a2) == 1)
  {
    v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    MEMORY[0x1E0C80A78](v18);
    v22 = a2;
    v23 = a3;
    v19 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    sub_1DA66F7B4();
    v20 = sub_1DA66F79C();
    sub_1DA586528((void (*)(uint64_t))sub_1DA586E7C, (uint64_t)(&v24 - 4), v15);
    swift_release();
    v21 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v25, v19);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    sub_1DA67069C();
    sub_1DA66F988();
    v28 = v21;
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DE9EE0], v20);
    sub_1DA6706A8();
    LODWORD(v23) = 0;
    v22 = 77;
    result = sub_1DA670570();
    __break(1u);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v12, a2);
  }
  return result;
}

uint64_t type metadata accessor for NamedDependencies(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NamedDependencies);
}

void sub_1DA586528(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1DA5865B4()
{
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_1DA66FAFC();
  swift_getAssociatedConformanceWitness();
  return sub_1DA66F76C();
}

uint64_t NamedDependencies.init(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DA66F7B4();
  v2 = sub_1DA587BB8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void NamedDependencies.adding(_:for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;

  v8 = *v4;
  v9 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DA66F7B4();
  v10 = v8 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v8 + 16);
  v11 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(_QWORD *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_1DA586814(v10, a2, a1, v8, v9, a4);
  os_unfair_lock_unlock(v11);
}

uint64_t sub_1DA586814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;

  v19 = a1;
  v20 = a6;
  v10 = sub_1DA670294();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v19 - v16, a2, AssociatedTypeWitness, v14);
  v17 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, a3, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, a5);
  swift_getAssociatedConformanceWitness();
  sub_1DA66F7B4();
  sub_1DA66F7CC();
  *v20 = a4;
  return sub_1DA66BE60();
}

void NamedDependencies.dependency(named:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  os_unfair_lock_s *v7;

  v4 = *v2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DA66F7B4();
  sub_1DA670294();
  v6 = (uint64_t *)(v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16));
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_1DA586A90(v6, a1, v5);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_1DA586A90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  v5 = *a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return MEMORY[0x1DF09E1A0](a2, v5, AssociatedTypeWitness, a3, AssociatedConformanceWitness);
}

uint64_t BaseObjectGraph.satisfying<A>(_:named:construction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v20 - v12;
  v15 = type metadata accessor for NamedDependencies(0, a5, a6, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, AssociatedTypeWitness);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a5;
  *((_QWORD *)v17 + 3) = a6;
  *((_QWORD *)v17 + 4) = v21;
  *((_QWORD *)v17 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, AssociatedTypeWitness);
  sub_1DA66BE60();
  v18 = BaseObjectGraph.satisfying<A>(_:with:)(v15, (uint64_t)sub_1DA587CAC, (uint64_t)v17, v15);
  swift_release();
  return v18;
}

uint64_t sub_1DA586C80@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a3;
  v17 = a5;
  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NamedDependencies(0, v12, v13, v11);
  sub_1DA66EDC4();
  v15 = v19;
  if (!v19)
  {
    sub_1DA5865B4();
    NamedDependencies.init(_:)(&v20);
    v15 = v20;
  }
  v20 = v15;
  a2(a1);
  NamedDependencies.adding(_:for:)((uint64_t)v10, v18, v14, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a4);
  return swift_release();
}

uint64_t BaseObjectGraph.satisfying<A>(_:named:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = *(_QWORD *)(a4 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v12, v13, v10);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, v11, a4);
  v17 = BaseObjectGraph.satisfying<A>(_:named:construction:)(v16, a2, (uint64_t)sub_1DA587D8C, v15, a4, a5);
  swift_release();
  return v17;
}

uint64_t sub_1DA586E7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t BaseObjectGraph.satisfyingAll<A>(_:producer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v11 = type metadata accessor for NamedDependencies(0, a4, a5, a4);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a2;
  v12[6] = a3;
  sub_1DA66BE60();
  v13 = BaseObjectGraph.satisfying<A>(_:with:)(v11, (uint64_t)sub_1DA587DD4, (uint64_t)v12, v11);
  swift_release();
  return v13;
}

uint64_t sub_1DA586F50@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  uint64_t v30;

  v28 = a6;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v27 = type metadata accessor for NamedDependencies(0, a3, a4, v12);
  sub_1DA66EDC4();
  v13 = v30;
  if (!v30)
  {
    sub_1DA5865B4();
    NamedDependencies.init(_:)(v29);
    v13 = v29[0];
  }
  v25 = v13;
  v14 = a2(a1);
  swift_checkMetadataState();
  sub_1DA67045C();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v15 = sub_1DA66FCAC();
  v26 = v14;
  v29[0] = v14;
  v16 = sub_1DA66F79C();
  swift_bridgeObjectRetain();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0DE9ED0], v16);
  sub_1DA66FC70();
  v17 = a5;
  v18 = sub_1DA66FC94();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
    v19 = swift_bridgeObjectRelease();
    v24 = (uint64_t)&v24;
    v29[0] = v26;
    v30 = v25;
    MEMORY[0x1E0C80A78](v19);
    *(&v24 - 4) = a3;
    *(&v24 - 3) = a4;
    v23 = v17;
    v20 = sub_1DA66F7B4();
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA0D0], v20);
    sub_1DA66FA48();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    v30 = v26;
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DE9EE0], v16);
    sub_1DA6706A8();
    sub_1DA66F988();
    v30 = v15;
    v22 = sub_1DA66FCA0();
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DEB3E8], v22);
    sub_1DA6706A8();
    result = sub_1DA670570();
    __break(1u);
  }
  return result;
}

uint64_t BaseObjectGraph.satisfyingAll<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v9 = type metadata accessor for NamedDependencies(0, a3, a4, a4);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a2;
  swift_bridgeObjectRetain();
  v11 = BaseObjectGraph.satisfying<A>(_:with:)(v9, (uint64_t)sub_1DA587E18, (uint64_t)v10, v9);
  swift_release();
  return v11;
}

uint64_t sub_1DA5873C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;

  v25 = a5;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v24 = type metadata accessor for NamedDependencies(0, a2, a3, v10);
  sub_1DA66EDC4();
  v11 = v27;
  if (!v27)
  {
    sub_1DA5865B4();
    NamedDependencies.init(_:)(v26);
    v11 = v26[0];
  }
  v23 = v11;
  swift_checkMetadataState();
  sub_1DA67045C();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v12 = sub_1DA66FCAC();
  v26[0] = a1;
  v13 = sub_1DA66F79C();
  swift_bridgeObjectRetain();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0DE9ED0], v13);
  v22 = v13;
  sub_1DA66FC70();
  v14 = a1;
  v15 = sub_1DA66FC94();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = swift_bridgeObjectRelease();
    v26[0] = v14;
    v27 = v23;
    MEMORY[0x1E0C80A78](v16);
    *(&v21 - 4) = a2;
    *(&v21 - 3) = a3;
    v20 = a4;
    v17 = sub_1DA66F7B4();
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DEA0D0], v17);
    sub_1DA66FA48();
    return swift_release();
  }
  else
  {
    v26[0] = 0;
    v26[1] = 0xE000000000000000;
    sub_1DA670444();
    sub_1DA66F988();
    v27 = v14;
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DE9EE0], v22);
    sub_1DA6706A8();
    sub_1DA66F988();
    v27 = v12;
    v19 = sub_1DA66FCA0();
    MEMORY[0x1DF0A039C](MEMORY[0x1E0DEB3E8], v19);
    sub_1DA6706A8();
    result = sub_1DA670570();
    __break(1u);
  }
  return result;
}

void sub_1DA587760(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  v8 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v10 = type metadata accessor for NamedDependencies(0, a2, a3, v9);
  NamedDependencies.adding(_:for:)(v8, a1, v10, a4);
}

uint64_t Dependency.init<A>(named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  type metadata accessor for NamedDependencies(0, a3, a4, a4);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  v8[5] = a2;
  return sub_1DA66EBC0();
}

uint64_t sub_1DA58789C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA5878C4(sub_1DA64F070, &qword_1F026B480, a1);
}

uint64_t sub_1DA5878B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DA5878C4((uint64_t (*)(void))sub_1DA64EB2C, &qword_1F026B488, a1);
}

uint64_t sub_1DA5878C4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v5;
  *a3 = result;
  return result;
}

uint64_t sub_1DA587914@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_1DA66C4E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE3AE0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA678510;
  v7 = *MEMORY[0x1E0CB0EF8];
  v8 = *(void (**)(void))(v3 + 104);
  v8();
  ((void (*)(char *, uint64_t, uint64_t))v8)(v5, v7, v2);
  sub_1DA66C4F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = sub_1DA63C2E4(v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4C70);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v9;
  *a1 = result;
  return result;
}

uint64_t sub_1DA587A5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);
  void *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D88);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4BF8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA678FE0;
  v7 = v6 + v5;
  v8 = *(int *)(v2 + 48);
  v9 = *MEMORY[0x1E0D7EFA0];
  v10 = sub_1DA66FDF0();
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
  v11(v7, v9, v10);
  v12 = (void *)objc_opt_self();
  *(_QWORD *)(v7 + v8) = objc_msgSend(v12, sel__applePodcastsFoundationSettingsUserDefaults);
  v13 = v7 + v4;
  v14 = *(int *)(v2 + 48);
  v11(v13, *MEMORY[0x1E0D7EF98], v10);
  *(_QWORD *)(v13 + v14) = objc_msgSend(v12, sel__applePodcastsFoundationSharedUserDefaults);
  v15 = sub_1DA63C150(v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4C90);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v15;
  *a1 = result;
  return result;
}

uint64_t sub_1DA587BB8()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1DA670498();
  return sub_1DA67048C();
}

uint64_t sub_1DA587C24()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1DA587CAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_1DA586C80(a1, *(void (**)(uint64_t))(v2 + 32), v2 + ((v6 + 48) & ~v6), v5, a2);
}

uint64_t sub_1DA587D34()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1DA587D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1DA587DB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA587DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1DA586F50(a1, *(uint64_t (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1DA587DF4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA587E18@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1DA5873C4(v1[5], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1DA587E34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA587E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  (*(void (**)(void))(v1 + 32))();
  return NamedDependencies.init(_:)(a1);
}

void sub_1DA587E94(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1DA587760(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1DA587EB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2, v3);
}

void sub_1DA587F08(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_1DA587E94(a1, a2);
}

id UIColor.init(hexString:alpha:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  double v11;
  _QWORD v12[4];

  v6 = sub_1DA66C0D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = a1;
  v12[3] = a2;
  sub_1DA66C088();
  sub_1DA498918();
  sub_1DA6702F4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  result = (id)sub_1DA66DD2C();
  v11 = a3 * 255.0;
  if ((~COERCE__INT64(a3 * 255.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v11 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v11 < 256.0)
    return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)result / 255.0, (double)BYTE1(result) / 255.0, (double)BYTE2(result) / 255.0, (double)(int)v11 / 255.0);
LABEL_7:
  __break(1u);
  return result;
}

id static UIColor.dynamicColor(default:dark:)(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v11[4] = sub_1DA588284;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1DA58905C;
  v11[3] = &block_descriptor_11;
  v6 = _Block_copy(v11);
  v7 = a1;
  v8 = a2;
  v9 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  return v9;
}

id static UIColor.tertiaryBackgroundColor.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
}

id UIColor.init(_:)(unsigned int a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)a1 / 255.0, (double)BYTE1(a1) / 255.0, (double)BYTE2(a1) / 255.0, (double)HIBYTE(a1) / 255.0);
}

id sub_1DA588224(void *a1, void *a2, void *a3)
{
  void *v5;

  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v5 = a3;
  else
    v5 = a2;
  return v5;
}

uint64_t sub_1DA588258()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DA588284(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v4 = v3;
  else
    v4 = v2;
  return v4;
}

double UIColor.relativeLuminance.getter()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend(v0, sel_CGColor);
  UISColorLuminance();
  v3 = v2;

  return v3;
}

double static UIColor.contrastRatio(between:and:)(void *a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v3 = objc_msgSend(a1, sel_CGColor);
  UISColorLuminance();
  v5 = v4;

  v6 = objc_msgSend(a2, sel_CGColor);
  UISColorLuminance();
  v8 = v7;

  if (v5 >= v8)
    v9 = v5;
  else
    v9 = v8;
  if (v5 >= v8)
    v10 = v8;
  else
    v10 = v5;
  return (v9 + 0.05) / (v10 + 0.05);
}

double UIColor.contrastRatio(with:)(void *a1)
{
  void *v1;
  id v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v3 = objc_msgSend(v1, sel_CGColor);
  UISColorLuminance();
  v5 = v4;

  v6 = objc_msgSend(a1, sel_CGColor);
  UISColorLuminance();
  v8 = v7;

  if (v5 >= v8)
    v9 = v5;
  else
    v9 = v8;
  if (v5 >= v8)
    v10 = v8;
  else
    v10 = v5;
  return (v9 + 0.05) / (v10 + 0.05);
}

void UIColor.GrayscaleComponents.white.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*UIColor.GrayscaleComponents.white.modify())()
{
  return nullsub_1;
}

double UIColor.GrayscaleComponents.alpha.getter(double a1, double a2)
{
  return a2;
}

void UIColor.GrayscaleComponents.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*UIColor.GrayscaleComponents.alpha.modify())()
{
  return nullsub_1;
}

id UIColor.GrayscaleComponents.color.getter(double a1, double a2)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, a1, a2);
}

BOOL static UIColor.GrayscaleComponents.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

uint64_t UIColor.GrayscaleComponents.hash(into:)()
{
  sub_1DA6707BC();
  return sub_1DA6707BC();
}

uint64_t UIColor.GrayscaleComponents.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707BC();
  sub_1DA6707BC();
  return sub_1DA6707C8();
}

uint64_t sub_1DA588570()
{
  sub_1DA670798();
  UIColor.GrayscaleComponents.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5885C0()
{
  return UIColor.GrayscaleComponents.hash(into:)();
}

uint64_t sub_1DA5885C8()
{
  sub_1DA670798();
  UIColor.GrayscaleComponents.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t UIColor.grayscaleComponents.getter()
{
  void *v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  v4 = 0xBFF0000000000000;
  v5[0] = 0xBFF0000000000000;
  v1 = objc_msgSend(v0, sel_getWhite_alpha_, v5, &v4);
  v2 = v5[0];
  if (!v1)
    return 0;
  return v2;
}

id UIColor.backgroundColorSuitableForWhiteText.getter()
{
  void *v0;
  void *v1;
  id v4;
  _BYTE v5[40];
  double v6;
  double v7;
  double v8;
  char v9;

  v4 = v0;
  sub_1DA47EBD4(v4, (uint64_t)v5);
  sub_1DA4A686C((uint64_t)v5, (uint64_t)&v6, &qword_1EDAE1950);
  if ((v9 & 1) != 0)
  {
    v1 = v4;
    return v1;
  }
  v1 = v4;
  if (v7 < 0.4 && v8 > 0.7)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v6, v7, 0.7, 1.0);
  if (v8 <= 0.8)
    return v1;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v6, v7, 0.8, 1.0);
}

id UIColor.fadedBackgroundColor.getter()
{
  void *v0;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD aBlock[6];
  _BYTE v17[40];
  double v18;
  double v19;
  double v20;
  double v21;
  char v22;

  v15 = v0;
  sub_1DA47EBD4(v15, (uint64_t)v17);
  sub_1DA4A686C((uint64_t)v17, (uint64_t)&v18, &qword_1EDAE1950);
  if ((v22 & 1) != 0)
    return v15;
  v2 = v18;
  v3 = v19;
  v4 = v21;
  v5 = fmin(v19, 0.08);
  if (v20 > 0.94)
    v6 = v20;
  else
    v6 = 0.94;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v18, v5, v6, v21);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v2, fmin(v3, 0.4), 0.12, v4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  aBlock[4] = sub_1DA5890AC;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA58905C;
  aBlock[3] = &block_descriptor_6;
  v11 = _Block_copy(aBlock);
  v12 = v8;
  v13 = v7;
  v14 = objc_msgSend(v10, sel_initWithDynamicProvider_, v11);
  _Block_release(v11);

  swift_release();
  return v14;
}

id UIColor.addingBrightness(amount:)(double a1)
{
  void *v1;
  double v4;
  id v5;
  _BYTE v6[40];
  double v7[2];
  double v8;
  double v9;
  char v10;

  v5 = v1;
  sub_1DA47EBD4(v5, (uint64_t)v6);
  sub_1DA4A686C((uint64_t)v6, (uint64_t)v7, &qword_1EDAE1950);
  if ((v10 & 1) != 0)
    return v5;
  if (v8 + a1 > 0.0)
    v4 = v8 + a1;
  else
    v4 = 0.0;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v7[0], v7[1], v4, v9);
}

id UIColor.clampedBrightness(min:max:)(double a1, double a2)
{
  void *v2;
  id result;
  double v6;
  id v8;
  _BYTE v9[40];
  double v10[2];
  double v11;
  char v12;

  v8 = v2;
  sub_1DA47EBD4(v8, (uint64_t)v9);
  sub_1DA4A686C((uint64_t)v9, (uint64_t)v10, &qword_1EDAE1950);
  if ((v12 & 1) != 0)
  {
    result = v8;
    return result;
  }
  result = v8;
  if (a1 > a2)
  {
    __break(1u);
  }
  else
  {
    v6 = v11;
    if (v11 >= a1 && v11 <= a2)
      return result;
    if (v11 > a2)
      v6 = a2;
    if (v6 > a1)
      a1 = v6;
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithHue_saturation_brightness_alpha_, v10[0], v10[1], a1, 1.0);
  }
  return result;
}

void UIColor.RGBAComponents.red.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*UIColor.RGBAComponents.red.modify())()
{
  return nullsub_1;
}

double UIColor.RGBAComponents.green.getter(double a1, double a2)
{
  return a2;
}

void UIColor.RGBAComponents.green.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*UIColor.RGBAComponents.green.modify())()
{
  return nullsub_1;
}

double UIColor.RGBAComponents.blue.getter(double a1, double a2, double a3)
{
  return a3;
}

void UIColor.RGBAComponents.blue.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*UIColor.RGBAComponents.blue.modify())()
{
  return nullsub_1;
}

double UIColor.RGBAComponents.alpha.getter(double a1, double a2, double a3, double a4)
{
  return a4;
}

void UIColor.RGBAComponents.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*UIColor.RGBAComponents.alpha.modify())()
{
  return nullsub_1;
}

void sub_1DA588B58()
{
  xmmword_1F026B490 = 0uLL;
  *(_QWORD *)&xmmword_1F026B4A0 = 0;
  *((_QWORD *)&xmmword_1F026B4A0 + 1) = 0x3FF0000000000000;
}

double static UIColor.RGBAComponents.blank.getter()
{
  if (qword_1F0268560 != -1)
    swift_once();
  return *(double *)&xmmword_1F026B490;
}

id UIColor.RGBAComponents.color.getter(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, a1, a2, a3, a4);
}

BOOL static UIColor.RGBAComponents.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  _BOOL4 v8;

  v8 = a1 == a5;
  if (a2 != a6)
    v8 = 0;
  if (a3 != a7)
    v8 = 0;
  return a4 == a8 && v8;
}

uint64_t UIColor.RGBAComponents.hash(into:)()
{
  sub_1DA6707BC();
  sub_1DA6707BC();
  sub_1DA6707BC();
  return sub_1DA6707BC();
}

uint64_t UIColor.RGBAComponents.hashValue.getter()
{
  sub_1DA670798();
  UIColor.RGBAComponents.hash(into:)();
  return sub_1DA6707C8();
}

BOOL sub_1DA588D18(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_1DA588D54()
{
  sub_1DA670798();
  UIColor.RGBAComponents.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA588DB8()
{
  return UIColor.RGBAComponents.hash(into:)();
}

uint64_t sub_1DA588DC4()
{
  sub_1DA670798();
  UIColor.RGBAComponents.hash(into:)();
  return sub_1DA6707C8();
}

id UIColor.rgbaComponents.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v10 = 0xBFF0000000000000;
  v11[0] = 0xBFF0000000000000;
  v8 = 0xBFF0000000000000;
  v9 = 0xBFF0000000000000;
  result = objc_msgSend(v1, sel_getRed_green_blue_alpha_, v11, &v10, &v9, &v8);
  if ((_DWORD)result)
  {
    v5 = v10;
    v4 = v11[0];
    v7 = v8;
    v6 = v9;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
  }
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = result ^ 1;
  return result;
}

unint64_t UIColor.hexColor.getter()
{
  unint64_t result;
  unsigned __int8 v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _BYTE v10[40];
  double v11;
  double v12;
  double v13;
  double v14;
  unsigned __int8 v15;

  UIColor.rgbaComponents.getter((uint64_t)v10);
  result = sub_1DA4A686C((uint64_t)v10, (uint64_t)&v11, &qword_1EDAE2120);
  v1 = v15;
  if ((v15 & 1) != 0)
  {
    v2 = 0;
LABEL_22:
    LOBYTE(v11) = v1;
    return v2 | ((unint64_t)v1 << 32);
  }
  v3 = v11 * 255.0;
  if (v11 * 255.0 <= -1.0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v3 >= 256.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v4 = v12 * 255.0;
  if (v12 * 255.0 <= -1.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v4 >= 256.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = v13 * 255.0;
  if (v13 * 255.0 <= -1.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v5 >= 256.0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v6 = v14 * 255.0;
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (COERCE_UNSIGNED_INT64(v14 * 255.0) & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_29;
  }
  if (v6 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v6 < 256.0)
  {
    v2 = sub_1DA66DD20();
    goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

id sub_1DA58905C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  sub_1DA66BE60();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_1DA5890AC(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v4 = v2;
  else
    v4 = v3;
  return v4;
}

unint64_t sub_1DA5890E0()
{
  unint64_t result;

  result = qword_1F026B4B0;
  if (!qword_1F026B4B0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UIColor.GrayscaleComponents, &type metadata for UIColor.GrayscaleComponents);
    atomic_store(result, (unint64_t *)&qword_1F026B4B0);
  }
  return result;
}

unint64_t sub_1DA589128()
{
  unint64_t result;

  result = qword_1F026B4B8;
  if (!qword_1F026B4B8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for UIColor.RGBAComponents, &type metadata for UIColor.RGBAComponents);
    atomic_store(result, (unint64_t *)&qword_1F026B4B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIColor.GrayscaleComponents()
{
  return &type metadata for UIColor.GrayscaleComponents;
}

ValueMetadata *type metadata accessor for UIColor.RGBAComponents()
{
  return &type metadata for UIColor.RGBAComponents;
}

uint64_t EnqueueMediaItemForPlaybackIntent.init(mediaItem:location:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v5 = *a2;
  v6 = *((_BYTE *)a2 + 8);
  v7 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  result = type metadata accessor for EnqueueMediaItemForPlaybackIntent();
  v9 = a3 + *(int *)(result + 20);
  *(_QWORD *)v9 = v5;
  *(_BYTE *)(v9 + 8) = v6;
  return result;
}

uint64_t type metadata accessor for EnqueueMediaItemForPlaybackIntent()
{
  uint64_t result;

  result = qword_1EDAE3F58;
  if (!qword_1EDAE3F58)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t static EnqueueMediaItemForPlaybackIntent.kind.getter()
{
  return 0xD000000000000021;
}

uint64_t EnqueueMediaItemForPlaybackIntent.mediaItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66D018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id EnqueueMediaItemForPlaybackIntent.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v3 = v1 + *(int *)(type metadata accessor for EnqueueMediaItemForPlaybackIntent() + 20);
  v4 = *(void **)v3;
  *(_QWORD *)a1 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  return sub_1DA5892CC(v4, v5);
}

id sub_1DA5892CC(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void sub_1DA5892E0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x80000001DA67DE90;
}

uint64_t *initializeBufferWithCopyOfBuffer for EnqueueMediaItemForPlaybackIntent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v6 = a3;
    v7 = sub_1DA66D018();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(id *)v10;
    LOBYTE(v6) = v10[8];
    sub_1DA5892CC(*(id *)v10, v6);
    *(_QWORD *)v9 = v11;
    v9[8] = v6;
  }
  return a1;
}

void destroy for EnqueueMediaItemForPlaybackIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1DA5893F0(*(id *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
}

void sub_1DA5893F0(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t initializeWithCopy for EnqueueMediaItemForPlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v6 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(id *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_1DA5892CC(*(id *)v9, a2);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  return a1;
}

uint64_t assignWithCopy for EnqueueMediaItemForPlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned __int8 v12;

  v6 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(id *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_1DA5892CC(*(id *)v9, a2);
  v11 = *(void **)v8;
  *(_QWORD *)v8 = v10;
  v12 = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(v8 + 8) = a2;
  sub_1DA5893F0(v11, v12);
  return a1;
}

uint64_t initializeWithTake for EnqueueMediaItemForPlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for EnqueueMediaItemForPlaybackIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;

  v6 = sub_1DA66D018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(void **)v8;
  *(_QWORD *)v8 = v10;
  v12 = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_1DA5893F0(v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnqueueMediaItemForPlaybackIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5895F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DA66D018();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 2)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EnqueueMediaItemForPlaybackIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA589678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66D018();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t sub_1DA5896F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66D018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteQueueOperationError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5897A8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1DA5897A8(id result, char a2)
{
  if (!a2)
    return result;
  return result;
}

void destroy for RemoteQueueOperationError(uint64_t a1)
{
  sub_1DA506D54(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for RemoteQueueOperationError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5897A8(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1DA506D54(v5, v6);
  return a1;
}

uint64_t assignWithTake for RemoteQueueOperationError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1DA506D54(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteQueueOperationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteQueueOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DA5898E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1DA5898F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RemoteQueueOperationError()
{
  return &type metadata for RemoteQueueOperationError;
}

uint64_t ThinClientEpisodeStateModel.init(playbackData:duration:isBookmarked:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 || a2 != 2)
  {
    v13 = sub_1DA66BE60();
    EpisodePlayState.init(playbackData:duration:)(v13, (uint64_t)v10, a4);
    sub_1DA66DAA4();
    swift_release();
    v14 = sub_1DA66DAB0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 0, 1, v14);
  }
  else
  {
    v11 = sub_1DA66DAB0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
}

uint64_t sub_1DA589A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA657DFC(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1DA589A70()
{
  return sub_1DA66EF50();
}

uint64_t EpisodePlayState.init(playbackData:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  double v9;
  double v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    sub_1DA66DC24();
    v10 = v9;
    v11 = sub_1DA66DC30();
    v12 = sub_1DA66DC18();
    if (v13)
      v14 = v12;
    else
      v14 = 0;
    v15 = 0xE000000000000000;
    if (v13)
      v15 = v13;
    *v8 = v14;
    v8[1] = v15;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
    v16 = swift_allocObject();
    *(_DWORD *)(v16 + ((*(unsigned int *)(*(_QWORD *)v16 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_1DA47C94C((uint64_t)v8, v16 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v16 + 16));
    sub_1DA47C68C((uint64_t)v8);
    EpisodePlayState.init(positionInMilliseconds:completed:recordedDate:duration:)(v11 & 1, v16, a2, v10, a3);
    swift_release();
    v17 = sub_1DA66D1BC();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
  else
  {
    v19 = sub_1DA66D1BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19);
  }
}

uint64_t EpisodeBookmarkState.init(isBookmarked:)(char a1)
{
  if (a1 == 2)
    return 2;
  else
    return a1 & 1;
}

uint64_t EpisodePlayState.init(positionInMilliseconds:completed:recordedDate:duration:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  float v10;
  double v11;

  if ((a1 & 1) != 0)
  {
    v6 = (uint64_t *)(a2 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a2 + 16));
    v7 = (os_unfair_lock_s *)(a2 + ((*(unsigned int *)(*(_QWORD *)a2 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v7);
    sub_1DA47C730(v6, (char *)a3);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026A7F0) + 48);
    os_unfair_lock_unlock(v7);
    swift_release();
    *(_BYTE *)(a3 + v8) = 0;
    sub_1DA66D1BC();
  }
  else
  {
    v10 = *MEMORY[0x1E0D7F310];
    v11 = a4 / 1000.0;
    swift_release();
    if (v11 > v10)
    {
      *(double *)a3 = v11;
      *(double *)(a3 + 8) = a5;
    }
    sub_1DA66D1BC();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t TranscriptDebugHostingController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  type metadata accessor for TranscriptDebugController(0);
  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9D8];
  sub_1DA66C5D4();
  return sub_1DA66E548();
}

uint64_t TranscriptDebugHostingController.init()()
{
  type metadata accessor for TranscriptDebugController(0);
  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9D8];
  sub_1DA66C5D4();
  return sub_1DA66E548();
}

uint64_t type metadata accessor for TranscriptDebugController(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1F026B580);
}

void sub_1DA589E50()
{
  sub_1DA670570();
  __break(1u);
}

void TranscriptDebugHostingController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TranscriptDebugHostingController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TranscriptDebugHostingController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TranscriptDebugHostingController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TranscriptDebugHostingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t TranscriptDebugView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v14;
  uint64_t (*v15)(char *, uint64_t);
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v17[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4D0);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4D8);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4E0);
  v10 = sub_1DA4841D4(&qword_1F026B4E8, &qword_1F026B4D8, MEMORY[0x1E0CDD950]);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4F0);
  v12 = sub_1DA4841D4(&qword_1F026B4F8, &qword_1F026B4F0, MEMORY[0x1E0CD8918]);
  v18 = v11;
  v19 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v21 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1DA66E41C();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a1, v6, v3);
  v14 = (_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026B500) + 36));
  *v14 = sub_1DA58AA94;
  v14[1] = v7;
  v14[2] = 0;
  v14[3] = 0;
  v15 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  sub_1DA66BE60();
  return v15(v6, v3);
}

uint64_t sub_1DA58A12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4D8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6E8);
  sub_1DA58C158();
  sub_1DA66E6F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4E0);
  sub_1DA4841D4(&qword_1F026B4E8, &qword_1F026B4D8, MEMORY[0x1E0CDD950]);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4F0);
  v5 = sub_1DA4841D4(&qword_1F026B4F8, &qword_1F026B4F0, MEMORY[0x1E0CD8918]);
  v7[0] = v4;
  v7[1] = v5;
  swift_getOpaqueTypeConformance2();
  sub_1DA66E7D0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1DA58A28C()
{
  return sub_1DA58A12C();
}

uint64_t sub_1DA58A294()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B700);
  sub_1DA58C1D0();
  return sub_1DA66E974();
}

uint64_t sub_1DA58A334()
{
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F026B6E0, type metadata accessor for TranscriptDebugController, (uint64_t)&unk_1DA67E1B4);
  sub_1DA66C5C8();
  swift_release();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B720);
  sub_1DA66C358();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B710);
  sub_1DA4841D4(&qword_1F026B728, &qword_1F026B720, MEMORY[0x1E0DEAF48]);
  sub_1DA4841D4(&qword_1F026B708, &qword_1F026B710, MEMORY[0x1E0CDFCC0]);
  sub_1DA47E32C(&qword_1F026B730, type metadata accessor for TTMLFile, (uint64_t)"%");
  return sub_1DA66E968();
}

uint64_t sub_1DA58A484()
{
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F026B6E0, type metadata accessor for TranscriptDebugController, (uint64_t)&unk_1DA67E1B4);
  sub_1DA66C5C8();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA58A50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTMLFile(0);
  v8 = sub_1DA66C31C();
  v10 = v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_ttmlAssetURL);
  sub_1DA66C304();

  sub_1DA66C31C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = sub_1DA66F958();
  swift_bridgeObjectRelease();
  v13 = sub_1DA58BF28(v12, v8, v10);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x1DF09E2FC](v13, v15, v17, v19);
  v22 = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = sub_1DA66E530();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B738);
  sub_1DA58A69C(v20, v22, a1, a2 + *(int *)(v23 + 44));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA58A69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a3;
  v29 = sub_1DA66C358();
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B740);
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v32 = a1;
  v33 = a2;
  sub_1DA498918();
  swift_bridgeObjectRetain();
  v16 = sub_1DA66E734();
  v18 = v17;
  v28 = v19;
  v21 = v20 & 1;
  v22 = type metadata accessor for TTMLFile(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v30 + *(int *)(v22 + 20), v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6C0);
  sub_1DA4841D4(&qword_1F026B6C8, &qword_1F026B6C0, MEMORY[0x1E0CDF8C8]);
  sub_1DA66E9A4();
  v23 = v31;
  v24 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v24(v12, v15, v10);
  *(_QWORD *)a4 = v16;
  *(_QWORD *)(a4 + 8) = v18;
  *(_BYTE *)(a4 + 16) = v21;
  *(_QWORD *)(a4 + 24) = v28;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B748);
  v24((char *)(a4 + *(int *)(v25 + 48)), v12, v10);
  sub_1DA525244(v16, v18, v21);
  v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  swift_bridgeObjectRetain();
  v26(v15, v10);
  v26(v12, v10);
  sub_1DA5251EC(v16, v18, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA58A8DC()
{
  return sub_1DA66E8B4();
}

double sub_1DA58A918@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x74726F707845;
  *(_OWORD *)a1 = xmmword_1DA67E020;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1DA58A938@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66E8A8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA58A978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1DA66E59C();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4F0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66E584();
  sub_1DA58C268();
  sub_1DA66E374();
  v5 = sub_1DA4841D4(&qword_1F026B4F8, &qword_1F026B4F0, MEMORY[0x1E0CD8918]);
  MEMORY[0x1DF09CF88](v4, v1, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1DA58AA98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA58AAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(unint64_t, char *, uint64_t);
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t KeyPath;
  int64_t v61;
  int64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  id v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  int64_t v77;
  unint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;

  v79 = 0;
  v0 = type metadata accessor for TTMLFile(0);
  v81 = *(_QWORD *)(v0 - 8);
  v82 = v0;
  MEMORY[0x1E0C80A78](v0);
  v83 = (uint64_t)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6D0);
  MEMORY[0x1E0C80A78](v2);
  v73 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66C1B4();
  v71 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66C244();
  v75 = *(_QWORD *)(v9 - 8);
  v76 = (char *)v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v80 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v66 = (char *)&v63 - v16;
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v63 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - v20;
  v22 = objc_msgSend((id)objc_opt_self(), sel_ttmlAssetURL);
  sub_1DA66C304();

  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6D8);
  v24 = swift_allocObject();
  v69 = xmmword_1DA678510;
  *(_OWORD *)(v24 + 16) = xmmword_1DA678510;
  v25 = (void *)*MEMORY[0x1E0C99A18];
  *(_QWORD *)(v24 + 32) = *MEMORY[0x1E0C99A18];
  v68 = v25;
  v26 = sub_1DA66FD84();

  swift_bridgeObjectRelease();
  v27 = (void *)v26;
  v28 = MEMORY[0x1E0DEE9D8];
  if (v27)
  {
    v72 = v27;
    sub_1DA66FD60();
    sub_1DA66C238();
    if (v85)
    {
      v65 = v4;
      v78 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v29 = swift_dynamicCast();
        v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
        if (!v29)
          break;
        v30(v8, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
          goto LABEL_9;
        v64 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v64(v74, v8, v12);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v69;
        v32 = v68;
        *(_QWORD *)(inited + 32) = v68;
        v33 = v32;
        sub_1DA5CDE0C(inited);
        swift_setDeallocating();
        type metadata accessor for URLResourceKey(0);
        swift_arrayDestroy();
        v34 = v79;
        sub_1DA66C2A4();
        v79 = v34;
        if (v34)
        {

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v73, 1, 1, v65);
          v79 = 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          v37 = v71;
          v38 = v73;
          v39 = v65;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v65);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v38, 1, v39) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v67, v73, v39);
            v40 = sub_1DA66C1A8();
            v28 = MEMORY[0x1E0DEE9D8];
            if (v40 == 2)
            {
              (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v39);
            }
            else
            {
              if ((v40 & 1) != 0)
              {
                (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v66, v74, v12);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v78 = sub_1DA540304(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
                v41 = (void (*)(unint64_t, char *, uint64_t))v64;
                v43 = *(_QWORD *)(v78 + 16);
                v42 = *(_QWORD *)(v78 + 24);
                v44 = v43 + 1;
                if (v43 >= v42 >> 1)
                {
                  v63 = v43 + 1;
                  v46 = sub_1DA540304(v42 > 1, v44, 1, v78);
                  v41 = (void (*)(unint64_t, char *, uint64_t))v64;
                  v44 = v63;
                  v78 = v46;
                }
                v45 = v78;
                *(_QWORD *)(v78 + 16) = v44;
                v41(v45+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v43, v66, v12);
              }
              (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v65);
            }
            (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
            goto LABEL_11;
          }
        }
        v28 = MEMORY[0x1E0DEE9D8];
        (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
        v35 = (uint64_t)v73;
        v36 = &qword_1F026B6D0;
LABEL_10:
        sub_1DA47E2F0(v35, v36);
LABEL_11:
        sub_1DA66C238();
        if (!v85)
          goto LABEL_27;
      }
      v30(v8, 1, 1, v12);
LABEL_9:
      v35 = (uint64_t)v8;
      v36 = &qword_1EDAE5020;
      goto LABEL_10;
    }
    v78 = MEMORY[0x1E0DEE9D8];
LABEL_27:
    (*(void (**)(char *, char *))(v75 + 8))(v11, v76);

    v47 = v78;
  }
  else
  {
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v48 = *(_QWORD *)(v47 + 16);
  v49 = v83;
  if (v48)
  {
    v76 = v21;
    v84 = v28;
    swift_bridgeObjectRetain();
    sub_1DA509F60(0, v48, 0);
    v50 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v78 = v47;
    v51 = v47 + v50;
    v52 = *(_QWORD *)(v13 + 72);
    v53 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    v54 = v13;
    do
    {
      v55 = v80;
      v53(v80, v51, v12);
      v56 = v49 + *(int *)(v82 + 20);
      v53((char *)v56, (unint64_t)v55, v12);
      v53((char *)v49, v56, v12);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v55, v12);
      v57 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DA509F60(0, *(_QWORD *)(v57 + 16) + 1, 1);
        v57 = v84;
      }
      v59 = *(_QWORD *)(v57 + 16);
      v58 = *(_QWORD *)(v57 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_1DA509F60(v58 > 1, v59 + 1, 1);
        v57 = v84;
      }
      *(_QWORD *)(v57 + 16) = v59 + 1;
      v49 = v83;
      sub_1DA58BEC8(v83, v57+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v59);
      v51 += v52;
      --v48;
      v13 = v54;
    }
    while (v48);
    swift_bridgeObjectRelease_n();
    v21 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    v57 = MEMORY[0x1E0DEE9D8];
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  v61 = v77;
  *(&v63 - 2) = v77;
  *(&v63 - 1) = v57;
  v84 = v61;
  sub_1DA47E32C(&qword_1F026B6E0, type metadata accessor for TranscriptDebugController, (uint64_t)&unk_1DA67E1B4);
  sub_1DA66C5BC();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v21, v12);
}

uint64_t sub_1DA58B35C()
{
  return sub_1DA66E8B4();
}

double sub_1DA58B398@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 3.36131165e160;
  *(_OWORD *)a1 = xmmword_1DA67E030;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1DA58B3B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66E8A8();
  *a1 = result;
  return result;
}

uint64_t sub_1DA58B400()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6B8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v4 = v0[1];
  sub_1DA66E320();
  v6 = sub_1DA66E338();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 0, 1, v6);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v4;
  sub_1DA66BE60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B6C0);
  sub_1DA4841D4(&qword_1F026B6C8, &qword_1F026B6C0, MEMORY[0x1E0CDF8C8]);
  return sub_1DA66E8FC();
}

uint64_t sub_1DA58B514@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v14;
  uint64_t (*v15)(char *, uint64_t);
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v17[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B4D0);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4D8);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4E0);
  v10 = sub_1DA4841D4(&qword_1F026B4E8, &qword_1F026B4D8, MEMORY[0x1E0CDD950]);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B4F0);
  v12 = sub_1DA4841D4(&qword_1F026B4F8, &qword_1F026B4F0, MEMORY[0x1E0CD8918]);
  v18 = v11;
  v19 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v21 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1DA66E41C();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a1, v6, v3);
  v14 = (_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026B500) + 36));
  *v14 = sub_1DA58C2E4;
  v14[1] = v7;
  v14[2] = 0;
  v14[3] = 0;
  v15 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  sub_1DA66BE60();
  return v15(v6, v3);
}

uint64_t type metadata accessor for TranscriptDebugHostingController(uint64_t a1)
{
  return sub_1DA48EED8(a1, (uint64_t *)&unk_1F026B508);
}

uint64_t sub_1DA58B6C8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for TranscriptDebugHostingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptDebugHostingController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for TranscriptDebugHostingController))();
}

uint64_t sub_1DA58B720()
{
  return type metadata accessor for TranscriptDebugHostingController(0);
}

ValueMetadata *type metadata accessor for TranscriptDebugView()
{
  return &type metadata for TranscriptDebugView;
}

uint64_t sub_1DA58B738@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F026B6E0, type metadata accessor for TranscriptDebugController, (uint64_t)&unk_1DA67E1B4);
  sub_1DA66C5C8();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA58B7C8()
{
  swift_getKeyPath();
  sub_1DA47E32C(&qword_1F026B6E0, type metadata accessor for TranscriptDebugController, (uint64_t)&unk_1DA67E1B4);
  swift_bridgeObjectRetain();
  sub_1DA66C5BC();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA58B880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtC10PodcastsUIP33_C2298B4EC2F2150C0FA223D0448F478325TranscriptDebugController___observationRegistrar;
  v2 = sub_1DA66C5E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA58B8D8()
{
  return type metadata accessor for TranscriptDebugController(0);
}

uint64_t sub_1DA58B8E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66C5E0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1DA58B960()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1F026B610;
  if (!qword_1F026B610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B500);
    v2[0] = sub_1DA4841D4(qword_1F026B618, &qword_1F026B4C8, MEMORY[0x1E0CD94D0]);
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1F026B610);
  }
  return result;
}

_QWORD *assignWithCopy for TranscriptDebugView.ClearCacheButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1DA66BE60();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TranscriptDebugView.ClearCacheButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptDebugView.ClearCacheButton()
{
  return &type metadata for TranscriptDebugView.ClearCacheButton;
}

uint64_t *sub_1DA58BA5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66C358();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1DA58BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1DA66C358();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_1DA58BB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1DA66C358();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1DA58BBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1DA66C358();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1DA58BC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1DA66C358();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1DA58BCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1DA66C358();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1DA58BD20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1DA58BD68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58BD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTMLFile(uint64_t a1)
{
  return sub_1DA48EED8(a1, qword_1F026B678);
}

uint64_t sub_1DA58BDC8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66C358();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA58BE30()
{
  return sub_1DA47E32C(&qword_1F026B6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
}

uint64_t sub_1DA58BE5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1DA58BE94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA58BEA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA58BEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTMLFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA58BF14()
{
  return sub_1DA58C118();
}

unint64_t sub_1DA58BF28(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1DA66F970();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1DA66FA24();
  }
  __break(1u);
  return result;
}

void sub_1DA58BFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1DA66C358();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v5 = objc_msgSend((id)objc_opt_self(), sel_ttmlAssetURL);
  sub_1DA66C304();

  v6 = (void *)sub_1DA66C2C8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11[0] = 0;
  LODWORD(v3) = objc_msgSend(v4, sel_removeItemAtURL_error_, v6, v11);

  v7 = v11[0];
  if (!(_DWORD)v3)
  {
    v8 = v7;
    v9 = (void *)sub_1DA66C1FC();

    swift_willThrow();
  }
}

uint64_t sub_1DA58C118()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA58C150()
{
  return sub_1DA58A294();
}

unint64_t sub_1DA58C158()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = qword_1F026B6F0;
  if (!qword_1F026B6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B6E8);
    v2 = sub_1DA58C1D0();
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    v3[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFF98], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1F026B6F0);
  }
  return result;
}

unint64_t sub_1DA58C1D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1F026B6F8;
  if (!qword_1F026B6F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026B700);
    v2 = sub_1DA4841D4(&qword_1F026B708, &qword_1F026B710, MEMORY[0x1E0CDFCC0]);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1F026B6F8);
  }
  return result;
}

uint64_t sub_1DA58C24C()
{
  return sub_1DA58A978();
}

uint64_t sub_1DA58C254@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = sub_1DA58C2AC;
  a1[1] = v1;
  return sub_1DA66BE60();
}

unint64_t sub_1DA58C268()
{
  unint64_t result;

  result = qword_1F026B718;
  if (!qword_1F026B718)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67E164, &type metadata for TranscriptDebugView.ClearCacheButton);
    atomic_store(result, (unint64_t *)&qword_1F026B718);
  }
  return result;
}

uint64_t sub_1DA58C2B0()
{
  return sub_1DA58A334();
}

uint64_t sub_1DA58C2B8()
{
  return sub_1DA4841D4(&qword_1F026B750, &qword_1F026B758, MEMORY[0x1E0CDFA58]);
}

uint64_t CGFloat.roundInteger.getter(double a1)
{
  float v1;

  v1 = round(a1);
  return lrintf(v1);
}

uint64_t CGFloat.ceilingInteger.getter(double a1)
{
  float v1;

  v1 = ceil(a1);
  return lrintf(v1);
}

uint64_t CGFloat.floorInteger.getter(double a1)
{
  float v1;

  v1 = floor(a1);
  return lrintf(v1);
}

BOOL sub_1DA58C310(double *a1, double *a2)
{
  return _s12CoreGraphics7CGFloatV10PodcastsUIE3eetoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_1DA58C31C(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA58C340();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA58C340()
{
  unint64_t result;

  result = qword_1F026B760;
  if (!qword_1F026B760)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEF070], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1F026B760);
  }
  return result;
}

unint64_t sub_1DA58C384(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1DA58C3B0();
  result = sub_1DA58C3F4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DA58C3B0()
{
  unint64_t result;

  result = qword_1F026B768;
  if (!qword_1F026B768)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for CGFloat, MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1F026B768);
  }
  return result;
}

unint64_t sub_1DA58C3F4()
{
  unint64_t result;

  result = qword_1F026B770;
  if (!qword_1F026B770)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEF068], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1F026B770);
  }
  return result;
}

uint64_t AcceptDanglingDownloadsAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AcceptDanglingDownloadsAction.episodesToIgnore.getter()
{
  type metadata accessor for AcceptDanglingDownloadsAction();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AcceptDanglingDownloadsAction()
{
  uint64_t result;

  result = qword_1F026B7D0;
  if (!qword_1F026B7D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AcceptDanglingDownloadsAction.init(actionMetrics:episodesToIgnore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for AcceptDanglingDownloadsAction();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AcceptDanglingDownloadsAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58C534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AcceptDanglingDownloadsAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58C5BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t ObjCArtworkProvider.areRepresentationsAvailable(for:)()
{
  return 1;
}

uint64_t ObjCArtworkProvider.isRepresentation(_:bestRepresentationFor:)()
{
  return 1;
}

id ObjCArtworkProvider.existingRepresentation(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  char v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;

  v2 = sub_1DA66CEBC();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PreparedArtworkRequest();
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66C358();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA58D7B4(a1);
  if (!v15)
    return 0;
  v16 = (uint64_t)v14;
  v17 = v15;
  v34 = v2;
  objc_msgSend(a1, sel_scaledFittingSize);
  if (v19 == *MEMORY[0x1E0CC1D20] && v18 == *(double *)(MEMORY[0x1E0CC1D20] + 8))
  {
    v22 = *MEMORY[0x1E0D7F348];
    v24 = *MEMORY[0x1E0D7F348];
  }
  else
  {
    objc_msgSend(a1, sel_scaledFittingSize);
    v22 = v21;
    v24 = v23;
  }
  sub_1DA66C334();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DA4ED9D4((uint64_t)v9);
LABEL_13:
    sub_1DA573098(v16, v17, (uint64_t)v4);
    v27 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v4, v34);
    sub_1DA4ED950();
    sub_1DA66CF04();
    sub_1DA4ED998(v27);
    v28 = v37;
    v29 = objc_allocWithZone(MEMORY[0x1E0D7F290]);
    v30 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v29, sel_initWithArtworkIdentifier_, v30);

    v25 = objc_msgSend((id)objc_opt_self(), sel_representationForVisualIdentity_withSize_image_, v31, v28, v22, v24);
    return v25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v26 = sub_1DA66C25C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v26 & 1) == 0)
    goto LABEL_13;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ObjCArtworkProvider.loadRepresentation(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = v1;
  v3 = sub_1DA66CEBC();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v2[13] = swift_task_alloc();
  v4 = sub_1DA66C358();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA58CA64()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v8;
  double v9;
  double v10;
  double v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v1 = sub_1DA58D7B4(*(void **)(v0 + 64));
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = v2;
  if (!v2)
  {
    sub_1DA58D8B0();
    swift_allocError();
    *v12 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (uint64_t)v1;
  v4 = v2;
  objc_msgSend(*(id *)(v0 + 64), sel_scaledFittingSize);
  if (v6 == *MEMORY[0x1E0CC1D20] && v5 == *(double *)(MEMORY[0x1E0CC1D20] + 8))
  {
    v9 = *MEMORY[0x1E0D7F348];
    v11 = *MEMORY[0x1E0D7F348];
  }
  else
  {
    objc_msgSend(*(id *)(v0 + 64), sel_scaledFittingSize);
    v9 = v8;
    v11 = v10;
  }
  *(double *)(v0 + 152) = v9;
  *(double *)(v0 + 160) = v11;
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  sub_1DA66C334();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    sub_1DA4ED9D4(*(_QWORD *)(v0 + 104));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    if ((sub_1DA66C25C() & 1) != 0)
    {
      v17 = *(_QWORD *)(v0 + 72);
      sub_1DA58D04C();
      v18 = (_QWORD *)(v17 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider);
      v20 = *(_QWORD *)(v17 + OBJC_IVAR___PUIObjCArtworkProvider_backingProvider + 24);
      v19 = v18[4];
      __swift_project_boxed_opaque_existential_1(v18, v20);
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v21;
      *v21 = v0;
      v21[1] = sub_1DA58CCA0;
      return ImageProvider.load(request:)(*(_QWORD *)(v0 + 96), v20, v19);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  }
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v22;
  *v22 = v0;
  v22[1] = sub_1DA58CE38;
  return sub_1DA56F67C(v3, v4, v9, v11);
}

uint64_t sub_1DA58CCA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v3[22] = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1DA58CD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 24);
  v6 = *(double *)(v0 + 152);
  v5 = *(double *)(v0 + 160);
  v7 = objc_allocWithZone(MEMORY[0x1E0D7F290]);
  v8 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithArtworkIdentifier_, v8);

  v10 = objc_msgSend((id)objc_opt_self(), sel_representationForVisualIdentity_withSize_image_, v9, v4, v6, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_1DA58CE38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = v1;
  v4 = (_QWORD *)*v2;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v4[1])();
}

uint64_t sub_1DA58CED8()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = *(void **)(v0 + 48);
  v3 = *(double *)(v0 + 152);
  v2 = *(double *)(v0 + 160);
  v4 = objc_allocWithZone(MEMORY[0x1E0D7F290]);
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithArtworkIdentifier_, v5);

  v7 = objc_msgSend((id)objc_opt_self(), sel_representationForVisualIdentity_withSize_image_, v6, v1, v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

uint64_t sub_1DA58CFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA58D04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[25];

  v0 = sub_1DA66D5C4();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v5);
  sub_1DA66C298();
  v10 = xmmword_1DA67D4C0;
  v11 = 0u;
  memset(v12, 0, sizeof(v12));
  sub_1DA66C904();
  sub_1DA66CC1C();
  sub_1DA66CA00();
  v6 = sub_1DA66DD14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1DA66D5AC();
  return sub_1DA66CE5C();
}

uint64_t sub_1DA58D3A8(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_1DA571BF4;
  return ObjCArtworkProvider.loadRepresentation(for:)((uint64_t)v6);
}

id ObjCArtworkProvider.visualIdenticalityIdentifier(for:)(void *a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;

  sub_1DA58D7B4(a1);
  v2 = v1;
  if (v1)
  {
    v3 = objc_allocWithZone(MEMORY[0x1E0D7F290]);
    v4 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v2 = objc_msgSend(v3, sel_initWithArtworkIdentifier_, v4);

  }
  return v2;
}

double ObjCArtworkProvider.existingArtworkEffectResult(for:catalog:options:)@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  id v6;
  double result;
  uint64_t v8;

  if (a1 == 1 && (v4 = sub_1DA58D920(a2)) != 0)
  {
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC2490]), sel_init);
    objc_msgSend(v6, sel_setBackgroundColor_, v5);
    a3[3] = sub_1DA58DA40();

    *a3 = (uint64_t)v6;
  }
  else
  {
    a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5130);
    v8 = swift_allocObject();
    *a3 = v8;
    result = 0.0;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
  }
  return result;
}

uint64_t sub_1DA58D70C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1DA4A9520;
  return v6();
}

uint64_t sub_1DA58D760(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1DA4A9520;
  return v7();
}

void *sub_1DA58D7B4(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = objc_msgSend(a1, sel_token);
  sub_1DA670360();
  swift_unknownObjectRelease();
  if (swift_dynamicCast())
    return v6;
  v4 = objc_msgSend(a1, sel_token);
  sub_1DA670360();
  swift_unknownObjectRelease();
  sub_1DA66C754();
  if (!swift_dynamicCast())
    return 0;
  v3 = sub_1DA66C748();

  return (void *)v3;
}

unint64_t sub_1DA58D8B0()
{
  unint64_t result;

  result = qword_1F026B818;
  if (!qword_1F026B818)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7D500], MEMORY[0x1E0D7D4F8]);
    atomic_store(result, (unint64_t *)&qword_1F026B818);
  }
  return result;
}

uint64_t sub_1DA58D8F4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

id sub_1DA58D920(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v8;

  v2 = objc_msgSend(a1, sel_token);
  sub_1DA670360();
  swift_unknownObjectRelease();
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v3 = objc_msgSend(a1, sel_token);
  sub_1DA670360();
  swift_unknownObjectRelease();
  sub_1DA66C754();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v4 = sub_1DA66C73C();
  if (!v4)
  {

    return 0;
  }
  v5 = (void *)v4;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, v4);

  return v6;
}

unint64_t sub_1DA58DA40()
{
  unint64_t result;

  result = qword_1F026B828;
  if (!qword_1F026B828)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F026B828);
  }
  return result;
}

uint64_t sub_1DA58DA7C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1DA58DAB0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1DA4AD77C;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1F026B898 + dword_1F026B898))(v2, v3, v4);
}

uint64_t CachingImageContentProvider.init(asPartOf:priority:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  MEMORY[0x1E0C80A78](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1DA4EB11C(a2, (uint64_t)&v11 - v7);
  sub_1DA66EDDC();
  sub_1DA58DCB4();
  sub_1DA66C934();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE41E8);
  sub_1DA66EDDC();
  sub_1DA486298();
  sub_1DA66FE44();
  sub_1DA66DA5C();
  swift_release();
  v9 = sub_1DA66D5C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a2, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_1DA58DCB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE4160;
  if (!qword_1EDAE4160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDAE4170);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7DC20], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE4160);
  }
  return result;
}

uint64_t RestorePurgedEpisodesTip.init(cacheDeletedEpisodes:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t RestorePurgedEpisodesTip.cacheDeletedEpisodes.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t RestorePurgedEpisodesTip.iconIdentifier.getter()
{
  return 0xD000000000000038;
}

uint64_t RestorePurgedEpisodesTip.localizedTitle.getter()
{
  return sub_1DA66D2F4();
}

uint64_t RestorePurgedEpisodesTip.localizedMessage.getter()
{
  return sub_1DA66D2F4();
}

_OWORD *RestorePurgedEpisodesTip.actions.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  _BYTE v19[48];
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB70);
  v2 = (_OWORD *)swift_allocObject();
  v2[1] = xmmword_1DA678FE0;
  v3 = type metadata accessor for RestorePurgedEpisodesAction();
  v21 = v3;
  v22 = sub_1DA47E32C((unint64_t *)&qword_1F026B470, (uint64_t (*)(uint64_t))type metadata accessor for RestorePurgedEpisodesAction, (uint64_t)&protocol conformance descriptor for RestorePurgedEpisodesAction);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  swift_bridgeObjectRetain();
  sub_1DA66ED4C();
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v3 + 20)) = v1;
  v5 = sub_1DA66D2F4();
  v7 = v6;
  sub_1DA4813E4((uint64_t)v20, (uint64_t)&v17);
  *(_QWORD *)&v19[8] = v5;
  *(_QWORD *)&v19[16] = v7;
  *(_QWORD *)&v19[24] = 0xD000000000000015;
  *(_QWORD *)&v19[32] = 0x80000001DA689E00;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
  sub_1DA5329A0();
  LOBYTE(v5) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    v8 = 2;
  else
    v8 = 0;
  *(_QWORD *)&v19[40] = v8;
  v9 = *(_OWORD *)&v19[16];
  v2[4] = *(_OWORD *)v19;
  v2[5] = v9;
  v10 = v18;
  v2[2] = v17;
  v2[3] = v10;
  v2[6] = *(_OWORD *)&v19[32];
  v11 = type metadata accessor for DismissPurgedEpisodesAction();
  v21 = v11;
  v22 = sub_1DA47E32C((unint64_t *)&qword_1F026B8C0, (uint64_t (*)(uint64_t))type metadata accessor for DismissPurgedEpisodesAction, (uint64_t)&protocol conformance descriptor for DismissPurgedEpisodesAction);
  v12 = __swift_allocate_boxed_opaque_existential_1(v20);
  swift_bridgeObjectRetain();
  sub_1DA66ED4C();
  *(uint64_t *)((char *)v12 + *(int *)(v11 + 20)) = v1;
  sub_1DA4813E4((uint64_t)v20, (uint64_t)&v17);
  memset(&v19[8], 0, 32);
  LOBYTE(v11) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    v13 = 2;
  else
    v13 = 0;
  *(_QWORD *)&v19[40] = v13;
  v14 = *(_OWORD *)&v19[16];
  v2[9] = *(_OWORD *)v19;
  v2[10] = v14;
  v15 = v18;
  v2[7] = v17;
  v2[8] = v15;
  v2[11] = *(_OWORD *)&v19[32];
  return v2;
}

void RestorePurgedEpisodesTip.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

unint64_t sub_1DA58DFF0()
{
  return 0xD000000000000038;
}

uint64_t sub_1DA58E00C()
{
  return sub_1DA66D2F4();
}

uint64_t sub_1DA58E044()
{
  return sub_1DA66D2F4();
}

void sub_1DA58E080(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

ValueMetadata *type metadata accessor for RestorePurgedEpisodesTip()
{
  return &type metadata for RestorePurgedEpisodesTip;
}

uint64_t *assignWithCopy for JSPackage(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSPackage(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for JSPackage()
{
  return &type metadata for JSPackage;
}

int *FollowFeedIntent.init(rssFeedURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *result;
  uint64_t v7;
  _QWORD *v8;

  v4 = sub_1DA66C358();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  result = (int *)type metadata accessor for FollowFeedIntent();
  v7 = a2 + result[5];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = (_QWORD *)(a2 + result[6]);
  *v8 = 0;
  v8[1] = 0;
  *(_BYTE *)(a2 + result[7]) = 0;
  return result;
}

int *FollowFeedIntent.init(feedURL:adamID:location:contentRating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v12;
  int *result;
  uint64_t v14;
  _QWORD *v15;

  v12 = a6 & 1;
  sub_1DA49B0AC(a1, a7);
  result = (int *)type metadata accessor for FollowFeedIntent();
  v14 = a7 + result[5];
  *(_QWORD *)v14 = a2;
  *(_BYTE *)(v14 + 8) = a3 & 1;
  v15 = (_QWORD *)(a7 + result[6]);
  *v15 = a4;
  v15[1] = a5;
  *(_BYTE *)(a7 + result[7]) = v12;
  return result;
}

uint64_t type metadata accessor for FollowFeedIntent()
{
  uint64_t result;

  result = qword_1EDAE3BE0;
  if (!qword_1EDAE3BE0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t static FollowFeedIntent.kind.getter()
{
  return 0xD000000000000010;
}

uint64_t FollowFeedIntent.feedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4B2F78(v1, a1);
}

uint64_t FollowFeedIntent.adamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FollowFeedIntent() + 20));
}

uint64_t FollowFeedIntent.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FollowFeedIntent() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FollowFeedIntent.contentRating.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FollowFeedIntent() + 28));
}

void sub_1DA58E3BC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001DA67E310;
}

BOOL static IntentFeedSubscriptionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IntentFeedSubscriptionError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t IntentFeedSubscriptionError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA58E464()
{
  unint64_t result;

  result = qword_1F026B8C8;
  if (!qword_1F026B8C8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for IntentFeedSubscriptionError, &type metadata for IntentFeedSubscriptionError);
    atomic_store(result, (unint64_t *)&qword_1F026B8C8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FollowFeedIntent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66C358();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = (uint64_t *)((char *)a1 + v12);
    v16 = (uint64_t *)((char *)a2 + v12);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FollowFeedIntent(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1DA66C358();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FollowFeedIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = &a1[v10];
  v14 = &a2[v10];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  a1[a3[7]] = a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FollowFeedIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for FollowFeedIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithTake for FollowFeedIntent(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DA66C358();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = a3[6];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowFeedIntent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58EA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowFeedIntent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA58EB2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_1DA58EBAC()
{
  unint64_t v0;

  sub_1DA4B2FC0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for IntentFeedSubscriptionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA58EC7C + 4 * byte_1DA67E325[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA58ECB0 + 4 * asc_1DA67E320[v4]))();
}

uint64_t sub_1DA58ECB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA58ECB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA58ECC0);
  return result;
}

uint64_t sub_1DA58ECCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA58ECD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA58ECD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA58ECE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntentFeedSubscriptionError()
{
  return &type metadata for IntentFeedSubscriptionError;
}

uint64_t ColumnSpan.columns.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ColumnSpan.columns.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ColumnSpan.columns.modify())()
{
  return nullsub_1;
}

uint64_t ColumnSpan.span.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ColumnSpan.span.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ColumnSpan.span.modify())()
{
  return nullsub_1;
}

PodcastsUI::ColumnSpan __swiftcall ColumnSpan.init(integerLiteral:)(Swift::Int integerLiteral)
{
  Swift::Int *v1;
  PodcastsUI::ColumnSpan result;

  *v1 = integerLiteral;
  v1[1] = 1;
  result.columns = integerLiteral;
  return result;
}

uint64_t sub_1DA58ED48()
{
  return MEMORY[0x1E0DEB488];
}

_QWORD *sub_1DA58ED54@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  a2[1] = 1;
  return result;
}

ValueMetadata *type metadata accessor for ColumnSpan()
{
  return &type metadata for ColumnSpan;
}

uint64_t static InterpolateFloats.linearly<A>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a3;
  v26 = a1;
  v27 = a2;
  v28 = a6;
  v24[1] = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v24 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v24 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v24 - v19;
  swift_getAssociatedConformanceWitness();
  sub_1DA670720();
  sub_1DA6706B4();
  v21 = v25;
  sub_1DA670594();
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v17, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v21, a4);
  sub_1DA66FCB8();
  sub_1DA66FCB8();
  sub_1DA670588();
  v22(v11, a4);
  v22(v14, a4);
  v22(v17, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, a4);
}

uint64_t static InterpolateFloats.byEasingInQuadradtic<A>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66FCB8();
  static InterpolateFloats.linearly<A>(_:_:_:)(a1, a2, (uint64_t)v12, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a3);
}

uint64_t static InterpolateFloats.byEasingOutQuadradtic<A>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a4;
  v22 = a2;
  v19 = a5;
  v20 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - v15;
  swift_getAssociatedConformanceWitness();
  sub_1DA670720();
  sub_1DA6706B4();
  sub_1DA670594();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, a3);
  sub_1DA66FCB8();
  v17(v13, a3);
  static InterpolateFloats.linearly<A>(_:_:_:)(v20, v22, (uint64_t)v16, a3, v21, v19);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, a3);
}

uint64_t static InterpolateFloats.byEasingInOutQuadradtic<A>(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char v30;
  uint64_t AssociatedConformanceWitness;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v50 = a3;
  v46 = a1;
  v47 = a2;
  v45 = a6;
  v43 = *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8);
  v8 = *(_QWORD *)(v43 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v37 - v12;
  v13 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v40 = (char *)&v37 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v37 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v37 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v37 - v25;
  MEMORY[0x1E0C80A78](v27);
  v41 = (char *)&v37 - v28;
  sub_1DA66F7E4();
  sub_1DA66F7E4();
  sub_1DA66F7D8();
  v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v20, a4);
  v29(v23, a4);
  v44 = a5;
  v42 = v26;
  v30 = sub_1DA66F844();
  v48 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((v30 & 1) != 0)
  {
    sub_1DA670720();
    sub_1DA6706B4();
    sub_1DA66FCB8();
    v29(v20, a4);
    v32 = (uint64_t)v41;
    sub_1DA66FCB8();
  }
  else
  {
    v37 = AssociatedConformanceWitness;
    sub_1DA670720();
    sub_1DA6706B4();
    sub_1DA670720();
    v33 = v38;
    sub_1DA6706B4();
    v34 = v40;
    v35 = v43;
    sub_1DA66FCB8();
    v29(v33, a4);
    v39 = *(char **)(v35 + 8);
    sub_1DA670594();
    v29(v34, a4);
    v29(v20, a4);
    sub_1DA670720();
    sub_1DA6706B4();
    sub_1DA66FCB8();
    v32 = (uint64_t)v41;
    sub_1DA670588();
    v29(v34, a4);
    v29(v20, a4);
  }
  v29(v23, a4);
  static InterpolateFloats.linearly<A>(_:_:_:)(v46, v47, v32, a4, v44, v45);
  v29(v42, a4);
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v32, a4);
}

uint64_t sub_1DA58F6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

ValueMetadata *type metadata accessor for InterpolateFloats()
{
  return &type metadata for InterpolateFloats;
}

uint64_t SynchronizedEpisodeStateDataSource.performExpectedEpisodeStateUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = sub_1DA66E9C8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 24))(a3, a4, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00D8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DA678510;
  sub_1DA66E9BC();
  v19 = v14;
  sub_1DA4F719C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  sub_1DA670378();
  v17 = a1;
  v18 = a2;
  sub_1DA66FED4();

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
}

void SynchronizedEpisodeStateDataSource.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;

  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  swift_getAssociatedTypeWitness();
  sub_1DA670294();
  sub_1DA66FEE0();

}

uint64_t sub_1DA58F8E8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1DA58F910()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DA58F938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  unint64_t v11;
  _QWORD v13[2];
  char v14;

  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  v13[0] = a2;
  v13[1] = a3;
  a4 &= 1u;
  v14 = a4;
  sub_1DA5242E8(a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1DA58FA58();
  MEMORY[0x1DF09E1A0](v13, v9, MEMORY[0x1E0D7E7A8], AssociatedTypeWitness, v11);
  swift_bridgeObjectRelease();
  return sub_1DA5242F8(a2, a3, a4);
}

uint64_t sub_1DA58FA24()
{
  uint64_t v0;

  return sub_1DA58F938(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t dispatch thunk of SynchronizedEpisodeStateDataSource.expectedEpisodeStates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SynchronizedEpisodeStateDataSource.accessQueue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unint64_t sub_1DA58FA58()
{
  unint64_t result;

  result = qword_1EDADED80;
  if (!qword_1EDADED80)
  {
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D7E7B0], MEMORY[0x1E0D7E7A8]);
    atomic_store(result, (unint64_t *)&qword_1EDADED80);
  }
  return result;
}

uint64_t InterestStateController.init(asPartOf:)()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  sub_1DA66DB94();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_1DA66DB88();
  sub_1DA66BE60();
  v0 = sub_1DA66D804();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DA58FB54(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DA66FF4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DA678510;
  v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  v4 = sub_1DA66F904();
  v6 = v5;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1DA486218();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  sub_1DA66DD44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA58FC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66DD74();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DA58FCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66DD74();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1DA58FD50(void *a1)
{
  sub_1DA66DD74();
  return sub_1DA58FB54(a1);
}

void *ContentID.managedObjectID.getter(void *a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;

  if (a3 != 2)
    return 0;
  v3 = a1;
  v4 = a1;
  return v3;
}

uint64_t ContentID.uuidString.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != 1)
    return 0;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ContentID.adamID.getter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3)
    return 0;
  return result;
}

uint64_t static ContentID.from(ambiguousID:entityName:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA58FE48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  swift_bridgeObjectRetain();
  v1 = sub_1DA66DCCC();
  swift_bridgeObjectRelease();
  if ((sub_1DA66DCD8() & 1) == 0)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 8))(v1, 0, 0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_1DA58FF10;
  return sub_1DA5901C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1DA58FF10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA58FF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = 0;
    v3 = 2;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    v1 = *(_QWORD *)(v0 + 16);
    v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v1, v2, v3);
}

void sub_1DA58FFC0(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;

  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  sub_1DA47D774(0, (unint64_t *)&unk_1EDADE710);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DA678510;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1DA486218();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1DA66FD48();
  objc_msgSend(v9, sel_setPredicate_, v11);

  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE4C00);
  v12 = sub_1DA670090();
  if (v3)
  {

    return;
  }
  v13 = v12;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (!v14)
      goto LABEL_9;
  }
  else
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
LABEL_9:
      swift_bridgeObjectRelease();

      *a3 = v14;
      return;
    }
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x1DF09EE48](0, v13);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v13 + 32);
LABEL_8:
    v14 = (uint64_t)v15;
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1DA5901C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_1DA66DEF4();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = sub_1DA670078();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = sub_1DA66FB98();
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  v8 = (_QWORD *)swift_task_alloc();
  v4[19] = v8;
  *v8 = v4;
  v8[1] = sub_1DA5902C0;
  return sub_1DA66EDD0();
}

uint64_t sub_1DA5902C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA590324()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[21] = v0[2];
  swift_getObjectType();
  sub_1DA4EE300();
  v1 = (_QWORD *)swift_task_alloc();
  v0[22] = v1;
  *v1 = v0;
  v1[1] = sub_1DA5903A4;
  return sub_1DA6700C0();
}

uint64_t sub_1DA5903A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1DA590428()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  _QWORD *v11;

  v1 = (void *)v0[23];
  v3 = v0[14];
  v2 = v0[15];
  v4 = v0[13];
  v6 = v0[8];
  v5 = v0[9];
  v8 = v0[6];
  v7 = v0[7];
  v9 = (_QWORD *)swift_allocObject();
  v0[24] = v9;
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = v8;
  v9[5] = v7;
  v9[6] = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0C977C0], v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v1;
  v11 = (_QWORD *)swift_task_alloc();
  v0[25] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B8E0);
  *v11 = v0;
  v11[1] = sub_1DA590534;
  return sub_1DA67009C();
}

uint64_t sub_1DA590534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1DA5905C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1DA590628()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = (void *)v0[20];
  sub_1DA66DE28();
  v3 = v2;
  v4 = v2;
  v5 = sub_1DA66DEDC();
  v6 = sub_1DA66FDA8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = v0[11];
    v17 = v0[10];
    v18 = v0[12];
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v19 = v9;
    v0[3] = v2;
    v10 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v11 = sub_1DA66F904();
    v0[4] = sub_1DA49AD00(v11, v12, &v19);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v5, v6, "Failed to fetch MOID: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v9, -1, -1);
    MEMORY[0x1DF0A0474](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v17);
  }
  else
  {
    v14 = v0[11];
    v13 = v0[12];
    v15 = v1[10];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v1[1])(0);
}

uint64_t sub_1DA590834()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 208);
  sub_1DA66DE28();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 96);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315138;
    v18 = v7;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    v9 = sub_1DA66F904();
    *(_QWORD *)(v0 + 32) = sub_1DA49AD00(v9, v10, &v18);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v4, v5, "Failed to fetch MOID: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v7, -1, -1);
    MEMORY[0x1DF0A0474](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA590A50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DA590A84(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1DA58FFC0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t MetricsFieldsContext.addValue<A>(_:forProperty:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v5 = sub_1DA670294();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, a3) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v8, a3);
  sub_1DA66F10C();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a3);
}

uint64_t MetricsFieldsContext.addingValue<A>(_:forProperty:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = sub_1DA670294();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(a2 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v16 = sub_1DA66F124();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a3, v3, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, a2);
    sub_1DA66F0E8();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, a2);
  }
}

uint64_t sub_1DA590D10()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  __swift_allocate_value_buffer(v0, qword_1EDAE4990);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE4990);
  type metadata accessor for ClickLocationTracker();
  return sub_1DA66F100();
}

uint64_t static MetricsFieldsContext.Property<A>.clickLocationTracker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA590E38(&qword_1EDAE49B0, &qword_1EDAE49E8, (uint64_t)qword_1EDAE4990, a1);
}

uint64_t sub_1DA590DA8()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F8);
  __swift_allocate_value_buffer(v0, qword_1EDAE49B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE49B8);
  return sub_1DA66F100();
}

uint64_t static MetricsFieldsContext.Property<A>.clickLocationUniqueID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA590E38(&qword_1EDAE49D8, &qword_1EDAE49F8, (uint64_t)qword_1EDAE49B8, a1);
}

uint64_t sub_1DA590E38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

_QWORD *MetricsFieldsContext.addChildClickLocation(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v6 = a1[6];
  v5 = a1[7];
  if (qword_1EDAE49B0 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAE4990);
  v9 = type metadata accessor for ClickLocationTracker();
  result = MEMORY[0x1DF09DB10](&v18, v8, v9);
  v11 = v18;
  if (v18)
  {
    if (qword_1EDAE49D8 != -1)
      swift_once();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F8);
    v17 = __swift_project_value_buffer(v12, (uint64_t)qword_1EDAE49B8);
    MEMORY[0x1DF09DB10](&v18, v17, MEMORY[0x1E0DEA968]);
    v13 = v18;
    v14 = v19;
    v18 = v2;
    v19 = v1;
    v20 = v4;
    v21 = v3;
    v22 = v13;
    v23 = v14;
    v24 = v6;
    v25 = v5;
    v15 = *(os_unfair_lock_s **)(v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = (uint64_t *)&v15[4];
    v15 += 6;
    os_unfair_lock_lock(v15);
    sub_1DA649A5C(v16, (uint64_t)&v18);
    os_unfair_lock_unlock(v15);
    if (!v3)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA66F10C();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
  return result;
}

_QWORD *MetricsFieldsContext.addSiblingClickLocation(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[6];
  v6 = a1[7];
  if (qword_1EDAE49B0 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EDAE4990);
  v9 = type metadata accessor for ClickLocationTracker();
  result = MEMORY[0x1DF09DB10](&v42, v8, v9);
  v11 = v42;
  if (v42)
  {
    if (qword_1EDAE49D8 != -1)
      swift_once();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F8);
    v37 = __swift_project_value_buffer(v12, (uint64_t)qword_1EDAE49B8);
    MEMORY[0x1DF09DB10](&v42, v37, MEMORY[0x1E0DEA968]);
    v13 = v43;
    if (v43)
    {
      v35 = v6;
      v36 = v4;
      v34 = v5;
      v14 = v42;
      v15 = *(os_unfair_lock_s **)(v11 + 16);
      v16 = (uint64_t)&v15[4];
      v17 = v15 + 6;
      sub_1DA66BE60();
      swift_bridgeObjectRetain();
      os_unfair_lock_lock(v17);
      sub_1DA64984C(v16, v14, v13, (uint64_t)&v38);
      os_unfair_lock_unlock(v17);
      v18 = v39;
      if (v39)
      {
        v33 = v1;
        v19 = v38;
        v20 = v40;
        v21 = v41;
        if (v41)
        {
          swift_bridgeObjectRetain();
          sub_1DA5918FC(v19, v18);
          v22 = *(os_unfair_lock_s **)(v11 + 16);
          v23 = (uint64_t)&v22[4];
          v24 = v22 + 6;
          os_unfair_lock_lock(v22 + 6);
          sub_1DA64984C(v23, v20, v21, (uint64_t)&v42);
          os_unfair_lock_unlock(v24);
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v25 = v43;
          if (v43)
          {
            v26 = v42;
            v27 = v44;
            v28 = v45;
            if (!v45)
            {
              swift_bridgeObjectRetain();
              v27 = v26;
              v28 = v25;
            }
            swift_bridgeObjectRetain();
            sub_1DA5918FC(v26, v25);
            v6 = v35;
            v4 = v36;
          }
          else
          {
            v27 = 0;
            v28 = 0;
            v6 = v35;
            v4 = v36;
          }
          v1 = v33;
          v5 = v34;
          goto LABEL_19;
        }
        sub_1DA5918FC(v38, v39);
        swift_release();
        swift_bridgeObjectRelease_n();
        v6 = v35;
        v4 = v36;
        v1 = v33;
        v5 = v34;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        v6 = v35;
        v4 = v36;
      }
    }
    v27 = 0;
    v28 = 0;
LABEL_19:
    v42 = v1;
    v43 = v2;
    v44 = v4;
    v45 = v3;
    v46 = v27;
    v47 = v28;
    v48 = v5;
    v49 = v6;
    v29 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v1;
    v31 = v3;
    v32 = v4;
    os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
    sub_1DA649A5C((uint64_t *)(v29 + 16), (uint64_t)&v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
    if (!v3)
    {
      swift_bridgeObjectRetain();
      v32 = v30;
      v31 = v2;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v32;
    v39 = v31;
    sub_1DA66F10C();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
  return result;
}

_QWORD *MetricsFieldsContext.replacingClickLocation(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *a1;
  v31 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v5 = a1[6];
  v4 = a1[7];
  if (qword_1EDAE49B0 != -1)
    swift_once();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E8);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EDAE4990);
  v8 = type metadata accessor for ClickLocationTracker();
  result = MEMORY[0x1DF09DB10](&v32, v7, v8);
  v10 = v32;
  if (v32)
  {
    v29 = v2;
    if (qword_1EDAE49D8 != -1)
      swift_once();
    v26 = v5;
    v30 = v4;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49F8);
    v28 = __swift_project_value_buffer(v11, (uint64_t)qword_1EDAE49B8);
    MEMORY[0x1DF09DB10](&v32, v28, MEMORY[0x1E0DEA968]);
    v12 = v33;
    if (v33)
    {
      v13 = v32;
      v14 = *(os_unfair_lock_s **)(v10 + 16);
      v15 = (uint64_t)&v14[4];
      v16 = v14 + 6;
      sub_1DA66BE60();
      swift_bridgeObjectRetain();
      os_unfair_lock_lock(v16);
      sub_1DA64984C(v15, v13, v12, (uint64_t)&v32);
      os_unfair_lock_unlock(v16);
      swift_release();
      swift_bridgeObjectRelease();
      v17 = v33;
      v27 = v32;
      v18 = v38;
      sub_1DA66BE60();
      swift_bridgeObjectRetain();
      ClickLocationTracker.parent(of:)(v13, v12, (uint64_t)&v32);
      swift_release();
      swift_bridgeObjectRelease_n();
      v19 = v33;
      if (v33)
      {
        v20 = v32;
        v21 = v34;
        v22 = v35;
        if (!v35)
        {
          swift_bridgeObjectRetain();
          v21 = v20;
          v22 = v19;
        }
        swift_bridgeObjectRetain();
        sub_1DA5918FC(v20, v19);
      }
      else
      {
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
      v18 = 0;
      v27 = 0;
      v17 = 0;
      v21 = 0;
      v22 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
      sub_1DA5918FC(v27, v17);
    else
      v18 = v26;
    v32 = v1;
    v33 = v31;
    v34 = v29;
    v35 = v3;
    v36 = v21;
    v37 = v22;
    v38 = v18;
    v39 = v30;
    v23 = *(os_unfair_lock_s **)(v10 + 16);
    v24 = (uint64_t *)&v23[4];
    v25 = v23 + 6;
    os_unfair_lock_lock(v23 + 6);
    sub_1DA649A5C(v24, (uint64_t)&v32);
    os_unfair_lock_unlock(v25);
    if (!v3)
      swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DA66F10C();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_1DA5917CC()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B900);
  __swift_allocate_value_buffer(v0, qword_1F026B8E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1F026B8E8);
  sub_1DA66D3F0();
  return sub_1DA66F100();
}

uint64_t static MetricsFieldsContext.Property<A>.pageContextTracker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA590E38(&qword_1F0268570, &qword_1F026B900, (uint64_t)qword_1F026B8E8, a1);
}

uint64_t sub_1DA591864()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE49E0);
  __swift_allocate_value_buffer(v0, qword_1EDAE4970);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDAE4970);
  type metadata accessor for SearchFiltersSource();
  return sub_1DA66F100();
}

uint64_t static MetricsFieldsContext.Property<A>.searchFiltersSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA590E38(&qword_1EDAE4988, &qword_1EDAE49E0, (uint64_t)qword_1EDAE4970, a1);
}

uint64_t sub_1DA5918FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MetricsFieldsBuilder.addValue<A>(_:forField:)()
{
  uint64_t v1;

  sub_1DA66D9F0();
  sub_1DA66F0DC();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v1);
}

uint64_t MetricsFieldsBuilder.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  v8 = sub_1DA66F0D0();
  if (!*(_QWORD *)(v8 + 16))
  {
    v12 = 0u;
    v13 = 0u;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1DA591C4C(a1, a2);
  if ((v10 & 1) == 0)
  {
    v12 = 0u;
    v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1DA49ADD0(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v13 + 1))
  {
    sub_1DA49ACF0(&v12, v14);
    sub_1DA49ADD0((uint64_t)v14, (uint64_t)&v12);
    sub_1DA66D9FC();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  }
LABEL_8:
  sub_1DA480E84((uint64_t)&v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
}

uint64_t MetricsFieldsBuilder.addValue<A>(_:forField:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[4];

  v19[2] = a6;
  v19[3] = a7;
  v19[0] = a3;
  v19[1] = a4;
  v9 = sub_1DA670294();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v19 - v11;
  v13 = *(_QWORD *)(a5 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a5) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, a5);
  MetricsFieldsBuilder.addValue<A>(_:forField:)();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, a5);
}

unint64_t sub_1DA591C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DA670798();
  sub_1DA66F94C();
  v4 = sub_1DA6707C8();
  return sub_1DA591CB0(a1, a2, v4);
}

unint64_t sub_1DA591CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1DA6706D8() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1DA6706D8() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1DA6706D8() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1DA591DF4(double a1, double a2)
{
  return sub_1DA5943FC(a1, a2);
}

uint64_t ImageProvider.data(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA591E70;
  return ImageProvider.load(request:)(a1, a2, a3);
}

uint64_t sub_1DA591E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t ImageProvider.placeholderData(with:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1DA591F58;
  return ImageProvider.placeholder(with:)(a1, a2, a3, a4);
}

uint64_t sub_1DA591F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1DA591FCC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  NSData *v3;
  void *v4;
  NSData *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((sub_1DA66CC34() & 1) != 0 && (v1 = UIImage.heicData(compressionQuality:)(1.0), v2 >> 60 != 15))
  {
    v6 = v1;
    v8 = v2;

  }
  else
  {
    v3 = UIImagePNGRepresentation(*(UIImage **)(v0 + 24));
    v4 = *(void **)(v0 + 24);
    if (!v3)
    {
      v9 = sub_1DA66D3A8();
      sub_1DA47E32C(&qword_1F026B920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E390], MEMORY[0x1E0D7E398]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v10, *MEMORY[0x1E0D7E380], v9);
      swift_willThrow();

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v5 = v3;
    v6 = sub_1DA66C394();
    v8 = v7;

  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v6, v8);
}

uint64_t sub_1DA5920FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;
  _BYTE v12[16];

  v3 = sub_1DA66C454();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1DA66C448();
  if (qword_1F0268580 != -1)
    v7 = swift_once();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v12[-32] = v6;
  *(_QWORD *)&v12[-24] = v1;
  v9 = (uint64_t *)&v8[4];
  v10 = v8 + 6;
  *(_QWORD *)&v12[-16] = a1;
  os_unfair_lock_lock(v8 + 6);
  sub_1DA5945D4(v9);
  os_unfair_lock_unlock(v10);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DA59220C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  os_unfair_lock_s *v9;
  uint64_t v11;

  v2 = v1;
  v4 = sub_1DA66C454();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66C448();
  if (qword_1F0268580 != -1)
    swift_once();
  v8 = (uint64_t *)(qword_1F026B908 + 16);
  v9 = (os_unfair_lock_s *)(qword_1F026B908 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1F026B908 + 24));
  sub_1DA593B10(v8, (uint64_t)v7, v2, a1);
  os_unfair_lock_unlock(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ImageProvider.prefetch(artwork:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  os_unfair_lock_s *v13;
  uint64_t v15;

  v4 = v3;
  v8 = sub_1DA66C454();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66C448();
  if (qword_1F0268580 != -1)
    swift_once();
  v12 = (uint64_t *)(qword_1F026B908 + 16);
  v13 = (os_unfair_lock_s *)(qword_1F026B908 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1F026B908 + 24));
  sub_1DA593E34(v12, (uint64_t)v11, v4, a1, a2, a3);
  os_unfair_lock_unlock(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1DA592414(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  sub_1DA66E074();
  sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
  v5 = sub_1DA66E11C();
  swift_release();
  return v5;
}

uint64_t ImageProvider.load(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE47F0);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4818);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45A0);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5925AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[18];
  v2 = v0[15];
  v3 = v0[16];
  v4 = v0[14];
  v9 = v0[17];
  v10 = v0[13];
  v5 = v0[12];
  v0[2] = (*(uint64_t (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[5], v0[6]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA66E194();
  swift_release();
  v6 = sub_1DA4841D4(&qword_1EDAE4598, &qword_1EDAE45A0, MEMORY[0x1E0C959A0]);
  MEMORY[0x1DF09CBEC](v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v3);
  v0[3] = MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, v2, v5);
  sub_1DA4841D4(&qword_1EDAE4810, (uint64_t *)&unk_1EDAE4818, MEMORY[0x1E0C96010]);
  sub_1DA66FC10();
  v0[19] = sub_1DA4841D4(&qword_1EDAE47E8, (uint64_t *)&unk_1EDAE47F0, MEMORY[0x1E0C95FF0]);
  v7 = (_QWORD *)swift_task_alloc();
  v0[20] = v7;
  *v7 = v0;
  v7[1] = sub_1DA592760;
  return sub_1DA66FB50();
}

uint64_t sub_1DA592760()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[21] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

unint64_t sub_1DA5927F0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  if (!*(_QWORD *)(v0 + 32))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));

    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_7:
        result = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if ((result & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v8 = *(id *)(v6 + 8 * result + 32);
LABEL_12:
            v9 = v8;
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            return (*(uint64_t (**)(id))(v0 + 8))(v9);
          }
          __break(1u);
          return result;
        }
        v8 = (id)MEMORY[0x1DF09EE48](result, v6);
        goto LABEL_12;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v10 = sub_1DA66D3A8();
    sub_1DA47E32C(&qword_1F026B920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E390], MEMORY[0x1E0D7E398]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v11, *MEMORY[0x1E0D7E378], v10);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1DA66FAC0();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_1DA592AF8;
  return sub_1DA66FB50();
}

uint64_t sub_1DA592A8C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA592AF8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[21] = v0;
    v4 = v2[10];
    v3 = v2[11];
    v5 = v2[9];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t ImageProvider.placeholder(with:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 64) = a2;
  *(_QWORD *)(v5 + 72) = v4;
  *(_QWORD *)(v5 + 56) = a1;
  *(double *)(v5 + 40) = a3;
  *(double *)(v5 + 48) = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE47F0);
  *(_QWORD *)(v5 + 80) = v6;
  *(_QWORD *)(v5 + 88) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE4818);
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE45A0);
  *(_QWORD *)(v5 + 136) = v8;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA592C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = (*(uint64_t (**)(_QWORD, double, double))(*(_QWORD *)(v0 + 64) + 24))(*(_QWORD *)(v0 + 56), *(double *)(v0 + 40), *(double *)(v0 + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA66E194();
  swift_release();
  v6 = sub_1DA4841D4(&qword_1EDAE4598, &qword_1EDAE45A0, MEMORY[0x1E0C959A0]);
  MEMORY[0x1DF09CBEC](v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v3);
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, v2, v5);
  sub_1DA4841D4(&qword_1EDAE4810, (uint64_t *)&unk_1EDAE4818, MEMORY[0x1E0C96010]);
  sub_1DA66FC10();
  *(_QWORD *)(v0 + 160) = sub_1DA4841D4(&qword_1EDAE47E8, (uint64_t *)&unk_1EDAE47F0, MEMORY[0x1E0C95FF0]);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v7;
  *v7 = v0;
  v7[1] = sub_1DA592E10;
  return sub_1DA66FB50();
}

uint64_t sub_1DA592E10()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[22] = v0;
    v4 = v2[11];
    v3 = v2[12];
    v5 = v2[10];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

unint64_t sub_1DA592EA0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  if (!*(_QWORD *)(v0 + 32))
  {
    v3 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));

    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1DA6705A0();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_7:
        result = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if ((result & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v8 = *(id *)(v6 + 8 * result + 32);
LABEL_12:
            v9 = v8;
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            return (*(uint64_t (**)(id))(v0 + 8))(v9);
          }
          __break(1u);
          return result;
        }
        v8 = (id)MEMORY[0x1DF09EE48](result, v6);
        goto LABEL_12;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v10 = sub_1DA66D3A8();
    sub_1DA47E32C(&qword_1F026B920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E390], MEMORY[0x1E0D7E398]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v11, *MEMORY[0x1E0D7E378], v10);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1DA66FAC0();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v1;
  *v1 = v0;
  v1[1] = sub_1DA5931A8;
  return sub_1DA66FB50();
}

uint64_t sub_1DA59313C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5931A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[22] = v0;
    v4 = v2[11];
    v3 = v2[12];
    v5 = v2[10];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1DA59323C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2180);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  qword_1F026B908 = result;
  return result;
}

uint64_t ImageProvider.load(artwork:receiveImage:receiveCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  os_unfair_lock_s *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a5;
  v19 = a4;
  v22 = a3;
  v11 = sub_1DA66C454();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66C448();
  if (qword_1F0268580 != -1)
    swift_once();
  v15 = (uint64_t *)(qword_1F026B908 + 16);
  v16 = (os_unfair_lock_s *)(qword_1F026B908 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1F026B908 + 24));
  sub_1DA5933A0(v15, (uint64_t)v14, v20, a1, v19, v21, a2, v22, a6, a7);
  os_unfair_lock_unlock(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1DA5933A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(__n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  id v52;
  uint64_t v53;

  v51 = a1;
  v48 = a7;
  v49 = a8;
  v44 = a5;
  v45 = a6;
  v40 = a4;
  v42 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4FF0);
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66C454();
  v16 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  v17 = *(_QWORD *)(v16 + 64);
  v43 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v46 = (uint64_t)&v40 - v21;
  v23 = *(void (**)(__n128))(v22 + 16);
  v23(v20);
  v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 8))(v40, a9, a10);
  sub_1DA486298();
  v52 = (id)sub_1DA66FE44();
  v24 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA47E32C((unint64_t *)&qword_1EDAE20B0, (uint64_t (*)(uint64_t))sub_1DA486298, MEMORY[0x1E0DEF7F8]);
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v12);

  swift_release();
  v25 = v41;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v18, v42, v41);
  v26 = v43;
  v27 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v28 = swift_allocObject();
  v30 = v44;
  v29 = v45;
  *(_QWORD *)(v28 + 16) = v44;
  *(_QWORD *)(v28 + 24) = v29;
  v31 = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v28 + v27, v18, v25);
  v32 = swift_allocObject();
  v33 = v49;
  *(_QWORD *)(v32 + 16) = v48;
  *(_QWORD *)(v32 + 24) = v33;
  sub_1DA4EF8F4(v30);
  sub_1DA4841D4(&qword_1EDAE4FE8, &qword_1EDAE4FF0, MEMORY[0x1E0C95CB8]);
  sub_1DA66BE60();
  v34 = v47;
  v35 = sub_1DA66E1AC();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v34);
  v36 = v51;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53 = *v36;
  *v36 = 0x8000000000000000;
  v38 = v46;
  sub_1DA537F38(v35, v46, isUniquelyReferenced_nonNull_native);
  *v36 = v53;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v38, v31);
}

void sub_1DA59371C(uint64_t a1, void (*a2)(), uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  os_unfair_lock_s *v7;
  void *v8;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B938);
    sub_1DA66DF60();
    a2();

  }
  if (qword_1F0268580 != -1)
    swift_once();
  v6 = (uint64_t *)(qword_1F026B908 + 16);
  v7 = (os_unfair_lock_s *)(qword_1F026B908 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1F026B908 + 24));
  sub_1DA5941EC(v6, a4);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_1DA5937EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(__n128);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  id v38;
  uint64_t v39;

  v37 = a1;
  v31 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4FF0);
  v9 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  v36 = v9;
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66C454();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v32 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v34 = (uint64_t)&v30 - v16;
  v30 = *(void (**)(__n128))(v12 + 16);
  v30(v15);
  v39 = LibraryImageProvider.load(artwork:)(a4);
  sub_1DA486298();
  v38 = (id)sub_1DA66FE5C();
  v17 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA47E32C((unint64_t *)&qword_1EDAE20B0, (uint64_t (*)(uint64_t))sub_1DA486298, MEMORY[0x1E0DEF7F8]);
  v18 = v33;
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v7);

  swift_release();
  v19 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v32, v31, v11);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v21 + v20, v19, v11);
  sub_1DA4841D4(&qword_1EDAE4FE8, &qword_1EDAE4FF0, MEMORY[0x1E0C95CB8]);
  v22 = v35;
  v23 = v18;
  v24 = sub_1DA66E1AC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v22);
  v25 = v37;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = *v25;
  *v25 = 0x8000000000000000;
  v27 = v24;
  v28 = v34;
  sub_1DA537F38(v27, v34, isUniquelyReferenced_nonNull_native);
  *v25 = v39;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v28, v11);
}

uint64_t sub_1DA593B10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(__n128);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  id v38;
  uint64_t v39;

  v37 = a1;
  v31 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4FF0);
  v9 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  v36 = v9;
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1DA66C454();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v32 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v34 = (uint64_t)&v30 - v16;
  v30 = *(void (**)(__n128))(v12 + 16);
  v30(v15);
  v39 = StoreLibraryMultiplexingImageProvider.load(artwork:)(a4);
  sub_1DA486298();
  v38 = (id)sub_1DA66FE5C();
  v17 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA47E32C((unint64_t *)&qword_1EDAE20B0, (uint64_t (*)(uint64_t))sub_1DA486298, MEMORY[0x1E0DEF7F8]);
  v18 = v33;
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v7);

  swift_release();
  v19 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v32, v31, v11);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v21 + v20, v19, v11);
  sub_1DA4841D4(&qword_1EDAE4FE8, &qword_1EDAE4FF0, MEMORY[0x1E0C95CB8]);
  v22 = v35;
  v23 = v18;
  v24 = sub_1DA66E1AC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v22);
  v25 = v37;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = *v25;
  *v25 = 0x8000000000000000;
  v27 = v24;
  v28 = v34;
  sub_1DA537F38(v27, v34, isUniquelyReferenced_nonNull_native);
  *v25 = v39;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v28, v11);
}

uint64_t sub_1DA593E34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(__n128);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  uint64_t v43;

  v41 = a1;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4FF0);
  v13 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  v40 = v13;
  MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66C454();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v38 = (uint64_t)&v34 - v20;
  v34 = *(void (**)(__n128))(v16 + 16);
  v34(v19);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 8))(a4, a5, a6);
  sub_1DA486298();
  v42 = (id)sub_1DA66FE5C();
  v21 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA47E32C((unint64_t *)&qword_1EDAE20B0, (uint64_t (*)(uint64_t))sub_1DA486298, MEMORY[0x1E0DEF7F8]);
  v22 = v37;
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v11);

  swift_release();
  v23 = v36;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v36, v35, v15);
  v24 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v24, v23, v15);
  sub_1DA4841D4(&qword_1EDAE4FE8, &qword_1EDAE4FF0, MEMORY[0x1E0C95CB8]);
  v26 = v39;
  v27 = v22;
  v28 = sub_1DA66E1AC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v26);
  v29 = v41;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = *v29;
  *v29 = 0x8000000000000000;
  v31 = v28;
  v32 = v38;
  sub_1DA537F38(v31, v38, isUniquelyReferenced_nonNull_native);
  *v29 = v43;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
}

void sub_1DA59416C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  os_unfair_lock_s *v4;

  if (qword_1F0268580 != -1)
    swift_once();
  v3 = (uint64_t *)(qword_1F026B908 + 16);
  v4 = (os_unfair_lock_s *)(qword_1F026B908 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1F026B908 + 24));
  sub_1DA5941EC(v3, a2);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1DA5941EC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRetain();
  v4 = sub_1DA55CE1C(a2);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *a1;
    v12 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DA57BF28();
      v9 = v12;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1DA66C454();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v4, v11);
    sub_1DA5A7F9C(v4, v9);
    *a1 = v9;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DA5942C8(void (*a1)(id *), double a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char v9;

  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultPodcastArtworkWithWidth_, a2);
  if (v3)
  {
    v8 = v3;
    v9 = 0;
    v4 = v3;
    a1(&v8);

  }
  else
  {
    v5 = sub_1DA66D3A8();
    sub_1DA47E32C(&qword_1F026B920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E390], MEMORY[0x1E0D7E398]);
    v6 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0D7E388], v5);
    v8 = v6;
    v9 = 1;
    a1(&v8);

  }
}

uint64_t sub_1DA5943C8(uint64_t a1)
{
  return sub_1DA59220C(a1);
}

uint64_t sub_1DA5943E8(double a1, double a2)
{
  return sub_1DA5943FC(a1, a2);
}

uint64_t sub_1DA5943FC(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  sub_1DA66E074();
  sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
  v5 = sub_1DA66E11C();
  swift_release();
  return v5;
}

uint64_t _s10PodcastsUI13ImageProviderPAAE11placeholder3for7Combine12AnyPublisherVySo7UIImageCs5Error_pGSo6CGSizeV_tF_0(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  sub_1DA66E074();
  sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
  v5 = sub_1DA66E11C();
  swift_release();
  return v5;
}

uint64_t dispatch thunk of ImageProvider.load(artwork:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ImageProvider.prefetch(artwork:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ImageProvider.placeholder(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1DA5945A4()
{
  return swift_deallocObject();
}

void sub_1DA5945B4(void (*a1)(id *))
{
  uint64_t v1;

  sub_1DA5942C8(a1, *(double *)(v1 + 16));
}

uint64_t sub_1DA5945C4()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5945D4(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1DA5937EC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DA5945F4()
{
  return swift_deallocObject();
}

uint64_t sub_1DA594604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1DA66C454();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 32) & ~v3), v1);
  return swift_deallocObject();
}

void sub_1DA594680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66C454() - 8) + 80);
  sub_1DA59371C(a1, *(void (**)())(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1DA5946C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DA66C454();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1DA594748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66C454() - 8) + 80);
  sub_1DA59416C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1DA594784()
{
  return swift_deallocObject();
}

uint64_t InterestStore.init(asPartOf:)()
{
  id v0;
  uint64_t v1;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE0050);
  sub_1DA66EDDC();
  v0 = objc_msgSend(v3, sel_privateQueueContext);
  v1 = sub_1DA66CC7C();
  swift_unknownObjectRelease();

  swift_release();
  return v1;
}

id OverlayViewController.overlayView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI21OverlayViewController_overlayView);
}

id OverlayViewController.__allocating_init(wrapping:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC10PodcastsUI21OverlayViewController_overlayView] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_initWithNibName_bundle_, 0, 0);
}

id OverlayViewController.init(wrapping:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC10PodcastsUI21OverlayViewController_overlayView] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_initWithNibName_bundle_, 0, 0);
}

id OverlayViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void OverlayViewController.init(coder:)()
{
  sub_1DA670570();
  __break(1u);
}

Swift::Void __swiftcall OverlayViewController.encode(with:)(NSCoder with)
{
  sub_1DA670570();
  __break(1u);
}

Swift::Void __swiftcall OverlayViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  objc_super v27;

  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI21OverlayViewController_overlayView];
  objc_msgSend(v1, sel_addSubview_, v3);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA67E620;
  v5 = objc_msgSend(v3, sel_topAnchor);
  v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v3, sel_leadingAnchor);
  v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_leadingAnchor);

  v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = objc_msgSend(v3, sel_bottomAnchor);
  v16 = objc_msgSend(v0, sel_view);
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_bottomAnchor);

  v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v4 + 48) = v19;
  v20 = objc_msgSend(v3, sel_trailingAnchor);
  v21 = objc_msgSend(v0, sel_view);
  if (v21)
  {
    v22 = v21;
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v22, sel_trailingAnchor);

    v25 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v24);
    *(_QWORD *)(v4 + 56) = v25;
    sub_1DA66FAB4();
    sub_1DA5207F4();
    v26 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_activateConstraints_, v26);

    return;
  }
LABEL_11:
  __break(1u);
}

id OverlayViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void OverlayViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OverlayViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OverlayViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for OverlayViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OverlayViewController.__allocating_init(wrapping:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t NowPlayingArtworkProvider.__allocating_init(asPartOf:)()
{
  uint64_t v0;
  __int128 v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  sub_1DA66EDDC();
  swift_release();
  v0 = swift_allocObject();
  sub_1DA4841BC(&v2, v0 + 16);
  return v0;
}

uint64_t sub_1DA594F9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0420);
  sub_1DA66EDDC();
  swift_release();
  v2 = swift_allocObject();
  result = sub_1DA4841BC(&v4, v2 + 16);
  *a1 = v2;
  return result;
}

uint64_t sub_1DA595014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1DA658130(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

double StorageSpace.jsRepresentation(in:)@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;

  result = (double)(unint64_t)sub_1DA66CBC8();
  v3 = MEMORY[0x1E0D416A8];
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(a1 + 32) = v3;
  *(double *)a1 = result;
  return result;
}

double sub_1DA595080@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;

  result = (double)(unint64_t)sub_1DA66CBC8();
  v3 = MEMORY[0x1E0D416A8];
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(a1 + 32) = v3;
  *(double *)a1 = result;
  return result;
}

void sub_1DA5950C4(uint64_t a1, void *a2)
{
  sub_1DA658444(a1, a2);
}

id MTImageStore.artworkSource.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  *a1 = v1;
  return v1;
}

id ImageStoreArtworkSource.imageStore.getter()
{
  id *v0;

  return *v0;
}

uint64_t ImageStoreArtworkSource.fetch(asset:)(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD v12[2];

  v3 = sub_1DA66CEBC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(_QWORD *)(v9 + ((v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B948);
  swift_allocObject();
  v10 = v7;
  v12[1] = sub_1DA66E074();
  sub_1DA66CDA8();
  sub_1DA4841D4(&qword_1F026B950, &qword_1F026B948, MEMORY[0x1E0C96108]);
  sub_1DA66E200();
  return swift_release();
}

uint64_t sub_1DA595258(void (*a1)(char *), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B968);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  v15 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66CE68();
  v18 = *(_QWORD *)&v17[*(int *)(v15 + 64) + 8];
  swift_bridgeObjectRetain();
  sub_1DA4E8990((uint64_t)v17);
  if (v18)
  {
    v19 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(a4, sel_imageUrlForKey_, v19);

    if (v20)
    {
      sub_1DA66C304();

      v21 = sub_1DA66C358();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 0, 1, v21);
    }
    else
    {
      v23 = sub_1DA66C358();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
    }
    sub_1DA49B0AC((uint64_t)v8, (uint64_t)v11);
  }
  else
  {
    v22 = sub_1DA66C358();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
    v11 = v14;
  }
  swift_storeEnumTagMultiPayload();
  a1(v11);
  return sub_1DA47E2F0((uint64_t)v11, &qword_1F026B968);
}

uint64_t sub_1DA595494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4B2F78(a1, (uint64_t)v6);
  v7 = sub_1DA66C358();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1DA47E2F0((uint64_t)v6, &qword_1EDAE5020);
    sub_1DA4AD0E4();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    sub_1DA66CDA8();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t static ImageStoreAssetError.== infix(_:_:)()
{
  return 1;
}

uint64_t ImageStoreAssetError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ImageStoreAssetError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA595618()
{
  unint64_t result;

  result = qword_1F026B958;
  if (!qword_1F026B958)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ImageStoreAssetError, &type metadata for ImageStoreAssetError);
    atomic_store(result, (unint64_t *)&qword_1F026B958);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImageStoreAssetError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA59569C + 4 * byte_1DA67E760[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5956BC + 4 * byte_1DA67E765[v4]))();
}

_BYTE *sub_1DA59569C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5956BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5956C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5956CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5956D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5956DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageStoreAssetError()
{
  return &type metadata for ImageStoreAssetError;
}

uint64_t sub_1DA5956F8()
{
  return sub_1DA4841D4(&qword_1EDAE45C8, &qword_1EDAE45D0, MEMORY[0x1E0C95B48]);
}

uint64_t sub_1DA595728(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1DA595258(a1, a2, v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

BOOL static ActionMetricsBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ActionMetricsBehavior.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ActionMetricsBehavior.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA595810()
{
  unint64_t result;

  result = qword_1F026B970;
  if (!qword_1F026B970)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ActionMetricsBehavior, &type metadata for ActionMetricsBehavior);
    atomic_store(result, (unint64_t *)&qword_1F026B970);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionMetricsBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5958A0 + 4 * byte_1DA67E8B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5958D4 + 4 * asc_1DA67E8B0[v4]))();
}

uint64_t sub_1DA5958D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5958DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5958E4);
  return result;
}

uint64_t sub_1DA5958F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5958F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5958FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA595904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMetricsBehavior()
{
  return &type metadata for ActionMetricsBehavior;
}

uint64_t sub_1DA595920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t *boxed_opaque_existential_1;
  id v10;
  uint64_t result;
  uint64_t v12;
  objc_super v13;
  uint64_t v14[5];

  v0 = sub_1DA66DB40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DB04();
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v5 = objc_msgSend(v4, sel_importContext);

  sub_1DA486298();
  v6 = sub_1DA66FE5C();
  v7 = (objc_class *)type metadata accessor for TranscriptProviderBridge();
  v8 = (char *)objc_allocWithZone(v7);
  v14[3] = v0;
  v14[4] = MEMORY[0x1E0D7EB80];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_1, v3, v0);
  sub_1DA4813E4((uint64_t)v14, (uint64_t)&v8[OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider]);
  *(_QWORD *)&v8[OBJC_IVAR___PFTranscriptProviderBridge_managedObjectContext] = v5;
  *(_QWORD *)&v8[OBJC_IVAR___PFTranscriptProviderBridge_workQueue] = v6;
  v13.receiver = v8;
  v13.super_class = v7;
  v10 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1EDADF9B0 = (uint64_t)v10;
  return result;
}

id TranscriptProviderBridge.__allocating_init(wrappedProvider:managedObjectContext:workQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  v10 = sub_1DA597B10(v9, a2, a3, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v10;
}

id static TranscriptProviderBridge.shared.getter()
{
  if (qword_1EDADECD8 != -1)
    swift_once();
  return (id)qword_1EDADF9B0;
}

uint64_t TranscriptProviderBridge.wrappedProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider, a1);
}

id TranscriptProviderBridge.managedObjectContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PFTranscriptProviderBridge_managedObjectContext);
}

id TranscriptProviderBridge.workQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PFTranscriptProviderBridge_workQueue);
}

id TranscriptProviderBridge.init(wrappedProvider:managedObjectContext:workQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v13 + 16))(v12, v10);
  v14 = sub_1DA597A58((uint64_t)v12, a2, a3, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v14;
}

void sub_1DA595C58(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v3 = *(void **)(v1 + OBJC_IVAR___PFTranscriptProviderBridge_managedObjectContext);
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v3;
  v5[3] = a1;
  v5[4] = v4;
  v8[4] = sub_1DA597BE8;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1DA4A9194;
  v8[3] = &block_descriptor_12;
  v6 = _Block_copy(v8);
  v7 = v3;
  swift_release();
  objc_msgSend(v7, sel_performBlock_, v6);
  _Block_release(v6);
}

uint64_t sub_1DA595D44(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a3;
  v46 = sub_1DA66CC4C();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D5C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC68);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1DA66D378();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v43 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1DA66DEF4();
  v49 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v19 = MEMORY[0x1E0C80A78](v18).n128_u64[0];
  v21 = (char *)&v41 - v20;
  v22 = (char *)objc_msgSend(a1, sel_episodeForStoreTrackID_, a2, v19);
  if (v22)
  {
    v23 = v22;
    v42 = v15;
    v24 = v48 + 16;
    swift_beginAccess();
    v25 = MEMORY[0x1DF0A054C](v24);
    if (v25)
    {
      v26 = (void *)v25;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D7E5A8], v7);
      v27 = v23;
      v28 = v44;
      v29 = v46;
      (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v6, *MEMORY[0x1E0D7DAB8], v46);
      v48 = v27;
      sub_1DA6701EC();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v30 = v45;
      v31 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v47) != 1)
      {
        v40 = (uint64_t)v43;
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v43, v13, v31);
        sub_1DA5971D8(v40);

        return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v40, v31);
      }

      sub_1DA597DD4((uint64_t)v13);
      v23 = v48;
    }
    sub_1DA66DE4C();
    v32 = sub_1DA66DEDC();
    v33 = sub_1DA66FD90();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1DA478000, v32, v33, "Unable to find request for episode, won't invalidate", v34, 2u);
      MEMORY[0x1DF0A0474](v34, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v17, v42);
  }
  else
  {
    v36 = a2;
    sub_1DA66DE4C();
    v37 = sub_1DA66DEDC();
    v38 = sub_1DA66FDA8();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v39 = 134217984;
      v50 = v36;
      sub_1DA6702C4();
      _os_log_impl(&dword_1DA478000, v37, v38, "Unable to find episode for AdamID %lld, won't invalidate", v39, 0xCu);
      MEMORY[0x1DF0A0474](v39, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v21, v15);
  }
}

uint64_t sub_1DA59625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v13 = sub_1DA66E9C8();
  v26 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66EA04();
  v24 = *(_QWORD *)(v16 - 8);
  v25 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = *(_QWORD *)&v6[OBJC_IVAR___PFTranscriptProviderBridge_workQueue];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  *(_BYTE *)(v19 + 48) = a5;
  *(_QWORD *)(v19 + 56) = a6;
  *(_QWORD *)(v19 + 64) = v6;
  aBlock[4] = sub_1DA597C28;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_9_0;
  v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v21 = v6;
  swift_bridgeObjectRetain();
  sub_1DA66E9EC();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1DA4F719C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v18, v15, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v25);
  return swift_release();
}

uint64_t sub_1DA596450(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void (*v43)(_BYTE *, uint64_t);
  _BYTE *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  _BYTE *v48;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _BYTE v74[4];
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  int v96;
  uint64_t v97;
  _QWORD *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v84 = a7;
  v89 = sub_1DA66CC4C();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v91 = &v74[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v83 = sub_1DA66D5C4();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v86 = &v74[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = sub_1DA66D378();
  v88 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v85 = &v74[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1DA66DEF4();
  v98 = *(_QWORD **)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v93 = &v74[-v17];
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = &v74[-v21];
  v80 = v23;
  v94 = a1;
  v79 = v24;
  v95 = v25;
  if (a2)
  {
    if (a4)
    {
      if (a1 == a3 && a2 == a4)
      {
        v96 = 1;
        LODWORD(v97) = 1;
        goto LABEL_10;
      }
      v96 = sub_1DA6706D8();
    }
    else
    {
      v96 = 0;
    }
    LODWORD(v97) = 1;
  }
  else
  {
    v96 = a4 == 0;
    LODWORD(v97) = a5;
  }
LABEL_10:
  v26 = sub_1DA66DCE4();
  sub_1DA66DE4C();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v27 = sub_1DA66DEDC();
  v28 = sub_1DA66FD90();
  v29 = v28;
  v30 = os_log_type_enabled(v27, v28);
  v81 = a3;
  v92 = a2;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v75 = v29;
    v32 = v31;
    v76 = swift_slowAlloc();
    *(_QWORD *)&v99 = v76;
    *(_DWORD *)v32 = 141560067;
    v102 = 1752392040;
    sub_1DA6702C4();
    *(_WORD *)(v32 + 12) = 2081;
    v78 = v15;
    v102 = v26;
    sub_1DA4F726C();
    v33 = sub_1DA670354();
    v77 = v26;
    v102 = sub_1DA49AD00(v33, v34, (uint64_t *)&v99);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 2160;
    v102 = 1752392040;
    sub_1DA6702C4();
    *(_WORD *)(v32 + 32) = 2081;
    swift_bridgeObjectRetain();
    v35 = sub_1DA67027C();
    v37 = v36;
    swift_bridgeObjectRelease();
    v102 = sub_1DA49AD00(v35, v37, (uint64_t *)&v99);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 42) = 2160;
    v102 = 1752392040;
    sub_1DA6702C4();
    *(_WORD *)(v32 + 52) = 2081;
    swift_bridgeObjectRetain();
    v26 = v77;
    v38 = sub_1DA67027C();
    v40 = v39;
    swift_bridgeObjectRelease();
    v102 = sub_1DA49AD00(v38, v40, (uint64_t *)&v99);
    sub_1DA6702C4();
    swift_bridgeObjectRelease_n();
    v15 = v78;
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 62) = 1026;
    v41 = v96;
    LODWORD(v102) = (v96 & 1) == 0;
    sub_1DA6702C4();
    *(_WORD *)(v32 + 68) = 1026;
    LOBYTE(v38) = v97;
    LODWORD(v102) = v97 & 1;
    sub_1DA6702C4();
    *(_WORD *)(v32 + 74) = 1026;
    LOBYTE(v102) = sub_1DA66DCD8() & 1;
    LODWORD(v102) = v102;
    sub_1DA6702C4();
    _os_log_impl(&dword_1DA478000, v27, (os_log_type_t)v75, "Checking for change to feed TTML identifier for %{private,mask.hash}s (%{private,mask.hash}s -> %{private,mask.hash}s: (changed=%{BOOL,public}d, withLocalContent=%{BOOL,public}d, adamIDIsEmpty=%{BOOL,public}d)", (uint8_t *)v32, 0x50u);
    v42 = v76;
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v42, -1, -1);
    MEMORY[0x1DF0A0474](v32, -1, -1);

    v43 = (void (*)(_BYTE *, uint64_t))v98[1];
    v43(v22, v15);
    if (v41 & 1 | ((v38 & 1) == 0))
      goto LABEL_15;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v43 = (void (*)(_BYTE *, uint64_t))v98[1];
    v43(v22, v15);
    if (v96 & 1 | ((v97 & 1) == 0))
    {
LABEL_15:
      v44 = v95;
      sub_1DA66DE4C();
      v45 = sub_1DA66DEDC();
      v46 = sub_1DA66FD90();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_1DA478000, v45, v46, "Transcript is up to date, nothing to do.", v47, 2u);
        MEMORY[0x1DF0A0474](v47, -1, -1);
      }

      v48 = v44;
      return ((uint64_t (*)(_BYTE *, uint64_t))v43)(v48, v15);
    }
  }
  if ((sub_1DA66DCD8() & 1) != 0)
    goto LABEL_15;
  v98 = v43;
  if (v92)
  {
    swift_bridgeObjectRetain();
    v50 = v79;
    sub_1DA66DE4C();
    v51 = sub_1DA66DEDC();
    v52 = sub_1DA66FD90();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      *(_QWORD *)&v99 = v54;
      *(_DWORD *)v53 = 141558275;
      v102 = 1752392040;
      sub_1DA6702C4();
      *(_WORD *)(v53 + 12) = 2081;
      v97 = v53 + 14;
      v102 = v26;
      sub_1DA4F726C();
      v55 = sub_1DA670354();
      v102 = sub_1DA49AD00(v55, v56, (uint64_t *)&v99);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DA478000, v51, v52, "Device had transcript identifier for episode %{private,mask.hash}s, invalidating the existing asset", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v54, -1, -1);
      MEMORY[0x1DF0A0474](v53, -1, -1);
    }

    v57 = v50;
    v43 = (void (*)(_BYTE *, uint64_t))v98;
    ((void (*)(uint64_t, uint64_t))v98)(v57, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v82 + 104))(v86, *MEMORY[0x1E0D7E5A8], v83);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v87 + 104))(v91, *MEMORY[0x1E0D7DAB8], v89);
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    v58 = (uint64_t)v85;
    sub_1DA66D360();
    sub_1DA59749C(v58);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v58, v90);
  }
  if (a4)
  {
    v59 = v26;
    swift_bridgeObjectRetain();
    v60 = v80;
    sub_1DA66DE4C();
    swift_bridgeObjectRetain_n();
    v61 = sub_1DA66DEDC();
    v62 = sub_1DA66FD90();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v97 = swift_slowAlloc();
      *(_QWORD *)&v99 = v97;
      *(_DWORD *)v63 = 141558531;
      v102 = 1752392040;
      sub_1DA6702C4();
      *(_WORD *)(v63 + 12) = 2081;
      v102 = v59;
      sub_1DA4F726C();
      v64 = sub_1DA670354();
      v102 = sub_1DA49AD00(v64, v65, (uint64_t *)&v99);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 22) = 2080;
      swift_bridgeObjectRetain();
      v102 = sub_1DA49AD00(v81, a4, (uint64_t *)&v99);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DA478000, v61, v62, "Feed specifies a new ttml identifier, prefetching for episode %{private,mask.hash}s: %s", (uint8_t *)v63, 0x20u);
      v66 = v97;
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v66, -1, -1);
      MEMORY[0x1DF0A0474](v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    ((void (*)(uint64_t, uint64_t))v98)(v60, v15);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v84 + OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider), *(_QWORD *)(v84 + OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider + 24));
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v82 + 104))(v86, *MEMORY[0x1E0D7E5C0], v83);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v87 + 104))(v91, *MEMORY[0x1E0D7DAB0], v89);
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    v67 = v85;
    sub_1DA66D360();
    sub_1DA66D42C();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v67, v90);
    v26 = v59;
    v43 = (void (*)(_BYTE *, uint64_t))v98;
  }
  sub_1DA66DE4C();
  v68 = sub_1DA66DEDC();
  v69 = sub_1DA66FD90();
  if (!os_log_type_enabled(v68, v69))
  {

    v48 = v93;
    return ((uint64_t (*)(_BYTE *, uint64_t))v43)(v48, v15);
  }
  v70 = swift_slowAlloc();
  v71 = swift_slowAlloc();
  *(_QWORD *)&v99 = v71;
  *(_DWORD *)v70 = 141558275;
  v102 = 1752392040;
  sub_1DA6702C4();
  *(_WORD *)(v70 + 12) = 2081;
  v102 = v26;
  sub_1DA4F726C();
  v72 = sub_1DA670354();
  v102 = sub_1DA49AD00(v72, v73, (uint64_t *)&v99);
  sub_1DA6702C4();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DA478000, v68, v69, "Completed update to ttml identifier for %{private,mask.hash}s", (uint8_t *)v70, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1DF0A0474](v71, -1, -1);
  MEMORY[0x1DF0A0474](v70, -1, -1);

  return ((uint64_t (*)(_BYTE *, uint64_t))v43)(v93, v15);
}

uint64_t sub_1DA5971D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1DA66E9C8();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66EA04();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66D378();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v18[1] = *(_QWORD *)(v2 + OBJC_IVAR___PFTranscriptProviderBridge_workQueue);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1DA597D74;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA4A9194;
  aBlock[3] = &block_descriptor_16_0;
  v16 = _Block_copy(aBlock);
  sub_1DA66BE60();
  sub_1DA66E9EC();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1DA4F719C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADE6E0);
  sub_1DA529778();
  sub_1DA670378();
  MEMORY[0x1DF09E8CC](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

void sub_1DA597444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1DF0A054C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1DA59749C(a2);

  }
}

uint64_t sub_1DA59749C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = sub_1DA66D378();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  v7 = sub_1DA66DEF4();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider), *(_QWORD *)(v1 + OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider + 24));
  v11 = sub_1DA66D414();
  sub_1DA66DE4C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v22);
  v12 = sub_1DA66DEDC();
  v13 = sub_1DA66FD90();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136315138;
    v19[1] = v14 + 4;
    v23 = sub_1DA66D36C();
    sub_1DA4F726C();
    v16 = sub_1DA670354();
    v23 = sub_1DA49AD00(v16, v17, &v24);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v22);
    _os_log_impl(&dword_1DA478000, v12, v13, "Invalidated transcript assets for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v15, -1, -1);
    MEMORY[0x1DF0A0474](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v22);
  }

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  return v11 & 1;
}

id TranscriptProviderBridge.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TranscriptProviderBridge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TranscriptProviderBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptProviderBridge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA597A0C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1DA597A30@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

id sub_1DA597A58(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  id v12;
  objc_super v14;
  uint64_t v15[5];

  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  sub_1DA4813E4((uint64_t)v15, (uint64_t)&a4[OBJC_IVAR___PFTranscriptProviderBridge_wrappedProvider]);
  *(_QWORD *)&a4[OBJC_IVAR___PFTranscriptProviderBridge_managedObjectContext] = a2;
  *(_QWORD *)&a4[OBJC_IVAR___PFTranscriptProviderBridge_workQueue] = a3;
  v14.receiver = a4;
  v14.super_class = (Class)type metadata accessor for TranscriptProviderBridge();
  v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  return v12;
}

id sub_1DA597B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for TranscriptProviderBridge());
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a5);
  return sub_1DA597A58((uint64_t)v13, a2, a3, v14, a5, a6);
}

uint64_t sub_1DA597BC0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA597BE8()
{
  uint64_t v0;

  return sub_1DA595D44(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1DA597BF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DA597C28()
{
  uint64_t v0;

  return sub_1DA596450(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t type metadata accessor for TranscriptProviderBridge()
{
  return objc_opt_self();
}

uint64_t method lookup function for TranscriptProviderBridge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptProviderBridge.__allocating_init(wrappedProvider:managedObjectContext:workQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of TranscriptProviderBridge.invalidateTranscriptAssets(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TranscriptProviderBridge.update(identifer:to:hasDownloadedContent:for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t getEnumTagSinglePayload for TranscriptProviderBridge.BridgeError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptProviderBridge.BridgeError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProviderBridge.BridgeError()
{
  return &type metadata for TranscriptProviderBridge.BridgeError;
}

uint64_t sub_1DA597D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66D378();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DA597D74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66D378() - 8) + 80);
  sub_1DA597444(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA597DD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFC68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ExplicitContentPresenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 20) = 0;
  *(_BYTE *)(v1 + 16) = 2;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

BOOL static ExplicitTreatment.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ExplicitTreatment.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t ExplicitTreatment.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t ExplicitTreatment.symbol.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 11768802;
  else
    return 3028656112;
}

uint64_t ExplicitTreatment.symbolName.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C637269632E3931;
  else
    return 0x6572617571732E65;
}

uint64_t ExplicitContentPresenter.treatment.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1DA48D054(v2, (char *)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t ExplicitContentPresenter.symbolName.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  char v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 5;
  os_unfair_lock_lock(v1 + 5);
  sub_1DA48D054(v2, &v5);
  os_unfair_lock_unlock(v3);
  if (v5)
    return 0x6C637269632E3931;
  else
    return 0x6572617571732E65;
}

uint64_t ExplicitContentPresenter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ExplicitContentPresenter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t BaseObjectGraph.injectExplicitSymbol.getter()
{
  os_unfair_lock_s *v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  unsigned __int8 v4;
  uint64_t v5;

  type metadata accessor for ExplicitContentPresenter();
  sub_1DA66EDDC();
  v0 = *(os_unfair_lock_s **)(v5 + 16);
  v1 = v0 + 4;
  v2 = v0 + 5;
  os_unfair_lock_lock(v0 + 5);
  sub_1DA48D054(v1, (char *)&v4);
  os_unfair_lock_unlock(v2);
  LODWORD(v1) = v4;
  swift_release();
  if ((_DWORD)v1)
    return 11768802;
  else
    return 3028656112;
}

unint64_t sub_1DA59815C()
{
  unint64_t result;

  result = qword_1F026B990;
  if (!qword_1F026B990)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ExplicitTreatment, &type metadata for ExplicitTreatment);
    atomic_store(result, (unint64_t *)&qword_1F026B990);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExplicitTreatment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5981EC + 4 * byte_1DA67EA05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA598220 + 4 * asc_1DA67EA00[v4]))();
}

uint64_t sub_1DA598220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA598228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA598230);
  return result;
}

uint64_t sub_1DA59823C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA598244);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA598248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA598250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t method lookup function for ExplicitContentPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExplicitContentPresenter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

Swift::Void __swiftcall ApplicationStateMonitor.set(applicationState:)(UIApplicationState applicationState)
{
  sub_1DA66D7C8();
}

void sub_1DA598290(void *a1)
{
  id v1;

  v1 = a1;
  sub_1DA66D7C8();

}

double static ApplicationStateMonitor.remainingBackgroundTime()()
{
  id v0;
  double v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v0, sel_backgroundTimeRemaining);
  v2 = v1;

  return v2;
}

double sub_1DA598344()
{
  id v0;
  double v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v0, sel_backgroundTimeRemaining);
  v2 = v1;

  return v2;
}

uint64_t RemoveEpisodesDownloadAction.init(actionMetrics:episodeIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for RemoveEpisodesDownloadAction();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for RemoveEpisodesDownloadAction()
{
  uint64_t result;

  result = qword_1F026BA18;
  if (!qword_1F026BA18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RemoveEpisodesDownloadAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoveEpisodesDownloadAction.episodeIDs.getter()
{
  type metadata accessor for RemoveEpisodesDownloadAction();
  return swift_bridgeObjectRetain();
}

uint64_t RemoveEpisodesDownloadAction.intent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RemoveEpisodesDownloadAction() + 20));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DA5984C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5984D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 20));
  return swift_bridgeObjectRetain();
}

unint64_t sub_1DA5984E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA598504();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA598504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026A890;
  if (!qword_1F026A890)
  {
    v1 = type metadata accessor for RemoveEpisodesDownloadAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RemoveEpisodesDownloadAction, v1);
    atomic_store(result, (unint64_t *)&qword_1F026A890);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoveEpisodesDownloadAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA598558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoveEpisodesDownloadAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5985E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

double sub_1DA59865C()
{
  id *v0;
  double v1;

  objc_msgSend(*v0, sel_displayScale);
  return CGFloat.safeDisplayScale.getter(v1);
}

double CGFloat.roundValue(scale:)(double a1, double a2)
{
  double v3;

  v3 = CGFloat.safeDisplayScale.getter(a1);
  return round(v3 * a2) / v3;
}

double CGFloat.ceilingValue(scale:)(double a1, double a2)
{
  double v3;

  v3 = CGFloat.safeDisplayScale.getter(a1);
  return ceil(v3 * a2) / v3;
}

double CGFloat.floorValue(scale:)(double a1, double a2)
{
  double v3;

  v3 = CGFloat.safeDisplayScale.getter(a1);
  return floor(v3 * a2) / v3;
}

double sub_1DA598700()
{
  double *v0;

  return CGFloat.safeDisplayScale.getter(*v0);
}

double Optional<A>.safeDisplayScale.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v13, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    v14 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v14, sel_scale);
    v16 = v15;

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v6, v8);
    v16 = (*(double (**)(uint64_t, uint64_t))(a2 + 8))(v8, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return v16;
}

uint64_t dispatch thunk of SafeDisplayScaleVending.safeDisplayScale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PageRenderContentTypes.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PageRenderContentTypes.init(rawValue:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static PageRenderContentTypes.sidepack.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static PageRenderContentTypes.primaryData.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static PageRenderContentTypes.resource.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

unint64_t sub_1DA5988A8()
{
  unint64_t result;

  result = qword_1EDAE1450;
  if (!qword_1EDAE1450)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderContentTypes, &type metadata for PageRenderContentTypes);
    atomic_store(result, (unint64_t *)&qword_1EDAE1450);
  }
  return result;
}

unint64_t sub_1DA5988F0()
{
  unint64_t result;

  result = qword_1EDAE1458;
  if (!qword_1EDAE1458)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderContentTypes, &type metadata for PageRenderContentTypes);
    atomic_store(result, (unint64_t *)&qword_1EDAE1458);
  }
  return result;
}

unint64_t sub_1DA598938()
{
  unint64_t result;

  result = qword_1EDAE1448;
  if (!qword_1EDAE1448)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderContentTypes, &type metadata for PageRenderContentTypes);
    atomic_store(result, (unint64_t *)&qword_1EDAE1448);
  }
  return result;
}

unint64_t sub_1DA598980()
{
  unint64_t result;

  result = qword_1EDAE1460;
  if (!qword_1EDAE1460)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderContentTypes, &type metadata for PageRenderContentTypes);
    atomic_store(result, (unint64_t *)&qword_1EDAE1460);
  }
  return result;
}

NSAttributedString_optional __swiftcall MTEpisode.lazyAttributedDescription()()
{
  void *v0;
  id v1;
  Swift::Bool v2;
  id v3;
  id v4;
  id v5;
  id v6;
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  objc_class *v11;
  _QWORD v12[6];
  NSAttributedString_optional result;

  v1 = objc_msgSend(v0, sel_attributedDescriptionFromHTML);
  if (v1)
  {
    v3 = v1;
  }
  else
  {
    v3 = sub_1DA598B10();
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v5 = objc_msgSend(v4, sel_privateQueueContext);

    v6 = objc_msgSend(v0, sel_objectID);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v5;
    v7[3] = v6;
    v7[4] = v3;
    v12[4] = sub_1DA598D6C;
    v12[5] = v7;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1DA4A9194;
    v12[3] = &block_descriptor_13;
    v8 = _Block_copy(v12);
    v9 = v3;
    v10 = v5;
    swift_release();
    objc_msgSend(v10, sel_performBlock_, v8);
    _Block_release(v8);

  }
  v11 = (objc_class *)v3;
  result.value.super.isa = v11;
  result.is_nil = v2;
  return result;
}

id sub_1DA598B10()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  if (!objc_msgSend(v0, sel_itemDescriptionHasHTML))
    return 0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_itemDescription);
  sub_1DA4950BC(MEMORY[0x1E0DEE9D8]);
  v3 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_safeAttributedStringWithHTML_attributes_, v2, v3);

  v5 = objc_msgSend(v4, sel_attributedStringWithDefaultLineSpacing);
  v6 = objc_msgSend(v5, sel_attributedStringByTrimmingWhitespaceNewlinesAndObjectReplacementCharacters);

  return v6;
}

void sub_1DA598C24(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v14[0] = 0;
  v5 = objc_msgSend(a1, sel_existingObjectWithID_error_, a2, v14);
  v6 = v14[0];
  if (v5)
  {
    v7 = v5;
    objc_opt_self();
    v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v6;
      objc_msgSend(v9, sel_setAttributedDescriptionFromHTML_, a3);
      objc_msgSend(a1, sel_saveInCurrentBlock);
    }
    else
    {
      v13 = v6;
    }

  }
  else
  {
    v11 = v14[0];
    v12 = (void *)sub_1DA66C1FC();

    swift_willThrow();
  }
}

uint64_t sub_1DA598D38()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1DA598D6C()
{
  uint64_t v0;

  sub_1DA598C24(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_1DA598D78(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)MTEpisode.lazyAttributedDescription()();

  return v2;
}

uint64_t DismissPurgedEpisodesAction.init(actionMetrics:episodesToDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_1DA66ED64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for DismissPurgedEpisodesAction();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for DismissPurgedEpisodesAction()
{
  uint64_t result;

  result = qword_1F026BAA8;
  if (!qword_1F026BAA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DismissPurgedEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DismissPurgedEpisodesAction.episodesToDismiss.getter()
{
  type metadata accessor for DismissPurgedEpisodesAction();
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for DismissPurgedEpisodesAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA598EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DismissPurgedEpisodesAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA598F2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t ImpressionMetrics.withIndex(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, _QWORD);
  id v17;
  id v18;
  _QWORD v20[4];
  _BYTE v21[32];

  v5 = sub_1DA66EFB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - v10;
  v12 = sub_1DA66EFEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, v2, v12);
  sub_1DA66EFC8();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  sub_1DA66EF74();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DA66EFD4();
  v13 = sub_1DA66CB74();
  v15 = v14;
  v16 = (uint64_t (*)(_BYTE *, _QWORD))sub_1DA66EFE0();
  v17 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v18 = objc_msgSend(v17, sel_initWithInteger_, a1);
  v20[3] = sub_1DA52A3C8();
  v20[0] = v18;
  sub_1DA534890((uint64_t)v20, v13, v15);
  swift_bridgeObjectRelease();
  return v16(v21, 0);
}

uint64_t ImpressionMetrics.ID.withIndex(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66EFB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  return sub_1DA66EF74();
}

uint64_t ImpressionMetrics.withUniqueID(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];

  v7 = sub_1DA66EFB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  if (!a2)
    goto LABEL_6;
  v12 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v12 = a1 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    v13 = sub_1DA66EFEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a3, v3, v13);
    sub_1DA66EFC8();
    swift_bridgeObjectRetain();
    sub_1DA66EF8C();
    v16[0] = a1;
    sub_1DA66EFA4();
    v16[1] = a3;
    sub_1DA66EF68();
    sub_1DA66EF80();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return sub_1DA66EFD4();
  }
  else
  {
LABEL_6:
    v15 = sub_1DA66EFEC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, v3, v15);
  }
}

uint64_t ImpressionMetrics.ID.withUniqueID(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  if (!a2)
    goto LABEL_6;
  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1DA66EF8C();
    sub_1DA66EFA4();
    sub_1DA66EF68();
    return sub_1DA66EF80();
  }
  else
  {
LABEL_6:
    v7 = sub_1DA66EFB0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v3, v7);
  }
}

uint64_t static ImpressionMetrics.shelf(id:idType:uniqueID:impressionType:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  uint64_t v51;

  v44 = a5;
  v45 = a6;
  v42 = a1;
  v43 = a2;
  v46 = a9;
  v14 = sub_1DA66EF2C();
  MEMORY[0x1E0C80A78](v14);
  v40[1] = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66EFB0();
  MEMORY[0x1E0C80A78](v16);
  v40[0] = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66CAB4();
  v20 = v19;
  v21 = MEMORY[0x1E0DEA968];
  v51 = MEMORY[0x1E0DEA968];
  v41 = a7;
  *(_QWORD *)&v50 = a7;
  *((_QWORD *)&v50 + 1) = a8;
  sub_1DA49ACF0(&v50, v49);
  swift_bridgeObjectRetain();
  v22 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v48 = v22;
  sub_1DA534964(v49, v18, v20, isUniquelyReferenced_nonNull_native);
  v40[2] = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48 = v22;
  v24 = sub_1DA66CAFC();
  v26 = v24;
  v27 = v25;
  if (a4)
  {
    v51 = v21;
    *(_QWORD *)&v50 = a3;
    *((_QWORD *)&v50 + 1) = a4;
    sub_1DA49ACF0(&v50, v49);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v47 = v22;
    v48 = 0x8000000000000000;
    sub_1DA534964(v49, v26, v27, v28);
    v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v24, v25, &v50);
    sub_1DA480E84((uint64_t)&v50);
  }
  swift_bridgeObjectRelease();
  v29 = sub_1DA66CB50();
  v31 = v29;
  v32 = v30;
  if (*((_QWORD *)&a10 + 1))
  {
    v51 = v21;
    v50 = a10;
    sub_1DA49ACF0(&v50, v49);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v33 = v48;
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v47 = v33;
    v48 = 0x8000000000000000;
    sub_1DA534964(v49, v31, v32, v34);
    v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v29, v30, &v50);
    sub_1DA480E84((uint64_t)&v50);
  }
  swift_bridgeObjectRelease();
  v35 = sub_1DA66CAC0();
  v37 = v36;
  v51 = v21;
  *(_QWORD *)&v50 = v41;
  *((_QWORD *)&v50 + 1) = a8;
  sub_1DA49ACF0(&v50, v49);
  swift_bridgeObjectRetain();
  v38 = swift_isUniquelyReferenced_nonNull_native();
  v47 = v22;
  sub_1DA534964(v49, v35, v37, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DA66EF80();
  sub_1DA66EF20();
  return sub_1DA66EFBC();
}

uint64_t static ImpressionMetrics.shelfItem(id:idType:uniqueID:impressionType:kind:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD v56[2];
  __int128 v57;
  uint64_t v58;

  v51 = a5;
  v52 = a6;
  v49 = a1;
  v50 = a2;
  v53 = a9;
  v15 = sub_1DA66EF2C();
  MEMORY[0x1E0C80A78](v15);
  v47[1] = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DA66EFB0();
  MEMORY[0x1E0C80A78](v17);
  v47[0] = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1DA66CAB4();
  v21 = v20;
  v22 = MEMORY[0x1E0DEA968];
  v58 = MEMORY[0x1E0DEA968];
  v48 = a7;
  *(_QWORD *)&v57 = a7;
  *((_QWORD *)&v57 + 1) = a8;
  sub_1DA49ACF0(&v57, v56);
  swift_bridgeObjectRetain();
  v23 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55 = v23;
  sub_1DA534964(v56, v19, v21, isUniquelyReferenced_nonNull_native);
  v47[2] = v55;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55 = v23;
  v25 = sub_1DA66CAFC();
  v27 = v25;
  v28 = v26;
  if (a4)
  {
    v58 = v22;
    *(_QWORD *)&v57 = a3;
    *((_QWORD *)&v57 + 1) = a4;
    sub_1DA49ACF0(&v57, v56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v23;
    v55 = 0x8000000000000000;
    sub_1DA534964(v56, v27, v28, v29);
    v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v25, v26, &v57);
    sub_1DA480E84((uint64_t)&v57);
  }
  swift_bridgeObjectRelease();
  v30 = sub_1DA66CACC();
  v32 = v30;
  v33 = v31;
  if (*((_QWORD *)&a10 + 1))
  {
    v58 = v22;
    v57 = a10;
    sub_1DA49ACF0(&v57, v56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v34 = v55;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v34;
    v55 = 0x8000000000000000;
    sub_1DA534964(v56, v32, v33, v35);
    v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v30, v31, &v57);
    sub_1DA480E84((uint64_t)&v57);
  }
  swift_bridgeObjectRelease();
  v36 = sub_1DA66CB50();
  v38 = v36;
  v39 = v37;
  if (*((_QWORD *)&a11 + 1))
  {
    v58 = v22;
    v57 = a11;
    sub_1DA49ACF0(&v57, v56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v40 = v55;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v54 = v40;
    v55 = 0x8000000000000000;
    sub_1DA534964(v56, v38, v39, v41);
    v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v36, v37, &v57);
    sub_1DA480E84((uint64_t)&v57);
  }
  swift_bridgeObjectRelease();
  v42 = sub_1DA66CAC0();
  v44 = v43;
  v58 = v22;
  *(_QWORD *)&v57 = v48;
  *((_QWORD *)&v57 + 1) = a8;
  sub_1DA49ACF0(&v57, v56);
  swift_bridgeObjectRetain();
  v45 = swift_isUniquelyReferenced_nonNull_native();
  v54 = v23;
  sub_1DA534964(v56, v42, v44, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DA66EF80();
  sub_1DA66EF20();
  return sub_1DA66EFBC();
}

uint64_t sub_1DA599B6C(double *a1, double *a2)
{
  return sub_1DA599B78(*a1, *a2);
}

uint64_t sub_1DA599B78(double a1, double a2)
{
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;

  if (a1 < a2)
    return 1;
  v3 = fabs(a1);
  v4 = fabs(a2);
  if (v4 < v3)
    v3 = v4;
  v5 = (*(_QWORD *)&v3 >> 52) & 0x7FFLL;
  if (!v5)
  {
    v7 = 1;
LABEL_9:
    v6 = *(double *)&v7;
    return vabdd_f64(a1, a2) < v6;
  }
  if (v5 == 2047)
  {
    v7 = 0x7FF8000000000000;
    goto LABEL_9;
  }
  v6 = COERCE_DOUBLE(*(_QWORD *)&v3 & 0x7FF0000000000000) * 2.22044605e-16;
  return vabdd_f64(a1, a2) < v6;
}

uint64_t static ApproximatelyComparable.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA599C74(a1, a2, a3, a4);
}

uint64_t sub_1DA599BF0(double *a1, double *a2)
{
  return sub_1DA599BFC(*a1, *a2);
}

uint64_t sub_1DA599BFC(double a1, double a2)
{
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;

  if (a2 < a1)
    return 1;
  v3 = fabs(a1);
  v4 = fabs(a2);
  if (v4 < v3)
    v3 = v4;
  v5 = (*(_QWORD *)&v3 >> 52) & 0x7FFLL;
  if (!v5)
  {
    v7 = 1;
LABEL_9:
    v6 = *(double *)&v7;
    return vabdd_f64(a1, a2) < v6;
  }
  if (v5 == 2047)
  {
    v7 = 0x7FF8000000000000;
    goto LABEL_9;
  }
  v6 = COERCE_DOUBLE(*(_QWORD *)&v3 & 0x7FF0000000000000) * 2.22044605e-16;
  return vabdd_f64(a1, a2) < v6;
}

uint64_t static ApproximatelyComparable.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DA599C74(a1, a2, a3, a4);
}

uint64_t sub_1DA599C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = *(_QWORD *)(a3 - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v21 - v13;
  v16 = v15(v12);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17(v14, a1, a3);
  v17(v11, a2, a3);
  if ((v16 & 1) != 0)
    v18 = 1;
  else
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(*(_QWORD *)(a4 + 8) + 16))(v14, v11, a3);
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v11, a3);
  v19(v14, a3);
  return v18 & 1;
}

uint64_t dispatch thunk of static ApproximatelyComparable.<=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1DA599D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ApproximatelyComparable.<=~ infix(_:_:)(a1, a2, a3, a4) & 1;
}

uint64_t dispatch thunk of static ApproximatelyComparable.>=~ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1DA599DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ApproximatelyComparable.>=~ infix(_:_:)(a1, a2, a3, a4) & 1;
}

uint64_t JSONTypeCluster<>.makeInstance(byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a5;
  v36 = a2;
  v34 = a6;
  v38 = a4;
  v41 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_1DA670294();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  v15 = sub_1DA66EC20();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  sub_1DA66EC2C();
  v19 = sub_1DA66EC08();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v21)
  {
    v26 = sub_1DA66F6DC();
    sub_1DA59A0CC();
    swift_allocError();
    v28 = v27;
    v29 = swift_getAssociatedTypeWitness();
    *v28 = 0x646E696B24;
    v28[1] = 0xE500000000000000;
    v28[2] = v29;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0D414E8], v26);
    return swift_willThrow();
  }
  v31 = v19;
  v39 = v19;
  v40 = v21;
  swift_bridgeObjectRetain();
  sub_1DA66FA60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    v22 = sub_1DA66F6DC();
    sub_1DA59A0CC();
    swift_allocError();
    v24 = v23;
    v25 = swift_getAssociatedTypeWitness();
    *v24 = v31;
    v24[1] = v21;
    v24[2] = v25;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0D414E0], v22);
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, AssociatedTypeWitness);
  sub_1DA66EE48();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

unint64_t sub_1DA59A0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE1F70;
  if (!qword_1EDAE1F70)
  {
    v1 = sub_1DA66F6DC();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0D41508], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE1F70);
  }
  return result;
}

uint64_t JSONTypeCluster<>.tryToMakeInstance(byDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;

  JSONTypeCluster<>.makeInstance(byDeserializing:using:)(a1, a2, a3, a4, a5, a6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a6, 0, 1, AssociatedTypeWitness);
}

uint64_t JSONTypeCluster<>.makeInstances(byDeserializing:using:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1DA66F6D0();
}

uint64_t sub_1DA59A24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return JSONTypeCluster<>.makeInstance(byDeserializing:using:)(a1, v2[7], v2[2], v2[3], v2[5], a2);
}

uint64_t JSONTypeCluster<>.tryToMakeInstances(byDeserializing:using:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1DA66F6C4();
}

uint64_t sub_1DA59A2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return JSONTypeCluster<>.tryToMakeInstance(byDeserializing:using:)(a1, v2[7], v2[2], v2[3], v2[5], a2);
}

uint64_t sub_1DA59A320(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1EDAE2830);
}

uint64_t static OSLogger.actions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1EDAE2850, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1EDAE2830, a1);
}

uint64_t sub_1DA59A364(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1F026BAE0);
}

uint64_t static OSLogger.bootstrap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1F0268588, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1F026BAE0, a1);
}

uint64_t sub_1DA59A3AC(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1F026BAF8);
}

uint64_t static OSLogger.bugs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(qword_1F0268590, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1F026BAF8, a1);
}

uint64_t sub_1DA59A3E8(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1EDAE4AA8);
}

uint64_t static OSLogger.jsonDeserialization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1EDAE2828, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1EDAE4AA8, a1);
}

uint64_t static OSLogger.js.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1EDADFFC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1EDADFFA8, a1);
}

uint64_t sub_1DA59A454(uint64_t a1)
{
  return sub_1DA4A92B0(a1, qword_1EDAE2858);
}

uint64_t static OSLogger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DA4A9220(&qword_1EDAE2878, (uint64_t (*)(_QWORD))MEMORY[0x1E0D413F0], (uint64_t)qword_1EDAE2858, a1);
}

id NowPlayingArtworkProviderObjCWrapper.__allocating_init(artworkProvider:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1DA4813E4(a1, (uint64_t)v3 + OBJC_IVAR___MTNowPlayingArtworkProvider_artworkProvider);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id NowPlayingArtworkProviderObjCWrapper.init(artworkProvider:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1DA4813E4(a1, (uint64_t)v1 + OBJC_IVAR___MTNowPlayingArtworkProvider_artworkProvider);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

id NowPlayingArtworkProviderObjCWrapper.fetchInfoCenterArtwork(with:at:of:completion:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(id *, _QWORD *, uint64_t, uint64_t, double, double, double);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;
  id v34;
  _QWORD v35[5];

  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE20A0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4FF0);
  v32 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v6 + OBJC_IVAR___MTNowPlayingArtworkProvider_artworkProvider + 24);
  v20 = *(_QWORD *)(v6 + OBJC_IVAR___MTNowPlayingArtworkProvider_artworkProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + OBJC_IVAR___MTNowPlayingArtworkProvider_artworkProvider), v19);
  LOBYTE(v34) = 2;
  v35[3] = sub_1DA47D774(0, &qword_1F026BB18);
  v35[4] = &protocol witness table for IMPlayerItem;
  v35[0] = a1;
  v21 = *(uint64_t (**)(id *, _QWORD *, uint64_t, uint64_t, double, double, double))(v20 + 8);
  v22 = a1;
  v23 = v21(&v34, v35, v19, v20, a4, a5, a6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  v35[0] = v23;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE5050);
  v34 = (id)sub_1DA66FEC8();
  v24 = sub_1DA66FE8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  sub_1DA4A89F0();
  sub_1DA66E248();
  sub_1DA4A8A48((uint64_t)v15);

  swift_release();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a2;
  *(_QWORD *)(v25 + 24) = a3;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  *(_QWORD *)(v26 + 24) = a3;
  sub_1DA4841D4(&qword_1EDAE4FE8, &qword_1EDAE4FF0, MEMORY[0x1E0C95CB8]);
  swift_retain_n();
  v27 = sub_1DA66E1AC();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
  v28 = (objc_class *)type metadata accessor for NowPlayingArtworkRequestObjCWrapper();
  v29 = (char *)objc_allocWithZone(v28);
  *(_QWORD *)&v29[OBJC_IVAR___MTNowPlayingArtworkRequest_cancellable] = v27;
  v33.receiver = v29;
  v33.super_class = v28;
  return objc_msgSendSuper2(&v33, sel_init);
}

void sub_1DA59A878(void **a1, void (*a2)(_QWORD, void *))
{
  void *v2;
  id v4;
  void *v5;

  v2 = *a1;
  if (*a1)
  {
    v4 = v2;
    v5 = (void *)sub_1DA66C1F0();
    a2(0, v5);

  }
}

uint64_t sub_1DA59A8E0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA59A904(void **a1)
{
  uint64_t v1;

  sub_1DA59A878(a1, *(void (**)(_QWORD, void *))(v1 + 16));
}

uint64_t sub_1DA59A90C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, 0);
}

uint64_t type metadata accessor for NowPlayingArtworkRequestObjCWrapper()
{
  return objc_opt_self();
}

void NowPlayingArtworkProviderObjCWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NowPlayingArtworkProviderObjCWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA59AAA4()
{
  return sub_1DA66DF9C();
}

id NowPlayingArtworkRequestObjCWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NowPlayingArtworkRequestObjCWrapper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NowPlayingArtworkRequestObjCWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingArtworkRequestObjCWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for NowPlayingArtworkProviderObjCWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingArtworkProviderObjCWrapper.__allocating_init(artworkProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for NowPlayingArtworkRequestObjCWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NowPlayingArtworkRequestObjCWrapper.cancel()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t sub_1DA59ABFC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1DA59AC20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t AssetProcessingStep<>.applyingEffects(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v10, v4, a2, v8);
  v12 = swift_bridgeObjectRetain();
  return sub_1DA59AD0C(v12, (uint64_t)v10, a2, a3, a4);
}

uint64_t sub_1DA59ACD4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1DA59AD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v23 = a5;
  v24 = a1;
  v9 = sub_1DA66CEBC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - v14;
  v17 = type metadata accessor for EffectsArtworkProcessingStep(0, a3, a4, v16);
  v18 = *(_QWORD *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a5 + *(int *)(v17 + 36), a2, a3);
  sub_1DA66D4A4();
  v19 = v24;
  sub_1DA66CE08();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, a3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v21 = v23;
  result = v20(v23, v15, v9);
  *(_QWORD *)(v21 + *(int *)(v17 + 40)) = v19;
  return result;
}

uint64_t EffectsArtworkProcessingStep.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

unint64_t sub_1DA59AE84@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = (unint64_t)ArtworkContent.image()();
  *a1 = result;
  return result;
}

uint64_t sub_1DA59AEAC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t *v31;

  v28 = a4;
  v29 = a5;
  v27 = a3;
  v31 = a6;
  v10 = sub_1DA66CEBC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = type metadata accessor for EffectsArtworkProcessingStep(0, a4, a5, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v26 - v17;
  v30 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v26 - v17, a2, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v10);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = (v16 + *(unsigned __int8 *)(v11 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = swift_allocObject();
  v22 = v29;
  *(_QWORD *)(v21 + 16) = v28;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21 + v19, v18, v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v23 = v30;
  *(_QWORD *)(v21 + ((v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
  swift_allocObject();
  v24 = v23;
  result = sub_1DA66E074();
  *v31 = result;
  return result;
}

uint64_t sub_1DA59B068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, uint64_t);

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for EffectsArtworkProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = sub_1DA66CEBC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = v4 + v8;
  v14 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v14(v13, v10);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v13 + *(int *)(v6 + 36), v5);
  swift_bridgeObjectRelease();
  v14(v4 + v12, v10);
  return swift_deallocObject();
}

uint64_t sub_1DA59B148@<X0>(void **a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(type metadata accessor for EffectsArtworkProcessingStep(0, v6, v7, a2) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66CEBC() - 8) + 80);
  return sub_1DA59AEAC(a1, v3 + v9, v3 + ((v9 + v10 + v11) & ~v11), v6, v7, a3);
}

uint64_t sub_1DA59B1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v15 = type metadata accessor for EffectsArtworkProcessingStep(0, a6, a7, v14);
  sub_1DA66BE60();
  MEMORY[0x1DF0A039C](&protocol conformance descriptor for EffectsArtworkProcessingStep<A>, v15);
  sub_1DA66D4D4();
  if (v19)
  {
    __swift_project_boxed_opaque_existential_1(v18, v19);
    sub_1DA66CE80();
    sub_1DA66DC9C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v18, &qword_1EDAE5310);
    memset(v20, 0, sizeof(v20));
    v21 = 0;
  }
  sub_1DA59C760((uint64_t)v20, (uint64_t)v18);
  v16 = swift_allocObject();
  sub_1DA59C7DC((uint64_t)v18, v16 + 16);
  *(_QWORD *)(v16 + 56) = sub_1DA59C728;
  *(_QWORD *)(v16 + 64) = v13;
  sub_1DA59B424(a4, a5, (uint64_t)sub_1DA59C824, v16);
  swift_release();
  return sub_1DA47E2F0((uint64_t)v20, &qword_1EDAE19B0);
}

uint64_t sub_1DA59B380(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  _QWORD v8[3];
  uint64_t v9;

  sub_1DA59C760(a3, (uint64_t)v8);
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(v8, v9);
    sub_1DA66CD90();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  else
  {
    sub_1DA47E2F0((uint64_t)v8, &qword_1EDAE19B0);
  }
  return a4(a1, a2 & 1);
}

uint64_t sub_1DA59B424(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v20;

  v8 = sub_1DA66CEBC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0;
  *((_QWORD *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v17 = &v16[(v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v18 = a2;
  sub_1DA66BE60();
  sub_1DA569804((uint64_t)v13, (uint64_t)&unk_1F026BBD8, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1DA59B590@<X0>(UIImage **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a4;
  v7 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1DA66C358();
  v10 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1DA59B888(*a1);
  if (v14 >> 60 == 15)
  {
    v16 = type metadata accessor for EffectsArtworkProcessingStep.EffectError(0, a2, a3, v15);
    MEMORY[0x1DF0A039C](&protocol conformance descriptor for EffectsArtworkProcessingStep<A>.EffectError, v16);
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v18 = v13;
    v19 = v14;
    sub_1DA66CE68();
    sub_1DA4E8990((uint64_t)v9);
    sub_1DA59B92C((uint64_t)v12);
    v20 = v23;
    sub_1DA66C3A0();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
      return sub_1DA49873C(v18, v19);
    }
    else
    {
      sub_1DA49873C(v18, v19);
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v12, v22);
      sub_1DA66CDA8();
      return swift_storeEnumTagMultiPayload();
    }
  }
}

uint64_t sub_1DA59B76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for EffectsArtworkProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  v9 = sub_1DA66CEBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA59B814@<X0>(UIImage **a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  type metadata accessor for EffectsArtworkProcessingStep(0, v6, v7, a2);
  return sub_1DA59B590(a1, v6, v7, a3);
}

uint64_t sub_1DA59B888(UIImage *a1)
{
  int v2;
  NSData *v3;
  NSData *v4;
  uint64_t v5;

  v2 = sub_1DA66CC1C();
  if ((v2 - 1) >= 2)
  {
    if (v2)
      return UIImage.heicData(compressionQuality:)(1.0);
    v3 = UIImagePNGRepresentation(a1);
    if (v3)
      goto LABEL_3;
    return 0;
  }
  v3 = UIImageJPEGRepresentation(a1, 1.0);
  if (!v3)
    return 0;
LABEL_3:
  v4 = v3;
  v5 = sub_1DA66C394();

  return v5;
}

uint64_t sub_1DA59B92C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[4];

  v16[1] = a1;
  v1 = sub_1DA66C454();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C358();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v16 - v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v13 = objc_msgSend(v12, sel_temporaryDirectory);

  sub_1DA66C304();
  sub_1DA66C448();
  sub_1DA66C43C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1DA66C2E0();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v16[2] = 0x656666652E706D74;
  v16[3] = 0xEB000000002E7463;
  sub_1DA66CC28();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66C2EC();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

uint64_t sub_1DA59BB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_1DA66C5B0();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA59BB68()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 16);
  sub_1DA66CDC0();
  sub_1DA66CDD8();
  v2 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithUserInterfaceStyle_, 2);
  v3 = v1;
  sub_1DA66C5A4();
  sub_1DA66C598();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_1DA59BC3C;
  return sub_1DA66C58C();
}

uint64_t sub_1DA59BC3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA59BCB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void *, _QWORD);
  id v6;

  v1 = *(void **)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(void (**)(void *, _QWORD))(v0 + 32);
  v6 = v1;
  v5(v1, 0);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA59BD34()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  v1 = *(void **)(v0 + 80);
  v2 = *(void (**)(void *, uint64_t))(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static EffectsArtworkProcessingStep.EffectError.== infix(_:_:)()
{
  return 1;
}

uint64_t EffectsArtworkProcessingStep.EffectError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t EffectsArtworkProcessingStep.EffectError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

void sub_1DA59BE14()
{
  JUMPOUT(0x1DF0A039CLL);
}

uint64_t *sub_1DA59BE24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    sub_1DA66BE60();
  }
  else
  {
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v18 = ((unint64_t)a2 + v11) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v8);
    *(_QWORD *)((v12 + (((unint64_t)a1 + v11) & v17)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + v18) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DA59BF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DA59BFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DA59C094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DA59C140(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;

  v6 = sub_1DA66CEBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64) + 7;
  if (v12 < a2)
  {
    if (((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X4 }
  }
  if (v8 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v22 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v21(v22, v11, v9);
  }
  v22 = (v15 + a1) & ~v14;
  if ((_DWORD)v11 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v21(v22, v11, v9);
  }
  v23 = *(_QWORD *)((v16 + v22) & 0xFFFFFFFFFFFFF8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void sub_1DA59C2C8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0u;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1DA59C3F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1DA59C48CLL);
}

void sub_1DA59C400()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1DA59C408);
  JUMPOUT(0x1DA59C48CLL);
}

void sub_1DA59C454()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA59C48CLL);
}

void sub_1DA59C45C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1DA59C48CLL);
}

uint64_t sub_1DA59C464@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v13 + v15) = 0;
  if (!(_DWORD)v14)
    JUMPOUT(0x1DA59C48CLL);
  if ((_DWORD)v7 == v10)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v4 = v13;
    v5 = v14;
    a1 = v7;
    a2 = a3;
  }
  else
  {
    v4 = (v11 + v13) & v12;
    if ((_DWORD)a1 != v10)
      JUMPOUT(0x1DA59C470);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v5 = v14;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t sub_1DA59C4A4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA59C4E4 + 4 * byte_1DA67EF3F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA59C504 + 4 * byte_1DA67EF44[v4]))();
}

_BYTE *sub_1DA59C4E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA59C504(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA59C50C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA59C514(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA59C51C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA59C524(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for EffectsArtworkProcessingStep.EffectError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EffectsArtworkProcessingStep.EffectError);
}

uint64_t sub_1DA59C53C()
{
  return sub_1DA4841D4((unint64_t *)&qword_1EDAE4750, &qword_1EDAE4758, MEMORY[0x1E0C95D90]);
}

uint64_t sub_1DA59C568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(unint64_t, uint64_t);

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for EffectsArtworkProcessingStep(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = sub_1DA66CEBC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = v4 + v8;
  v15 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v15(v14, v10);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v14 + *(int *)(v6 + 36), v5);
  swift_bridgeObjectRelease();
  v15(v4 + v12, v10);

  return swift_deallocObject();
}

uint64_t sub_1DA59C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(_QWORD *)(type metadata accessor for EffectsArtworkProcessingStep(0, v7, v8, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_1DA59B1DC(a1, a2, v4 + v10, v4 + v13, *(void **)(v4 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)), v7, v8);
}

uint64_t sub_1DA59C704()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA59C728(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1DA59C760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA59C7A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA59C7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA59C824(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1DA59B380(a1, a2 & 1, v2 + 16, *(uint64_t (**)(uint64_t, _QWORD))(v2 + 56));
}

uint64_t sub_1DA59C834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66CEBC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA59C8D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1DA4AD77C;
  return sub_1DA59BB04(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1DA59C98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1DA59C9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  v4 = sub_1DA66E560();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_1DA66E56C();
}

uint64_t sub_1DA59CA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  v5 = sub_1DA66E560();
  v6 = MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_1DA66E56C();
}

uint64_t sub_1DA59CB2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B338);
  return sub_1DA66E944();
}

uint64_t sub_1DA59CB84(uint64_t a1)
{
  return sub_1DA59CB9C(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF970]);
}

uint64_t sub_1DA59CB90(uint64_t a1)
{
  return sub_1DA59CB9C(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDF990]);
}

uint64_t sub_1DA59CB9C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1DA66E8F0();
  return a2(v3);
}

void sub_1DA59CBE0()
{
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA59CC18()
{
  sub_1DA670294();
  sub_1DA66E8F0();
  return sub_1DA66E8CC();
}

uint64_t sub_1DA59CC48()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
  return sub_1DA66E8D8();
}

uint64_t sub_1DA59CCA0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(qword_1F026B2B0);
  sub_1DA66E8E4();
  return v1;
}

uint64_t sub_1DA59CCF8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026BD60);
  sub_1DA66E8CC();
  return v1;
}

uint64_t sub_1DA59CD40()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026BD60);
  return sub_1DA66E8D8();
}

uint64_t sub_1DA59CD8C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026BD60);
  sub_1DA66E8CC();
  return v1;
}

uint64_t sub_1DA59CDD4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026BD60);
  return sub_1DA66E8D8();
}

uint64_t AsyncSelectionConfirmingPicker.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, _QWORD *);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, _QWORD *);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v84 = a2;
  v81 = *(_QWORD *)(a1 - 8);
  v82 = *(_QWORD *)(v81 + 64);
  MEMORY[0x1E0C80A78](a1);
  v80 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v3 + 24);
  v83 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v6;
  v7 = v6[5];
  v90 = v6[4];
  v87 = v6[6];
  v102 = MEMORY[0x1E0CDDD78];
  v103 = v4;
  v104 = v90;
  v105 = MEMORY[0x1E0CDDD58];
  v106 = v7;
  v107 = v87;
  v8 = sub_1DA66E92C();
  v9 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v8);
  v102 = v8;
  v103 = v9;
  MEMORY[0x1DF0A0348](255, &v102, MEMORY[0x1E0CDEEB8], 0);
  v10 = sub_1DA66E578();
  v102 = v8;
  v103 = v9;
  MEMORY[0x1DF0A0348](255, &v102, MEMORY[0x1E0CDDFB8], 0);
  v11 = sub_1DA66E578();
  v12 = sub_1DA66E578();
  v66 = (void (*)(char *, uint64_t, _QWORD *))v12;
  v13 = sub_1DA66E890();
  v78 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)&v64 - v14;
  v102 = v8;
  v103 = v9;
  v101[0] = swift_getOpaqueTypeConformance2();
  v101[1] = v9;
  v15 = MEMORY[0x1E0CDB8A0];
  v16 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v10, v101);
  v102 = v8;
  v103 = v9;
  v100[0] = swift_getOpaqueTypeConformance2();
  v100[1] = v9;
  v17 = MEMORY[0x1DF0A039C](v15, v11, v100);
  v99[0] = v16;
  v99[1] = v17;
  v65 = MEMORY[0x1DF0A039C](v15, v12, v99);
  v98 = v65;
  v18 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDF690], v13, &v98);
  v86 = v7;
  v19 = *(_QWORD *)(v7 + 8);
  v102 = v13;
  v103 = v4;
  v20 = v13;
  v68 = v13;
  v104 = v18;
  v105 = v19;
  v21 = v18;
  v69 = v18;
  v22 = v19;
  v67 = v19;
  v23 = MEMORY[0x1E0CDF150];
  v24 = MEMORY[0x1DF0A0348](0, &v102, MEMORY[0x1E0CDF150], 0);
  v76 = *(_QWORD *)(v24 - 8);
  v25 = v24;
  v72 = v24;
  MEMORY[0x1E0C80A78](v24);
  v88 = (char *)&v64 - v26;
  v102 = v20;
  v103 = v4;
  v104 = v21;
  v105 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v102 = v25;
  v103 = v4;
  v27 = v4;
  v104 = OpaqueTypeConformance2;
  v105 = v22;
  v75 = MEMORY[0x1DF0A0348](0, &v102, v23, 0);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v70 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v71 = (char *)&v64 - v30;
  v31 = v77;
  v85 = v77[2];
  v92 = v85;
  v93 = v4;
  v32 = v90;
  v94 = v90;
  v95 = v7;
  v33 = v87;
  v34 = v91;
  v96 = v87;
  v97 = v91;
  sub_1DA66E884();
  sub_1DA66E8F0();
  v35 = v79;
  sub_1DA66E8CC();
  v36 = v81;
  v66 = *(void (**)(char *, uint64_t, _QWORD *))(v81 + 16);
  v37 = v80;
  v66(v80, v34, v31);
  v38 = *(unsigned __int8 *)(v36 + 80);
  v39 = v36;
  v82 += (v38 + 56) & ~v38;
  v40 = (v38 + 56) & ~v38;
  v65 = v40;
  v64 = v38 | 7;
  v41 = (char *)swift_allocObject();
  *((_QWORD *)v41 + 2) = v85;
  *((_QWORD *)v41 + 3) = v27;
  v42 = v27;
  v43 = v86;
  *((_QWORD *)v41 + 4) = v32;
  *((_QWORD *)v41 + 5) = v43;
  *((_QWORD *)v41 + 6) = v33;
  v44 = *(void (**)(char *, char *, _QWORD *))(v39 + 32);
  v44(&v41[v40], v37, v31);
  v45 = v35;
  v46 = v68;
  v47 = v42;
  v48 = v89;
  sub_1DA66E7DC();
  swift_release();
  v49 = *(void (**)(char *, uint64_t))(v83 + 8);
  v49(v45, v47);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v46);
  v50 = sub_1DA66E95C();
  v51 = v91;
  MEMORY[0x1DF09D318](v50);
  v66(v37, v51, v31);
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v85;
  v52[3] = v47;
  v53 = v86;
  v52[4] = v90;
  v52[5] = v53;
  v54 = (char *)v52 + v65;
  v52[6] = v87;
  v44(v54, v37, v31);
  v55 = v70;
  v56 = v72;
  v57 = v88;
  sub_1DA66E7DC();
  swift_release();
  v49(v45, v47);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v56);
  v58 = v74;
  v59 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v60 = v71;
  v61 = v75;
  v59(v71, v55, v75);
  v62 = *(void (**)(char *, uint64_t))(v58 + 8);
  v62(v55, v61);
  v59(v84, v60, v61);
  return ((uint64_t (*)(char *, uint64_t))v62)(v60, v61);
}

void sub_1DA59D51C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v20 = a6;
  v19 = a5;
  v21 = a2;
  v22 = a1;
  v26 = a7;
  v29 = a4;
  v30 = MEMORY[0x1E0CDDD58];
  v31 = a5;
  v32 = a6;
  v9 = sub_1DA66E92C();
  v10 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v9);
  v27 = v9;
  v28 = v10;
  MEMORY[0x1DF0A0348](255, &v27, MEMORY[0x1E0CDDFB8], 0);
  v11 = sub_1DA66E578();
  v18[1] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v18[2] = (char *)v18 - v14;
  v27 = v9;
  v28 = v10;
  MEMORY[0x1DF0A0348](255, &v27, MEMORY[0x1E0CDEEB8], 0, v13);
  v15 = sub_1DA66E578();
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v25 = sub_1DA66E578();
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)v18 - v17;
  v27 = v21;
  v28 = a3;
  v29 = a4;
  v30 = v19;
  v31 = v20;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA59D730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(v2 + *(int *)(a1 + 96)) & 1) != 0)
    sub_1DA59DA10((_QWORD *)a1, MEMORY[0x1E0CDDFB8], (uint64_t)sub_1DA5A46A8, MEMORY[0x1E0CDDFB0], v3);
  sub_1DA59DA10((_QWORD *)a1, MEMORY[0x1E0CDEEB8], (uint64_t)sub_1DA5A45FC, MEMORY[0x1E0CDEEB0], v1);
}

void sub_1DA59D864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  *(_QWORD *)(v7 - 136) = v2;
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 232) = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v7 - 224) = v1;
  v8 = MEMORY[0x1E0CDB8A0];
  MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v6, v7 - 232);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v4, v0, v6);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v0, v6);
  v9(v0, v4, v6);
  *(_QWORD *)(v7 - 136) = v2;
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 248) = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v7 - 240) = v1;
  MEMORY[0x1DF0A039C](v8, v3, v7 - 248);
  sub_1DA59C9A4(v0, v6);
  v10(v0, v6);
  JUMPOUT(0x1DA59D930);
}

void sub_1DA59DA00(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1DA59D51C(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

void sub_1DA59DA10(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[21];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v20[8] = a3;
  v20[9] = a4;
  v20[17] = a5;
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v21 = MEMORY[0x1E0CDDD78];
  v22 = v7;
  v23 = v8;
  v24 = MEMORY[0x1E0CDDD58];
  v25 = v9;
  v26 = v10;
  v11 = sub_1DA66E92C();
  v20[11] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v20[12] = (char *)v20 - v14;
  v15 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v11, v13);
  v21 = v11;
  v22 = v15;
  v20[15] = v15;
  v20[16] = a2;
  v16 = MEMORY[0x1DF0A0348](0, &v21, a2, 0);
  v20[1] = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20[2] = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20[7] = (char *)v20 - v19;
  v20[0] = a1[2];
  v21 = v20[0];
  v22 = v7;
  v20[6] = v7;
  v20[5] = v8;
  v23 = v8;
  v24 = v9;
  v20[4] = v9;
  v20[3] = v10;
  v25 = v10;
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

void sub_1DA59DB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = sub_1DA670294();
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  *(_QWORD *)(v9 - 224) = (char *)&a9 - v12;
  v13 = sub_1DA66E578();
  *(_QWORD *)(v9 - 200) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 - 192) = v13;
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v9 - 160) = (char *)&a9 - v14;
  sub_1DA59CBE0();
}

uint64_t sub_1DA59DC44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v7);
    sub_1DA59EA28(v1, v5);
    v10 = *(_QWORD *)(v9 - 216);
    v11 = *(char **)(v9 - 208);
    v12 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v12(v11, v5, v2);
    v13 = *(void (**)(char *, uint64_t))(v10 + 8);
    v13(v5, v2);
    v12(v5, v11, v2);
    v14 = *(_QWORD *)(v9 - 184);
    *(_QWORD *)(v9 - 136) = v2;
    *(_QWORD *)(v9 - 128) = v14;
    swift_getOpaqueTypeConformance2();
    sub_1DA59CA68((uint64_t)v5, v4, v2);
    v13(v5, v2);
    v13(v11, v2);
  }
  else
  {
    (*(void (**)(void))(v8 + 32))();
    v15 = *(char **)(v9 - 208);
    sub_1DA59EA28(v1, v15);
    v16 = sub_1DA59CCA0();
    v17 = MEMORY[0x1E0C80A78](v16);
    *(_QWORD *)(v9 - 256) = v8;
    v18 = *(_QWORD *)(v9 - 288);
    v14 = *(_QWORD *)(v9 - 184);
    (*(void (**)(__n128))(v9 - 232))(v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 216) + 8))(v15, v2);
    *(_QWORD *)(v9 - 136) = v2;
    *(_QWORD *)(v9 - 128) = v14;
    swift_getOpaqueTypeConformance2();
    v19 = *(_QWORD *)(v9 - 296);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v21 = *(_QWORD *)(v9 - 248);
    v20(v21, v18, v4);
    v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v22(v18, v4);
    v20(v18, v21, v4);
    sub_1DA59C9A4(v18, v4);
    v22(v18, v4);
    v22(v21, v4);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 256) + 8))(*(_QWORD *)(v9 - 224), v0);
  }
  *(_QWORD *)(v9 - 136) = v2;
  *(_QWORD *)(v9 - 128) = v14;
  *(_QWORD *)(v9 - 152) = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 144) = v14;
  v23 = *(_QWORD *)(v9 - 192);
  MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v23, v9 - 152);
  v24 = *(_QWORD *)(v9 - 200);
  v25 = *(_QWORD *)(v9 - 160);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v24 + 16))(*(_QWORD *)(v9 - 168), v25, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
}

void sub_1DA59DF00()
{
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

void sub_1DA59DF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 152) = a1;
  v7 = sub_1DA670294();
  *(_QWORD *)(v6 - 144) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 - 136) = v7;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)(v6 - 120) = v2;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v5;
  *(_QWORD *)(v6 - 96) = v4;
  *(_QWORD *)(v6 - 88) = v1;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA59DFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v5 = sub_1DA66E95C();
  MEMORY[0x1DF09D318](v5);
  v6 = sub_1DA66F850();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  if ((v6 & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 - 152) - 8) + 56))(v3, 1, 1);
    sub_1DA5A3B78();
  }
  return result;
}

void type metadata accessor for AsyncSelectionConfirmingPicker()
{
  JUMPOUT(0x1DF0A02F4);
}

void type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration()
{
  JUMPOUT(0x1DF0A02F4);
}

void sub_1DA59E0B4()
{
  sub_1DA59E88C();
}

uint64_t sub_1DA59E0C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DA59CCF8())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66FBC8();
    swift_release();
  }
  sub_1DA66FB74();
  v9 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  sub_1DA66FB68();
  v10 = sub_1DA66FB5C();
  v11 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  v14 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 48) = v14;
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(a1 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, a1);
  sub_1DA5C0934((uint64_t)v8, (uint64_t)&unk_1F026BD88, v12);
  return sub_1DA59CD40();
}

uint64_t sub_1DA59E26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v36 = a1;
  v37 = a2;
  v38 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v38 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  v39 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v39 + 64);
  MEMORY[0x1E0C80A78](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1DA59CD8C())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66FBC8();
    swift_release();
  }
  v35 = v15;
  sub_1DA66FB74();
  v16 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  v17 = v39;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v33 = v3;
  v34 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v34, v3, a3);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v32 = v9;
  v20 = v9;
  v21 = v38;
  v19(v20, v36, v38);
  v19(v40, v37, v21);
  sub_1DA66FB68();
  v22 = sub_1DA66FB5C();
  v23 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v24 = *(unsigned __int8 *)(v5 + 80);
  v25 = (v11 + v23 + v24) & ~v24;
  v26 = (v6 + v24 + v25) & ~v24;
  v27 = swift_allocObject();
  v28 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v27 + 16) = v22;
  *(_QWORD *)(v27 + 24) = v28;
  *(_QWORD *)(v27 + 32) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v27 + 40) = v21;
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v27 + 64) = *(_QWORD *)(a3 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v27 + v23, v34, a3);
  v29 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v29(v27 + v25, v32, v21);
  v29(v27 + v26, v40, v21);
  sub_1DA5C0934((uint64_t)v35, (uint64_t)&unk_1F026BD70, v27);
  return sub_1DA59CDD4();
}

void sub_1DA59E510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  int v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[5];

  v47 = a8;
  v48 = a7;
  v45 = a4;
  v46 = a6;
  v12 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v38 - v19;
  v21 = sub_1DA66DEF4();
  v43 = *(_QWORD *)(v21 - 8);
  v44 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66DED0();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v20, a1, a5);
  v49 = a2;
  v24(v17, a2, a5);
  v25 = sub_1DA66DEDC();
  v26 = sub_1DA66FD90();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v40 = v25;
    v29 = v28;
    v41 = swift_slowAlloc();
    v51[0] = v41;
    *(_DWORD *)v29 = 136315394;
    v39 = v27;
    v24(v14, (uint64_t)v20, a5);
    v30 = sub_1DA66F904();
    v42 = a3;
    v50 = sub_1DA49AD00(v30, v31, v51);
    v38 = v51;
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    v32(v20, a5);
    *(_WORD *)(v29 + 12) = 2080;
    v24(v14, (uint64_t)v17, a5);
    v33 = sub_1DA66F904();
    v50 = sub_1DA49AD00(v33, v34, v51);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    v32(v17, a5);
    v35 = v40;
    _os_log_impl(&dword_1DA478000, v40, (os_log_type_t)v39, "Picker is displayed, but autodownloads options changed from somewhere else: %s -> %s", (uint8_t *)v29, 0x16u);
    v36 = v41;
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v36, -1, -1);
    MEMORY[0x1DF0A0474](v29, -1, -1);

  }
  else
  {
    v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v37(v20, a5);
    v37(v17, a5);

  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
  v51[0] = v45;
  v51[1] = a5;
  v51[2] = v46;
  v51[3] = v48;
  v51[4] = v47;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA59E7FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t result;

  sub_1DA66E8F0();
  sub_1DA66E8CC();
  v6 = *(_QWORD *)(v4 - 136);
  v7 = sub_1DA66F850();
  result = v3(v2, v1);
  if ((v7 & 1) == 0)
    return sub_1DA59E960(v6, a1);
  return result;
}

void sub_1DA59E880()
{
  sub_1DA59E88C();
}

void sub_1DA59E88C()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA59E8D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v11(v3, v1, v2 + ((v9 + 56) & ~v9), v4, v5, v6, v7, v8);
}

uint64_t sub_1DA59E924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA59E960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DA5A3A50(a1, a2);
  sub_1DA5A3AD4(a1, a2);
  v4 = sub_1DA59CCF8();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
    sub_1DA66FBC8();
    v4 = swift_release();
  }
  MEMORY[0x1E0C80A78](v4);
  return sub_1DA66E3EC();
}

uint64_t sub_1DA59EA28@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v23 = a2;
  v3 = a1[3];
  v4 = sub_1DA66E95C();
  MEMORY[0x1E0C80A78](v4);
  v5 = a1[4];
  v21 = a1[5];
  v22 = v5;
  v20 = a1[6];
  v24 = MEMORY[0x1E0CDDD78];
  v25 = v3;
  v26 = v5;
  v27 = MEMORY[0x1E0CDDD58];
  v28 = v21;
  v29 = v20;
  v6 = sub_1DA66E92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - v11;
  v13 = sub_1DA66E518();
  v19[2] = v14;
  v19[3] = v13;
  v19[1] = v15;
  sub_1DA66E8F0();
  sub_1DA66E8E4();
  sub_1DA66E914();
  MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v6);
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v16(v12, v9, v6);
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v16(v23, v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v17)(v12, v6);
}

uint64_t sub_1DA59EBFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  uint64_t v16;
  uint64_t v17;

  v15[4] = a3;
  v5 = sub_1DA66E818();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - v7;
  v9 = a1[1];
  v16 = *a1;
  v17 = v9;
  sub_1DA498918();
  swift_bridgeObjectRetain();
  v10 = sub_1DA66E734();
  v15[2] = v11;
  v15[3] = v10;
  v15[1] = v12;
  v13 = a1[5];
  if (v13)
  {
    v16 = a1[4];
    v17 = v13;
    swift_bridgeObjectRetain();
    sub_1DA66E734();
  }
  sub_1DA5A1BF4((uint64_t)a1, a2, (uint64_t)v8);
  sub_1DA5A1E30(a2);
  return sub_1DA66E7E8();
}

uint64_t sub_1DA59ED60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_1DA498918();
  swift_bridgeObjectRetain();
  sub_1DA66E734();
  if (*(_QWORD *)(a1 + 40))
  {
    swift_bridgeObjectRetain();
    sub_1DA66E734();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026B340);
  v4 = sub_1DA66E818();
  v5 = (*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DA678FE0;
  sub_1DA5A1BF4(a1, a2, v6 + v5);
  sub_1DA5A1E30(a2);
  return sub_1DA66E350();
}

uint64_t sub_1DA59EEC8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DA59EED0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66E95C();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66E8F0();
    if (v2 <= 0x3F)
      type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
  }
  return result;
}

_QWORD *sub_1DA59F014(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(unint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  int v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void (*v63)(unint64_t, unint64_t, uint64_t);
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v74;
  size_t __n;
  _QWORD *v76;
  void (*v77)(unint64_t, unint64_t, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  size_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v7 | 7;
  v11 = sub_1DA66E338();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = (*(_DWORD *)(v12 + 80) | v7) & 0x100000;
  v16 = *a2;
  *a1 = *a2;
  if ((v10 | v13) != 7 || v15 != 0)
    goto LABEL_11;
  v18 = ((v7 + 16) & ~(unint64_t)v7) + v9;
  v19 = v9 + 7;
  v20 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v10;
  v84 = v7 + 48;
  v21 = v9 + v7;
  v22 = ((v21 + (v84 & ~(unint64_t)v7)) & ~(unint64_t)v7) + v9;
  v23 = v10 + 17;
  v24 = v20 + 8;
  if (((((((v14
           + ((v13
             + 16
             + ((((((((v22 + 7) & 0xFFFFFFFFFFFFFFF8)
                   + ((v20 + 8 + ((v10 + 17 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & ~v10)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13)
           + 31) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 <= 0x18)
  {
    v81 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = v21;
    __n = v22;
    v83 = v13;
    v86 = v22 + 7;
    v87 = v13 + 16;
    v88 = v12;
    v89 = v14;
    v90 = v11;
    v82 = v8;
    v25 = ~v10;
    v26 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v27;
    v28 = ((unint64_t)v26 + v7 + 8) & ~(unint64_t)v7;
    v76 = a2;
    v78 = v19;
    v29 = v5;
    v30 = a1;
    v79 = v24;
    v80 = ~(unint64_t)v7;
    v31 = ((unint64_t)v27 + v7 + 8) & v80;
    v32 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
    v33 = v18;
    sub_1DA66BE60();
    sub_1DA66BE60();
    v34 = v28;
    v35 = v30;
    v36 = v29;
    v32(v34, v31, v29);
    v37 = ((unint64_t)v35 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = ((unint64_t)v76 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
    *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
    v39 = (v23 + v37) & ~v10;
    v40 = (v23 + v38) & ~v10;
    sub_1DA66BE60();
    sub_1DA66BE60();
    v77 = (void (*)(unint64_t, unint64_t, uint64_t))v32;
    v32(v39, v40, v29);
    *(_QWORD *)((v78 + v39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v78 + v40) & 0xFFFFFFFFFFFFF8);
    v41 = (_QWORD *)((v79 + v39) & v25);
    v42 = (_QWORD *)((v79 + v40) & v25);
    sub_1DA66BE60();
    if ((v82 & 0x80000000) != 0)
    {
      v45 = v80;
      v44 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v6 + 48))(((unint64_t)v42 + v84) & v80, v82, v36);
    }
    else
    {
      v43 = *(_QWORD *)(((v79 + v40) & v25) + 8);
      if (v43 >= 0xFFFFFFFF)
        LODWORD(v43) = -1;
      v44 = v43 + 1;
      v45 = v80;
    }
    v46 = v81 + 8;
    v47 = ~v83;
    if (v44)
    {
      memcpy(v41, v42, __n);
    }
    else
    {
      *v41 = *v42;
      v41[1] = *(_QWORD *)(((v79 + v40) & v25) + 8);
      v41[2] = *(_QWORD *)(((v79 + v40) & v25) + 0x10);
      v41[3] = *(_QWORD *)(((v79 + v40) & v25) + 0x18);
      v41[4] = *(_QWORD *)(((v79 + v40) & v25) + 0x20);
      v41[5] = *(_QWORD *)(((v79 + v40) & v25) + 0x28);
      v48 = ((unint64_t)v41 + v84) & v45;
      v49 = (unint64_t)v42 + v84;
      v85 = v35;
      v50 = v49 & v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77(v48, v50, v36);
      v51 = v74 + v50;
      v35 = v85;
      v77((v74 + v48) & v45, v51 & v45, v36);
    }
    *(_QWORD *)(((unint64_t)v41 + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v42 + v86) & 0xFFFFFFFFFFFFF8);
    v52 = (char *)v41 + v46;
    *v52 = *((_BYTE *)v42 + v46);
    *((_QWORD *)v52 + 1) = *(_QWORD *)((char *)v42 + v46 + 8);
    v53 = ((unint64_t)v41 + v46 + 23) & 0xFFFFFFFFFFFFFFF8;
    v54 = ((unint64_t)v42 + v46 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v53 = *(_BYTE *)v54;
    *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
    v55 = (_QWORD *)((v53 + 23) & 0xFFFFFFFFFFFFFFF8);
    v56 = (_QWORD *)((v54 + 23) & 0xFFFFFFFFFFFFFFF8);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    v58 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
    v59 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = ((unint64_t)v58 + v87) & v47;
    v62 = ((unint64_t)v59 + v87) & v47;
    v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 16);
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    v63(v61, v62, v90);
    v64 = (v61 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = (v62 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
    v66 = *(_QWORD *)(v65 + 8);
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *(_QWORD *)(v64 + 8) = v66;
    *(_BYTE *)(v64 + 16) = *(_BYTE *)(v65 + 16);
    v67 = (_QWORD *)((v61 + v89 + 31) & 0xFFFFFFFFFFFFF8);
    v68 = (_QWORD *)((v62 + v89 + 31) & 0xFFFFFFFFFFFFF8);
    *v67 = *v68;
    v69 = (_QWORD *)(((unint64_t)v67 + 15) & 0xFFFFFFFFFFFFFFF8);
    v70 = (_QWORD *)(((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v69 = *v70;
    v69[1] = v70[1];
    v71 = (_QWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
    v72 = (_QWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v71 = *v72;
    v71[1] = v72[1];
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
    sub_1DA66BE60();
  }
  else
  {
LABEL_11:
    v35 = (_QWORD *)(v16 + (((v7 | 7 | v13) + 16) & ~(v7 | 7 | v13)));
  }
  sub_1DA66BE60();
  return v35;
}

uint64_t sub_1DA59F50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1 + 15;
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8;
  v9 = ~v7;
  v10 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v10(v8 & ~v7, v5);
  v11 = *(_QWORD *)(v6 + 64);
  swift_release();
  swift_release();
  v12 = ((v7 | 7) + ((v11 + 7 + a1 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 17) & ~(v7 | 7);
  v10(v12, v5);
  swift_release();
  v13 = v7 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  v14 = v13 & ~(v7 | 7);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) == 0)
  {
    v15 = *(_QWORD *)((v13 & ~(v7 | 7)) + 8);
    if (v15 >= 0xFFFFFFFF)
      LODWORD(v15) = -1;
    if ((_DWORD)v15 != -1)
      goto LABEL_5;
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v7 + 48;
    v18 = (v7 + 48 + v14) & v9;
    v10(v18, v5);
    v17 = v11 + v7;
    v10((v17 + v18) & v9, v5);
    goto LABEL_8;
  }
  if (!(*(unsigned int (**)(uint64_t))(v6 + 48))((v7 + v14 + 48) & v9))
    goto LABEL_7;
LABEL_5:
  v16 = v7 + 48;
  v17 = v11 + v7;
LABEL_8:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v19 = sub_1DA66E338();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))((((((((((((v17 + (v16 & v9)) & v9) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80)+ 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80), v19);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1DA59F760(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v62;
  _QWORD *v63;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v62 = ~v9;
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v13 + 7 + ((v9 + 16) & ~v9);
  v63 = a1;
  v15 = ((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v17 = (v9 | 7) + 17;
  v18 = (v17 + v15) & ~(v9 | 7);
  v19 = (v17 + v16) & ~(v9 | 7);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v12(v18, v19, v7);
  *(_QWORD *)((v13 + 7 + v18) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 7 + v19) & 0xFFFFFFFFFFFFF8);
  v20 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + (v9 | 7) + 8;
  v21 = (_QWORD *)((v20 + v18) & ~(v9 | 7));
  v22 = (_QWORD *)((v20 + v19) & ~(v9 | 7));
  v23 = *(unsigned int *)(v8 + 84);
  v24 = v9 + 48;
  v25 = v13 + v9;
  v26 = (v13 + v9 + ((v9 + 48) & ~v9)) & ~v9;
  sub_1DA66BE60();
  if ((v23 & 0x80000000) == 0)
  {
    v27 = v22[1];
    if (v27 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v26 + v13;
    if ((_DWORD)v27 != -1)
      goto LABEL_5;
LABEL_7:
    *v21 = *v22;
    v21[1] = v22[1];
    v21[2] = v22[2];
    v21[3] = v22[3];
    v21[4] = v22[4];
    v21[5] = v22[5];
    v30 = ((unint64_t)v21 + v24) & v62;
    v31 = ((unint64_t)v22 + v24) & v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v30, v31, v7);
    v12((v25 + v30) & v62, (v25 + v31) & v62, v7);
    goto LABEL_8;
  }
  v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)v22 + v24) & v62, v23, v7);
  v28 = v26 + v13;
  if (!v29)
    goto LABEL_7;
LABEL_5:
  memcpy(v21, v22, v28);
LABEL_8:
  *(_QWORD *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  v32 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v33 = (char *)v21 + v32;
  v34 = (char *)v22 + v32;
  *v33 = *v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  v35 = (unint64_t)(v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = (unint64_t)(v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v35 = *(_BYTE *)v36;
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
  v37 = (_QWORD *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = sub_1DA66E338();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(unsigned __int8 *)(v44 + 80);
  v46 = ((unint64_t)v40 + v45 + 16) & ~v45;
  v47 = ((unint64_t)v41 + v45 + 16) & ~v45;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  v48(v46, v47, v43);
  v49 = *(_QWORD *)(v44 + 64);
  v50 = v46 + v49;
  v51 = v47 + v49;
  v52 = (v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = *(_QWORD *)(v53 + 8);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_QWORD *)(v52 + 8) = v54;
  *(_BYTE *)(v52 + 16) = *(_BYTE *)(v53 + 16);
  v55 = (_QWORD *)((v50 + 31) & 0xFFFFFFFFFFFFF8);
  v56 = (_QWORD *)((v51 + 31) & 0xFFFFFFFFFFFFF8);
  *v55 = *v56;
  v57 = (_QWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v57 = *v58;
  v57[1] = v58[1];
  v59 = (_QWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
  v60 = (_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v59 = *v60;
  v59[1] = v60[1];
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  sub_1DA66BE60();
  return v63;
}

_QWORD *sub_1DA59FB48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  void (*v30)(unint64_t, uint64_t);
  size_t v31;
  uint64_t (*v32)(unint64_t, uint64_t, uint64_t);
  int v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, unint64_t, uint64_t);
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  _QWORD *v68;
  uint64_t v69;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  sub_1DA66BE60();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  sub_1DA66BE60();
  swift_release();
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v69 = ~v11;
  v12 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 24);
  v12(((unint64_t)v7 + v11 + 8) & ~v11, (v11 + 8 + v8) & ~v11, v9);
  v13 = *(_QWORD *)(v10 + 64);
  v14 = v13 + 7 + ((v11 + 16) & ~v11);
  v68 = a1;
  v15 = ((unint64_t)a1 + v14) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)a2 + v14) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  sub_1DA66BE60();
  swift_release();
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v17 = (v11 | 7) + 17;
  v18 = (v17 + v15) & ~(v11 | 7);
  v19 = (v17 + v16) & ~(v11 | 7);
  v67 = v12;
  v12(v18, v19, v9);
  *(_QWORD *)((v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + 7 + v19) & 0xFFFFFFFFFFFFF8);
  sub_1DA66BE60();
  swift_release();
  v20 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + (v11 | 7) + 8;
  v21 = (_QWORD *)((v20 + v18) & ~(v11 | 7));
  v22 = (_QWORD *)((v20 + v19) & ~(v11 | 7));
  v23 = *(unsigned int *)(v10 + 84);
  v24 = v11 + 48;
  v25 = v13 + v11;
  v26 = ((v13 + v11 + ((v11 + 48) & ~v11)) & ~v11) + v13;
  if ((v23 & 0x80000000) != 0)
  {
    v66 = v25;
    v31 = v26;
    v32 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
    v33 = v32(((unint64_t)v21 + v24) & v69, v23, v9);
    v28 = v32(((unint64_t)v22 + v24) & v69, v23, v9);
    v26 = v31;
    v25 = v66;
    v29 = v9;
    if (!v33)
    {
LABEL_5:
      if (!v28)
      {
        *v21 = *v22;
        v21[1] = v22[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v21[2] = v22[2];
        v21[3] = v22[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v21[4] = v22[4];
        v21[5] = v22[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v67(((unint64_t)v21 + v24) & v69, ((unint64_t)v22 + v24) & v69, v29);
        v67((v25 + (((unint64_t)v21 + v24) & v69)) & v69, (v25 + (((unint64_t)v22 + v24) & v69)) & v69, v29);
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      v30(((unint64_t)v21 + v24) & v69, v29);
      v30((v25 + (((unint64_t)v21 + v24) & v69)) & v69, v29);
      goto LABEL_9;
    }
  }
  else
  {
    v27 = v22[1];
    if (v27 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    v29 = v9;
    if (v21[1] > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v28)
  {
    *v21 = *v22;
    v21[1] = v22[1];
    v21[2] = v22[2];
    v21[3] = v22[3];
    v21[4] = v22[4];
    v21[5] = v22[5];
    v34 = ((unint64_t)v21 + v24) & v69;
    v35 = ((unint64_t)v22 + v24) & v69;
    v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v34, v35, v29);
    v36((v25 + v34) & v69, (v25 + v35) & v69, v29);
    goto LABEL_12;
  }
LABEL_9:
  memcpy(v21, v22, v26);
LABEL_12:
  *(_QWORD *)(((unint64_t)v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v26 + 7) & 0xFFFFFFFFFFFFF8);
  sub_1DA66BE60();
  swift_release();
  v37 = ((v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v38 = (char *)v21 + v37;
  v39 = (char *)v22 + v37;
  *v38 = *((_BYTE *)v22 + v37);
  *((_QWORD *)v38 + 1) = *(_QWORD *)((char *)v22 + v37 + 8);
  sub_1DA66BE60();
  swift_release();
  v40 = (unint64_t)(v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = (unint64_t)(v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  sub_1DA66BE60();
  swift_release();
  v42 = (_QWORD *)((v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)((v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  sub_1DA66BE60();
  swift_release();
  v45 = (_QWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v46 = (_QWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  sub_1DA66BE60();
  swift_release();
  v48 = sub_1DA66E338();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(unsigned __int8 *)(v49 + 80);
  v51 = ((unint64_t)v45 + v50 + 16) & ~v50;
  v52 = ((unint64_t)v46 + v50 + 16) & ~v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 24))(v51, v52, v48);
  v53 = *(_QWORD *)(v49 + 64);
  v54 = v51 + v53;
  v55 = v52 + v53;
  v56 = (v51 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = (v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = *(_QWORD *)(v57 + 8);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_QWORD *)(v56 + 8) = v58;
  sub_1DA66BE60();
  swift_release();
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  v59 = (_QWORD *)((v54 + 31) & 0xFFFFFFFFFFFFF8);
  v60 = (_QWORD *)((v55 + 31) & 0xFFFFFFFFFFFFF8);
  *v59 = *v60;
  v61 = (_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
  v62 = (_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *v62;
  sub_1DA66BE60();
  swift_release();
  v61[1] = v62[1];
  sub_1DA66BE60();
  swift_release();
  v63 = (_QWORD *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
  v64 = (_QWORD *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v63 = *v64;
  sub_1DA66BE60();
  swift_release();
  v63[1] = v64[1];
  sub_1DA66BE60();
  swift_release();
  return v68;
}

_QWORD *sub_1DA5A00F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, unint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  size_t v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _OWORD *v51;
  _OWORD *v52;
  _QWORD *v54;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ~v9;
  v11 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
  v11(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9, v7);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = v12 + 7 + ((v9 + 16) & ~v9);
  v54 = a1;
  v14 = ((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = v16;
  v17 = (v9 | 7) + 17;
  v18 = (v17 + v14) & ~(v9 | 7);
  v19 = (v17 + v15) & ~(v9 | 7);
  v11(v18, v19, v7);
  *(_QWORD *)((v12 + 7 + v18) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + 7 + v19) & 0xFFFFFFFFFFFFF8);
  v20 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + (v9 | 7) + 8;
  v21 = (_OWORD *)((v20 + v18) & ~(v9 | 7));
  v22 = (_QWORD *)((v20 + v19) & ~(v9 | 7));
  v23 = v9 + 48;
  v24 = v12 + v9;
  v25 = (v12 + v9 + ((v9 + 48) & ~v9)) & ~v9;
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) == 0)
  {
    v26 = v22[1];
    if (v26 >= 0xFFFFFFFF)
      LODWORD(v26) = -1;
    v27 = v25 + v12;
    if ((_DWORD)v26 != -1)
      goto LABEL_5;
LABEL_7:
    v28 = *(_OWORD *)v22;
    v29 = *((_OWORD *)v22 + 2);
    v21[1] = *((_OWORD *)v22 + 1);
    v21[2] = v29;
    *v21 = v28;
    v11(((unint64_t)v21 + v23) & v10, ((unint64_t)v22 + v23) & v10, v7);
    v11((v24 + (((unint64_t)v21 + v23) & v10)) & v10, (v24 + (((unint64_t)v22 + v23) & v10)) & v10, v7);
    goto LABEL_8;
  }
  v27 = v25 + v12;
  if (!(*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v22 + v23) & v10))
    goto LABEL_7;
LABEL_5:
  memcpy(v21, v22, v27);
LABEL_8:
  *(_QWORD *)(((unint64_t)v21 + v27 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v27 + 7) & 0xFFFFFFFFFFFFF8);
  v30 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v31 = (_OWORD *)((char *)v21 + v30);
  v32 = (_OWORD *)((char *)v22 + v30);
  *v31 = *v32;
  v33 = (_OWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_OWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = (_OWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFF8);
  v36 = (_OWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_OWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = sub_1DA66E338();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v42 = ((unint64_t)v37 + v41 + 16) & ~v41;
  v43 = ((unint64_t)v38 + v41 + 16) & ~v41;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v42, v43, v39);
  v44 = *(_QWORD *)(v40 + 64);
  v45 = v42 + v44;
  v46 = v43 + v44;
  v47 = (v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_BYTE *)(v47 + 16) = *(_BYTE *)(v48 + 16);
  v49 = (_QWORD *)((v45 + 31) & 0xFFFFFFFFFFFFF8);
  v50 = (_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFF8);
  *v49 = *v50;
  v51 = (_OWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  v52 = (_OWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v51 = *v52;
  *(_OWORD *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFF8);
  return v54;
}

_QWORD *sub_1DA5A03D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, unint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  void (*v28)(unint64_t, uint64_t);
  uint64_t (*v29)(unint64_t, uint64_t, uint64_t);
  int v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(unint64_t, unint64_t, uint64_t);
  size_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_release();
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v65 = ~v10;
  v11 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 40);
  v11(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10, v8);
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v12 + 7 + ((v10 + 16) & ~v10);
  v64 = a1;
  v14 = ((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  swift_release();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_release();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  v16 = (v10 | 7) + 17;
  v17 = (v16 + v14) & ~(v10 | 7);
  v18 = (v16 + v15) & ~(v10 | 7);
  v11(v17, v18, v8);
  *(_QWORD *)((v12 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + 7 + v18) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v19 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + (v10 | 7) + 8;
  v20 = (_QWORD *)((v19 + v17) & ~(v10 | 7));
  v21 = (_QWORD *)((v19 + v18) & ~(v10 | 7));
  v22 = *(unsigned int *)(v9 + 84);
  v23 = v10 + 48;
  v63 = v12 + v10;
  v24 = ((v12 + v10 + ((v10 + 48) & ~v10)) & ~v10) + v12;
  if ((v22 & 0x80000000) != 0)
  {
    v29 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
    v30 = v29(((unint64_t)v20 + v23) & v65, v22, v8);
    v26 = v29(((unint64_t)v21 + v23) & v65, v22, v8);
    if (!v30)
    {
LABEL_5:
      if (!v26)
      {
        *v20 = *v21;
        v20[1] = v21[1];
        swift_bridgeObjectRelease();
        v20[2] = v21[2];
        v20[3] = v21[3];
        swift_bridgeObjectRelease();
        v20[4] = v21[4];
        v20[5] = v21[5];
        swift_bridgeObjectRelease();
        v11(((unint64_t)v20 + v23) & v65, ((unint64_t)v21 + v23) & v65, v8);
        v11((v63 + (((unint64_t)v20 + v23) & v65)) & v65, (v63 + (((unint64_t)v21 + v23) & v65)) & v65, v8);
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = ((unint64_t)v20 + v23) & v65;
      v28 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
      v28(v27, v8);
      v28((v63 + v27) & v65, v8);
      goto LABEL_9;
    }
  }
  else
  {
    v25 = v21[1];
    if (v25 >= 0xFFFFFFFF)
      LODWORD(v25) = -1;
    v26 = v25 + 1;
    if (v20[1] > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v26)
  {
    v31 = *(_OWORD *)v21;
    v32 = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
    *((_OWORD *)v20 + 2) = v32;
    *(_OWORD *)v20 = v31;
    v33 = ((unint64_t)v20 + v23) & v65;
    v34 = ((unint64_t)v21 + v23) & v65;
    v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
    v35(v33, v34, v8);
    v35((v63 + v33) & v65, (v63 + v34) & v65, v8);
    goto LABEL_12;
  }
LABEL_9:
  memcpy(v20, v21, v24);
LABEL_12:
  v36 = v24 + 7;
  *(_QWORD *)(((unint64_t)v20 + v36) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v36) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v37 = (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
  v38 = (char *)v20 + v37;
  v39 = (char *)v21 + v37;
  *v38 = *((_BYTE *)v21 + v37);
  *((_QWORD *)v38 + 1) = *(_QWORD *)((char *)v21 + v37 + 8);
  swift_release();
  v40 = (unint64_t)(v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = (unint64_t)(v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  swift_release();
  v42 = (_OWORD *)((v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_OWORD *)((v41 + 23) & 0xFFFFFFFFFFFFF8);
  *v42 = *v43;
  swift_release();
  v44 = (_OWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_OWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v44 = *v45;
  swift_release();
  v46 = sub_1DA66E338();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = ((unint64_t)v44 + v48 + 16) & ~v48;
  v50 = ((unint64_t)v45 + v48 + 16) & ~v48;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 40))(v49, v50, v46);
  v51 = *(_QWORD *)(v47 + 64);
  v52 = v49 + v51;
  v53 = v50 + v51;
  v54 = (v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v54 = *(_OWORD *)v55;
  swift_release();
  *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
  v56 = (_QWORD *)((v52 + 31) & 0xFFFFFFFFFFFFF8);
  v57 = (_QWORD *)((v53 + 31) & 0xFFFFFFFFFFFFF8);
  *v56 = *v57;
  v58 = (_QWORD *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  v59 = (_QWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v58 = *v59;
  swift_release();
  v58[1] = v59[1];
  swift_release();
  v60 = (_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  swift_release();
  v60[1] = v61[1];
  swift_release();
  return v64;
}

uint64_t sub_1DA5A0894(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(unint64_t, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = *(_DWORD *)(v6 + 84);
  if (v8 - 1 < v8)
    v10 = v8;
  else
    v10 = v8 - 1;
  v11 = sub_1DA66E338();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v10 <= v13)
    v14 = *(_DWORD *)(v12 + 84);
  else
    v14 = v10;
  if (!a2)
    return 0;
  v15 = v11;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = *(_QWORD *)(v6 + 64);
  v18 = ((v16 + 16) & ~v16) + v17;
  v19 = v16 | 7;
  v20 = v17 + 7;
  v21 = v16 + 48;
  v22 = (v16 | 7) + 17;
  v23 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + (v16 | 7) + 8;
  v24 = ((v17 + 7 + ((v17 + v16 + ((v16 + 48) & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 31;
  v25 = *(unsigned __int8 *)(v12 + 80);
  v26 = v25 + 16;
  if (v14 < a2)
  {
    if (((((((((*(_QWORD *)(v12 + 64)
               + ((v26
                 + ((((((v24 + ((v23 + ((v22 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & ~v19)) & 0xFFFFFFFFFFFFFFF8)
                     + 23) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v25)
               + 31) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v27 = 2;
    else
      v27 = a2 - v14 + 1;
    if (v27 >= 0x10000)
      v28 = 4;
    else
      v28 = 2;
    if (v27 < 0x100)
      v28 = 1;
    if (v27 >= 2)
      v29 = v28;
    else
      v29 = 0;
    __asm { BR              X22 }
  }
  v31 = ~v16;
  if (v8 == v14)
  {
    v32 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v7 & 0x80000000) == 0)
    {
      v33 = *v32;
LABEL_33:
      if (v33 >= 0xFFFFFFFF)
        LODWORD(v33) = -1;
      return (v33 + 1);
    }
    v35 = ((unint64_t)v32 + v16 + 8) & v31;
    goto LABEL_37;
  }
  v34 = (a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v14 & 0x80000000) == 0)
  {
    v33 = *(_QWORD *)(v34 + 8);
    goto LABEL_33;
  }
  v37 = ~v19;
  v35 = (v22 + v34) & ~v19;
  if (v9 == v14)
  {
    if (v7 >= 0x7FFFFFFE)
    {
LABEL_37:
      v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
      v13 = v7;
      v15 = v5;
      return v36(v35, v13, v15);
    }
    v38 = *(_QWORD *)((v20 + v35) & 0xFFFFFFFFFFFFF8);
    if (v38 >= 0xFFFFFFFF)
      LODWORD(v38) = -1;
    if ((v38 + 1) >= 2)
      return v38;
    else
      return 0;
  }
  else
  {
    v39 = (v23 + v35) & v37;
    if (v8 - 1 != v14)
    {
      v35 = (v26 + ((((((v24 + v39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v25;
      v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48);
      return v36(v35, v13, v15);
    }
    if ((v7 & 0x80000000) != 0)
    {
      v41 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((v21 + v39) & v31, v7, v5);
    }
    else
    {
      v40 = *(_QWORD *)(((v23 + v35) & v37) + 8);
      if (v40 >= 0xFFFFFFFF)
        LODWORD(v40) = -1;
      v41 = v40 + 1;
    }
    if (v41 >= 2)
      return v41 - 1;
    else
      return 0;
  }
}

void sub_1DA5A0BB4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  if (v8 - 1 < v8)
    v9 = v8;
  else
    v9 = v8 - 1;
  v10 = *(_QWORD *)(sub_1DA66E338() - 8);
  if (v9 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = v9;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 64);
  if (v11 >= a3)
  {
    v16 = 0u;
    if (a2 <= v11)
      goto LABEL_23;
  }
  else
  {
    if (((((((*(_DWORD *)(v10 + 64)
             + ((*(unsigned __int8 *)(v10 + 80)
               + 16
               + (((((((((((_DWORD)v13 + (_DWORD)v12 + (((_DWORD)v12 + 48) & ~(_DWORD)v12)) & ~(_DWORD)v12)
                       + (_DWORD)v13
                       + 7) & 0xFFFFFFF8)
                     + 31
                     + (((((_DWORD)v13 + 7) & 0xFFFFFFF8)
                       + (v12 | 7)
                       + 8
                       + (((v12 | 7)
                         + 17
                         + (((((_DWORD)v12 + 16) & ~(_DWORD)v12) + (_DWORD)v13 + 7) & 0xFFFFFFF8)) & ~(v12 | 7))) & ~(v12 | 7))) & 0xFFFFFFF8)
                   + 23) & 0xFFFFFFF8)
                 + 23) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v10 + 80))
             + 31) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v14 = a3 - v11 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    if (a2 <= v11)
LABEL_23:
      __asm { BR              X7 }
  }
  if (((((((*(_DWORD *)(v10 + 64)
           + ((*(unsigned __int8 *)(v10 + 80)
             + 16
             + (((((((((((_DWORD)v13 + (_DWORD)v12 + (((_DWORD)v12 + 48) & ~(_DWORD)v12)) & ~(_DWORD)v12)
                     + (_DWORD)v13
                     + 7) & 0xFFFFFFF8)
                   + 31
                   + (((((_DWORD)v13 + 7) & 0xFFFFFFF8)
                     + (v12 | 7)
                     + 8
                     + (((v12 | 7)
                       + 17
                       + (((((_DWORD)v12 + 16) & ~(_DWORD)v12) + (_DWORD)v13 + 7) & 0xFFFFFFF8)) & ~(v12 | 7))) & ~(v12 | 7))) & 0xFFFFFFF8)
                 + 23) & 0xFFFFFFF8)
               + 23) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v10 + 80))
           + 31) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v17 = ~v11 + a2;
    bzero(a1, ((((((*(_QWORD *)(v10 + 64)+ ((*(unsigned __int8 *)(v10 + 80)+ 16+ ((((((((((v13 + v12 + ((v12 + 48) & ~v12)) & ~v12) + v13 + 7) & 0xFFFFFFFFFFFFFFF8)+ 31+ ((((v13 + 7) & 0xFFFFFFFFFFFFFFF8)+ (v12 | 7)+ 8+ (((v12 | 7) + 17 + ((((v12 + 16) & ~v12) + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v12 | 7))) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_1DA5A0D98()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1DA5A0E88);
}

void sub_1DA5A0DA0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1DA5A0DA8);
  JUMPOUT(0x1DA5A0E88);
}

void sub_1DA5A0DE8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA5A0E88);
}

void sub_1DA5A0DF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1DA5A0E88);
}

void sub_1DA5A0DF8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_WORD *)(v4 + v5) = 0;
  if (v2)
  {
    if (v6 == v0)
    {
      if ((v3 & 0x80000000) == 0)
      {
        if ((v2 & 0x80000000) == 0)
          JUMPOUT(0x1DA5A0E74);
        JUMPOUT(0x1DA5A0E70);
      }
      JUMPOUT(0x1DA5A0E04);
    }
    if (v0 < 0)
      JUMPOUT(0x1DA5A0E3CLL);
    if (v2 < 0)
      JUMPOUT(0x1DA5A0E7CLL);
    *(_QWORD *)(((v4 + v1 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (v2 - 1);
  }
  JUMPOUT(0x1DA5A0E88);
}

uint64_t sub_1DA5A0F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v20 = MEMORY[0x1E0CDDD78];
  v21 = *(_OWORD *)(a1 + 8);
  v15 = v21;
  v22 = MEMORY[0x1E0CDDD58];
  v23 = *(_OWORD *)(a1 + 24);
  v14 = v23;
  v1 = sub_1DA66E92C();
  v2 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDFBB8], v1);
  v20 = v1;
  *(_QWORD *)&v21 = v2;
  MEMORY[0x1DF0A0348](255, &v20, MEMORY[0x1E0CDEEB8], 0);
  v3 = sub_1DA66E578();
  v20 = v1;
  *(_QWORD *)&v21 = v2;
  MEMORY[0x1DF0A0348](255, &v20, MEMORY[0x1E0CDDFB8], 0);
  v4 = sub_1DA66E578();
  v5 = sub_1DA66E578();
  v6 = sub_1DA66E890();
  v20 = v1;
  *(_QWORD *)&v21 = v2;
  v19[0] = swift_getOpaqueTypeConformance2();
  v19[1] = v2;
  v7 = MEMORY[0x1E0CDB8A0];
  v8 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDB8A0], v3, v19);
  v20 = v1;
  *(_QWORD *)&v21 = v2;
  v18[0] = swift_getOpaqueTypeConformance2();
  v18[1] = v2;
  v17[0] = v8;
  v17[1] = MEMORY[0x1DF0A039C](v7, v4, v18);
  v16 = MEMORY[0x1DF0A039C](v7, v5, v17);
  v9 = MEMORY[0x1DF0A039C](MEMORY[0x1E0CDF690], v6, &v16);
  v10 = *(_QWORD *)(v14 + 8);
  v20 = v6;
  *(_QWORD *)&v21 = v15;
  *((_QWORD *)&v21 + 1) = v9;
  v22 = v10;
  v11 = MEMORY[0x1DF0A0348](255, &v20, MEMORY[0x1E0CDF150], 0);
  v20 = v6;
  *(_QWORD *)&v21 = v15;
  *((_QWORD *)&v21 + 1) = v9;
  v22 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = v11;
  *(_QWORD *)&v21 = v15;
  *((_QWORD *)&v21 + 1) = OpaqueTypeConformance2;
  v22 = v10;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1DA5A113C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DA5A1144()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1DA5A1174(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DA5A11C8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *sub_1DA5A1268(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DA5A12BC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1DA5A1304(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationText()
{
  JUMPOUT(0x1DF0A02F4);
}

uint64_t sub_1DA5A135C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DA5A13D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + v6;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + v6 + ((v6 + 48) & ~v6)) & (unint64_t)~v6) + v7 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_1DA66BE60();
  }
  else
  {
    v12 = ~v6;
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = a2[3];
    a1[2] = a2[2];
    a1[3] = v14;
    v15 = a2[5];
    a1[4] = a2[4];
    a1[5] = v15;
    v16 = ((unint64_t)a1 + v6 + 48) & ~v6;
    v17 = ((unint64_t)a2 + v6 + 48) & ~v6;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v16, v17, v4);
    v18((v8 + v16) & v12, (v8 + v17) & v12, v4);
  }
  return a1;
}

uint64_t sub_1DA5A14EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (a1 + v6 + 48) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v7, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)((*(_QWORD *)(v5 + 64) + v6 + v7) & ~v6, v4);
}

_QWORD *sub_1DA5A157C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a2 + v9 + 48) & ~v9;
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(((unint64_t)a1 + v9 + 48) & ~v9, v10, v7);
  v11((*(_QWORD *)(v8 + 64) + v9 + (((unint64_t)a1 + v9 + 48) & ~v9)) & ~v9, (*(_QWORD *)(v8 + 64) + v9 + v10) & ~v9, v7);
  return a1;
}

_QWORD *sub_1DA5A163C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a2 + v8 + 48) & ~v8;
  v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 24);
  v10(((unint64_t)a1 + v8 + 48) & ~v8, v9, v6);
  v10((*(_QWORD *)(v7 + 64) + v8 + (((unint64_t)a1 + v8 + 48) & ~v8)) & ~v8, (*(_QWORD *)(v7 + 64) + v8 + v9) & ~v8, v6);
  return a1;
}

_OWORD *sub_1DA5A1730(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 48) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 48) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v10(v8, v9, v5);
  v10((*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7, (*(_QWORD *)(v6 + 64) + v7 + v9) & ~v7, v5);
  return a1;
}

_QWORD *sub_1DA5A17CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a2 + v11 + 48) & ~v11;
  v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 40);
  v13(((unint64_t)a1 + v11 + 48) & ~v11, v12, v9);
  v13((*(_QWORD *)(v10 + 64) + v11 + (((unint64_t)a1 + v11 + 48) & ~v11)) & ~v11, (*(_QWORD *)(v10 + 64) + v11 + v12) & ~v11, v9);
  return a1;
}

uint64_t sub_1DA5A1890(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((*(_QWORD *)(v4 + 64) + v7 + ((v7 + 48) & ~v7)) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 48) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1DA5A1970 + 4 * byte_1DA67F0CF[(v9 - 1)]))();
}

void sub_1DA5A19E0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + *(unsigned __int8 *)(v5 + 80)
       + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1DA5A1BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v26[6];

  v4 = v3;
  v26[1] = a3;
  v7 = sub_1DA66E338();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v14 = MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2, v14);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = swift_allocObject();
  v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(a2 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_1DA66E320();
  LOBYTE(v4) = sub_1DA66E32C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  v26[4] = v18;
  v26[5] = v19;
  sub_1DA498918();
  swift_bridgeObjectRetain();
  v22 = sub_1DA66E734();
  if ((v4 & 1) != 0)
  {
    v23 = v20;
    v24 = v21 & 1;
    sub_1DA66BE60();
    sub_1DA66E7F4();
  }
  else
  {
    v23 = v20;
    v24 = v21 & 1;
    sub_1DA66BE60();
    sub_1DA66E80C();
  }
  swift_release();
  sub_1DA5251EC(v22, v23, v24);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5A1E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v2 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  v7 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 48) = *(_QWORD *)(a1 + 48);
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v6 + v5, (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1DA66E800();
  return swift_release();
}

void sub_1DA5A1F08(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A1F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;

  sub_1DA66E8F0();
  sub_1DA66E8CC();
  v6 = sub_1DA66E95C();
  MEMORY[0x1DF09D318](v6);
  v7 = sub_1DA66F850();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v3, v1);
  result = v8(v2, v1);
  if ((v7 & 1) == 0)
  {
    sub_1DA66E8CC();
    sub_1DA59E960(v2, a1);
    return v8(v2, v1);
  }
  return result;
}

void sub_1DA5A2060(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A20C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_1DA66E95C();
  MEMORY[0x1DF09D318](v5);
  sub_1DA5A3AD4(v2, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

void sub_1DA5A2110(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = a1[2];
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A2160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32);
  v6(v4 + *(int *)(a1 + 60), v3, v1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v4 + *(int *)(a1 + 64), v2, v1);
}

void sub_1DA5A21AC()
{
  uint64_t v0;

  v0 = sub_1DA66DEF4();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A2238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v4 = sub_1DA670294();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  if ((sub_1DA66FBD4() & 1) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v3 - 168), v4);
    sub_1DA5A3B78();
  }
  v8 = v1;
  sub_1DA66DEC4();
  v9 = sub_1DA66DEDC();
  v10 = sub_1DA66FD90();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1DA478000, v9, v10, "Confirmation task was completed before computation finished, won't show confirmation", v11, 2u);
    MEMORY[0x1DF0A0474](v11, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v8);
}

void sub_1DA5A23E8()
{
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A2434()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1DA670294();
  MEMORY[0x1E0C80A78](v0);
  result = sub_1DA66FBD4();
  if ((result & 1) == 0)
    sub_1DA59CBE0();
  return result;
}

void sub_1DA5A2538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;

  v9[8] = a4;
  v9[2] = a5;
  v9[3] = a6;
  v9[4] = a7;
  v9[5] = a8;
  v9[6] = a9;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A256C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v1[10] = *(_QWORD *)(a1 - 8);
  v1[11] = swift_task_alloc();
  v2 = sub_1DA66DEF4();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  sub_1DA66FB68();
  v1[17] = sub_1DA66FB5C();
  v1[18] = sub_1DA66FB38();
  v1[19] = v3;
  return swift_task_switch();
}

uint64_t sub_1DA5A2628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v17;

  v1 = v0[8];
  v3 = v0[10];
  v2 = v0[11];
  v4 = v0[9];
  sub_1DA66DEC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v5 = sub_1DA66DEDC();
  v6 = sub_1DA66FD90();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = v0[11];
    v17 = v0[10];
    v8 = v0[9];
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    v10 = *(_QWORD *)(v7 + *(int *)(v8 + 100));
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v8);
    v0[7] = v10;
    sub_1DA6702C4();
    _os_log_impl(&dword_1DA478000, v5, v6, "Delaying confirmation UI by %lluns...", v9, 0xCu);
    MEMORY[0x1DF0A0474](v9, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[10] + 8))(v0[11], v0[9]);
  }
  v11 = v0[16];
  v12 = v0[12];
  v13 = v0[13];

  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v0[20] = v14;
  v14(v11, v12);
  v15 = (_QWORD *)swift_task_alloc();
  v0[21] = v15;
  *v15 = v0;
  v15[1] = sub_1DA5A27C4;
  return sub_1DA66FBF8();
}

uint64_t sub_1DA5A27C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5A2824()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 176);
  swift_release();
  sub_1DA66FBEC();
  if (!v1)
  {
    sub_1DA66DEC4();
    v8 = sub_1DA66DEDC();
    v9 = sub_1DA66FD90();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1DA478000, v8, v9, "Showing confirmation sheet.", v10, 2u);
      MEMORY[0x1DF0A0474](v10, -1, -1);
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 96);

    v11(v12, v13);
    sub_1DA5A23E8();
  }
  sub_1DA66DEC4();
  v2 = sub_1DA66DEDC();
  v3 = sub_1DA66FD90();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1DA478000, v2, v3, "Task cancelled, skipping confirmation display", v4, 2u);
    MEMORY[0x1DF0A0474](v4, -1, -1);
  }
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);

  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A29DC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA5A2A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;

  v11[31] = a10;
  v11[32] = a11;
  v11[29] = a8;
  v11[30] = a9;
  v11[27] = a6;
  v11[28] = a7;
  v11[25] = a4;
  v11[26] = a5;
  v11[13] = a7;
  v11[14] = a8;
  v11[15] = a9;
  v11[16] = a10;
  v11[17] = a11;
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A2A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[33] = a1;
  v5 = sub_1DA670294();
  v3[34] = v5;
  v3[35] = *(_QWORD *)(v5 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = *(_QWORD *)(v1 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = *(_QWORD *)(a1 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = *(_QWORD *)(v2 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v6 = sub_1DA670294();
  v3[47] = v6;
  v3[48] = *(_QWORD *)(v6 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v7 = sub_1DA66DEF4();
  v3[51] = v7;
  v3[52] = *(_QWORD *)(v7 - 8);
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = sub_1DA66FB68();
  v3[60] = sub_1DA66FB5C();
  v8 = (_QWORD *)swift_task_alloc();
  v3[61] = v8;
  *v8 = v3;
  v8[1] = sub_1DA5A2C40;
  return sub_1DA5A3FF8();
}

uint64_t sub_1DA5A2C40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 496) = v0;
  swift_task_dealloc();
  v3 = sub_1DA66FB38();
  if (!v0)
  {
    *(_QWORD *)(v2 + 504) = v3;
    *(_QWORD *)(v2 + 512) = v4;
  }
  return swift_task_switch();
}

void sub_1DA5A2CC8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;

  sub_1DA66DEC4();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD90();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1DA478000, v1, v2, "Starting task to compute confirmation state...", v3, 2u);
    MEMORY[0x1DF0A0474](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 256);
  v9 = *(_OWORD *)(v0 + 240);
  v10 = *(_OWORD *)(v0 + 224);

  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 520) = v8;
  v8(v4, v5);
  *(_OWORD *)(v0 + 144) = v10;
  *(_OWORD *)(v0 + 160) = v9;
  *(_QWORD *)(v0 + 176) = v7;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A2DB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v1[66] = a1;
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2 + *(int *)(a1 + 80))
                                                      + *(_QWORD *)(v2 + *(int *)(a1 + 80)));
  v3 = (_QWORD *)swift_task_alloc();
  v1[67] = v3;
  *v3 = v1;
  v3[1] = sub_1DA5A2F24;
  return v5(v1[50], v1[26], v1[27]);
}

uint64_t sub_1DA5A2E14()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A2F24()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5A2F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 16))(v1, *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 384);
    v4 = *(_QWORD *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 376);
    swift_release();
    v38 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v38(v4, v6);
    sub_1DA66DEC4();
    v7 = sub_1DA66DEDC();
    v8 = sub_1DA66FD90();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1DA478000, v7, v8, "This change does not require confirmation - applying.", v9, 2u);
      MEMORY[0x1DF0A0474](v9, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 528);
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v12 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 408);
    v14 = *(_QWORD *)(v0 + 216);

    v11(v12, v13);
    sub_1DA59E960(v14, v10);
    v38(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 360);
    v16 = *(_QWORD *)(v0 + 368);
    v18 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 32))(v16, *(_QWORD *)(v0 + 392), v19);
    sub_1DA66DEC4();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 544) = v20;
    v20(v17, v16, v19);
    v21 = sub_1DA66DEDC();
    v22 = sub_1DA66FD90();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    v25 = *(_QWORD *)(v0 + 448);
    v26 = *(_QWORD *)(v0 + 408);
    v27 = *(_QWORD *)(v0 + 360);
    if (v23)
    {
      v28 = *(_QWORD *)(v0 + 352);
      v36 = *(_QWORD *)(v0 + 336);
      v29 = *(_QWORD *)(v0 + 224);
      v39 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
      v30 = (uint8_t *)swift_slowAlloc();
      v37 = v26;
      v31 = swift_slowAlloc();
      v40 = v31;
      *(_DWORD *)v30 = 136315138;
      v20(v28, v27, v29);
      v32 = sub_1DA66F904();
      *(_QWORD *)(v0 + 192) = sub_1DA49AD00(v32, v33, &v40);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v34(v27, v29);
      _os_log_impl(&dword_1DA478000, v21, v22, "Determined confirmation state - yielding for other tasks. State: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v31, -1, -1);
      MEMORY[0x1DF0A0474](v30, -1, -1);

      v39(v25, v37);
    }
    else
    {
      v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 8);
      v34(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 224));

      v24(v25, v26);
    }
    *(_QWORD *)(v0 + 552) = v34;
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 560) = v35;
    *v35 = v0;
    v35[1] = sub_1DA5A3394;
    return sub_1DA66FC04();
  }
}

uint64_t sub_1DA5A3394()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5A33E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  __int128 v31;
  __int128 v32;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  __int128 v35;
  void (*v36)(uint64_t, uint64_t);
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 496);
  swift_release();
  sub_1DA66FBEC();
  if (!v1)
  {
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 224);
    sub_1DA66DEC4();
    v5(v7, v6, v8);
    v9 = sub_1DA66DEDC();
    v10 = sub_1DA66FD90();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
    if (v11)
    {
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
      v36 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
      v38 = *(_QWORD *)(v0 + 408);
      v40 = *(_QWORD *)(v0 + 440);
      v14 = *(_QWORD *)(v0 + 344);
      v13 = *(_QWORD *)(v0 + 352);
      v15 = *(_QWORD *)(v0 + 224);
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v41 = v17;
      *(_DWORD *)v16 = 136315138;
      v34(v13, v14, v15);
      v18 = sub_1DA66F904();
      *(_QWORD *)(v0 + 184) = sub_1DA49AD00(v18, v19, &v41);
      sub_1DA6702C4();
      swift_bridgeObjectRelease();
      v12(v14, v15);
      _os_log_impl(&dword_1DA478000, v9, v10, "Computing titles from configuration state. State: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v17, -1, -1);
      MEMORY[0x1DF0A0474](v16, -1, -1);

      v36(v40, v38);
    }
    else
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
      v21 = *(_QWORD *)(v0 + 440);
      v22 = *(_QWORD *)(v0 + 408);
      v12(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 224));

      v20(v21, v22);
    }
    v23 = *(_OWORD **)(v0 + 328);
    v24 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 296);
    v27 = *(_QWORD *)(v0 + 216);
    v39 = *(_QWORD *)(v0 + 224);
    v28 = *(_QWORD *)(v0 + 208);
    v35 = *(_OWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 232);
    v37 = *(_OWORD *)(v0 + 248);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 200) + *(int *)(*(_QWORD *)(v0 + 528) + 84)))(*(_QWORD *)(v0 + 368));
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    v30(v25, v28, v29);
    v30(v24, v27, v29);
    v32 = *(_OWORD *)(v0 + 32);
    v31 = *(_OWORD *)(v0 + 48);
    *v23 = *(_OWORD *)(v0 + 16);
    v23[1] = v32;
    v23[2] = v31;
    *(_QWORD *)(v0 + 64) = v39;
    *(_OWORD *)(v0 + 72) = v35;
    *(_OWORD *)(v0 + 88) = v37;
    type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
  }
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  (*(void (**)(_QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A3A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_1DA66E95C();
  return sub_1DA66E944();
}

uint64_t sub_1DA5A3AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v2, v3);
  sub_1DA66E8F0();
  return sub_1DA66E8D8();
}

void sub_1DA5A3B60()
{
  sub_1DA5A459C();
}

void sub_1DA5A3B78()
{
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A3BB4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_1DA670294();
  v2 = MEMORY[0x1E0C80A78](v1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v6 - v4, v0, v1, v2);
  sub_1DA66E8F0();
  return sub_1DA66E8D8();
}

void sub_1DA5A3C38()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA5A3C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);

  v4 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = *(_QWORD *)(v1 - 8);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v6 = sub_1DA66E95C();
  v7 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v7(v2 + v4 + *(int *)(v6 + 32), v1);
  swift_release();
  swift_release();
  v7(v2 + v4 + *(int *)(a1 + 64), v1);
  sub_1DA66E8F0();
  swift_release();
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A3D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v4, 1, a1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v4 + *(int *)(a1 + 60), v1);
    v5(v4 + *(int *)(a1 + 64), v1);
  }
  v9 = (v14 + v13 + v7) & ~v7;
  sub_1DA670294();
  sub_1DA66E8F0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = v6 + *(int *)(v3 + 88);
  v11 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5(v2 + v9, v1);
  v5(v2 + ((v15 + v7 + v9) & ~v7), v1);
  return swift_deallocObject();
}

void sub_1DA5A3EF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[5];
  v4 = v0[6];
  v3 = v0[7];
  v5 = v0[8];
  v1[2] = v0[4];
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v3;
  v1[6] = v5;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA5A3F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v18 = *(_QWORD *)(a1 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v11 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (v19 + *(_QWORD *)(v18 + 64) + v21) & ~v21;
  v23 = *(_QWORD *)(v12 + 16);
  v24 = *(_QWORD *)(v12 + 24);
  v25 = v12 + v19;
  v26 = v12 + v22;
  v27 = v12 + ((*(_QWORD *)(v20 + 64) + v21 + v22) & ~v21);
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v14 + 56) = v28;
  *v28 = v14;
  v28[1] = sub_1DA55E1DC;
  v17[3] = v15;
  v17[4] = v13;
  v17[2] = v16;
  sub_1DA5A2A40(v17[5], v23, v24, v25, v26, v27, v29, v11, a9, a10, a11);
}

uint64_t sub_1DA5A3FF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1DA66FB68();
  v0[2] = sub_1DA66FB5C();
  v0[3] = sub_1DA66FB38();
  v0[4] = v1;
  return swift_task_switch();
}

void sub_1DA5A4060()
{
  uint64_t v0;
  id v1;
  void *v2;
  int64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel__applePodcastsFoundationSharedUserDefaults);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = (void *)sub_1DA66F88C();
  v3 = (int64_t)objc_msgSend(v1, sel_integerForKey_, v2);

  if (v3 < 1)
  {

    swift_release();
    (*(void (**)(void))(v0 + 8))();
  }
  else if (is_mul_ok(v3, 0x3B9ACA00uLL))
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v4;
    *v4 = v0;
    v4[1] = sub_1DA5A4168;
    sub_1DA66FBF8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DA5A4168()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5A41C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A4208()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1DA5A4248()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA5A4290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);

  v4 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v5 = sub_1DA66E95C();
  v6 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v6(v1 + v4 + *(int *)(v5 + 32), v2);
  swift_release();
  swift_release();
  v6(v1 + v4 + *(int *)(a1 + 64), v2);
  sub_1DA66E8F0();
  swift_release();
  type metadata accessor for AsyncSelectionConfirmingPicker.ConfirmationConfiguration();
}

uint64_t sub_1DA5A435C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v3, 1, a1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v3 + *(int *)(a1 + 60), v2);
    v5(v3 + *(int *)(a1 + 64), v2);
  }
  sub_1DA670294();
  sub_1DA66E8F0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = v4 + *(int *)(v1 + 88);
  v8 = sub_1DA66E338();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5A44B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[8];
  v1[2] = v0[4];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  v1[6] = v5;
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

void sub_1DA5A4504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v18 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = *(_QWORD *)(v10 + 24);
  v21 = v10 + ((v18 + 72) & ~v18);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v12 + 56) = v22;
  *v22 = v12;
  v22[1] = sub_1DA5A4724;
  *(_QWORD *)(v17 + 16) = v16;
  sub_1DA5A2538(v9, v19, v20, v21, v11, v13, v14, v15, a9);
}

void sub_1DA5A4584()
{
  sub_1DA5A459C();
}

void sub_1DA5A459C()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A45D4()
{
  return sub_1DA59CB2C();
}

void sub_1DA5A45FC()
{
  sub_1DA5A46B4();
}

void sub_1DA5A460C()
{
  sub_1DA5A4628();
}

void sub_1DA5A461C()
{
  sub_1DA5A4628();
}

void sub_1DA5A4628()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A4664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v9(v2 + ((v7 + 56) & ~v7), v1, v3, v4, v5, v6);
}

void sub_1DA5A46A8()
{
  sub_1DA5A46B4();
}

void sub_1DA5A46B4()
{
  type metadata accessor for AsyncSelectionConfirmingPicker();
}

uint64_t sub_1DA5A46F4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, a1);
}

uint64_t ArtworkModel.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  int v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  char v117[32];
  uint64_t v118;

  v114 = a2;
  v108 = a3;
  v100 = sub_1DA66C928();
  v105 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v101 = (char *)v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1DA66DD14();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v98 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53D8);
  MEMORY[0x1E0C80A78](v6);
  v102 = (uint64_t)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v109 = (char *)v90 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE40A0);
  MEMORY[0x1E0C80A78](v10);
  v107 = (uint64_t)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v111 = (char *)v90 - v13;
  v113 = sub_1DA66ECC8();
  v118 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v15 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1DA66EC20();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v106 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v90 - v20;
  MEMORY[0x1E0C80A78](v22);
  v112 = (char *)v90 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v90 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v90 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v90 - v31;
  sub_1DA66EC2C();
  v99 = sub_1DA66EC08();
  v34 = v33;
  v35 = *(void (**)(char *, uint64_t))(v17 + 8);
  v35(v32, v16);
  if (!v34)
  {
    v54 = sub_1DA66F6DC();
    sub_1DA59A0CC();
    swift_allocError();
    v56 = v55;
    v57 = sub_1DA66CA0C();
    *v56 = 0x6574616C706D6574;
    v56[1] = 0xE800000000000000;
    v56[2] = v57;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v56, *MEMORY[0x1E0D414E8], v54);
    v39 = a1;
    v59 = v113;
    v58 = v114;
    v40 = (uint64_t (*)(uint64_t, uint64_t))v35;
LABEL_9:
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v58, v59);
    return v40(v39, v16);
  }
  v110 = v34;
  sub_1DA66EC2C();
  v36 = sub_1DA66EBFC();
  v38 = v37;
  v35(v29, v16);
  v39 = a1;
  v40 = (uint64_t (*)(uint64_t, uint64_t))v35;
  if ((v38 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v60 = sub_1DA66F6DC();
    sub_1DA59A0CC();
    swift_allocError();
    v62 = v61;
    v63 = sub_1DA66CA0C();
    *v62 = 0x6874646977;
    v62[1] = 0xE500000000000000;
    v62[2] = v63;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v60 - 8) + 104))(v62, *MEMORY[0x1E0D414E8], v60);
    v59 = v113;
    v58 = v114;
    goto LABEL_9;
  }
  v95 = v36;
  v41 = v16;
  sub_1DA66EC2C();
  v42 = sub_1DA66EBFC();
  v44 = v43;
  v40((uint64_t)v26, v16);
  if ((v44 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v64 = sub_1DA66F6DC();
    sub_1DA59A0CC();
    swift_allocError();
    v66 = v65;
    v67 = sub_1DA66CA0C();
    *v66 = 0x746867696568;
    v66[1] = 0xE600000000000000;
    v66[2] = v67;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v66, *MEMORY[0x1E0D414E8], v64);
    v59 = v113;
    v58 = v114;
    goto LABEL_9;
  }
  v90[1] = v42;
  v45 = (uint64_t)v112;
  sub_1DA66EC2C();
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v47 = v114;
  v97 = v41;
  v48 = v113;
  v46(v15, v114, v113);
  sub_1DA5A50C8();
  sub_1DA66EF50();
  v92 = v115;
  v94 = v116;
  sub_1DA66EC2C();
  v46(v15, v47, v48);
  ArtworkTextColors.init(tryDeserializing:using:)(v45, (uint64_t)v15, (uint64_t)v117);
  v96 = v39;
  sub_1DA66EC2C();
  v49 = sub_1DA66EC08();
  v51 = v50;
  v52 = v97;
  v53 = (void (*)(char *, uint64_t))v40;
  ((void (*)(char *))v40)(v21);
  if (v51)
    v91 = MEMORY[0x1DF09B3F8](v49, v51);
  else
    v91 = 3;
  v69 = v104;
  v70 = (uint64_t)v109;
  v71 = v106;
  sub_1DA66EC2C();
  sub_1DA66EC08();
  v73 = v72;
  v53(v71, v52);
  if (v73)
  {
    sub_1DA66DCFC();
    v74 = v53;
    v75 = v105;
    v76 = v103;
  }
  else
  {
    v77 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v70, 1, 1, v69);
    v74 = v53;
    v76 = v77;
    v75 = v105;
  }
  v78 = v102;
  sub_1DA49CC94(v70, v102, &qword_1EDAE53D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v78, 1, v69) == 1)
  {
    v79 = v111;
    v80 = v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v111, 1, 1, v100);
  }
  else
  {
    v81 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v98, v78, v69);
    v79 = v111;
    sub_1DA66C910();
    v80 = v100;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v79, 0, 1, v100);
    v82 = v81;
    v70 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v82, v69);
  }
  sub_1DA47E2F0(v70, &qword_1EDAE53D8);
  v83 = v112;
  sub_1DA66EC2C();
  sub_1DA66EC08();
  v74(v83, v97);
  v84 = (uint64_t)v79;
  v85 = v107;
  sub_1DA49CC94(v84, v107, (uint64_t *)&unk_1EDAE40A0);
  v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v85, 1, v80);
  v93 = (void (*)(uint64_t, uint64_t))v74;
  if (v86 == 1)
  {
    sub_1DA66C904();
    sub_1DA47E2F0(v85, (uint64_t *)&unk_1EDAE40A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v101, v85, v80);
  }
  v87 = (uint64_t)v111;
  v89 = v113;
  v88 = v114;
  sub_1DA66CC1C();
  sub_1DA66CA00();
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v88, v89);
  v93(v96, v97);
  return sub_1DA47E2F0(v87, (uint64_t *)&unk_1EDAE40A0);
}

unint64_t sub_1DA5A50C8()
{
  unint64_t result;

  result = qword_1EDAE4338;
  if (!qword_1EDAE4338)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for Color, MEMORY[0x1E0D7ED00]);
    atomic_store(result, (unint64_t *)&qword_1EDAE4338);
  }
  return result;
}

uint64_t sub_1DA5A510C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ArtworkModel.init(deserializing:using:)(a1, a2, a3);
}

uint64_t RemoveAbandonedDownloadsTip.reclaimedSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66CBE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoveAbandonedDownloadsTip.episodesToDelete.getter()
{
  type metadata accessor for RemoveAbandonedDownloadsTip();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsTip()
{
  uint64_t result;

  result = qword_1EDAE3E90;
  if (!qword_1EDAE3E90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RemoveAbandonedDownloadsTip.actions.getter()
{
  type metadata accessor for RemoveAbandonedDownloadsTip();
  return swift_bridgeObjectRetain();
}

uint64_t RemoveAbandonedDownloadsTip.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for RemoveAbandonedDownloadsTip() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RemoveAbandonedDownloadsTip.actions.modify())()
{
  type metadata accessor for RemoveAbandonedDownloadsTip();
  return nullsub_1;
}

uint64_t RemoveAbandonedDownloadsTip.init(reclaimedSpace:episodesToDelete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  _BYTE v27[48];
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1DA66CBE0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, a1, v6);
  v8 = type metadata accessor for RemoveAbandonedDownloadsTip();
  *(_QWORD *)(a3 + *(int *)(v8 + 20)) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026AB70);
  v9 = (_OWORD *)swift_allocObject();
  v9[1] = xmmword_1DA678FE0;
  v10 = type metadata accessor for RemoveAbandonedDownloadsAction();
  v29 = v10;
  v30 = sub_1DA47E32C(&qword_1F026A8B0, (uint64_t (*)(uint64_t))type metadata accessor for RemoveAbandonedDownloadsAction, (uint64_t)&protocol conformance descriptor for RemoveAbandonedDownloadsAction);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  swift_bridgeObjectRetain_n();
  sub_1DA66ED4C();
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v10 + 20)) = a2;
  v12 = sub_1DA66D2F4();
  v14 = v13;
  sub_1DA4813E4((uint64_t)v28, (uint64_t)&v25);
  *(_QWORD *)&v27[8] = v12;
  *(_QWORD *)&v27[16] = v14;
  *(_QWORD *)&v27[24] = 0xD000000000000029;
  *(_QWORD *)&v27[32] = 0x80000001DA689DB0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1FB8);
  sub_1DA5329A0();
  LOBYTE(v12) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    v15 = 2;
  else
    v15 = 0;
  *(_QWORD *)&v27[40] = v15;
  v16 = *(_OWORD *)&v27[16];
  v9[4] = *(_OWORD *)v27;
  v9[5] = v16;
  v17 = v26;
  v9[2] = v25;
  v9[3] = v17;
  v9[6] = *(_OWORD *)&v27[32];
  v18 = type metadata accessor for AcceptDanglingDownloadsAction();
  v29 = v18;
  v30 = sub_1DA47E32C((unint64_t *)&qword_1F026A090, (uint64_t (*)(uint64_t))type metadata accessor for AcceptDanglingDownloadsAction, (uint64_t)&protocol conformance descriptor for AcceptDanglingDownloadsAction);
  v19 = __swift_allocate_boxed_opaque_existential_1(v28);
  sub_1DA66ED4C();
  *(uint64_t *)((char *)v19 + *(int *)(v18 + 20)) = a2;
  sub_1DA4813E4((uint64_t)v28, (uint64_t)&v25);
  memset(&v27[8], 0, 32);
  LOBYTE(v18) = sub_1DA670288();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  swift_bridgeObjectRelease();
  v20 = 2;
  if ((v18 & 1) == 0)
    v20 = 0;
  *(_QWORD *)&v27[40] = v20;
  v21 = *(_OWORD *)&v27[16];
  v9[9] = *(_OWORD *)v27;
  v9[10] = v21;
  v22 = v26;
  v9[7] = v25;
  v9[8] = v22;
  v9[11] = *(_OWORD *)&v27[32];
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *(_QWORD *)(a3 + *(int *)(v8 + 24)) = v9;
  return result;
}

unint64_t sub_1DA5A54E0()
{
  return 0xD000000000000035;
}

unint64_t RemoveAbandonedDownloadsTip.iconIdentifier.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_1DA5A5518()
{
  return sub_1DA66D2F4();
}

uint64_t RemoveAbandonedDownloadsTip.localizedTitle.getter()
{
  return sub_1DA66D2F4();
}

id RemoveAbandonedDownloadsTip.localizedMessage.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1DA66D2F4();
  v0 = sub_1DA66CBC8();
  result = objc_msgSend((id)objc_opt_self(), sel_stringWithBytesize_, v0);
  if (result)
  {
    v2 = result;
    v3 = sub_1DA66F8BC();
    v5 = v4;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE50B0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DA678510;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = sub_1DA486218();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = sub_1DA66F8E0();
    swift_bridgeObjectRelease();
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5A56A4()
{
  return swift_bridgeObjectRetain();
}

void RemoveAbandonedDownloadsTip.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

void sub_1DA5A56BC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoveAbandonedDownloadsTip(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = sub_1DA66CBE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for RemoveAbandonedDownloadsTip(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RemoveAbandonedDownloadsTip(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoveAbandonedDownloadsTip(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for RemoveAbandonedDownloadsTip(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for RemoveAbandonedDownloadsTip(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DA66CBE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoveAbandonedDownloadsTip()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5A5994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66CBE0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoveAbandonedDownloadsTip()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5A5A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66CBE0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DA5A5A94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DA66CBE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DA5A5B0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1DA670798();
  sub_1DA6707A4();
  if (v1)
    sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5A5B78()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_1DA6707A4();
  sub_1DA6707A4();
  return sub_1DA66F94C();
}

uint64_t sub_1DA5A5BDC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1DA670798();
  sub_1DA6707A4();
  if (v1)
    sub_1DA66F94C();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5A5C44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return v4 == 0;
  if (!v4)
    return 0;
  if (*a1 == *a2 && v3 == v4)
    return 1;
  else
    return sub_1DA6706D8();
}

uint64_t sub_1DA5A5C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = sub_1DA66EFB0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = sub_1DA66EF8C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_9;
  if (!v11)
    v9 = 0;
  swift_bridgeObjectRetain();
  v13 = sub_1DA55CFAC(v9, v11);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_endAccess();
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_10;
  v16 = sub_1DA55D02C(a1);
  if ((v17 & 1) == 0)
    goto LABEL_10;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1DA5A5DF4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v4 = v3;
  v31 = a2;
  v30 = a1;
  v6 = sub_1DA66EFB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v14((char *)&v29 - v12, a3, v6, v11);
  v15 = sub_1DA66EF8C();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v13, v6);
  if (v17)
    v19 = v15;
  else
    v19 = 0;
  v20 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  v21 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 16);
  swift_bridgeObjectRetain();
  if (v21 && (sub_1DA55CFAC(v19, v17), (v22 & 1) != 0))
    v23 = swift_bridgeObjectRetain();
  else
    v23 = sub_1DA63CFC8(MEMORY[0x1E0DEE9D8]);
  v34 = v23;
  swift_endAccess();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v14)(v9, a3, v6);
  if ((v31 & 1) != 0)
  {
    sub_1DA5A7A74((uint64_t)v9);
  }
  else
  {
    v24 = v34;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = v24;
    sub_1DA5381F8(v30, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    v34 = v33;
    swift_bridgeObjectRelease();
  }
  v18(v9, v6);
  v26 = v34;
  swift_beginAccess();
  v27 = swift_isUniquelyReferenced_nonNull_native();
  v32 = *v20;
  *v20 = 0x8000000000000000;
  sub_1DA53809C(v26, v19, v17, v27);
  *v20 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(a3, v6);
}

uint64_t sub_1DA5A601C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1DA66EFB0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = sub_1DA66EF8C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v11)
    v9 = 0;
  v12 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v14 = sub_1DA55CFAC(v9, v11);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  v22 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_1DA5A7A74(a1);
  v17 = v22;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v12;
  *v12 = 0x8000000000000000;
  sub_1DA53809C(v17, v9, v11, isUniquelyReferenced_nonNull_native);
  *v12 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v16;
}

uint64_t sub_1DA5A61D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DynamicImpressionsCalculator.__allocating_init(configuration:impressionsTracker:notificationCenter:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;

  v4 = sub_1DA5A8EF4(a1, a2, a3);
  swift_release();

  return v4;
}

void sub_1DA5A623C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver;
  if (!*(uint64_t *)((char *)v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    v8 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = swift_allocObject();
    swift_weakInit();
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = a1;
    v10[5] = v9;
    v10[6] = v3;
    v11 = a1;
    *(uint64_t *)((char *)v1 + v7) = sub_1DA569804((uint64_t)v6, (uint64_t)&unk_1F026BD98, (uint64_t)v10);
    swift_release();
  }
}

uint64_t DynamicImpressionsCalculator.deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    sub_1DA66BE60();
    sub_1DA66FBC8();
    swift_release();
  }
  swift_release();
  swift_release();
  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, &qword_1EDAE4940);
  swift_release();
  swift_release();
  return v0;
}

uint64_t DynamicImpressionsCalculator.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver))
  {
    sub_1DA66BE60();
    sub_1DA66FBC8();
    swift_release();
  }
  swift_release();
  swift_release();
  sub_1DA47E2F0(v0 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, &qword_1EDAE4940);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DynamicImpressionsCalculator.isVisible.getter()
{
  return sub_1DA66F1B4() & 1;
}

uint64_t DynamicImpressionsCalculator.isVisible.setter()
{
  return sub_1DA66F1C0();
}

uint64_t (*DynamicImpressionsCalculator.isVisible.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = sub_1DA66F1B4() & 1;
  return sub_1DA5A6528;
}

uint64_t sub_1DA5A6528()
{
  return sub_1DA66F1C0();
}

uint64_t DynamicImpressionsCalculator.viewBounds.getter()
{
  return sub_1DA66F154();
}

uint64_t DynamicImpressionsCalculator.viewBounds.setter()
{
  return sub_1DA66F160();
}

void (*DynamicImpressionsCalculator.viewBounds.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 24);
  sub_1DA66F154();
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  return sub_1DA5A65E0;
}

void sub_1DA5A65E0(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_1DA66F160();
  free(v1);
}

uint64_t DynamicImpressionsCalculator.addElement(_:in:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v2 = sub_1DA66C430();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66EFB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - v10;
  sub_1DA66EFC8();
  v12 = sub_1DA5A5C90((uint64_t)v11);
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v21;
  v15(v11, v5);
  if ((v14 & 1) == 0 && v12 != v16)
  {
    sub_1DA66C418();
    sub_1DA66F334();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  }
  sub_1DA66EFC8();
  sub_1DA5A5DF4(v16, 0, (uint64_t)v8);
  return sub_1DA66F148();
}

uint64_t DynamicImpressionsCalculator.increaseImpressionableFrame(of:by:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  uint64_t v11;

  v4 = sub_1DA66EFB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66EFC8();
  sub_1DA5A5C90((uint64_t)v7);
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
    DynamicImpressionsCalculator.addElement(_:in:at:)(a1, a2);
  return sub_1DA66F1A8();
}

uint64_t DynamicImpressionsCalculator.moveElement(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1DA66C430();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66EFB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v19 = v2;
  sub_1DA66EFC8();
  v14 = sub_1DA5A5C90((uint64_t)v13);
  v16 = v15;
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  if ((v16 & 1) == 0 && v14 != a2)
  {
    sub_1DA66EFC8();
    sub_1DA5A5DF4(a2, 0, (uint64_t)v10);
    sub_1DA66C418();
    sub_1DA66F334();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  }
  return result;
}

uint64_t DynamicImpressionsCalculator.deleteElement(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1DA66C430();
  v0 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1DA66EFB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1DA66EFC8();
  sub_1DA5A5C90((uint64_t)v9);
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  result = v12(v9, v3);
  if ((v11 & 1) == 0)
  {
    sub_1DA66EFC8();
    sub_1DA5A601C((uint64_t)v6);
    v12(v6, v3);
    sub_1DA66F184();
    sub_1DA66C418();
    sub_1DA66F340();
    return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v15);
  }
  return result;
}

uint64_t DynamicImpressionsCalculator.removeElement(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  uint64_t (*v9)(char *, uint64_t);
  uint64_t result;
  uint64_t v11;

  v0 = sub_1DA66EFB0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  sub_1DA66EFC8();
  sub_1DA5A5C90((uint64_t)v6);
  v8 = v7;
  v9 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  result = v9(v6, v0);
  if ((v8 & 1) == 0)
  {
    sub_1DA66EFC8();
    sub_1DA5A601C((uint64_t)v3);
    v9(v3, v0);
    return sub_1DA66F184();
  }
  return result;
}

Swift::Void __swiftcall DynamicImpressionsCalculator.removeAllElements()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4940);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions);
  sub_1DA5A90C4(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID, (uint64_t)v4);
  v6 = sub_1DA66EFB0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1DA47E2F0((uint64_t)v4, &qword_1EDAE4940);
    swift_beginAccess();
    *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9E0];
  }
  else
  {
    v8 = sub_1DA66EFA4();
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1DA5A79A8(v8, v10);
    swift_endAccess();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  sub_1DA66F190();
}

uint64_t DynamicImpressionsCalculator.childCalculator(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4940);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66F13C();
  if (!v7)
    return 0;
  v8 = v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = sub_1DA66EFB0();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver) = 0;
  *(_BYTE *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = 2;
  *(_QWORD *)(v13 + 16) = v9;
  *(_QWORD *)(v13 + 24) = v8;
  sub_1DA5A910C((uint64_t)v6, v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions) = v12;
  sub_1DA66BE60();
  sub_1DA66BE60();
  return v13;
}

uint64_t DynamicImpressionsCalculator.changeImpressionableBounds(for:to:)()
{
  return sub_1DA66F19C();
}

id sub_1DA5A6F78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D90);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DA678FE0;
  v1 = (void *)*MEMORY[0x1E0DC4768];
  v5 = (id)*MEMORY[0x1E0DC4860];
  v2 = *MEMORY[0x1E0DC4860];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0DC4768];
  *(_QWORD *)(v0 + 40) = v2;
  qword_1EDAE3EC8 = v0;
  v3 = v1;
  return v5;
}

uint64_t sub_1DA5A6FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch();
}

uint64_t sub_1DA5A6FFC()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_1EDAE3ED0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_1DA66BE60();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1DA5A7104;
  return sub_1DA66FF88();
}

uint64_t sub_1DA5A7104()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release_n();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1DA5A7158(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = a2;
  sub_1DA66EC74();
  v2[14] = swift_task_alloc();
  v3 = sub_1DA66F6B8();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5A71D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;

  v1 = (void *)sub_1DA66C0DC();
  v2 = sub_1DA66F8BC();
  v4 = v3;
  if (v2 == sub_1DA66F8BC() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_1DA6706D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v8 = sub_1DA66F8BC();
      v10 = v9;
      if (v8 == sub_1DA66F8BC() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();

      }
      else
      {
        v13 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v13 & 1) == 0)
        {
          if (qword_1EDAE2878 != -1)
            swift_once();
          v15 = *(_QWORD *)(v0 + 128);
          v14 = *(_QWORD *)(v0 + 136);
          v16 = *(_QWORD *)(v0 + 120);
          v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1EDAE2858);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2208);
          sub_1DA66EC8C();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DA678510;
          sub_1DA66EC68();
          sub_1DA66EC5C();
          v18 = sub_1DA66C0DC();
          type metadata accessor for Name(0);
          *(_QWORD *)(v0 + 40) = v19;
          *(_QWORD *)(v0 + 16) = v18;
          sub_1DA66EC44();
          sub_1DA47E2F0(v0 + 16, &qword_1EDAE5130);
          sub_1DA66EC5C();
          sub_1DA66EC80();
          sub_1DA66F544();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
          goto LABEL_21;
        }
      }
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 160) = Strong;
      if (Strong)
      {
        sub_1DA66FB68();
        *(_QWORD *)(v0 + 168) = sub_1DA66FB5C();
        sub_1DA66FB38();
        return swift_task_switch();
      }
      goto LABEL_21;
    }
  }

  swift_beginAccess();
  v20 = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 144) = v20;
  if (v20)
  {
    sub_1DA66FB68();
    *(_QWORD *)(v0 + 152) = sub_1DA66FB5C();
    sub_1DA66FB38();
    return swift_task_switch();
  }
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A7588()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_release();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = sub_1DA66F1B4() & 1;
  sub_1DA66F1C0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A75F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) != 2)
    sub_1DA66F1C0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5A766C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v10 = sub_1DA55C8B8(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v3;
  v19 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA57AE54();
    v13 = v19;
  }
  v14 = *(_QWORD *)(v13 + 48);
  v15 = sub_1DA66D5C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
  v16 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 32);
  v16(v9, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v10, v6);
  sub_1DA5A7CC4(v10, v13);
  *v3 = v13;
  swift_bridgeObjectRelease();
  v16(a2, (unint64_t)v9, v6);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
}

uint64_t sub_1DA5A77F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void (*v17)(char *, unint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1DA66C544();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v10 = sub_1DA55C9E8(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v3;
  v20 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA57B348();
    v13 = v20;
  }
  v14 = *(_QWORD *)(v13 + 48);
  v15 = sub_1DA66C4E4();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00];
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
  v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 32);
  v17(v9, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v10, v6);
  sub_1DA5A8884(v10, v13, v16, &qword_1EDAE3AD8, MEMORY[0x1E0CB0F10], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB11F0]);
  *v3 = v13;
  swift_bridgeObjectRelease();
  v17(a2, (unint64_t)v9, v6);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
}

uint64_t sub_1DA5A79A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DA55CFAC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA57C518();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1DA5A823C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DA5A7A74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1DA55D02C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DA57C6C8();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1DA66EFB0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1DA5A8434(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DA5A7B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1DA55C8B8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DA57CC54();
      v9 = v19;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1DA66D5C4();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v13 = *(_QWORD *)(v9 + 56);
    v14 = sub_1DA66DA68();
    v15 = MEMORY[0x1E0D7EAB0];
    v16 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 32))(a2, v13 + *(_QWORD *)(v16 + 72) * v6, v14);
    sub_1DA5A8884(v6, v9, v12, (unint64_t *)&qword_1F026E390, MEMORY[0x1E0D7E5E0], (uint64_t (*)(_QWORD))v15);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = sub_1DA66DA68();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

void sub_1DA5A7CC4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_1DA66D5C4();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1DA670384();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v36(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1DA47E32C((unint64_t *)&qword_1F026E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7E5D0], MEMORY[0x1E0D7E5E0]);
        v18 = sub_1DA66F7F0();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4170) - 8) + 72);
            v24 = v23 * a1;
            v25 = v22 + v23 * a1;
            v26 = v23 * v9;
            v27 = v22 + v23 * v9 + v23;
            if (v24 < v26 || v25 >= v27)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v24 != v26)
              {
                swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA5A7F9C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1DA66C454();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1DA670384();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1DA47E32C(&qword_1EDAE4F90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1DA66F7F0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA5A823C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_1DA670798();
        sub_1DA6707A4();
        if (v9)
        {
          swift_bridgeObjectRetain();
          sub_1DA66F94C();
        }
        v10 = sub_1DA6707C8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_13:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1DA5A8434(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1DA66EFB0();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1DA670384();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_1DA47E32C(&qword_1EDAE4930, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40198], MEMORY[0x1E0D401A8]);
        v18 = sub_1DA66F7F0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA5A86D4(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1DA670198();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DA5A8884(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t (*v43)(uint64_t);
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a6;
  v44 = a4;
  v45 = a5;
  v43 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = a2 + 64;
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(a2 + 64 + 8 * (v13 >> 6))) != 0)
  {
    v14 = ~v12;
    v15 = sub_1DA670384();
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v42 = (v15 + 1) & v14;
      v16 = *(_QWORD *)(v46 + 72);
      v41 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 16);
      v17 = v14;
      do
      {
        v18 = v11;
        v19 = v16;
        v20 = v16 * v13;
        v41(v10, *(_QWORD *)(a2 + 48) + v16 * v13, v8);
        v21 = v17;
        sub_1DA47E32C(v44, v43, v45);
        v22 = sub_1DA66F7F0();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
        v23 = v22 & v21;
        v17 = v21;
        if (a1 >= (uint64_t)v42)
        {
          if (v23 >= v42 && a1 >= (uint64_t)v23)
          {
LABEL_16:
            if (v19 * a1 < v20
              || *(_QWORD *)(a2 + 48) + v19 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v20 + v19))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(v40(0) - 8) + 72);
            v28 = v27 * a1;
            v29 = v26 + v27 * a1;
            v30 = v27 * v13;
            v31 = v26 + v27 * v13 + v27;
            v32 = v28 < v30 || v29 >= v31;
            v11 = v18;
            if (v32)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v13;
              v17 = v21;
            }
            else
            {
              a1 = v13;
              v17 = v21;
              if (v28 != v30)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v13;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v42 || a1 >= (uint64_t)v23)
        {
          goto LABEL_16;
        }
        v11 = v18;
LABEL_5:
        v13 = (v13 + 1) & v17;
        v16 = v19;
      }
      while (((*(_QWORD *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    v33 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v33;
    v35 = (-1 << a1) - 1;
  }
  else
  {
    v33 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v35 = *v33;
    v34 = (-1 << a1) - 1;
  }
  *v33 = v35 & v34;
  v36 = *(_QWORD *)(a2 + 16);
  v37 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DA5A8B50(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DA670798();
        swift_bridgeObjectRetain();
        sub_1DA66F94C();
        v12 = sub_1DA6707C8();
        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (__int128 *)(v17 + (v3 << 6));
          v19 = (__int128 *)(v17 + (v6 << 6));
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 4))
          {
            v9 = *v19;
            v10 = v19[1];
            v11 = v19[3];
            v18[2] = v19[2];
            v18[3] = v11;
            *v18 = v9;
            v18[1] = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DA5A8D2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1DA670384();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1DA49A8F4(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1DA6703D8();
        result = sub_1DA49A930((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DA5A8EF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4940);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66F16C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66F1CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain_n();
  v13 = sub_1DA66F178();
  v14 = sub_1DA66EFB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1DA63CEB0(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for DynamicImpressionsCalculator();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_applicationLifecycleObserver) = 0;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_wasVisibleBeforeGoingIntoBackground) = 2;
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v13;
  sub_1DA5A910C((uint64_t)v8, v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_parentID);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC10PodcastsUI28DynamicImpressionsCalculator_elementPositions) = v15;
  sub_1DA66BE60();
  sub_1DA5A623C(a3);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v16;
}

uint64_t sub_1DA5A90C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5A910C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5A9154@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1DA66F1B4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DA5A9184()
{
  return sub_1DA66F1C0();
}

uint64_t sub_1DA5A91AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_1DA66F154();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1DA5A91DC()
{
  return sub_1DA66F160();
}

uint64_t sub_1DA5A9208()
{
  return type metadata accessor for DynamicImpressionsCalculator();
}

uint64_t type metadata accessor for DynamicImpressionsCalculator()
{
  uint64_t result;

  result = qword_1EDAE3EE8;
  if (!qword_1EDAE3EE8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA5A924C()
{
  unint64_t v0;

  sub_1DA5A92E8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DynamicImpressionsCalculator()
{
  return swift_lookUpClassMethod();
}

void sub_1DA5A92E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE4948)
  {
    sub_1DA66EFB0();
    v0 = sub_1DA670294();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE4948);
  }
}

uint64_t type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore()
{
  return objc_opt_self();
}

_QWORD *assignWithCopy for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1DA5A9470(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1DA5A9488(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering()
{
  return &type metadata for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering;
}

unint64_t sub_1DA5A94BC()
{
  unint64_t result;

  result = qword_1EDAE3EB8;
  if (!qword_1EDAE3EB8)
  {
    result = MEMORY[0x1DF0A039C](&unk_1DA67F3B4, &type metadata for DynamicImpressionsCalculator.ElementPositionStore.ParentOrdering);
    atomic_store(result, (unint64_t *)&qword_1EDAE3EB8);
  }
  return result;
}

uint64_t sub_1DA5A9500()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA5A9524()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5A9558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1DA4AD77C;
  *(_OWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_1DA5A95B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA4AD77C;
  return sub_1DA5A7158(a1, v1);
}

uint64_t dispatch thunk of SegmentedControl.selectedSegmentIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncBootstrap.buildForegroundDependencies(basedOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SyncBootstrap.buildBackgroundDependencies()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id FairPlayDebugHostingController.__allocating_init()()
{
  objc_class *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t *v6;
  uint64_t v7;
  _QWORD v9[4];
  char v10;

  v1 = objc_allocWithZone(v0);
  v9[0] = 0;
  v9[1] = 0;
  v9[2] = sub_1DA4EE4CC;
  v9[3] = 0;
  v10 = 0;
  v2 = (void *)sub_1DA66E548();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = v2;
  v5 = (void (*)(_QWORD *, _QWORD))sub_1DA66E554();
  v7 = *v6;
  *v6 = (uint64_t)sub_1DA5A97BC;
  v6[1] = v3;
  sub_1DA4EFFCC(v7);
  v5(v9, 0);

  return v4;
}

id FairPlayDebugHostingController.init()()
{
  void *v0;
  uint64_t v1;
  id v2;
  void (*v3)(_QWORD *, _QWORD);
  uint64_t *v4;
  uint64_t v5;
  _QWORD v7[4];
  char v8;

  v7[0] = 0;
  v7[1] = 0;
  v7[2] = sub_1DA4EE4CC;
  v7[3] = 0;
  v8 = 0;
  v0 = (void *)sub_1DA66E548();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v0;
  v2 = v0;
  v3 = (void (*)(_QWORD *, _QWORD))sub_1DA66E554();
  v5 = *v4;
  *v4 = (uint64_t)sub_1DA5A99B0;
  v4[1] = v1;
  sub_1DA4EFFCC(v5);
  v3(v7, 0);

  return v2;
}

uint64_t sub_1DA5A9798()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1DA5A97BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1DA5A97D4()
{
  sub_1DA670570();
  __break(1u);
}

void FairPlayDebugHostingController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FairPlayDebugHostingController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FairPlayDebugHostingController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FairPlayDebugHostingController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FairPlayDebugHostingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FairPlayDebugHostingController()
{
  uint64_t result;

  result = qword_1F026BDB0;
  if (!qword_1F026BDB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA5A994C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FairPlayDebugHostingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlayDebugHostingController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for FairPlayDebugHostingController))();
}

uint64_t sub_1DA5A99A4()
{
  return type metadata accessor for FairPlayDebugHostingController();
}

unint64_t static FetchPodcastForEpisodeIntent.kind.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t FetchPodcastForEpisodeIntent.episodeAdamID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FetchPodcastForEpisodeIntent.init(episodeAdamID:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1DA5A99E0(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001DA67F470;
}

ValueMetadata *type metadata accessor for FetchPodcastForEpisodeIntent()
{
  return &type metadata for FetchPodcastForEpisodeIntent;
}

uint64_t ArtworkTextColors.init(tryDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  _DWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  char v44;

  v30 = a1;
  v5 = sub_1DA66ECC8();
  v27 = *(_QWORD *)(v5 - 8);
  v6 = v27;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DA66EC20();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  sub_1DA66EC2C();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10(v8, a2, v5);
  sub_1DA5A50C8();
  sub_1DA66EF50();
  v26 = v35;
  v25 = v36;
  sub_1DA66EC2C();
  v10(v8, a2, v5);
  sub_1DA66EF50();
  v24 = v33;
  v23 = v34;
  sub_1DA66EC2C();
  v22 = a2;
  v10(v8, a2, v5);
  sub_1DA66EF50();
  v21 = v31;
  v20[1] = v32;
  sub_1DA66EC2C();
  v10(v8, a2, v5);
  sub_1DA66EF50();
  sub_1DA66D210();
  v11 = v37;
  v12 = v38;
  v13 = v39;
  v14 = v40;
  v15 = v41;
  v16 = v42;
  v17 = v43;
  v18 = v44;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v22, v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  *(_QWORD *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v13;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = v15;
  *(_QWORD *)(a3 + 40) = v16;
  *(_QWORD *)(a3 + 48) = v17;
  *(_BYTE *)(a3 + 56) = v18;
  return result;
}

void sub_1DA5A9D08(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DA658780(a1, a2, a3);
}

uint64_t sub_1DA5A9D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v5[64];

  ArtworkTextColors.init(tryDeserializing:using:)(a1, a2, (uint64_t)v5);
  return sub_1DA5A9D54((uint64_t)v5, a3);
}

uint64_t sub_1DA5A9D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026BE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Glyph.Settings.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *Glyph.Settings.font.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void Glyph.Settings.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*Glyph.Settings.font.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.pointSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t Glyph.Settings.pointSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*Glyph.Settings.pointSize.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.weight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Glyph.Settings.weight.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*Glyph.Settings.weight.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t Glyph.Settings.size.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*Glyph.Settings.size.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isCustomSymbol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Glyph.Settings.isCustomSymbol.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*Glyph.Settings.isCustomSymbol.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isMulticolorSymbol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t Glyph.Settings.isMulticolorSymbol.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*Glyph.Settings.isMulticolorSymbol.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.isSPI.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t Glyph.Settings.isSPI.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 58) = result;
  return result;
}

uint64_t (*Glyph.Settings.isSPI.modify())()
{
  return nullsub_1;
}

void *Glyph.Settings.symbolConfigurationOverride.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void Glyph.Settings.symbolConfigurationOverride.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t (*Glyph.Settings.symbolConfigurationOverride.modify())()
{
  return nullsub_1;
}

uint64_t Glyph.Settings.hashValue.getter()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5A9FD0()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

void Glyph.Color.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  id v7;

  v3 = *(void **)v1;
  if (!*(_BYTE *)(v1 + 8))
  {
    sub_1DA6707A4();
    v7 = v3;
    sub_1DA6701B0();
    v5 = v3;
    v6 = 0;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    sub_1DA6707A4();
    v4 = v3;
    sub_1DA6701B0();
    v5 = v3;
    v6 = 1;
LABEL_5:
    sub_1DA5B1DC0(v5, v6);
    return;
  }
  sub_1DA6707A4();
  sub_1DA5B1B4C(a1, (unint64_t)v3);
}

uint64_t Glyph.Color.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;
  id v4;
  _BYTE v6[72];

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1DA670798();
  if (v2)
  {
    sub_1DA6707A4();
    if (v2 == 1)
    {
      v3 = v1;
      sub_1DA6701B0();
      sub_1DA5B1DC0(v1, 1u);
    }
    else
    {
      sub_1DA5B1B4C((uint64_t)v6, (unint64_t)v1);
    }
  }
  else
  {
    sub_1DA6707A4();
    v4 = v1;
    sub_1DA6701B0();
    sub_1DA5B1DC0(v1, 0);
  }
  return sub_1DA6707C8();
}

void sub_1DA5AA1BC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  id v7;

  v3 = *(void **)v1;
  if (!*(_BYTE *)(v1 + 8))
  {
    sub_1DA6707A4();
    v7 = v3;
    sub_1DA6701B0();
    v5 = v3;
    v6 = 0;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v1 + 8) == 1)
  {
    sub_1DA6707A4();
    v4 = v3;
    sub_1DA6701B0();
    v5 = v3;
    v6 = 1;
LABEL_5:
    sub_1DA5B1DC0(v5, v6);
    return;
  }
  sub_1DA6707A4();
  sub_1DA5B1B4C(a1, (unint64_t)v3);
}

uint64_t sub_1DA5AA264()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;
  id v4;
  _BYTE v6[72];

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1DA670798();
  if (v2)
  {
    sub_1DA6707A4();
    if (v2 == 1)
    {
      v3 = v1;
      sub_1DA6701B0();
      sub_1DA5B1DC0(v1, 1u);
    }
    else
    {
      sub_1DA5B1B4C((uint64_t)v6, (unint64_t)v1);
    }
  }
  else
  {
    sub_1DA6707A4();
    v4 = v1;
    sub_1DA6701B0();
    sub_1DA5B1DC0(v1, 0);
  }
  return sub_1DA6707C8();
}

void Glyph.init(name:font:size:isCustomSymbol:isMulticolorSymbol:isSPI:)(void *a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v3 = qword_1EDAE0360;
  v4 = a1;
  v5 = v4;
  if (v3 != -1)
    v4 = (id)swift_once();
  MEMORY[0x1E0C80A78](v4);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  *a2 = v6;
}

void Glyph.init(name:symbolConfiguration:)(void *a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v3 = qword_1EDAE0360;
  v4 = a1;
  v5 = v4;
  if (v3 != -1)
    v4 = (id)swift_once();
  MEMORY[0x1E0C80A78](v4);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  *a2 = v6;
}

id sub_1DA5AA53C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  id v5;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v2 = v1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 == 255)
    return sub_1DA486550();
  v4 = *(void **)a1;
  sub_1DA66BE60();
  sub_1DA5B2774(v4, v3);
  sub_1DA66DC6C();
  swift_release();
  v5 = v25;
  if (v25)
  {
LABEL_3:
    sub_1DA5B2788(v4, v3);
    return v5;
  }
  v18 = *(_QWORD *)(v2 + 16);
  v19 = *(_QWORD *)(v2 + 24);
  v20 = *(_OWORD *)(v2 + 32);
  LOBYTE(v21) = *(_BYTE *)(v2 + 48);
  v22 = *(_OWORD *)(v2 + 56);
  LOWORD(v23) = *(_WORD *)(v2 + 72);
  BYTE2(v23) = *(_BYTE *)(v2 + 74);
  v24 = *(_QWORD *)(v2 + 80);
  v7 = sub_1DA4865A8();
  if (v3)
  {
    if (v3 == 1)
    {
      v8 = (void *)objc_opt_self();
      sub_1DA5B2038(v4, 1u);
      v9 = objc_msgSend(v8, sel_configurationWithHierarchicalColor_, v4, v18, v19, v20, v21, v22, v23, v24);
      v10 = objc_msgSend(v7, sel_configurationByApplyingConfiguration_, v9);
      sub_1DA5B2788(v4, 1u);
    }
    else
    {
      sub_1DA5B2774(v4, 2u);
      sub_1DA47D774(0, (unint64_t *)&qword_1EDAE25C8);
      v9 = v7;
      v11 = (void *)sub_1DA66FA90();
      sub_1DA5B2788(v4, 2u);
      v12 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v11, v18, v19, v20, v21, v22, v23, v24);

      v10 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v12);
    }
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMonochrome, v18, v19, v20, v21, v22, v23, v24);
    v10 = objc_msgSend(v7, sel_configurationByApplyingConfiguration_, v9);
  }

  swift_bridgeObjectRetain();
  v13 = v10;
  v14 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v14, v13);

  if (!v15)
  {
    v5 = sub_1DA486550();

    goto LABEL_3;
  }
  if (!v3)
  {
    sub_1DA5B2038(v4, 0);
    v16 = objc_msgSend(v15, sel_imageWithTintColor_, v4);

    sub_1DA5B2788(v4, 0);
    v15 = v16;
  }
  sub_1DA5B2774(v4, v3);
  sub_1DA66BE60();
  v17 = v15;
  sub_1DA66DC78();
  swift_release();

  sub_1DA5B2788(v4, v3);
  return v17;
}

id Glyph.image(color:)(uint64_t *a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *((_BYTE *)a1 + 8);
  v3 = *a1;
  v4 = v1;
  return sub_1DA5AA53C((uint64_t)&v3);
}

id Glyph.settings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  void *v8;
  __int128 v9;
  id v10;
  id v12;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 24);
  v4 = *(_BYTE *)(*v1 + 48);
  v5 = *(_BYTE *)(*v1 + 72);
  v6 = *(_BYTE *)(*v1 + 73);
  v7 = *(_BYTE *)(*v1 + 74);
  v8 = *(void **)(*v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(*v1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v9 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 56);
  *(_BYTE *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 57) = v6;
  *(_BYTE *)(a1 + 58) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  v12 = (id)v9;
  v10 = v8;
  swift_bridgeObjectRetain();
  return v12;
}

BOOL static Glyph.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void Glyph.hash(into:)()
{
  Glyph.Settings.hash(into:)();
}

uint64_t Glyph.hashValue.getter()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5AAA7C()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

void sub_1DA5AAB00()
{
  Glyph.Settings.hash(into:)();
}

uint64_t sub_1DA5AAB6C()
{
  sub_1DA670798();
  Glyph.Settings.hash(into:)();
  return sub_1DA6707C8();
}

uint64_t Glyph.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  sub_1DA66C9B8();
  if (v4)
  {
    v5 = sub_1DA66CA0C();
    if (qword_1EDAE0360 != -1)
      v5 = swift_once();
    MEMORY[0x1E0C80A78](v5);
    sub_1DA66DC60();
    swift_bridgeObjectRelease();
    v6 = v8;
    result = sub_1DA4E8990(a1);
  }
  else
  {
    result = sub_1DA4E8990(a1);
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1DA5AAD34(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE27B8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.home.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE4088, &qword_1EDAE27B8, a1);
}

uint64_t sub_1DA5AAE48(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2440 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.listenNow.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2450, &qword_1EDAE2440, a1);
}

uint64_t sub_1DA5AAF6C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2458 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.topCharts.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2468, &qword_1EDAE2458, a1);
}

uint64_t sub_1DA5AB090(uint64_t a1)
{
  return sub_1DA5AC2F4(a1, (uint64_t)sub_1DA4B0F6C, &qword_1F026BE08);
}

uint64_t static Glyph.Sidebar.search.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1F02685A0, &qword_1F026BE08, a1);
}

uint64_t sub_1DA5AB0C0(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2428 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.browse.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2438, &qword_1EDAE2428, a1);
}

uint64_t sub_1DA5AB1E8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "square.stack");
  v3[13] = 0;
  v4 = -5120;
  v5 = 0uLL;
  LOBYTE(v6[0]) = 1;
  *(_OWORD *)&v6[1] = xmmword_1DA67F550;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE18D8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.shows.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE18E0, &qword_1EDAE18D8, a1);
}

uint64_t sub_1DA5AB30C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE23F8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.recentlyUpdated.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2408, &qword_1EDAE23F8, a1);
}

uint64_t sub_1DA5AB42C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE10 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.episodes.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685B0, &qword_1F026BE10, a1);
}

uint64_t sub_1DA5AB54C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE1898 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.downloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE18A8, &qword_1EDAE1898, a1);
}

uint64_t sub_1DA5AB66C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE18C0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.downloadedWithBadge.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE18D0, &qword_1EDAE18C0, a1);
}

uint64_t sub_1DA5AB790(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE18 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.station.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685B8, &qword_1F026BE18, a1);
}

uint64_t sub_1DA5AB8B0(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE1900 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.bookmarks.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE1910, &qword_1EDAE1900, a1);
}

uint64_t sub_1DA5AB9CC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE18B0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.latestEpisodes.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE18B8, &qword_1EDAE18B0, a1);
}

void sub_1DA5ABAE4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE2420 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE2410;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDAE23E0 = v3;
}

uint64_t static Glyph.Sidebar.newStation.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE23F0, &qword_1EDAE23E0, a1);
}

uint64_t sub_1DA5ABC5C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE18E8 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.channels.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE18F8, &qword_1EDAE18E8, a1);
}

uint64_t sub_1DA5ABD7C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE27B0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.categories.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE4080, &qword_1EDAE27B0, a1);
}

uint64_t sub_1DA5ABE9C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE4DB0 = v2;
  return result;
}

uint64_t static Glyph.Sidebar.recentlyUnfollowed.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE4DA8, &qword_1EDAE4DB0, a1);
}

id sub_1DA5ABFB4()
{
  id result;

  result = sub_1DA5ABFD0();
  qword_1EDAE2410 = (uint64_t)result;
  return result;
}

id sub_1DA5ABFD0()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC37F8]), sel_initForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v1, sel_scaledValueForValue_, 25.0);
  v3 = v2;

  v4 = objc_msgSend(v0, sel_systemFontOfSize_weight_, v3, *MEMORY[0x1E0DC1430]);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_configurationWithFont_scale_, v4, 3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DA67F560;
  v8 = (void *)objc_opt_self();
  *(_QWORD *)(v7 + 32) = objc_msgSend(v8, sel_tintColor);
  *(_QWORD *)(v7 + 40) = objc_msgSend(v8, sel_clearColor);
  *(_QWORD *)(v7 + 48) = objc_msgSend(v8, sel_tertiarySystemFillColor);
  sub_1DA66FAB4();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDAE25C8);
  v9 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel__configurationWithHierarchicalColors_, v9);

  v11 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v10);
  return v11;
}

uint64_t sub_1DA5AC1D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE1888 = v2;
  return result;
}

uint64_t static Glyph.TabBar.listenNow.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE1890, &qword_1EDAE1888, a1);
}

uint64_t sub_1DA5AC2F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a3 = v5;
  return result;
}

uint64_t sub_1DA5AC408(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDADE790 = v2;
  return result;
}

uint64_t static Glyph.PodcastLockup.contextActionGlyph.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685C0, &qword_1EDADE790, a1);
}

void sub_1DA5AC52C()
{
  qword_1F026BE20 = 0x403C000000000000;
}

double static Glyph.QuickPlay.pointSize.getter()
{
  return sub_1DA5AE3CC(&qword_1F02685C8, (uint64_t)&qword_1F026BE20);
}

uint64_t sub_1DA5AC558(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02685C8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE28 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.contextActionGlyph.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685D0, &qword_1F026BE28, a1);
}

uint64_t sub_1DA5AC6A8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02685C8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE30 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.externalMediaGlyph.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685D8, &qword_1F026BE30, a1);
}

uint64_t sub_1DA5AC800(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02685C8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE38 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.playGlyph.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685E0, &qword_1F026BE38, a1);
}

uint64_t sub_1DA5AC950(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02685C8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE40 = v2;
  return result;
}

uint64_t static Glyph.QuickPlay.pauseGlyph.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685E8, &qword_1F026BE40, a1);
}

uint64_t sub_1DA5ACAA0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  if (a3 == 0.0)
  {
    *a2 = 0;
  }
  else
  {
    if (round(a3) == 0.0)
    {
      if (qword_1EDAE0360 != -1)
        result = swift_once();
      MEMORY[0x1E0C80A78](result);
      sub_1DA66DC60();
      result = swift_bridgeObjectRelease();
      v4 = v9;
    }
    else
    {
      v5 = 3158318;
      v6 = fabs(a3);
      if (v6 <= 10.0
        || (v6 >= 11.0 ? (v7 = v6 > 15.0) : (v7 = 1),
            !v7
         || v6 >= 16.0 && v6 <= 30.0
         || v6 >= 31.0 && v6 <= 45.0
         || v6 >= 46.0 && v6 <= 60.0
         || v6 >= 61.0 && v6 <= 75.0
         || v6 >= 76.0 && v6 <= 90.0))
      {
        v5 = sub_1DA66F988();
      }
      if (qword_1EDAE0360 != -1)
        v5 = swift_once();
      MEMORY[0x1E0C80A78](v5);
      sub_1DA66DC60();
      result = swift_bridgeObjectRelease();
      v4 = v8;
    }
    *a2 = v4;
  }
  return result;
}

void sub_1DA5ACDE4()
{
  qword_1F026BE48 = 0x4034000000000000;
}

double static Glyph.NowPlaying.auxiliaryPointSize.getter()
{
  return sub_1DA5AE3CC(&qword_1F02685F0, (uint64_t)&qword_1F026BE48);
}

uint64_t static Glyph.NowPlaying.play(pointSize:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a2 = v4;
  return result;
}

uint64_t static Glyph.NowPlaying.pause(pointSize:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a2 = v4;
  return result;
}

uint64_t static Glyph.NowPlaying.stop(pointSize:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a2 = v4;
  return result;
}

uint64_t sub_1DA5AD11C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  __int16 v8;
  char v9;
  uint64_t v10;

  if (qword_1F02685F0 != -1)
    a1 = swift_once();
  strcpy(v3, "airplayaudio");
  v3[13] = 0;
  v4 = -5120;
  v5 = 0;
  v6 = qword_1F026BE48;
  LOBYTE(v7[0]) = 0;
  *(_OWORD *)&v7[1] = xmmword_1DA67F590;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE50 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.route.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02685F8, &qword_1F026BE50, a1);
}

uint64_t sub_1DA5AD270(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02685F0 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE58 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.context.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268600, &qword_1F026BE58, a1);
}

uint64_t sub_1DA5AD3BC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  __int16 v8;
  char v9;
  uint64_t v10;

  if (qword_1F02685F0 != -1)
    a1 = swift_once();
  strcpy(v3, "moon.zzz.fill");
  v4 = -4864;
  v5 = 0;
  v6 = qword_1F026BE48;
  LOBYTE(v7[0]) = 0;
  *(_OWORD *)&v7[1] = xmmword_1DA67F590;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE60 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.sleep.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268608, &qword_1F026BE60, a1);
}

uint64_t sub_1DA5AD514(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE68 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.volumeMin.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268610, &qword_1F026BE68, a1);
}

uint64_t sub_1DA5AD63C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "volume.3.fill");
  v4 = -4864;
  v5 = xmmword_1DA67F5A0;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1DA67F550;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE70 = v2;
  return result;
}

uint64_t static Glyph.NowPlaying.volumeMax.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1F0268618, &qword_1F026BE70, a1);
}

uint64_t static Glyph.NowPlaying.jump(interval:pointSize:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  return sub_1DA5ACAA0(4, a1, a2);
}

uint64_t sub_1DA5AD774(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE50F8 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.play.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE5220, &qword_1EDAE50F8, a1);
}

uint64_t sub_1DA5AD898(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE78 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268628, &qword_1F026BE78, a1);
}

uint64_t sub_1DA5AD9BC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE80 = v2;
  return result;
}

uint64_t static Glyph.MiniPlayer.stop.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268630, &qword_1F026BE80, a1);
}

uint64_t static Glyph.MiniPlayer.jump(interval:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  return sub_1DA5ACAA0(4, a1, a2);
}

uint64_t sub_1DA5ADAF0(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE88 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.play.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268638, &qword_1F026BE88, a1);
}

uint64_t sub_1DA5ADC14(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE90 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268640, &qword_1F026BE90, a1);
}

uint64_t sub_1DA5ADD38(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BE98 = v2;
  return result;
}

uint64_t static Glyph.FullWidthMiniPlayer.stop.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268648, &qword_1F026BE98, a1);
}

uint64_t sub_1DA5ADE5C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEA0 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.play.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268650, &qword_1F026BEA0, a1);
}

uint64_t sub_1DA5ADF80(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEA8 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268658, &qword_1F026BEA8, a1);
}

uint64_t sub_1DA5AE0A4(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEB0 = v2;
  return result;
}

uint64_t static Glyph.PlayerBar.stop.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1F0268660, &qword_1F026BEB0, a1);
}

uint64_t static Glyph.PlayerBar.jump(interval:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  return sub_1DA5ACAA0(5, a1, a2);
}

uint64_t static Glyph.PlayerBar.volume(value:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  sub_1DA66DC60();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_1DA5AE3A0()
{
  qword_1EDAE5200 = 0x4030000000000000;
}

double static Glyph.HeaderButtons.headerButtonsPointSize.getter()
{
  return sub_1DA5AE3CC(&qword_1EDAE5238, (uint64_t)&qword_1EDAE5200);
}

double sub_1DA5AE3CC(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

uint64_t sub_1DA5AE404(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDADE8B0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.follow.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE8C0, &qword_1EDADE8B0, a1);
}

uint64_t sub_1DA5AE548(uint64_t a1)
{
  return sub_1DA5AE6DC(a1, (uint64_t)sub_1DA4B0F6C, &qword_1EDADE970);
}

uint64_t static Glyph.HeaderButtons.followed.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1EDADEBE8, &qword_1EDADE970, a1);
}

uint64_t sub_1DA5AE578(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2658 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.download.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1EDAE25F0, &qword_1EDAE2658, a1);
}

uint64_t sub_1DA5AE6C8(uint64_t a1)
{
  return sub_1DA5AE6DC(a1, (uint64_t)sub_1DA4B0F6C, &qword_1EDAE2630);
}

uint64_t sub_1DA5AE6DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a3 = v5;
  return result;
}

uint64_t static Glyph.HeaderButtons.downloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2638, &qword_1EDAE2630, a1);
}

uint64_t sub_1DA5AE834(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2640 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.bookmark.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2650, &qword_1EDAE2640, a1);
}

uint64_t sub_1DA5AE954(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "bookmark.fill");
  v4 = -4864;
  v5 = xmmword_1DA67F640;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1DA67F650;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE2618 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.bookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDAE2628, &qword_1EDAE2618, a1);
}

uint64_t sub_1DA5AEA80(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDAE5240 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.more.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1EDAE5190, &qword_1EDAE5240, a1);
}

uint64_t sub_1DA5AEBCC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1EDADE8A8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.back.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE7D8, &qword_1EDADE8A8, a1);
}

void sub_1DA5AED1C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE808 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE800;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BEB8 = v3;
}

uint64_t static Glyph.HeaderButtons.xmark.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268670, &qword_1F026BEB8, a1);
}

void sub_1DA5AEE94()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE808 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE800;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BEC0 = v3;
}

uint64_t static Glyph.HeaderButtons.xmarkiPadSheet.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268678, &qword_1F026BEC0, a1);
}

void sub_1DA5AF00C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE8F0 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE7E0;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BEC8 = v3;
}

uint64_t static Glyph.HeaderButtons.xmarkMac.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268680, &qword_1F026BEC8, a1);
}

uint64_t sub_1DA5AF184(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "chevron.down");
  v3[13] = 0;
  v4 = -5120;
  v5 = xmmword_1DA67F640;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1DA67F660;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BED0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.chevron.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268688, &qword_1F026BED0, a1);
}

uint64_t sub_1DA5AF2AC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BED8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268690, &qword_1F026BED8, a1);
}

uint64_t sub_1DA5AF3FC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEE0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.favorite.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268698, &qword_1F026BEE0, a1);
}

uint64_t sub_1DA5AF540(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEE8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.favorited.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686A0, &qword_1F026BEE8, a1);
}

uint64_t sub_1DA5AF690(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEF0 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.suggestLess.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686A8, &qword_1F026BEF0, a1);
}

uint64_t sub_1DA5AF7E8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE5238 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BEF8 = v2;
  return result;
}

uint64_t static Glyph.HeaderButtons.suggestedLess.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686B0, &qword_1F026BEF8, a1);
}

void sub_1DA5AF938()
{
  qword_1F027BCB0 = 0x402A000000000000;
}

uint64_t sub_1DA5AF948(uint64_t a1)
{
  return sub_1DA5AFADC(a1, (uint64_t)sub_1DA4B0F6C, &qword_1F026BF00);
}

uint64_t static Glyph.StandaloneHeaderButtons.followed.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686C0, &qword_1F026BF00, a1);
}

uint64_t sub_1DA5AF978(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02686B8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF08 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.download.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686C8, &qword_1F026BF08, a1);
}

uint64_t sub_1DA5AFAC8(uint64_t a1)
{
  return sub_1DA5AFADC(a1, (uint64_t)sub_1DA4B0F6C, &qword_1F026BF10);
}

uint64_t sub_1DA5AFADC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  if (qword_1F02686B8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  *a3 = v5;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.downloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686D0, &qword_1F026BF10, a1);
}

uint64_t sub_1DA5AFC34(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF18 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.bookmark.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686D8, &qword_1F026BF18, a1);
}

uint64_t sub_1DA5AFD54(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "bookmark.fill");
  v4 = -4864;
  v5 = xmmword_1DA67F680;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1DA67F600;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF20 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.bookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686E0, &qword_1F026BF20, a1);
}

uint64_t sub_1DA5AFE80(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1F02686B8 != -1)
    a1 = swift_once();
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF28 = v2;
  return result;
}

uint64_t static Glyph.StandaloneHeaderButtons.more.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686E8, &qword_1F026BF28, a1);
}

uint64_t sub_1DA5AFFCC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF30 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byPublishedDate.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686F0, &qword_1F026BF30, a1);
}

uint64_t sub_1DA5B00EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF38 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byBookmarkDate.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F02686F8, &qword_1F026BF38, a1);
}

uint64_t sub_1DA5B020C(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  char v3[14];
  __int16 v4;
  __int128 v5;
  _QWORD v6[3];
  __int16 v7;
  char v8;
  uint64_t v9;

  strcpy(v3, "square.stack");
  v3[13] = 0;
  v4 = -5120;
  v5 = xmmword_1DA67F690;
  LOBYTE(v6[0]) = 0;
  *(_OWORD *)&v6[1] = xmmword_1DA67F5C0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  if (qword_1EDAE0360 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  result = sub_1DA66DC60();
  qword_1F026BF40 = v2;
  return result;
}

uint64_t static Glyph.SortMenuOptions.byShow.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268700, &qword_1F026BF40, a1);
}

void sub_1DA5B0334(uint64_t a1)
{
  sub_1DA5B13BC(a1, (uint64_t)sub_1DA4B0F6C, qword_1EDADE8C8);
}

uint64_t static Glyph.GenericContextMenuButton.more.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE8D8, qword_1EDADE8C8, a1);
}

void sub_1DA5B0364()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE51E8 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE51D8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF48 = v3;
}

uint64_t static Glyph.PlayControls.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268708, &qword_1F026BF48, a1);
}

void sub_1DA5B04DC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE51E8 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE51D8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF50 = v3;
}

uint64_t static Glyph.PlayControls.externalMedia.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268710, &qword_1F026BF50, a1);
}

void sub_1DA5B0648()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE5268 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE5260;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDADE830 = v3;
}

uint64_t static Glyph.PlayControls.playedCheckmark.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE838, &qword_1EDADE830, a1);
}

void sub_1DA5B07C0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  char v4[14];
  __int16 v5;
  __int128 v6;
  _QWORD v7[3];
  __int16 v8;
  char v9;
  uint64_t v10;

  if (qword_1EDAE5258 != -1)
    swift_once();
  strcpy(v4, "bookmark.fill");
  v5 = -4864;
  v6 = (unint64_t)qword_1EDAE5090;
  LOBYTE(v7[0]) = 1;
  *(_OWORD *)&v7[1] = xmmword_1DA67F590;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE5090;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDADE840 = v3;
}

uint64_t static Glyph.PlayControls.Medium.bookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE850, &qword_1EDADE840, a1);
}

void sub_1DA5B0944()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE5258 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE5090;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDADE868 = v3;
}

uint64_t static Glyph.PlayControls.Medium.notBookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE878, &qword_1EDADE868, a1);
}

void sub_1DA5B0AB0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE5258 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE5090;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDADE858 = v3;
}

uint64_t static Glyph.PlayControls.Medium.downloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE860, &qword_1EDADE858, a1);
}

void sub_1DA5B0C28()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDAE5258 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDAE5090;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1EDADE880 = v3;
}

uint64_t static Glyph.PlayControls.Medium.notDownloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE888, &qword_1EDADE880, a1);
}

void sub_1DA5B0D9C(uint64_t a1)
{
  sub_1DA5B13BC(a1, (uint64_t)sub_1DA4B0F6C, qword_1EDADE890);
}

uint64_t static Glyph.PlayControls.Medium.more.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1EDADE8A0, qword_1EDADE890, a1);
}

void sub_1DA5B0DCC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  char v4[14];
  __int16 v5;
  __int128 v6;
  _QWORD v7[3];
  __int16 v8;
  char v9;
  uint64_t v10;

  if (qword_1EDADE908 != -1)
    swift_once();
  strcpy(v4, "bookmark.fill");
  v5 = -4864;
  v6 = (unint64_t)qword_1EDADE8F8;
  LOBYTE(v7[0]) = 1;
  *(_OWORD *)&v7[1] = xmmword_1DA67F580;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE8F8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF58 = v3;
}

uint64_t static Glyph.PlayControls.Large.bookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268718, &qword_1F026BF58, a1);
}

void sub_1DA5B0F50()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE908 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE8F8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF60 = v3;
}

uint64_t static Glyph.PlayControls.Large.notBookmarked.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268720, &qword_1F026BF60, a1);
}

void sub_1DA5B10BC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE908 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE8F8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF68 = v3;
}

uint64_t static Glyph.PlayControls.Large.downloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268728, &qword_1F026BF68, a1);
}

void sub_1DA5B1234()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE908 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE8F8;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF70 = v3;
}

uint64_t static Glyph.PlayControls.Large.notDownloaded.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268730, &qword_1F026BF70, a1);
}

void sub_1DA5B13A8(uint64_t a1)
{
  sub_1DA5B13BC(a1, (uint64_t)sub_1DA4B0F6C, &qword_1F026BF78);
}

void sub_1DA5B13BC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  if (qword_1EDADE908 != -1)
    swift_once();
  v4 = qword_1EDAE0360;
  v5 = (id)qword_1EDADE8F8;
  v6 = v5;
  if (v4 != -1)
    v5 = (id)swift_once();
  MEMORY[0x1E0C80A78](v5);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  *a3 = v7;
}

uint64_t static Glyph.PlayControls.Large.more.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268738, &qword_1F026BF78, a1);
}

void sub_1DA5B1530()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE8F0 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE7E0;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF80 = v3;
}

uint64_t static Glyph.MacEpisodeCells.play.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268740, &qword_1F026BF80, a1);
}

void sub_1DA5B16A4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE8F0 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE7E0;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF88 = v3;
}

uint64_t static Glyph.MacEpisodeCells.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268748, &qword_1F026BF88, a1);
}

void sub_1DA5B1818()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE8F0 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE7E0;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF90 = v3;
}

uint64_t static Glyph.MacEpisodeCells.document.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(&qword_1F0268750, &qword_1F026BF90, a1);
}

void sub_1DA5B1984()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (qword_1EDADE808 != -1)
    swift_once();
  v0 = qword_1EDAE0360;
  v1 = (id)qword_1EDADE800;
  v2 = v1;
  if (v0 != -1)
    v1 = (id)swift_once();
  MEMORY[0x1E0C80A78](v1);
  sub_1DA66DC60();
  swift_bridgeObjectRelease();

  qword_1F026BF98 = v3;
}

uint64_t static Glyph.EpisodeHero.download.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1DA48BACC(qword_1F0268758, &qword_1F026BF98, a1);
}

uint64_t sub_1DA5B1AFC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

void sub_1DA5B1B4C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DA6705A0();
    swift_bridgeObjectRelease();
    sub_1DA6707A4();
    swift_bridgeObjectRetain();
    v3 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1DA6707A4();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1DF09EE48](i, a2);
      sub_1DA6701B0();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1DA6701B0();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s10PodcastsUI5GlyphV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;
  id v4;
  int v5;
  char v6;

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
      sub_1DA5B2038(v4, 0);
      sub_1DA5B2038(v2, 0);
      v6 = sub_1DA6701A4();
      LOBYTE(v3) = 0;
      LOBYTE(v5) = 0;
      goto LABEL_10;
    }
LABEL_9:
    sub_1DA5B2038(*(id *)a2, *(_BYTE *)(a2 + 8));
    sub_1DA5B2038(v2, v3);
    v6 = 0;
    goto LABEL_10;
  }
  if (v3 != 1)
  {
    if (v5 == 2)
    {
      LOBYTE(v3) = 2;
      sub_1DA5B2038(*(id *)a2, 2u);
      sub_1DA5B2038(v2, 2u);
      v6 = sub_1DA651980((uint64_t)v2, (unint64_t)v4);
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v5 != 1)
    goto LABEL_9;
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
  LOBYTE(v3) = 1;
  sub_1DA5B2038(v4, 1u);
  sub_1DA5B2038(v2, 1u);
  v6 = sub_1DA6701A4();
  LOBYTE(v5) = 1;
LABEL_10:
  sub_1DA5B1DC0(v2, v3);
  sub_1DA5B1DC0(v4, v5);
  return v6 & 1;
}

void sub_1DA5B1DC0(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a2 <= 1u)
  {

  }
}

unint64_t sub_1DA5B1DE8()
{
  unint64_t result;

  result = qword_1EDAE2470;
  if (!qword_1EDAE2470)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for Glyph, &type metadata for Glyph);
    atomic_store(result, (unint64_t *)&qword_1EDAE2470);
  }
  return result;
}

uint64_t assignWithCopy for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v8 = *(void **)(a1 + 64);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = v9;

  return a1;
}

uint64_t assignWithTake for Glyph.Settings(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for Glyph.Settings(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Glyph.Settings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Glyph.Color(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5B2038(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1DA5B2038(id result, unsigned __int8 a2)
{
  if (a2 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for Glyph.Color(uint64_t a1)
{
  sub_1DA5B1DC0(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for Glyph.Color(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5B2038(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1DA5B1DC0(v5, v6);
  return a1;
}

uint64_t assignWithTake for Glyph.Color(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1DA5B1DC0(v4, v5);
  return a1;
}

uint64_t sub_1DA5B20F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1DA5B2100(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Glyph.Sidebar()
{
  return &type metadata for Glyph.Sidebar;
}

ValueMetadata *type metadata accessor for Glyph.TabBar()
{
  return &type metadata for Glyph.TabBar;
}

ValueMetadata *type metadata accessor for Glyph.PodcastLockup()
{
  return &type metadata for Glyph.PodcastLockup;
}

ValueMetadata *type metadata accessor for Glyph.QuickPlay()
{
  return &type metadata for Glyph.QuickPlay;
}

ValueMetadata *type metadata accessor for Glyph.NowPlaying()
{
  return &type metadata for Glyph.NowPlaying;
}

ValueMetadata *type metadata accessor for Glyph.MiniPlayer()
{
  return &type metadata for Glyph.MiniPlayer;
}

ValueMetadata *type metadata accessor for Glyph.FullWidthMiniPlayer()
{
  return &type metadata for Glyph.FullWidthMiniPlayer;
}

ValueMetadata *type metadata accessor for Glyph.PlayerBar()
{
  return &type metadata for Glyph.PlayerBar;
}

ValueMetadata *type metadata accessor for Glyph.HeaderButtons()
{
  return &type metadata for Glyph.HeaderButtons;
}

ValueMetadata *type metadata accessor for Glyph.StandaloneHeaderButtons()
{
  return &type metadata for Glyph.StandaloneHeaderButtons;
}

ValueMetadata *type metadata accessor for Glyph.SortMenuOptions()
{
  return &type metadata for Glyph.SortMenuOptions;
}

ValueMetadata *type metadata accessor for Glyph.GenericContextMenuButton()
{
  return &type metadata for Glyph.GenericContextMenuButton;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls()
{
  return &type metadata for Glyph.PlayControls;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls.Medium()
{
  return &type metadata for Glyph.PlayControls.Medium;
}

ValueMetadata *type metadata accessor for Glyph.PlayControls.Large()
{
  return &type metadata for Glyph.PlayControls.Large;
}

ValueMetadata *type metadata accessor for Glyph.MacEpisodeCells()
{
  return &type metadata for Glyph.MacEpisodeCells;
}

ValueMetadata *type metadata accessor for Glyph.EpisodeHero()
{
  return &type metadata for Glyph.EpisodeHero;
}

unint64_t sub_1DA5B221C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026BFA0;
  if (!qword_1F026BFA0)
  {
    v1 = type metadata accessor for GlyphInternal();
    result = MEMORY[0x1DF0A039C](&unk_1DA67F958, v1);
    atomic_store(result, (unint64_t *)&qword_1F026BFA0);
  }
  return result;
}

uint64_t sub_1DA5B2264(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t result;
  id v13;
  id v14;

  v1 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(void **)(a1 + 64);
  if (v1)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, v1, v2);
  }
  else
  {
    v5 = *(double *)(a1 + 24);
    v6 = *(_QWORD *)(a1 + 40);
    v7 = *(_BYTE *)(a1 + 32);
    v8 = (void *)objc_opt_self();
    if ((v7 & 1) != 0)
      v4 = objc_msgSend(v8, sel_unspecifiedConfiguration);
    else
      v4 = objc_msgSend(v8, sel_configurationWithPointSize_weight_scale_, v6, v2, v5);
  }
  v9 = v4;
  v10 = (void *)sub_1DA66F88C();
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v10, v9);

  if (v11)
  {

    return (uint64_t)v11;
  }
  else
  {
    v13 = v3;
    swift_bridgeObjectRetain();
    v14 = v1;
    sub_1DA670444();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DA66F988();
    swift_bridgeObjectRelease();
    sub_1DA66F988();
    result = sub_1DA670570();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5B2444(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  id v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;

  v2 = (void *)objc_opt_self();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = (void *)sub_1DA66F88C();
  v6 = objc_msgSend(v2, sel_needsLocaleAwareNumbersWorkaroundForSymbol_, v5);

  if (v6)
  {
    v7 = (void *)sub_1DA66F88C();
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_BYTE *)(a1 + 48);
    v12 = *(_QWORD *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 64);
    v13 = *(_BYTE *)(a1 + 72);
    v14 = *(unsigned __int8 *)(a1 + 73);
    v15 = *(_BYTE *)(a1 + 74);
    v16 = *(_QWORD *)(a1 + 80);
    v34 = v3;
    v35 = v4;
    v32 = v16;
    v33 = v8;
    v36 = v8;
    v37 = v9;
    v31 = v9;
    v30 = v10;
    v38 = v10;
    v39 = v12;
    v40 = v11;
    v41 = v13;
    v42 = v14;
    v43 = v15;
    v44 = v16;
    v17 = sub_1DA4865A8();
    v18 = objc_msgSend(v2, sel_systemImageNamedNumberAware_config_, v7, v17);
  }
  else
  {
    v19 = *(_QWORD *)(a1 + 80);
    v32 = v19;
    if (*(_BYTE *)(a1 + 72) == 1)
    {
      v20 = *(_QWORD *)(a1 + 32);
      v21 = *(_QWORD *)(a1 + 40);
      v22 = *(_BYTE *)(a1 + 48);
      v12 = *(_QWORD *)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      v14 = *(unsigned __int8 *)(a1 + 73);
      v15 = *(_BYTE *)(a1 + 74);
      v34 = v3;
      v35 = v4;
      v33 = v20;
      v36 = v20;
      v37 = v21;
      v31 = v21;
      v30 = v22;
      v38 = v22;
      v39 = v12;
      v40 = v11;
      v13 = 1;
      v41 = 1;
      v42 = v14;
      v43 = v15;
      v44 = v19;
      swift_bridgeObjectRetain();
      v17 = sub_1DA4865A8();
      v7 = (void *)sub_1DA66F88C();
      swift_bridgeObjectRelease();
      v18 = objc_msgSend(v2, sel_imageNamed_inBundle_withConfiguration_, v7, 0, v17);
    }
    else
    {
      v23 = *(_QWORD *)(a1 + 32);
      v24 = *(_QWORD *)(a1 + 40);
      v25 = *(_BYTE *)(a1 + 48);
      v12 = *(_QWORD *)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      v14 = *(unsigned __int8 *)(a1 + 73);
      v33 = v23;
      v31 = v24;
      v30 = v25;
      if (*(_BYTE *)(a1 + 74) == 1)
      {
        v34 = v3;
        v35 = v4;
        v36 = v23;
        v37 = v24;
        v38 = v25;
        v39 = v12;
        v40 = v11;
        v41 = 0;
        v42 = v14;
        v15 = 1;
        v43 = 1;
        v44 = v19;
        swift_bridgeObjectRetain();
        v17 = sub_1DA4865A8();
        v7 = (void *)sub_1DA66F88C();
        swift_bridgeObjectRelease();
        v18 = objc_msgSend(v2, sel__systemImageNamed_withConfiguration_, v7, v17);
        v13 = 0;
      }
      else
      {
        v34 = v3;
        v35 = v4;
        v36 = v23;
        v37 = v24;
        v38 = v25;
        v39 = v12;
        v40 = v11;
        v41 = 0;
        v42 = v14;
        v43 = 0;
        v44 = v19;
        swift_bridgeObjectRetain();
        v17 = sub_1DA4865A8();
        v7 = (void *)sub_1DA66F88C();
        swift_bridgeObjectRelease();
        v18 = objc_msgSend(v2, sel_systemImageNamed_withConfiguration_, v7, v17);
        v13 = 0;
        v15 = 0;
      }
    }
  }
  v26 = v18;

  if (v26)
  {
    if (v14)
      v27 = 1;
    else
      v27 = 2;
    v28 = objc_msgSend(v26, sel_imageWithRenderingMode_, v27);

    return (uint64_t)v28;
  }
  else
  {
    v34 = v3;
    v35 = v4;
    v36 = v33;
    v37 = v31;
    v38 = v30;
    v39 = v12;
    v40 = v11;
    v41 = v13;
    v42 = v14;
    v43 = v15;
    v44 = v32;
    return sub_1DA5B2264((uint64_t)&v34);
  }
}

id sub_1DA5B2774(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1DA5B2038(result, a2);
  return result;
}

void sub_1DA5B2788(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_1DA5B1DC0(a1, a2);
}

uint64_t Optional<A>.iconIdentifier.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t Optional<A>.localizedTitle.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t Optional<A>.localizedMessage.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t Optional<A>.actions.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return MEMORY[0x1E0DEE9D8];
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t sub_1DA5B2BDC(uint64_t a1, uint64_t a2)
{
  return Optional<A>.iconIdentifier.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1DA5B2BE4(uint64_t a1, uint64_t a2)
{
  return Optional<A>.localizedTitle.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1DA5B2BEC(uint64_t a1, uint64_t a2)
{
  return Optional<A>.localizedMessage.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1DA5B2BF4(uint64_t a1, uint64_t a2)
{
  return Optional<A>.actions.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t Optional<A>.type.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, v13);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  if ((_DWORD)result == 1)
  {
    *a3 = 9;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v5, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t Optional<A>.clickstreamMetricsFields.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return MEMORY[0x1E0DEE9E0];
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t Optional<A>.dialogRequest()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t sub_1DA5B2F14(uint64_t a1, uint64_t a2)
{
  return Optional<A>.clickstreamMetricsFields.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1DA5B2F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return Optional<A>.type.getter(a1, *(_QWORD *)(a2 - 8), a3);
}

uint64_t sub_1DA5B2F24(uint64_t a1, uint64_t a2)
{
  return Optional<A>.dialogRequest()(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1DA5B2F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for <A> A?, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t static PlayPreviousChapterIntent.kind.getter()
{
  return 0xD000000000000019;
}

void sub_1DA5B2F90(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001DA67FA00;
}

ValueMetadata *type metadata accessor for PlayPreviousChapterIntent()
{
  return &type metadata for PlayPreviousChapterIntent;
}

uint64_t PodcastsIntentDispatcher.init(asPartOf:intentDispatcher:timeout:instrumentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  sub_1DA4813E4(a2, a5);
  v9 = type metadata accessor for PodcastsIntentDispatcher();
  v10 = a5 + *(int *)(v9 + 28);
  v11 = sub_1DA66F208();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
  v13 = a5 + *(int *)(v9 + 32);
  v14 = sub_1DA66F364();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, a4, v14);
  *(_QWORD *)(a5 + 48) = a1;
  sub_1DA66F1FC();
  swift_retain_n();
  sub_1DA66EE3C();
  sub_1DA66F1E4();
  swift_release();
  v16 = sub_1DA66F1D8();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a4, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  result = __swift_destroy_boxed_opaque_existential_0(a2);
  *(_QWORD *)(a5 + 40) = v16;
  return result;
}

uint64_t type metadata accessor for PodcastsIntentDispatcher()
{
  uint64_t result;

  result = qword_1EDADF7C8;
  if (!qword_1EDADF7C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PodcastsIntentDispatcher.init(asPartOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v16[40];

  v4 = sub_1DA66F364();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1DA66F208();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADFF80);
  sub_1DA66EDDC();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0D406C8], v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D40B60], v4);
  sub_1DA4813E4((uint64_t)v16, a2);
  v12 = type metadata accessor for PodcastsIntentDispatcher();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(a2 + *(int *)(v12 + 28), v11, v8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 16))(a2 + *(int *)(v12 + 32), v7, v4);
  *(_QWORD *)(a2 + 48) = a1;
  sub_1DA66F1FC();
  swift_retain_n();
  sub_1DA66EE3C();
  sub_1DA66F1E4();
  swift_release();
  v13 = sub_1DA66F1D8();
  swift_release();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  *(_QWORD *)(a2 + 40) = v13;
  return result;
}

uint64_t PodcastsIntentDispatcher.dispatch<A>(intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5B333C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[6] + 40);
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1DA55E1DC;
  return sub_1DA5B339C(v0[2], v0[3], v1, v0[4], v0[5]);
}

uint64_t sub_1DA5B339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[31] = a5;
  v6[32] = v5;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  v7 = sub_1DA66DDE0();
  v6[33] = v7;
  v6[34] = *(_QWORD *)(v7 - 8);
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v8 = sub_1DA66DD74();
  v6[37] = v8;
  v6[38] = *(_QWORD *)(v8 - 8);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  v9 = sub_1DA66DDD4();
  v6[43] = v9;
  v6[44] = *(_QWORD *)(v9 - 8);
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  v10 = sub_1DA66DEF4();
  v6[48] = v10;
  v6[49] = *(_QWORD *)(v10 - 8);
  v6[50] = swift_task_alloc();
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5B34EC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_signpost_type_t v10;
  void (*v11)(void);
  uint8_t *v12;
  uint64_t v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1DA66DE64();
  v1 = sub_1DA66DEDC();
  v2 = sub_1DA66FD9C();
  if (os_log_type_enabled(v1, v2))
  {
    v28 = v0[49];
    v29 = v0[48];
    v31 = v0[52];
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v33 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1DA66EC98();
    v0[26] = sub_1DA49AD00(v0[7], v0[8], &v33);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v1, v2, "Attempting to route intent: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v4, -1, -1);
    MEMORY[0x1DF0A0474](v3, -1, -1);

    v5 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v5(v31, v29);
  }
  else
  {
    v6 = v0[52];
    v7 = v0[48];
    v8 = v0[49];

    v5 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v5(v6, v7);
  }
  v0[53] = v5;
  sub_1DA66DD8C();
  sub_1DA66DD68();
  v9 = sub_1DA66DDB0();
  v10 = sub_1DA66FF58();
  if ((sub_1DA670240() & 1) != 0)
  {
    v27 = v0[41];
    v30 = v0[37];
    v32 = v0[38];
    v11 = *(void (**)(void))(v32 + 16);
    v11();
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v33 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_1DA66EC98();
    v0[24] = sub_1DA49AD00(v0[11], v0[12], &v33);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    v14 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v9, v10, v14, "IntentDispatch", "[kind=%{name=kind}s]", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v13, -1, -1);
    MEMORY[0x1DF0A0474](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v27, v30);
  }
  else
  {
    v15 = v0[38];

    v11 = *(void (**)(void))(v15 + 16);
  }
  v0[54] = v11;
  v16 = v0[47];
  v17 = v0[43];
  v18 = v0[44];
  v19 = v0[42];
  v20 = v0[37];
  v21 = v0[38];
  v22 = (_QWORD *)v0[32];
  ((void (*)(_QWORD, uint64_t, uint64_t))v11)(v0[41], v19, v20);
  sub_1DA66DE10();
  swift_allocObject();
  v0[55] = sub_1DA66DE04();
  v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v0[56] = v23;
  v23(v19, v20);
  v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v0[57] = v24;
  v24(v16, v17);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v25 = (_QWORD *)swift_task_alloc();
  v0[58] = v25;
  *v25 = v0;
  v25[1] = sub_1DA5B38CC;
  return sub_1DA66EE90();
}

uint64_t sub_1DA5B38CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5B3930()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_signpost_id_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  char *format;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;

  sub_1DA66DD8C();
  v1 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v2 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 288);
    v5 = *(_QWORD *)(v0 + 264);
    v4 = *(_QWORD *)(v0 + 272);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x1E0DF2190])
    {
      v6 = 0;
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
      v7 = "[kind=%{name=kind}s], [outcome=%{name=outcome}s])";
      v6 = 2;
    }
    format = (char *)v7;
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    v32 = *(_QWORD *)(v0 + 368);
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v31 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 328);
    v29 = *(_QWORD *)(v0 + 320);
    v15 = *(_QWORD *)(v0 + 296);
    (*(void (**)(uint64_t))(v0 + 432))(v14);
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v36 = v17;
    *(_BYTE *)v16 = v6;
    *(_BYTE *)(v16 + 1) = v6;
    *(_WORD *)(v16 + 2) = 2080;
    sub_1DA66EC98();
    *(_QWORD *)(v0 + 168) = sub_1DA49AD00(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), &v36);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    *(_QWORD *)(v0 + 176) = sub_1DA49AD00(0x53534543435553, 0xE700000000000000, &v36);
    sub_1DA6702C4();
    v18 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v1, v2, v18, "IntentDispatch", format, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v17, -1, -1);
    MEMORY[0x1DF0A0474](v16, -1, -1);

    v30(v29, v15);
    v35(v32, v31);
    v30(v14, v15);
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    v10 = *(_QWORD *)(v0 + 368);
    v11 = *(_QWORD *)(v0 + 344);
    v12 = *(_QWORD *)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 296);

    v9(v12, v13);
    v8(v10, v11);
  }
  sub_1DA66DE64();
  v19 = sub_1DA66DEDC();
  v20 = sub_1DA66FD9C();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v23 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 384);
  if (v21)
  {
    v34 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v33 = *(_QWORD *)(v0 + 384);
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v36 = v26;
    *(_DWORD *)v25 = 136315138;
    sub_1DA66EC98();
    *(_QWORD *)(v0 + 152) = sub_1DA49AD00(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), &v36);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DA478000, v19, v20, "Intent %s succeeded.", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v26, -1, -1);
    MEMORY[0x1DF0A0474](v25, -1, -1);

    swift_release();
    v34(v23, v33);
  }
  else
  {
    swift_release();

    v22(v23, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5B3DE8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_signpost_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  const char *v20;
  _QWORD *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (**v25)(_QWORD, _QWORD);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  os_signpost_id_t v29;
  uint64_t v30;
  char *format;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43[2];

  v1 = *(void **)(v0 + 472);
  sub_1DA66DE64();
  v2 = v1;
  v3 = v1;
  v4 = sub_1DA66DEDC();
  v5 = sub_1DA66FDA8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 472);
    v41 = *(_QWORD *)(v0 + 400);
    v42 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v40 = *(_QWORD *)(v0 + 384);
    v7 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v43[0] = v38;
    *(_DWORD *)v7 = 136315394;
    sub_1DA66EC98();
    *(_QWORD *)(v0 + 184) = sub_1DA49AD00(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v43);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_getErrorValue();
    v8 = sub_1DA670750();
    *(_QWORD *)(v0 + 136) = sub_1DA49AD00(v8, v9, v43);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DA478000, v4, v5, "Failed to route intent: %s: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v38, -1, -1);
    MEMORY[0x1DF0A0474](v7, -1, -1);

    v42(v41, v40);
  }
  else
  {
    v10 = *(void **)(v0 + 472);
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v12 = *(_QWORD *)(v0 + 400);
    v13 = *(_QWORD *)(v0 + 384);

    v11(v12, v13);
  }
  sub_1DA66DD8C();
  v14 = sub_1DA66DDB0();
  sub_1DA66DDF8();
  v15 = sub_1DA66FF4C();
  if ((sub_1DA670240() & 1) != 0)
  {
    v16 = *(_QWORD *)(v0 + 272);
    v17 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 264);
    sub_1DA66BE60();
    sub_1DA66DE1C();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v17, v18) == *MEMORY[0x1E0DF2190])
    {
      v19 = 0;
      v20 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
      v20 = "[kind=%{name=kind}s], [outcome=%{name=outcome}s])";
      v19 = 2;
    }
    format = (char *)v20;
    v37 = *(_QWORD *)(v0 + 360);
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    v35 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v36 = *(_QWORD *)(v0 + 344);
    v34 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 296);
    (*(void (**)(_QWORD))(v0 + 432))(*(_QWORD *)(v0 + 328));
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v43[0] = v28;
    *(_BYTE *)v27 = v19;
    *(_BYTE *)(v27 + 1) = v19;
    *(_WORD *)(v27 + 2) = 2080;
    sub_1DA66EC98();
    *(_QWORD *)(v0 + 144) = sub_1DA49AD00(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v43);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    *(_QWORD *)(v0 + 200) = sub_1DA49AD00(0x4552554C494146, 0xE700000000000000, v43);
    sub_1DA6702C4();
    v29 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v14, v15, v29, "IntentDispatch", format, (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v28, -1, -1);
    v30 = v27;
    v21 = (_QWORD *)(v0 + 328);
    MEMORY[0x1DF0A0474](v30, -1, -1);

    v35(v34, v33);
    v39(v37, v36);
    v26 = (_QWORD *)(v0 + 296);
    v25 = (void (**)(_QWORD, _QWORD))(v0 + 448);
  }
  else
  {
    v21 = (_QWORD *)(v0 + 360);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    v23 = *(_QWORD *)(v0 + 312);
    v24 = *(_QWORD *)(v0 + 296);

    v22(v23, v24);
    v25 = (void (**)(_QWORD, _QWORD))(v0 + 456);
    v26 = (_QWORD *)(v0 + 344);
  }
  (*v25)(*v21, *v26);
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PodcastsIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA5B4398()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1DA66F1FC();
  sub_1DA66BE60();
  sub_1DA66EE3C();
  type metadata accessor for PodcastsIntentDispatcher();
  sub_1DA66F1E4();
  swift_release();
  v1 = sub_1DA66F1D8();
  v0[8] = v1;
  swift_release();
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1DA54A3E4;
  return sub_1DA5B339C(v0[2], v0[3], v1, v0[5], v0[6]);
}

uint64_t sub_1DA5B4484()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)v0[7];
  sub_1DA66F1FC();
  sub_1DA66BE60();
  sub_1DA66EE3C();
  type metadata accessor for PodcastsIntentDispatcher();
  sub_1DA66F1E4();
  swift_release();
  v0[8] = sub_1DA66F1D8();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_1DA54A3E4;
  return sub_1DA66EE90();
}

uint64_t sub_1DA5B4570()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1DA4AD77C;
  return sub_1DA66EE9C();
}

uint64_t sub_1DA5B461C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;

  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1DA4A9520;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  v12[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1DA5B46A4()
{
  return sub_1DA66EEA8();
}

_QWORD *initializeBufferWithCopyOfBuffer for PodcastsIntentDispatcher(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1DA66F208();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_1DA66BE60();
    sub_1DA66BE60();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 32);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1DA66F364();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_0(a1);
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1DA66F208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_1DA66F364();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DA66F208();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_1DA66BE60();
  sub_1DA66BE60();
  v12(v9, v10, v11);
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1DA66F364();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t *assignWithCopy for PodcastsIntentDispatcher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  sub_1DA66BE60();
  swift_release();
  a1[6] = a2[6];
  sub_1DA66BE60();
  swift_release();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66F208();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1DA66F364();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DA66F208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1DA66F364();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PodcastsIntentDispatcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1DA66F208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1DA66F364();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for PodcastsIntentDispatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5B4B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1DA66F208();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_1DA66F364();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PodcastsIntentDispatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5B4BF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_1DA66F208();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_1DA66F364();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1DA5B4C94()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DA66F208();
  if (v1 <= 0x3F)
  {
    result = sub_1DA66F364();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t static MAPIIntentFetchError.== infix(_:_:)()
{
  return 1;
}

uint64_t MAPIIntentFetchError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t MAPIIntentFetchError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA5B4DA4()
{
  unint64_t result;

  result = qword_1F026BFE0;
  if (!qword_1F026BFE0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for MAPIIntentFetchError, &type metadata for MAPIIntentFetchError);
    atomic_store(result, (unint64_t *)&qword_1F026BFE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MAPIIntentFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA5B4E28 + 4 * byte_1DA67FB60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5B4E48 + 4 * byte_1DA67FB65[v4]))();
}

_BYTE *sub_1DA5B4E28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5B4E48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5B4E50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5B4E58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5B4E60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5B4E68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MAPIIntentFetchError()
{
  return &type metadata for MAPIIntentFetchError;
}

uint64_t sub_1DA5B4E84()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA670684();
  qword_1F026BFE8 = result;
  unk_1F026BFF0 = v1;
  return result;
}

uint64_t sub_1DA5B4ED0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1DA670684();
  qword_1F026BFF8 = result;
  unk_1F026C000 = v1;
  return result;
}

uint64_t WritingDirectionsCounts.natural.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
}

uint64_t WritingDirectionsCounts.leftToRight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
}

uint64_t WritingDirectionsCounts.rightToLeft.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
}

uint64_t WritingDirectionsCounts.total.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_total);
}

uint64_t WritingDirectionsCounts.significantValues.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_significantValues);
}

uint64_t WritingDirectionsCounts.hasStronglyTypedCounts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts);
}

uint64_t WritingDirectionsCounts.isRTLEnough.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough);
}

uint64_t WritingDirectionsCounts.isRTLMinimal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AMPWritingDirectionsCounts_isRTLMinimal);
}

char *WritingDirectionsCounts.__allocating_init(natural:leftToRight:rightToLeft:)(char *a1, uint64_t a2, unint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(a1, a2, a3);
}

char *WritingDirectionsCounts.__allocating_init(summing:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  void **v5;
  void *v6;
  void *v7;
  char *result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = 0;
  v3 = 0;
  v4 = 0;
  if (!v1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v13 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v3, v2);
  }
  v5 = (void **)(a1 + 32);
  while (1)
  {
    v7 = *v5++;
    v6 = v7;
    if (!v7)
      goto LABEL_3;
    result = (char *)objc_msgSend(v6, sel_writingDirectionsQuantities);
    v9 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
    v10 = __CFADD__(v4, v9);
    v4 += v9;
    if (v10)
      break;
    v11 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
    v10 = __CFADD__(v3, v11);
    v3 += v11;
    if (v10)
      goto LABEL_12;
    v12 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

    v10 = __CFADD__(v2, v12);
    v2 += v12;
    if (v10)
    {
      __break(1u);
      goto LABEL_10;
    }
LABEL_3:
    if (!--v1)
      goto LABEL_10;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void WritingDirectionsCounts.__allocating_init(counting:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  void **v5;
  BOOL v6;
  void *v7;
  void *v8;
  _BYTE *v9;
  int v10;
  id v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
LABEL_14:
    v2 = 0;
    v3 = 0;
    v4 = 0;
LABEL_15:
    swift_bridgeObjectRelease();
    v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v3, v2);
    return;
  }
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = (void **)(a1 + 32);
  while (1)
  {
    v8 = *v5++;
    v7 = v8;
    if (!v8)
      goto LABEL_4;
    v9 = objc_msgSend(v7, sel_writingDirectionsQuantities);
    if ((v9[OBJC_IVAR___AMPWritingDirectionsCounts_isRTLEnough] & 1) != 0)
      break;
    v10 = v9[OBJC_IVAR___AMPWritingDirectionsCounts_hasStronglyTypedCounts];

    if (v10 == 1)
    {
      v6 = __CFADD__(v3++, 1);
      if (v6)
        goto LABEL_17;
    }
    else
    {
      v6 = __CFADD__(v4++, 1);
      if (v6)
      {
        __break(1u);
        goto LABEL_14;
      }
    }
LABEL_4:
    if (!--v1)
      goto LABEL_15;
  }

  v6 = __CFADD__(v2++, 1);
  if (!v6)
    goto LABEL_4;
  __break(1u);
LABEL_17:
  __break(1u);
}

BOOL sub_1DA5B528C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1DA4F2340(a1, (uint64_t)v6);
  if (v7)
  {
    type metadata accessor for WritingDirectionsCounts();
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural) == *(_QWORD *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_natural]
        && *(_QWORD *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight) == *(_QWORD *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight])
      {
        v2 = *(_QWORD *)(v1 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
        v3 = *(_QWORD *)&v5[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

        return v2 == v3;
      }

    }
  }
  else
  {
    sub_1DA480E84((uint64_t)v6);
  }
  return 0;
}

BOOL == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural) == *(_QWORD *)(a2
                                                                                       + OBJC_IVAR___AMPWritingDirectionsCounts_natural)
      && *(_QWORD *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight) == *(_QWORD *)(a2
                                                                                           + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight)
      && *(_QWORD *)(a1 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft) == *(_QWORD *)(a2
                                                                                           + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
}

char *+ infix(_:_:)(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v2 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
  v3 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  v4 = (char *)(v2 + v3);
  if (__CFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  v6 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  v7 = v5 + v6;
  if (__CFADD__(v5, v6))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];
  v9 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  v10 = v8 + v9;
  if (!__CFADD__(v8, v9))
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v7, v10);
  }
LABEL_7:
  __break(1u);
  return result;
}

char *sub_1DA5B54FC()
{
  id v0;
  char *result;

  v0 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
  result = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(0, 0, 0);
  qword_1EDADE788 = (uint64_t)result;
  return result;
}

id static WritingDirectionsCounts.zero.getter()
{
  if (qword_1F0268778 != -1)
    swift_once();
  return (id)qword_1EDADE788;
}

uint64_t sub_1DA5B560C()
{
  uint64_t v0;
  _QWORD v2[2];

  strcpy((char *)v2, "Natural: ");
  sub_1DA670684();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  strcpy((char *)v2, "{ Counts: { ");
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA670444();
  swift_bridgeObjectRelease();
  sub_1DA670684();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = v2[0];
  sub_1DA670444();
  swift_bridgeObjectRelease();
  sub_1DA670684();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA670444();
  swift_bridgeObjectRelease();
  v2[0] = 0x45204C5452207349;
  v2[1] = 0xEF28206867756F6ELL;
  if (qword_1F0268768 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA670444();
  swift_bridgeObjectRelease();
  v2[0] = 0xD000000000000010;
  v2[1] = 0x80000001DA68F940;
  if (qword_1F0268770 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  sub_1DA66F988();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DA66F988();
  swift_bridgeObjectRelease();
  return v0;
}

id WritingDirectionsCounts.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WritingDirectionsCounts.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WritingDirectionsCounts.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WritingDirectionsCounts();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void += infix(_:_:)(void **a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;

  v2 = (char *)*a1;
  v3 = *(_QWORD *)((char *)*a1 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  v4 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  v5 = (char *)(v3 + v4);
  if (__CFADD__(v3, v4))
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)&v2[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  v8 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  v9 = v7 + v8;
  if (__CFADD__(v7, v8))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = *(_QWORD *)&v2[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];

  v12 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  v13 = v11 + v12;
  if (!__CFADD__(v11, v12))
  {
    v14 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    *a1 = WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v5, v9, v13);
    return;
  }
LABEL_7:
  __break(1u);
}

char *sub_1DA5B5C58(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;

  v2 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_natural];
  v3 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_natural);
  v4 = (char *)(v2 + v3);
  if (__CFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight];
  v6 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_leftToRight);
  v7 = v5 + v6;
  if (__CFADD__(v5, v6))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)&result[OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft];
  v9 = *(_QWORD *)(a2 + OBJC_IVAR___AMPWritingDirectionsCounts_rightToLeft);
  v10 = v8 + v9;
  if (!__CFADD__(v8, v9))
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for WritingDirectionsCounts());
    return WritingDirectionsCounts.init(natural:leftToRight:rightToLeft:)(v4, v7, v10);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t method lookup function for WritingDirectionsCounts()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WritingDirectionsCounts.__allocating_init(natural:leftToRight:rightToLeft:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of static WritingDirectionsCounts.add(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t static ActionMetrics.flowAction(targetID:targetType:actionContext:actionResult:actionURL:fields:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;

  v13 = sub_1DA66EF2C();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D50);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66ED04() - 8) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DA678510;
  v17 = sub_1DA66D2B8();
  v19 = v18;
  if (qword_1EDAE48D8 != -1)
    swift_once();
  v20 = sub_1DA66ECF8();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EDAE48B8);
  *((_QWORD *)&v23 + 1) = a8;
  *(_QWORD *)&v23 = a7;
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(a1, a2, a3, a4, v17, v19, a5, a6, v16 + v15, v23, a9, a10, v21);
  swift_bridgeObjectRelease();
  sub_1DA66EF20();
  return sub_1DA66ED58();
}

uint64_t static ActionMetrics.play(adamID:targetType:fields:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = sub_1DA66EF2C();
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DA66DCD8() & 1) != 0)
    return sub_1DA66ED4C();
  v27 = a2;
  v28 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D50);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(sub_1DA66ED04() - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DA678510;
  v16 = v15 + v14;
  v29 = a1;
  sub_1DA4F726C();
  v17 = sub_1DA670354();
  v19 = v18;
  v20 = sub_1DA66D2AC();
  v22 = v21;
  v23 = sub_1DA66C358();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
  if (qword_1EDAE48D8 != -1)
    swift_once();
  v24 = sub_1DA66ECF8();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EDAE48B8);
  static MetricsData.clickData(targetID:targetType:actionType:actionContext:actionResult:actionURL:fields:configuration:)(v17, v19, v27, v28, v20, v22, 0, 0, v16, 0, (uint64_t)v11, a4, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DA4ED9D4((uint64_t)v11);
  sub_1DA66EF20();
  return sub_1DA66ED58();
}

uint64_t static ActionMetrics.play(adamID:targetType:fields:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a2 & 1) != 0)
    return sub_1DA66ED4C();
  else
    return static ActionMetrics.play(adamID:targetType:fields:)(a1, a3, a4, a5);
}

uint64_t sub_1DA5B60DC()
{
  return sub_1DA5B7D28(0xD000000000000014, 0x80000001DA68CF60);
}

id sub_1DA5B6110()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD v19[10];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D2F4();
  EpisodeLimitTip.localizedMessage.getter();
  v4 = v3;
  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v6 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_, v5, v6);

  v8 = (void *)sub_1DA66F88C();
  objc_msgSend(v7, sel_setIdentifier_, v8);

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnDesktop))
    v9 = 3;
  else
    v9 = 4;
  objc_msgSend(v7, sel_setStyle_, v9);
  sub_1DA5B7D28(0xD000000000000014, 0x80000001DA68CF60);
  sub_1DA66F784();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setClickstreamMetricsEvent_, v10);

  URL.init(systemImage:)((uint64_t)v2);
  v11 = sub_1DA66C358();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v2, 1, v11) != 1)
  {
    v13 = (void *)sub_1DA66C2C8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v11);
  }
  objc_msgSend(v7, sel_setIconURL_, v13);

  v14 = EpisodeLimitTip.actions.getter();
  v15 = *((_QWORD *)v14 + 2);
  if (v15)
  {
    v16 = (uint64_t)(v14 + 2);
    do
    {
      sub_1DA5B80B0(v16, (uint64_t)v19);
      v17 = sub_1DA5B6F8C(v19);
      objc_msgSend(v7, sel_addButtonAction_, v17);

      sub_1DA5B80EC((uint64_t)v19);
      v16 += 80;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  return v7;
}

id sub_1DA5B643C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v21[11];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[10] = a1;
  sub_1DA66D2F4();
  sub_1DA66D2F4();
  v5 = objc_allocWithZone(MEMORY[0x1E0CFDA68]);
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithTitle_message_, v6, v7);

  v9 = (void *)sub_1DA66F88C();
  objc_msgSend(v8, sel_setIdentifier_, v9);

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnDesktop))
    v10 = 3;
  else
    v10 = 4;
  objc_msgSend(v8, sel_setStyle_, v10);
  sub_1DA5B8148();
  sub_1DA66F784();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setClickstreamMetricsEvent_, v11);

  URL.init(systemImage:)((uint64_t)v4);
  v12 = sub_1DA66C358();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) != 1)
  {
    v14 = (void *)sub_1DA66C2C8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  }
  objc_msgSend(v8, sel_setIconURL_, v14);

  v15 = RestorePurgedEpisodesTip.actions.getter();
  v16 = *((_QWORD *)v15 + 2);
  if (v16)
  {
    v17 = (uint64_t)(v15 + 2);
    do
    {
      sub_1DA5B80B0(v17, (uint64_t)v21);
      v18 = sub_1DA5B8264(v21);
      objc_msgSend(v8, sel_addButtonAction_, v18);

      sub_1DA5B80EC((uint64_t)v21);
      v17 += 80;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  return v8;
}

id sub_1DA5B676C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD v21[10];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA66D2F4();
  RemoveAbandonedDownloadsTip.localizedMessage.getter();
  v6 = v5;
  v7 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  if (v6)
  {
    v8 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_, v7, v8);

  v10 = (void *)sub_1DA66F88C();
  objc_msgSend(v9, sel_setIdentifier_, v10);

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnDesktop))
    v11 = 3;
  else
    v11 = 4;
  objc_msgSend(v9, sel_setStyle_, v11);
  sub_1DA5B7D28(0xD000000000000029, 0x80000001DA68CF10);
  sub_1DA66F784();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setClickstreamMetricsEvent_, v12);

  URL.init(systemImage:)((uint64_t)v4);
  v13 = sub_1DA66C358();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) != 1)
  {
    v15 = (void *)sub_1DA66C2C8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  }
  objc_msgSend(v9, sel_setIconURL_, v15);

  v16 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RemoveAbandonedDownloadsTip() + 24));
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DA5B80B0(v18, (uint64_t)v21);
      v19 = sub_1DA5B73F4(v21);
      objc_msgSend(v9, sel_addButtonAction_, v19);

      sub_1DA5B80EC((uint64_t)v21);
      v18 += 80;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  return v9;
}

void AMSDialogTip.dialogRequest()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD v13[10];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  v5 = MEMORY[0x1E0C80A78](v4);
  v12[1] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 8);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 16))(a1, v7, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(a1, v7);
  v9 = v8;
  v10 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  if (v9)
  {
    v11 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDA68]), sel_initWithTitle_message_, v10, v11);

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 24))(v13, a1, a2);
  __asm { BR              X10 }
}

void *sub_1DA5B6BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v5 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setIdentifier_, v5);

  if (objc_msgSend((id)objc_opt_self(), sel_isRunningOnDesktop))
    v6 = 3;
  else
    v6 = 4;
  objc_msgSend(v3, sel_setStyle_, v6);
  (*(void (**)(uint64_t, uint64_t))(v0 + 16))(v1, v0);
  sub_1DA66F784();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setClickstreamMetricsEvent_, v7);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v8 = *(_QWORD *)(v4 - 168);
  URL.init(systemImage:)(v8);
  v9 = sub_1DA66C358();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v11 = (void *)sub_1DA66C2C8();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  objc_msgSend(v3, sel_setIconURL_, v11);

  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = v12 + 32;
    do
    {
      sub_1DA5B80B0(v14, v4 - 160);
      v15 = sub_1DA5B785C((_QWORD *)(v4 - 160), v1, v0);
      objc_msgSend(v3, sel_addButtonAction_, v15);

      sub_1DA5B80EC(v4 - 160);
      v14 += 80;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1DA5B6EE0()
{
  JUMPOUT(0x1DA5B6CB4);
}

id sub_1DA5B6F00()
{
  uint64_t *v0;

  return sub_1DA5B643C(*v0);
}

uint64_t sub_1DA5B6F08()
{
  return sub_1DA5B7D28(0xD000000000000029, 0x80000001DA68CF10);
}

uint64_t sub_1DA5B6F40()
{
  swift_bridgeObjectRetain();
  return sub_1DA6703F0();
}

id sub_1DA5B6F8C(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  void *v12;
  uint64_t v13;
  void *v14;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  char v21[16];

  v2 = a1[9];
  if (a1[6])
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, v3, v2);

  if (a1[8])
  {
    v20 = 0;
    v5 = 0x80000001DA689D90;
    v16 = 0xD000000000000014;
    strcpy((char *)v19, "navigatebubbleTi");
    BYTE1(v19[2]) = 0;
    WORD1(v19[2]) = 0;
    HIDWORD(v19[2]) = -536870912;
    v17 = 0xE900000000000070;
    v18 = 0xE800000000000000;
  }
  else
  {
    v16 = 0x65736F6C63;
    v5 = 0xE500000000000000;
    strcpy((char *)v19, "dismiss");
    v19[1] = 0x6E6F74747562;
    v17 = 0xE600000000000000;
    v18 = 0xE700000000000000;
    v20 = 0x6954656C62627562;
    v19[2] = 0xE900000000000070;
  }
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setIdentifier_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  strcpy(v21, "recommendation");
  v21[15] = -18;
  v8 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v9 = a1[3];
  v10 = __swift_project_boxed_opaque_existential_1(a1, v9);
  *(_QWORD *)(inited + 96) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_1, v10, v9);
  sub_1DA4950BC(inited);
  v12 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setParameters_, v12);

  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DA67C310;
  strcpy(v21, "eventType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 96) = v8;
  *(_QWORD *)(v13 + 72) = 0x6B63696C63;
  *(_QWORD *)(v13 + 80) = 0xE500000000000000;
  strcpy(v21, "targetId");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 168) = v8;
  *(_QWORD *)(v13 + 144) = v16;
  *(_QWORD *)(v13 + 152) = v5;
  strcpy(v21, "actionType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 240) = v8;
  *(_QWORD *)(v13 + 216) = v19[0];
  *(_QWORD *)(v13 + 224) = v18;
  strcpy(v21, "targetType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 312) = v8;
  *(_QWORD *)(v13 + 288) = v19[1];
  *(_QWORD *)(v13 + 296) = v17;
  strcpy(v21, "actionContext");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 384) = v8;
  *(_QWORD *)(v13 + 360) = v20;
  *(_QWORD *)(v13 + 368) = v19[2];
  sub_1DA4950BC(v13);
  v14 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setClickstreamMetricsEvent_, v14);

  return v4;
}

id sub_1DA5B73F4(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  void *v12;
  uint64_t v13;
  void *v14;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  char v21[16];

  v2 = a1[9];
  if (a1[6])
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, v3, v2);

  if (a1[8])
  {
    v20 = 0;
    v5 = 0x80000001DA689DB0;
    v16 = 0xD000000000000029;
    strcpy((char *)v19, "navigatebubbleTi");
    BYTE1(v19[2]) = 0;
    WORD1(v19[2]) = 0;
    HIDWORD(v19[2]) = -536870912;
    v17 = 0xE900000000000070;
    v18 = 0xE800000000000000;
  }
  else
  {
    v16 = 0x65736F6C63;
    v5 = 0xE500000000000000;
    strcpy((char *)v19, "dismiss");
    v19[1] = 0x6E6F74747562;
    v17 = 0xE600000000000000;
    v18 = 0xE700000000000000;
    v20 = 0x6954656C62627562;
    v19[2] = 0xE900000000000070;
  }
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setIdentifier_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  strcpy(v21, "recommendation");
  v21[15] = -18;
  v8 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v9 = a1[3];
  v10 = __swift_project_boxed_opaque_existential_1(a1, v9);
  *(_QWORD *)(inited + 96) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_1, v10, v9);
  sub_1DA4950BC(inited);
  v12 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setParameters_, v12);

  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DA67C310;
  strcpy(v21, "eventType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 96) = v8;
  *(_QWORD *)(v13 + 72) = 0x6B63696C63;
  *(_QWORD *)(v13 + 80) = 0xE500000000000000;
  strcpy(v21, "targetId");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 168) = v8;
  *(_QWORD *)(v13 + 144) = v16;
  *(_QWORD *)(v13 + 152) = v5;
  strcpy(v21, "actionType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 240) = v8;
  *(_QWORD *)(v13 + 216) = v19[0];
  *(_QWORD *)(v13 + 224) = v18;
  strcpy(v21, "targetType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 312) = v8;
  *(_QWORD *)(v13 + 288) = v19[1];
  *(_QWORD *)(v13 + 296) = v17;
  strcpy(v21, "actionContext");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 384) = v8;
  *(_QWORD *)(v13 + 360) = v20;
  *(_QWORD *)(v13 + 368) = v19[2];
  sub_1DA4950BC(v13);
  v14 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setClickstreamMetricsEvent_, v14);

  return v4;
}

id sub_1DA5B785C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *boxed_opaque_existential_1;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v36;
  id v37;
  _QWORD v38[6];
  char v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v5 = a1[9];
  if (a1[6])
  {
    swift_bridgeObjectRetain();
    v6 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, v6, v5);

  v8 = a1[8];
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setIdentifier_, v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  strcpy((char *)v40, "recommendation");
  HIBYTE(v40[1]) = -18;
  v11 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v12 = a1[3];
  v13 = __swift_project_boxed_opaque_existential_1(a1, v12);
  *(_QWORD *)(inited + 96) = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_1, v13, v12);
  sub_1DA4950BC(inited);
  v15 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  v37 = v7;
  objc_msgSend(v7, sel_setParameters_, v15);

  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DA67C310;
  strcpy((char *)v40, "eventType");
  sub_1DA6703F0();
  *(_QWORD *)(v16 + 96) = v11;
  v17 = 0xE500000000000000;
  *(_QWORD *)(v16 + 72) = 0x6B63696C63;
  *(_QWORD *)(v16 + 80) = 0xE500000000000000;
  strcpy((char *)v40, "targetId");
  BYTE1(v40[1]) = 0;
  WORD1(v40[1]) = 0;
  HIDWORD(v40[1]) = -402653184;
  sub_1DA6703F0();
  if (v8)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 24))(v38, a2, a3);
    TipType.adHocImpression.getter();
    v18 = v40[0];
    v19 = v40[1];
    v20 = v41;
    v21 = v42;
    v23 = v43;
    v22 = v44;
    v24 = v45;
    v38[0] = v40[0];
    v38[1] = v40[1];
    v38[2] = v41;
    v38[3] = v42;
    v38[4] = v43;
    v38[5] = v44;
    v39 = v45;
    v25 = MetricsAdHocImpression.metricsId.getter();
    v17 = v26;
    sub_1DA539280(v18, v19, v20, v21, v23, v22, v24);
    v36 = 0;
    v27 = 0x657461676976616ELL;
    v28 = 0xE800000000000000;
    v29 = 0x6954656C62627562;
    v30 = 0xE000000000000000;
    v31 = 0xE900000000000070;
  }
  else
  {
    v25 = 0x65736F6C63;
    v27 = 0x7373696D736964;
    v28 = 0xE700000000000000;
    v29 = 0x6E6F74747562;
    v31 = 0xE600000000000000;
    v36 = 0x6954656C62627562;
    v30 = 0xE900000000000070;
  }
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 168) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 144) = v25;
  *(_QWORD *)(v16 + 152) = v17;
  strcpy((char *)v40, "actionType");
  BYTE3(v40[1]) = 0;
  HIDWORD(v40[1]) = -369098752;
  sub_1DA6703F0();
  *(_QWORD *)(v16 + 240) = v32;
  *(_QWORD *)(v16 + 216) = v27;
  *(_QWORD *)(v16 + 224) = v28;
  strcpy((char *)v40, "targetType");
  BYTE3(v40[1]) = 0;
  HIDWORD(v40[1]) = -369098752;
  sub_1DA6703F0();
  *(_QWORD *)(v16 + 312) = v32;
  *(_QWORD *)(v16 + 288) = v29;
  *(_QWORD *)(v16 + 296) = v31;
  strcpy((char *)v40, "actionContext");
  HIWORD(v40[1]) = -4864;
  sub_1DA6703F0();
  *(_QWORD *)(v16 + 384) = v32;
  *(_QWORD *)(v16 + 360) = v36;
  *(_QWORD *)(v16 + 368) = v30;
  sub_1DA4950BC(v16);
  v33 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setClickstreamMetricsEvent_, v33);

  return v37;
}

uint64_t static AMSDialogRequestKeys.recommendationActionKey.getter()
{
  return 0x6E656D6D6F636572;
}

uint64_t sub_1DA5B7D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD v17[2];
  __int128 v18;
  uint64_t v19;

  v4 = sub_1DA66CB50();
  v6 = v5;
  v7 = MEMORY[0x1E0DEA968];
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v18 = a1;
  *((_QWORD *)&v18 + 1) = a2;
  sub_1DA49ACF0(&v18, v17);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v17, v4, v6, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v10 = sub_1DA66CAB4();
  v12 = v11;
  v13 = sub_1DA66D2E8();
  v19 = v7;
  *(_QWORD *)&v18 = v13;
  *((_QWORD *)&v18 + 1) = v14;
  sub_1DA49ACF0(&v18, v17);
  v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v17, v10, v12, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t AMSDialogTip.baseImpressionMetricsFields.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;

  v49 = MEMORY[0x1E0DEE9E0];
  v31 = sub_1DA66CB50();
  v5 = v4;
  v34 = a1;
  v35 = a2;
  v33 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a2 + 24);
  v33(&v37, a1, a2);
  TipType.adHocImpression.getter();
  v6 = v43;
  v8 = v44;
  v7 = v45;
  v9 = v46;
  v10 = v47;
  LOBYTE(a2) = v48;
  v37 = v43;
  v38 = v44;
  v39 = v45;
  v40 = v46;
  v41 = v47;
  v42 = v48;
  v11 = MetricsAdHocImpression.metricsName.getter();
  v13 = v12;
  sub_1DA539280(v6, *((uint64_t *)&v6 + 1), v8, v7, v9, v10, a2);
  if (v13)
  {
    v39 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v37 = v11;
    *((_QWORD *)&v37 + 1) = v13;
    sub_1DA49ACF0(&v37, v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v49 = 0x8000000000000000;
    sub_1DA534964(v36, v31, v5, isUniquelyReferenced_nonNull_native);
    v49 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DA5347A0(v31, v5, &v37);
    sub_1DA480E84((uint64_t)&v37);
  }
  swift_bridgeObjectRelease();
  v32 = sub_1DA66CAB4();
  v17 = v16;
  v33(&v37, v34, v35);
  TipType.adHocImpression.getter();
  v18 = v43;
  v19 = v44;
  v20 = v45;
  v21 = v46;
  v22 = v47;
  v23 = v48;
  if (v48)
  {
    if (v48 == 1)
      v24 = sub_1DA66D2DC();
    else
      v24 = sub_1DA66D2E8();
  }
  else
  {
    v24 = sub_1DA66D2C4();
  }
  v26 = v24;
  v27 = v25;
  sub_1DA539280(v18, *((uint64_t *)&v18 + 1), v19, v20, v21, v22, v23);
  v39 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v37 = v26;
  *((_QWORD *)&v37 + 1) = v27;
  sub_1DA49ACF0(&v37, v36);
  v28 = v49;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v49 = 0x8000000000000000;
  sub_1DA534964(v36, v32, v17, v29);
  v49 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_1DA5B80B0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TipAction(a2, a1);
  return a2;
}

uint64_t sub_1DA5B80EC(uint64_t a1)
{
  destroy for TipAction(a1);
  return a1;
}

uint64_t dispatch thunk of AMSDialogTip.clickstreamMetricsFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AMSDialogTip.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AMSDialogTip.dialogRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for AMSDialogRequestKeys()
{
  return &type metadata for AMSDialogRequestKeys;
}

uint64_t sub_1DA5B8148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;

  v0 = sub_1DA66CB50();
  v2 = v1;
  v3 = MEMORY[0x1E0DEA968];
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v14 = 0xD000000000000015;
  *((_QWORD *)&v14 + 1) = 0x80000001DA68CF40;
  sub_1DA49ACF0(&v14, v13);
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v13, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v6 = sub_1DA66CAB4();
  v8 = v7;
  v9 = sub_1DA66D2E8();
  v15 = v3;
  *(_QWORD *)&v14 = v9;
  *((_QWORD *)&v14 + 1) = v10;
  sub_1DA49ACF0(&v14, v13);
  v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DA534964(v13, v6, v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1DA5B8264(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  void *v12;
  uint64_t v13;
  void *v14;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  char v21[16];

  v2 = a1[9];
  if (a1[6])
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_, v3, v2);

  if (a1[8])
  {
    v20 = 0;
    v5 = 0x80000001DA689E00;
    v16 = 0xD000000000000015;
    strcpy((char *)v19, "navigatebubbleTi");
    BYTE1(v19[2]) = 0;
    WORD1(v19[2]) = 0;
    HIDWORD(v19[2]) = -536870912;
    v17 = 0xE900000000000070;
    v18 = 0xE800000000000000;
  }
  else
  {
    v16 = 0x65736F6C63;
    v5 = 0xE500000000000000;
    strcpy((char *)v19, "dismiss");
    v19[1] = 0x6E6F74747562;
    v17 = 0xE600000000000000;
    v18 = 0xE700000000000000;
    v20 = 0x6954656C62627562;
    v19[2] = 0xE900000000000070;
  }
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setIdentifier_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2228);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678510;
  strcpy(v21, "recommendation");
  v21[15] = -18;
  v8 = MEMORY[0x1E0DEA968];
  sub_1DA6703F0();
  v9 = a1[3];
  v10 = __swift_project_boxed_opaque_existential_1(a1, v9);
  *(_QWORD *)(inited + 96) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_1, v10, v9);
  sub_1DA4950BC(inited);
  v12 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setParameters_, v12);

  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DA67C310;
  strcpy(v21, "eventType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 96) = v8;
  *(_QWORD *)(v13 + 72) = 0x6B63696C63;
  *(_QWORD *)(v13 + 80) = 0xE500000000000000;
  strcpy(v21, "targetId");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 168) = v8;
  *(_QWORD *)(v13 + 144) = v16;
  *(_QWORD *)(v13 + 152) = v5;
  strcpy(v21, "actionType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 240) = v8;
  *(_QWORD *)(v13 + 216) = v19[0];
  *(_QWORD *)(v13 + 224) = v18;
  strcpy(v21, "targetType");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 312) = v8;
  *(_QWORD *)(v13 + 288) = v19[1];
  *(_QWORD *)(v13 + 296) = v17;
  strcpy(v21, "actionContext");
  sub_1DA6703F0();
  *(_QWORD *)(v13 + 384) = v8;
  *(_QWORD *)(v13 + 360) = v20;
  *(_QWORD *)(v13 + 368) = v19[2];
  sub_1DA4950BC(v13);
  v14 = (void *)sub_1DA66F748();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setClickstreamMetricsEvent_, v14);

  return v4;
}

uint64_t ArtworkRequest.prepared.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66CEBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ArtworkModel.joeColor(contrasting:using:selecting:)(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v5 = *a3;
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v9 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v7 + 8))(v3, a1, &v9, v6, v7);
}

uint64_t sub_1DA5B8774()
{
  return objectdestroyTm_8((uint64_t (*)(_QWORD))MEMORY[0x1E0D7E540]);
}

uint64_t sub_1DA5B8780()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for UnownedImageIssueIdentifier() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_1DA66D54C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = sub_1DA66C358();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_1DA5B8838@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1DA5B95EC(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1DA5B887C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UnownedImageIssueIdentifier() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

_QWORD *sub_1DA5B88EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;

  type metadata accessor for UnownedImageIssueIdentifier();
  result = sub_1DA5B893C(*a1, a1[1]);
  *a2 = result;
  return result;
}

_QWORD *sub_1DA5B893C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a2 + 40);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *(v5 - 1);
    v7 = *v5;
    swift_bridgeObjectRetain();
    v9 = sub_1DA66CDF0();
    v11 = v10;
    sub_1DA5329A0();
    if ((sub_1DA66FCDC() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v12 = sub_1DA523D48(v9, v11, a1);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_1DA4981C8(0, v6[2] + 1, 1, v6);
    v14 = v6[2];
    v13 = v6[3];
    if (v14 >= v13 >> 1)
      v6 = sub_1DA4981C8((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
    v6[2] = v14 + 1;
    v15 = &v6[2 * v14];
    v15[4] = v8;
    v15[5] = v7;
LABEL_5:
    v5 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DA5B8AAC()
{
  return sub_1DA5B90AC();
}

uint64_t sub_1DA5B8AB8()
{
  return objectdestroyTm_8((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1DA5B8AC4()
{
  sub_1DA66C358();
  return sub_1DA66C2E0();
}

uint64_t sub_1DA5B8B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1F026C070) + 48);
  v5 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  sub_1DA66C448();
  v6 = *MEMORY[0x1E0D7E510];
  v7 = sub_1DA66D51C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
}

uint64_t sub_1DA5B8BA0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t inited;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE v38[40];
  __int128 v39;
  __int128 v40;

  v3 = *a1;
  v37 = sub_1DA66F8BC();
  sub_1DA6703F0();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1DA49A800((uint64_t)v38), (v5 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DA49A930((uint64_t)v38);
  if (!*((_QWORD *)&v40 + 1))
  {
    result = sub_1DA47E2F0((uint64_t)&v39, &qword_1EDAE5130);
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    v10 = 0;
    goto LABEL_53;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE00E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA678FF0;
  sub_1DA66F8BC();
  sub_1DA6703F0();
  if (*(_QWORD *)(v3 + 16) && (v8 = sub_1DA49A800((uint64_t)v38), (v9 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v3 + 56) + 32 * v8, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DA49A930((uint64_t)v38);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_18;
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v39, &qword_1EDAE5130);
  }
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = 0;
LABEL_18:
  sub_1DA66F8BC();
  sub_1DA6703F0();
  if (*(_QWORD *)(v3 + 16) && (v11 = sub_1DA49A800((uint64_t)v38), (v12 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v3 + 56) + 32 * v11, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DA49A930((uint64_t)v38);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_27;
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v39, &qword_1EDAE5130);
  }
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0;
LABEL_27:
  sub_1DA66F8BC();
  sub_1DA6703F0();
  if (*(_QWORD *)(v3 + 16) && (v13 = sub_1DA49A800((uint64_t)v38), (v14 & 1) != 0))
  {
    sub_1DA49ADD0(*(_QWORD *)(v3 + 56) + 32 * v13, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_1DA49A930((uint64_t)v38);
  if (*((_QWORD *)&v40 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v15 = *(_QWORD *)(inited + 40);
      if (v15)
        goto LABEL_34;
      goto LABEL_40;
    }
  }
  else
  {
    sub_1DA47E2F0((uint64_t)&v39, &qword_1EDAE5130);
  }
  *(_QWORD *)(inited + 64) = 0;
  *(_QWORD *)(inited + 72) = 0;
  v15 = *(_QWORD *)(inited + 40);
  if (v15)
  {
LABEL_34:
    v16 = *(_QWORD *)(inited + 32);
    swift_bridgeObjectRetain();
    v17 = sub_1DA4981C8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v19 = v17[2];
    v18 = v17[3];
    v20 = v19 + 1;
    if (v19 >= v18 >> 1)
    {
      v34 = sub_1DA4981C8((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
      v20 = v19 + 1;
      v17 = v34;
    }
    v17[2] = v20;
    v21 = &v17[2 * v19];
    v21[4] = v16;
    v21[5] = v15;
    v22 = *(_QWORD *)(inited + 56);
    if (!v22)
      goto LABEL_46;
    goto LABEL_41;
  }
LABEL_40:
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(inited + 56);
  if (v22)
  {
LABEL_41:
    v23 = *(_QWORD *)(inited + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1DA4981C8(0, v17[2] + 1, 1, v17);
    v25 = v17[2];
    v24 = v17[3];
    v26 = v25 + 1;
    if (v25 >= v24 >> 1)
    {
      v35 = sub_1DA4981C8((_QWORD *)(v24 > 1), v25 + 1, 1, v17);
      v26 = v25 + 1;
      v17 = v35;
    }
    v17[2] = v26;
    v27 = &v17[2 * v25];
    v27[4] = v23;
    v27[5] = v22;
  }
LABEL_46:
  v28 = *(_QWORD *)(inited + 72);
  if (v28)
  {
    v29 = *(_QWORD *)(inited + 64);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1DA4981C8(0, v17[2] + 1, 1, v17);
    v31 = v17[2];
    v30 = v17[3];
    v32 = v31 + 1;
    if (v31 >= v30 >> 1)
    {
      v36 = sub_1DA4981C8((_QWORD *)(v30 > 1), v31 + 1, 1, v17);
      v32 = v31 + 1;
      v17 = v36;
    }
    v17[2] = v32;
    v33 = &v17[2 * v31];
    v33[4] = v29;
    v33[5] = v28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v10 = sub_1DA5B93D0((uint64_t)v17, v37);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
LABEL_53:
  *a2 = v10;
  return result;
}

uint64_t sub_1DA5B90A0()
{
  return sub_1DA5B90AC();
}

uint64_t sub_1DA5B90AC()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DA5B9118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = sub_1DA66CEBC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  ArtworkModel.preferredRequest.getter((uint64_t)&v14 - v7);
  sub_1DA66CE20();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v8, v2);
  v10 = sub_1DA66CE14();
  v12 = v11;
  result = ((uint64_t (*)(char *, uint64_t))v9)(v5, v2);
  *a1 = v10;
  a1[1] = v12;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t assignWithCopy for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UnownedImageIssueIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnownedImageIssueIdentifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5B92F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnownedImageIssueIdentifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5B9340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1DA5B9380()
{
  return sub_1DA4841D4(&qword_1EDADFFE8, &qword_1EDAE5340, MEMORY[0x1E0DEAF38]);
}

uint64_t sub_1DA5B93AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA484824(a1, a2, a3, &qword_1EDAE5340, &qword_1EDADFFE8);
}

uint64_t sub_1DA5B93D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[25];

  v15[2] = a2;
  v4 = sub_1DA66C928();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1DA66CA0C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v15[1] = v2;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1DA509F8C(0, v9, 0);
    v10 = v16;
    v17 = xmmword_1DA67D4C0;
    v18 = 0u;
    memset(v19, 0, sizeof(v19));
    v11 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1DA66C904();
      sub_1DA66CC1C();
      swift_bridgeObjectRetain();
      sub_1DA66CA00();
      swift_bridgeObjectRelease();
      v16 = v10;
      v13 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DA509F8C(v12 > 1, v13 + 1, 1);
        v10 = v16;
      }
      v11 += 16;
      *(_QWORD *)(v10 + 16) = v13 + 1;
      sub_1DA4F7228((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1DA5B95EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1DA66FC7C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DA5D9F74(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1DA5B9680()
{
  return sub_1DA4841D4((unint64_t *)&unk_1EDAE4B20, (uint64_t *)&unk_1EDAE4B10, MEMORY[0x1E0DEAF38]);
}

uint64_t sub_1DA5B96AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DA484824(a1, a2, a3, (uint64_t *)&unk_1EDAE4B10, (unint64_t *)&unk_1EDAE4B20);
}

double PageSize.width.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PageSize.sizeClass.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

double PageSize.peek.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double PageSize.additionalTextMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double PageSize.init(width:additionalTextMargin:)@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  char v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  v6 = _s10PodcastsUI9SizeClassO5widthAC12CoreGraphics7CGFloatV_tcfC_0(a2);
  v7 = 8 * v6;
  result = *(double *)((char *)&unk_1DA67FE08 + v7);
  v9 = *(_QWORD *)((char *)&unk_1DA67FE48 + v7);
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v9;
  *(double *)(a1 + 24) = result;
  *(_QWORD *)(a1 + 32) = 0x4042000000000000;
  *(double *)(a1 + 40) = a3;
  return result;
}

double PageSize.widthWithoutMargins.getter()
{
  double *v0;

  return *v0 - (v0[2] + v0[2]);
}

uint64_t _s10PodcastsUI8PageSizeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(double *)a1 == *(double *)a2)
    v2 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)))), 0xFuLL))) & sub_1DA659788(*(_BYTE *)(a1 + 8), *(_BYTE *)(a2 + 8));
  else
    v2 = 0;
  return v2 & 1;
}

uint64_t getEnumTagSinglePayload for PageSize(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 8;
  v5 = v3 - 8;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PageSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 7;
  }
  return result;
}

uint64_t sub_1DA5B9878(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PreparedArtworkRequest();
    result = MEMORY[0x1DF0A039C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AssetCaches.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AssetCaches.preparedArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AssetCaches() + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AssetCaches.alignments.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AssetCaches() + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t assignWithCopy for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AssetCaches(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DA5B9BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1DA5B9C64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40E8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DA5B9D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE40E0)
  {
    sub_1DA66CEBC();
    sub_1DA4982D4(&qword_1EDAE2138, &qword_1EDAE2130, 0x1E0CB3940, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1DA66C994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE40E0);
  }
}

void sub_1DA5B9DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE40D0)
  {
    type metadata accessor for PreparedArtworkRequest();
    sub_1DA5B9878((unint64_t *)&qword_1EDAE52D0, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
    sub_1DA5B9878(&qword_1EDADF988, (uint64_t)&protocol conformance descriptor for PreparedArtworkRequest);
    sub_1DA4982D4(&qword_1EDAE2128, (unint64_t *)&qword_1EDAE5388, 0x1E0DC3870, (uint64_t)&protocol conformance descriptor for UIImage);
    sub_1DA4982D4(&qword_1EDAE2138, &qword_1EDAE2130, 0x1E0CB3940, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1DA66C994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE40D0);
  }
}

void sub_1DA5B9EB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDAE40F0)
  {
    sub_1DA66D15C();
    v0 = sub_1DA66C994();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDAE40F0);
  }
}

uint64_t *sub_1DA5B9F38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1DA66BE60();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v12 = sub_1DA66C430();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 32);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1DA66C358();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t sub_1DA5BA0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1DA66C430();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 32);
  v8 = sub_1DA66C358();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_QWORD *sub_1DA5BA1CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = sub_1DA66C430();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1DA66C358();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

_QWORD *sub_1DA5BA358(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66C430();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1DA66C358();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_OWORD *sub_1DA5BA590(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DA66C430();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 32);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1DA66C358();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_1DA5BA6E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66C430();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = *(int *)(a3 + 32);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1DA66C358();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1DA5BA8F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BA8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1DA5BA9A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BA9B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for FairPlayKeyViewModel()
{
  uint64_t result;

  result = qword_1F026C0D0;
  if (!qword_1F026C0D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1DA5BAA90()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DA56DA8C(319, qword_1F026C0E0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1DA56DA8C(319, (unint64_t *)&qword_1EDAE0148, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1DA5BAB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  void *v16;
  id v17;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1DA66C430();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = type metadata accessor for FairPlayKeyViewModel();
  sub_1DA5BAD58(v0 + *(int *)(v11 + 28), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1DA5BADA0((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
    objc_msgSend(v13, sel_setUnitsStyle_, 1);
    objc_msgSend(v13, sel_setMaximumUnitCount_, 2);
    objc_msgSend(v13, sel_setIncludesTimeRemainingPhrase_, 1);
    sub_1DA66C418();
    v14 = (void *)sub_1DA66C3F4();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v16 = (void *)sub_1DA66C3F4();
    v17 = objc_msgSend(v13, sel_stringFromDate_toDate_, v14, v16);

    if (v17)
    {
      v12 = sub_1DA66F8BC();

    }
    else
    {

      v12 = 0;
    }
    v15(v10, v4);
  }
  return v12;
}

uint64_t sub_1DA5BAD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5BADA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADE6C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LegacyNowPlayingArtworkDataProvider.adamID.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_identifiers);
  v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2)
    return 0;
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1DA66DCE4();
}

id LegacyNowPlayingArtworkDataProvider.isVideoEpisode.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 8);
  if (result)
    return objc_msgSend(result, sel_isVideo);
  return result;
}

uint64_t LegacyNowPlayingArtworkDataProvider.showArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.episodeArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.episodeArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.showPageTallArtworkData.getter@<X0>(uint64_t a1@<X8>)
{
  return MPModelPodcastEpisode.showPageTallArtworkData.getter(a1);
}

uint64_t LegacyNowPlayingArtworkDataProvider.chapterArtworkData(at:)@<X0>(_QWORD *a1@<X8>, uint64_t a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;

  if (*(_QWORD *)(v2 + 8))
    return IMPlayerItem.chapterArtworkData(at:)(a1, a2);
  v5 = type metadata accessor for NowPlayingArtwork.Data();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
}

uint64_t LegacyNowPlayingArtworkDataProvider.init(episode:legacyPlayerItem:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1DA5BAF4C()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_identifiers);
  v2 = objc_msgSend(v1, sel_universalStore);

  if (!v2)
    return 0;
  objc_msgSend(v2, sel_adamID);
  swift_unknownObjectRelease();
  return sub_1DA66DCE4();
}

id sub_1DA5BAFD4()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 8);
  if (result)
    return objc_msgSend(result, sel_isVideo);
  return result;
}

uint64_t sub_1DA5BAFF8@<X0>(_QWORD *a1@<X8>, uint64_t a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;

  if (*(_QWORD *)(v2 + 8))
    return IMPlayerItem.chapterArtworkData(at:)(a1, a2);
  v5 = type metadata accessor for NowPlayingArtwork.Data();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
}

uint64_t assignWithCopy for LegacyNowPlayingArtworkDataProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for LegacyNowPlayingArtworkDataProvider(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for LegacyNowPlayingArtworkDataProvider()
{
  return &type metadata for LegacyNowPlayingArtworkDataProvider;
}

uint64_t RemoveAbandonedDownloadsAction.init(episodesToDelete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_1DA66ED4C();
  result = type metadata accessor for RemoveAbandonedDownloadsAction();
  *(_QWORD *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t type metadata accessor for RemoveAbandonedDownloadsAction()
{
  uint64_t result;

  result = qword_1F026C178;
  if (!qword_1F026C178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RemoveAbandonedDownloadsAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoveAbandonedDownloadsAction.actionMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RemoveAbandonedDownloadsAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t RemoveAbandonedDownloadsAction.episodesToDelete.getter()
{
  type metadata accessor for RemoveAbandonedDownloadsAction();
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for RemoveAbandonedDownloadsAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BB20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoveAbandonedDownloadsAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BB294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t DownloadEpisodesAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DownloadEpisodesAction.actionMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DownloadEpisodesAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t DownloadEpisodesAction.episodeIDs.getter()
{
  type metadata accessor for DownloadEpisodesAction();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for DownloadEpisodesAction()
{
  uint64_t result;

  result = qword_1F026C238;
  if (!qword_1F026C238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DownloadEpisodesAction.intent.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DownloadEpisodesAction() + 20));
  return swift_bridgeObjectRetain();
}

uint64_t DownloadEpisodesAction.init(actionMetrics:episodeIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  sub_1DA66ED4C();
  *(_QWORD *)(a3 + *(int *)(type metadata accessor for DownloadEpisodesAction() + 20)) = a2;
  v6 = sub_1DA66ED64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a3, a1, v6);
}

unint64_t sub_1DA5BB474(uint64_t a1)
{
  unint64_t result;

  result = sub_1DA5BB498();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DA5BB498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026C1D8;
  if (!qword_1F026C1D8)
  {
    v1 = type metadata accessor for DownloadEpisodesAction();
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for DownloadEpisodesAction, v1);
    atomic_store(result, (unint64_t *)&qword_1F026C1D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadEpisodesAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BB4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DA66ED64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadEpisodesAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5BB574(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DA66ED64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1DA5BB5EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5BB604()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  v1 = (id)v0[15];
  if (!v1)
    v1 = objc_msgSend((id)objc_opt_self(), sel_systemRoute);
  v0[17] = v1;
  v2 = objc_allocWithZone(MEMORY[0x1E0CC2318]);
  v3 = (void *)sub_1DA66F88C();
  v4 = objc_msgSend(v2, sel_initWithName_, v3);
  v0[18] = v4;

  v0[2] = v0;
  v0[3] = sub_1DA5BB768;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1DA5BB974;
  v6[3] = &block_descriptor_14;
  v6[4] = v5;
  objc_msgSend(v4, sel_selectRoute_operation_completion_, v1, 0, v6);
  return swift_continuation_await();
}

uint64_t sub_1DA5BB768()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1DA5BB7C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 128);
  v2 = v1[7];
  v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 80) + *(_QWORD *)(v3 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  *v4 = v0;
  v4[1] = sub_1DA5BB844;
  return v6(v2, v3);
}

uint64_t sub_1DA5BB844(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 176) = a1;
  return swift_task_switch();
}

uint64_t sub_1DA5BB8B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_1DA5BB8F4()
{
  uint64_t v0;
  void *v1;

  swift_willThrow();
  v1 = *(void **)(v0 + 136);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5BB93C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5BB974(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t PlaybackController.RouteController.deinit()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t PlaybackController.RouteController.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlaybackController.RouteController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaybackController.RouteController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1DA5BBA7C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5)
  {
    result = sub_1DA5BBB94(a1, a2);
    if ((v6 & 1) != 0)
      return 0;
  }
  return result;
}

uint64_t sub_1DA5BBAD8(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  void *v8;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7F228]), sel_init);
  result = sub_1DA5BBB94(a1, a2);
  if ((v6 & 1) == 0)
  {
    if (result < 0)
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v4, sel_setStoreTrackId_, result);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v7)
  {
    v8 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v4, sel_setUuid_, v8);

  return (uint64_t)v4;
}

uint64_t sub_1DA5BBB94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  (*(void (**)(void))(a2 + 16))();
  if (!v2)
    return 0;
  result = sub_1DA66DCF0();
  if ((v4 & 1) != 0)
    return 0;
  return result;
}

BOOL MPCPlayerItemDurationSnapshot.isConsideredPlayed.getter()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 24);
  if (v1 <= 360.0)
    v2 = v1 * 0.9;
  else
    v2 = v1 + -240.0;
  return v2 <= *(double *)(v0 + 32);
}

BOOL static PageRenderResourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PageRenderResourceError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t PageRenderResourceError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t PageRenderResourceError.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001CLL;
  else
    return 0xD00000000000001DLL;
}

unint64_t sub_1DA5BBCD0()
{
  unint64_t result;

  result = qword_1F026C278;
  if (!qword_1F026C278)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderResourceError, &type metadata for PageRenderResourceError);
    atomic_store(result, (unint64_t *)&qword_1F026C278);
  }
  return result;
}

unint64_t sub_1DA5BBD14()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001CLL;
  else
    return 0xD00000000000001DLL;
}

uint64_t storeEnumTagSinglePayload for PageRenderResourceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5BBDA0 + 4 * byte_1DA680135[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5BBDD4 + 4 * byte_1DA680130[v4]))();
}

uint64_t sub_1DA5BBDD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5BBDDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5BBDE4);
  return result;
}

uint64_t sub_1DA5BBDF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5BBDF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5BBDFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5BBE04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageRenderResourceError()
{
  return &type metadata for PageRenderResourceError;
}

uint64_t sub_1DA5BBE20()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DA5BBE90()
{
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
  if ((sub_1DA6701A4() & 1) != 0)
    return sub_1DA6701A4() & 1;
  else
    return 0;
}

id sub_1DA5BBF30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s21PlayerPathCoordinatorCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DA5BBFF0()
{
  return _s21PlayerPathCoordinatorCMa();
}

double sub_1DA5BBFF8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1DA5BC078(uint64_t a1, void **a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v5 = v2;
  v6 = v3;
  v7 = v4;
  return sub_1DA66E0C8();
}

uint64_t sub_1DA5BC0F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA5BC11C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DA5BC140()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5BC164()
{
  uint64_t v0;

  return swift_deallocObject();
}

Swift::Void __swiftcall UIView.constrainFullSizeSubview(_:useLayoutMargins:insets:)(UIView *_, Swift::Bool useLayoutMargins, NSDirectionalEdgeInsets insets)
{
  void *v3;
  void *v4;
  double trailing;
  double bottom;
  double leading;
  double top;
  UIView *v11;
  UIView *v12;
  id v13;
  UIView *v14;
  void *v15;
  id v16;

  v4 = v3;
  trailing = insets.trailing;
  bottom = insets.bottom;
  leading = insets.leading;
  top = insets.top;
  v11 = -[UIView superview](_, sel_superview);
  if (!v11)
    goto LABEL_3;
  v12 = v11;
  sub_1DA47D774(0, qword_1EDADE950);
  v13 = v4;
  v14 = v12;
  LOBYTE(v12) = sub_1DA6701A4();

  if ((v12 & 1) == 0)
LABEL_3:
    objc_msgSend(v4, sel_addSubview_, _);
  -[UIView setTranslatesAutoresizingMaskIntoConstraints:](_, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (useLayoutMargins)
    UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(_, 15, top, leading, bottom, trailing);
  else
    UIView.fullSizeSubviewConstraints(_:insets:)(_, top, leading, bottom, trailing);
  v15 = (void *)objc_opt_self();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v16 = (id)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v16);

}

uint64_t UIView.superviewChain.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEC10);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1DA5BD114;
  *(_QWORD *)(result + 24) = v2;
  *a1 = result;
  return result;
}

uint64_t sub_1DA5BC388@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + 16;
  v4 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1DF0A054C](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEC08);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1DA47E36C;
  *(_QWORD *)(result + 24) = v4;
  *a2 = result;
  return result;
}

uint64_t UIView.firstCollectionViewCell.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t inited;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;

  v0 = swift_allocObject() + 16;
  swift_unknownObjectWeakInit();
  v1 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  v2 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1DF0A054C](v0);
  v3 = (id *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEC08);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = sub_1DA47E36C;
  *(_QWORD *)(inited + 24) = v2;
  sub_1DA66BE60();
  swift_beginAccess();
  v5 = *(void **)(v2 + 16);
  v6 = v5;
  v7 = objc_msgSend(v6, sel_superview);
  v8 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v7;

  if (v5)
  {
    do
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
      }
      else
      {

      }
      v9 = *v3;
      v6 = *v3;
      v10 = objc_msgSend(v6, sel_superview);
      v11 = *v3;
      *v3 = v10;

    }
    while (v9);
    v1 = v16;
  }
  swift_release();
  swift_release();
  result = swift_release();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1DA6705A0();
  result = swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_17;
LABEL_12:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v13 = (id)MEMORY[0x1DF09EE48](0, v1);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(v1 + 32);
LABEL_15:
    v14 = v13;
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t IndexPath.safeSection.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *, _QWORD);
  uint64_t *v3;
  _QWORD v5[5];

  v0 = sub_1DA66C574();
  if (v0 == 2)
    return sub_1DA66C568();
  if (v0 < 1)
    return 0;
  sub_1DA66C580();
  sub_1DA5BD140();
  sub_1DA66FCD0();
  sub_1DA66FD0C();
  v1 = 0;
  if (v5[4] != v5[0])
  {
    v2 = (void (*)(_QWORD *, _QWORD))sub_1DA66FD24();
    v1 = *v3;
    v2(v5, 0);
  }
  return v1;
}

uint64_t UIView.layoutMarginsSubviewConstraints(_:insets:edges:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  void *v6;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DA67E620;
  v14 = objc_msgSend(a1, sel_trailingAnchor);
  if ((a2 & 8) != 0)
  {
    v16 = objc_msgSend(v6, sel_layoutMarginsGuide);
    v15 = objc_msgSend(v16, sel_trailingAnchor);

  }
  else
  {
    v15 = objc_msgSend(v6, sel_trailingAnchor);
  }
  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -a6);

  *(_QWORD *)(v13 + 32) = v17;
  v18 = objc_msgSend(a1, sel_leadingAnchor);
  if ((a2 & 2) != 0)
  {
    v20 = objc_msgSend(v6, sel_layoutMarginsGuide);
    v19 = objc_msgSend(v20, sel_leadingAnchor);

  }
  else
  {
    v19 = objc_msgSend(v6, sel_leadingAnchor);
  }
  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, a4);

  *(_QWORD *)(v13 + 40) = v21;
  v22 = objc_msgSend(a1, sel_topAnchor);
  if ((a2 & 1) != 0)
  {
    v24 = objc_msgSend(v6, sel_layoutMarginsGuide);
    v23 = objc_msgSend(v24, sel_topAnchor);

  }
  else
  {
    v23 = objc_msgSend(v6, sel_topAnchor);
  }
  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, a3);

  *(_QWORD *)(v13 + 48) = v25;
  v26 = objc_msgSend(a1, sel_bottomAnchor);
  if ((a2 & 4) != 0)
  {
    v28 = objc_msgSend(v6, sel_layoutMarginsGuide);
    v27 = objc_msgSend(v28, sel_bottomAnchor);

  }
  else
  {
    v27 = objc_msgSend(v6, sel_bottomAnchor);
  }
  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, -a5);

  *(_QWORD *)(v13 + 56) = v29;
  sub_1DA66FAB4();
  return v13;
}

uint64_t UIView.constrainSubview(_:insets:respectingSafeArea:respectingKeyboardSafeArea:)(void *a1, char a2, char a3, double a4, double a5, double a6, double a7)
{
  void *v7;
  void *v8;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v38;

  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DA67F560;
  v17 = objc_msgSend(a1, sel_topAnchor);
  if ((a2 & 1) != 0)
  {
    v18 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    v19 = objc_msgSend(v18, sel_topAnchor);

  }
  else
  {
    v19 = objc_msgSend(v8, sel_topAnchor);
  }
  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, a4);

  *(_QWORD *)(v16 + 32) = v20;
  v21 = objc_msgSend(a1, sel_leadingAnchor);
  if ((a2 & 1) != 0)
  {
    v22 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    v23 = objc_msgSend(v22, sel_leadingAnchor);

  }
  else
  {
    v23 = objc_msgSend(v8, sel_leadingAnchor);
  }
  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, a5);

  *(_QWORD *)(v16 + 40) = v24;
  v25 = objc_msgSend(a1, sel_trailingAnchor);
  if ((a2 & 1) != 0)
  {
    v26 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    v27 = objc_msgSend(v26, sel_trailingAnchor);

  }
  else
  {
    v27 = objc_msgSend(v8, sel_trailingAnchor);
  }
  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, a7);

  *(_QWORD *)(v16 + 48) = v28;
  v38 = v16;
  sub_1DA66FAB4();
  v29 = objc_msgSend(a1, sel_bottomAnchor);
  if ((a3 & 1) != 0)
  {
    v30 = objc_msgSend(v8, sel_keyboardLayoutGuide);
    v31 = objc_msgSend(v30, sel_topAnchor);
LABEL_14:
    v32 = v31;

    goto LABEL_16;
  }
  if ((a2 & 1) != 0)
  {
    v30 = objc_msgSend(v8, sel_safeAreaLayoutGuide);
    v31 = objc_msgSend(v30, sel_bottomAnchor);
    goto LABEL_14;
  }
  v32 = objc_msgSend(v8, sel_bottomAnchor);
LABEL_16:
  v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v32, a6);

  v34 = v33;
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DA66FAC0();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  v35 = (void *)objc_opt_self();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  swift_bridgeObjectRetain();
  v36 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, v36);

  return v38;
}

uint64_t (*sub_1DA5BCE80(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DA5BCFAC(v6, a2, a3);
  return sub_1DA5BCED4;
}

uint64_t (*sub_1DA5BCED8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DA5BD018(v6, a2, a3);
  return sub_1DA5BCED4;
}

uint64_t (*sub_1DA5BCF2C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1DA5BD084(v6, a2, a3);
  return sub_1DA5BCED4;
}

void sub_1DA5BCF80(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1DA5BCFAC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1DF09EE48](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = sub_1DA66BE60();
LABEL_5:
    *v3 = v4;
    return destroy for WidgetImageProvider;
  }
  __break(1u);
  return result;
}

void (*sub_1DA5BD018(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF09EE48](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s10PodcastsUI32JoeColorClampBrightnessAlgorithmV9CandidateVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1DA5BD084(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1DF09EE48](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for JoeColorClampBrightnessAlgorithm.Candidate;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5BD0F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA5BD114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1DA5BC388(v1, a1);
}

uint64_t sub_1DA5BD11C()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1DA5BD140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026C280;
  if (!qword_1F026C280)
  {
    v1 = sub_1DA66C580();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB1690], v1);
    atomic_store(result, (unint64_t *)&qword_1F026C280);
  }
  return result;
}

unint64_t sub_1DA5BD18C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026C288;
  if (!qword_1F026C288)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026C290);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEC320], v1);
    atomic_store(result, (unint64_t *)&qword_1F026C288);
  }
  return result;
}

uint64_t ModalSheet.init(actions:)(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t result;
  id v14;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing] = 0x4034000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing] = 0x4020000000000000;
  v3 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_mapTableWithKeyOptions_valueOptions_, 5, 5);
  *(_QWORD *)&v5[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_actions] = a1;
  swift_bridgeObjectRetain();

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ModalSheet();
  v6 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  v7 = v6;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = v7;
    v8 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v6;
  }
  swift_bridgeObjectRelease();
  if (v8 >= 1)
  {
    v10 = objc_msgSend(v7, sel_view);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v11, sel_setBackgroundColor_, v12);

      objc_msgSend(v7, sel_setModalPresentationStyle_, 1);
      return (uint64_t)v7;
    }
    __break(1u);
  }
  sub_1DA670444();
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C2C0);
  sub_1DA66F904();
  swift_bridgeObjectRelease();
  sub_1DA66F988();

  result = sub_1DA670570();
  __break(1u);
  return result;
}

id sub_1DA5BD444()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide;
  v2 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide];
  }
  else
  {
    v4 = sub_1DA5BD948(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1DA5BD4A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = a1;

}

void (*sub_1DA5BD4B8(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1DA5BD444();
  return sub_1DA5BD4EC;
}

void sub_1DA5BD4EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = v2;

}

id sub_1DA5BD504()
{
  void *v0;

  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1DA5BD51C(uint64_t a1)
{
  char *v1;
  _BYTE *v2;
  _BYTE *v3;
  void (*v4)(char *);
  void *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1DA4F2340(a1, (uint64_t)v6);
  if (v7)
  {
    sub_1DA47D774(0, &qword_1F026C3F8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction], sel_objectForKey_, v5);
      if (v2)
      {
        v3 = v2;
        if (v2[16] == 2)
          objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
        v4 = (void (*)(char *))*((_QWORD *)v3 + 3);
        if (v4)
          v4(v1);
        swift_release();
      }

    }
  }
  else
  {
    sub_1DA480E84((uint64_t)v6);
  }
}

uint64_t sub_1DA5BD614()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet_actions);
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v2 = (uint64_t)sub_1DA549338(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v4 = v2;
  sub_1DA5BF044(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ModalSheet.Action.__allocating_init(title:type:handler:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  char v11;

  result = swift_allocObject();
  v11 = *a3;
  *(_QWORD *)(result + 40) = a1;
  *(_QWORD *)(result + 48) = a2;
  *(_BYTE *)(result + 16) = v11;
  *(_QWORD *)(result + 24) = a4;
  *(_QWORD *)(result + 32) = a5;
  return result;
}

uint64_t ModalSheetWrapper.__allocating_init(contentViewController:actions:height:)(uint64_t a1, unint64_t a2, double a3)
{
  objc_class *v3;
  char *v7;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth] = 0x407C200000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize] = 0x4085E00000000000;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController] = a1;
  *(double *)&v7[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height] = a3;
  return ModalSheet.init(actions:)(a2);
}

id sub_1DA5BD7E4(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id (*static ModalSheet.dismissHandler.getter())(void *a1)
{
  return sub_1DA5BD7E4;
}

PodcastsUI::ModalSheet::Action::ActionType_optional __swiftcall ModalSheet.Action.ActionType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (PodcastsUI::ModalSheet::Action::ActionType_optional)rawValue;
}

uint64_t ModalSheet.Action.ActionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PodcastsUI::ModalSheet::Action::ActionType_optional sub_1DA5BD824(Swift::Int *a1)
{
  return ModalSheet.Action.ActionType.init(rawValue:)(*a1);
}

void sub_1DA5BD82C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t ModalSheet.Action.init(title:type:handler:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v6;

  v6 = *a3;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a2;
  *(_BYTE *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return v5;
}

uint64_t ModalSheet.Action.deinit()
{
  uint64_t v0;

  sub_1DA4EFFCC(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalSheet.Action.__deallocating_deinit()
{
  uint64_t v0;

  sub_1DA4EFFCC(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ModalSheet.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalSheet.__allocating_init(actions:)(unint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ModalSheet.init(actions:)(a1);
}

id ModalSheet.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id sub_1DA5BD948(char *a1)
{
  id v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  objc_msgSend(result, sel_addLayoutGuide_, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DA67F560;
  v6 = objc_msgSend(v2, sel_leadingAnchor);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_leadingAnchor);

  v9 = *(double *)&a1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing];
  v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, v9);

  *(_QWORD *)(v5 + 32) = v10;
  v11 = objc_msgSend(v2, sel_trailingAnchor);
  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  v13 = objc_msgSend(result, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, -v9);
  *(_QWORD *)(v5 + 40) = v14;
  v15 = objc_msgSend(v2, sel_topAnchor);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v16 = result;
    v17 = (void *)objc_opt_self();
    v18 = objc_msgSend(v16, sel_topAnchor);

    v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v18, v9);
    *(_QWORD *)(v5 + 48) = v19;
    sub_1DA66FAB4();
    sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
    v20 = (void *)sub_1DA66FA90();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_activateConstraints_, v20);

    return v2;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1DA5BDC10()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  objc_super v41;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for ModalSheet();
  objc_msgSendSuper2(&v41, sel_viewDidLoad);
  v40 = MEMORY[0x1E0DEE9D8];
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_trailingAnchor);

  v5 = *(double *)&v1[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing];
  v6 = sub_1DA5BD614();
  if (v6 >> 62)
  {
LABEL_21:
    v7 = sub_1DA6705A0();
    if (v7)
    {
LABEL_4:
      v36 = (id)objc_opt_self();
      v37 = v6 & 0xC000000000000001;
      v8 = 4;
      v33 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
      v34 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing;
      v9 = &selRef_tintColorForTheme_;
      v10 = -v5;
      v35 = v6;
      while (1)
      {
        v11 = v8 - 4;
        if (v37)
        {
          v12 = MEMORY[0x1DF09EE48](v8 - 4, v6);
          v13 = v8 - 3;
          if (__OFADD__(v11, 1))
            goto LABEL_20;
        }
        else
        {
          v12 = *(_QWORD *)(v6 + 8 * v8);
          sub_1DA66BE60();
          v13 = v8 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v38 = v13;
        v39 = v4;
        v14 = objc_msgSend(v36, sel_buttonWithType_, 1);
        objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        swift_bridgeObjectRetain();
        v15 = (void *)sub_1DA66F88C();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setTitle_forState_, v15, 0);

        objc_msgSend(v14, sel_addTarget_action_forControlEvents_, v1, sel_handleButton_, 64);
        objc_msgSend(v14, sel_sizeToFit);
        v16 = objc_msgSend(v1, sel_view);
        if (!v16)
          break;
        v17 = v16;
        objc_msgSend(v16, sel_addSubview_, v14);

        v18 = objc_msgSend(v14, sel_topAnchor);
        v19 = sub_1DA5BD444();
        v20 = objc_msgSend(v19, v9[495]);

        v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, v5);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
        v22 = objc_msgSend(v14, (SEL)v9 + 909);
        v23 = objc_msgSend(v1, sel_view);
        if (!v23)
          goto LABEL_25;
        v24 = v23;
        v25 = objc_msgSend(v23, (SEL)v9 + 909);

        v26 = objc_msgSend(v22, (SEL)&selRef_constraintEqualToAnchor_ + 7, v25, -v5);
        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
        v27 = objc_msgSend(v14, sel_trailingAnchor);
        v28 = objc_msgSend(v27, (SEL)&selRef_constraintEqualToAnchor_ + 7, v39, v10);

        MEMORY[0x1DF09E464]();
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DA66FAC0();
        sub_1DA66FB14();
        sub_1DA66FAB4();
        v29 = v14;
        v30 = objc_msgSend(v29, sel_leadingAnchor);

        v10 = -*(double *)&v1[v34];
        objc_msgSend(*(id *)&v1[v33], sel_setObject_forKey_, v12, v29);
        swift_release();

        ++v8;
        v4 = v30;
        v6 = v35;
        v9 = &selRef_tintColorForTheme_;
        if (v38 == v7)
        {
          swift_bridgeObjectRelease();
          v4 = v30;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_23:
  v31 = (void *)objc_opt_self();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v32 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v32);

}

id ModalSheet.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DA66F88C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ModalSheet.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModalSheet.__deallocating_deinit()
{
  return sub_1DA5BEFB4(type metadata accessor for ModalSheet, (SEL *)&selRef_dealloc);
}

uint64_t ModalSheetWrapper.init(contentViewController:actions:height:)(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth) = 0x407C200000000000;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize) = 0x4085E00000000000;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController) = a1;
  *(double *)(v3 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height) = a3;
  return ModalSheet.init(actions:)(a2);
}

void sub_1DA5BE3C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  char *v5;
  char *v6;
  id v7;
  objc_super v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize];
  v4 = (objc_class *)type metadata accessor for SheetView();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR____TtC10PodcastsUI9SheetView_sizeRestrictions];
  *(_QWORD *)v6 = v1;
  *((_QWORD *)v6 + 1) = v2;
  *((_QWORD *)v6 + 2) = v3;
  *((_QWORD *)v6 + 3) = v2;
  v8.receiver = v5;
  v8.super_class = v4;
  v7 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setView_, v7);

}

void sub_1DA5BE5EC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t inited;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  BOOL v53;
  void *v54;
  objc_super v55;

  v55.receiver = v0;
  v55.super_class = (Class)type metadata accessor for ModalSheetWrapper();
  objc_msgSendSuper2(&v55, sel_viewDidLoad);
  v1 = *(void **)&v0[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController];
  v2 = objc_msgSend(v1, sel_view);
  if (!v2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
    return;
  v5 = v4;
  objc_msgSend(v0, sel_addChildViewController_, v1);
  v6 = objc_msgSend(v0, sel_view);
  if (!v6)
    goto LABEL_22;
  v7 = v6;
  objc_msgSend(v6, sel_addSubview_, v5);

  v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v8;
  v10 = sub_1DA5BECFC();
  objc_msgSend(v9, sel_addSubview_, v10);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DA67F560;
  v12 = sub_1DA5BECFC();
  v13 = objc_msgSend(v12, sel_widthAnchor);

  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_widthAnchor);

  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  v54 = v17;
  *(_QWORD *)(inited + 32) = v17;
  v18 = sub_1DA5BECFC();
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = sub_1DA5BD444();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, -1.0);
  *(_QWORD *)(inited + 40) = v22;
  v23 = sub_1DA5BECFC();
  v24 = objc_msgSend(v23, sel_heightAnchor);

  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 1.0);
  *(_QWORD *)(inited + 48) = v25;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1DA67E620;
  v27 = objc_msgSend(v5, sel_leadingAnchor);
  v28 = objc_msgSend(v0, sel_view);
  if (!v28)
  {
LABEL_25:
    swift_setDeallocating();
    swift_arrayDestroy();
    __break(1u);
    goto LABEL_26;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, sel_leadingAnchor);

  v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v26 + 32) = v31;
  v32 = objc_msgSend(v5, sel_trailingAnchor);
  v33 = objc_msgSend(v0, (SEL)&selRef_setFillMode_);
  if (!v33)
  {
LABEL_26:
    swift_setDeallocating();
    swift_arrayDestroy();
    __break(1u);
    return;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, sel_trailingAnchor);

  v36 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v35);
  *(_QWORD *)(v26 + 40) = v36;
  v37 = objc_msgSend(v5, sel_topAnchor);
  v38 = sub_1DA5BD444();
  v39 = objc_msgSend(v38, sel_topAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v26 + 48) = v40;
  v41 = objc_msgSend(v5, sel_bottomAnchor);
  v42 = sub_1DA5BD444();
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(_QWORD *)(v26 + 56) = v44;
  sub_1DA66FAB4();
  if (!(v26 >> 62))
  {
    v45 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v46 = v45 + 3;
    if (!__OFADD__(v45, 3))
      goto LABEL_10;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v52 = sub_1DA6705A0();
  v53 = __OFADD__(v52, 3);
  v46 = v52 + 3;
  if (v53)
    goto LABEL_19;
LABEL_10:
  sub_1DA5BFB8C(v46, 1);
  sub_1DA66FAB4();
  v47 = v54;
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_20:
    sub_1DA66FAC0();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  v48 = v22;
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DA66FAC0();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  v49 = v25;
  MEMORY[0x1DF09E464]();
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DA66FAC0();
  v50 = (void *)objc_opt_self();
  sub_1DA66FB14();
  sub_1DA66FAB4();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DA47D774(0, (unint64_t *)&qword_1EDADE8E0);
  v51 = (void *)sub_1DA66FA90();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v51);

}

id sub_1DA5BECFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1DA5BEDBC()
{
  return sub_1DA5BEFB4(type metadata accessor for ModalSheetWrapper, (SEL *)&selRef_viewWillLayoutSubviews);
}

void sub_1DA5BEE0C(char a1)
{
  void *v1;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ModalSheetWrapper();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1 & 1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_animated_, 1, 0);

  }
}

void ModalSheetWrapper.__allocating_init(actions:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ModalSheetWrapper.init(actions:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1DA5BEF74()
{
  uint64_t v0;

}

id ModalSheetWrapper.__deallocating_deinit()
{
  return sub_1DA5BEFB4(type metadata accessor for ModalSheetWrapper, (SEL *)&selRef_dealloc);
}

id sub_1DA5BEFB4(uint64_t (*a1)(void), SEL *a2)
{
  void *v2;
  objc_super v5;

  v5.receiver = v2;
  v5.super_class = (Class)a1();
  return objc_msgSendSuper2(&v5, *a2);
}

uint64_t type metadata accessor for ModalSheet()
{
  return objc_opt_self();
}

uint64_t sub_1DA5BF044(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1DA5E7540();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DA5BF0BC(v6);
  return sub_1DA6704C8();
}

uint64_t sub_1DA5BF0BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;
  uint64_t v108;

  v2 = v1;
  v4 = a1[1];
  result = sub_1DA670678();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_157;
    if (v4)
      return sub_1DA5BF7E8(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_165;
  v7 = result;
  v102 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v108 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_123:
      v94 = v10;
      if (v13 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v13 - 2;
          if (v13 < 2)
            goto LABEL_152;
          if (!v95)
            goto LABEL_164;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v13 + 24];
          sub_1DA5BF8BC((char *)(v95 + 8 * v98), (char *)(v95 + 8 * *(_QWORD *)&v94[16 * v13 + 16]), v95 + 8 * v99, __dst);
          if (v2)
            break;
          if (v99 < v98)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1DA5E752C((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_154;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v13 > v101)
            goto LABEL_155;
          memmove(&v97[16 * v13 + 16], &v97[16 * v13 + 32], 16 * (v101 - v13));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v13 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_120:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DA66FAB4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for ModalSheet.Action();
    v9 = sub_1DA66FB08();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v108 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v103 = v12 - 8;
  v104 = v7;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v4;
  v106 = v12;
  while (1)
  {
    v14 = v11++;
    if (v11 >= v4)
      goto LABEL_38;
    v15 = *(_QWORD *)(v12 + 8 * v11);
    v16 = *(_QWORD *)(v12 + 8 * v14);
    v17 = *(unsigned __int8 *)(v15 + 16);
    v18 = *(unsigned __int8 *)(v16 + 16);
    if (v17 == v18)
      break;
    v20 = v17 < v18;
LABEL_23:
    v21 = v14 + 2;
    if (v14 + 2 < v4)
      goto LABEL_29;
LABEL_37:
    v11 = v21;
    if ((v20 & 1) != 0)
      goto LABEL_41;
LABEL_38:
    if (v11 < v4)
      goto LABEL_49;
LABEL_72:
    if (v11 < v14)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1DA5E7198(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v44 = *((_QWORD *)v10 + 2);
    v43 = *((_QWORD *)v10 + 3);
    v13 = v44 + 1;
    if (v44 >= v43 >> 1)
      v10 = sub_1DA5E7198((char *)(v43 > 1), v44 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v45 = v10 + 32;
    v46 = &v10[16 * v44 + 32];
    *(_QWORD *)v46 = v14;
    *((_QWORD *)v46 + 1) = v11;
    if (v44)
    {
      v12 = v106;
      while (1)
      {
        v47 = v13 - 1;
        if (v13 >= 4)
        {
          v52 = &v45[16 * v13];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_140;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_141;
          v59 = v13 - 2;
          v60 = &v45[16 * v13 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_143;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_146;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_150;
            v75 = v50 < v85;
            goto LABEL_110;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v76 = *((_QWORD *)v10 + 4);
            v77 = *((_QWORD *)v10 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_104;
          }
          v49 = *((_QWORD *)v10 + 4);
          v48 = *((_QWORD *)v10 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_142;
        v59 = v13 - 2;
        v65 = &v45[16 * v13 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_145;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_148;
        if (__OFADD__(v69, v74))
          goto LABEL_149;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_110:
          if (v75)
            v47 = v59;
          goto LABEL_112;
        }
LABEL_104:
        if ((v70 & 1) != 0)
          goto LABEL_144;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_147;
        if (v81 < v69)
          goto LABEL_14;
LABEL_112:
        v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!v12)
          goto LABEL_162;
        v87 = v10;
        v88 = v12;
        v89 = &v45[16 * v86];
        v90 = *(_QWORD *)v89;
        v91 = &v45[16 * v47];
        v92 = *((_QWORD *)v91 + 1);
        sub_1DA5BF8BC((char *)(v88 + 8 * *(_QWORD *)v89), (char *)(v88 + 8 * *(_QWORD *)v91), v88 + 8 * v92, __dst);
        if (v1)
          goto LABEL_120;
        if (v92 < v90)
          goto LABEL_137;
        if (v47 > *((_QWORD *)v87 + 2))
          goto LABEL_138;
        *(_QWORD *)v89 = v90;
        *(_QWORD *)&v45[16 * v86 + 8] = v92;
        v93 = *((_QWORD *)v87 + 2);
        if (v47 >= v93)
          goto LABEL_139;
        v10 = v87;
        v13 = v93 - 1;
        memmove(&v45[16 * v47], v91 + 16, 16 * (v93 - 1 - v47));
        *((_QWORD *)v87 + 2) = v93 - 1;
        v75 = v93 > 2;
        v12 = v106;
        if (!v75)
          goto LABEL_14;
      }
    }
    v13 = 1;
    v12 = v106;
LABEL_14:
    v4 = v105;
    if (v11 >= v105)
    {
      v2 = v1;
      goto LABEL_123;
    }
  }
  if (*(_QWORD *)(v15 + 40) != *(_QWORD *)(v16 + 40) || *(_QWORD *)(v15 + 48) != *(_QWORD *)(v16 + 48))
  {
    v20 = sub_1DA6706D8();
    goto LABEL_23;
  }
  v21 = v14 + 2;
  if (v14 + 2 >= v4)
    goto LABEL_48;
  v20 = 0;
  do
  {
LABEL_29:
    v23 = *(_QWORD *)(v12 + 8 * v21);
    v24 = *(_QWORD *)(v12 + 8 * v11);
    v25 = *(unsigned __int8 *)(v23 + 16);
    v26 = *(unsigned __int8 *)(v24 + 16);
    if (v25 == v26)
    {
      if (*(_QWORD *)(v23 + 40) == *(_QWORD *)(v24 + 40) && *(_QWORD *)(v23 + 48) == *(_QWORD *)(v24 + 48))
      {
        if ((v20 & 1) != 0)
          goto LABEL_41;
      }
      else if (((v20 ^ sub_1DA6706D8()) & 1) != 0)
      {
        goto LABEL_37;
      }
    }
    else if (((v20 ^ (v25 < v26)) & 1) != 0)
    {
      goto LABEL_37;
    }
    v22 = v21 + 1;
    v11 = v21;
    v21 = v22;
  }
  while (v22 < v4);
  v21 = v22;
  v11 = v22;
  if ((v20 & 1) == 0)
    goto LABEL_38;
LABEL_41:
  if (v21 < v14)
    goto LABEL_160;
  if (v14 < v21)
  {
    v28 = (uint64_t *)(v103 + 8 * v21);
    v29 = v21;
    v30 = v14;
    v31 = (uint64_t *)(v12 + 8 * v14);
    do
    {
      if (v30 != --v29)
      {
        if (!v12)
          goto LABEL_163;
        v32 = *v31;
        *v31 = *v28;
        *v28 = v32;
      }
      ++v30;
      --v28;
      ++v31;
    }
    while (v30 < v29);
  }
LABEL_48:
  v11 = v21;
  if (v21 >= v4)
    goto LABEL_72;
LABEL_49:
  if (__OFSUB__(v11, v14))
    goto LABEL_156;
  if (v11 - v14 >= v104)
    goto LABEL_72;
  if (__OFADD__(v14, v104))
    goto LABEL_158;
  if (v14 + v104 >= v4)
    v33 = v4;
  else
    v33 = v14 + v104;
  if (v33 >= v14)
  {
    if (v11 != v33)
    {
      v34 = (_QWORD *)(v103 + 8 * v11);
      do
      {
        v35 = *(_QWORD *)(v12 + 8 * v11);
        v36 = v14;
        v37 = v34;
        do
        {
          v38 = *v37;
          v39 = *(unsigned __int8 *)(v35 + 16);
          v40 = *(unsigned __int8 *)(*v37 + 16);
          if (v39 == v40)
          {
            v41 = *(_QWORD *)(v35 + 40) == *(_QWORD *)(v38 + 40) && *(_QWORD *)(v35 + 48) == *(_QWORD *)(v38 + 48);
            if (v41 || (sub_1DA6706D8() & 1) == 0)
              break;
          }
          else if (v39 >= v40)
          {
            break;
          }
          if (!v12)
            goto LABEL_161;
          v42 = *v37;
          v35 = v37[1];
          *v37 = v35;
          v37[1] = v42;
          --v37;
          ++v36;
        }
        while (v11 != v36);
        ++v11;
        ++v34;
      }
      while (v11 != v33);
      v11 = v33;
    }
    goto LABEL_72;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_1DA670564();
  __break(1u);
  return result;
}

uint64_t sub_1DA5BF7E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
LABEL_5:
    v9 = *(_QWORD *)(v7 + 8 * v4);
    v10 = v6;
    v11 = (_QWORD *)v8;
    while (1)
    {
      v12 = *v11;
      v13 = *(unsigned __int8 *)(v9 + 16);
      v14 = *(unsigned __int8 *)(*v11 + 16);
      if (v13 == v14)
      {
        result = *(_QWORD *)(v9 + 40);
        v15 = result == *(_QWORD *)(v12 + 40) && *(_QWORD *)(v9 + 48) == *(_QWORD *)(v12 + 48);
        if (v15 || (result = sub_1DA6706D8(), (result & 1) == 0))
        {
LABEL_4:
          ++v4;
          v8 += 8;
          if (v4 == a2)
            return result;
          goto LABEL_5;
        }
      }
      else if (v13 >= v14)
      {
        goto LABEL_4;
      }
      if (!v7)
        break;
      v16 = *v11;
      v9 = v11[1];
      *v11 = v9;
      v11[1] = v16;
      --v11;
      if (v4 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5BF8BC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  BOOL v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  BOOL v30;
  uint64_t result;
  char *v32;
  const void *v33;
  char *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v34 = __src;
  v33 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_55;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v21 = &v4[8 * v13];
    v32 = v21;
    v34 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_54:
      sub_1DA5E7290((void **)&v34, &v33, &v32);
      return 1;
    }
    v22 = (char *)(a3 - 8);
    v23 = v6;
    while (1)
    {
      v24 = *((_QWORD *)v21 - 1);
      v25 = v22 + 8;
      v27 = *((_QWORD *)v23 - 1);
      v23 -= 8;
      v26 = v27;
      v28 = *(unsigned __int8 *)(v24 + 16);
      v29 = *(unsigned __int8 *)(v27 + 16);
      if (v28 == v29)
      {
        v30 = *(_QWORD *)(v24 + 40) == *(_QWORD *)(v26 + 40) && *(_QWORD *)(v24 + 48) == *(_QWORD *)(v26 + 48);
        if (v30 || (sub_1DA6706D8() & 1) == 0)
        {
LABEL_42:
          v32 = v21 - 8;
          if (v25 < v21 || v22 >= v21 || v25 != v21)
            *(_QWORD *)v22 = *((_QWORD *)v21 - 1);
          v23 = v6;
          v21 -= 8;
          if (v6 <= v7)
            goto LABEL_54;
          goto LABEL_53;
        }
      }
      else if (v28 >= v29)
      {
        goto LABEL_42;
      }
      if (v25 != v6 || v22 >= v6)
        *(_QWORD *)v22 = *(_QWORD *)v23;
      v34 = v23;
      if (v23 <= v7)
        goto LABEL_54;
LABEL_53:
      v22 -= 8;
      v6 = v23;
      if (v21 <= v4)
        goto LABEL_54;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = *(_QWORD *)v4;
        v17 = *(unsigned __int8 *)(*(_QWORD *)v6 + 16);
        v18 = *(unsigned __int8 *)(*(_QWORD *)v4 + 16);
        if (v17 == v18)
        {
          v19 = *(_QWORD *)(v15 + 40) == *(_QWORD *)(v16 + 40) && *(_QWORD *)(v15 + 48) == *(_QWORD *)(v16 + 48);
          if (!v19 && (sub_1DA6706D8() & 1) != 0)
          {
LABEL_22:
            v20 = v6 + 8;
            if (v7 < v6 || v7 >= v20 || v7 != v6)
              *(_QWORD *)v7 = *(_QWORD *)v6;
            goto LABEL_26;
          }
        }
        else if (v17 < v18)
        {
          goto LABEL_22;
        }
        if (v7 != v4)
          *(_QWORD *)v7 = *(_QWORD *)v4;
        v4 += 8;
        v33 = v4;
        v20 = v6;
LABEL_26:
        v7 += 8;
        if (v4 < v14)
        {
          v6 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v34 = v7;
        goto LABEL_54;
      }
    }
    goto LABEL_54;
  }
LABEL_55:
  result = sub_1DA6705DC();
  __break(1u);
  return result;
}

uint64_t sub_1DA5BFB8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1DF09EE54](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t _s10PodcastsUI10ModalSheetC25presentableViewController_6heightSo06UIViewG0CAG_12CoreGraphics7CGFloatVtFZ_0(void *a1, double a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2240);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DA67B2A0;
  v5 = sub_1DA66D2F4();
  v7 = v6;
  type metadata accessor for ModalSheet.Action();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v7;
  *(_BYTE *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = sub_1DA5BD7E4;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v4 + 32) = v8;
  sub_1DA66FAB4();
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for ModalSheetWrapper());
  *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_minWidth] = 0x407C200000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_maxSize] = 0x4085E00000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_contentViewController] = a1;
  *(double *)&v9[OBJC_IVAR____TtC10PodcastsUI17ModalSheetWrapper_height] = a2;
  v10 = a1;
  return ModalSheet.init(actions:)(v4);
}

void _s10PodcastsUI10ModalSheetC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardEdgeSpacing] = 0x4034000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet_standardControlSpacing] = 0x4020000000000000;
  v1 = OBJC_IVAR____TtC10PodcastsUI10ModalSheet_buttonToAction;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_mapTableWithKeyOptions_valueOptions_, 5, 5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide] = 0;

  sub_1DA670570();
  __break(1u);
}

uint64_t type metadata accessor for ModalSheetWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1DA5BFE48()
{
  unint64_t result;

  result = qword_1F026C2F0;
  if (!qword_1F026C2F0)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for ModalSheet.Action.ActionType, &type metadata for ModalSheet.Action.ActionType);
    atomic_store(result, (unint64_t *)&qword_1F026C2F0);
  }
  return result;
}

id sub_1DA5BFE8C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1DA5BD444();
  *a1 = result;
  return result;
}

void sub_1DA5BFEB4(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC10PodcastsUI10ModalSheet____lazy_storage___marginGuide) = *a1;
  v3 = v2;

}

uint64_t method lookup function for ModalSheet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModalSheet.__allocating_init(actions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ModalSheet.marginGuide.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ModalSheet.dismiss()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t type metadata accessor for ModalSheet.Action()
{
  return objc_opt_self();
}

uint64_t method lookup function for ModalSheet.Action()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModalSheet.Action.__allocating_init(title:type:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for ModalSheet.Action.ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA5BFFF4 + 4 * byte_1DA680305[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA5C0028 + 4 * byte_1DA680300[v4]))();
}

uint64_t sub_1DA5C0028(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5C0030(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5C0038);
  return result;
}

uint64_t sub_1DA5C0044(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5C004CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA5C0050(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5C0058(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModalSheet.Action.ActionType()
{
  return &type metadata for ModalSheet.Action.ActionType;
}

uint64_t method lookup function for ModalSheetWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModalSheetWrapper.__allocating_init(contentViewController:actions:height:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1DA5C0088()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DA5C00AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5C00D0()
{
  sub_1DA66DF30();
  JUMPOUT(0x1DF0A039CLL);
}

unint64_t sub_1DA5C00F8()
{
  unint64_t result;

  result = qword_1EDAE1470;
  if (!qword_1EDAE1470)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PageRenderResourceError, &type metadata for PageRenderResourceError);
    atomic_store(result, (unint64_t *)&qword_1EDAE1470);
  }
  return result;
}

uint64_t sub_1DA5C013C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageRenderEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5C0180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageRenderActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t InMemoryPlaybackPositionTracker.__allocating_init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t InMemoryPlaybackPositionTracker.init(thinClientEpisodeStateRepository:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t InMemoryPlaybackPositionTracker.__allocating_init(asPartOf:)()
{
  uint64_t result;
  uint64_t v1;

  sub_1DA66DBE8();
  sub_1DA66EDDC();
  swift_release();
  type metadata accessor for InMemoryPlaybackPositionTracker();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t type metadata accessor for InMemoryPlaybackPositionTracker()
{
  return objc_opt_self();
}

void sub_1DA5C027C(_QWORD *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _BYTE *v36;
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  void (*v40)(void *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;

  v39 = (_BYTE *)a3;
  v40 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v43 = &v37[-v8];
  v9 = type metadata accessor for LazyDate.State();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1DA66C430();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1DA66D1BC();
  v41 = *(_QWORD *)(v16 - 8);
  v42 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = &v37[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1DA5BBB94(v19, v20);
  if ((v22 & 1) != 0)
  {
    sub_1DA5649F0();
    v35 = (void *)swift_allocError();
    *v36 = 0;
    v40(v35, 1);

  }
  else
  {
    v39 = v6;
    v40 = (void (*)(void *, uint64_t))v21;
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    v25 = (*(double (**)(uint64_t, uint64_t))(v24 + 64))(v23, v24) * 1000.0;
    v26 = a1[3];
    v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 80))(v26, v27);
    sub_1DA66C418();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v11, v15, v12);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00A8);
    v28 = swift_allocObject();
    *(_DWORD *)(v28 + ((*(unsigned int *)(*(_QWORD *)v28 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_1DA484504((uint64_t)v11, v28 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v28 + 16), (uint64_t (*)(_QWORD))type metadata accessor for LazyDate.State);
    sub_1DA47F880((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LazyDate.State);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    v29 = a1[3];
    v30 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v29);
    v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
    EpisodePlayState.init(positionInMilliseconds:completed:recordedDate:duration:)(v38 & 1, v28, (uint64_t)v18, v25, v31);
    v32 = MEMORY[0x1E0D7E168];
    v33 = (uint64_t)v39;
    sub_1DA484504((uint64_t)v18, (uint64_t)v39, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7E168]);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v33, 0, 1, v42);
    v34 = (uint64_t)v43;
    sub_1DA66DBD0();
    sub_1DA5C0674(v33);
    sub_1DA5C0674(v34);
    sub_1DA47F880((uint64_t)v18, (uint64_t (*)(_QWORD))v32);
  }
}

uint64_t InMemoryPlaybackPositionTracker.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t InMemoryPlaybackPositionTracker.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1DA5C0654(_QWORD *a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  sub_1DA5C027C(a1, a2, a3);
}

uint64_t sub_1DA5C0674(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADED78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for InMemoryPlaybackPositionTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.__allocating_init(thinClientEpisodeStateRepository:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.shouldTrackPosition(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of InMemoryPlaybackPositionTracker.updatePlaybackPosition(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1DA5C06E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1DA66FB98();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DA66FB8C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DA4F1538(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA66FB38();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1DA66F5F8();
  return swift_task_create();
}

uint64_t sub_1DA5C0808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1DA66FB98();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DA66FB8C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1DA4F1538(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA66FB38();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6C0);
  return swift_task_create();
}

uint64_t sub_1DA5C0934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1DA66FB98();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DA66FB8C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1DA4F1538(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DA66FB38();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1DA5C0A60()
{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_1DA5C0AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  void *v24;
  uint64_t v25[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D018();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v25[-1] - v12);
  v24 = *(void **)a2;
  v14 = *(_BYTE *)(a2 + 8);
  v15 = sub_1DA66C784();
  v25[3] = v15;
  v25[4] = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D568], v15);
  LOBYTE(v15) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  if ((v15 & 1) != 0)
    sub_1DA5C1EAC(a1, (uint64_t)&unk_1EA0C6CB0);
  *v13 = a1;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v13, *MEMORY[0x1E0D7DF28], v7);
  swift_bridgeObjectRetain();
  sub_1DA66FB74();
  v17 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 0, 1, v17);
  v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, v13, v7);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *((_QWORD *)v20 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v10, v7);
  v21 = &v20[(v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8];
  v22 = v24;
  *(_QWORD *)v21 = v24;
  v21[8] = v14;
  sub_1DA5892CC(v22, v14);
  sub_1DA5C1400((uint64_t)v6, (uint64_t)&unk_1F026C4B8, (uint64_t)v20);
  swift_release();
  sub_1DA4F1538((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1DA5C0D04()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DA5C0D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  void *v24;
  uint64_t v25[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D018();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v25[-1] - v12);
  v24 = *(void **)a2;
  v14 = *(_BYTE *)(a2 + 8);
  v15 = sub_1DA66C784();
  v25[3] = v15;
  v25[4] = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D568], v15);
  LOBYTE(v15) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  if ((v15 & 1) != 0)
    sub_1DA5C1820(a1, (uint64_t)&unk_1EA0C6CD8);
  *v13 = a1;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v13, *MEMORY[0x1E0D7DF58], v7);
  swift_bridgeObjectRetain();
  sub_1DA66FB74();
  v17 = sub_1DA66FB98();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 0, 1, v17);
  v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, v13, v7);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  *((_QWORD *)v20 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v10, v7);
  v21 = &v20[(v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8];
  v22 = v24;
  *(_QWORD *)v21 = v24;
  v21[8] = v14;
  sub_1DA5892CC(v22, v14);
  sub_1DA5C1400((uint64_t)v6, (uint64_t)&unk_1F026C4C0, (uint64_t)v20);
  swift_release();
  sub_1DA4F1538((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1DA5C0F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 176) = a7;
  *(_QWORD *)(v7 + 112) = a5;
  *(_QWORD *)(v7 + 120) = a6;
  *(_QWORD *)(v7 + 104) = a4;
  *(_QWORD *)(v7 + 128) = _s12ErrorHandlerVMa();
  *(_QWORD *)(v7 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5C0FF0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t result;
  void *v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t *boxed_opaque_existential_1;
  char *v7;
  uint64_t v8;
  _QWORD *v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 144) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 152) = result;
    if (result)
    {
      v4 = *(_QWORD *)(v0 + 112);
      v3 = *(void **)(v0 + 120);
      v5 = *(_BYTE *)(v0 + 176);
      *(_QWORD *)(v0 + 40) = type metadata accessor for PlaybackController.QueueCommand();
      *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
      v7 = (char *)boxed_opaque_existential_1
         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
      v8 = sub_1DA66D018();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v4, v8);
      *(_QWORD *)v7 = v3;
      v7[8] = v5;
      swift_storeEnumTagMultiPayload();
      sub_1DA5892CC(v3, v5);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v9;
      *v9 = v0;
      v9[1] = sub_1DA5C1164;
      return sub_1DA54DF68(v0 + 16, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1DA5C1164(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1DA5C11F4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5C1230()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  result = swift_weakLoadStrong();
  if (result)
  {
    v2 = *(void **)(v0 + 168);
    v3 = *(_QWORD **)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC10PodcastsUI18PlaybackController_reachability);
    swift_unknownObjectRetain();
    swift_release();
    v6 = (char *)v3 + *(int *)(v4 + 20);
    v7 = sub_1DA66CFD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    *v3 = v2;
    *(_QWORD *)((char *)v3 + *(int *)(v4 + 24)) = v5;
    v8 = v2;
    sub_1DA5CE4D4();
    sub_1DA47F880((uint64_t)v3, (uint64_t (*)(_QWORD))_s12ErrorHandlerVMa);
    swift_willThrow();

    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C1340(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_1DA66D018() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1DA4A9520;
  return sub_1DA5C0F8C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1DA5C1400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4A8C24(a1, (uint64_t)v7);
  v8 = sub_1DA66FB98();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1DA4F1538((uint64_t)v7);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_1DA66FB8C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_1DA66FB38();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_1DA5C1570(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for PlaybackController.QueueCommand();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5C15CC()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  id v3;
  _QWORD *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = result;
  if (result)
  {
    v2 = *(void **)(v0 + 40);
    **(_QWORD **)(v0 + 64) = v2;
    swift_storeEnumTagMultiPayload();
    v3 = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_1DA5C1668;
    return sub_1DA550B14();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C1668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[11] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v4[12] = a1;
    v6 = (_QWORD *)swift_task_alloc();
    v4[13] = v6;
    *v6 = v4;
    v6[1] = sub_1DA5C1718;
    return PlaybackController.QueueCommand.canPerform(for:)(a1);
  }
}

uint64_t sub_1DA5C1718(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5C1774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);

  swift_release();
  sub_1DA47F880(v1, (uint64_t (*)(_QWORD))type metadata accessor for PlaybackController.QueueCommand);
  v2 = *(unsigned __int8 *)(v0 + 112);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1DA5C17D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  sub_1DA47F880(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for PlaybackController.QueueCommand);

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1DA5C1820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];
  unint64_t v44;

  v39 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v2;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_34:
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  v40 = (id)aBlock[0];
  if (aBlock[0])
  {
    v38 = *(_QWORD *)(a1 + 16);
    if (v38)
    {
      v37 = a1 + 32;
      v33[1] = a1;
      swift_bridgeObjectRetain();
      v6 = 0;
      v7 = 0x1F3DE7000uLL;
      while (1)
      {
        v8 = v7;
        v42 = *(_QWORD *)(v37 + 8 * v6);
        v44 = MEMORY[0x1E0DEE9D8];
        v9 = v40;
        v10 = objc_msgSend(v40, sel_displayItems);
        v11 = (_QWORD *)swift_allocObject();
        v11[2] = v39;
        v11[3] = &v44;
        v11[4] = v9;
        v12 = swift_allocObject();
        *(_QWORD *)(v12 + 16) = sub_1DA5C5920;
        *(_QWORD *)(v12 + 24) = v11;
        aBlock[4] = sub_1DA4E4158;
        aBlock[5] = v12;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DA5C3BAC;
        aBlock[3] = &block_descriptor_16;
        v13 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        v14 = v9;
        sub_1DA66BE60();
        swift_release();
        objc_msgSend(v10, sel_enumerateSectionsUsingBlock_, v13);

        _Block_release(v13);
        LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v10 & 1) != 0)
          break;
        v36 = v14;
        v15 = v44;
        swift_release();
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          v16 = sub_1DA6705A0();
          v7 = v8;
          if (v16)
          {
LABEL_10:
            v41 = v6;
            v17 = 4;
            while (1)
            {
              v19 = (v15 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x1DF09EE48](v17 - 4, v15)
                  : *(id *)(v15 + 8 * v17);
              v20 = v19;
              v21 = v17 - 3;
              if (__OFADD__(v17 - 4, 1))
                break;
              v22 = objc_msgSend(v19, sel_metadataObject);
              if (v22
                && (v23 = v22,
                    v24 = objc_msgSend(v22, (SEL)(v7 + 953)),
                    v23,
                    v24)
                && (v18 = objc_msgSend(v24, sel_anyObject), v24, v18))
              {
                objc_opt_self();
                v25 = (void *)swift_dynamicCastObjCClass();
                if (v25
                  && (v26 = objc_msgSend(v25, sel_identifiers),
                      v27 = objc_msgSend(v26, sel_universalStore),
                      v26,
                      v27))
                {
                  objc_msgSend(v27, sel_adamID);
                  swift_unknownObjectRelease();
                  v28 = sub_1DA66DCE4();

                  if (v28 == v42)
                  {
                    swift_bridgeObjectRelease_n();
                    v29 = sub_1DA66FB98();
                    v30 = (uint64_t)v34;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v34, 1, 1, v29);
                    v31 = (_QWORD *)swift_allocObject();
                    v31[2] = 0;
                    v31[3] = 0;
                    v31[4] = v35;
                    v31[5] = v20;
                    sub_1DA66BE60();
                    v32 = v20;
                    sub_1DA569804(v30, (uint64_t)&unk_1F026C4D8, (uint64_t)v31);

                    swift_release();
                    v6 = v41;
                    v7 = v8;
                    goto LABEL_6;
                  }
                  v18 = v20;
                }
                else
                {

                }
                v7 = v8;
              }
              else
              {
                v18 = v20;
              }

              ++v17;
              if (v21 == v16)
              {
                swift_bridgeObjectRelease_n();
                v6 = v41;
                goto LABEL_6;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          v7 = v8;
          if (v16)
            goto LABEL_10;
        }
        swift_bridgeObjectRelease_n();
LABEL_6:
        if (++v6 == v38)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
      goto LABEL_34;
    }

  }
}

uint64_t MPCPlayerResponseTracklist.itemsInSections(sections:)(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  _QWORD aBlock[6];
  uint64_t v12;

  v2 = v1;
  v12 = MEMORY[0x1E0DEE9D8];
  v4 = objc_msgSend(v1, sel_displayItems);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = a1;
  v5[3] = &v12;
  v5[4] = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1DA5C6408;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_1DA4E4438;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA5C3BAC;
  aBlock[3] = &block_descriptor_35;
  v7 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v8 = v2;
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v4, sel_enumerateSectionsUsingBlock_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

void sub_1DA5C1EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[6];
  unint64_t v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v2;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_39:
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  v50 = (id)aBlock[0];
  if (aBlock[0])
  {
    v48 = *(_QWORD *)(a1 + 16);
    if (v48)
    {
      v47 = a1 + 32;
      v44 = a1;
      swift_bridgeObjectRetain();
      v7 = 0;
      v8 = &selRef_ams_isActiveAccountCombined;
      v46 = a2;
      while (1)
      {
        v9 = (uint64_t *)(v47 + 16 * v7);
        v10 = v9[1];
        v53 = *v9;
        v56 = MEMORY[0x1E0DEE9D8];
        v54 = v10;
        swift_bridgeObjectRetain();
        v11 = v50;
        v12 = objc_msgSend(v50, sel_displayItems);
        v13 = (_QWORD *)swift_allocObject();
        v13[2] = a2;
        v13[3] = &v56;
        v13[4] = v11;
        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = sub_1DA5C6408;
        *(_QWORD *)(v14 + 24) = v13;
        aBlock[4] = sub_1DA4E4438;
        aBlock[5] = v14;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DA5C3BAC;
        aBlock[3] = &block_descriptor_46;
        v15 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        v51 = v11;
        sub_1DA66BE60();
        swift_release();
        objc_msgSend(v12, sel_enumerateSectionsUsingBlock_, v15);

        _Block_release(v15);
        LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v12 & 1) != 0)
          break;
        v16 = v56;
        swift_release();
        v52 = v7;
        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          v17 = sub_1DA6705A0();
          v18 = &selRef_ams_isActiveAccountCombined;
          if (v17)
          {
LABEL_8:
            v19 = 4;
            while (1)
            {
              v21 = (v16 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x1DF09EE48](v19 - 4, v16)
                  : *(id *)(v16 + 8 * v19);
              v22 = v21;
              v23 = v19 - 3;
              if (__OFADD__(v19 - 4, 1))
                break;
              v24 = objc_msgSend(v21, v8[169]);
              if (v24
                && (v25 = v24,
                    v26 = objc_msgSend(v24, v18[170]),
                    v25,
                    v26)
                && (v20 = objc_msgSend(v26, sel_anyObject), v26, v20))
              {
                objc_opt_self();
                v27 = (void *)swift_dynamicCastObjCClass();
                if (v27
                  && (v28 = objc_msgSend(v27, sel_identifiers),
                      v29 = objc_msgSend(v28, sel_library),
                      v28,
                      v29))
                {
                  v30 = objc_msgSend(v29, sel_databaseID);
                  swift_unknownObjectRelease();
                  v31 = sub_1DA66F8BC();
                  v33 = v32;

                  if (v31 == v53 && v33 == v54)
                  {
                    swift_bridgeObjectRelease();
                    v8 = &selRef_ams_isActiveAccountCombined;
LABEL_30:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v36 = sub_1DA66FB98();
                    v37 = (uint64_t)v45;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v45, 1, 1, v36);
                    v38 = (_QWORD *)swift_allocObject();
                    v38[2] = 0;
                    v38[3] = 0;
                    v38[4] = v49;
                    v38[5] = v22;
                    sub_1DA66BE60();
                    v39 = v22;
                    sub_1DA569804(v37, (uint64_t)&unk_1F026C4E0, (uint64_t)v38);

                    swift_release();
                    a2 = v46;
                    goto LABEL_33;
                  }
                  v35 = sub_1DA6706D8();
                  swift_bridgeObjectRelease();
                  if ((v35 & 1) != 0)
                  {
                    v8 = &selRef_ams_isActiveAccountCombined;
                    goto LABEL_30;
                  }
                  v20 = v22;
                  v8 = &selRef_ams_isActiveAccountCombined;
                }
                else
                {

                }
                v18 = &selRef_ams_isActiveAccountCombined;
              }
              else
              {
                v20 = v22;
              }

              ++v19;
              if (v23 == v17)
                goto LABEL_32;
            }
            __break(1u);
            break;
          }
        }
        else
        {
          v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          v18 = &selRef_ams_isActiveAccountCombined;
          if (v17)
            goto LABEL_8;
        }
LABEL_32:
        swift_bridgeObjectRelease_n();
        sub_1DA66D000();
        v40 = swift_allocObject();
        swift_weakInit();
        v41 = (_QWORD *)swift_allocObject();
        v42 = v51;
        a2 = v46;
        v41[2] = v51;
        v41[3] = a2;
        v41[4] = v40;
        swift_bridgeObjectRetain();
        v43 = v42;
        sub_1DA66BE60();
        sub_1DA66CFF4();
        v8 = &selRef_ams_isActiveAccountCombined;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_33:
        v7 = v52 + 1;
        if (v52 + 1 == v48)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
      goto LABEL_39;
    }

  }
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1DA66D018();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1DA5893F0(*(id *)(v0 + v4), *(_BYTE *)(v0 + v4 + 8));
  return swift_deallocObject();
}

uint64_t sub_1DA5C2568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_1DA66D018() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = v10[8];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1DA4AD77C;
  return sub_1DA5C0F8C(a1, v6, v7, v8, v9, v11, v12);
}

void sub_1DA5C2628(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char **v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  _QWORD v32[2];
  id v33;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  *(_QWORD *)&v8 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v10 = (char **)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v33 = objc_msgSend(a1, sel_storeTrackId, v8);
    v11 = MPCPlayerResponseTracklist.itemsInSections(sections:)(a3);
    v12 = v11;
    if (v11 >> 62)
    {
LABEL_26:
      swift_bridgeObjectRetain();
      v13 = sub_1DA6705A0();
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_4:
        v32[0] = v10;
        v32[1] = a4 + 16;
        a4 = 4;
        v10 = &selRef_ams_isActiveAccountCombined;
        v14 = &selRef_ams_isActiveAccountCombined;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
            v16 = (id)MEMORY[0x1DF09EE48](a4 - 4, v12);
          else
            v16 = *(id *)(v12 + 8 * a4);
          v17 = v16;
          v18 = a4 - 3;
          if (__OFADD__(a4 - 4, 1))
          {
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          v19 = objc_msgSend(v16, v10[169]);
          if (v19
            && (v20 = v19, v21 = objc_msgSend(v19, v14[170]), v20, v21)
            && (v15 = objc_msgSend(v21, sel_anyObject), v21, v15))
          {
            v10 = v14;
            objc_opt_self();
            v22 = (void *)swift_dynamicCastObjCClass();
            if (v22
              && (v23 = objc_msgSend(v22, sel_identifiers),
                  v24 = objc_msgSend(v23, sel_universalStore),
                  v23,
                  v24))
            {
              objc_msgSend(v24, sel_adamID);
              swift_unknownObjectRelease();
              v25 = sub_1DA66DCE4();

              if (v25 < 0)
                goto LABEL_25;
              if ((id)v25 == v33)
              {
                swift_bridgeObjectRelease_n();
                swift_beginAccess();
                Strong = swift_weakLoadStrong();
                if (Strong)
                {
                  v27 = Strong;
                  v28 = sub_1DA66FB98();
                  v29 = v32[0];
                  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v32[0], 1, 1, v28);
                  v30 = (_QWORD *)swift_allocObject();
                  v30[2] = 0;
                  v30[3] = 0;
                  v30[4] = v27;
                  v30[5] = v17;
                  sub_1DA66BE60();
                  v31 = v17;
                  sub_1DA569804(v29, (uint64_t)&unk_1F026C6B0, (uint64_t)v30);
                  swift_release();

                  swift_release();
                }
                else
                {

                }
                return;
              }
              v14 = v10;
              v15 = v17;
            }
            else
            {

              v14 = v10;
            }
            v10 = &selRef_ams_isActiveAccountCombined;
          }
          else
          {
            v15 = v17;
          }

          ++a4;
        }
        while (v18 != v13);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

void sub_1DA5C2954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    v8 = v17;
    if (v17)
    {
      v9 = objc_msgSend(v17, sel_items);
      v10 = objc_msgSend(v9, sel_allItems);

      sub_1DA47D774(0, &qword_1F026C4E8);
      v11 = sub_1DA66FA9C();

      swift_bridgeObjectRetain();
      v12 = sub_1DA5C5C14(v11, a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        v13 = sub_1DA66FB98();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
        v14 = (_QWORD *)swift_allocObject();
        v14[2] = 0;
        v14[3] = 0;
        v14[4] = v2;
        v14[5] = v12;
        sub_1DA66BE60();
        v15 = v12;
        sub_1DA569804((uint64_t)v7, (uint64_t)&unk_1F026C4F0, (uint64_t)v14);

        swift_release();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DA5C2B68(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66FB98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = a1;
  sub_1DA66BE60();
  v8 = a1;
  sub_1DA569804((uint64_t)v5, (uint64_t)&unk_1F026C4F8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1DA5C2C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = a5;
  v6 = sub_1DA66DEF4();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = type metadata accessor for PlaybackController.QueueCommand();
  v5[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5C2CB4()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  id v3;
  _QWORD *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 152) = result;
  if (result)
  {
    v2 = *(void **)(v0 + 104);
    **(_QWORD **)(v0 + 144) = v2;
    swift_storeEnumTagMultiPayload();
    v3 = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v4;
    *v4 = v0;
    v4[1] = sub_1DA5C2D50;
    return sub_1DA550B14();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C2D50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[21] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v4[22] = a1;
    v6 = (_QWORD *)swift_task_alloc();
    v4[23] = v6;
    *v6 = v4;
    v6[1] = sub_1DA5C2E00;
    return PlaybackController.QueueCommand.canPerform(for:)(a1);
  }
}

uint64_t sub_1DA5C2E00(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 216) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5C2E5C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  id v5;
  _QWORD *v6;

  v1 = *(unsigned __int8 *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 144);

  swift_release();
  sub_1DA47F880(v2, (uint64_t (*)(_QWORD))type metadata accessor for PlaybackController.QueueCommand);
  if (v1 == 1)
  {
    result = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 192) = result;
    if (result)
    {
      v4 = *(void **)(v0 + 104);
      *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.QueueCommand;
      *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16)) = (uint64_t)v4;
      swift_storeEnumTagMultiPayload();
      v5 = v4;
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v6;
      *v6 = v0;
      v6[1] = sub_1DA5C2FB8;
      return sub_1DA54DF68(v0 + 16, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1DA5C2F60()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  sub_1DA47F880(*(_QWORD *)(v0 + 144), (uint64_t (*)(_QWORD))type metadata accessor for PlaybackController.QueueCommand);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5C2FB8(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 208) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
    return swift_task_switch();

  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA5C3060()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1DA66DE34();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_1DA66DEDC();
  v8 = sub_1DA66FDA8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 208);
    v26 = *(_QWORD *)(v0 + 120);
    v10 = *(void **)(v0 + 104);
    v27 = *(_QWORD *)(v0 + 112);
    v28 = *(_QWORD *)(v0 + 128);
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v29 = v25;
    *(_DWORD *)v11 = 136446466;
    v13 = objc_msgSend(v10, sel_contentItemIdentifier);
    v14 = sub_1DA66F8BC();
    v16 = v15;

    *(_QWORD *)(v0 + 80) = sub_1DA49AD00(v14, v16, &v29);
    sub_1DA6702C4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    v17 = v9;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v18;
    sub_1DA6702C4();
    *v12 = v18;

    _os_log_impl(&dword_1DA478000, v7, v8, "Failed to remove item %{public}s from queue with error %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v25, -1, -1);
    MEMORY[0x1DF0A0474](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(void **)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 128);
    v23 = *(void **)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5C3310()
{
  return sub_1DA5C3334((uint64_t)&unk_1EA0C6D00);
}

uint64_t MPCPlayerResponseTracklist.hasHardQueue.getter()
{
  return sub_1DA5C3440((uint64_t)&unk_1EA0C6D28);
}

uint64_t sub_1DA5C3328()
{
  return sub_1DA5C3334((uint64_t)&unk_1EA0C6D50);
}

uint64_t sub_1DA5C3334(uint64_t a1)
{
  uint64_t result;
  char v3;
  void *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if (v4)
    {
      MPCPlayerResponseTracklist.itemsInSections(sections:)(a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C500);
      sub_1DA5C5DC0();
      v3 = sub_1DA66FCDC();

      swift_bridgeObjectRelease();
    }
    else
    {
      v3 = 0;
    }
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MPCPlayerResponseTracklist.hasSoftQueue.getter()
{
  return sub_1DA5C3440((uint64_t)&unk_1EA0C6D78);
}

uint64_t sub_1DA5C3440(uint64_t a1)
{
  char v1;

  MPCPlayerResponseTracklist.itemsInSections(sections:)(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C500);
  sub_1DA5C5DC0();
  v1 = sub_1DA66FCDC();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1DA5C34A8()
{
  if ((sub_1DA5C3310() & 1) != 0)
    return 1;
  else
    return sub_1DA5C3328();
}

uint64_t sub_1DA5C34CC(char *a1, void *a2)
{
  char v3;
  uint64_t result;
  void *v5;
  char v6;
  void *v7;

  v3 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    v5 = v7;
    if (v7)
    {
      LOBYTE(v7) = v3;
      v6 = MPCPlayerResponseTracklist.queueSectionContainsItem(queueSection:item:)((char *)&v7, a2);

    }
    else
    {
      v6 = 0;
    }
    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MPCPlayerResponseTracklist.queueSectionContainsItem(queueSection:item:)(char *a1, void *a2)
{
  void *v2;
  void *v3;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  _QWORD aBlock[6];
  unsigned __int8 v15;

  v3 = v2;
  v5 = *a1;
  v15 = 0;
  v6 = objc_msgSend(v2, sel_displayItems);
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v3;
  *(_QWORD *)(v7 + 32) = &v15;
  *(_QWORD *)(v7 + 40) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1DA5C5E38;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1DA4E4438;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DA5C3BAC;
  aBlock[3] = &block_descriptor_75;
  v9 = _Block_copy(aBlock);
  v10 = v3;
  v11 = a2;
  sub_1DA66BE60();
  swift_release();
  objc_msgSend(v6, sel_enumerateSectionsUsingBlock_, v9);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = v15;
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1DA5C371C()
{
  uint64_t v0;
  uint64_t result;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  char isEscapingClosureAtFileLocation;
  void (*v7)(uint64_t, uint64_t, _BYTE *);
  uint64_t v8;
  id aBlock[6];
  _QWORD v10[2];

  v10[0] = 0;
  v10[1] = 0;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if (!aBlock[0])
    {
      v8 = 0;
      v7 = 0;
      goto LABEL_6;
    }
    v2 = objc_msgSend(aBlock[0], sel_displayItems);

    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    *(_QWORD *)(v3 + 24) = v10;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = sub_1DA5C5E7C;
    v4[3] = v3;
    aBlock[4] = sub_1DA4E4438;
    aBlock[5] = v4;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DA5C3BAC;
    aBlock[3] = &block_descriptor_85;
    v5 = _Block_copy(aBlock);
    sub_1DA66BE60();
    sub_1DA66BE60();
    swift_release();
    objc_msgSend(v2, sel_enumerateSectionsUsingBlock_, v5);

    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v7 = sub_1DA5C5E7C;
      v8 = v10[0];
LABEL_6:
      sub_1DA4EFFCC((uint64_t)v7);
      return v8;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DA5C3914(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t *a5)
{
  void *v8;
  char v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21[24];

  sub_1DA66F8BC();
  v8 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v8, v21);
  if (v21[0] != 2)
  {
    if ((v21[0] & 1) != 0)
    {
      v9 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
        return;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (!swift_weakLoadStrong())
      goto LABEL_20;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if (v20)
    {
      v10 = objc_msgSend(v20, sel_displayItems);

      v11 = objc_msgSend(v10, sel_itemsInSectionAtIndex_, a2);
      sub_1DA47D774(0, &qword_1F026C4E8);
      v12 = sub_1DA66FA9C();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        v19 = sub_1DA6705A0();
        swift_bridgeObjectRelease();
        if (v19)
          goto LABEL_9;
      }
      else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = (id)MEMORY[0x1DF09EE48](0, v12);
          goto LABEL_12;
        }
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v13 = *(id *)(v12 + 32);
LABEL_12:
          v14 = v13;
          swift_bridgeObjectRelease();
          v15 = objc_msgSend(v14, sel_contentItemIdentifier);

          v16 = sub_1DA66F8BC();
          v18 = v17;

          *a5 = v16;
          a5[1] = v18;
LABEL_16:
          swift_bridgeObjectRelease();
          *a3 = 1;
          return;
        }
        __break(1u);
LABEL_20:
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease();
    }
    *a5 = 0;
    a5[1] = 0;
    goto LABEL_16;
  }
}

void sub_1DA5C3BAC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_1DA5C3BF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5C3C10()
{
  uint64_t v0;
  uint64_t result;
  _QWORD *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = result;
  if (result)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 16) = 5;
    *(_BYTE *)(v0 + 24) = 2;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_1DA5C3CB8;
    return sub_1DA54DF68(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C3CB8(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 104) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
    return swift_task_switch();

  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA5C3D50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5C3D68()
{
  uint64_t v0;
  uint64_t result;
  _QWORD *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = result;
  if (result)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 24) = 0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_1DA5C3CB8;
    return sub_1DA54DF68(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C3E08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch();
}

uint64_t sub_1DA5C3E20()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 40) = &unk_1EA0C6DA0;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if ((*(_BYTE *)(v0 + 88) & 1) == 0)
      sub_1DA54522C(0, 0, 0, 2);
    result = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 56) = result;
    if (result)
    {
      v2 = sub_1DA517F98(*(_QWORD *)(v0 + 40));
      *(_QWORD *)(v0 + 64) = v2;
      swift_bridgeObjectRelease();
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v3;
      *v3 = v0;
      v3[1] = sub_1DA5C3F5C;
      return sub_1DA54F8E8(v2, 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5C3F5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t PlaybackController.QueueController.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t PlaybackController.QueueController.__deallocating_deinit()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

void PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14[5];

  v4 = sub_1DA66C784();
  v14[3] = v4;
  v14[4] = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D568], v4);
  LOBYTE(v4) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  if ((v4 & 1) != 0 && !a2)
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
LABEL_13:
      __break(1u);
      return;
    }
    sub_1DA54D828();
    swift_release();
    sub_1DA5C1EAC((uint64_t)a1, (uint64_t)&unk_1EA0C6DD0);
    swift_release();
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    __break(1u);
    goto LABEL_13;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  if (v13)
  {
    v6 = objc_msgSend(v13, sel_identifiers);
    v7 = objc_msgSend(v6, sel_library);

    if (v7)
    {
      v8 = objc_msgSend(v7, sel_databaseID);
      swift_unknownObjectRelease();
      v9 = sub_1DA66F8BC();
      v11 = v10;

      v12 = sub_1DA5C4248(v9, v11, a1);
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        sub_1DA5C45F4(a2);
    }
    else
    {

    }
  }
}

uint64_t sub_1DA5C4248(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1DA6706D8();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DA6706D8() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5C430C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5C4370(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if ((a1 & 1) != 0)
    v4 = 0x7565755174666F73;
  else
    v4 = 0x7565755164726168;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    if (*(_BYTE *)(a2 + v5 + 32))
      v6 = 0x7565755174666F73;
    else
      v6 = 0x7565755164726168;
    if (v6 == v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v7 = sub_1DA6706D8();
    swift_bridgeObjectRelease_n();
    if ((v7 & 1) != 0)
      break;
    if (v2 == ++v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1DA5C4470(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1DA6705A0())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1DF09EE48](0, a2);
LABEL_5:
      v6 = v5;
      sub_1DA47D774(0, &qword_1EDADE798);
      v7 = sub_1DA6701A4();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1DA6701A4();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1DF09EE48](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1DA6701A4();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DA5C45F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2000);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v6 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v1;
    sub_1DA66BE60();
    v8 = &unk_1F026C688;
  }
  else if ((sub_1DA5C3310() & 1) != 0 || (sub_1DA5C3328() & 1) != 0)
  {
    v9 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v1;
    sub_1DA66BE60();
    v8 = &unk_1F026C6A8;
  }
  else
  {
    v10 = sub_1DA66FB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v1;
    sub_1DA66BE60();
    v8 = &unk_1F026C698;
  }
  sub_1DA5C0934((uint64_t)v5, (uint64_t)v8, (uint64_t)v7);
  return swift_release();
}

uint64_t PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18[3];
  void *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;

  v5 = sub_1DA66C784();
  v19 = (void *)v5;
  v20 = sub_1DA4A68B0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D7D568], v5);
  LOBYTE(v5) = sub_1DA66C5F8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  v7 = 0;
  if ((v5 & 1) != 0 && !a2)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    v9 = v18[0];
    if (v18[0])
    {
      v10 = objc_msgSend(v18[0], sel_displayItems);

      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v2;
      *(_QWORD *)(v11 + 24) = a1;
      v12 = swift_allocObject();
      v7 = sub_1DA5C5ED0;
      *(_QWORD *)(v12 + 16) = sub_1DA5C5ED0;
      *(_QWORD *)(v12 + 24) = v11;
      v20 = (unint64_t)sub_1DA4E4158;
      v21 = v12;
      v18[0] = (id)MEMORY[0x1E0C809B0];
      v18[1] = (id)1107296256;
      v18[2] = sub_1DA5C4B64;
      v19 = &block_descriptor_112;
      v13 = _Block_copy(v18);
      sub_1DA66BE60();
      swift_bridgeObjectRetain();
      sub_1DA66BE60();
      swift_release();
      objc_msgSend(v10, sel_enumerateItemsUsingBlock_, v13);

      _Block_release(v13);
      LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v10 & 1) != 0)
        __break(1u);
    }
    else
    {
      v7 = 0;
    }
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  v14 = v22;
  if (v22)
  {
    v15 = objc_msgSend(v22, sel_identifiers);
    v16 = objc_msgSend(v15, sel_universalStore);

    if (v16)
    {
      objc_msgSend(v16, sel_adamID);
      swift_unknownObjectRelease();
      v17 = sub_1DA66DCE4();

      if ((sub_1DA5C430C(v17, a1) & 1) != 0)
        sub_1DA5C45F4(a2);
    }
    else
    {

    }
  }
  return sub_1DA4EFFCC((uint64_t)v7);
}

uint64_t sub_1DA5C4AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DA54D828();
    swift_release();
    sub_1DA5C1820(a5, (uint64_t)&unk_1EA0C6DF8);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C4B64(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  id v9;
  uint64_t v11;

  v4 = sub_1DA66C580();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(void))(a1 + 32);
  sub_1DA66C55C();
  v9 = a2;
  v8();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void PlaybackController.QueueController.updatePlayerIfNeededForMarking(playerItems:as:)(unint64_t a1, uint64_t a2)
{
  id v3;
  char **v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char **v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char **v31;
  char **v32;
  char **v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  char **v41;
  char **v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v49;
  id v50;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1DA66E0BC();
  swift_release();
  swift_release();
  swift_release();
  if (!v50)
  {
LABEL_27:
    if (!swift_weakLoadStrong())
    {
LABEL_64:
      __break(1u);
      return;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if (!v50)
      return;
    v27 = objc_msgSend(v50, sel_identifiers);
    v28 = objc_msgSend(v27, sel_universalStore);

    if (!v28)
    {

      return;
    }
    objc_msgSend(v28, sel_adamID);
    swift_unknownObjectRelease();
    sub_1DA66DCE4();

    if (!(a1 >> 62))
    {
      v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v29)
      {
LABEL_58:
        v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_59:
        swift_bridgeObjectRelease();
        PlaybackController.QueueController.updatePlayerIfNeededForMarking(adamIDs:as:)((uint64_t)v49, a2);
        goto LABEL_60;
      }
      goto LABEL_32;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    v29 = sub_1DA6705A0();
    if (!v29)
      goto LABEL_58;
LABEL_32:
    if (v29 >= 1)
    {
      v30 = 0;
      v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v31 = &selRef_ams_isActiveAccountCombined;
      v32 = &selRef_ams_isActiveAccountCombined;
      v33 = &selRef__adjustedNativeFontDescriptorWithBaseNativeFontDescriptor_forCustomTextStyle_;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v34 = (id)MEMORY[0x1DF09EE48](v30, a1);
        else
          v34 = *(id *)(a1 + 8 * v30 + 32);
        v35 = v34;
        v36 = objc_msgSend(v34, v31[169]);
        if (v36
          && (v37 = v36, v38 = objc_msgSend(v36, v32[170]), v37, v38)
          && (v39 = objc_msgSend(v38, v33[215]), v38, v39))
        {
          objc_opt_self();
          v40 = (void *)swift_dynamicCastObjCClass();
          if (v40)
          {
            v41 = v31;
            v42 = v32;
            v43 = objc_msgSend(v40, sel_identifiers);
            v44 = objc_msgSend(v43, sel_universalStore);

            if (v44)
            {
              objc_msgSend(v44, sel_adamID);
              swift_unknownObjectRelease();
              v45 = sub_1DA66DCE4();

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v49 = sub_1DA54079C(0, v49[2] + 1, 1, v49);
              v47 = v49[2];
              v46 = v49[3];
              if (v47 >= v46 >> 1)
                v49 = sub_1DA54079C((_QWORD *)(v46 > 1), v47 + 1, 1, v49);
              v49[2] = v47 + 1;
              v49[v47 + 4] = v45;
            }
            else
            {

            }
            v32 = v42;
            v31 = v41;
            v33 = &selRef__adjustedNativeFontDescriptorWithBaseNativeFontDescriptor_forCustomTextStyle_;
          }
          else
          {

          }
        }
        else
        {

        }
        ++v30;
      }
      while (v29 != v30);
      goto LABEL_59;
    }
    __break(1u);
    goto LABEL_63;
  }
  v3 = objc_msgSend(v50, sel_identifiers);
  v4 = &selRef_ams_isActiveAccountCombined;
  v5 = objc_msgSend(v3, sel_library);

  if (!v5)
  {

    goto LABEL_27;
  }
  v6 = objc_msgSend(v5, sel_databaseID);

  swift_unknownObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DA6705A0();
    if (v7)
      goto LABEL_6;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      if (v7 >= 1)
      {
        v8 = 0;
        v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v10 = &selRef_ams_isActiveAccountCombined;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v11 = (id)MEMORY[0x1DF09EE48](v8, a1);
          else
            v11 = *(id *)(a1 + 8 * v8 + 32);
          v12 = v11;
          v13 = objc_msgSend(v11, v10[169]);
          if (v13
            && (v14 = v13,
                v15 = objc_msgSend(v13, sel_flattenedGenericObject),
                v14,
                v15)
            && (v16 = objc_msgSend(v15, sel_anyObject), v15, v16))
          {
            objc_opt_self();
            v17 = (void *)swift_dynamicCastObjCClass();
            if (v17)
            {
              v18 = objc_msgSend(v17, sel_identifiers);
              v19 = objc_msgSend(v18, v4[61]);

              if (v19)
              {
                v20 = objc_msgSend(v19, sel_databaseID);
                swift_unknownObjectRelease();
                v21 = sub_1DA66F8BC();
                v23 = v22;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v9 = sub_1DA4981C8(0, v9[2] + 1, 1, v9);
                v25 = v9[2];
                v24 = v9[3];
                if (v25 >= v24 >> 1)
                  v9 = sub_1DA4981C8((_QWORD *)(v24 > 1), v25 + 1, 1, v9);
                v9[2] = v25 + 1;
                v26 = &v9[2 * v25];
                v26[4] = v21;
                v26[5] = v23;
                v4 = &selRef_ams_isActiveAccountCombined;
              }
              else
              {

              }
              v10 = &selRef_ams_isActiveAccountCombined;
            }
            else
            {

            }
          }
          else
          {

          }
          ++v8;
        }
        while (v7 != v8);
        goto LABEL_55;
      }
      __break(1u);
      goto LABEL_57;
    }
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_55:
  swift_bridgeObjectRelease();
  PlaybackController.QueueController.updatePlayerIfNeededForMarking(uuids:as:)(v9, a2);
LABEL_60:
  swift_bridgeObjectRelease();
}

uint64_t sub_1DA5C52AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch();
}

uint64_t sub_1DA5C52C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_1DA5C52DC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 40) = &unk_1EA0C6E20;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1DA66E0BC();
    swift_release();
    swift_release();
    swift_release();
    if ((*(_BYTE *)(v0 + 88) & 1) == 0)
      sub_1DA54522C(0, 0, 0, 2);
    result = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 56) = result;
    if (result)
    {
      v2 = sub_1DA517F98(*(_QWORD *)(v0 + 40));
      *(_QWORD *)(v0 + 64) = v2;
      swift_bridgeObjectRelease();
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v3;
      *v3 = v0;
      v3[1] = sub_1DA5C5418;
      return sub_1DA54F8E8(v2, 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5C5418()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1DA5C54A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5C54B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DA5C54EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch();
}

uint64_t sub_1DA5C5504()
{
  uint64_t v0;
  uint64_t result;
  _QWORD *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = result;
  if (result)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 24) = 0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_1DA5C55A4;
    return sub_1DA54DF68(v0 + 16, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DA5C55A4(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 104) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
    return swift_task_switch();

  __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1DA5C563C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MPCPlayerResponseTracklist.hardQueueItems.getter()
{
  return MPCPlayerResponseTracklist.itemsInSections(sections:)((uint64_t)&unk_1EA0C6E50);
}

uint64_t MPCPlayerResponseTracklist.softQueueItems.getter()
{
  return MPCPlayerResponseTracklist.itemsInSections(sections:)((uint64_t)&unk_1EA0C6E78);
}

void sub_1DA5C5688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  char v13;

  sub_1DA66F8BC();
  v9 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v9, &v13);
  if (v13 != 2 && (sub_1DA5C4370(v13 & 1, a4) & 1) != 0)
  {
    v10 = objc_msgSend(a6, sel_displayItems);
    v11 = objc_msgSend(v10, sel_itemsInSectionAtIndex_, a2);

    sub_1DA47D774(0, &qword_1F026C4E8);
    v12 = sub_1DA66FA9C();

    sub_1DA65F32C(v12);
  }
}

void sub_1DA5C5778(uint64_t a1, uint64_t a2, _BYTE *a3, char a4, void *a5, _BYTE *a6, void *a7)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  char v21;
  char v22;

  sub_1DA66F8BC();
  v13 = (void *)sub_1DA66F88C();
  swift_bridgeObjectRelease();
  QueueModelSection.init(tracklistSection:)(v13, &v22);
  if (v22 != 2)
  {
    if ((v22 & 1) != 0)
      v14 = 0x7565755174666F73;
    else
      v14 = 0x7565755164726168;
    if ((a4 & 1) != 0)
      v15 = 0x7565755174666F73;
    else
      v15 = 0x7565755164726168;
    if (v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v16 = sub_1DA6706D8();
      swift_bridgeObjectRelease_n();
      if ((v16 & 1) == 0)
        return;
    }
    v17 = objc_msgSend(a5, sel_displayItems);
    v18 = objc_msgSend(v17, sel_itemsInSectionAtIndex_, a2);

    sub_1DA47D774(0, &qword_1F026C4E8);
    v19 = sub_1DA66FA9C();

    v20 = a7;
    v21 = sub_1DA5C5A50(v19, v20);
    swift_bridgeObjectRelease();

    *a6 = v21 & 1;
    *a3 = 1;
  }
}

void sub_1DA5C5920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1DA5C5688(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_1DA5C592C()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5C5940(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4A9520;
  return sub_1DA5C2C30(a1, v4, v5, v7, v6);
}

uint64_t sub_1DA5C59BC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DA5C59FC()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5C5A0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5C5A40(void *a1)
{
  uint64_t *v1;

  sub_1DA5C2628(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DA5C5A50(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unint64_t v21;
  unint64_t v22;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v3 = sub_1DA6705A0();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v21 = v2;
      v22 = v2 & 0xC000000000000001;
      v4 = 4;
      while (1)
      {
        v5 = v4 - 4;
        if (v22)
        {
          v6 = (id)MEMORY[0x1DF09EE48](v4 - 4, v2);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_19;
        }
        else
        {
          v6 = *(id *)(v2 + 8 * v4);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v8 = v3;
        v9 = v6;
        v10 = objc_msgSend(v6, sel_contentItemIdentifier);
        v11 = sub_1DA66F8BC();
        v13 = v12;

        v14 = objc_msgSend(a2, sel_contentItemIdentifier);
        v15 = sub_1DA66F8BC();
        v17 = v16;

        v18 = v11 == v15 && v13 == v17;
        if (v18)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v19 = 1;
          goto LABEL_22;
        }
        v19 = sub_1DA6706D8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          ++v4;
          v3 = v8;
          v18 = v7 == v8;
          v2 = v21;
          if (!v18)
            continue;
        }
        goto LABEL_22;
      }
    }
  }
  v19 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

void *sub_1DA5C5C14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_1DA6705A0();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (id)MEMORY[0x1DF09EE48](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = *(id *)(v7 + 8 * v4);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_contentItemIdentifier, v22);
        v16 = sub_1DA66F8BC();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;

        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1DA5C5DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F026C508[0];
  if (!qword_1F026C508[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F026C500);
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, qword_1F026C508);
  }
  return result;
}

uint64_t sub_1DA5C5E0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DA5C5E38(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_1DA5C5778(a1, a2, a3, *(_BYTE *)(v3 + 16), *(void **)(v3 + 24), *(_BYTE **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1DA5C5E48()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5C5E58()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5C5E7C(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_1DA5C3914(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 24));
}

uint64_t sub_1DA5C5E84()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5C5EA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DA5C5ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1DA5C4AE0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1DA5C5ED8()
{
  return swift_deallocObject();
}

uint64_t sub_1DA5C5EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1DA5C5F34()
{
  swift_beginAccess();
  return swift_weakAssign();
}

uint64_t type metadata accessor for PlaybackController.QueueController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaybackController.QueueController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaybackController.QueueController.playbackController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(uuids:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.addToQueue(adamIds:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.canRemoveItemFromQueue(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 144) + *(_QWORD *)(*(_QWORD *)v1 + 144));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1DA5C6034;
  return v6(a1);
}

uint64_t sub_1DA5C6034(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeMatchingQueueItems(with:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.removeItemFromQueue(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasHardQueue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasSoftQueue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hasQueueItems.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.queueSectionContainsItem(queueSection:item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.hardQueueFirstItemContentID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PlaybackController.QueueController.moveToNextItem()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 224) + *(_QWORD *)(*(_QWORD *)v0 + 224));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1DA4A9520;
  return v4();
}

uint64_t dispatch thunk of PlaybackController.QueueController.restartCurrentEpisode()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 232) + *(_QWORD *)(*(_QWORD *)v0 + 232));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1DA4A9520;
  return v4();
}

uint64_t dispatch thunk of PlaybackController.QueueController.moveToItemEnd()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 240) + *(_QWORD *)(*(_QWORD *)v0 + 240));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1DA4A9520;
  return v4();
}

uint64_t sub_1DA5C61FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4A9520;
  v3[10] = v2;
  return swift_task_switch();
}

uint64_t sub_1DA5C6260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4A9520;
  v3[6] = v2;
  return swift_task_switch();
}

uint64_t sub_1DA5C62C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4A9520;
  v3[10] = v2;
  return swift_task_switch();
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DA5C635C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1DA4AD77C;
  return sub_1DA5C2C30(a1, v4, v5, v7, v6);
}

uint64_t NowPlayingArtwork.Placement.priority.getter()
{
  return swift_bridgeObjectRetain();
}

double NowPlayingArtwork.Placement.preferredSize.getter()
{
  _BYTE *v0;
  void *v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGRect v22;
  CGRect v23;

  if (*v0 != 3)
    return 600.0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v22.origin.x = v4;
  v22.origin.y = v6;
  v22.size.width = v8;
  v22.size.height = v10;
  Width = CGRectGetWidth(v22);
  v12 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v12, sel_bounds);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v23.origin.x = v14;
  v23.origin.y = v16;
  v23.size.width = v18;
  v23.size.height = v20;
  CGRectGetHeight(v23);
  return Width;
}

uint64_t NowPlayingArtwork.Placement.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1DA670600();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

void sub_1DA5C6580(char *a1)
{
  sub_1DA659BB4(*a1);
}

unint64_t sub_1DA5C6590()
{
  unint64_t result;

  result = qword_1F026C6C8;
  if (!qword_1F026C6C8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for NowPlayingArtwork.Placement, &type metadata for NowPlayingArtwork.Placement);
    atomic_store(result, (unint64_t *)&qword_1F026C6C8);
  }
  return result;
}

void sub_1DA5C65D4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DA670798();
  __asm { BR              X9 }
}

uint64_t sub_1DA5C6620()
{
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

void sub_1DA5C66B4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DA5C66F0()
{
  sub_1DA66F94C();
  return swift_bridgeObjectRelease();
}

void sub_1DA5C6770()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DA670798();
  __asm { BR              X9 }
}

uint64_t sub_1DA5C67B8()
{
  sub_1DA66F94C();
  swift_bridgeObjectRelease();
  return sub_1DA6707C8();
}

uint64_t sub_1DA5C684C@<X0>(char *a1@<X8>)
{
  return NowPlayingArtwork.Placement.init(rawValue:)(a1);
}

uint64_t sub_1DA5C6858()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DA5C6888 + 4 * byte_1DA6805E4[*v0]))();
}

void sub_1DA5C6888(_QWORD *a1@<X8>)
{
  *a1 = 0x617461646174656DLL;
  a1[1] = 0xE800000000000000;
}

void sub_1DA5C68A4(_QWORD *a1@<X8>)
{
  *a1 = 0x746E65436F666E69;
  a1[1] = 0xEA00000000007265;
}

void sub_1DA5C68C4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "showPageTall");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1DA5C68E8(_QWORD *a1@<X8>)
{
  *a1 = 0x706F72646B636162;
  a1[1] = 0xE800000000000000;
}

uint64_t _s9PlacementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DA5C6950 + 4 * byte_1DA6805EE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DA5C6984 + 4 * byte_1DA6805E9[v4]))();
}

uint64_t sub_1DA5C6984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5C698C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5C6994);
  return result;
}

uint64_t sub_1DA5C69A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5C69A8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DA5C69AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5C69B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t StoreLibraryMultiplexingImageProvider.storeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 16, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.libraryProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 56, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.artworkLoaderProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 96, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.compositeProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 136, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.sizeBucketingStrategy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA4813E4(v1 + 176, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.assetCaches.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DA484548(v1 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, a1);
}

uint64_t StoreLibraryMultiplexingImageProvider.__allocating_init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  StoreLibraryMultiplexingImageProvider.init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t StoreLibraryMultiplexingImageProvider.init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v13 = sub_1DA66DDD4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA4813E4(a1, v6 + 16);
  sub_1DA4813E4(a2, v6 + 56);
  sub_1DA4813E4(a3, v6 + 96);
  sub_1DA4813E4(a4, v6 + 136);
  sub_1DA4813E4(a5, v6 + 176);
  sub_1DA484548(a6, v6 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches);
  sub_1DA66DDA4();
  sub_1DA47F880(a6, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  __swift_destroy_boxed_opaque_existential_0(a5);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v6 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter, v16, v13);
  return v6;
}

uint64_t StoreLibraryMultiplexingImageProvider.load(artwork:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  void (*v25)(_QWORD, _QWORD);
  void (*v26)(char *, void (*)(_QWORD, _QWORD), uint64_t, __n128);
  void (*v27)(char *, uint64_t);
  NSObject *v28;
  os_signpost_type_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint8_t *v34;
  os_signpost_id_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(_QWORD, _QWORD);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  char *v45;
  uint64_t v46;
  int v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  const char *v55;
  uint64_t v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;

  v93 = a1;
  v2 = sub_1DA66CEBC();
  v82 = *(_QWORD *)(v2 - 8);
  v83 = v2;
  MEMORY[0x1E0C80A78](v2);
  v80 = v3;
  v81 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDADFD10);
  v90 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v89 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66DDE0();
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  MEMORY[0x1E0C80A78](v5);
  v76 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66DD74();
  v87 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v88 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v74 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v74 - v13;
  v15 = sub_1DA66DDD4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v74 - v19;
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v74 - v23;
  v86 = v1;
  v25 = (void (*)(_QWORD, _QWORD))(v1
                                            + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter);
  v26 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t, __n128))(v16 + 16);
  v26((char *)&v74 - v23, v25, v15, v22);
  v79 = v25;
  ((void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v26)(v20, v25, v15);
  sub_1DA66DDB0();
  sub_1DA66DD50();
  v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v20, v15);
  v28 = sub_1DA66DDB0();
  v29 = sub_1DA66FF58();
  v30 = sub_1DA670240();
  v92 = v27;
  v85 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v26;
  if ((v30 & 1) != 0)
  {
    v31 = v87;
    v75 = (void (*)(char *, char *, uint64_t))v15;
    v32 = v7;
    v33 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    v33(v11, v14, v32);
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    v35 = sub_1DA66DD5C();
    v36 = v33;
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v28, v29, v35, "MultiplexerImageProviderCreatePublisher", "", v34, 2u);
    MEMORY[0x1DF0A0474](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    v37 = v32;
    v15 = (uint64_t)v75;
  }
  else
  {

    v31 = v87;
    v36 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    v37 = v7;
  }
  v38 = v11;
  v39 = v91;
  v40 = v79;
  v74 = v38;
  v75 = v36;
  v36(v38, v14, v37);
  sub_1DA66DE10();
  swift_allocObject();
  v41 = sub_1DA66DE04();
  v79 = *(void (**)(_QWORD, _QWORD))(v31 + 8);
  v79(v14, v37);
  v42 = v92;
  v92(v24, v15);
  v43 = sub_1DA5C7354(v93);
  v85(v39, v40, v15);
  v44 = sub_1DA66DDB0();
  v45 = v88;
  sub_1DA66DDF8();
  v46 = v37;
  v47 = sub_1DA66FF4C();
  v48 = sub_1DA670240();
  v86 = v43;
  v87 = v41;
  if ((v48 & 1) != 0)
  {
    LODWORD(v85) = v47;
    sub_1DA66BE60();
    v49 = v76;
    sub_1DA66DE1C();
    swift_release();
    v51 = v77;
    v50 = v78;
    v52 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v49, v78);
    v53 = (void (*)(char *, uint64_t))v79;
    v54 = v74;
    if (v52 == *MEMORY[0x1E0DF2190])
    {
      v55 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
      v55 = "SUCCESS";
    }
    v75(v54, v45, v46);
    v56 = v46;
    v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v57 = 0;
    v58 = sub_1DA66DD5C();
    _os_signpost_emit_with_name_impl(&dword_1DA478000, v44, (os_signpost_type_t)v85, v58, "MultiplexerImageProviderCreatePublisher", v55, v57, 2u);
    MEMORY[0x1DF0A0474](v57, -1, -1);

    v53(v45, v56);
    v92(v91, v15);
    v53(v54, v56);
  }
  else
  {

    v79(v45, v46);
    v42(v39, v15);
  }
  v59 = v83;
  v60 = v84;
  v62 = v81;
  v61 = v82;
  v63 = v80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE00B0);
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 24) = 0;
  *(_QWORD *)(v64 + 32) = 0;
  *(_QWORD *)(v64 + 16) = 0;
  *(_DWORD *)(v64 + 40) = 0;
  v94 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v62, v93, v59);
  v65 = (*(unsigned __int8 *)(v61 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = v64;
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v66 + v65, v62, v59);
  v67 = v66 + ((v63 + v65 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v67 = "SLMultiplexingImageProvider";
  *(_QWORD *)(v67 + 8) = 27;
  *(_BYTE *)(v67 + 16) = 2;
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = v64;
  *(_QWORD *)(v68 + 24) = "SLMultiplexingImageProvider";
  *(_QWORD *)(v68 + 32) = 27;
  *(_BYTE *)(v68 + 40) = 2;
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = v64;
  *(_QWORD *)(v69 + 24) = "SLMultiplexingImageProvider";
  *(_QWORD *)(v69 + 32) = 27;
  *(_BYTE *)(v69 + 40) = 2;
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = "SLMultiplexingImageProvider";
  *(_QWORD *)(v70 + 32) = 27;
  *(_BYTE *)(v70 + 40) = 2;
  swift_retain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
  sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
  v71 = v89;
  sub_1DA66E134();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DA4841D4(&qword_1EDADFD08, (uint64_t *)&unk_1EDADFD10, MEMORY[0x1E0C957C0]);
  v72 = sub_1DA66E11C();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v71, v60);
  return v72;
}

uint64_t sub_1DA5C7354(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v2 = v1;
  v4 = sub_1DA66CA0C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v34 - v8);
  v34[0] = sub_1DA66CEBC();
  v10 = *(_QWORD *)(v34[0] - 8);
  MEMORY[0x1E0C80A78](v34[0]);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v1 + 22, v1[25]);
  sub_1DA66CDC0();
  sub_1DA66DABC();
  sub_1DA66CE98();
  sub_1DA66CE68();
  v14 = *v9;
  v13 = v9[1];
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  if (v14 == sub_1DA66C9C4() && v13 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v17 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_10:
    sub_1DA66CDC0();
    v24 = v23;
    v26 = v25;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v26;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE5330);
    swift_allocObject();
    v34[1] = sub_1DA66E074();
    sub_1DA4841D4(&qword_1EDAE5328, (uint64_t *)&unk_1EDAE5330, MEMORY[0x1E0C96108]);
    v28 = sub_1DA66E11C();
    swift_release();
    goto LABEL_15;
  }
  sub_1DA66CE68();
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
  sub_1DA66C9D0();
  v18 = sub_1DA66F9F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
    v19 = v2 + 17;
    v21 = v2[20];
    v20 = v2[21];
    __swift_project_boxed_opaque_existential_1(v19, v21);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(a1, v21, v20);
  }
  else
  {
    v22 = sub_1DA5C8C48((uint64_t)v12);
    if (!v22)
    {
      sub_1DA66CE68();
      v29 = v6[32];
      sub_1DA47F880((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0D7D7F0]);
      if (v29 == 255)
      {
        v31 = v2 + 2;
        v33 = v2[5];
        v32 = v2[6];
        __swift_project_boxed_opaque_existential_1(v31, v33);
        v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 8))(v12, v33, v32);
      }
      else
      {
        v22 = sub_1DA5C8E18((uint64_t)v12);
      }
    }
  }
  v28 = v22;
LABEL_15:
  (*(void (**)(char *, _QWORD))(v10 + 8))(v12, v34[0]);
  return v28;
}

void sub_1DA5C7684(uint64_t a1, os_unfair_lock_s *a2, void (*a3)(char *, char *, uint64_t), const char *a4, uint64_t a5, int a6)
{
  uint64_t v10;
  os_unfair_lock_s *v11;

  v10 = (uint64_t)&a2[4];
  v11 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA5C76F4(v10, a3, a4, a5, a6);
  os_unfair_lock_unlock(v11);
}

void sub_1DA5C76F4(uint64_t a1, void (*a2)(char *, char *, uint64_t), const char *a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  NSObject *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  os_signpost_id_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  int v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62[3];
  uint64_t v63;
  char v64;

  v57 = a5;
  v59 = a2;
  v60 = (char *)a3;
  v58 = sub_1DA66DD74();
  v5 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  v11 = sub_1DA66DDD4();
  v12 = *(void (**)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - v16;
  v18 = sub_1DA66C454();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v21)
  {
    v48 = v20;
    v51 = v14;
    v52 = v12;
    v55 = v5;
    v56 = v17;
    v53 = v11;
    v54 = v10;
    v50 = v7;
    v24 = v21;
    sub_1DA66CE74();
    if (v63)
    {
      __swift_project_boxed_opaque_existential_1(v62, v63);
      v59 = (void (*)(char *, char *, uint64_t))sub_1DA66DC90();
      v26 = v25;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
    }
    else
    {
      sub_1DA47E2F0((uint64_t)v62, &qword_1EDAE5310);
      sub_1DA66C448();
      v59 = (void (*)(char *, char *, uint64_t))sub_1DA66C43C();
      v26 = v27;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v48);
    }
    v28 = v51;
    v29 = v52;
    sub_1DA66DDA4();
    sub_1DA66DDA4();
    sub_1DA66DDB0();
    v30 = v54;
    sub_1DA66DD50();
    v31 = (void (*)(char *, uint64_t))*((_QWORD *)v29 + 1);
    v32 = v53;
    v31(v28, v53);
    swift_bridgeObjectRetain_n();
    v33 = sub_1DA66DDB0();
    LODWORD(v51) = sub_1DA66FF58();
    v34 = sub_1DA670240();
    v35 = v55;
    v49 = v24;
    v52 = v31;
    if ((v34 & 1) == 0)
      goto LABEL_9;
    if ((v57 & 1) == 0)
    {
      v36 = (uint64_t)v59;
      if (!v60)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_9:
        swift_bridgeObjectRelease_n();

        v37 = v58;
        v36 = (uint64_t)v59;
        v38 = v35;
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v50, v30, v58);
LABEL_15:
        sub_1DA66DE10();
        swift_allocObject();
        v45 = sub_1DA66DE04();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v37);
        v52(v56, v32);
        v46 = v49;
        *v49 = v45;
        v46[1] = v36;
        v46[2] = v26;
        return;
      }
LABEL_14:
      v59 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      v39 = v50;
      v40 = v58;
      v59(v50, v30, v58);
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v62[0] = v42;
      *(_DWORD *)v41 = 136315138;
      swift_bridgeObjectRetain();
      v61 = sub_1DA49AD00(v36, v26, v62);
      sub_1DA6702C4();
      swift_bridgeObjectRelease_n();
      v43 = sub_1DA66DD5C();
      _os_signpost_emit_with_name_impl(&dword_1DA478000, v33, (os_signpost_type_t)v51, v43, v60, "[identifier=%{name=identifier}s] StoreLibraryMultiplexingImageProviderFetch", v41, 0xCu);
      swift_arrayDestroy();
      v44 = v42;
      v30 = v54;
      MEMORY[0x1DF0A0474](v44, -1, -1);
      MEMORY[0x1DF0A0474](v41, -1, -1);

      v37 = v40;
      v38 = v55;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v37);
      v32 = v53;
      v59(v39, v30, v37);
      goto LABEL_15;
    }
    if ((unint64_t)v60 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v60 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return;
      }
      v36 = (uint64_t)v59;
      if (v60 >> 16 <= 0x10)
      {
        v60 = &v64;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1DA5C7B60(uint64_t a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, int a5)
{
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v8 = a2 + 4;
  v9 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA5C7BC8(v8, a3, a4, a5);
  os_unfair_lock_unlock(v9);
}

void sub_1DA5C7BC8(_QWORD *a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  NSObject *v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_signpost_id_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v46 = (char *)a2;
  v45 = sub_1DA66DDE0();
  v7 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66DD74();
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  v15 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    LODWORD(v39) = a4;
    v40 = v17;
    v41 = v16;
    v42 = v10;
    v43 = v4;
    v20 = a1[2];
    v37 = a1[1];
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v21 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v38 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v42);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v41);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    v35 = v19;
    v36 = v20;
    if ((v39 & 1) == 0)
    {
      if (v46)
      {
        v22 = v14;
        v23 = v45;
LABEL_11:
        sub_1DA66BE60();
        sub_1DA66DE1C();
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v23) == *MEMORY[0x1E0DF2190])
        {
          v24 = 0;
          v25 = 0;
          v39 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
          v39 = "[identifier=%{name=identifier}s] SUCCESS";
          v25 = 2;
          v24 = 1;
        }
        v26 = v44;
        v27 = v42;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v22, v42);
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v45 = (uint64_t)v22;
        v30 = v29;
        v49 = v29;
        *(_BYTE *)v28 = v25;
        *(_BYTE *)(v28 + 1) = v24;
        *(_WORD *)(v28 + 2) = 2080;
        v31 = v36;
        swift_bridgeObjectRetain();
        v48 = sub_1DA49AD00(v37, v31, &v49);
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v32 = sub_1DA66DD5C();
        _os_signpost_emit_with_name_impl(&dword_1DA478000, v21, (os_signpost_type_t)v38, v32, v46, v39, (uint8_t *)v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v30, -1, -1);
        MEMORY[0x1DF0A0474](v28, -1, -1);

        v33 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v33(v45, v27);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v41);
        swift_bridgeObjectRelease();
        swift_release();
        v33((uint64_t)v26, v27);
        goto LABEL_15;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    if ((unint64_t)v46 >> 32)
    {
      __break(1u);
    }
    else
    {
      v23 = v45;
      if (v46 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v46 >> 16 <= 0x10)
      {
        v22 = v14;
        v46 = &v50;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1DA5C7FFC(uint64_t *a1, os_unfair_lock_s *a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v8 = *a1;
  v9 = (uint64_t)&a2[4];
  v10 = a2 + 10;
  os_unfair_lock_lock(a2 + 10);
  sub_1DA5C806C(v9, v8, a3, a4, a5);
  os_unfair_lock_unlock(v10);
}

void sub_1DA5C806C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, unsigned __int8 a5)
{
  const char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  unint64_t v30;
  int v31;
  const char *v32;
  const char *v33;
  uint64_t v34;
  char v35;
  char v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_signpost_id_t v41;
  void (*v42)(NSObject *, uint64_t);
  NSObject *v43;
  uint64_t v44;
  int v45;
  int v46;
  char v47;
  char v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_signpost_id_t v53;
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t);
  _QWORD *v56;
  _BYTE v57[12];
  int v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  const char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;

  v68 = (char *)a3;
  v7 = (const char *)sub_1DA66DDE0();
  v66 = *((_QWORD *)v7 - 1);
  v67 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v57[-v11];
  v13 = sub_1DA66DD74();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = &v57[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v65 = &v57[-v17];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v57[-v19];
  v21 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v21);
  v23 = &v57[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v24);
  v29 = &v57[-v28];
  if (*v26)
  {
    v62 = v27;
    v63 = v25;
    v61 = a5;
    v30 = v26[2];
    v60 = v26[1];
    v64 = v26;
    if (!a2)
      goto LABEL_7;
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v12 = (_BYTE *)sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
LABEL_11:
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(NSObject *, uint64_t))(v69 + 8))(v15, v70);
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v23, v63);
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_30:
      v56 = v64;
      *v64 = 0;
      v56[1] = 0;
      v56[2] = 0;
      return;
    }
    v58 = (int)v12;
    if ((v61 & 1) == 0)
    {
      if (!v68)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        __break(1u);
LABEL_7:
        sub_1DA66DDA4();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        v15 = sub_1DA66DDB0();
        sub_1DA66DDF8();
        v31 = sub_1DA66FF4C();
        if ((sub_1DA670240() & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          swift_release_n();

          (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v20, v70);
          (*(void (**)(NSObject *, uint64_t))(v62 + 8))(v29, v63);
          goto LABEL_13;
        }
        v59 = v30;
        if ((v61 & 1) == 0)
        {
          v32 = v67;
          v23 = (_BYTE *)v66;
          if (!v68)
          {
            swift_bridgeObjectRelease_n();
            swift_release_n();
            __break(1u);
            goto LABEL_11;
          }
LABEL_26:
          sub_1DA66BE60();
          sub_1DA66DE1C();
          swift_release();
          v45 = (*((uint64_t (**)(_BYTE *, const char *))v23 + 11))(v12, v32);
          v46 = *MEMORY[0x1E0DF2190];
          v58 = v31;
          if (v45 == v46)
          {
            v47 = 0;
            v48 = 0;
            v67 = "[Error] Interval already ended";
          }
          else
          {
            (*((void (**)(_BYTE *, const char *))v23 + 1))(v12, v32);
            v67 = "[identifier=%{name=identifier}s] EMPTY";
            v48 = 2;
            v47 = 1;
          }
          v49 = v65;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v69 + 16))(v65, v20, v70);
          v50 = swift_slowAlloc();
          v51 = swift_slowAlloc();
          v72 = v51;
          *(_BYTE *)v50 = v48;
          *(_BYTE *)(v50 + 1) = v47;
          *(_WORD *)(v50 + 2) = 2080;
          v52 = v59;
          swift_bridgeObjectRetain();
          v71 = sub_1DA49AD00(v60, v52, &v72);
          sub_1DA6702C4();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v53 = sub_1DA66DD5C();
          _os_signpost_emit_with_name_impl(&dword_1DA478000, v15, (os_signpost_type_t)v58, v53, v68, v67, (uint8_t *)v50, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v51, -1, -1);
          MEMORY[0x1DF0A0474](v50, -1, -1);

          v54 = v70;
          v55 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
          v55(v20, v70);
          (*(void (**)(NSObject *, uint64_t))(v62 + 8))(v29, v63);
          swift_bridgeObjectRelease();
          swift_release();
          v55(v49, v54);
          goto LABEL_30;
        }
        v32 = v67;
        v23 = (_BYTE *)v66;
        if (!((unint64_t)v68 >> 32))
        {
          if (v68 >> 11 == 27)
          {
LABEL_37:
            __break(1u);
            return;
          }
          if (v68 >> 16 <= 0x10)
          {
            v68 = &v73;
            goto LABEL_26;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_18:
      v59 = v30;
      sub_1DA66BE60();
      sub_1DA66DE1C();
      swift_release();
      v34 = v66;
      v33 = v67;
      if ((*(unsigned int (**)(_BYTE *, const char *))(v66 + 88))(v9, v67) == *MEMORY[0x1E0DF2190])
      {
        v35 = 0;
        v36 = 0;
        v67 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_BYTE *, const char *))(v34 + 8))(v9, v33);
        v67 = "[identifier=%{name=identifier}s] FAILURE";
        v36 = 2;
        v35 = 1;
      }
      v37 = v65;
      (*(void (**)(_BYTE *, NSObject *, uint64_t))(v69 + 16))(v65, v15, v70);
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v72 = v39;
      *(_BYTE *)v38 = v36;
      *(_BYTE *)(v38 + 1) = v35;
      *(_WORD *)(v38 + 2) = 2080;
      v40 = v59;
      swift_bridgeObjectRetain();
      v71 = sub_1DA49AD00(v60, v40, &v72);
      sub_1DA6702C4();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      v41 = sub_1DA66DD5C();
      _os_signpost_emit_with_name_impl(&dword_1DA478000, v29, (os_signpost_type_t)v58, v41, v68, v67, (uint8_t *)v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v39, -1, -1);
      MEMORY[0x1DF0A0474](v38, -1, -1);

      v42 = *(void (**)(NSObject *, uint64_t))(v69 + 8);
      v43 = v15;
      v44 = v70;
      v42(v43, v70);
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v23, v63);
      swift_bridgeObjectRelease();
      swift_release();
      v42(v37, v44);
      goto LABEL_30;
    }
    if ((unint64_t)v68 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v68 >> 11 == 27)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v68 >> 16 <= 0x10)
      {
        v68 = &v74;
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
}

void sub_1DA5C87AC(os_unfair_lock_s *a1, const char *a2, uint64_t a3, int a4)
{
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;

  v7 = a1 + 4;
  v8 = a1 + 10;
  os_unfair_lock_lock(a1 + 10);
  sub_1DA5C8814(v7, a2, a3, a4);
  os_unfair_lock_unlock(v8);
}

void sub_1DA5C8814(_QWORD *a1, const char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  NSObject *v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_signpost_id_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v46 = (char *)a2;
  v45 = sub_1DA66DDE0();
  v7 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1DA66DD74();
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  v15 = sub_1DA66DDD4();
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    LODWORD(v39) = a4;
    v40 = v17;
    v41 = v16;
    v42 = v10;
    v43 = v4;
    v20 = a1[2];
    v37 = a1[1];
    sub_1DA66DDA4();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v21 = sub_1DA66DDB0();
    sub_1DA66DDF8();
    v38 = sub_1DA66FF4C();
    if ((sub_1DA670240() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v42);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v41);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
      return;
    }
    v35 = v19;
    v36 = v20;
    if ((v39 & 1) == 0)
    {
      if (v46)
      {
        v22 = v14;
        v23 = v45;
LABEL_11:
        sub_1DA66BE60();
        sub_1DA66DE1C();
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v23) == *MEMORY[0x1E0DF2190])
        {
          v24 = 0;
          v25 = 0;
          v39 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
          v39 = "[identifier=%{name=identifier}s] CANCEL";
          v25 = 2;
          v24 = 1;
        }
        v26 = v44;
        v27 = v42;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v22, v42);
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v45 = (uint64_t)v22;
        v30 = v29;
        v49 = v29;
        *(_BYTE *)v28 = v25;
        *(_BYTE *)(v28 + 1) = v24;
        *(_WORD *)(v28 + 2) = 2080;
        v31 = v36;
        swift_bridgeObjectRetain();
        v48 = sub_1DA49AD00(v37, v31, &v49);
        sub_1DA6702C4();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v32 = sub_1DA66DD5C();
        _os_signpost_emit_with_name_impl(&dword_1DA478000, v21, (os_signpost_type_t)v38, v32, v46, v39, (uint8_t *)v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v30, -1, -1);
        MEMORY[0x1DF0A0474](v28, -1, -1);

        v33 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
        v33(v45, v27);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v41);
        swift_bridgeObjectRelease();
        swift_release();
        v33((uint64_t)v26, v27);
        goto LABEL_15;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      __break(1u);
      return;
    }
    if ((unint64_t)v46 >> 32)
    {
      __break(1u);
    }
    else
    {
      v23 = v45;
      if (v46 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v46 >> 16 <= 0x10)
      {
        v22 = v14;
        v46 = &v50;
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_1DA5C8C48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_1DA66CA0C();
  v5 = MEMORY[0x1E0D7D7F0];
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA66CE68();
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain();
  sub_1DA47F880((uint64_t)v7, (uint64_t (*)(_QWORD))v5);
  v22 = v9;
  v23 = v8;
  sub_1DA66D1A4();
  v20 = sub_1DA66D18C();
  v21 = v10;
  sub_1DA484214();
  sub_1DA484258();
  v11 = sub_1DA66F814();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0
    || (v22 = v9,
        v23 = v8,
        v20 = sub_1DA66D198(),
        v21 = v12,
        v13 = sub_1DA66F814(),
        swift_bridgeObjectRelease(),
        (v13 & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v9;
    v23 = v8;
    v20 = sub_1DA66D180();
    v21 = v18;
    v19 = sub_1DA66F814();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      return 0;
  }
  v14 = v2 + 12;
  v16 = v2[15];
  v15 = v2[16];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(a1, v16, v15);
}

uint64_t sub_1DA5C8E18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(unint64_t, uint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDADEDC0);
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DA66C358();
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE0150);
  MEMORY[0x1E0C80A78](v78);
  v79 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE5020);
  MEMORY[0x1E0C80A78](v8);
  v72 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v84 = (uint64_t)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v85 = (uint64_t)&v71 - v13;
  v14 = sub_1DA66CEBC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v14;
  MEMORY[0x1E0C80A78](v14);
  v89 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v90 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  MEMORY[0x1E0C80A78](v23);
  v82 = (char *)&v71 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE40C0);
  v88 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v1[10];
  v28 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v29);
  v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 8))(a1, v29, v28);
  v74 = v1;
  v30 = v16;
  v31 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE27C0);
  sub_1DA66C97C();
  v32 = a1;
  sub_1DA66CE20();
  v33 = v82;
  sub_1DA66CDE4();
  v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v22, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4D40);
  v35 = *(_QWORD *)(v15 + 72);
  v36 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1DA678FE0;
  v38 = v37 + v36;
  v39 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16);
  v39(v38, v32, v30);
  v40 = v38 + v35;
  v41 = v32;
  v42 = v33;
  v39(v40, (uint64_t)v33, v30);
  sub_1DA4841D4(&qword_1EDAE40B8, &qword_1EDAE40C0, MEMORY[0x1E0D7D738]);
  v86 = v31;
  v43 = v89;
  v44 = v90;
  v83 = v27;
  LOBYTE(v38) = sub_1DA66C8A4();
  swift_bridgeObjectRelease();
  v73 = v41;
  v39((unint64_t)v44, v41, v30);
  v91 = v30;
  v39((unint64_t)v43, (uint64_t)v42, v30);
  if ((v38 & 1) == 0)
  {
    v48 = v85;
    sub_1DA66CEB0();
    v49 = v84;
    sub_1DA66CEB0();
    v50 = v79;
    v51 = v79 + *(int *)(v78 + 48);
    sub_1DA4B2F78(v48, v79);
    sub_1DA4B2F78(v49, v51);
    v52 = v80;
    v53 = v81;
    v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v54(v50, 1, v81) == 1)
    {
      sub_1DA47E2F0(v84, &qword_1EDAE5020);
      sub_1DA47E2F0(v85, &qword_1EDAE5020);
      v55 = v43;
      v56 = v91;
      v57 = v34;
      v34(v55, v91);
      v34(v44, v56);
      if (v54(v51, 1, v53) == 1)
      {
        sub_1DA47E2F0(v50, &qword_1EDAE5020);
LABEL_10:
        v47 = v87;
LABEL_12:
        v57(v42, v91);
        goto LABEL_13;
      }
    }
    else
    {
      v58 = v50;
      v59 = v50;
      v60 = v72;
      sub_1DA4B2F78(v58, v72);
      v57 = v34;
      if (v54(v51, 1, v53) != 1)
      {
        v62 = v71;
        (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v71, v51, v53);
        sub_1DA5C97B8();
        v63 = sub_1DA66F850();
        v64 = *(void (**)(char *, uint64_t))(v52 + 8);
        v64(v62, v53);
        sub_1DA47E2F0(v84, &qword_1EDAE5020);
        sub_1DA47E2F0(v85, &qword_1EDAE5020);
        v65 = v91;
        v57(v89, v91);
        v57(v90, v65);
        v64((char *)v60, v53);
        sub_1DA47E2F0(v59, &qword_1EDAE5020);
        if ((v63 & 1) != 0)
          goto LABEL_10;
LABEL_11:
        v93 = v87;
        v66 = v74[5];
        v67 = v74[6];
        __swift_project_boxed_opaque_existential_1(v74 + 2, v66);
        v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 8))(v73, v66, v67);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE1CC8);
        sub_1DA4841D4(&qword_1EDAE1CC0, &qword_1EDAE1CC8, MEMORY[0x1E0C95D90]);
        v68 = v75;
        sub_1DA66E1DC();
        swift_release();
        sub_1DA4841D4(&qword_1EDADFE10, &qword_1EDADEDC0, MEMORY[0x1E0C95C80]);
        v69 = v77;
        v47 = sub_1DA66E11C();
        swift_release();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v68, v69);
        goto LABEL_12;
      }
      sub_1DA47E2F0(v84, &qword_1EDAE5020);
      sub_1DA47E2F0(v85, &qword_1EDAE5020);
      v61 = v91;
      v34(v89, v91);
      v34(v90, v61);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v60, v53);
      v50 = v59;
    }
    sub_1DA47E2F0(v50, &qword_1EDAE0150);
    goto LABEL_11;
  }
  v45 = v43;
  v46 = v91;
  v34(v45, v91);
  v34(v44, v46);
  v47 = v87;
  v34(v42, v91);
LABEL_13:
  (*(void (**)(char *, uint64_t))(v88 + 8))(v83, v86);
  return v47;
}

uint64_t StoreLibraryMultiplexingImageProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  sub_1DA47F880(v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter;
  v2 = sub_1DA66DDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t StoreLibraryMultiplexingImageProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 176);
  sub_1DA47F880(v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_assetCaches, (uint64_t (*)(_QWORD))type metadata accessor for AssetCaches);
  v1 = v0 + OBJC_IVAR____TtC10PodcastsUI37StoreLibraryMultiplexingImageProvider_signposter;
  v2 = sub_1DA66DDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1DA5C962C(uint64_t a1)
{
  return StoreLibraryMultiplexingImageProvider.load(artwork:)(a1);
}

char *sub_1DA5C964C()
{
  char v1;

  return &v1;
}

uint64_t sub_1DA5C965C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1DA66CEBC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1DA5C96DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_1DA66CEBC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1DA5C7684(a1, *(os_unfair_lock_s **)(v1 + 16), (void (*)(char *, char *, uint64_t))(v1 + v4), *(const char **)v5, *(_QWORD *)(v5 + 8), *(unsigned __int8 *)(v5 + 16));
}

uint64_t sub_1DA5C9738()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1DA5C975C(uint64_t a1)
{
  uint64_t v1;

  sub_1DA5C7B60(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1DA5C976C(uint64_t *a1)
{
  uint64_t v1;

  sub_1DA5C7FFC(a1, *(os_unfair_lock_s **)(v1 + 16), *(const char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

void sub_1DA5C977C()
{
  uint64_t v0;

  sub_1DA5C87AC(*(os_unfair_lock_s **)(v0 + 16), *(const char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1DA5C978C()
{
  return type metadata accessor for StoreLibraryMultiplexingImageProvider();
}

uint64_t method lookup function for StoreLibraryMultiplexingImageProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoreLibraryMultiplexingImageProvider.__allocating_init(storeProvider:libraryProvider:artworkLoaderProvider:compositeProvider:sizeBucketingStrategy:caches:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1DA5C97A8()
{
  return swift_deallocObject();
}

unint64_t sub_1DA5C97B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDAE0140;
  if (!qword_1EDAE0140)
  {
    v1 = sub_1DA66C358();
    result = MEMORY[0x1DF0A039C](MEMORY[0x1E0CB0028], v1);
    atomic_store(result, (unint64_t *)&qword_1EDAE0140);
  }
  return result;
}

uint64_t sub_1DA5C9808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  _WORD v17[8];
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DA66C310();
  if (v9)
  {
    v18 = v8;
    v19 = v9;
    strcpy((char *)v17, "mzstatic.com");
    HIBYTE(v17[6]) = 0;
    v17[7] = -5120;
    sub_1DA498918();
    v10 = sub_1DA67033C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v11 = sub_1DA66C2BC();
      v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2558);
      sub_1DA4841D4(&qword_1EDAE24C8, &qword_1EDAE24D0, MEMORY[0x1E0DF1F60]);
      sub_1DA66C718();
      v18 = v11;
      v19 = v13;
      sub_1DA484214();
      if ((sub_1DA66F82C() & 1) != 0 || v11 == 0x627D687B787D777BLL && v13 == 0xED00007D667B2E62)
      {
        swift_bridgeObjectRelease();
LABEL_8:
        sub_1DA66C2F8();
        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      v14 = sub_1DA6706D8();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_8;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v16 = sub_1DA66C358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, v2, v16);
}

uint64_t sub_1DA5C9A64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  char *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  void (*v134)(char *, uint64_t);
  unint64_t v135;
  void (*v136)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;

  v125 = a1;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24C0);
  v126 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v124 = (char *)&v119 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v121 = (char *)&v119 - v3;
  MEMORY[0x1E0C80A78](v4);
  v140 = (char *)&v119 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24A0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1DA66C634();
  v150 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v10 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2498);
  v154 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v143 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v145 = (char *)&v119 - v14;
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24B0);
  v153 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v16 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v146 = (char *)&v119 - v18;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24E0);
  v122 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v138 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v147 = (char *)&v119 - v21;
  v22 = sub_1DA66C6E8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = v22;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v127 = (char *)&v119 - v28;
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2488);
  v149 = *(_QWORD *)(v156 - 8);
  MEMORY[0x1E0C80A78](v156);
  v120 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v152 = (char *)&v119 - v31;
  MEMORY[0x1E0C80A78](v32);
  v155 = (char *)&v119 - v33;
  MEMORY[0x1E0C80A78](v34);
  v151 = (char *)&v119 - v35;
  sub_1DA66C628();
  sub_1DA66C700();
  v137 = sub_1DA66C70C();
  v136 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56);
  v36 = (uint64_t)v8;
  v132 = v8;
  v136(v8, 1, 1, v137);
  sub_1DA66C628();
  v135 = sub_1DA4E6D24();
  v37 = MEMORY[0x1E0DEBAF0];
  v119 = v10;
  v38 = v144;
  v129 = v26;
  sub_1DA66C6D0();
  sub_1DA5CA7DC(v36);
  v134 = *(void (**)(char *, uint64_t))(v150 + 8);
  v134(v10, v38);
  v39 = *(void (**)(char *, uint64_t))(v23 + 8);
  v142 = v24;
  v39(v26, v24);
  v40 = v39;
  v41 = v143;
  MEMORY[0x1DF09B038](v16, v37);
  v42 = sub_1DA4841D4(&qword_1EDAE2490, &qword_1EDAE2498, MEMORY[0x1E0DEFEE8]);
  v43 = v145;
  v130 = v42;
  sub_1DA66C604();
  v44 = v41;
  v45 = *(void (**)(char *, uint64_t))(v154 + 8);
  v131 = v45;
  v45(v44, v11);
  sub_1DA66C610();
  v45(v43, v11);
  v46 = v153;
  v133 = *(void (**)(char *, char *, uint64_t))(v153 + 32);
  v47 = v146;
  v48 = v157;
  v133(v146, v16, v157);
  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDAE2560);
  v150 = sub_1DA4841D4(&qword_1EDAE24A8, &qword_1EDAE24B0, MEMORY[0x1E0DF1F60]);
  v50 = v147;
  v128 = v49;
  v51 = v127;
  sub_1DA66C6C4();
  v154 = *(_QWORD *)(v46 + 8);
  ((void (*)(char *, uint64_t))v154)(v47, v48);
  v40(v51, v24);
  v52 = v40;
  v53 = v155;
  v54 = v50;
  MEMORY[0x1DF09B02C](v50, v49);
  v153 = sub_1DA4841D4(&qword_1EDAE2480, &qword_1EDAE2488, MEMORY[0x1E0DEFEB0]);
  v55 = v156;
  sub_1DA66C604();
  v149 = *(_QWORD *)(v149 + 8);
  ((void (*)(char *, uint64_t))v149)(v53, v55);
  v162 = 120;
  v163 = 0xE100000000000000;
  v148 = sub_1DA484258();
  sub_1DA66C604();
  sub_1DA66C628();
  v56 = v119;
  sub_1DA66C700();
  v57 = (uint64_t)v132;
  v136(v132, 1, 1, v137);
  v58 = v129;
  sub_1DA66C628();
  v59 = MEMORY[0x1E0DEBAF0];
  v60 = v144;
  sub_1DA66C6D0();
  sub_1DA5CA7DC(v57);
  v134(v56, v60);
  v61 = v58;
  v62 = v142;
  v52(v61, v142);
  v63 = v52;
  v141 = v52;
  v64 = v143;
  MEMORY[0x1DF09B038](v16, v59);
  v65 = v145;
  sub_1DA66C604();
  v66 = v131;
  v131(v64, v11);
  sub_1DA66C610();
  v66(v65, v11);
  v67 = v146;
  v68 = v157;
  v133(v146, v16, v157);
  v69 = v54;
  v70 = v128;
  v71 = v127;
  sub_1DA66C6C4();
  ((void (*)(char *, uint64_t))v154)(v67, v68);
  v72 = v71;
  v63(v71, v62);
  v73 = v152;
  v74 = v70;
  MEMORY[0x1DF09B02C](v69, v70);
  v75 = v156;
  sub_1DA66C604();
  ((void (*)(char *, uint64_t))v149)(v73, v75);
  v160 = 25186;
  v161 = 0xE200000000000000;
  sub_1DA66C604();
  v158 = 46;
  v159 = 0xE100000000000000;
  sub_1DA66C604();
  sub_1DA66C628();
  sub_1DA66C6F4();
  v76 = (uint64_t)v132;
  v136(v132, 1, 1, v137);
  v77 = v129;
  sub_1DA66C628();
  v78 = MEMORY[0x1E0DEBAF0];
  v79 = v144;
  sub_1DA66C6D0();
  sub_1DA5CA7DC(v76);
  v134(v56, v79);
  v80 = v142;
  v81 = v141;
  v141(v77, v142);
  v82 = v143;
  MEMORY[0x1DF09B038](v16, v78);
  v83 = v145;
  sub_1DA66C604();
  v84 = v82;
  v85 = v131;
  v131(v84, v11);
  sub_1DA66C610();
  v85(v83, v11);
  v86 = v146;
  v87 = v157;
  v133(v146, v16, v157);
  v88 = v147;
  v89 = v72;
  sub_1DA66C6C4();
  v90 = (void (*)(char *, uint64_t))v154;
  ((void (*)(char *, uint64_t))v154)(v86, v87);
  v91 = v89;
  v81(v89, v80);
  v92 = v120;
  MEMORY[0x1DF09B02C](v88, v74);
  v93 = v156;
  sub_1DA66C604();
  ((void (*)(char *, uint64_t))v149)(v92, v93);
  sub_1DA66C610();
  v95 = v164;
  v94 = v165;
  sub_1DA66C628();
  v158 = v95;
  v159 = v94;
  v96 = v91;
  sub_1DA66C6B8();
  sub_1DA4841D4(&qword_1EDAE24D8, &qword_1EDAE24E0, MEMORY[0x1E0DF1F60]);
  v97 = v157;
  sub_1DA66C6AC();
  v90(v86, v97);
  v98 = v91;
  v99 = v142;
  v100 = v141;
  v141(v98, v142);
  swift_bridgeObjectRelease();
  sub_1DA66C628();
  v145 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2550);
  sub_1DA66C6AC();
  v101 = v100;
  v100(v96, v99);
  v102 = v162;
  v103 = v163;
  sub_1DA66C628();
  v158 = v102;
  v159 = v103;
  sub_1DA66C6B8();
  v144 = sub_1DA4841D4(&qword_1EDAE24B8, &qword_1EDAE24C0, MEMORY[0x1E0DF1F60]);
  v104 = v121;
  v105 = v123;
  v106 = v157;
  sub_1DA66C6AC();
  ((void (*)(char *, uint64_t))v154)(v86, v106);
  v101(v96, v99);
  swift_bridgeObjectRelease();
  v108 = v160;
  v107 = v161;
  sub_1DA66C628();
  v158 = v108;
  v159 = v107;
  sub_1DA66C6B8();
  v109 = v124;
  v110 = v157;
  sub_1DA66C6AC();
  ((void (*)(char *, uint64_t))v154)(v86, v110);
  v111 = v141;
  v141(v96, v99);
  swift_bridgeObjectRelease();
  sub_1DA66C628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE2558);
  v112 = v152;
  v113 = v156;
  sub_1DA66C6AC();
  v111(v96, v99);
  v114 = *(void (**)(char *, uint64_t))(v126 + 8);
  v114(v109, v105);
  v114(v104, v105);
  v114(v140, v105);
  v115 = *(void (**)(char *, uint64_t))(v122 + 8);
  v116 = v139;
  v115(v138, v139);
  v115(v147, v116);
  v117 = (void (*)(char *, uint64_t))v149;
  ((void (*)(char *, uint64_t))v149)(v112, v113);
  v117(v155, v113);
  return ((uint64_t (*)(char *, uint64_t))v117)(v151, v113);
}

uint64_t sub_1DA5CA7DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE24A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id PlaybackController.TransportCommand.request(for:)(id a1)
{
  uint64_t v1;
  double v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;

  v2 = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
  {
    if (*(_BYTE *)(v1 + 8) != 1)
      __asm { BR              X9 }
    v3 = objc_msgSend(a1, sel_tracklist);
    v4 = objc_msgSend(v3, sel_playingItem);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_playbackRateCommand);

      if (v5)
      {
        LODWORD(v6) = LODWORD(v2);
        v7 = objc_msgSend(v5, sel_setPlaybackRate_, v6);
LABEL_9:
        v4 = v7;
        swift_unknownObjectRelease();
        return v4;
      }
      return 0;
    }
  }
  else
  {
    v8 = objc_msgSend(a1, sel_tracklist);
    v4 = objc_msgSend(v8, sel_playingItem);

    if (v4)
    {
      v9 = objc_msgSend(v4, sel_seekCommand);

      if (v9)
      {
        v7 = objc_msgSend(v9, sel_changePositionToElapsedInterval_, v2);
        goto LABEL_9;
      }
      return 0;
    }
  }
  return v4;
}

BOOL PlaybackController.TransportCommand.canPerform(for:)(void *a1)
{
  id v1;
  id v2;

  v1 = PlaybackController.TransportCommand.request(for:)(a1);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t PlaybackController.TransportCommand.requiresLocalRoute.getter()
{
  return 0;
}

id sub_1DA5CAE60(void *a1)
{
  return PlaybackController.TransportCommand.request(for:)(a1);
}

BOOL sub_1DA5CAE84(void *a1)
{
  id v1;
  id v2;

  v1 = PlaybackController.TransportCommand.request(for:)(a1);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t sub_1DA5CAED4(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = PlaybackController.TransportCommand.request(for:)(a1);
  return sub_1DA5CDDF8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, (uint64_t)v2);
}

uint64_t sub_1DA5CAF0C(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = PlaybackController.TransportCommand.request(for:)(a1);
  v3 = v2;
  if (v2)

  return sub_1DA5CDDE8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v3 != 0);
}

id PlaybackController.SleepTimerCommand.request(for:)(void *a1)
{
  uint64_t v1;
  double v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(double *)v1;
  if (*(_BYTE *)(v1 + 8) != 1)
  {
    v6 = objc_msgSend(a1, sel_tracklist);
    v7 = objc_msgSend(v6, sel_sleepTimerCommand);

    if (v7)
    {
      v5 = objc_msgSend(v7, sel_startWithTime_, v2);
      goto LABEL_12;
    }
    return 0;
  }
  if (v2 == 0.0)
  {
    v8 = objc_msgSend(a1, sel_tracklist);
    v9 = objc_msgSend(v8, sel_sleepTimerCommand);

    if (v9)
    {
      v5 = objc_msgSend(v9, sel_startForChapterEnd);
      goto LABEL_12;
    }
    return 0;
  }
  if (*(_QWORD *)&v2 != 1)
  {
    v10 = objc_msgSend(a1, sel_tracklist);
    v11 = objc_msgSend(v10, sel_sleepTimerCommand);

    if (v11)
    {
      v5 = objc_msgSend(v11, sel_reset);
      goto LABEL_12;
    }
    return 0;
  }
  v3 = objc_msgSend(a1, sel_tracklist);
  v4 = objc_msgSend(v3, sel_sleepTimerCommand);

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, sel_startForItemEnd);
LABEL_12:
  v12 = v5;
  swift_unknownObjectRelease();
  return v12;
}

BOOL PlaybackController.SleepTimerCommand.canPerform(for:)(void *a1)
{
  id v1;
  id v2;

  v1 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t PlaybackController.SleepTimerCommand.requiresLocalRoute.getter()
{
  return 0;
}

BOOL static PlaybackController.SleepTimerCommand.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v4;
  uint64_t v6;
  char v7;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (v2 == 0.0)
    {
      if (v3 == 0.0)
        v6 = *(unsigned __int8 *)(a2 + 8);
      else
        LOBYTE(v6) = 0;
      if ((v6 & 1) != 0)
        return 1;
    }
    else if (*(_QWORD *)&v2 == 1)
    {
      if (*(_QWORD *)&v3 == 1)
        v4 = *(_BYTE *)(a2 + 8);
      else
        v4 = 0;
      if ((v4 & 1) != 0)
        return 1;
    }
    else
    {
      if (*(_QWORD *)&v3 > 1uLL)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      if ((v7 & 1) != 0)
        return 1;
    }
  }
  else if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    return v2 == *(double *)a2;
  }
  return 0;
}

id sub_1DA5CB1AC(void *a1)
{
  return PlaybackController.SleepTimerCommand.request(for:)(a1);
}

BOOL sub_1DA5CB1D0(void *a1)
{
  id v1;
  id v2;

  v1 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t sub_1DA5CB21C(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  unsigned int v5;
  BOOL v6;
  unsigned int v7;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  if (v3 == 0.0)
    v5 = *(unsigned __int8 *)(a2 + 8);
  else
    v5 = 0;
  v6 = *(_QWORD *)&v3 > 1uLL;
  if (*(_QWORD *)&v3 == 1)
    v7 = *(unsigned __int8 *)(a2 + 8);
  else
    v7 = 0;
  if (!v6)
    v4 = 0;
  if (*(_QWORD *)&v2 != 1)
    v7 = v4;
  if (v2 == 0.0)
    return v5;
  else
    return v7;
}

uint64_t sub_1DA5CB280(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  return sub_1DA5CDDF8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, (uint64_t)v2);
}

uint64_t sub_1DA5CB2B8(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = PlaybackController.SleepTimerCommand.request(for:)(a1);
  v3 = v2;
  if (v2)

  return sub_1DA5CDDE8(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v3 != 0);
}

uint64_t PlaybackController.QueueCommand.request(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6D8);
  v2[4] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE19C0);
  v2[5] = swift_task_alloc();
  v3 = sub_1DA66CFD0();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v4 = sub_1DA66D018();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for PlaybackController.QueueCommand();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1DA5CB438()
{
  uint64_t v0;
  char *v1;

  sub_1DA5CCD9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 128));
  v1 = (char *)&loc_1DA5CB484 + *((int *)qword_1DA5CBA08 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1DA5CB494()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = **(void ***)(v0 + 128);
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_tracklist);
  v3 = objc_msgSend(v2, sel_changeItemCommand);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_changeToItem_, v1);

    swift_unknownObjectRelease();
  }
  else
  {

    v4 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

uint64_t sub_1DA5CBA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5CBA8C()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(unsigned __int8 *)(v0 + 200);
  v2 = *(void **)(v0 + 136);
  if (v1 == 2)
  {
    if (v2 == (void *)1)
    {
      v13 = objc_msgSend(*(id *)(v0 + 16), sel_tracklist);
      v14 = objc_msgSend(v13, sel_insertCommand);

      v15 = *(void **)(v0 + 160);
      if (v14)
      {
        v6 = objc_msgSend(v14, sel_insertAtEndOfUpNextWithPlaybackIntent_, *(_QWORD *)(v0 + 160));

        swift_unknownObjectRelease();
        goto LABEL_12;
      }

LABEL_11:
      v6 = 0;
      goto LABEL_12;
    }
    if (!v2)
    {
      v3 = objc_msgSend(*(id *)(v0 + 16), sel_tracklist);
      v4 = objc_msgSend(v3, sel_insertCommand);

      v5 = *(void **)(v0 + 160);
      if (v4)
      {
        v6 = objc_msgSend(v4, sel_insertAfterPlayingItemWithPlaybackIntent_, *(_QWORD *)(v0 + 160));
        swift_unknownObjectRelease();

LABEL_12:
        v16 = *(_QWORD *)(v0 + 112);
        v17 = *(_QWORD *)(v0 + 88);
        v18 = *(_QWORD *)(v0 + 96);
        (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48));
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
        goto LABEL_13;
      }

      goto LABEL_11;
    }
  }
  v7 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 48);

  sub_1DA5893F0(v2, v1);
  v7(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v6 = 0;
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v6);
}

uint64_t sub_1DA5CBCA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1DA5CBD10()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_tracklist);
  v2 = objc_msgSend(v1, sel_resetCommand);

  if (!v2
    || (v3 = objc_msgSend(v2, sel_replaceWithPlaybackIntent_replaceIntent_, *(_QWORD *)(v0 + 184), 1),
        swift_unknownObjectRelease(),
        !v3))
  {
    v11 = *(void **)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));

    v3 = 0;
    goto LABEL_6;
  }
  v4 = v3;
  sub_1DA66CF70();
  v5 = (void *)sub_1DA66F88C();
  result = swift_bridgeObjectRelease();
  if (*MEMORY[0x1E0D4CBD8])
  {
    v7 = *(void **)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    objc_msgSend(v4, sel_setCommandOptionValue_forKey_, v5);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(id))(v0 + 8))(v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DA5CBEA8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 168);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 48);
  sub_1DA5893F0(*(id *)(v0 + 136), *(_BYTE *)(v0 + 200));
  v2(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1DA5CBF84()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaybackController.QueueCommand.canPerform(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for PlaybackController.QueueCommand();
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1DA5CC098()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  _QWORD *v4;
  id v6;
  id v7;
  id v8;

  sub_1DA5CCD9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  if (swift_getEnumCaseMultiPayload() != 2)
    goto LABEL_4;
  v1 = *(_QWORD *)(v0 + 40);
  sub_1DA5CCD9C(*(_QWORD *)(v0 + 48), v1);
  v2 = *(void **)v1;
  v3 = *(unsigned __int8 *)(v1 + 16);
  if (v3 != 255)
  {
    sub_1DA5CD2B0(*(id *)(*(_QWORD *)(v0 + 40) + 8), v3);

LABEL_4:
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_1DA5CC1E0;
    return PlaybackController.QueueCommand.request(for:)(*(_QWORD *)(v0 + 16));
  }
  v6 = objc_msgSend(*(id *)(v0 + 16), sel_tracklist);
  v7 = objc_msgSend(v6, sel_reorderCommand);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_canMoveItem_, v2);

    swift_unknownObjectRelease();
  }
  else
  {

    v8 = 0;
  }
  sub_1DA5CD2C4(*(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v8);
}

uint64_t sub_1DA5CC1E0(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 64) = a1;
  swift_task_dealloc();
  if (v1)

  return swift_task_switch();
}

uint64_t sub_1DA5CC254()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  if (v1)

  sub_1DA5CD2C4(*(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v1 != 0);
}

uint64_t sub_1DA5CC2B8()
{
  uint64_t v0;

  sub_1DA5CD2C4(*(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PlaybackController.QueueCommand.requiresLocalRoute.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1DA66CFB8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DA66CFD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackController.QueueCommand();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA5CCD9C(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v13 = sub_1DA66CFC4();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0D7DE70], v2);
    v14 = sub_1DA523A18((uint64_t)v5, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1DA5CD2C4((uint64_t)v12);
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1DA5CC490(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA4B1798;
  return PlaybackController.QueueCommand.request(for:)(a1);
}

uint64_t sub_1DA5CC4DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1DA5CE318;
  return PlaybackController.QueueCommand.canPerform(for:)(a1);
}

uint64_t _s10PodcastsUI18PlaybackControllerC12QueueCommandO8LocationO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;
  id v4;
  int v5;
  int v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v11;

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
      sub_1DA5892CC(v4, 0);
      sub_1DA5892CC(v2, 0);
      v6 = sub_1DA6701A4();
      sub_1DA5893F0(v2, 0);
      v7 = v4;
      v8 = 0;
      goto LABEL_7;
    }
    goto LABEL_19;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
      sub_1DA5892CC(v4, 1u);
      sub_1DA5892CC(v2, 1u);
      LOBYTE(v6) = sub_1DA6701A4();
      sub_1DA5893F0(v2, 1u);
      v7 = v4;
      v8 = 1;
LABEL_7:
      sub_1DA5893F0(v7, v8);
      return v6 & 1;
    }
    goto LABEL_19;
  }
  if (!v2)
  {
    if (v5 == 2 && v4 == 0)
    {
      sub_1DA5893F0(0, 2u);
      sub_1DA5893F0(0, 2u);
      return 1;
    }
    goto LABEL_19;
  }
  if (v5 != 2 || v4 != (id)1)
  {
LABEL_19:
    sub_1DA5892CC(*(id *)a2, *(_BYTE *)(a2 + 8));
    sub_1DA5892CC(v2, v3);
    sub_1DA5893F0(v2, v3);
    sub_1DA5893F0(v4, v5);
    return 0;
  }
  v11 = 1;
  sub_1DA5893F0((id)1, 2u);
  sub_1DA5893F0((id)1, 2u);
  return v11;
}

void _s10PodcastsUI18PlaybackControllerC12QueueCommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;

  v4 = sub_1DA66CFD0();
  v17[3] = *(_QWORD *)(v4 - 8);
  v17[4] = v4;
  MEMORY[0x1E0C80A78](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1DA66D018();
  v17[2] = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v17[1] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackController.QueueCommand();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C748);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v17 + *(int *)(v14 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DA5CCD9C(a1, (uint64_t)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DA5CCD9C(a2, (uint64_t)v15);
  v16 = (char *)sub_1DA5CC894 + 4 * byte_1DA680770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1DA5CC894()
{
  uint64_t v0;
  void **v1;
  void **v2;
  void *v3;
  void *v4;
  char v5;

  sub_1DA5CCD9C(v0, (uint64_t)v1);
  v3 = *v1;
  if (swift_getEnumCaseMultiPayload())
  {

    sub_1DA5CE2CC(v0);
    v5 = 0;
  }
  else
  {
    v4 = *v2;
    sub_1DA47D774(0, (unint64_t *)&qword_1EDADEE18);
    v5 = sub_1DA6701A4();

    sub_1DA5CD2C4(v0);
  }
  return v5 & 1;
}

uint64_t _s10PodcastsUI18PlaybackControllerC16TransportCommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
      return *(_BYTE *)(a2 + 8) == 1 && *(float *)&v2 == *(float *)&v3;
    return ((uint64_t (*)(void))((char *)&loc_1DA5CCCBC + 4 * byte_1DA680776[*(_QWORD *)&v2]))();
  }
  else
  {
    return !*(_BYTE *)(a2 + 8) && v2 == v3;
  }
}

uint64_t type metadata accessor for PlaybackController.QueueCommand()
{
  uint64_t result;

  result = qword_1EDAE3C50;
  if (!qword_1EDAE3C50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DA5CCD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DA5CCDE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1DA66F46C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE4C50);
    v10 = sub_1DA670420();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1DA47E32C(&qword_1EDAE4A38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40DE8], MEMORY[0x1E0D40DF8]);
      v14 = sub_1DA66F7F0();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1DA47E32C(&qword_1EDAE4A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D40DE8], MEMORY[0x1E0D40E00]);
          v20 = sub_1DA66F850();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1DA5CD048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1DA66CFB8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C750);
    v10 = sub_1DA670420();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1DA47E32C(&qword_1F026A0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE88], MEMORY[0x1E0D7DE98]);
      v14 = sub_1DA66F7F0();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1DA47E32C((unint64_t *)&unk_1F026A0D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D7DE88], MEMORY[0x1E0D7DEA0]);
          v20 = sub_1DA66F850();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

void sub_1DA5CD2B0(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_1DA5893F0(a1, a2);
}

uint64_t sub_1DA5CD2C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaybackController.QueueCommand();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of PlaybackCommand.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA4B17EC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PlaybackCommand.canPerform(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1DA5C6034;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PlaybackCommand.requiresLocalRoute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SynchronousPlaybackCommand.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SynchronousPlaybackCommand.canPerform(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for PlaybackController.TransportCommand()
{
  return &type metadata for PlaybackController.TransportCommand;
}

ValueMetadata *type metadata accessor for PlaybackController.SleepTimerCommand()
{
  return &type metadata for PlaybackController.SleepTimerCommand;
}

char *_s12QueueCommandOwCP(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  char *v11;
  char *v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  unsigned __int8 v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    sub_1DA66BE60();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        v7 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v11 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = a2 + 8;
        v13 = a2[16];
        v14 = v11;
        if (v13 == 255)
        {
          *((_QWORD *)a1 + 1) = *(_QWORD *)v12;
          a1[16] = v12[8];
        }
        else
        {
          v15 = *(_QWORD *)v12;
          sub_1DA5892CC(*(id *)v12, v13);
          *((_QWORD *)a1 + 1) = v15;
          a1[16] = v13;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v16 = sub_1DA66D018();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = *(id *)v19;
        v21 = v19[8];
        sub_1DA5892CC(*(id *)v19, v21);
        *(_QWORD *)v18 = v20;
        v18[8] = v21;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v22 = sub_1DA66CFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void _s12QueueCommandOwxx(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:

      break;
    case 2u:

      v2 = *(unsigned __int8 *)(a1 + 16);
      if (v2 != 255)
      {
        v3 = *(void **)(a1 + 8);
        goto LABEL_7;
      }
      break;
    case 3u:
      v4 = sub_1DA66D018();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
      v3 = *(void **)v5;
      LOBYTE(v2) = *(_BYTE *)(v5 + 8);
LABEL_7:
      sub_1DA5893F0(v3, v2);
      break;
    case 4u:
      v6 = sub_1DA66CFD0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      break;
    default:
      return;
  }
}

void **_s12QueueCommandOwcp(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  char *v9;
  int v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      goto LABEL_9;
    case 2u:
      v8 = *a2;
      *a1 = *a2;
      v9 = (char *)(a2 + 1);
      v10 = *((unsigned __int8 *)a2 + 16);
      v11 = v8;
      if (v10 == 255)
      {
        a1[1] = *(void **)v9;
        *((_BYTE *)a1 + 16) = v9[8];
      }
      else
      {
        v12 = *(void **)v9;
        sub_1DA5892CC(*(id *)v9, v10);
        a1[1] = v12;
        *((_BYTE *)a1 + 16) = v10;
      }
      goto LABEL_9;
    case 3u:
      v13 = sub_1DA66D018();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = *(id *)v16;
      v18 = v16[8];
      sub_1DA5892CC(*(id *)v16, v18);
      *(_QWORD *)v15 = v17;
      v15[8] = v18;
      goto LABEL_9;
    case 4u:
      v19 = sub_1DA66CFD0();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *_s12QueueCommandOwca(char *a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  char *v9;
  int v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  id v20;

  if (a1 != (char *)a2)
  {
    sub_1DA5CD2C4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        v6 = *a2;
        *(_QWORD *)a1 = *a2;
        v7 = v6;
        goto LABEL_10;
      case 2u:
        v8 = *a2;
        *(_QWORD *)a1 = *a2;
        v9 = (char *)(a2 + 1);
        v10 = *((unsigned __int8 *)a2 + 16);
        v11 = v8;
        if (v10 == 255)
        {
          v20 = *(id *)v9;
          a1[16] = v9[8];
          *((_QWORD *)a1 + 1) = v20;
        }
        else
        {
          v12 = *(id *)v9;
          sub_1DA5892CC(*(id *)v9, v10);
          *((_QWORD *)a1 + 1) = v12;
          a1[16] = v10;
        }
        goto LABEL_10;
      case 3u:
        v13 = sub_1DA66D018();
        (*(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
        v15 = &a1[v14];
        v16 = (char *)a2 + v14;
        v17 = *(id *)v16;
        v18 = v16[8];
        sub_1DA5892CC(*(id *)v16, v18);
        *(_QWORD *)v15 = v17;
        v15[8] = v18;
        goto LABEL_10;
      case 4u:
        v19 = sub_1DA66CFD0();
        (*(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *_s12QueueCommandOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    v11 = sub_1DA66CFD0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = sub_1DA66D018();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s12QueueCommandOwta(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1DA5CD2C4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      v11 = sub_1DA66CFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 3)
    {
      v7 = sub_1DA66D018();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6B8) + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DA5CDC48()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;

  v4 = MEMORY[0x1E0DE9D10] + 64;
  v5 = MEMORY[0x1E0DE9D10] + 64;
  v6 = &unk_1DA680948;
  result = sub_1DA66D018();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v3;
    result = sub_1DA66CFD0();
    if (v2 <= 0x3F)
    {
      v8 = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s12QueueCommandO8LocationOwCP(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5892CC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s12QueueCommandO8LocationOwxx(uint64_t a1)
{
  sub_1DA5893F0(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s12QueueCommandO8LocationOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1DA5892CC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1DA5893F0(v5, v6);
  return a1;
}

uint64_t _s12QueueCommandO8LocationOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1DA5893F0(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlaybackController.QueueCommand.Location()
{
  return &type metadata for PlaybackController.QueueCommand.Location;
}

uint64_t sub_1DA5CDDE8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1DA5CDDF8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1DA5CDE0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C758);
    v3 = sub_1DA670420();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1DA66F8BC();
      sub_1DA670798();
      v7 = v6;
      sub_1DA66F94C();
      v8 = sub_1DA6707C8();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1DA66F8BC();
        v17 = v16;
        if (v15 == sub_1DA66F8BC() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1DA6706D8();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1DA66F8BC();
          v24 = v23;
          if (v22 == sub_1DA66F8BC() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1DA6706D8();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1DA5CE038(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1DA6705A0();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C730);
      result = sub_1DA670420();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1DA6705A0();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1DF09EE48](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_1DA66DFA8();
    sub_1DA47E32C(&qword_1F026C738, v8, MEMORY[0x1E0C95E18]);
    result = sub_1DA66F7F0();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_1DA47E32C(&qword_1F026C740, v8, MEMORY[0x1E0C95E20]);
      do
      {
        result = sub_1DA66F850();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = sub_1DA66BE60();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DA5CE2CC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PlaybackUtils()
{
  return objc_opt_self();
}

BOOL static RecommendationUserAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecommendationUserAction.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t RecommendationUserAction.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

unint64_t sub_1DA5CE3C4()
{
  unint64_t result;

  result = qword_1F026C7F8;
  if (!qword_1F026C7F8)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for RecommendationUserAction, &type metadata for RecommendationUserAction);
    atomic_store(result, (unint64_t *)&qword_1F026C7F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecommendationUserAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DA5CE454 + 4 * byte_1DA6809D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DA5CE488 + 4 * asc_1DA6809D0[v4]))();
}

uint64_t sub_1DA5CE488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5CE490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5CE498);
  return result;
}

uint64_t sub_1DA5CE4A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5CE4ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DA5CE4B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5CE4B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecommendationUserAction()
{
  return &type metadata for RecommendationUserAction;
}

void *sub_1DA5CE4D4()
{
  void **v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  Swift::String v25;
  NSError_optional *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  uint8_t *v37;
  void **v38;
  void *v39;
  Swift::String v40;
  NSError_optional *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint8_t *v52;
  uint8_t *v53;
  void *v54;
  Swift::String v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char *v62;
  NSObject *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  _QWORD *v67;
  void *v68;
  Swift::String v69;
  NSError_optional *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  NSObject *v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  Swift::String v94;
  NSError_optional *v95;
  void *v96;
  id v97;
  void *v98;
  Swift::String v99;
  NSError_optional *v100;
  void *v101;
  void *v102;
  char *v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  id *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  _QWORD *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint8_t *v118;
  _QWORD *v119;
  uint8_t *v120;
  uint8_t *v121;
  id *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  void **v132;
  NSObject *v133;

  v128 = _s12ErrorHandlerVMa();
  MEMORY[0x1E0C80A78](v128);
  v2 = (id *)((char *)&v118 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
  MEMORY[0x1E0C80A78](v3);
  v127 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C6D8);
  MEMORY[0x1E0C80A78](v5);
  v125 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DA66D618();
  v130 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1DA66DEF4();
  v10 = *(uint8_t **)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v126 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)&v118 - v13;
  MEMORY[0x1E0C80A78](v14);
  v124 = (char *)&v118 - v15;
  MEMORY[0x1E0C80A78](v16);
  v129 = (char *)&v118 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v118 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v118 - v22;
  v132 = v0;
  v24 = (void *)sub_1DA66C1F0();
  v25._countAndFlagsBits = sub_1DA66F8BC();
  NSError.errorByUnwrapping(domain:)(v26, v25);
  v28 = v27;

  swift_bridgeObjectRelease();
  if (v28)
  {
    v29 = objc_msgSend(v28, sel_code);
    if (v29 == (id)-11870)
      goto LABEL_5;
    if (v29 == (id)-11819)
    {
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      *(_OWORD *)v30 = xmmword_1DA680A90;
      goto LABEL_7;
    }
    if (v29 == (id)-11828)
    {
LABEL_5:
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      *(_QWORD *)v30 = 0;
      *(_QWORD *)(v30 + 8) = 0;
LABEL_7:
      *(_BYTE *)(v30 + 16) = 4;

      return v31;
    }
    v121 = v10;
    sub_1DA66DE70();
    v32 = v28;
    v33 = sub_1DA66DEDC();
    v34 = sub_1DA66FDA8();
    if (os_log_type_enabled(v33, v34))
    {
      v122 = v2;
      v35 = (uint8_t *)swift_slowAlloc();
      v119 = (_QWORD *)swift_slowAlloc();
      v120 = v35;
      *(_DWORD *)v35 = 138412290;
      v118 = v35 + 4;
      v133 = v32;
      v32 = v32;
      v2 = v122;
      sub_1DA6702C4();
      v36 = v119;
      *v119 = v28;

      v37 = v120;
      _os_log_impl(&dword_1DA478000, v33, v34, "Unhandled AVFoundation error: %@", v120, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v36, -1, -1);
      MEMORY[0x1DF0A0474](v37, -1, -1);
    }
    else
    {

      v33 = v32;
    }

    v10 = v121;
    (*((void (**)(char *, uint64_t))v121 + 1))(v23, v131);
  }
  v122 = v2;
  v38 = v132;
  v39 = (void *)sub_1DA66C1F0();
  v40._countAndFlagsBits = sub_1DA66F8BC();
  NSError.errorByUnwrapping(domain:)(v41, v40);
  v43 = v42;

  swift_bridgeObjectRelease();
  if (!v43)
    goto LABEL_25;
  v44 = objc_msgSend(v43, sel_code);
  if (v44 == (id)-1014)
  {
    sub_1DA5D02E4();
    v31 = (void *)swift_allocError();
    v46 = xmmword_1DA680A90;
LABEL_19:
    *(_OWORD *)v45 = v46;
    goto LABEL_20;
  }
  if (v44 == (id)-1002)
  {
    sub_1DA5D02E4();
    v31 = (void *)swift_allocError();
    v46 = xmmword_1DA680AA0;
    goto LABEL_19;
  }
  if (v44 == (id)-1004)
  {
    sub_1DA5D02E4();
    v31 = (void *)swift_allocError();
    *(_QWORD *)v45 = 0;
    *(_QWORD *)(v45 + 8) = 0;
LABEL_20:
    v47 = 2;
LABEL_29:
    *(_BYTE *)(v45 + 16) = v47;

    return v31;
  }
  sub_1DA66DE70();
  v48 = v43;
  v49 = sub_1DA66DEDC();
  v50 = sub_1DA66FDA8();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v120 = (uint8_t *)swift_slowAlloc();
    v121 = v51;
    *(_DWORD *)v51 = 138543362;
    v119 = v51 + 4;
    v133 = v48;
    v48 = v48;
    sub_1DA6702C4();
    v52 = v120;
    *(_QWORD *)v120 = v43;

    v53 = v121;
    _os_log_impl(&dword_1DA478000, v49, v50, "Unhandled ICKeyServerError error: %{public}@", v121, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
    swift_arrayDestroy();
    MEMORY[0x1DF0A0474](v52, -1, -1);
    MEMORY[0x1DF0A0474](v53, -1, -1);
  }
  else
  {

    v49 = v48;
  }

  (*((void (**)(char *, uint64_t))v10 + 1))(v20, v131);
  v38 = v132;
LABEL_25:
  v54 = (void *)sub_1DA66C1F0();
  v55._object = (void *)0x80000001DA6901A0;
  v55._countAndFlagsBits = 0xD000000000000027;
  NSError.errorByUnwrapping(domain:)((NSError_optional *)"_TtC10PodcastsUI13PlaybackUtils", v55);
  v43 = v56;

  if (v43)
  {
    v57 = objc_msgSend(v43, sel_code);
    v58 = v130;
    (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v9, *MEMORY[0x1E0D7E630], v7);
    v59 = sub_1DA66D60C();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v7);
    if ((id)v59 == v57)
    {
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      v60 = xmmword_1DA680AB0;
LABEL_28:
      *(_OWORD *)v45 = v60;
      v47 = 4;
      goto LABEL_29;
    }
    v62 = v129;
    sub_1DA66DE70();
    v63 = v43;
    v64 = sub_1DA66DEDC();
    v65 = sub_1DA66FDA8();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v66 = 138543362;
      v133 = v63;
      v63 = v63;
      v62 = v129;
      v38 = v132;
      sub_1DA6702C4();
      *v67 = v43;

      _os_log_impl(&dword_1DA478000, v64, v65, "Unhandled FairPlayKeyLoadError error: %{public}@", v66, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
      swift_arrayDestroy();
      MEMORY[0x1DF0A0474](v67, -1, -1);
      MEMORY[0x1DF0A0474](v66, -1, -1);
    }
    else
    {

      v64 = v63;
    }

    (*((void (**)(char *, uint64_t))v10 + 1))(v62, v131);
  }
  v68 = (void *)sub_1DA66C1F0();
  v69._countAndFlagsBits = sub_1DA66F8BC();
  NSError.errorByUnwrapping(domain:)(v70, v69);
  v72 = v71;

  swift_bridgeObjectRelease();
  if (v72)
  {
    v73 = (uint64_t)objc_msgSend(v72, sel_code);
    if (v73 > -1009)
    {
      if (v73 != -1008 && v73 != -1003)
      {
LABEL_47:
        v84 = v124;
        sub_1DA66DE70();
        v85 = v72;
        v86 = sub_1DA66DEDC();
        v87 = sub_1DA66FDA8();
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc();
          v89 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v88 = 138412290;
          v133 = v85;
          v85 = v85;
          v38 = v132;
          v84 = v124;
          sub_1DA6702C4();
          *v89 = v72;

          _os_log_impl(&dword_1DA478000, v86, v87, "Unhandled network error: %@", v88, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
          swift_arrayDestroy();
          MEMORY[0x1DF0A0474](v89, -1, -1);
          MEMORY[0x1DF0A0474](v88, -1, -1);
        }
        else
        {

          v86 = v85;
        }

        (*((void (**)(char *, uint64_t))v10 + 1))(v84, v131);
        goto LABEL_53;
      }
    }
    else if (v73 != -1100)
    {
      if (v73 == -1009)
      {
        sub_1DA5D02E4();
        v31 = (void *)swift_allocError();
        *(_OWORD *)v74 = xmmword_1DA680AA0;
        *(_BYTE *)(v74 + 16) = 4;

        return v31;
      }
      goto LABEL_47;
    }
    v75 = v127;
    sub_1DA5D0328((uint64_t)v38 + *(int *)(v128 + 20), v127);
    v76 = sub_1DA66CFD0();
    v77 = *(_QWORD *)(v76 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76) == 1)
    {
      v78 = &qword_1F026C810;
      v79 = v75;
    }
    else
    {
      v80 = v125;
      sub_1DA66CF40();
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
      v81 = sub_1DA66C7B4();
      v82 = *(_QWORD *)(v81 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) != 1)
      {
        v90 = sub_1DA66C7A8();
        v92 = v91;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v81);
        sub_1DA5D02E4();
        v31 = (void *)swift_allocError();
        *(_QWORD *)v83 = v90;
        *(_QWORD *)(v83 + 8) = v92;
        goto LABEL_50;
      }
      v78 = &qword_1F026C6D8;
      v79 = (uint64_t)v80;
    }
    sub_1DA47E2F0(v79, v78);
    sub_1DA5D02E4();
    v31 = (void *)swift_allocError();
    *(_QWORD *)v83 = 0;
    *(_QWORD *)(v83 + 8) = 0;
LABEL_50:
    *(_BYTE *)(v83 + 16) = 0;

    return v31;
  }
LABEL_53:
  v31 = *v38;
  v93 = (void *)sub_1DA66C1F0();
  v94._countAndFlagsBits = sub_1DA66F8BC();
  NSError.errorByUnwrapping(domain:)(v95, v94);
  v43 = v96;

  swift_bridgeObjectRelease();
  if (v43)
  {
    v97 = objc_msgSend(v43, sel_code);
    if (v97 == (id)2004)
    {
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      *(_QWORD *)v45 = 0;
      *(_QWORD *)(v45 + 8) = 0;
      v47 = 3;
      goto LABEL_29;
    }
    if (v97 == (id)1)
    {
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      v60 = xmmword_1DA680AC0;
      goto LABEL_28;
    }

  }
  v98 = (void *)sub_1DA66C1F0();
  v99._countAndFlagsBits = sub_1DA66F8BC();
  NSError.errorByUnwrapping(domain:)(v100, v99);
  v102 = v101;

  swift_bridgeObjectRelease();
  if (!v102)
    goto LABEL_65;
  if (objc_msgSend(v102, sel_code) != (id)1000)
  {

LABEL_65:
    if ((objc_msgSend(*(void **)((char *)v38 + *(int *)(v128 + 24)), sel_isReachable) & 1) != 0)
    {
      v108 = v31;
    }
    else
    {
      sub_1DA66DE70();
      v109 = (uint64_t)v38;
      v110 = v122;
      sub_1DA5D02A0(v109, (uint64_t)v122);
      v111 = sub_1DA66DEDC();
      v112 = sub_1DA66FDA8();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = (uint8_t *)swift_slowAlloc();
        v114 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v113 = 138412290;
        v115 = *v110;
        v116 = _swift_stdlib_bridgeErrorToNSError();
        v133 = v116;
        sub_1DA6702C4();
        *v114 = v116;
        sub_1DA552A10((uint64_t)v110);
        _os_log_impl(&dword_1DA478000, v111, v112, "Unreachable: %@", v113, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53A0);
        swift_arrayDestroy();
        MEMORY[0x1DF0A0474](v114, -1, -1);
        MEMORY[0x1DF0A0474](v113, -1, -1);
      }
      else
      {
        sub_1DA552A10((uint64_t)v110);
      }

      (*((void (**)(char *, uint64_t))v10 + 1))(v126, v131);
      sub_1DA5D02E4();
      v31 = (void *)swift_allocError();
      *(_OWORD *)v117 = xmmword_1DA680AA0;
      *(_BYTE *)(v117 + 16) = 4;
    }
    return v31;
  }
  v103 = v123;
  sub_1DA66DE70();
  v104 = sub_1DA66DEDC();
  v105 = sub_1DA66FDA8();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v106 = 0;
    _os_log_impl(&dword_1DA478000, v104, v105, "MPC was unable to handle this intent. Is MPC up to date?", v106, 2u);
    MEMORY[0x1DF0A0474](v106, -1, -1);
  }

  (*((void (**)(char *, uint64_t))v10 + 1))(v103, v131);
  sub_1DA5D02E4();
  v31 = (void *)swift_allocError();
  *(_QWORD *)v107 = v102;
  *(_QWORD *)(v107 + 8) = 0;
  *(_BYTE *)(v107 + 16) = 1;
  return v31;
}

BOOL static PlaybackController.FairPlayKeyServerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PlaybackController.FairPlayKeyServerError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t PlaybackController.FairPlayKeyServerError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

uint64_t static PlaybackController.CommandError.== infix(_:_:)()
{
  return 1;
}

uint64_t PlaybackController.CommandError.hash(into:)()
{
  return sub_1DA6707A4();
}

uint64_t PlaybackController.CommandError.hashValue.getter()
{
  sub_1DA670798();
  sub_1DA6707A4();
  return sub_1DA6707C8();
}

void __swiftcall NSError.errorByUnwrapping(domain:)(NSError_optional *__return_ptr retstr, Swift::String domain)
{
  void *v2;
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  Swift::String v21;
  NSError_optional *v22;
  uint64_t v23;
  unint64_t v24;

  object = domain._object;
  countAndFlagsBits = domain._countAndFlagsBits;
  v5 = objc_msgSend(v2, sel_domain);
  v6 = sub_1DA66F8BC();
  v8 = v7;

  if (v6 == countAndFlagsBits && v8 == object)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v10 = sub_1DA6706D8();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_13:
    v18 = v2;
    return;
  }
  v11 = objc_msgSend(v2, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDAE53C0);
  v12 = sub_1DA66FA9C();

  v13 = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v12 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v14; ++i)
    {
      v16 = *(void **)(v12 + 8 * i + 32);
      v17 = v16;
      sub_1DA66C1F0();

      MEMORY[0x1DF09E464]();
      if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DA66FAC0();
      sub_1DA66FB14();
      sub_1DA66FAB4();
    }
    swift_bridgeObjectRelease();
    v13 = v24;
  }
  swift_bridgeObjectRelease();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1DA6705A0();
    swift_bridgeObjectRelease();
    if (v23)
      goto LABEL_16;
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_21;
LABEL_16:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x1DF09EE48](0, v13);
    goto LABEL_19;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v13 + 32);
LABEL_19:
    v20 = v19;
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = countAndFlagsBits;
    v21._object = object;
    NSError.errorByUnwrapping(domain:)(v22, v21);

    return;
  }
  __break(1u);
}

unint64_t sub_1DA5CF6E0()
{
  unint64_t result;

  result = qword_1F026C800;
  if (!qword_1F026C800)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlaybackController.FairPlayKeyServerError, &type metadata for PlaybackController.FairPlayKeyServerError);
    atomic_store(result, (unint64_t *)&qword_1F026C800);
  }
  return result;
}

unint64_t sub_1DA5CF728()
{
  unint64_t result;

  result = qword_1F026C808;
  if (!qword_1F026C808)
  {
    result = MEMORY[0x1DF0A039C](&protocol conformance descriptor for PlaybackController.CommandError, &type metadata for PlaybackController.CommandError);
    atomic_store(result, (unint64_t *)&qword_1F026C808);
  }
  return result;
}

id sub_1DA5CF770(id result, id a2, char a3)
{
  if (a3 == 1)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void _s11PlayerErrorOwxx(uint64_t a1)
{
  sub_1DA506D64(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11PlayerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1DA5CF770(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11PlayerErrorOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1DA5CF770(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1DA506D64(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s11PlayerErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1DA506D64(v4, v5, v6);
  return a1;
}

uint64_t _s11PlayerErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s11PlayerErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1DA5CF920(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1DA5CF938(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.PlayerError()
{
  return &type metadata for PlaybackController.PlayerError;
}

uint64_t _s22FairPlayKeyServerErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DA5CF9AC + 4 * byte_1DA680AE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DA5CF9E0 + 4 * byte_1DA680AE0[v4]))();
}

uint64_t sub_1DA5CF9E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5CF9E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DA5CF9F0);
  return result;
}

uint64_t sub_1DA5CF9FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DA5CFA04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DA5CFA08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DA5CFA10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.FairPlayKeyServerError()
{
  return &type metadata for PlaybackController.FairPlayKeyServerError;
}

uint64_t _s12CommandErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DA5CFA6C + 4 * byte_1DA680AEA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DA5CFA8C + 4 * byte_1DA680AEF[v4]))();
}

_BYTE *sub_1DA5CFA6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DA5CFA8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5CFA94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5CFA9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DA5CFAA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DA5CFAAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError()
{
  return &type metadata for PlaybackController.CommandError;
}

char *sub_1DA5CFAC8(char *a1, void **a2, uint64_t a3)
{
  char *v3;
  int v4;
  char *v5;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    v3 = &v5[(v4 + 16) & ~(unint64_t)v4];
    sub_1DA66BE60();
  }
  else
  {
    v8 = v5;
    *(_QWORD *)v3 = v5;
    v9 = *(int *)(a3 + 20);
    v10 = &v3[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1DA66CFD0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_QWORD *)&v3[*(int *)(a3 + 24)] = *(void **)((char *)a2 + *(int *)(a3 + 24));
    swift_unknownObjectRetain();
  }
  return v3;
}

uint64_t sub_1DA5CFBD8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1DA66CFD0();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return swift_unknownObjectRelease();
}

_QWORD *sub_1DA5CFC58(_QWORD *a1, id *a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a2;
  v7 = *a2;
  *a1 = v6;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1DA66CFD0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(id *)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRetain();
  return a1;
}

void **sub_1DA5CFD3C(void **a1, id *a2, uint64_t a3)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a2;
  v8 = *a1;
  *a1 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1DA66CFD0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(id *)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *sub_1DA5CFE80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DA66CFD0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_1DA5CFF58(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1DA66CFD0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 24)) = *(void **)((char *)a2 + *(int *)(a3 + 24));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1DA5D008C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DA5D0098(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1DA5D0118()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1DA5D0124(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F026C810);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

