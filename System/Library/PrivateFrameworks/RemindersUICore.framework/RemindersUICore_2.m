id *sub_1B42D3670(id *a1)
{
  destroy for TTRRemindersListViewModel.LocationData(a1);
  return a1;
}

uint64_t sub_1B42D36A4(uint64_t a1)
{
  destroy for TTRReminderDetailViewModel.Person(a1);
  return a1;
}

id *sub_1B42D36D8(id *a1)
{
  destroy for TTRAssigneeCandidateData(a1);
  return a1;
}

uint64_t sub_1B42D370C(uint64_t a1)
{
  destroy for TTRAssignment(a1);
  return a1;
}

uint64_t sub_1B42D3740(uint64_t a1)
{
  destroy for TTRRemindersListViewModel.AssignmentData(a1);
  return a1;
}

uint64_t sub_1B42D3774(uint64_t a1)
{
  destroy for TTRRemindersListViewModel.SuggestedSectionDisplayStyle(a1);
  return a1;
}

id *sub_1B42D37A8(id *a1)
{
  destroy for TTRRemindersListViewModel.AppLink(a1);
  return a1;
}

_QWORD *sub_1B42D37DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  _OWORD *v90;
  _OWORD *v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;

  v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v36 = sub_1B49037E8();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v45 = sub_1B49037E8();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
      v38 = v37[5];
      v39 = (_OWORD *)((char *)a1 + v38);
      v40 = (_OWORD *)((char *)a2 + v38);
      v41 = v40[3];
      v39[2] = v40[2];
      v39[3] = v41;
      v42 = v40[1];
      *v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      v43 = v40[6];
      v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((_BYTE *)a1 + v37[6]) = *((_BYTE *)a2 + v37[6]);
      *((_BYTE *)a1 + v37[7]) = *((_BYTE *)a2 + v37[7]);
      *((_BYTE *)a1 + v37[8]) = *((_BYTE *)a2 + v37[8]);
      *((_BYTE *)a1 + v37[9]) = *((_BYTE *)a2 + v37[9]);
      *((_BYTE *)a1 + v37[10]) = *((_BYTE *)a2 + v37[10]);
      *(_QWORD *)((char *)a1 + v37[11]) = *(_QWORD *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        goto LABEL_7;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v46 = sub_1B49037E8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v10 = (char *)a1 + v14;
      v11 = (char *)a2 + v14;
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        goto LABEL_7;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v47 = sub_1B49037E8();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
      v10 = (char *)a1 + v16;
      v11 = (char *)a2 + v16;
      v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EBE70);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v48 = sub_1B49037E8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(_QWORD *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      v49 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
      *(_QWORD *)((char *)a1 + v49[5]) = *(_QWORD *)((char *)a2 + v49[5]);
      v50 = v49[6];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v51[4] = v52[4];
      *(_DWORD *)v51 = *(_DWORD *)v52;
      *(_QWORD *)((char *)a1 + v49[7]) = *(_QWORD *)((char *)a2 + v49[7]);
      *((_BYTE *)a1 + v49[8]) = *((_BYTE *)a2 + v49[8]);
      *(_OWORD *)((char *)a1 + v49[9]) = *(_OWORD *)((char *)a2 + v49[9]);
      *(_OWORD *)((char *)a1 + v49[10]) = *(_OWORD *)((char *)a2 + v49[10]);
      v53 = v49[11];
      v54 = (_OWORD *)((char *)a1 + v53);
      v55 = (_OWORD *)((char *)a2 + v53);
      v56 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
      v57 = *((_QWORD *)v56 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB840);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        *v54 = *v55;
        v59 = v56[5];
        v60 = (char *)v54 + v59;
        v61 = (char *)v55 + v59;
        v62 = sub_1B49037E8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        *((_BYTE *)v54 + v56[6]) = *((_BYTE *)v55 + v56[6]);
        *((_BYTE *)v54 + v56[7]) = *((_BYTE *)v55 + v56[7]);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
      }
      v63 = v49[12];
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      v66 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v66;
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      v64[48] = v65[48];
      *((_BYTE *)a1 + v49[13]) = *((_BYTE *)a2 + v49[13]);
      *(_QWORD *)((char *)a1 + v49[14]) = *(_QWORD *)((char *)a2 + v49[14]);
      *(_QWORD *)((char *)a1 + v49[15]) = *(_QWORD *)((char *)a2 + v49[15]);
      *(_QWORD *)((char *)a1 + v49[16]) = *(_QWORD *)((char *)a2 + v49[16]);
      *((_BYTE *)a1 + v49[17]) = *((_BYTE *)a2 + v49[17]);
      *(_QWORD *)((char *)a1 + v49[18]) = *(_QWORD *)((char *)a2 + v49[18]);
      *(_QWORD *)((char *)a1 + v49[19]) = *(_QWORD *)((char *)a2 + v49[19]);
      *(_QWORD *)((char *)a1 + v49[20]) = *(_QWORD *)((char *)a2 + v49[20]);
      *(_QWORD *)((char *)a1 + v49[21]) = *(_QWORD *)((char *)a2 + v49[21]);
      v67 = v49[22];
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      *(_QWORD *)v68 = *(_QWORD *)v69;
      v68[8] = v69[8];
      *((_BYTE *)a1 + v49[23]) = *((_BYTE *)a2 + v49[23]);
      *((_BYTE *)a1 + v49[24]) = *((_BYTE *)a2 + v49[24]);
      *((_BYTE *)a1 + v49[25]) = *((_BYTE *)a2 + v49[25]);
      *(_QWORD *)((char *)a1 + v49[26]) = *(_QWORD *)((char *)a2 + v49[26]);
      *(_QWORD *)((char *)a1 + v49[27]) = *(_QWORD *)((char *)a2 + v49[27]);
      *((_BYTE *)a1 + v49[28]) = *((_BYTE *)a2 + v49[28]);
      *(_OWORD *)((char *)a1 + v49[29]) = *(_OWORD *)((char *)a2 + v49[29]);
      v70 = v49[30];
      v71 = (char *)a1 + v70;
      v72 = (char *)a2 + v70;
      *(_OWORD *)v71 = *(_OWORD *)v72;
      v71[16] = v72[16];
      v73 = v49[31];
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      *(_OWORD *)v74 = *(_OWORD *)v75;
      *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
      *((_BYTE *)a1 + v49[32]) = *((_BYTE *)a2 + v49[32]);
      v76 = v49[33];
      v77 = (char *)a1 + v76;
      v78 = (char *)a2 + v76;
      v79 = *((_OWORD *)v78 + 13);
      *((_OWORD *)v77 + 12) = *((_OWORD *)v78 + 12);
      *((_OWORD *)v77 + 13) = v79;
      *((_QWORD *)v77 + 28) = *((_QWORD *)v78 + 28);
      v80 = *((_OWORD *)v78 + 9);
      *((_OWORD *)v77 + 8) = *((_OWORD *)v78 + 8);
      *((_OWORD *)v77 + 9) = v80;
      v81 = *((_OWORD *)v78 + 11);
      *((_OWORD *)v77 + 10) = *((_OWORD *)v78 + 10);
      *((_OWORD *)v77 + 11) = v81;
      v82 = *((_OWORD *)v78 + 5);
      *((_OWORD *)v77 + 4) = *((_OWORD *)v78 + 4);
      *((_OWORD *)v77 + 5) = v82;
      v83 = *((_OWORD *)v78 + 7);
      *((_OWORD *)v77 + 6) = *((_OWORD *)v78 + 6);
      *((_OWORD *)v77 + 7) = v83;
      v84 = *((_OWORD *)v78 + 1);
      *(_OWORD *)v77 = *(_OWORD *)v78;
      *((_OWORD *)v77 + 1) = v84;
      v85 = *((_OWORD *)v78 + 3);
      *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
      *((_OWORD *)v77 + 3) = v85;
      v86 = v49[34];
      v87 = (char *)a1 + v86;
      v88 = (char *)a2 + v86;
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
      *((_BYTE *)a1 + v49[35]) = *((_BYTE *)a2 + v49[35]);
      v89 = v49[36];
      v90 = (_OWORD *)((char *)a1 + v89);
      v91 = (_OWORD *)((char *)a2 + v89);
      v92 = v91[1];
      *v90 = *v91;
      v90[1] = v92;
      v93 = v49[37];
      v94 = (char *)a1 + v93;
      v95 = (char *)a2 + v93;
      *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      *(_OWORD *)((char *)a1 + v49[38]) = *(_OWORD *)((char *)a2 + v49[38]);
      *((_BYTE *)a1 + v49[39]) = *((_BYTE *)a2 + v49[39]);
      *((_BYTE *)a1 + v49[40]) = *((_BYTE *)a2 + v49[40]);
      *(_QWORD *)((char *)a1 + v49[41]) = *(_QWORD *)((char *)a2 + v49[41]);
      *(_QWORD *)((char *)a1 + v49[42]) = *(_QWORD *)((char *)a2 + v49[42]);
      *((_BYTE *)a1 + v49[44]) = *((_BYTE *)a2 + v49[44]);
      *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 7u:
      v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8BE0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v27 = *(int *)(v17 + 20);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_1B49046DC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      goto LABEL_38;
    case 8u:
      v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v34 = sub_1B49037E8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
        *((_BYTE *)a1 + *(int *)(v20 + 20)) = *((_BYTE *)a2 + *(int *)(v20 + 20));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      v35 = type metadata accessor for TTRTemplatePublicLinkData(0);
      *(_QWORD *)((char *)a1 + *(int *)(v35 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v23 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_1B4905C78();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

_QWORD *sub_1B42D4698(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  int *v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD *, uint64_t, int *);
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void *v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  void *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  char *v167;
  char *v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;

  if (a1 != a2)
  {
    sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRemindersListViewModel.Item);
    v6 = type metadata accessor for TTRRemindersListViewModel.Item(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v36 = sub_1B49037E8();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        v8 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v45 = sub_1B49037E8();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader(0);
        v38 = v37[5];
        v39 = (_OWORD *)((char *)a1 + v38);
        v40 = (_OWORD *)((char *)a2 + v38);
        v41 = v40[3];
        v39[2] = v40[2];
        v39[3] = v41;
        v42 = v40[1];
        *v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        v43 = v40[6];
        v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((_BYTE *)a1 + v37[6]) = *((_BYTE *)a2 + v37[6]);
        *((_BYTE *)a1 + v37[7]) = *((_BYTE *)a2 + v37[7]);
        *((_BYTE *)a1 + v37[8]) = *((_BYTE *)a2 + v37[8]);
        *((_BYTE *)a1 + v37[9]) = *((_BYTE *)a2 + v37[9]);
        *((_BYTE *)a1 + v37[10]) = *((_BYTE *)a2 + v37[10]);
        *(_QWORD *)((char *)a1 + v37[11]) = *(_QWORD *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          goto LABEL_8;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v46 = sub_1B49037E8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(_QWORD *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v10 = (char *)a1 + v14;
        v11 = (char *)a2 + v14;
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          goto LABEL_8;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            v47 = sub_1B49037E8();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(_QWORD *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID(0) + 20);
        v10 = (char *)a1 + v16;
        v11 = (char *)a2 + v16;
        v12 = type metadata accessor for TTRRemindersListViewModel.SectionID(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EBE70);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              v48 = sub_1B49037E8();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(_QWORD *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8BE0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v27 = *(int *)(v17 + 20);
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = sub_1B49046DC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
        goto LABEL_39;
      case 8u:
        v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription(0);
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v34 = sub_1B49037E8();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
          *((_BYTE *)a1 + *(int *)(v20 + 20)) = *((_BYTE *)a2 + *(int *)(v20 + 20));
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        v35 = type metadata accessor for TTRTemplatePublicLinkData(0);
        *(_QWORD *)((char *)a1 + *(int *)(v35 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v23 = *(int *)(type metadata accessor for TTRRemindersListTips(0) + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_1B4905C78();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v49 = (int *)type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v50 = v49[5];
  v51 = *(void **)((char *)a1 + v50);
  *(_QWORD *)((char *)a1 + v50) = *(_QWORD *)((char *)a2 + v50);

  v52 = v49[6];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  *v53 = *v54;
  v53[1] = v54[1];
  v53[2] = v54[2];
  v53[3] = v54[3];
  v53[4] = v54[4];
  v55 = v49[7];
  v56 = *(void **)((char *)a1 + v55);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);

  *((_BYTE *)a1 + v49[8]) = *((_BYTE *)a2 + v49[8]);
  v57 = v49[9];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = v49[10];
  v63 = (_QWORD *)((char *)a1 + v62);
  v64 = (_QWORD *)((char *)a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = v49[11];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)a2 + v67);
  v70 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  v71 = *((_QWORD *)v70 - 1);
  v72 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      *(_OWORD *)v68 = *(_OWORD *)v69;
      v75 = v70[5];
      v76 = (char *)v68 + v75;
      v77 = (char *)v69 + v75;
      v78 = sub_1B49037E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
      *((_BYTE *)v68 + v70[6]) = *((_BYTE *)v69 + v70[6]);
      *((_BYTE *)v68 + v70[7]) = *((_BYTE *)v69 + v70[7]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v71 + 56))(v68, 0, 1, v70);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  if (v74)
  {
    sub_1B41EA5FC((uint64_t)v68, type metadata accessor for TTRRemindersListViewModel.DisplayDate);
LABEL_45:
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB840);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_46;
  }
  v141 = v69[1];
  *v68 = *v69;
  v68[1] = v141;
  swift_bridgeObjectRelease();
  v142 = v70[5];
  v143 = (char *)v68 + v142;
  v144 = (char *)v69 + v142;
  v145 = sub_1B49037E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 40))(v143, v144, v145);
  *((_BYTE *)v68 + v70[6]) = *((_BYTE *)v69 + v70[6]);
  *((_BYTE *)v68 + v70[7]) = *((_BYTE *)v69 + v70[7]);
LABEL_46:
  v80 = v49[12];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  if (*(_QWORD *)((char *)a1 + v80 + 24))
  {
    if (*((_QWORD *)v82 + 3))
    {
      v83 = *(id *)v81;
      *(_QWORD *)v81 = *(_QWORD *)v82;

      v84 = (void *)*((_QWORD *)v81 + 1);
      *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);

      v85 = *((_QWORD *)v82 + 3);
      *((_QWORD *)v81 + 2) = *((_QWORD *)v82 + 2);
      *((_QWORD *)v81 + 3) = v85;
      swift_bridgeObjectRelease();
      v86 = *((_QWORD *)v82 + 5);
      *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
      *((_QWORD *)v81 + 5) = v86;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1B42D3670((id *)v81);
  }
  v87 = *((_OWORD *)v82 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v87;
  *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
LABEL_51:
  v81[48] = v82[48];
  *((_BYTE *)a1 + v49[13]) = *((_BYTE *)a2 + v49[13]);
  v88 = v49[14];
  v89 = *(void **)((char *)a1 + v88);
  *(_QWORD *)((char *)a1 + v88) = *(_QWORD *)((char *)a2 + v88);

  *(_QWORD *)((char *)a1 + v49[15]) = *(_QWORD *)((char *)a2 + v49[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v49[16]) = *(_QWORD *)((char *)a2 + v49[16]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v49[17]) = *((_BYTE *)a2 + v49[17]);
  *(_QWORD *)((char *)a1 + v49[18]) = *(_QWORD *)((char *)a2 + v49[18]);
  v90 = v49[19];
  v91 = *(void **)((char *)a1 + v90);
  *(_QWORD *)((char *)a1 + v90) = *(_QWORD *)((char *)a2 + v90);

  v92 = v49[20];
  v93 = *(void **)((char *)a1 + v92);
  *(_QWORD *)((char *)a1 + v92) = *(_QWORD *)((char *)a2 + v92);

  v94 = v49[21];
  v95 = *(void **)((char *)a1 + v94);
  *(_QWORD *)((char *)a1 + v94) = *(_QWORD *)((char *)a2 + v94);

  v96 = v49[22];
  v97 = (char *)a1 + v96;
  v98 = (char *)a2 + v96;
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v97[8] = v98[8];
  *((_BYTE *)a1 + v49[23]) = *((_BYTE *)a2 + v49[23]);
  *((_BYTE *)a1 + v49[24]) = *((_BYTE *)a2 + v49[24]);
  *((_BYTE *)a1 + v49[25]) = *((_BYTE *)a2 + v49[25]);
  *(_QWORD *)((char *)a1 + v49[26]) = *(_QWORD *)((char *)a2 + v49[26]);
  *(_QWORD *)((char *)a1 + v49[27]) = *(_QWORD *)((char *)a2 + v49[27]);
  *((_BYTE *)a1 + v49[28]) = *((_BYTE *)a2 + v49[28]);
  v99 = v49[29];
  v100 = (_QWORD *)((char *)a1 + v99);
  v101 = (_QWORD *)((char *)a2 + v99);
  v103 = *v101;
  v102 = v101[1];
  *v100 = v103;
  v100[1] = v102;
  swift_bridgeObjectRelease();
  v104 = v49[30];
  v105 = (char *)a1 + v104;
  v106 = (char *)a2 + v104;
  v107 = *(_QWORD *)((char *)a2 + v104 + 8);
  *(_QWORD *)v105 = *(_QWORD *)((char *)a2 + v104);
  *((_QWORD *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  v105[16] = v106[16];
  v108 = v49[31];
  v109 = (_QWORD *)((char *)a1 + v108);
  v110 = (_QWORD *)((char *)a2 + v108);
  if (*(_QWORD *)((char *)a1 + v108 + 8))
  {
    v111 = v110[1];
    if (v111)
    {
      *v109 = *v110;
      v109[1] = v111;
      swift_bridgeObjectRelease();
      v112 = (void *)v109[2];
      v109[2] = v110[2];

      goto LABEL_56;
    }
    sub_1B42D36A4((uint64_t)v109);
  }
  *(_OWORD *)v109 = *(_OWORD *)v110;
  v109[2] = v110[2];
LABEL_56:
  *((_BYTE *)a1 + v49[32]) = *((_BYTE *)a2 + v49[32]);
  v113 = v49[33];
  v114 = (uint64_t)a1 + v113;
  v115 = (char *)a2 + v113;
  v116 = *(void **)((char *)a1 + v113);
  if (v116 == (void *)1)
  {
LABEL_59:
    v118 = *((_OWORD *)v115 + 13);
    *(_OWORD *)(v114 + 192) = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 208) = v118;
    *(_QWORD *)(v114 + 224) = *((_QWORD *)v115 + 28);
    v119 = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 128) = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 144) = v119;
    v120 = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 160) = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 176) = v120;
    v121 = *((_OWORD *)v115 + 5);
    *(_OWORD *)(v114 + 64) = *((_OWORD *)v115 + 4);
    *(_OWORD *)(v114 + 80) = v121;
    v122 = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 96) = *((_OWORD *)v115 + 6);
    *(_OWORD *)(v114 + 112) = v122;
    v123 = *((_OWORD *)v115 + 1);
    *(_OWORD *)v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v123;
    v124 = *((_OWORD *)v115 + 3);
    *(_OWORD *)(v114 + 32) = *((_OWORD *)v115 + 2);
    *(_OWORD *)(v114 + 48) = v124;
    goto LABEL_71;
  }
  v117 = *(_QWORD *)v115;
  if (*(_QWORD *)v115 == 1)
  {
    sub_1B42D3740(v114);
    goto LABEL_59;
  }
  if (!v116)
    goto LABEL_67;
  if (!v117)
  {
    sub_1B42D370C(v114);
LABEL_67:
    v146 = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 160) = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 176) = v146;
    v147 = *((_OWORD *)v115 + 13);
    *(_OWORD *)(v114 + 192) = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 208) = v147;
    v148 = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 96) = *((_OWORD *)v115 + 6);
    *(_OWORD *)(v114 + 112) = v148;
    v149 = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 128) = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 144) = v149;
    v150 = *((_OWORD *)v115 + 3);
    *(_OWORD *)(v114 + 32) = *((_OWORD *)v115 + 2);
    *(_OWORD *)(v114 + 48) = v150;
    v151 = *((_OWORD *)v115 + 5);
    *(_OWORD *)(v114 + 64) = *((_OWORD *)v115 + 4);
    *(_OWORD *)(v114 + 80) = v151;
    v152 = *((_OWORD *)v115 + 1);
    *(_OWORD *)v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v152;
    goto LABEL_70;
  }
  *(_QWORD *)v114 = v117;

  v125 = *(void **)(v114 + 8);
  *(_QWORD *)(v114 + 8) = *((_QWORD *)v115 + 1);

  v126 = *((_QWORD *)v115 + 3);
  *(_QWORD *)(v114 + 16) = *((_QWORD *)v115 + 2);
  *(_QWORD *)(v114 + 24) = v126;
  swift_bridgeObjectRelease();
  v127 = *((_QWORD *)v115 + 5);
  *(_QWORD *)(v114 + 32) = *((_QWORD *)v115 + 4);
  *(_QWORD *)(v114 + 40) = v127;
  swift_bridgeObjectRelease();
  v128 = *((_QWORD *)v115 + 7);
  *(_QWORD *)(v114 + 48) = *((_QWORD *)v115 + 6);
  *(_QWORD *)(v114 + 56) = v128;
  swift_bridgeObjectRelease();
  v129 = *((_QWORD *)v115 + 9);
  *(_QWORD *)(v114 + 64) = *((_QWORD *)v115 + 8);
  *(_QWORD *)(v114 + 72) = v129;
  swift_bridgeObjectRelease();
  v130 = *((_QWORD *)v115 + 11);
  *(_QWORD *)(v114 + 80) = *((_QWORD *)v115 + 10);
  *(_QWORD *)(v114 + 88) = v130;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v114 + 96) = v115[96];
  v131 = *(void **)(v114 + 104);
  *(_QWORD *)(v114 + 104) = *((_QWORD *)v115 + 13);

  v132 = *(void **)(v114 + 112);
  v133 = *((_QWORD *)v115 + 14);
  if (!v132)
  {
LABEL_69:
    v153 = *((_OWORD *)v115 + 12);
    *(_OWORD *)(v114 + 176) = *((_OWORD *)v115 + 11);
    *(_OWORD *)(v114 + 192) = v153;
    *(_OWORD *)(v114 + 208) = *((_OWORD *)v115 + 13);
    v154 = *((_OWORD *)v115 + 8);
    *(_OWORD *)(v114 + 112) = *((_OWORD *)v115 + 7);
    *(_OWORD *)(v114 + 128) = v154;
    v155 = *((_OWORD *)v115 + 10);
    *(_OWORD *)(v114 + 144) = *((_OWORD *)v115 + 9);
    *(_OWORD *)(v114 + 160) = v155;
    goto LABEL_70;
  }
  if (!v133)
  {
    sub_1B42D36D8((id *)(v114 + 112));
    goto LABEL_69;
  }
  *(_QWORD *)(v114 + 112) = v133;

  v134 = *(void **)(v114 + 120);
  *(_QWORD *)(v114 + 120) = *((_QWORD *)v115 + 15);

  v135 = *((_QWORD *)v115 + 17);
  *(_QWORD *)(v114 + 128) = *((_QWORD *)v115 + 16);
  *(_QWORD *)(v114 + 136) = v135;
  swift_bridgeObjectRelease();
  v136 = *((_QWORD *)v115 + 19);
  *(_QWORD *)(v114 + 144) = *((_QWORD *)v115 + 18);
  *(_QWORD *)(v114 + 152) = v136;
  swift_bridgeObjectRelease();
  v137 = *((_QWORD *)v115 + 21);
  *(_QWORD *)(v114 + 160) = *((_QWORD *)v115 + 20);
  *(_QWORD *)(v114 + 168) = v137;
  swift_bridgeObjectRelease();
  v138 = *((_QWORD *)v115 + 23);
  *(_QWORD *)(v114 + 176) = *((_QWORD *)v115 + 22);
  *(_QWORD *)(v114 + 184) = v138;
  swift_bridgeObjectRelease();
  v139 = *((_QWORD *)v115 + 25);
  *(_QWORD *)(v114 + 192) = *((_QWORD *)v115 + 24);
  *(_QWORD *)(v114 + 200) = v139;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v114 + 208) = v115[208];
  v140 = *(void **)(v114 + 216);
  *(_QWORD *)(v114 + 216) = *((_QWORD *)v115 + 27);

LABEL_70:
  *(_QWORD *)(v114 + 224) = *((_QWORD *)v115 + 28);
LABEL_71:
  v156 = v49[34];
  v157 = (char *)a1 + v156;
  v158 = (char *)a2 + v156;
  *v157 = *((_BYTE *)a2 + v156);
  *((_QWORD *)v157 + 1) = *(_QWORD *)((char *)a2 + v156 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v157 + 2) = *((_QWORD *)v158 + 2);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v49[35]) = *((_BYTE *)a2 + v49[35]);
  v159 = v49[36];
  v160 = (_QWORD *)((char *)a1 + v159);
  v161 = (_QWORD *)((char *)a2 + v159);
  v162 = *(_QWORD *)((char *)a1 + v159 + 8);
  v163 = *(_QWORD *)((char *)a2 + v159 + 8);
  if (v162 != 1)
  {
    if (v163 == 1)
    {
      sub_1B42D3774((uint64_t)v160);
    }
    else if (v162)
    {
      if (v163)
      {
        *v160 = *v161;
        v160[1] = v163;
        swift_bridgeObjectRelease();
        v164 = v161[3];
        v160[2] = v161[2];
        v160[3] = v164;
        swift_bridgeObjectRelease();
        goto LABEL_79;
      }
      sub_1B41EA560((uint64_t)v160, qword_1EF09CB60);
    }
  }
  v165 = *((_OWORD *)v161 + 1);
  *(_OWORD *)v160 = *(_OWORD *)v161;
  *((_OWORD *)v160 + 1) = v165;
LABEL_79:
  v166 = v49[37];
  v167 = (char *)a1 + v166;
  v168 = (char *)a2 + v166;
  v169 = *(void **)((char *)a1 + v166);
  if (!v169)
  {
LABEL_83:
    *(_OWORD *)v167 = *(_OWORD *)v168;
    *((_QWORD *)v167 + 2) = *((_QWORD *)v168 + 2);
    goto LABEL_84;
  }
  if (!*(_QWORD *)v168)
  {
    sub_1B42D37A8((id *)v167);
    goto LABEL_83;
  }
  *(_QWORD *)v167 = *(_QWORD *)v168;

  v170 = *((_QWORD *)v168 + 2);
  *((_QWORD *)v167 + 1) = *((_QWORD *)v168 + 1);
  *((_QWORD *)v167 + 2) = v170;
  swift_bridgeObjectRelease();
LABEL_84:
  v171 = v49[38];
  v172 = (_QWORD *)((char *)a1 + v171);
  v173 = (_QWORD *)((char *)a2 + v171);
  v175 = *v173;
  v174 = v173[1];
  *v172 = v175;
  v172[1] = v174;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v49[39]) = *((_BYTE *)a2 + v49[39]);
  *((_BYTE *)a1 + v49[40]) = *((_BYTE *)a2 + v49[40]);
  v176 = v49[41];
  v177 = *(void **)((char *)a1 + v176);
  *(_QWORD *)((char *)a1 + v176) = *(_QWORD *)((char *)a2 + v176);

  *(_QWORD *)((char *)a1 + v49[42]) = *(_QWORD *)((char *)a2 + v49[42]);
  *((_BYTE *)a1 + v49[44]) = *((_BYTE *)a2 + v49[44]);
  v178 = *(int *)(a3 + 20);
  v179 = *(void **)((char *)a1 + v178);
  *(_QWORD *)((char *)a1 + v178) = *(_QWORD *)((char *)a2 + v178);

  return a1;
}

uint64_t sub_1B42D59A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B42D59B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B42D5A2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B42D5A38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1B42D5AB0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTRRemindersListViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1B42D5B24(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  Swift::Bool isValid;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  Class isa;
  Swift::tuple_title_NSAttributedString_isValid_Bool v19;

  v3 = v2;
  v5 = a1;
  v19 = NSAttributedString.validatedReminderTitle()();
  isa = v19.title.super.isa;
  isValid = v19.isValid;

  if (!isValid)
  {

    v13 = MEMORY[0x1B5E3D8DC](v3 + 16);
    if (!v13)
      return;
    v14 = *(_QWORD *)(v13 + 80);
    v15 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    v16 = *(_QWORD *)(v14 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 272))(v15, ObjectType, v16);
    goto LABEL_8;
  }
  v7 = v3 + 16;
  v8 = MEMORY[0x1B5E3D8DC](v7);
  if (v8)
  {
    v9 = *(_QWORD *)(v8 + 80);
    v10 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
    v11 = *(_QWORD *)(v9 + 40);
    v12 = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v11 + 280))(isa, v10, v12, v11);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1B5E3D8DC](v7))
  {
    sub_1B42CCF44(a2);

LABEL_8:
    swift_unknownObjectRelease();
    return;
  }

}

void sub_1B42D5C7C(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v6;
  Swift::Bool isValid;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  Swift::tuple_title_NSAttributedString_isValid_Bool v19;

  if ((a3 & 1) == 0)
  {
    v4 = v3;
    v6 = a1;
    v19 = NSAttributedString.validatedReminderTitle()();
    isa = v19.title.super.isa;
    isValid = v19.isValid;

    if (isValid)
    {
      v8 = MEMORY[0x1B5E3D8DC](v4 + 16);
      if (!v8)
      {

        return;
      }
      v9 = *(_QWORD *)(v8 + 80);
      v10 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
      v11 = *(_QWORD *)(v9 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v11 + 280))(isa, v10, ObjectType, v11);

    }
    else
    {

      v13 = MEMORY[0x1B5E3D8DC](v4 + 16);
      if (!v13)
        return;
      v14 = *(_QWORD *)(v13 + 80);
      v15 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for TTRISubtaskListViewModel.Subtask() + 20));
      v16 = *(_QWORD *)(v14 + 40);
      v17 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 272))(v15, v17, v16);
    }
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B42D5D9C()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListEditingPresenter()
{
  return objc_opt_self();
}

id TTRISubtaskListAssembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTRISubtaskListAssembly.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAssembly();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TTRISubtaskListAssembly()
{
  return objc_opt_self();
}

id TTRISubtaskListAssembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAssembly();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B42D5EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v18[3] = type metadata accessor for TTRISubtaskListRouter();
  v18[4] = &off_1E678DBC0;
  v18[0] = a2;
  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a3 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a3 + 176) = 0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_QWORD *)(a3 + 80) = a1;
  *(_QWORD *)(a3 + 88) = &off_1E678DDC0;
  sub_1B4217B14((uint64_t)v18, a3 + 96);
  v6 = type metadata accessor for TTRISubtaskListEditingPresenter();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a3 + 160) = v6;
  *(_QWORD *)(a3 + 168) = &off_1E678DDA8;
  *(_QWORD *)(a3 + 136) = v7;
  *(_QWORD *)(v7 + 24) = &off_1E678DC68;
  swift_unknownObjectWeakAssign();
  swift_retain();
  swift_retain();
  v8 = sub_1B42CC438();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  v15 = *(_QWORD *)(a3 + 48);
  v16 = *(_QWORD *)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = v10;
  *(_QWORD *)(a3 + 64) = v12;
  *(_QWORD *)(a3 + 72) = v14;
  sub_1B42B6048(v15, v16);
  return a3;
}

id sub_1B42D6000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  _BYTE *v19;
  _OWORD *v20;
  uint64_t *v21;
  id v22;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[5];

  type metadata accessor for TTRISubtaskListInteractor();
  v7 = (_QWORD *)swift_allocObject();
  v7[3] = 0;
  swift_unknownObjectWeakInit();
  v7[4] = a1;
  v7[5] = a2;
  v8 = type metadata accessor for TTRISubtaskListRouter();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v26[3] = v8;
  v26[4] = &off_1E678DBC0;
  v26[0] = v9;
  type metadata accessor for TTRISubtaskListPresenter();
  v10 = swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
  v16 = *v14;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v17 = sub_1B42D5EBC((uint64_t)v7, v16, v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  v18 = (objc_class *)type metadata accessor for TTRISubtaskListViewController();
  v19 = objc_allocWithZone(v18);
  v20 = &v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  *v20 = 0u;
  v20[1] = 0u;
  v21 = (uint64_t *)&v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter];
  *v21 = v17;
  v21[1] = (uint64_t)&off_1E678DCA8;
  v19[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate] = 0;
  v25.receiver = v19;
  v25.super_class = v18;
  swift_retain();
  v22 = objc_msgSendSuper2(&v25, sel_initWithStyle_, 0);
  v7[3] = &off_1E678DC98;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(_QWORD *)(v17 + 24) = &off_1E678DF10;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v17 + 40) = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v22;
}

uint64_t sub_1B42D6244()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRISubtaskListInteractor()
{
  return objc_opt_self();
}

uint64_t sub_1B42D6290(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  _BYTE v13[40];
  _OWORD v14[2];
  uint64_t v15;

  v3 = v2;
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_1B41F48B0((uint64_t)v14, (uint64_t)v13);
  type metadata accessor for TTRReminderEditor();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 16) = a2;
  sub_1B41F48B0((uint64_t)v13, v6 + 24);
  *(_BYTE *)(v6 + 64) = 0;
  v7 = objc_msgSend(a2, sel_fetchedCurrentDueDateDeltaAlert);
  sub_1B41F5470((uint64_t)v13);
  v8 = *(void **)(v6 + 72);
  *(_QWORD *)(v6 + 72) = v7;

  sub_1B41F5470((uint64_t)v14);
  TTRReminderEditor.edit(completed:trackEditedUsing:)(a1, 0);
  if (!MEMORY[0x1B5E3D8DC](v3 + 16))
    return swift_release();
  v9 = *(_QWORD *)(v3 + 40);
  ObjectType = swift_getObjectType();
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
  sub_1B42CD458();
  swift_release();

  return swift_unknownObjectRelease();
}

char *sub_1B42D63A8(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *result;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  objc_super v17;
  char v18[32];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate];
  *(_QWORD *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController] = 0;
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
  v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell] = 0;
  v11 = qword_1ED4ED798;
  result = v2;
  v13 = result;
  if (v11 != -1)
    result = (char *)swift_once();
  v14 = *((_QWORD *)off_1ED4E98D0 + 2);
  if (v14)
  {
    sub_1B41F335C((uint64_t)off_1ED4E98D0 + 32 * v14, (uint64_t)v18);
    swift_dynamicCast();
    swift_beginAccess();
    sub_1B42D8198((uint64_t)v7, v9);
    swift_endAccess();
    *((_QWORD *)v8 + 1) = *(_QWORD *)&v7[*(int *)(v5 + 20) + 8];
    swift_unknownObjectWeakAssign();

    v17.receiver = v13;
    v17.super_class = ObjectType;
    v15 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

    v16 = v15;
    sub_1B41EA5FC((uint64_t)v7, type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument);
    if (v16)

    return (char *)v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B42D65C4()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  char *v14;
  _OWORD v15[5];
  objc_super v16[5];
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A1C8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  memset(v16, 0, 73);
  memset(v15, 0, 73);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF0A37E0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D80;
  *(_QWORD *)(v4 + 32) = sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B42D72A0);
  *(_QWORD *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  *(_QWORD *)(v4 + 48) = sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B42D762C);
  *(_QWORD *)(v4 + 56) = &protocol witness table for TTRITableCell<A>;
  *(_QWORD *)(v4 + 64) = sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B42D7A4C);
  *(_QWORD *)(v4 + 72) = &protocol witness table for TTRITableCell<A>;
  type metadata accessor for TTRITableSection();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v5 + 200) = 0;
  *(_QWORD *)(v5 + 208) = 0;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 89) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 169) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_BYTE *)(v5 + 216) = 1;
  swift_beginAccess();
  sub_1B42D7FCC((uint64_t)v16, v5 + 32);
  swift_endAccess();
  swift_beginAccess();
  sub_1B42D7FCC((uint64_t)v15, v5 + 112);
  swift_endAccess();
  *(_QWORD *)(v5 + 192) = v4;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = &protocol witness table for TTRITableSection;
  v6 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController());
  v7 = sub_1B4498CF0(v2, v3, 6, 0, v6);
  v8 = *(void **)&v0[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController] = v7;
  v9 = v7;

  v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = v10;
  objc_msgSend(v10, sel_setDelegate_, v9);

  v12 = objc_msgSend(v0, sel_tableView);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setDataSource_, v9);

    v14 = v0;
    sub_1B48F5AA0(2, (uint64_t)v9, (uint64_t)v14);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1B42D6890(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    *(_QWORD *)(v2 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1B42D68F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BOOL4 v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD *v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  int EnumCaseMultiPayload;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  int v81;
  uint64_t v82;
  uint64_t ObjectType;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  _OWORD v96[2];
  _OWORD v97[2];
  _OWORD v98[5];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  _OWORD v105[2];
  _OWORD v106[5];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  char v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  char v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;

  v2 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v87 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v86 = (uint64_t)&v85 - v5;
  v6 = sub_1B49037E8();
  v89 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  MEMORY[0x1E0C80A78](v6);
  v88 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TTRRecurrenceEndModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v85 - v16;
  sub_1B42D7F44(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1B42D7F8C((uint64_t)v10);
    v18 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B42D72A0)+ 32);
    swift_release();
    v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v20 = (char *)v18 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v18) + 0x78);
    swift_beginAccess();
    v21 = *((_OWORD *)v20 + 1);
    v91 = *(_OWORD *)v20;
    v92 = v21;
    v22 = *((_OWORD *)v20 + 2);
    v23 = *((_OWORD *)v20 + 3);
    v24 = *((_OWORD *)v20 + 5);
    v95 = *((_OWORD *)v20 + 4);
    v96[0] = v24;
    v93 = v22;
    v94 = v23;
    v25 = *((_OWORD *)v20 + 6);
    v26 = *((_OWORD *)v20 + 7);
    v27 = *((_OWORD *)v20 + 9);
    v97[1] = *((_OWORD *)v20 + 8);
    v98[0] = v27;
    v96[1] = v25;
    v97[0] = v26;
    v28 = *((_OWORD *)v20 + 10);
    v29 = *((_OWORD *)v20 + 11);
    v30 = *((_OWORD *)v20 + 12);
    *(_QWORD *)&v98[4] = *((_QWORD *)v20 + 26);
    v98[2] = v29;
    v98[3] = v30;
    v98[1] = v28;
    v124 = v91;
    v125 = v92;
    v126 = v93;
    v127 = v94;
    v128 = v95;
    v129 = *((_QWORD *)&v95 + 1);
    v130 = *(_QWORD *)&v96[0];
    v131 = *(_OWORD *)((char *)v96 + 8);
    v132 = *((_QWORD *)&v96[1] + 1);
    v133 = *(_QWORD *)&v97[0];
    v134 = *(_OWORD *)((char *)v97 + 8);
    v135 = *((_QWORD *)&v97[1] + 1);
    v136 = 1;
    v137 = *(_OWORD *)((char *)v98 + 8);
    v138 = *(_OWORD *)((char *)&v98[1] + 8);
    v139 = *(_OWORD *)((char *)&v98[2] + 8);
    v140 = *(_OWORD *)((char *)&v98[3] + 8);
    sub_1B42D8014((uint64_t)&v91);
    sub_1B44B64AC((uint64_t)&v124);

    v31 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B42D762C)+ 32);
    swift_release();
    v32 = (char *)v31 + *(_QWORD *)((*v19 & *v31) + 0x78);
    swift_beginAccess();
    v33 = *((_OWORD *)v32 + 1);
    v99 = *(_OWORD *)v32;
    v100 = v33;
    v34 = *((_OWORD *)v32 + 2);
    v35 = *((_OWORD *)v32 + 3);
    v36 = *((_OWORD *)v32 + 5);
    v103 = *((_OWORD *)v32 + 4);
    v104[0] = v36;
    v101 = v34;
    v102 = v35;
    v37 = *((_OWORD *)v32 + 6);
    v38 = *((_OWORD *)v32 + 7);
    v39 = *((_OWORD *)v32 + 9);
    v105[1] = *((_OWORD *)v32 + 8);
    v106[0] = v39;
    v104[1] = v37;
    v105[0] = v38;
    v40 = *((_OWORD *)v32 + 10);
    v41 = *((_OWORD *)v32 + 11);
    v42 = *((_OWORD *)v32 + 12);
    *(_QWORD *)&v106[4] = *((_QWORD *)v32 + 26);
    v106[2] = v41;
    v106[3] = v42;
    v106[1] = v40;
    v107 = v99;
    v108 = v100;
    v109 = v101;
    v110 = v102;
    v111 = v103;
    v112 = *((_QWORD *)&v103 + 1);
    v113 = *(_QWORD *)&v104[0];
    v114 = *(_OWORD *)((char *)v104 + 8);
    v115 = *((_QWORD *)&v104[1] + 1);
    v116 = *(_QWORD *)&v105[0];
    v117 = *(_OWORD *)((char *)v105 + 8);
    v118 = *((_QWORD *)&v105[1] + 1);
    v119 = 0;
    v120 = *(_OWORD *)((char *)v106 + 8);
    v121 = *(_OWORD *)((char *)&v106[1] + 8);
    v122 = *(_OWORD *)((char *)&v106[2] + 8);
    v123 = *(_OWORD *)((char *)&v106[3] + 8);
    sub_1B42D8014((uint64_t)&v99);
    sub_1B44B64AC((uint64_t)&v107);

    v43 = 0;
  }
  else
  {
    sub_1B42D80E4((uint64_t)v10, (uint64_t)v17);
    v44 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___repeatForeverCell, (uint64_t (*)(uint64_t))sub_1B42D72A0)+ 32);
    swift_release();
    v45 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v46 = (char *)v44 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v44) + 0x78);
    swift_beginAccess();
    v47 = *((_OWORD *)v46 + 1);
    v91 = *(_OWORD *)v46;
    v92 = v47;
    v48 = *((_OWORD *)v46 + 2);
    v49 = *((_OWORD *)v46 + 3);
    v50 = *((_OWORD *)v46 + 5);
    v95 = *((_OWORD *)v46 + 4);
    v96[0] = v50;
    v93 = v48;
    v94 = v49;
    v51 = *((_OWORD *)v46 + 6);
    v52 = *((_OWORD *)v46 + 7);
    v53 = *((_OWORD *)v46 + 9);
    v97[1] = *((_OWORD *)v46 + 8);
    v98[0] = v53;
    v96[1] = v51;
    v97[0] = v52;
    v54 = *((_OWORD *)v46 + 10);
    v55 = *((_OWORD *)v46 + 11);
    v56 = *((_OWORD *)v46 + 12);
    *(_QWORD *)&v98[4] = *((_QWORD *)v46 + 26);
    v98[2] = v55;
    v98[3] = v56;
    v98[1] = v54;
    v124 = v91;
    v125 = v92;
    v126 = v93;
    v127 = v94;
    v128 = v95;
    v129 = *((_QWORD *)&v95 + 1);
    v130 = *(_QWORD *)&v96[0];
    v131 = *(_OWORD *)((char *)v96 + 8);
    v132 = *((_QWORD *)&v96[1] + 1);
    v133 = *(_QWORD *)&v97[0];
    v134 = *(_OWORD *)((char *)v97 + 8);
    v135 = *((_QWORD *)&v97[1] + 1);
    v136 = 0;
    v137 = *(_OWORD *)((char *)v98 + 8);
    v138 = *(_OWORD *)((char *)&v98[1] + 8);
    v139 = *(_OWORD *)((char *)&v98[2] + 8);
    v140 = *(_OWORD *)((char *)&v98[3] + 8);
    sub_1B42D8014((uint64_t)&v91);
    sub_1B44B64AC((uint64_t)&v124);

    v57 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endRepeatDateCell, (uint64_t (*)(uint64_t))sub_1B42D762C)+ 32);
    swift_release();
    v58 = (char *)v57 + *(_QWORD *)((*v45 & *v57) + 0x78);
    swift_beginAccess();
    v59 = *((_OWORD *)v58 + 1);
    v99 = *(_OWORD *)v58;
    v100 = v59;
    v60 = *((_OWORD *)v58 + 2);
    v61 = *((_OWORD *)v58 + 3);
    v62 = *((_OWORD *)v58 + 5);
    v103 = *((_OWORD *)v58 + 4);
    v104[0] = v62;
    v101 = v60;
    v102 = v61;
    v63 = *((_OWORD *)v58 + 6);
    v64 = *((_OWORD *)v58 + 7);
    v65 = *((_OWORD *)v58 + 9);
    v105[1] = *((_OWORD *)v58 + 8);
    v106[0] = v65;
    v104[1] = v63;
    v105[0] = v64;
    v66 = *((_OWORD *)v58 + 10);
    v67 = *((_OWORD *)v58 + 11);
    v68 = *((_OWORD *)v58 + 12);
    *(_QWORD *)&v106[4] = *((_QWORD *)v58 + 26);
    v106[2] = v67;
    v106[3] = v68;
    v106[1] = v66;
    v107 = v99;
    v108 = v100;
    v109 = v101;
    v110 = v102;
    v111 = v103;
    v112 = *((_QWORD *)&v103 + 1);
    v113 = *(_QWORD *)&v104[0];
    v114 = *(_OWORD *)((char *)v104 + 8);
    v115 = *((_QWORD *)&v104[1] + 1);
    v116 = *(_QWORD *)&v105[0];
    v117 = *(_OWORD *)((char *)v105 + 8);
    v118 = *((_QWORD *)&v105[1] + 1);
    v119 = 1;
    v120 = *(_OWORD *)((char *)v106 + 8);
    v121 = *(_OWORD *)((char *)&v106[1] + 8);
    v122 = *(_OWORD *)((char *)&v106[2] + 8);
    v123 = *(_OWORD *)((char *)&v106[3] + 8);
    sub_1B42D8014((uint64_t)&v99);
    sub_1B44B64AC((uint64_t)&v107);

    sub_1B41F3210((uint64_t)v17, (uint64_t)v15, type metadata accessor for TTRRecurrenceEndModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v43 = EnumCaseMultiPayload != 1;
    if (EnumCaseMultiPayload != 1)
    {
      v70 = v88;
      v71 = v45;
      v72 = v89;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v15, v90);
      v73 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B42D7A4C)+ 32);
      swift_release();
      v74 = (uint64_t)v73 + *(_QWORD *)((*v71 & *v73) + 0x78);
      swift_beginAccess();
      v75 = v86;
      sub_1B41F3210(v74, v86, type metadata accessor for TTRICalendarPickerCellContentState);
      v76 = v70;
      v77 = v90;
      (*(void (**)(uint64_t, char *, uint64_t))(v72 + 24))(v75, v76, v90);
      v78 = v87;
      sub_1B41F3210(v74, v87, type metadata accessor for TTRICalendarPickerCellContentState);
      swift_beginAccess();
      sub_1B42D8128(v75, v74);
      swift_endAccess();
      sub_1B4497580(v78);
      sub_1B41EA5FC(v75, type metadata accessor for TTRICalendarPickerCellContentState);
      sub_1B41EA5FC(v78, type metadata accessor for TTRICalendarPickerCellContentState);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v77);
    }
    sub_1B41EA5FC((uint64_t)v17, type metadata accessor for TTRRecurrenceEndModel);
  }
  v79 = sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B42D7A4C);
  v80 = !v43;
  swift_beginAccess();
  v81 = *(unsigned __int8 *)(v79 + 49);
  *(_BYTE *)(v79 + 49) = !v43;
  if (v80 == v81)
    return swift_release();
  swift_beginAccess();
  if (!MEMORY[0x1B5E3D8DC](v79 + 16))
    return swift_release();
  v82 = *(_QWORD *)(v79 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, _UNKNOWN **, _BOOL8, uint64_t, uint64_t))(v82 + 8))(v79, &protocol witness table for TTRITableCell<A>, v80, ObjectType, v82);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B42D7178(char a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.receiver = v1;
  v10.super_class = ObjectType;
  objc_msgSendSuper2(&v10, sel_viewWillDisappear_, a1 & 1);
  result = MEMORY[0x1B5E3D8DC](&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_delegate]);
  if (result)
  {
    v8 = (uint64_t)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B42D7F44(v8, (uint64_t)v6);
    sub_1B43CCAD8((uint64_t)v6);
    swift_unknownObjectRelease();
    return sub_1B42D7F8C((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1B42D72A0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[4];
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (qword_1ED4EE550 != -1)
    swift_once();
  memset(v10, 0, 24);
  v10[3] = 0x1FFFFFFFELL;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v14 = sub_1B4903434();
  v15 = v0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0xE000000000000000;
  v21 = 0;
  v22 = 0;
  v20 = 0;
  v23 = 0;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v1 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailCellContent(0));
  v2 = sub_1B47D0234(0, 0x65436C6961746544, 0xEA00000000006C6CLL, 0, (uint64_t)v10);
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x108));
  swift_beginAccess();
  v6 = *v5;
  *v5 = (uint64_t)sub_1B42D81E8;
  v5[1] = v3;
  sub_1B41E1CB4(v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09CE18);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v7 + 48) = 1;
  *(_WORD *)(v7 + 49) = 0;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  *(_BYTE *)(v7 + 72) = 1;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = 0;
  v8 = (char *)v2 + *(_QWORD *)((*v4 & *v2) + 0x70);
  swift_beginAccess();
  *((_QWORD *)v8 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v7;
}

void sub_1B42D7500(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  _BYTE v12[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v5 = MEMORY[0x1B5E3D8DC](a1 + 16);
  if (v5)
  {
    v6 = (char *)v5;
    v7 = type metadata accessor for TTRRecurrenceEndModel(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v8 = (uint64_t)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B42D8198((uint64_t)v4, v8);
    swift_endAccess();
    v9 = *(void **)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v9)
    {
      v10 = v6;
      v11 = v9;
      sub_1B48F5AA0(1, (uint64_t)v11, (uint64_t)v10);

      sub_1B42D7F8C((uint64_t)v4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1B42D762C()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[4];
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (qword_1ED4EE550 != -1)
    swift_once();
  memset(v10, 0, 24);
  v10[3] = 0x1FFFFFFFELL;
  v11 = 0u;
  v12 = 0u;
  v13 = 0;
  v14 = sub_1B4903434();
  v15 = v0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0xE000000000000000;
  v21 = 0;
  v22 = 0;
  v20 = 0;
  v23 = 0;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v1 = objc_allocWithZone((Class)type metadata accessor for TTRIDetailCellContent(0));
  v2 = sub_1B47D0234(0, 0x65436C6961746544, 0xEA00000000006C6CLL, 0, (uint64_t)v10);
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x108));
  swift_beginAccess();
  v6 = *v5;
  *v5 = (uint64_t)sub_1B42D81E0;
  v5[1] = v3;
  sub_1B41E1CB4(v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09CE18);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v7 + 48) = 1;
  *(_WORD *)(v7 + 49) = 0;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  *(_BYTE *)(v7 + 72) = 1;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = 0;
  v8 = (char *)v2 + *(_QWORD *)((*v4 & *v2) + 0x70);
  swift_beginAccess();
  *((_QWORD *)v8 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v7;
}

void sub_1B42D788C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = MEMORY[0x1B5E3D8DC](a1 + 16);
  if (v5)
  {
    v6 = (char *)v5;
    v7 = *(id *)(sub_1B42D6890(&OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController____lazy_storage___endDatePickerCell, (uint64_t (*)(uint64_t))sub_1B42D7A4C)+ 32);
    swift_release();
    v8 = (char *)v7 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v7) + 0x78);
    swift_beginAccess();
    v9 = sub_1B49037E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v4, v8, v9);

    v10 = type metadata accessor for TTRRecurrenceEndModel(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
    v11 = (uint64_t)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B42D8198((uint64_t)v4, v11);
    swift_endAccess();
    v12 = *(void **)&v6[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v12)
    {
      v13 = v6;
      v14 = v12;
      sub_1B48F5AA0(1, v14, v13);

      sub_1B42D7F8C((uint64_t)v4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1B42D7A4C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE v11[24];

  v0 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  v3 = objc_allocWithZone((Class)type metadata accessor for TTRICalendarPickerCellContent(0));
  v4 = TTRICalendarPickerCellContent.init(state:)((uint64_t)v2);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = (_QWORD *)((char *)v4 + direct field offset for TTRICalendarPickerCellContent.stateChangeBlock);
  swift_beginAccess();
  v7 = *v6;
  *v6 = (uint64_t)sub_1B42D8190;
  v6[1] = v5;
  sub_1B41E1CB4(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CE10);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v8 + 48) = 1;
  *(_WORD *)(v8 + 49) = 0;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  *(_BYTE *)(v8 + 72) = 1;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = 0;
  v9 = (char *)v4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x70);
  swift_beginAccess();
  *((_QWORD *)v9 + 1) = &protocol witness table for TTRITableCell<A>;
  swift_unknownObjectWeakAssign();
  return v8;
}

uint64_t sub_1B42D7BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  _BYTE v19[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B49037E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = MEMORY[0x1B5E3D8DC](a2 + 16);
  if (result)
  {
    v12 = (char *)result;
    v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
    v13(v10, a1, v7);
    v13(v6, (uint64_t)v10, v7);
    v14 = type metadata accessor for TTRRecurrenceEndModel(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
    v15 = (uint64_t)&v12[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_recurrenceEndModel];
    swift_beginAccess();
    sub_1B42D8198((uint64_t)v6, v15);
    result = swift_endAccess();
    v16 = *(void **)&v12[OBJC_IVAR____TtC15RemindersUICore50TTRIReminderDetailRecurrenceEndTableViewController_tableDataController];
    if (v16)
    {
      v17 = v12;
      v18 = v16;
      sub_1B48F5AA0(1, v18, v17);

      sub_1B42D7F8C((uint64_t)v6);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B42D7E50()
{
  return type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController(0);
}

uint64_t type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09CDE8);
}

void sub_1B42D7E6C()
{
  unint64_t v0;

  sub_1B42D7EF0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1B42D7EF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED4EB038)
  {
    type metadata accessor for TTRRecurrenceEndModel(255);
    v0 = sub_1B4907B14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED4EB038);
  }
}

uint64_t sub_1B42D7F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B42D7F8C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B42D7FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF0A4CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B42D8014(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = *(void **)(a1 + 88);
  v3 = *(void **)(a1 + 96);
  v4 = *(void **)(a1 + 120);
  sub_1B4221F60(*(id *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = v2;
  v6 = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v7 = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t sub_1B42D80E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B42D8128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRICalendarPickerCellContentState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B42D816C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B42D8190(uint64_t a1)
{
  uint64_t v1;

  return sub_1B42D7BBC(a1, v1);
}

uint64_t sub_1B42D8198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1B42D81E0()
{
  uint64_t v0;

  sub_1B42D788C(v0);
}

void sub_1B42D81E8()
{
  uint64_t v0;

  sub_1B42D7500(v0);
}

uint64_t type metadata accessor for TTRIReminderDetailRecurrenceEndTableViewController.Argument(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09CE78);
}

uint64_t *sub_1B42D8204(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TTRRecurrenceEndModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v11 = sub_1B49037E8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1B42D8334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for TTRRecurrenceEndModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2)
    && !swift_getEnumCaseMultiPayload())
  {
    v3 = sub_1B49037E8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return swift_unknownObjectRelease();
}

char *sub_1B42D83B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = sub_1B49037E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_unknownObjectRetain();
  return a1;
}

char *sub_1B42D84BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
      if (!swift_getEnumCaseMultiPayload())
      {
        v18 = sub_1B49037E8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1B49037E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v14 + 1) = v16;
  return a1;
}

char *sub_1B42D866C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v9 = sub_1B49037E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1B42D8768(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = type metadata accessor for TTRRecurrenceEndModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
      if (!swift_getEnumCaseMultiPayload())
      {
        v18 = sub_1B49037E8();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v11 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRecurrenceEndModel);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v12 = sub_1B49037E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  swift_unknownObjectRelease();
  *((_QWORD *)v14 + 1) = v16;
  return a1;
}

uint64_t sub_1B42D8910()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B42D891C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B42D899C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B42D89A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1B42D8A24()
{
  unint64_t v0;

  sub_1B42D7EF0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B42D8A94()
{
  qword_1EF09CEB0 = 0x4042000000000000;
}

void sub_1B42D8AA4()
{
  unsigned __int8 *v0;
  void *v1;
  int v2;
  id v3;
  void *v4;
  unint64_t v5;
  id v6;

  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries];
  v3 = objc_msgSend(v1, sel_textLabel);
  v4 = v3;
  if (v2 == 1)
  {
    if (!v3)
      return;
    if (qword_1ED4EE550 != -1)
      swift_once();
    v5 = 0x80000001B4944680;
  }
  else
  {
    if (!v3)
      return;
    if (qword_1ED4EE550 != -1)
      swift_once();
    v5 = 0x80000001B4944630;
  }
  sub_1B4903434();
  v6 = (id)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setText_, v6, v5);

}

id sub_1B42D8C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  objc_super v15;

  v3[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries] = 0;
  if (a3)
  {
    v5 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  v6 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, a1, v5);

  v7 = v6;
  v8 = objc_msgSend(v7, sel_textLabel);
  if (v8)
  {
    v9 = v8;
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    v10 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10, 0x80000001B4944630);

  }
  v11 = objc_msgSend(v7, sel_textLabel);
  if (v11)
  {
    v12 = v11;
    if (qword_1ED4EE268 != -1)
      swift_once();
    v13 = sub_1B46CBA1C(1);
    objc_msgSend(v12, sel_setFont_, v13);

  }
  objc_msgSend(v7, sel_setSeparatorInset_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));
  objc_msgSend(v7, sel_setNeedsLayout);

  return v7;
}

void sub_1B42D8F74()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double Width;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  objc_super v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v1 = sub_1B49058F4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  v34.receiver = v0;
  v34.super_class = v5;
  objc_msgSendSuper2(&v34, sel_layoutSubviews);
  v6 = objc_msgSend(v0, sel_textLabel);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v8, sel_directionalLayoutMargins);
    v10 = v9;

    if (qword_1EF097C50 != -1)
      swift_once();
    v11 = v10 + *(double *)&qword_1EF09CEB0;
    objc_msgSend(v7, sel_frame);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
    v19 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v19, sel_bounds);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    v35.origin.x = v21;
    v35.origin.y = v23;
    v35.size.width = v25;
    v35.size.height = v27;
    Width = CGRectGetWidth(v35);
    if (!v18)
      goto LABEL_7;
    if (v18 == (id)1)
    {
      v29 = Width;
      v36.origin.x = v11;
      v36.origin.y = v13;
      v36.size.width = v15;
      v36.size.height = v17;
      v30 = v29 - CGRectGetMinX(v36);
      v37.origin.x = v11;
      v37.origin.y = v13;
      v37.size.width = v15;
      v37.size.height = v17;
      v11 = v30 - CGRectGetWidth(v37);
LABEL_7:
      objc_msgSend(v7, sel_setFrame_, v11, v13, v15, v17);
      v31 = objc_msgSend(v0, sel_tintColor);
      objc_msgSend(v7, sel_setTextColor_, v31);

      return;
    }
    if (qword_1EF0983C8 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF0B13D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v32, v1);
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v33);
    sub_1B48204B4((uint64_t)"unknown language direction", 26, 2);
    __break(1u);
  }
}

id sub_1B42D9270()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISubtaskListAddSubtaskCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TTRISubtaskListAddSubtaskCell()
{
  return objc_opt_self();
}

uint64_t sub_1B42D92C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09CEE8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09CEE8);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_1B42D948C()
{
  char *v0;
  id result;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = result;
  type metadata accessor for TTRIRemindersListReminderCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9D20);
  sub_1B4906A94();
  v4 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result;
  v6 = type metadata accessor for TTRISubtaskListAddSubtaskCell();
  v7 = swift_getObjCClassFromMetadata();
  v23 = v6;
  sub_1B4906A94();
  v8 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_registerClass_forCellReuseIdentifier_, v7, v8);

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v9 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v9, 0x80000001B49447F0, v23);

  result = objc_msgSend(v0, sel_tableView);
  if (!result)
    goto LABEL_11;
  v10 = result;
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v12 = result;
  objc_msgSend(result, sel_setKeyboardDismissMode_, 3);

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, sel_setTableFooterView_, v13);

    v15 = *(_QWORD **)&v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter];
    v16 = v15[6];
    v17 = v15[7];
    v18 = v15[8];
    v19 = v15[9];
    sub_1B42B600C(v16, v17);

    v20 = (uint64_t *)&v0[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
    swift_beginAccess();
    v21 = *v20;
    v22 = v20[1];
    *v20 = v16;
    v20[1] = v17;
    v20[2] = v18;
    v20[3] = v19;
    return (id)sub_1B42B6048(v21, v22);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1B42D982C()
{
  void *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  result = (uint64_t)objc_msgSendSuper2(&v9, sel_viewWillLayoutSubviews);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate) == 1)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_textViewNeedsSizeUpdate) = 0;
    v2 = (void *)objc_opt_self();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_1B42DBD98;
    *(_QWORD *)(v4 + 24) = v3;
    v8[4] = sub_1B42DBDB0;
    v8[5] = v4;
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 1107296256;
    v8[2] = sub_1B47C92AC;
    v8[3] = &block_descriptor_13;
    v5 = _Block_copy(v8);
    v6 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_performWithoutAnimation_, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1B42D9994(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[6];

  v1 = objc_msgSend(a1, sel_tableView);
  if (v1)
  {
    v2 = v1;
    v4[4] = nullsub_1;
    v4[5] = 0;
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 1107296256;
    v4[2] = sub_1B47C92AC;
    v4[3] = &block_descriptor_16;
    v3 = _Block_copy(v4);
    swift_release();
    objc_msgSend(v2, sel_performBatchUpdates_completion_, v3, 0);
    _Block_release(v3);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B42D9A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  char v29;
  _BYTE v30[48];
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v2;
  v5 = a1 + qword_1ED4E51F8;
  swift_beginAccess();
  sub_1B41EA51C(v5, (uint64_t)v30, &qword_1ED4E53C0);
  sub_1B41EA51C((uint64_t)v30, (uint64_t)v28, &qword_1ED4E53C0);
  if (v29)
  {
    if (v29 == 1)
    {
      sub_1B41DF5E4((uint64_t)v28, (uint64_t)&v31, &qword_1ED4E53D8);
    }
    else
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
    }
  }
  else
  {
    sub_1B4217B90(v28, (uint64_t)&v31);
  }
  sub_1B41EA560((uint64_t)v30, &qword_1ED4E53C0);
  v6 = *((_QWORD *)&v32 + 1);
  if (!*((_QWORD *)&v32 + 1))
  {
    sub_1B41EA560((uint64_t)&v31, &qword_1ED4E53D8);
LABEL_13:
    v23 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
  v7 = v33;
  v8 = __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
  v9 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  sub_1B41EA560((uint64_t)&v31, &qword_1ED4E53D8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel);
  swift_beginAccess();
  if (!v15[1])
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = v15[2];
  if (*(_QWORD *)(v16 + 16))
  {
    sub_1B42B600C(*v15, v15[1]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v17 = sub_1B41ED06C(v12, v14);
    if ((v18 & 1) != 0)
    {
      v19 = v17;
      v20 = *(_QWORD *)(v16 + 56);
      v21 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
      v22 = *(_QWORD *)(v21 - 8);
      sub_1B41F3210(v20 + *(_QWORD *)(v22 + 72) * v19, a2, (uint64_t (*)(_QWORD))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a2, 0, 1, v21);
    }
    else
    {
      v26 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a2, 1, 1, v26);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TTRISubtaskListViewController()
{
  return objc_opt_self();
}

_BYTE *sub_1B42D9E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t *boxed_opaque_existential_0;
  _BYTE *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  char *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD v48[3];
  uint64_t v49[12];

  v3 = v2;
  v48[2] = a1;
  v5 = sub_1B4903CB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  v10 = *(char **)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v48 - v14;
  v16 = sub_1B4903C50();
  v48[1] = v3;
  v17 = (char *)(v3 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel);
  swift_beginAccess();
  v18 = *((_QWORD *)v17 + 1);
  if (!v18)
  {
    if (v16 < 0)
    {
      v10 = v8;
      if (qword_1EF097C58 == -1)
      {
LABEL_14:
        v34 = sub_1B49058F4();
        __swift_project_value_buffer(v34, (uint64_t)qword_1EF09CEE8);
        v35 = v6;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        v37 = v10;
        v38 = v10;
        v39 = v5;
        v36(v38, a2, v5);
        v40 = sub_1B49058E8();
        v41 = sub_1B4907394();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = v37;
          v43 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          v49[0] = v44;
          *(_DWORD *)v43 = 136315138;
          sub_1B41E11F0(&qword_1EF0B7CA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1698]);
          v45 = sub_1B4908324();
          v49[9] = sub_1B41EF7C8(v45, v46, v49);
          sub_1B4907B68();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v42, v39);
          _os_log_impl(&dword_1B41C2000, v40, v41, "Unable to get cellViewModel at indexPath - unable to render subtask list cell. {indexPath: %s}", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B5E3D7E0](v44, -1, -1);
          MEMORY[0x1B5E3D7E0](v43, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v5);
        }

        return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D50]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      }
LABEL_21:
      swift_once();
      goto LABEL_14;
    }
LABEL_9:
    sub_1B4483D04(a2);
    v21 = v32;
    swift_beginAccess();
    if (*((_QWORD *)v17 + 1))
      v33 = *v17;
    else
      v33 = 0;
    swift_endAccess();
    v21[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListAddSubtaskCell_isForGroceries] = v33;
    sub_1B42D8AA4();
    return v21;
  }
  if (v16 >= *(_QWORD *)(v18 + 16))
    goto LABEL_9;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v19 = sub_1B4903C50();
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v19 >= *(_QWORD *)(v18 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1B41F3210(v18 + ((v10[80] + 32) & ~(unint64_t)v10[80]) + *((_QWORD *)v10 + 9) * v19, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TTRISubtaskListViewModel.Subtask);
  swift_bridgeObjectRelease();
  sub_1B42CD97C((uint64_t)v13, (uint64_t)v15);
  sub_1B4483CF4(a2);
  v21 = v20;
  objc_msgSend(v20, sel_setSelectionStyle_, 0);
  v22 = &v21[direct field offset for TTRIRemindersListReminderCell.delegate];
  swift_beginAccess();
  *((_QWORD *)v22 + 1) = &off_1E678DE38;
  swift_unknownObjectWeakAssign();
  v23 = (uint64_t)&v21[direct field offset for TTRIRemindersListReminderCell.titleModule];
  swift_beginAccess();
  sub_1B41EA51C(v23, (uint64_t)v49, &qword_1ED4E5178);
  v24 = v49[0];
  sub_1B41EA560((uint64_t)v49, &qword_1ED4E5178);
  if (!v24)
  {
    v25 = sub_1B42DB7A4();
    v27 = v26;
    v29 = v28;
    v49[5] = type metadata accessor for TTRISubtaskListCellTitleViewController();
    v49[1] = v29;
    v49[2] = (uint64_t)v25;
    v49[0] = v27;
    swift_unknownObjectRetain();
    v30 = v25;
    TTRIRemindersListReminderCell.titleModule.setter((uint64_t)v49);

    swift_unknownObjectRelease();
  }
  v49[3] = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  v49[4] = (uint64_t)&protocol witness table for TTRRemindersListViewModel.Reminder;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v49);
  sub_1B41F3210((uint64_t)v15, (uint64_t)boxed_opaque_existential_0, type metadata accessor for TTRRemindersListViewModel.Reminder);
  TTRIRemindersListReminderCell.viewModel.setter((uint64_t)v49);
  sub_1B42DB900((uint64_t)v15);
  return v21;
}

uint64_t sub_1B42DA420(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v3 = sub_1B4903C50();
  v4 = v1 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 8);
  if (v6)
  {
    if (v3 < *(_QWORD *)(v6 + 16))
      return result;
  }
  else if (v3 < 0)
  {
    return result;
  }
  v7 = (void *)sub_1B4903C08();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v7, 1);

  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter);
  v9 = sub_1B4903C50();
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + 80) + 40);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, id (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 264))(v9, sub_1B42DBD6C, v8, ObjectType, v10);
}

void sub_1B42DA71C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD aBlock[7];

  v41 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CB28);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B4905684();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x1E0C80A78](v13);
  v39 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v40 = (char *)&v38 - v17;
  v18 = a1 & 1;
  v19 = (uint64_t *)&v5[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  swift_beginAccess();
  v20 = *v19;
  v21 = v19[1];
  *v19 = v18;
  v19[1] = a2;
  v19[2] = a3;
  v19[3] = a4;
  sub_1B42B6048(v20, v21);
  v22 = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (objc_msgSend(v5, sel_isViewLoaded))
  {
    sub_1B41EA51C(v41, (uint64_t)v12, &qword_1EF09CB28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1B41EA560((uint64_t)v12, &qword_1EF09CB28);
      v23 = objc_msgSend(v5, sel_tableView);
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, sel_reloadData);

        return;
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    v25 = v14;
    v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27 = v40;
    v26(v40, v12, v13);
    sub_1B41E11F0(&qword_1EF09CF40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86978], MEMORY[0x1E0D86988]);
    sub_1B49071C0();
    sub_1B49071FC();
    if (aBlock[0] == aBlock[6])
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
      return;
    }
    v28 = objc_msgSend(v22, sel_tableView);
    if (!v28)
      goto LABEL_11;
    v29 = v28;
    v30 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v31 = v39;
    v30(v39, v27, v13);
    v32 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v33 = (v15 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject();
    v26((char *)(v34 + v32), v31, v13);
    *(_QWORD *)(v34 + v33) = v22;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_1B42DBD1C;
    *(_QWORD *)(v35 + 24) = v34;
    aBlock[4] = sub_1B429EBC8;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B47C92AC;
    aBlock[3] = &block_descriptor_11;
    v36 = _Block_copy(aBlock);
    v37 = v22;
    swift_release();
    objc_msgSend(v29, sel_performBatchUpdates_completion_, v36, 0);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v13);
    swift_release();
  }
}

uint64_t sub_1B42DAA94(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD);
  char *v28;
  char *v29;
  int v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int v36;
  int v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  int v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47[4];

  v46 = a2;
  v3 = sub_1B4905684();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B490566C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v35 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CF48);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v35 - v16;
  v45 = v4;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v42(v15, a1, v3);
  v18 = sub_1B41E11F0(&qword_1EF09CF40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86978], MEMORY[0x1E0D86988]);
  sub_1B49071C0();
  *(_QWORD *)&v15[*(int *)(v12 + 36)] = v47[0];
  sub_1B41DF5E4((uint64_t)v15, (uint64_t)v17, &qword_1EF09CF48);
  v19 = &v17[*(int *)(v12 + 36)];
  v20 = *(_QWORD *)v19;
  sub_1B49071FC();
  if (v20 == v47[0])
    return sub_1B41EA560((uint64_t)v17, &qword_1EF09CF48);
  v41 = *MEMORY[0x1E0D86958];
  v37 = *MEMORY[0x1E0D86950];
  v36 = *MEMORY[0x1E0D86960];
  v38 = xmmword_1B4911D70;
  v39 = v18;
  v40 = v17;
  while (1)
  {
    v27 = (void (*)(uint64_t *, _QWORD))sub_1B4907268();
    v28 = v43;
    (*(void (**)(char *))(v7 + 16))(v43);
    v27(v47, 0);
    v29 = v44;
    v42(v44, (uint64_t)v17, v3);
    sub_1B4907208();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v3);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(v10, v28, v6);
    v30 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v10, v6);
    if (v30 == v41)
      break;
    if (v30 == v37)
    {
      (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v10, v6);
      v31 = *v10;
      v32 = objc_msgSend(v46, sel_tableView);
      if (!v32)
        goto LABEL_15;
      v24 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63B0);
      sub_1B4903CB0();
      *(_OWORD *)(swift_allocObject() + 16) = v38;
      MEMORY[0x1B5E37FD8](v31, 0);
      v25 = (void *)sub_1B4906DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_deleteRowsAtIndexPaths_withRowAnimation_, v25, 100);
    }
    else
    {
      if (v30 != v36)
        goto LABEL_17;
      (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v10, v6);
      v33 = *v10;
      v34 = objc_msgSend(v46, sel_tableView);
      if (!v34)
        goto LABEL_16;
      v24 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63B0);
      sub_1B4903CB0();
      *(_OWORD *)(swift_allocObject() + 16) = v38;
      MEMORY[0x1B5E37FD8](v33, 0);
      v25 = (void *)sub_1B4906DA0();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_reconfigureRowsAtIndexPaths_, v25);
    }
LABEL_6:

    v26 = *(_QWORD *)v19;
    v17 = v40;
    sub_1B49071FC();
    if (v26 == v47[0])
      return sub_1B41EA560((uint64_t)v17, &qword_1EF09CF48);
  }
  (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v10, v6);
  v22 = *v10;
  v23 = objc_msgSend(v46, sel_tableView);
  if (v23)
  {
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63B0);
    sub_1B4903CB0();
    *(_OWORD *)(swift_allocObject() + 16) = v38;
    MEMORY[0x1B5E37FD8](v22, 0);
    v25 = (void *)sub_1B4906DA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_insertRowsAtIndexPaths_withRowAnimation_, v25, 100);
    goto LABEL_6;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_1B4908384();
  __break(1u);
  return result;
}

void sub_1B42DAFF4(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1B4903CB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v1[OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel];
  swift_beginAccess();
  if (*((_QWORD *)v8 + 1))
  {
    v9 = *((_QWORD *)v8 + 3);
    v10 = *(void **)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder(0) + 20));
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v11 = objc_msgSend(v10, sel_stringRepresentation);
    v12 = sub_1B4906A64();
    v14 = v13;

    if (*(_QWORD *)(v9 + 16))
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v15 = sub_1B41ED06C(v12, v14);
      if ((v16 & 1) != 0)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v18 = objc_msgSend(v2, sel_tableView);
        if (v18)
        {
          v19 = v18;
          MEMORY[0x1B5E37FD8](v17, 0);
          v20 = (void *)sub_1B4903C08();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          v21 = objc_msgSend(v19, sel_cellForRowAtIndexPath_, v20);

          if (v21)
          {
            type metadata accessor for TTRIRemindersListReminderCell();
            v22 = swift_dynamicCastClass();
            if (v22
              && (v23 = *(void **)(v22 + qword_1ED4E51F0),
                  v24 = objc_msgSend(v23, sel_window),
                  objc_msgSend(v24, sel_makeKeyWindow),
                  v24,
                  objc_msgSend(v23, sel_becomeFirstResponder),
                  v25 = objc_msgSend(v23, sel_selectedTextRange),
                  v25,
                  !v25))
            {
              v26 = objc_msgSend(v23, sel_endOfDocument);
              v27 = objc_msgSend(v23, sel_endOfDocument);
              v28 = objc_msgSend(v23, sel_textRangeFromPosition_toPosition_, v26, v27);

              objc_msgSend(v23, sel_setSelectedTextRange_, v28);
            }
            else
            {

            }
          }
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B42DB310(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17[2];
  char v18;
  _BYTE v19[48];
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v7 = a1 + qword_1ED4E51F8;
  swift_beginAccess();
  sub_1B41EA51C(v7, (uint64_t)v19, &qword_1ED4E53C0);
  sub_1B41EA51C((uint64_t)v19, (uint64_t)v17, &qword_1ED4E53C0);
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1B41DF5E4((uint64_t)v17, (uint64_t)&v20, &qword_1ED4E53D8);
    }
    else
    {
      v22 = 0;
      v20 = 0u;
      v21 = 0u;
    }
  }
  else
  {
    sub_1B4217B90(v17, (uint64_t)&v20);
  }
  sub_1B41EA560((uint64_t)v19, &qword_1ED4E53C0);
  v8 = *((_QWORD *)&v21 + 1);
  if (!*((_QWORD *)&v21 + 1))
    return sub_1B41EA560((uint64_t)&v20, &qword_1ED4E53D8);
  v9 = v22;
  v10 = __swift_project_boxed_opaque_existential_1(&v20, *((uint64_t *)&v21 + 1));
  v11 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  sub_1B41EA560((uint64_t)&v20, &qword_1ED4E53D8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 112))(v8, v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v8);
  if (v14)
  {
    sub_1B42CC760(v14, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B42DB4D0()
{
  void *v0;
  id result;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  unsigned int v5;

  result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_hasActiveDrag);

    if ((v3 & 1) != 0)
      return 0;
    result = objc_msgSend(v0, sel_tableView);
    if (result)
    {
      v4 = result;
      v5 = objc_msgSend(result, sel_hasActiveDrop);

      return (id)(v5 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1B42DB570()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1EF097C58 != -1)
    swift_once();
  v0 = sub_1B49058F4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF09CEE8);
  oslog = sub_1B49058E8();
  v1 = sub_1B4907394();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1B41C2000, oslog, v1, "TTRISubtaskListViewController should never receive requestConfirmSiriFoundInAppsReminder", v2, 2u);
    MEMORY[0x1B5E3D7E0](v2, -1, -1);
  }

}

uint64_t sub_1B42DB63C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CB20);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B42D9A78(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1B41EA560((uint64_t)v4, &qword_1EF09CB20);
  sub_1B42CD97C((uint64_t)v4, (uint64_t)v8);
  sub_1B42CD2B4((uint64_t)v8);
  return sub_1B42DB900((uint64_t)v8);
}

uint64_t sub_1B42DB738()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B42DB744()
{
  void *v0;

  objc_msgSend(v0, sel_setEditing_animated_, 0, 1);
  return 1;
}

uint64_t sub_1B42DB770()
{
  return 0;
}

uint64_t sub_1B42DB77C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter);
  if (*(_QWORD *)(v1 + 56))
    return *(_BYTE *)(v1 + 48) & 1;
  else
    return 0;
}

id sub_1B42DB7A4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  _BYTE *v4;
  _QWORD *v5;
  id v6;
  objc_super v8;

  type metadata accessor for TTRISubtaskListCellTitlePresenter(0);
  v0 = (_QWORD *)swift_allocObject();
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  v0[5] = 0;
  swift_unknownObjectWeakInit();
  v0[7] = 0;
  swift_unknownObjectWeakInit();
  v1 = (char *)v0 + OBJC_IVAR____TtC15RemindersUICore33TTRISubtaskListCellTitlePresenter_viewModel;
  v2 = type metadata accessor for TTRReminderCellTitleViewModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (objc_class *)type metadata accessor for TTRISubtaskListCellTitleViewController();
  v4 = objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_titleTextView] = 0;
  v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_userPressedReturn] = 0;
  v5 = &v4[OBJC_IVAR____TtC15RemindersUICore38TTRISubtaskListCellTitleViewController_presenter];
  *v5 = v0;
  v5[1] = &off_1E67C2F90;
  v8.receiver = v4;
  v8.super_class = v3;
  swift_retain();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  v0[3] = &off_1E67C2EF8;
  swift_unknownObjectWeakAssign();
  v0[7] = &off_1E678DEE0;
  swift_unknownObjectWeakAssign();
  return v6;
}

uint64_t sub_1B42DB900(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B42DB93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 8);
  if (v2)
    return *(_QWORD *)(v2 + 16) + 1;
  else
    return 1;
}

unint64_t sub_1B42DB994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;

  v1 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = sub_1B4903C50();
  v9 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  result = swift_beginAccess();
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 && v8 < *(_QWORD *)(v11 + 16))
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    result = sub_1B4903C50();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(v11 + 16))
    {
      sub_1B41F3210(v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * result, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for TTRISubtaskListViewModel.Subtask);
      swift_bridgeObjectRelease();
      sub_1B42CD97C((uint64_t)v5, (uint64_t)v7);
      v12 = *(_QWORD *)&v7[*(int *)(v1 + 20)];
      v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_presenter)
                                  + 80)
                      + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 272))(v12, ObjectType, v13);
      return sub_1B42DB900((uint64_t)v7);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B42DBB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1B4903C50();
  v2 = v0 + OBJC_IVAR____TtC15RemindersUICore29TTRISubtaskListViewController_viewModel;
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 8);
  if (v3)
  {
    if (v1 < *(_QWORD *)(v3 + 16))
      return 1;
  }
  else if (v1 < 0)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1B42DBB80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CB20);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRISubtaskListViewModel.Subtask();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B42D9A78(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1B41EA560((uint64_t)v4, &qword_1EF09CB20);
  sub_1B42CD97C((uint64_t)v4, (uint64_t)v8);
  v10 = type metadata accessor for TTRRemindersListViewModel.Reminder(0);
  sub_1B42D6290((v8[*(int *)(v10 + 32)] & 1) == 0, *(void **)&v8[*(int *)(v5 + 20)]);
  return sub_1B42DB900((uint64_t)v8);
}

uint64_t sub_1B42DBCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1B4905684();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1B42DBD1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1B4905684() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1B42DAA94(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B42DBD5C()
{
  return swift_deallocObject();
}

id sub_1B42DBD6C(void *a1)
{
  uint64_t v1;

  return sub_1B42CC734(a1, v1);
}

uint64_t sub_1B42DBD74()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B42DBD98()
{
  uint64_t v0;

  sub_1B42D9994(*(void **)(v0 + 16));
}

uint64_t sub_1B42DBDA0()
{
  return swift_deallocObject();
}

uint64_t sub_1B42DBDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1ED4E60B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4E60B0);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t TTRURLMetadataInteractor.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TTRURLMetadataInteractor.init()();
  return v0;
}

uint64_t TTRURLMetadataInteractor.init()()
{
  uint64_t v0;

  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_1B4907520();
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC08);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1B490464C();
  swift_release();
  sub_1B4907520();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC10);
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1B490464C();
  swift_release();
  return v0;
}

uint64_t sub_1B42DBFBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B42DBFE0(uint64_t a1)
{
  void *v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = sub_1B42DC0DC(v1, v2, v3);
    swift_release();
  }
  else
  {
    v5 = sub_1B4903DAC();
    sub_1B42DE0A4();
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, *MEMORY[0x1E0D84C78], v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CF70);
    swift_allocObject();
    return sub_1B4905738();
  }
  return v4;
}

uint64_t sub_1B42DC0D4(uint64_t a1)
{
  return sub_1B42DBFE0(a1);
}

uint64_t sub_1B42DC0DC(void *a1, int a2, void *a3)
{
  id *v3;
  char v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v38;
  void *v39;
  uint64_t v40;
  char *v41;
  int v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;

  v5 = a2;
  v42 = a2;
  v43 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECF30);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECD40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ED150);
  v40 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC70);
  v18 = *(_QWORD *)(v17 - 8);
  v44 = v17;
  v45 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECCD0);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v41 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC50);
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = 1;
  sub_1B4905EB8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE420);
  sub_1B4905EAC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a1;
  *(_BYTE *)(v23 + 24) = v5;
  v39 = a3;
  v24 = v43;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = v24;
  v43 = a3;
  v38 = a1;
  sub_1B4905E1C();
  sub_1B41DF50C(0, &qword_1ED4ECEF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECCF0);
  sub_1B41E1C74(&qword_1ED4ED148, (uint64_t *)&unk_1ED4ED150, MEMORY[0x1E0C964C8]);
  sub_1B41E1C74(&qword_1ED4ECCE8, &qword_1ED4ECCF0, MEMORY[0x1E0C95D90]);
  sub_1B4906044();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v14);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  v51 = (id)sub_1B4907520();
  v25 = sub_1B49074E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  sub_1B41E1C74(&qword_1ED4ECC68, &qword_1ED4ECC70, MEMORY[0x1E0C95B78]);
  sub_1B42B6A08((unint64_t *)&qword_1ED4ECF40, (unint64_t *)&qword_1ED4EE3F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v26 = v41;
  v27 = v44;
  sub_1B490605C();
  sub_1B41EA560((uint64_t)v9, (uint64_t *)&unk_1ED4ECF30);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v27);
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  v30 = v38;
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  *(_BYTE *)(v29 + 32) = v42;
  *(_QWORD *)(v29 + 40) = v39;
  sub_1B41E1C74(&qword_1ED4ECCC8, &qword_1ED4ECCD0, MEMORY[0x1E0C95CB8]);
  v31 = v30;
  v32 = v43;
  v34 = v46;
  v33 = v47;
  sub_1B4905FC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v33);
  sub_1B41E1C74(&qword_1ED4ECC48, &qword_1ED4ECC50, MEMORY[0x1E0C95950]);
  v35 = v48;
  v36 = sub_1B4905F54();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v35);
  return v36;
}

uint64_t sub_1B42DC5F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1B42DD770();
  result = swift_allocError();
  *v3 = 0;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 1;
  return result;
}

void TTRURLMetadataInteractor.metadata(for:savingIfNeededTo:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  id v16;
  id v17;
  int v18;
  void *v19;
  _QWORD v20[2];
  char v21;
  void *v22;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8FD0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (_QWORD *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (_QWORD *)((char *)v20 - v13);
  if (!a2)
  {
    v17 = a1;
    goto LABEL_6;
  }
  v15 = a1;
  v16 = objc_msgSend(a2, sel_list);
  if (!v16)
  {
LABEL_6:
    sub_1B42DD41C();
    *v14 = swift_allocError();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v14, *MEMORY[0x1E0D852D0], v8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v9 + 32))(a3, v14, v8);
    goto LABEL_7;
  }

  if (!*(_QWORD *)(v4 + 16))
  {
    __break(1u);
LABEL_15:
    sub_1B4908384();
    __break(1u);
    return;
  }
  v20[1] = v15;
  v21 = 1;
  v22 = a2;
  swift_retain();
  sub_1B4904640();
  swift_release();
LABEL_7:
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v12, v8);
  if (v18 == *MEMORY[0x1E0D852D8])
  {

    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
    swift_release();
    return;
  }
  if (v18 == *MEMORY[0x1E0D852E8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
    v19 = (void *)*v12;
    sub_1B42DC890(*v12, a1, 1, a2, 1);

    return;
  }
  if (v18 != *MEMORY[0x1E0D852D0])
    goto LABEL_15;

  (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v12, v8);
}

void sub_1B42DC890(uint64_t a1, void *a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  _QWORD v42[2];
  os_log_t v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8FD8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a2, sel_metadata);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B4903710();
    v18 = v17;

    sub_1B41EB4E0(v16, v18);
  }
  else if (a4)
  {
    v47 = a1;
    v48 = v5;
    v19 = qword_1ED4E0620;
    v20 = a4;
    if (v19 != -1)
      swift_once();
    v21 = sub_1B49058F4();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED4E60B0);
    v22 = v20;
    v23 = a2;
    v24 = sub_1B49058E8();
    v25 = sub_1B4907370();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v28 = v23;
      v29 = (_QWORD *)swift_slowAlloc();
      v45 = v29;
      v46 = swift_slowAlloc();
      v50[0] = v46;
      *(_DWORD *)v27 = 138412546;
      v42[1] = v27 + 4;
      v30 = objc_msgSend(v28, sel_objectID);
      v44 = v26;
      v31 = v22;
      v32 = v30;
      v49 = (uint64_t)v30;
      v43 = v24;
      sub_1B4907B68();
      *v29 = v32;
      v23 = v28;

      *(_WORD *)(v27 + 12) = 2080;
      if ((a5 & 1) != 0)
        v33 = 1702195828;
      else
        v33 = 0x65736C6166;
      if ((a5 & 1) != 0)
        v34 = 0xE400000000000000;
      else
        v34 = 0xE500000000000000;
      v49 = sub_1B41EF7C8(v33, v34, v50);
      sub_1B4907B68();
      v22 = v31;
      swift_bridgeObjectRelease();
      v35 = v43;
      _os_log_impl(&dword_1B41C2000, v43, (os_log_type_t)v44, "TTRURLMetadataInteractor: saving metadata {attachmentID: %@, isResave: %s}", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      v36 = v45;
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v36, -1, -1);
      v37 = v46;
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v37, -1, -1);
      MEMORY[0x1B5E3D7E0](v27, -1, -1);

    }
    else
    {

    }
    v38 = (void *)v47;
    if (*(_QWORD *)(v48 + 24))
    {
      v50[0] = v47;
      v50[1] = (uint64_t)v23;
      v50[2] = (uint64_t)v22;
      v39 = v22;
      v40 = v23;
      v41 = v38;
      swift_retain();
      sub_1B4904640();

      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1B42DCC18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 8), sel_objectID);
  *a1 = result;
  return result;
}

uint64_t sub_1B42DCC50@<X0>(id a1@<X1>, char a2@<W2>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  id v7;
  void *v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  id v29;
  id v30;

  v7 = objc_msgSend(a1, sel_metadata);
  if (v7)
  {
    v8 = v7;
    v9 = (void *)sub_1B4903710();
    v11 = v10;

    if (qword_1ED4E0620 != -1)
      swift_once();
    v12 = sub_1B49058F4();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED4E60B0);
    v13 = a3;
    v14 = a1;
    v15 = sub_1B49058E8();
    v16 = sub_1B4907370();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      v29 = objc_msgSend(v14, sel_objectID);
      sub_1B4907B68();
      *v18 = v29;

      _os_log_impl(&dword_1B41C2000, v15, v16, "TTRURLMetadataInteractor: found metadata {attachmentID: %@}", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v18, -1, -1);
      MEMORY[0x1B5E3D7E0](v17, -1, -1);

    }
    else
    {

    }
    v26 = sub_1B42DD820(v9, v11);
    result = sub_1B41EB4E0((uint64_t)v9, v11);
  }
  else
  {
    if (qword_1ED4E0620 != -1)
      swift_once();
    v19 = sub_1B49058F4();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED4E60B0);
    v20 = a3;
    v21 = a1;
    v22 = sub_1B49058E8();
    v23 = sub_1B4907370();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v30 = objc_msgSend(v21, sel_objectID);
      sub_1B4907B68();
      *v25 = v30;

      _os_log_impl(&dword_1B41C2000, v22, v23, "TTRURLMetadataInteractor: fetching metadata {attachmentID: %@}", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v25, -1, -1);
      MEMORY[0x1B5E3D7E0](v24, -1, -1);

    }
    else
    {

    }
    result = sub_1B42DDBD0(v21, a2 & 1, a3);
    v26 = result;
  }
  *a4 = v26;
  return result;
}

id sub_1B42DCFF4@<X0>(id *a1@<X0>, void *a2@<X2>, char a3@<W3>, void *a4@<X4>, _QWORD *a5@<X8>)
{
  id v10;

  v10 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1B42DC890((uint64_t)v10, a2, a3 & 1, a4, 0);
    swift_release();
  }
  *a5 = v10;
  return v10;
}

void sub_1B42DD090(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;

  v3 = *a1;
  v4 = a1[1];
  sub_1B422B9E0(*a1, v4);
  v5 = (void *)sub_1B49036F8();
  v6 = objc_msgSend((id)objc_opt_self(), sel_metadataWithDataRepresentation_, v5);
  sub_1B41EB4E0(v3, v4);

  *a2 = v6;
}

uint64_t sub_1B42DD118(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  unint64_t v19;
  _OWORD v20[2];
  uint64_t v21;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1B4244144;
  *(_QWORD *)(v11 + 24) = v10;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v12 = a5;
  v13 = a3;
  v14 = a4;
  swift_retain();
  v15 = objc_msgSend(v12, sel_store);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B49131A0;
  *(_QWORD *)(v16 + 32) = v12;
  v19 = v16;
  sub_1B4906DC4();
  v17 = v12;
  sub_1B46F8360(v19, (uint64_t)v15, 0, (uint64_t)v20, 0, 0, (uint64_t)sub_1B42DD818, v11, v13, v14, v17);

  swift_bridgeObjectRelease();
  sub_1B41EA560((uint64_t)v20, qword_1ED4E4FD8);

  return swift_release();
}

void sub_1B42DD28C(void *a1, void (*a2)(void *, uint64_t))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    a2(a1, 1);

  }
  else
  {
    a2(0, 0);
  }
}

uint64_t TTRURLMetadataInteractor.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t TTRURLMetadataInteractor.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1B42DD33C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v1 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09B390);
  swift_allocObject();
  v5 = v1;
  v6 = v2;
  v7 = v3;
  sub_1B4905EDC();
  sub_1B41E1C74(&qword_1EF09CF68, &qword_1EF09B390, MEMORY[0x1E0C96108]);
  v8 = sub_1B4905F54();
  swift_release();
  return v8;
}

unint64_t sub_1B42DD41C()
{
  unint64_t result;

  result = qword_1EF09CF50;
  if (!qword_1EF09CF50)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B49162CC, &type metadata for TTRURLMetadataInteractor.MetadataSavingError);
    atomic_store(result, (unint64_t *)&qword_1EF09CF50);
  }
  return result;
}

uint64_t type metadata accessor for TTRURLMetadataInteractor()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for TTRURLMetadataInteractor.MetadataSavingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B42DD4C0 + 4 * byte_1B4916120[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B42DD4E0 + 4 * byte_1B4916125[v4]))();
}

_BYTE *sub_1B42DD4C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B42DD4E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B42DD4E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B42DD4F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B42DD4F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B42DD500(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.MetadataSavingError()
{
  return &type metadata for TTRURLMetadataInteractor.MetadataSavingError;
}

uint64_t assignWithCopy for TTRURLMetadataInteractor.SavingOperationParams(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for TTRURLMetadataInteractor.SavingOperationParams(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.SavingOperationParams()
{
  return &type metadata for TTRURLMetadataInteractor.SavingOperationParams;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for TTRURLMetadataInteractor.MainOperationParams(id *a1)
{

}

uint64_t assignWithCopy for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRURLMetadataInteractor.MainOperationParams(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.MainOperationParams()
{
  return &type metadata for TTRURLMetadataInteractor.MainOperationParams;
}

uint64_t sub_1B42DD708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B42DD718()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B42DD72C()
{
  unint64_t result;

  result = qword_1EF09CF58;
  if (!qword_1EF09CF58)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B49162A4, &type metadata for TTRURLMetadataInteractor.MetadataSavingError);
    atomic_store(result, (unint64_t *)&qword_1EF09CF58);
  }
  return result;
}

unint64_t sub_1B42DD770()
{
  unint64_t result;

  result = qword_1EF09CF60;
  if (!qword_1EF09CF60)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4916384, &type metadata for TTRURLMetadataInteractor.InternalError);
    atomic_store(result, (unint64_t *)&qword_1EF09CF60);
  }
  return result;
}

uint64_t sub_1B42DD7B4()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1B42DD7E8(uint64_t a1, uint64_t a2)
{
  void **v2;

  return sub_1B42DD118(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1B42DD7F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B42DD818(void *a1)
{
  uint64_t v1;

  sub_1B42DD28C(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1B42DD820(void *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECF30);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECD38);
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECCC0);
  v11 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  v27 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC40);
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECC20);
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v33 = a2;
  sub_1B422B9E0((uint64_t)a1, a2);
  sub_1B4905EB8();
  sub_1B4903ECC();
  v32 = (id)sub_1B4903EC0();
  v18 = sub_1B49074E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  sub_1B41E1C74(&qword_1ED4ECD30, &qword_1ED4ECD38, MEMORY[0x1E0C960B0]);
  sub_1B42B6A08((unint64_t *)&qword_1ED4ECF40, (unint64_t *)&qword_1ED4EE3F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1B490605C();
  sub_1B41EA560((uint64_t)v6, (uint64_t *)&unk_1ED4ECF30);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  sub_1B41DF50C(0, &qword_1ED4ECEF8);
  sub_1B41E1C74(&qword_1ED4ECCB8, &qword_1ED4ECCC0, MEMORY[0x1E0C95CB8]);
  v19 = v26;
  sub_1B4905FC0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE420);
  sub_1B41E1C74(&qword_1ED4ECC38, &qword_1ED4ECC40, MEMORY[0x1E0C95950]);
  v20 = v28;
  sub_1B4906098();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v20);
  sub_1B41E1C74(&qword_1ED4ECC18, &qword_1ED4ECC20, MEMORY[0x1E0C95850]);
  v21 = v29;
  v22 = sub_1B4905F6C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v21);
  return v22;
}

uint64_t sub_1B42DDBD0(void *a1, int a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  _QWORD *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v43;
  char *v44;
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;

  v46 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECF30);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B49036D4();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  v8 = *(_QWORD *)(v47 + 64);
  v9 = MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v39 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CF78);
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC11E0]), sel_init);
  if (qword_1ED4E0620 != -1)
    swift_once();
  v14 = sub_1B49058F4();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED4E60B0);
  v15 = a3;
  v16 = a1;
  v17 = sub_1B49058E8();
  v18 = sub_1B4907370();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v40 = v8;
    v21 = (_QWORD *)v20;
    v41 = v13;
    *(_DWORD *)v19 = 138412290;
    v22 = objc_msgSend(v16, sel_objectID);
    v52 = (uint64_t)v22;
    v13 = v41;
    sub_1B4907B68();
    *v21 = v22;

    _os_log_impl(&dword_1B41C2000, v17, v18, "TTRURLMetadataInteractor: fetching LPLinkMetadata {attachmentID: %@}", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
    swift_arrayDestroy();
    v23 = v21;
    v8 = v40;
    MEMORY[0x1B5E3D7E0](v23, -1, -1);
    MEMORY[0x1B5E3D7E0](v19, -1, -1);

  }
  else
  {

  }
  v24 = objc_msgSend(v16, sel_url);
  v25 = v45;
  sub_1B490368C();

  v26 = v47;
  v27 = v48;
  v28 = v44;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v25, v48);
  v29 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30 + v29, v28, v27);
  *(_BYTE *)(v30 + v29 + v8) = v46 & 1;
  v31 = v43;
  *(_QWORD *)(((v29 + v8) & 0xFFFFFFFFFFFFFFF8) + v30 + 8) = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CF80);
  swift_allocObject();
  v32 = v31;
  v33 = sub_1B4905EDC();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  v52 = v33;
  sub_1B4903ECC();
  v51 = (id)sub_1B4903EC0();
  v34 = sub_1B49074E4();
  v35 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v42, 1, 1, v34);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  sub_1B41E1C74((unint64_t *)&qword_1EF09CF88, &qword_1EF09CF80, MEMORY[0x1E0C96108]);
  sub_1B42B6A08((unint64_t *)&qword_1ED4ECF40, (unint64_t *)&qword_1ED4EE3F0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1B490605C();
  sub_1B41EA560(v35, (uint64_t *)&unk_1ED4ECF30);

  swift_release();
  sub_1B41E1C74(&qword_1EF09CF90, &qword_1EF09CF78, MEMORY[0x1E0C95CB8]);
  v36 = v50;
  v37 = sub_1B4905F6C();

  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v36);
  return v37;
}

unint64_t sub_1B42DE0A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4E05C0;
  if (!qword_1ED4E05C0)
  {
    v1 = sub_1B4903DAC();
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0D84C90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4E05C0);
  }
  return result;
}

uint64_t sub_1B42DE0EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B42DE118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1B42DCC50(*(id *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1B42DE128()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_1B42DE15C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1B42DCFF4(a1, *(void **)(v2 + 24), *(_BYTE *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_1B42DE16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_1B49036D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1B42DE1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1B49036D4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1B46CC804(a1, a2, v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(void **)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFF8) + v2 + 8));
}

uint64_t storeEnumTagSinglePayload for TTRURLMetadataInteractor.InternalError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B42DE290 + 4 * byte_1B491612F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B42DE2C4 + 4 * byte_1B491612A[v4]))();
}

uint64_t sub_1B42DE2C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B42DE2CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B42DE2D4);
  return result;
}

uint64_t sub_1B42DE2E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B42DE2E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B42DE2EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B42DE2F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRURLMetadataInteractor.InternalError()
{
  return &type metadata for TTRURLMetadataInteractor.InternalError;
}

uint64_t sub_1B42DE310()
{
  return sub_1B42B6A08((unint64_t *)&qword_1ED4ECEC0, (unint64_t *)&qword_1ED4ECEB0, 0x1E0D845B0, MEMORY[0x1E0DEFCF8]);
}

unint64_t sub_1B42DE348()
{
  unint64_t result;

  result = qword_1EF09CF98;
  if (!qword_1EF09CF98)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B491635C, &type metadata for TTRURLMetadataInteractor.InternalError);
    atomic_store(result, (unint64_t *)&qword_1EF09CF98);
  }
  return result;
}

uint64_t sub_1B42DE394(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_1B49036D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B41EA51C(v1, (uint64_t)v10, &qword_1ED4E9EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t sub_1B42DE4EC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *);

  v16 = a1;
  v5 = sub_1B49037E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B41EA51C(v2, (uint64_t)v11, &qword_1ED4EE300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    v12 = sub_1B490338C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v16(v8);
    if (v3)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v14 = sub_1B490338C();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
    }
  }
}

uint64_t sub_1B42DE67C(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t (*v29)(char *);
  uint64_t v30;

  v29 = a1;
  v6 = sub_1B4903AB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(a3 + 56);
  v27 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v28 = (unint64_t)(v14 + 63) >> 6;
  v30 = a3;
  result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v24 = v29(v10);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_release();
      return a2 & 1;
    }
    v25 = v24;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v25 & 1) == 0)
    {
      a2 = 0;
      goto LABEL_28;
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 1;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B42DE8FC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v15;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  for (; v5; v5 = sub_1B49081B0())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E3C268](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v15 = v7;
      v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      v11 = v10;

      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v12 = 0;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_1B42DEA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09CFA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09CFA0);
  if (qword_1ED4E6220 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F1F00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id INTaskList.listID.getter()
{
  return sub_1B42E2294();
}

id INTaskList.remList(store:)(void *a1)
{
  return sub_1B42E2480(a1, (uint64_t (*)(void))INTaskList.listID.getter, (SEL *)&selRef_fetchListWithObjectID_error_, "Attempting to acquire REMList from INTaskList whose listID is nil", "Error obtaining REMList from INTaskList {error: %s}");
}

uint64_t INTaskList.init(list:includeReminders:)(id a1, char a2)
{
  id v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v21;
  void *v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  if ((a2 & 1) == 0)
  {
LABEL_10:
    v6 = MEMORY[0x1E0DEE9D8];
    return INTaskList.init(list:reminders:)(a1, v6);
  }
  v23[0] = 0;
  v3 = objc_msgSend(a1, sel_fetchRemindersAndSubtasksWithError_, v23);
  v4 = v23[0];
  if (!v3)
  {
    v8 = v23[0];
    v9 = (void *)sub_1B4903560();

    swift_willThrow();
    if (qword_1EF097C68 != -1)
      swift_once();
    v10 = sub_1B49058F4();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF09CFA0);
    v11 = v9;
    v12 = v9;
    v13 = a1;
    v14 = sub_1B49058E8();
    v15 = sub_1B4907388();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      v23[0] = v22;
      *(_DWORD *)v16 = 138412546;
      v17 = objc_msgSend(v13, sel_objectID);
      sub_1B4907B68();
      *v21 = v17;

      *(_WORD *)(v16 + 12) = 2080;
      swift_getErrorValue();
      v18 = sub_1B490842C();
      sub_1B41EF7C8(v18, v19, (uint64_t *)v23);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, v14, v15, "Error fetching reminders for list {listID: %@, error: %s", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v21, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v22, -1, -1);
      MEMORY[0x1B5E3D7E0](v16, -1, -1);
    }
    else
    {

    }
    goto LABEL_10;
  }
  v5 = v3;
  sub_1B41DF50C(0, (unint64_t *)&unk_1ED4ECEE0);
  v6 = sub_1B4906DAC();
  v7 = v4;

  return INTaskList.init(list:reminders:)(a1, v6);
}

uint64_t INTaskList.init(list:reminders:)(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v5 = sub_1B4903848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
    v9 = sub_1B49081B0();
    v41 = v2;
    v42 = v8;
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v41 = v2;
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v9)
    goto LABEL_11;
LABEL_3:
  v43 = MEMORY[0x1E0DEE9D8];
  result = sub_1B4907F28();
  if (v9 < 0)
  {
    __break(1u);
    return result;
  }
  v40 = a1;
  sub_1B41DF50C(0, &qword_1ED4ED010);
  v11 = 0;
  do
  {
    if ((a2 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x1B5E3C268](v11, a2);
    else
      v12 = *(id *)(a2 + 8 * v11 + 32);
    ++v11;
    INTask.init(reminder:)(v12);
    sub_1B4907F04();
    sub_1B4907F34();
    sub_1B4907F40();
    sub_1B4907F10();
  }
  while (v9 != v11);
  swift_bridgeObjectRelease();
  a1 = v40;
LABEL_12:
  v13 = objc_msgSend(a1, sel_displayName);
  v14 = sub_1B4906A64();
  v16 = v15;

  if (qword_1ED4EE550 != -1)
    swift_once();
  if (v14 == sub_1B4903434() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v19 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_21:
    v24 = objc_msgSend(a1, sel_displayName);
    sub_1B4906A64();

    v25 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
    v26 = (void *)sub_1B4906A34();
    v22 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v25, sel_initWithVocabularyIdentifier_spokenPhrase_pronunciationHint_, v26, v22, 0);

    goto LABEL_22;
  }
  v20 = objc_msgSend(a1, sel_displayName);
  sub_1B4906A64();

  v21 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v22 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithSpokenPhrase_, v22);
  swift_bridgeObjectRelease();
LABEL_22:

  sub_1B41DF50C(0, &qword_1ED4ED010);
  v27 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(a1, sel_parentList);
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v28, sel_displayName);

    sub_1B4906A64();
    v31 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v32 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v31, sel_initWithSpokenPhrase_, v32);
    swift_bridgeObjectRelease();

  }
  else
  {
    v33 = 0;
  }
  v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v35 = objc_msgSend(a1, sel_objectID);
  v36 = objc_msgSend(v35, sel_uuid);

  v37 = v42;
  sub_1B4903824();

  sub_1B4903800();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v37, v5);
  v38 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v34, sel_initWithTitle_tasks_groupName_createdDateComponents_modifiedDateComponents_identifier_, v23, v27, v33, 0, 0, v38);

  return (uint64_t)v39;
}

id INTask.init(reminder:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  char *v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  void *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  id v66;
  void *v67;
  void *v68;
  uint64_t v69;
  char *v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;

  v2 = v1;
  v4 = sub_1B4903848();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B4903AD0();
  v86 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49037E8();
  v85 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v88 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1B490338C();
  v84 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v87 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B42E02E4();
  v14 = v13;
  sub_1B42E0E40();
  v16 = v15;
  v17 = objc_msgSend(a1, sel_titleAsString);
  v69 = v2;
  v68 = v14;
  v67 = v16;
  v89 = v5;
  v90 = v4;
  v93 = v10;
  v94 = (void *)v7;
  if (v17)
  {
    v18 = v17;
    sub_1B4906A64();

  }
  v19 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v20 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(v19, sel_initWithSpokenPhrase_, v20);
  swift_bridgeObjectRelease();

  v65 = objc_msgSend(a1, sel_isCompleted);
  v21 = objc_msgSend(a1, sel_creationDate);
  v22 = v88;
  sub_1B49037B8();

  _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
  v23 = sub_1B4903AB8();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v95 = a1;
  v70 = v9;
  v27 = (v26 + 32) & ~v26;
  v80 = v27;
  v81 = v26 | 7;
  v82 = v27 + 6 * v25;
  v28 = swift_allocObject();
  v79 = xmmword_1B49163D0;
  *(_OWORD *)(v28 + 16) = xmmword_1B49163D0;
  v78 = *MEMORY[0x1E0CB1158];
  v29 = *(void (**)(uint64_t))(v24 + 104);
  v29(v28 + v27);
  v77 = *MEMORY[0x1E0CB1160];
  v29(v28 + v27 + v25);
  v76 = *MEMORY[0x1E0CB1130];
  v29(v28 + v27 + 2 * v25);
  v75 = 3 * v25;
  v74 = *MEMORY[0x1E0CB1140];
  v29(v28 + v27 + 3 * v25);
  v73 = *MEMORY[0x1E0CB1178];
  v29(v28 + v27 + 4 * v25);
  v72 = 5 * v25;
  v71 = *MEMORY[0x1E0CB1188];
  v29(v28 + v27 + 5 * v25);
  sub_1B4240450(v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v30 = v87;
  v31 = v70;
  sub_1B49039D4();
  swift_bridgeObjectRelease();
  v86 = *(_QWORD *)(v86 + 8);
  v32 = v31;
  ((void (*)(char *, void *))v86)(v31, v94);
  v85 = *(_QWORD *)(v85 + 8);
  ((void (*)(char *, uint64_t))v85)(v22, v93);
  v64 = sub_1B4903254();
  v84 = *(_QWORD *)(v84 + 8);
  ((void (*)(char *, uint64_t))v84)(v30, v92);
  v33 = objc_msgSend(v95, sel_lastModifiedDate);
  sub_1B49037B8();

  _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v79;
  v35 = v34 + v80;
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v34 + v80, v78, v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v35 + v25, v77, v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v35 + 2 * v25, v76, v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v35 + v75, v74, v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v35 + 4 * v25, v73, v23);
  ((void (*)(uint64_t, _QWORD, uint64_t))v29)(v35 + v72, v71, v23);
  sub_1B4240450(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B49039D4();
  swift_bridgeObjectRelease();
  ((void (*)(char *, void *))v86)(v32, v94);
  ((void (*)(char *, uint64_t))v85)(v22, v93);
  v36 = sub_1B4903254();
  ((void (*)(char *, uint64_t))v84)(v30, v92);
  v37 = v95;
  v38 = objc_msgSend(v95, sel_objectID);
  v39 = objc_msgSend(v38, sel_uuid);

  v40 = v91;
  sub_1B4903824();

  sub_1B4903800();
  v41 = v90;
  v42 = *(void (**)(char *, uint64_t))(v89 + 8);
  v42(v40, v90);
  v43 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend(v37, sel_flaggedContext);
  v94 = (void *)v36;
  if (v44 && (v45 = v44, v46 = objc_msgSend(v44, sel_flagged), v45, (uint64_t)v46 > 0))
    v47 = 2;
  else
    v47 = 1;
  v48 = (void *)v64;
  v49 = objc_msgSend(v37, sel_parentReminder);
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend(v49, sel_objectID);

    if (v51)
    {
      v52 = objc_msgSend(v51, sel_uuid);

      v53 = v91;
      sub_1B4903824();

      sub_1B4903800();
      v42(v53, v41);
      v51 = (id)sub_1B4906A34();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v51 = 0;
  }
  v54 = v68;
  v55 = v67;
  v56 = v66;
  if (v65)
    v57 = 2;
  else
    v57 = 1;
  v58 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v62 = v47;
  v59 = v94;
  v60 = objc_msgSend(v58, sel_initWithTitle_status_taskType_spatialEventTrigger_temporalEventTrigger_createdDateComponents_modifiedDateComponents_identifier_priority_contactEventTrigger_taskReference_parentIdentifier_, v56, v57, 2, v54, v55, v48, v94, v43, v62, 0, 0, v51);

  return v60;
}

uint64_t static INTaskList.isDefaultListTitle(title:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;

  if (qword_1ED4EE550 != -1)
    swift_once();
  if (sub_1B4903434() == a1 && v4 == a2)
    v6 = 1;
  else
    v6 = sub_1B4908390();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id String.speakableString.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v1 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSpokenPhrase_, v1);

  return v2;
}

uint64_t INTaskList.init(smartList:reminders:)(void *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  if (!(a2 >> 62))
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v8 = a1;
    v9 = objc_msgSend(v8, sel_name);
    sub_1B4906A64();

    v10 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v11 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithSpokenPhrase_, v11);
    swift_bridgeObjectRelease();

    _sSo10INTaskListC15RemindersUICoreE16encodeIdentifier3forSSSo08REMSmartB0C_tFZ_0(v8);
    v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1B41DF50C(0, &qword_1ED4ED010);
    v14 = (void *)sub_1B4906DA0();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v13, sel_initWithTitle_tasks_groupName_createdDateComponents_modifiedDateComponents_identifier_, v12, v14, 0, 0, 0, v15);

    return (uint64_t)v16;
  }
  v4 = sub_1B49081B0();
  if (!v4)
    goto LABEL_11;
LABEL_3:
  result = sub_1B4907F28();
  if ((v4 & 0x8000000000000000) == 0)
  {
    sub_1B41DF50C(0, &qword_1ED4ED010);
    v6 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1B5E3C268](v6, a2);
      else
        v7 = *(id *)(a2 + 8 * v6 + 32);
      ++v6;
      INTask.init(reminder:)(v7);
      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    while (v4 != v6);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t INTaskList.isTitleDefaultListTitle.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v1 = objc_msgSend(v0, sel_title);
  v2 = objc_msgSend(v1, sel_spokenPhrase);

  v3 = sub_1B4906A64();
  v5 = v4;

  if (qword_1ED4EE550 != -1)
    swift_once();
  if (v3 == sub_1B4903434() && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void *INTaskList.customSmartListScheme.unsafeMutableAddressor()
{
  return &static INTaskList.customSmartListScheme;
}

uint64_t static INTaskList.customSmartListScheme.getter()
{
  return 7107427;
}

Swift::tuple_isSmartListID_Bool_decodedIdentifier_String_optional __swiftcall INTaskList.decodeIdentifier()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  Swift::tuple_isSmartListID_Bool_decodedIdentifier_String_optional result;

  v1 = objc_msgSend(v0, sel_identifier);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1B4906A64();
    v5 = v4;

    v6 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v7 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithString_, v7);

    if (v8)
    {
      v9 = objc_msgSend(v8, sel_scheme);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1B4906A64();
        v13 = v12;

        if (v11 == 7107427 && v13 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          v15 = 1;
        }
        else
        {
          v15 = sub_1B4908390();
          swift_bridgeObjectRelease();
        }
        v16 = objc_msgSend(v8, sel_host);
        if (v16)
        {
          v17 = v16;
          swift_bridgeObjectRelease();
          v3 = sub_1B4906A64();
          v5 = v18;

        }
      }
      else
      {

        v15 = 0;
      }
    }
    else
    {
      v15 = 0;
    }
    LOBYTE(v1) = v15 & 1;
  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v19 = v3;
  v20 = v5;
  result.value.decodedIdentifier._object = v20;
  result.value.decodedIdentifier._countAndFlagsBits = v19;
  result.value.isSmartListID = (char)v1;
  return result;
}

void sub_1B42E02E4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char **v9;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;

  v1 = v0;
  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v40 - v7;
  v9 = &selRef_replaceCharactersInRange_withAttributedString_;
  v10 = objc_msgSend(v1, sel_alarms);
  if (!v10)
  {
LABEL_20:
    v23 = objc_msgSend(v1, v9[406], v40);
    if (!v23)
      return;
    v24 = v23;
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED038);
    v25 = sub_1B4906DAC();

    if (v25 >> 62)
    {
LABEL_37:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v26 = sub_1B49081B0();
      if (v26)
      {
LABEL_23:
        v42 = v8;
        v43 = v3;
        v8 = (char *)(v25 & 0xC000000000000001);
        v27 = 4;
        v3 = 0x1E0D84000uLL;
        while (1)
        {
          if (v8)
            v28 = (id)MEMORY[0x1B5E3C268](v27 - 4, v25);
          else
            v28 = *(id *)(v25 + 8 * v27);
          v29 = v28;
          v30 = v27 - 3;
          if (__OFADD__(v27 - 4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          v31 = objc_msgSend(v28, sel_trigger);
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
            break;

          ++v27;
          if (v30 == v26)
            goto LABEL_30;
        }
        swift_bridgeObjectRelease_n();

        v32 = objc_msgSend(v29, sel_trigger);
        objc_opt_self();
        v33 = (void *)swift_dynamicCastObjCClass();
        if (v33)
        {
          v34 = objc_msgSend(v33, sel_event);
          if ((unint64_t)v34 >= 3)
            goto LABEL_42;
          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithMobileSpace_event_, 1, v34);

        }
        else
        {

        }
        return;
      }
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v26)
        goto LABEL_23;
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = v10;
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED038);
  v12 = sub_1B4906DAC();

  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v13)
      goto LABEL_4;
    goto LABEL_19;
  }
LABEL_18:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v13 = sub_1B49081B0();
  if (!v13)
  {
LABEL_19:
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
LABEL_4:
  v40 = v6;
  v41 = v2;
  v42 = v8;
  v43 = v3;
  v8 = (char *)(v12 & 0xC000000000000001);
  v2 = 4;
  v3 = 0x1E0D84000uLL;
  while (1)
  {
    v9 = (char **)(v2 - 4);
    if (v8)
      v14 = (id)MEMORY[0x1B5E3C268](v2 - 4, v12);
    else
      v14 = *(id *)(v12 + 8 * v2);
    v15 = v14;
    v6 = (char *)(v2 - 3);
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v16 = objc_msgSend(v14, sel_trigger);
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      break;

    ++v2;
    if (v6 == (char *)v13)
    {
      swift_bridgeObjectRelease_n();
      v2 = v41;
LABEL_16:
      v8 = v42;
      v3 = v43;
      v9 = &selRef_replaceCharactersInRange_withAttributedString_;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();

  v17 = objc_msgSend(v15, sel_trigger);
  objc_opt_self();
  v18 = (void *)swift_dynamicCastObjCClass();
  v2 = v41;
  if (!v18)
  {

    goto LABEL_16;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_structuredLocation);
  v21 = (void *)sub_1B49076D0();

  v22 = objc_msgSend(v19, sel_proximity);
  if ((unint64_t)v22 >= 3)
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    v35 = v41;
    v36 = __swift_project_value_buffer(v41, (uint64_t)qword_1EF09CFA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v40, v36, v35);
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v37);
    sub_1B48204B4((uint64_t)"unknown event", 13, 2);
    __break(1u);
LABEL_42:
    if (qword_1EF097C68 != -1)
      swift_once();
    v38 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF09CFA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v38, v2);
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v39);
    sub_1B48204B4((uint64_t)"unknown event", 13, 2);
    __break(1u);
  }
  else
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithPlacemark_event_, v21, v22);

  }
}

INSpatialEventTrigger_optional __swiftcall TTRReminderProtocol.spatialEventTrigger()()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char **v11;
  uint64_t (*v12)(unint64_t, unint64_t, __n128);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(unint64_t, unint64_t, __n128);
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  objc_class *v24;
  Swift::Bool v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  objc_class *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  uint64_t (*v44)(unint64_t, unint64_t);
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char **v48;
  unint64_t v49;
  INSpatialEventTrigger_optional result;

  v2 = v1;
  v3 = v0;
  v4 = sub_1B49058F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char **)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char **)((char *)&v42 - v10);
  v12 = *(uint64_t (**)(unint64_t, unint64_t, __n128))(v2 + 80);
  v13 = v12(v3, v2, v9);
  if (v13)
  {
    v14 = v13;
    if (v13 >> 62)
    {
LABEL_18:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v15 = sub_1B49081B0();
      if (v15)
      {
LABEL_4:
        v44 = (uint64_t (*)(unint64_t, unint64_t))v12;
        v45 = v3;
        v46 = v2;
        v47 = v4;
        v43 = v11;
        v48 = v7;
        v49 = v5;
        v3 = v14 & 0xC000000000000001;
        v5 = 4;
        v11 = &selRef_replaceCharactersInRange_withAttributedString_;
        v7 = (char **)0x1E0D84000;
        while (1)
        {
          v4 = v5 - 4;
          if (v3)
            v16 = (uint64_t (*)(unint64_t, unint64_t, __n128))MEMORY[0x1B5E3C268](v5 - 4, v14);
          else
            v16 = (uint64_t (*)(unint64_t, unint64_t, __n128))*(id *)(v14 + 8 * v5);
          v12 = v16;
          v2 = v5 - 3;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_18;
          }
          v17 = objc_msgSend(v16, sel_trigger);
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
            break;

          ++v5;
          if (v2 == v15)
          {
            swift_bridgeObjectRelease_n();
LABEL_16:
            v4 = v47;
            v7 = v48;
            v5 = v49;
            v26 = v44(v45, v46);
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease_n();

        v18 = objc_msgSend(v12, sel_trigger);
        objc_opt_self();
        v19 = (void *)swift_dynamicCastObjCClass();
        if (!v19)
        {

          goto LABEL_16;
        }
        v20 = v19;
        v21 = objc_msgSend(v19, sel_structuredLocation);
        v22 = (void *)sub_1B49076D0();

        v23 = objc_msgSend(v20, sel_proximity);
        if ((unint64_t)v23 < 3)
        {
          v24 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithPlacemark_event_, v22, v23);

          goto LABEL_33;
        }
        if (qword_1EF097C68 != -1)
          swift_once();
        v38 = v47;
        v39 = __swift_project_value_buffer(v47, (uint64_t)qword_1EF09CFA0);
        (*(void (**)(char **, uint64_t, uint64_t))(v49 + 16))(v43, v39, v38);
        goto LABEL_47;
      }
    }
    else
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v15)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease_n();
  }
  v26 = ((uint64_t (*)(unint64_t, unint64_t))v12)(v3, v2);
LABEL_21:
  if (v26)
  {
    v27 = v26;
    if (v26 >> 62)
    {
LABEL_39:
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v28 = sub_1B49081B0();
      if (v28)
      {
LABEL_24:
        v48 = v7;
        v49 = v5;
        v29 = 4;
        v7 = &selRef_replaceCharactersInRange_withAttributedString_;
        v5 = 0x1E0D84000uLL;
        while (1)
        {
          if ((v27 & 0xC000000000000001) != 0)
            v30 = (id)MEMORY[0x1B5E3C268](v29 - 4, v27);
          else
            v30 = *(id *)(v27 + 8 * v29);
          v31 = v30;
          v32 = v29 - 3;
          if (__OFADD__(v29 - 4, 1))
          {
            __break(1u);
            goto LABEL_39;
          }
          v33 = objc_msgSend(v30, sel_trigger);
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
            break;

          ++v29;
          if (v32 == v28)
            goto LABEL_31;
        }
        swift_bridgeObjectRelease_n();

        v35 = objc_msgSend(v31, sel_trigger);
        objc_opt_self();
        v36 = (void *)swift_dynamicCastObjCClass();
        if (!v36)
        {

          goto LABEL_32;
        }
        v37 = objc_msgSend(v36, sel_event);
        if ((unint64_t)v37 < 3)
        {
          v24 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDBF8]), sel_initWithMobileSpace_event_, 1, v37);

          goto LABEL_33;
        }
        if (qword_1EF097C68 != -1)
          swift_once();
        v40 = __swift_project_value_buffer(v4, (uint64_t)qword_1EF09CFA0);
        (*(void (**)(char **, uint64_t, uint64_t))(v49 + 16))(v48, v40, v4);
LABEL_47:
        v41 = MEMORY[0x1E0DEE9D8];
        sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
        sub_1B41E292C(v41);
        sub_1B48204B4((uint64_t)"unknown event", 13, 2);
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v28)
        goto LABEL_24;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
  }
LABEL_32:
  v24 = 0;
LABEL_33:
  v34 = v24;
LABEL_48:
  result.value.super.isa = v34;
  result.is_nil = v25;
  return result;
}

void _sSo17REMAlarmProximityV15RemindersUICoreE14inSpatialEventSo09INSpatialG0Vvg_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 3)
  {
    v7 = v4;
    if (qword_1EF097C68 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EF09CFA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v9);
    sub_1B48204B4((uint64_t)"unknown event", 13, 2);
    __break(1u);
  }
}

void sub_1B42E0E40()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id v38;
  void *v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  id v66;
  id v67;
  int v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, _QWORD, uint64_t, uint64_t);
  void (*v87)(char *, uint64_t);
  void (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;

  v1 = sub_1B49058F4();
  v89 = *(_QWORD *)(v1 - 8);
  v90 = v1;
  MEMORY[0x1E0C80A78](v1);
  v91 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v4 = MEMORY[0x1E0C80A78](v3);
  v93 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v96 = (char *)&v86 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v97 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v100 = (char *)&v86 - v11;
  MEMORY[0x1E0C80A78](v10);
  v101 = (uint64_t)&v86 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B49037E8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v95 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v86 - v19;
  v21 = sub_1B490338C();
  v102 = *(_QWORD *)(v21 - 8);
  v103 = v21;
  MEMORY[0x1E0C80A78](v21);
  v104 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1B4903BF0();
  v98 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v108 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1B4903968();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1B4903AD0();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v106 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = objc_msgSend(v0, sel_recurrenceRules);
  if (v30)
  {
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECF50);
    v31 = sub_1B4906DAC();

    if (v31 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v30 = (id)sub_1B49081B0();
      swift_bridgeObjectRelease();
      if (v30)
        goto LABEL_4;
    }
    else
    {
      v30 = *(id *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v30)
      {
LABEL_4:
        if ((v31 & 0xC000000000000001) != 0)
        {
          v32 = (id)MEMORY[0x1B5E3C268](0, v31);
        }
        else
        {
          if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_30;
          }
          v32 = *(id *)(v31 + 32);
        }
        v30 = v32;
      }
    }
    swift_bridgeObjectRelease();
  }
  v33 = objc_msgSend(v0, sel_displayDate);
  if (!v33)
  {

    return;
  }
  v34 = v33;
  v94 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x1E0CB0EF8], v25);
  v35 = v15;
  v36 = v106;
  sub_1B4903974();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
  v37 = (void *)objc_opt_self();
  v38 = objc_msgSend(v34, sel_date);
  sub_1B49037B8();

  v39 = (void *)sub_1B4903788();
  v40 = *(void (**)(char *, uint64_t))(v16 + 8);
  v92 = v35;
  v87 = v40;
  v40(v20, v35);
  v41 = (void *)sub_1B4903BCC();
  v42 = v37;
  v43 = objc_msgSend(v37, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v39, v41, objc_msgSend(v34, sel_isAllDay));

  v44 = v104;
  sub_1B490326C();

  v45 = v105;
  v46 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
  v47 = v99;
  v48 = v107;
  v46(v99, v36, v107);
  v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
  v49(v47, 0, 1, v48);
  sub_1B4903374();
  if (!v30)
  {
    v51 = v102;
    v62 = v103;
    v63 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v44, v103);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v64(v63, 0, 1, v62);
    v65 = v97;
    v64(v97, 1, 1, v62);
    v66 = objc_allocWithZone(MEMORY[0x1E0CBD860]);
    v67 = sub_1B42EB590(v63, v65, 0);
    v52 = 0;
LABEL_25:
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDC60]), sel_initWithDateComponentsRange_, v67);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v62);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v108, v94);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
    return;
  }
  v50 = v101;
  v51 = v102;
  v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
  v88(v101, 1, 1, v103);
  v52 = v30;
  v53 = objc_msgSend(v52, sel_recurrenceEnd);
  if (!v53)
  {
    v57 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v96, 1, 1, v92);
LABEL_19:
    sub_1B41EA560(v57, &qword_1ED4EE300);
    v62 = v103;
    v44 = v104;
    v69 = v88;
    goto LABEL_23;
  }
  v54 = v53;
  v86 = v49;
  v55 = objc_msgSend(v53, sel_endDate);

  v56 = v92;
  v57 = (uint64_t)v96;
  if (v55)
  {
    v58 = v93;
    sub_1B49037B8();

    v59 = (uint64_t)v58;
    v60 = 0;
    v61 = v95;
  }
  else
  {
    v60 = 1;
    v61 = v95;
    v59 = (uint64_t)v93;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v59, v60, 1, v56);
  sub_1B41DF5E4(v59, v57, &qword_1ED4EE300);
  v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v57, 1, v56);
  v51 = v102;
  if (v68 == 1)
    goto LABEL_19;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v61, v57, v56);
  v70 = (void *)sub_1B4903788();
  v71 = (void *)sub_1B4903BCC();
  v72 = objc_msgSend(v42, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v70, v71, objc_msgSend(v34, sel_isAllDay));

  v51 = v102;
  v73 = (uint64_t)v100;
  sub_1B490326C();

  v62 = v103;
  v69 = v88;
  v88(v73, 0, 1, v103);
  sub_1B42EB8A0(v73, v50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v62))
  {
    v74 = v99;
    v75 = v107;
    v46(v99, v106, v107);
    v86(v74, 0, 1, v75);
    v69 = v88;
    sub_1B4903374();
  }
  v87(v95, v56);
  v44 = v104;
LABEL_23:
  v76 = objc_msgSend(v52, sel_interval);
  v77 = (unint64_t)objc_msgSend(v52, sel_frequency);
  if (v77 < 5)
  {
    v78 = objc_msgSend((id)objc_opt_self(), sel_rem_recurrenceRuleWithInterval_frequency_, v76, qword_1B4916540[v77]);
    v79 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v100, v44, v62);
    v69(v79, 0, 1, v62);
    v80 = v101;
    v81 = v97;
    sub_1B41EA51C(v101, v97, (uint64_t *)&unk_1ED4E9EB0);
    v82 = objc_allocWithZone(MEMORY[0x1E0CBD860]);
    v67 = sub_1B42EB590(v79, v81, v78);

    sub_1B41EA560(v80, (uint64_t *)&unk_1ED4E9EB0);
    goto LABEL_25;
  }
LABEL_30:
  if (qword_1EF097C68 != -1)
    swift_once();
  v83 = v90;
  v84 = __swift_project_value_buffer(v90, (uint64_t)qword_1EF09CFA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v91, v84, v83);
  v85 = MEMORY[0x1E0DEE9D8];
  sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
  sub_1B41E292C(v85);
  sub_1B48204B4((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
  __break(1u);
}

INTemporalEventTrigger_optional __swiftcall TTRReminderProtocol.temporalEventTrigger()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::Bool v64;
  objc_class *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  id v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  objc_class *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  id v95;
  void (*v96)(char *, uint64_t);
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  INTemporalEventTrigger_optional result;

  v2 = v1;
  v3 = v0;
  v4 = sub_1B49058F4();
  v98 = *(_QWORD *)(v4 - 8);
  v99 = v4;
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v6);
  v102 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v103 = (uint64_t)&v93 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  MEMORY[0x1E0C80A78](v10);
  v105 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v104 = (char *)&v93 - v13;
  MEMORY[0x1E0C80A78](v14);
  v111 = (uint64_t)&v93 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v16);
  v109 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_1B49037E8();
  v18 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v101 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v93 - v21;
  v106 = sub_1B490338C();
  v110 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v112 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B4903BF0();
  v107 = *(_QWORD *)(v24 - 8);
  v108 = v24;
  MEMORY[0x1E0C80A78](v24);
  v117 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1B4903968();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1B4903AD0();
  v114 = *(_QWORD *)(v116 - 8);
  v30 = MEMORY[0x1E0C80A78](v116);
  v115 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + 136))(v3, v2, v30);
  if (!v32)
    goto LABEL_10;
  v33 = v32;
  v34 = v32 & 0xFFFFFFFFFFFFFF8;
  if (v32 >> 62)
  {
    if (sub_1B49081B0())
      goto LABEL_4;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    v36 = 0;
    goto LABEL_11;
  }
LABEL_4:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v35 = (id)MEMORY[0x1B5E3C268](0, v33);
  }
  else
  {
    if (!*(_QWORD *)(v34 + 16))
    {
      __break(1u);
      goto LABEL_32;
    }
    v35 = *(id *)(v33 + 32);
  }
  v36 = v35;
  swift_bridgeObjectRelease();
LABEL_11:
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v3, v2);
  if (!v37)
  {

    v65 = 0;
LABEL_29:
    v89 = v65;
    goto LABEL_35;
  }
  v38 = (void *)v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E0CB0EF8], v26);
  v39 = v115;
  sub_1B4903974();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
  v40 = (void *)objc_opt_self();
  v41 = objc_msgSend(v38, sel_date);
  sub_1B49037B8();

  v42 = (void *)sub_1B4903788();
  v96 = *(void (**)(char *, uint64_t))(v18 + 8);
  v96(v22, v113);
  v43 = (void *)sub_1B4903BCC();
  v44 = objc_msgSend(v38, sel_isAllDay);
  v95 = v40;
  v45 = objc_msgSend(v40, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v42, v43, v44);

  v46 = v112;
  sub_1B490326C();

  v47 = v114;
  v48 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  v49 = v109;
  v50 = v116;
  v48(v109, v39, v116);
  v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56);
  v51(v49, 0, 1, v50);
  sub_1B4903374();
  if (!v36)
  {
    v52 = v110;
    v66 = (uint64_t)v104;
    v54 = v106;
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v104, v46, v106);
    v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v67(v66, 0, 1, v54);
    v68 = v105;
    v67(v105, 1, 1, v54);
    v69 = objc_allocWithZone(MEMORY[0x1E0CBD860]);
    v70 = sub_1B42EB590(v66, v68, 0);
    v55 = 0;
LABEL_28:
    v65 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDC60]), sel_initWithDateComponentsRange_, v70);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v54);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v117, v108);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v115, v116);
    goto LABEL_29;
  }
  v52 = v110;
  v53 = v111;
  v54 = v106;
  v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
  v97(v111, 1, 1, v106);
  v55 = v36;
  v56 = objc_msgSend(v55, sel_recurrenceEnd);
  if (!v56)
  {
    v71 = v103;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v103, 1, 1, v113);
    v62 = (uint64_t)v104;
LABEL_21:
    sub_1B41EA560(v71, &qword_1ED4EE300);
    goto LABEL_26;
  }
  v57 = v56;
  v94 = v51;
  v58 = objc_msgSend(v56, sel_endDate);

  if (v58)
  {
    v59 = v102;
    sub_1B49037B8();

    v60 = v59;
    v61 = 0;
    v62 = (uint64_t)v104;
    v63 = v113;
  }
  else
  {
    v61 = 1;
    v62 = (uint64_t)v104;
    v63 = v113;
    v60 = v102;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v60, v61, 1, v63);
  v72 = (uint64_t)v60;
  v71 = v103;
  sub_1B41DF5E4(v72, v103, &qword_1ED4EE300);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v71, 1, v63) == 1)
    goto LABEL_21;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v74 = v101;
  v73(v101, v71, v63);
  v75 = (void *)sub_1B4903788();
  v76 = (void *)sub_1B4903BCC();
  v77 = objc_msgSend(v38, sel_isAllDay);
  v78 = objc_msgSend(v95, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v75, v76, v77);

  sub_1B490326C();
  v52 = v110;
  v97(v62, 0, 1, v54);
  sub_1B42EB8A0(v62, v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v54))
  {
    v79 = v74;
  }
  else
  {
    v80 = v109;
    v81 = v74;
    v82 = v116;
    v48(v109, v115, v116);
    v94(v80, 0, 1, v82);
    sub_1B4903374();
    v79 = v81;
  }
  v96(v79, v113);
LABEL_26:
  v83 = objc_msgSend(v55, sel_interval);
  v84 = (unint64_t)objc_msgSend(v55, sel_frequency);
  v46 = v112;
  if (v84 < 5)
  {
    v85 = objc_msgSend((id)objc_opt_self(), sel_rem_recurrenceRuleWithInterval_frequency_, v83, qword_1B4916540[v84]);
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v62, v46, v54);
    v97(v62, 0, 1, v54);
    v86 = v111;
    v87 = v105;
    sub_1B41EA51C(v111, v105, (uint64_t *)&unk_1ED4E9EB0);
    v88 = objc_allocWithZone(MEMORY[0x1E0CBD860]);
    v70 = sub_1B42EB590(v62, v87, v85);

    sub_1B41EA560(v86, (uint64_t *)&unk_1ED4E9EB0);
    goto LABEL_28;
  }
LABEL_32:
  if (qword_1EF097C68 != -1)
    swift_once();
  v90 = v99;
  v91 = __swift_project_value_buffer(v99, (uint64_t)qword_1EF09CFA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v100, v91, v90);
  v92 = MEMORY[0x1E0DEE9D8];
  sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
  sub_1B41E292C(v92);
  sub_1B48204B4((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
  __break(1u);
LABEL_35:
  result.value.super.isa = v89;
  result.is_nil = v64;
  return result;
}

void REMRecurrenceFrequency.inRecurrenceFrequency.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 5)
  {
    v7 = v4;
    if (qword_1EF097C68 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EF09CFA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v9);
    sub_1B48204B4((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
    __break(1u);
  }
}

id INTask.reminderID.getter()
{
  return sub_1B42E2294();
}

id sub_1B42E2294()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B4903848();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v1, sel_identifier);
  if (v9)
  {
    v10 = v9;
    sub_1B4906A64();

    sub_1B49037F4();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v12 = (void *)objc_opt_self();
      v13 = (void *)sub_1B490380C();
      v11 = objc_msgSend(v12, sel_objectIDWithUUID_, v13);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v11;
    }
    sub_1B41EA560((uint64_t)v4, &qword_1ED4E9EF8);
  }
  return 0;
}

id INTask.remReminder(store:)(void *a1)
{
  return sub_1B42E2480(a1, (uint64_t (*)(void))INTask.reminderID.getter, (SEL *)&selRef_fetchReminderWithObjectID_error_, "Attempting to acquire REMReminder from INTask whose reminderID is nil", "Error obtaining REMReminder from INTask {error: %s}");
}

id sub_1B42E2480(void *a1, uint64_t (*a2)(void), SEL *a3, const char *a4, const char *a5)
{
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = a2();
  if (!v9)
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    v13 = sub_1B49058F4();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF09CFA0);
    v14 = sub_1B49058E8();
    v15 = sub_1B4907388();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B41C2000, v14, v15, a4, v16, 2u);
      MEMORY[0x1B5E3D7E0](v16, -1, -1);
    }

    return 0;
  }
  v10 = (void *)v9;
  v29[0] = 0;
  v11 = objc_msgSend(a1, *a3, v9, v29);
  v12 = v29[0];
  if (!v11)
  {
    v17 = v12;
    v18 = (void *)sub_1B4903560();

    swift_willThrow();
    if (qword_1EF097C68 != -1)
      swift_once();
    v19 = sub_1B49058F4();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EF09CFA0);
    v20 = v18;
    v21 = v18;
    v22 = sub_1B49058E8();
    v23 = sub_1B4907388();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (void *)swift_slowAlloc();
      v29[0] = v25;
      *(_DWORD *)v24 = 136315138;
      swift_getErrorValue();
      v26 = sub_1B490842C();
      sub_1B41EF7C8(v26, v27, (uint64_t *)v29);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, v22, v23, a5, v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v25, -1, -1);
      MEMORY[0x1B5E3D7E0](v24, -1, -1);

    }
    else
    {

    }
    return 0;
  }

  return v11;
}

id INTask.init(reminderChangeItem:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(unint64_t, _QWORD, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(unint64_t, _QWORD, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  id v75;
  id v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  void *v79;
  id v80;
  void *v81;
  id v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  char *v87;
  void *v88;
  uint64_t v89;
  id v90;
  void *v91;
  char *v92;
  void *v93;
  id v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  unsigned int v103;
  void *v104;
  uint64_t v105;
  char *v106;
  id v107;
  uint64_t v108;
  void *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;

  v105 = sub_1B4903848();
  v108 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v112 = (char *)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B4903AD0();
  v98 = *(_QWORD *)(v3 - 8);
  v99 = v3;
  MEMORY[0x1E0C80A78](v3);
  v110 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B49037E8();
  v113 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v9 = MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v97 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v97 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v97 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v111 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v97 - v22;
  sub_1B42E02E4();
  v25 = v24;
  sub_1B42E0E40();
  v27 = v26;
  v28 = objc_msgSend(a1, sel_titleAsString);
  v104 = v25;
  v109 = v27;
  if (v28)
  {
    v29 = v28;
    sub_1B4906A64();

  }
  v30 = objc_allocWithZone(MEMORY[0x1E0CBDC00]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v31 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithSpokenPhrase_, v31);
  swift_bridgeObjectRelease();

  v103 = objc_msgSend(a1, sel_isCompleted);
  v33 = objc_msgSend(a1, sel_creationDate);
  if (v33)
  {
    v34 = v33;
    sub_1B49037B8();

    v35 = v113;
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    v37 = v16;
    v38 = 0;
  }
  else
  {
    v35 = v113;
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    v37 = v16;
    v38 = 1;
  }
  v100 = v36;
  v36((uint64_t)v37, v38, 1, v5);
  sub_1B41DF5E4((uint64_t)v16, (uint64_t)v18, &qword_1ED4EE300);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v40 = v39(v18, 1, v5);
  v107 = v32;
  v101 = v39;
  if (v40)
  {
    sub_1B41EA560((uint64_t)v18, &qword_1ED4EE300);
    v41 = sub_1B490338C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v23, 1, 1, v41);
    v42 = 0;
    v43 = v111;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v7, v18, v5);
    sub_1B41EA560((uint64_t)v18, &qword_1ED4EE300);
    _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
    v44 = sub_1B4903AB8();
    v106 = v7;
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(_QWORD *)(v45 + 72);
    v47 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1B49163D0;
    v49 = v48 + v47;
    v50 = *(void (**)(unint64_t, _QWORD, uint64_t))(v45 + 104);
    v50(v49, *MEMORY[0x1E0CB1158], v44);
    v50(v49 + v46, *MEMORY[0x1E0CB1160], v44);
    v50(v49 + 2 * v46, *MEMORY[0x1E0CB1130], v44);
    v50(v49 + 3 * v46, *MEMORY[0x1E0CB1140], v44);
    v50(v49 + 4 * v46, *MEMORY[0x1E0CB1178], v44);
    v35 = v113;
    v50(v49 + 5 * v46, *MEMORY[0x1E0CB1188], v44);
    v7 = v106;
    sub_1B4240450(v48);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v51 = v110;
    sub_1B49039D4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v51, v99);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
    v52 = sub_1B490338C();
    v53 = *(_QWORD *)(v52 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v23, 0, 1, v52);
    v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v23, 1, v52);
    v42 = 0;
    v43 = v111;
    if (v54 != 1)
    {
      v42 = sub_1B4903254();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v52);
    }
  }
  v106 = (char *)v42;
  v55 = objc_msgSend(a1, sel_lastModifiedDate);
  if (v55)
  {
    v56 = v55;
    v57 = (uint64_t)v102;
    sub_1B49037B8();

    v58 = 0;
  }
  else
  {
    v58 = 1;
    v57 = (uint64_t)v102;
  }
  v59 = v101;
  v100(v57, v58, 1, v5);
  sub_1B41DF5E4(v57, (uint64_t)v13, &qword_1ED4EE300);
  if (v59(v13, 1, v5))
  {
    sub_1B41EA560((uint64_t)v13, &qword_1ED4EE300);
    v60 = sub_1B490338C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v43, 1, 1, v60);
    v61 = 0;
    v62 = v105;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v7, v13, v5);
    sub_1B41EA560((uint64_t)v13, &qword_1ED4EE300);
    v63 = v110;
    _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
    v64 = sub_1B4903AB8();
    v65 = *(_QWORD *)(v64 - 8);
    v66 = *(_QWORD *)(v65 + 72);
    v67 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1B49163D0;
    v69 = v68 + v67;
    v70 = *(void (**)(unint64_t, _QWORD, uint64_t))(v65 + 104);
    v70(v69, *MEMORY[0x1E0CB1158], v64);
    v70(v69 + v66, *MEMORY[0x1E0CB1160], v64);
    v70(v69 + 2 * v66, *MEMORY[0x1E0CB1130], v64);
    v70(v69 + 3 * v66, *MEMORY[0x1E0CB1140], v64);
    v70(v69 + 4 * v66, *MEMORY[0x1E0CB1178], v64);
    v70(v69 + 5 * v66, *MEMORY[0x1E0CB1188], v64);
    v71 = v111;
    sub_1B4240450(v68);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1B49039D4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v99);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v7, v5);
    v72 = sub_1B490338C();
    v73 = *(_QWORD *)(v72 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v71, 0, 1, v72);
    v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72);
    v61 = 0;
    v62 = v105;
    if (v74 != 1)
    {
      v61 = (void *)sub_1B4903254();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
    }
  }
  v75 = objc_msgSend(a1, sel_objectID);
  v76 = objc_msgSend(v75, sel_uuid);

  v77 = v112;
  sub_1B4903824();

  sub_1B4903800();
  v78 = *(void (**)(char *, uint64_t))(v108 + 8);
  v78(v77, v62);
  v79 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v80 = objc_msgSend(a1, sel_flaggedContext);
  if (v80 && (v81 = v80, v82 = objc_msgSend(v80, sel_flagged), v81, (uint64_t)v82 > 0))
    v83 = 2;
  else
    v83 = 1;
  v84 = objc_msgSend(a1, sel_parentReminderID);
  v85 = v84;
  if (v84)
  {
    v86 = objc_msgSend(v84, sel_uuid);

    v87 = v112;
    sub_1B4903824();

    sub_1B4903800();
    v78(v87, v62);
    v85 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  v88 = v104;
  if (v103)
    v89 = 2;
  else
    v89 = 1;
  v90 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v96 = v83;
  v92 = v106;
  v91 = v107;
  v93 = v109;
  v94 = objc_msgSend(v90, sel_initWithTitle_status_taskType_spatialEventTrigger_temporalEventTrigger_createdDateComponents_modifiedDateComponents_identifier_priority_contactEventTrigger_taskReference_parentIdentifier_, v107, v89, 2, v88, v109, v106, v61, v79, v96, 0, 0, v85);

  return v94;
}

_QWORD *static INTask.disambiguateWithIncompleteReminders<A>(store:)(void *a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _QWORD *result;
  unint64_t v8;
  id i;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  void *v16;
  id v17;
  void *ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  v2 = _sSo6INTaskC15RemindersUICoreE18allIncompleteTasks5storeSayABGSo8REMStoreC_tFZ_0(a1);
  if (v2 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v20 = sub_1B49081B0();
    swift_bridgeObjectRelease();
    if (v20)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v3 = (uint8_t *)sub_1B49081B0();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    if (qword_1EF097C68 != -1)
      swift_once();
    v21 = sub_1B49058F4();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EF09CFA0);
    v22 = sub_1B49058E8();
    v23 = sub_1B49073A0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1B41C2000, v22, v23, "disambiguateWithIncompleteReminders done with 0 results {result: .needsValue}", v24, 2u);
      MEMORY[0x1B5E3D7E0](v24, -1, -1);
    }

    return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_needsValue);
  }
  v3 = *(uint8_t **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_25;
LABEL_3:
  if (v3 != (uint8_t *)1)
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    v11 = sub_1B49058F4();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EF09CFA0);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v12 = sub_1B49058E8();
    v13 = sub_1B49073A0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v14 = 134217984;
      sub_1B4907B68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B41C2000, v12, v13, "disambiguateWithIncompleteReminders done with %ld results {result: .disambiguation}", v14, 0xCu);
      MEMORY[0x1B5E3D7E0](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_1B41DF50C(0, &qword_1ED4ED010);
    v16 = (void *)sub_1B4906DA0();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(ObjCClassFromMetadata, sel_disambiguationWithTasksToDisambiguate_, v16);
LABEL_22:
    v19 = v17;

    return v19;
  }
  if (qword_1EF097C68 != -1)
    swift_once();
  v4 = sub_1B49058F4();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EF09CFA0);
  swift_bridgeObjectRetain_n();
  v5 = sub_1B49058E8();
  v6 = sub_1B49073A0();
  if (!os_log_type_enabled(v5, v6))
  {

    swift_bridgeObjectRelease_n();
    v8 = v2 & 0xC000000000000001;
    goto LABEL_16;
  }
  v3 = (uint8_t *)swift_slowAlloc();
  result = (_QWORD *)swift_slowAlloc();
  v1 = result;
  *(_DWORD *)v3 = 138412290;
  v8 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_32;
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = *(id *)(v2 + 32); ; i = (id)MEMORY[0x1B5E3C268](0, v2))
    {
      v10 = i;
      sub_1B4907B68();
      *v1 = v10;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B41C2000, v5, v6, "disambiguateWithIncompleteReminders done with 1 result {result: .success, task: %@}", v3, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v1, -1, -1);
      MEMORY[0x1B5E3D7E0](v3, -1, -1);

LABEL_16:
      if (v8)
        break;
      if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v15 = *(id *)(v2 + 32);
        goto LABEL_19;
      }
      __break(1u);
LABEL_32:
      ;
    }
    v15 = (id)MEMORY[0x1B5E3C268](0, v2);
LABEL_19:
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_successWithResolvedTask_, v16);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id static INTask.augmentWithSubtasks(reminders:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  BOOL v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  void *v65;
  unint64_t v66;
  char v67;
  id v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  id v78[3];

  v1 = a1;
  v78[1] = *(id *)MEMORY[0x1E0C80C00];
  v77 = MEMORY[0x1E0DEE9E8];
  if (a1 >> 62)
    goto LABEL_86;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  while (v2)
  {
    v3 = 0;
    v75 = v1 & 0xC000000000000001;
    v72 = v1 & 0xFFFFFFFFFFFFFF8;
    v73 = v1;
    v71 = v1 + 32;
    v76 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v74 = v2;
    while (1)
    {
      if (v75)
      {
        v4 = (id)MEMORY[0x1B5E3C268](v3, v73);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v72 + 16))
          goto LABEL_84;
        v4 = *(id *)(v71 + 8 * v3);
      }
      v1 = (uint64_t)v4;
      v5 = __OFADD__(v3++, 1);
      if (v5)
        break;
      v6 = objc_msgSend(v4, sel_subtaskContext);
      if (v6)
      {
        v7 = v6;
        v78[0] = 0;
        v8 = objc_msgSend(v6, sel_fetchRemindersWithError_, v78);

        v9 = v78[0];
        if (v8)
        {
          sub_1B41DF50C(0, (unint64_t *)&unk_1ED4ECEE0);
          v10 = sub_1B4906DAC();
          v11 = v9;

          goto LABEL_14;
        }
        v30 = v78[0];
        v31 = (void *)sub_1B4903560();

        swift_willThrow();
        if (qword_1EF097C68 != -1)
          swift_once();
        v32 = sub_1B49058F4();
        v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1EF09CFA0);
        v34 = v31;
        v35 = (id)v1;
        v36 = v31;
        v1 = v33;
        v37 = sub_1B49058E8();
        v38 = sub_1B4907388();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc();
          v40 = (_QWORD *)swift_slowAlloc();
          v41 = (void *)swift_slowAlloc();
          v78[0] = v41;
          *(_DWORD *)v39 = 138412546;
          v42 = objc_msgSend(v35, sel_objectID);
          *(_QWORD *)(v39 + 4) = v42;
          *v40 = v42;

          *(_WORD *)(v39 + 12) = 2080;
          swift_getErrorValue();
          v43 = sub_1B490842C();
          v1 = v44;
          *(_QWORD *)(v39 + 14) = sub_1B41EF7C8(v43, v44, (uint64_t *)v78);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1B41C2000, v37, v38, "Error fetching subtasks from reminder {reminderID: %@, error: %s}", (uint8_t *)v39, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
          swift_arrayDestroy();
          MEMORY[0x1B5E3D7E0](v40, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1B5E3D7E0](v41, -1, -1);
          MEMORY[0x1B5E3D7E0](v39, -1, -1);

        }
        else
        {

        }
        if (v3 == v74)
        {
LABEL_52:
          swift_bridgeObjectRelease();
          v78[0] = (id)MEMORY[0x1E0DEE9D8];
          v50 = v77;
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
          v70 = v50 + 56;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v51 = 0;
          while (1)
          {
            if (v75)
            {
              v53 = (id)MEMORY[0x1B5E3C268](v51, v73);
            }
            else
            {
              if (v51 >= *(_QWORD *)(v72 + 16))
                goto LABEL_85;
              v53 = *(id *)(v71 + 8 * v51);
            }
            v54 = v53;
            v5 = __OFADD__(v51++, 1);
            if (v5)
              goto LABEL_81;
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            v55 = objc_msgSend(v54, sel_objectID);
            v56 = v55;
            if ((v50 & 0xC000000000000001) == 0)
              break;
            v57 = v55;
            v1 = sub_1B4907D84();
            swift_bridgeObjectRelease();

            if ((v1 & 1) == 0)
              goto LABEL_74;
LABEL_55:

LABEL_56:
            if (v51 == v74)
            {
              swift_bridgeObjectRelease();
              v68 = v78[0];
              goto LABEL_88;
            }
          }
          if (*(_QWORD *)(v50 + 16))
          {
            v58 = sub_1B4907838();
            v59 = -1 << *(_BYTE *)(v50 + 32);
            v60 = v58 & ~v59;
            if (((*(_QWORD *)(v70 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) != 0)
            {
              v61 = *(id *)(*(_QWORD *)(v50 + 48) + 8 * v60);
              v1 = sub_1B4907844();

              if ((v1 & 1) != 0)
              {

                swift_bridgeObjectRelease();
                goto LABEL_56;
              }
              v62 = ~v59;
              while (1)
              {
                v60 = (v60 + 1) & v62;
                if (((*(_QWORD *)(v70 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
                  break;
                v63 = *(id *)(*(_QWORD *)(v50 + 48) + 8 * v60);
                v1 = sub_1B4907844();

                if ((v1 & 1) != 0)
                {

                  goto LABEL_54;
                }
              }
            }
          }

          swift_bridgeObjectRelease();
LABEL_74:
          v54 = v54;
          MEMORY[0x1B5E3B128]();
          if (*(_QWORD *)(((unint64_t)v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v78[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1B4906DF4();
          sub_1B4906E54();
          sub_1B4906DC4();
          v64 = objc_msgSend(v54, sel_objectID);
          v65 = v64;
          v1 = (uint64_t)v76;
          if (!v76[2] || (v66 = sub_1B41ED0D0((uint64_t)v64), (v67 & 1) == 0))
          {

            goto LABEL_56;
          }
          v52 = *(_QWORD *)(v76[7] + 8 * v66);
          swift_bridgeObjectRetain_n();

          v1 = (uint64_t)v78;
          sub_1B4232F00(v52);
LABEL_54:
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
      }
      else
      {
        v10 = MEMORY[0x1E0DEE9D8];
LABEL_14:
        if (qword_1EF097C68 != -1)
          swift_once();
        v12 = sub_1B49058F4();
        __swift_project_value_buffer(v12, (uint64_t)qword_1EF09CFA0);
        v13 = (id)v1;
        swift_bridgeObjectRetain_n();
        v14 = v13;
        v15 = sub_1B49058E8();
        v16 = sub_1B4907370();
        v17 = v10 >> 62;
        if (os_log_type_enabled(v15, v16))
        {
          v18 = swift_slowAlloc();
          v19 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v18 = 138412546;
          v20 = objc_msgSend(v14, sel_objectID);
          *(_QWORD *)(v18 + 4) = v20;
          *v19 = v20;

          *(_WORD *)(v18 + 12) = 2048;
          if (v17)
          {
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            v21 = sub_1B49081B0();
            swift_bridgeObjectRelease();
          }
          else
          {
            v21 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)(v18 + 14) = v21;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B41C2000, v15, v16, "Found subtasks for reminder {reminderID: %@, subtasks: %ld}", (uint8_t *)v18, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
          swift_arrayDestroy();
          MEMORY[0x1B5E3D7E0](v19, -1, -1);
          MEMORY[0x1B5E3D7E0](v18, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v22 = objc_msgSend(v14, sel_objectID);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v78[0] = v76;
        v1 = (uint64_t)v78;
        sub_1B41F1584(v10, v22, isUniquelyReferenced_nonNull_native);
        v76 = v78[0];

        swift_bridgeObjectRelease();
        if (v17)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v24 = sub_1B49081B0();
          swift_bridgeObjectRelease();
          if (!v24)
          {
LABEL_38:
            swift_bridgeObjectRelease();
            v29 = MEMORY[0x1E0DEE9D8];
            goto LABEL_39;
          }
        }
        else
        {
          v24 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v24)
            goto LABEL_38;
        }
        v78[0] = (id)MEMORY[0x1E0DEE9D8];
        sub_1B4907F28();
        if (v24 < 0)
          goto LABEL_82;
        v25 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0)
            v26 = (id)MEMORY[0x1B5E3C268](v25, v10);
          else
            v26 = *(id *)(v10 + 8 * v25 + 32);
          v27 = v26;
          ++v25;
          v28 = objc_msgSend(v26, sel_objectID);

          v1 = (uint64_t)v78;
          sub_1B4907F04();
          sub_1B4907F34();
          sub_1B4907F40();
          sub_1B4907F10();
        }
        while (v24 != v25);
        v29 = (unint64_t)v78[0];
        swift_bridgeObjectRelease();
LABEL_39:
        if (v29 >> 62)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v45 = sub_1B49081B0();
          swift_bridgeObjectRelease();
          if (!v45)
            goto LABEL_4;
        }
        else
        {
          v45 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v45)
            goto LABEL_4;
        }
        if (v45 < 1)
          goto LABEL_83;
        if ((v29 & 0xC000000000000001) != 0)
        {
          v46 = 0;
          do
          {
            v47 = (void *)MEMORY[0x1B5E3C268](v46++, v29);
            v1 = (uint64_t)&v77;
            sub_1B42A87A4(v78, v47);

          }
          while (v45 != v46);
        }
        else
        {
          v48 = 0;
          do
          {
            v49 = *(void **)(v29 + 8 * v48++ + 32);
            v1 = (uint64_t)&v77;
            sub_1B42A87A4(v78, v49);

          }
          while (v45 != v48);
        }
LABEL_4:

        swift_bridgeObjectRelease();
        if (v3 == v74)
          goto LABEL_52;
      }
    }
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v2 = sub_1B49081B0();
  }
  swift_bridgeObjectRelease();
  v68 = (id)MEMORY[0x1E0DEE9D8];
LABEL_88:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t INPerson.flattenedPhones.getter()
{
  return sub_1B42E4130((id)2, 0);
}

uint64_t sub_1B42E4130(id a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t inited;
  uint64_t v6;
  id v7;
  unint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t j;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v48;
  uint64_t v49;
  unint64_t v50;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CFF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = objc_msgSend(v3, sel_personHandle);
  sub_1B4906DC4();
  v6 = inited;
  v48 = v3;
  v7 = objc_msgSend(v3, sel_aliases);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v9 = v7;
    sub_1B41DF50C(0, &qword_1EF0A9EB0);
    v10 = sub_1B4906DAC();

  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v11 = sub_1B461F328(v10);
  swift_bridgeObjectRelease();
  sub_1B4232F0C(v11);
  v12 = v6;
  v13 = *(_QWORD *)(v6 + 16);
  if (v13)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    for (i = 0; i != v13; ++i)
    {
      v15 = *(void **)(v12 + 8 * i + 32);
      if (v15)
      {
        v16 = v15;
        MEMORY[0x1B5E3B128]();
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B4906DF4();
        sub_1B4906E54();
        sub_1B4906DC4();
      }
    }
    swift_bridgeObjectRelease();
    v17 = v8;
  }
  else
  {
    v17 = v8;
  }
  swift_bridgeObjectRelease();
  v50 = v8;
  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_15;
LABEL_27:
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_56;
    goto LABEL_28;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v18 = sub_1B49081B0();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_27;
LABEL_15:
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }
  v19 = 0;
  v8 = (unint64_t)&selRef_replaceCharactersInRange_withAttributedString_;
  do
  {
    if ((v17 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x1B5E3C268](v19, v17);
    else
      v20 = *(id *)(v17 + 8 * v19 + 32);
    v21 = v20;
    if (objc_msgSend(v20, sel_type) == a1)
    {
      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    else
    {

    }
    ++v19;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
  v22 = v50;
  if ((v50 & 0x8000000000000000) != 0)
    goto LABEL_56;
LABEL_28:
  if ((v22 & 0x4000000000000000) == 0)
  {
    v23 = *(_QWORD *)(v22 + 16);
    swift_retain();
    goto LABEL_30;
  }
LABEL_56:
  swift_retain();
  v23 = sub_1B49081B0();
LABEL_30:
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v23)
    goto LABEL_44;
  if (v23 < 1)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  for (j = 0; j != v23; ++j)
  {
    if ((v22 & 0xC000000000000001) != 0)
      v26 = (id)MEMORY[0x1B5E3C268](j, v22);
    else
      v26 = *(id *)(v22 + 8 * j + 32);
    v27 = v26;
    v28 = objc_msgSend(v26, sel_value);
    if (v28)
    {
      v29 = v28;
      v30 = a1;
      v31 = sub_1B4906A64();
      v33 = v32;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1B4290474(0, v24[2] + 1, 1, v24);
      v35 = v24[2];
      v34 = v24[3];
      if (v35 >= v34 >> 1)
        v24 = sub_1B4290474((_QWORD *)(v34 > 1), v35 + 1, 1, v24);
      v24[2] = v35 + 1;
      v36 = &v24[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
      a1 = v30;
    }
    else
    {

    }
  }
LABEL_44:
  swift_release_n();
  v50 = (unint64_t)v24;
  v37 = objc_msgSend(v48, sel_alternatives);
  if (!v37)
    return v50;
  v38 = v37;
  sub_1B41DF50C(0, &qword_1EF09CFB8);
  v8 = sub_1B4906DAC();

  v39 = a2;
  if (a2 >= 1)
  {
    swift_bridgeObjectRelease();
    return v50;
  }
  v49 = MEMORY[0x1E0DEE9D8];
  if (!(v8 >> 62))
  {
    v40 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v40)
      goto LABEL_49;
LABEL_60:
    swift_bridgeObjectRelease_n();
    v46 = MEMORY[0x1E0DEE9D8];
LABEL_61:
    sub_1B4232AEC(v46);
    return v50;
  }
LABEL_59:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v39 = a2;
  result = sub_1B49081B0();
  v40 = result;
  if (!result)
    goto LABEL_60;
LABEL_49:
  if (v40 >= 1)
  {
    v42 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v43 = (id)MEMORY[0x1B5E3C268](v42, v8);
      else
        v43 = *(id *)(v8 + 8 * v42 + 32);
      v44 = v43;
      ++v42;
      v45 = sub_1B42E4130(a1, v39 + 1);

      sub_1B4232AEC(v45);
    }
    while (v40 != v42);
    swift_bridgeObjectRelease_n();
    v46 = v49;
    goto LABEL_61;
  }
  __break(1u);
  return result;
}

uint64_t INPerson.flattenedEmails.getter()
{
  return sub_1B42E4130((id)1, 0);
}

uint64_t INPerson.contactRepresentation(contactStore:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;

  v3 = objc_msgSend(v1, sel_contactIdentifier);
  if (v3)
  {
    v4 = v3;
    sub_1B4906A64();

    sub_1B41DF50C(0, &qword_1EF0AA8B0);
    v5 = a1;
    return sub_1B490776C();
  }
  else
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    v7 = sub_1B49058F4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EF09CFA0);
    v8 = v1;
    v9 = sub_1B49058E8();
    v10 = sub_1B4907388();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v8;
      sub_1B4907B68();
      *v12 = v8;

      _os_log_impl(&dword_1B41C2000, v9, v10, "Unable to get contactRepresentation from INPerson because contactIdentifier is nil {self: %@}", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v12, -1, -1);
      MEMORY[0x1B5E3D7E0](v11, -1, -1);

    }
    else
    {

    }
    return 0;
  }
}

id static INPerson.skeletonPerson(email:)()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;

  v0 = objc_allocWithZone(MEMORY[0x1E0CBDA60]);
  v1 = (void *)sub_1B4906A34();
  v2 = objc_msgSend(v0, sel_initWithValue_type_, v1, 0);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDA58]), sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, v2, 0, 0, 0, 0, 0);
  v4 = objc_allocWithZone(MEMORY[0x1E0CBDA60]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithValue_type_, v5, 1);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CBDA58]), sel_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_, v6, 0, 0, 0, 0, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B49131A0;
  *(_QWORD *)(v8 + 32) = v7;
  sub_1B4906DC4();
  sub_1B41DF50C(0, &qword_1EF09CFB8);
  v9 = v7;
  v10 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAlternatives_, v10);

  return v3;
}

id REMAlarmLocationTrigger.init(spatialEventTrigger:)(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint8_t *buf;
  void *v50;
  id v51;
  id v52;

  if (objc_msgSend(a1, sel_mobileSpace))
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    v2 = sub_1B49058F4();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EF09CFA0);
    v3 = a1;
    v4 = sub_1B49058E8();
    v5 = sub_1B490737C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      v52 = objc_msgSend(v3, sel_mobileSpace);
      sub_1B4907B68();

      _os_log_impl(&dword_1B41C2000, v4, v5, "spatialEventTrigger.mobileSpace is set, which means this is not really a locationTrigger. {mobileSpace: %ld}", v6, 0xCu);
      MEMORY[0x1B5E3D7E0](v6, -1, -1);

LABEL_22:
      return 0;
    }

    goto LABEL_21;
  }
  v7 = objc_msgSend(a1, sel_placemark);
  v8 = objc_msgSend(v7, sel_region);
  if (!v8)
  {
LABEL_16:
    if (qword_1EF097C68 != -1)
      swift_once();
    v20 = sub_1B49058F4();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF09CFA0);
    v3 = a1;
    v21 = sub_1B49058E8();
    v22 = sub_1B4907388();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (id)swift_slowAlloc();
      v52 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = objc_msgSend(v3, sel_placemark);
      v26 = objc_msgSend(v25, sel_region);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CFC0);
      v27 = sub_1B4907AF0();
      v29 = v28;

      sub_1B41EF7C8(v27, v29, (uint64_t *)&v52);
      sub_1B4907B68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B41C2000, v21, v22, "Placemark region is not a CLCircularRegion, unable to create REMAlarmLocationTrigger. {region: %s}", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v24, -1, -1);
      MEMORY[0x1B5E3D7E0](v23, -1, -1);

      goto LABEL_22;
    }

LABEL_21:
    goto LABEL_22;
  }
  v9 = v8;
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (!v10)
  {

    goto LABEL_16;
  }
  v51 = (id)v10;
  if (qword_1EF097C68 != -1)
    swift_once();
  v11 = sub_1B49058F4();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EF09CFA0);
  v12 = sub_1B49058E8();
  v13 = sub_1B4907370();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1B41C2000, v12, v13, "Non-nil .spatialEventTrigger", v14, 2u);
    MEMORY[0x1B5E3D7E0](v14, -1, -1);
  }

  v15 = v7;
  v16 = sub_1B49058E8();
  v17 = sub_1B490737C();
  v50 = v15;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v48 = (_QWORD *)swift_slowAlloc();
    buf = v18;
    *(_DWORD *)v18 = 138412290;
    v52 = v15;
    v19 = v15;
    sub_1B4907B68();
    *v48 = v15;

    _os_log_impl(&dword_1B41C2000, v16, v17, ".placemark = %@", buf, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v48, -1, -1);
    MEMORY[0x1B5E3D7E0](buf, -1, -1);

  }
  else
  {

  }
  v32 = v9;
  v33 = sub_1B49058E8();
  v34 = sub_1B490737C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = (id)swift_slowAlloc();
    v52 = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = objc_msgSend(v51, sel_description);
    v38 = sub_1B4906A64();
    v40 = v39;

    sub_1B41EF7C8(v38, v40, (uint64_t *)&v52);
    sub_1B4907B68();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v33, v34, ".circularRegion = %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v36, -1, -1);
    MEMORY[0x1B5E3D7E0](v35, -1, -1);

  }
  else
  {

  }
  v41 = objc_msgSend(a1, sel_event);
  v42 = objc_msgSend(v50, sel_name);
  if (v42)
  {
    v43 = v42;
    sub_1B4906A64();

  }
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECFB0);
  v44 = v50;
  v45 = v32;
  v46 = (void *)sub_1B49076F4();
  if (v41 == (id)1)
    v47 = 1;
  else
    v47 = 2;
  v30 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStructuredLocation_proximity_, v46, v47);

  return v30;
}

void REMAlarmVehicleTrigger.init(spatialEventTrigger:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_mobileSpace) == (id)1)
  {
    v6 = objc_msgSend(a1, sel_event);
    if ((unint64_t)v6 >= 3)
    {
      if (qword_1EF097C68 != -1)
        swift_once();
      v11 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF09CFA0);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
      v12 = MEMORY[0x1E0DEE9D8];
      sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
      sub_1B41E292C(v12);
      sub_1B48204B4((uint64_t)"unknown event", 13, 2);
      __break(1u);
    }
    else
    {
      objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEvent_, v6);

    }
  }
  else
  {
    if (qword_1EF097C68 != -1)
      swift_once();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EF09CFA0);
    v7 = a1;
    v8 = sub_1B49058E8();
    v9 = sub_1B490737C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 134217984;
      v13[1] = objc_msgSend(v7, sel_mobileSpace);
      sub_1B4907B68();

      _os_log_impl(&dword_1B41C2000, v8, v9, "spatialEventTrigger.mobileSpace is not .car, which means this is not really a REMAlarmVehicleTrigger. {mobileSpace: %ld}", v10, 0xCu);
      MEMORY[0x1B5E3D7E0](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t TTRRecurrenceRuleModel.init(temporalEventTrigger:timeProvider:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[5];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8BA8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_dateComponentsRange);
  sub_1B4217B14(a2, (uint64_t)v15);
  TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)(v9, v15, (uint64_t)v8);

  __swift_destroy_boxed_opaque_existential_0(a2);
  v10 = type metadata accessor for TTRRecurrenceRuleModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
  {
    sub_1B41EA560((uint64_t)v8, &qword_1ED4E8BA8);
    v12 = 1;
  }
  else
  {
    sub_1B420B414((uint64_t)v8, a3);
    v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v12, 1, v10);
}

uint64_t TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  char *v63;
  void (*v64)(uint64_t, char *, uint64_t);
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  void (*v81)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  _QWORD v101[3];
  uint64_t v102;
  uint64_t v103;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B49037E8();
  v91 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v90 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v88 = (char *)&v81 - v12;
  v98 = sub_1B490338C();
  v94 = *(_QWORD *)(v98 - 8);
  v13 = MEMORY[0x1E0C80A78](v98);
  v92 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)&v81 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v81 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v81 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1B4903AD0();
  v96 = *(_QWORD *)(v27 - 8);
  v97 = v27;
  MEMORY[0x1E0C80A78](v27);
  v95 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (int *)type metadata accessor for TTRRecurrenceRuleModel(0);
  v99 = *((_QWORD *)v29 - 1);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = a1;
  v32 = objc_msgSend(a1, sel_recurrenceRule);
  if (!v32)
    goto LABEL_9;
  v33 = v32;
  v86 = v8;
  INRecurrenceFrequency.remRecurrenceFrequency.getter((uint64_t)objc_msgSend(v32, sel_frequency));
  if ((v35 & 1) != 0)
  {

LABEL_9:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v99 + 56))(a3, 1, 1, v29);
  }
  v36 = v34;
  v83 = v9;
  v85 = a3;
  v87 = a2;
  v37 = objc_msgSend(v33, sel_interval);
  v38 = objc_msgSend(v33, sel_weeklyRecurrenceDays);
  v39 = type metadata accessor for TTRRecurrenceEndModel(0);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v82 = v39;
  v81 = v40;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v31, 1, 1);
  v41 = v29[5];
  v42 = v29[6];
  *(_QWORD *)&v31[v29[7]] = 0;
  v43 = v29[8];
  *(_QWORD *)&v31[v43] = 0;
  *(_QWORD *)&v31[v29[9]] = 0;
  *(_QWORD *)&v31[v29[10]] = 0;
  *(_QWORD *)&v31[v29[11]] = 0;
  *(_QWORD *)&v31[v29[12]] = 0;
  *(_QWORD *)&v31[v29[13]] = 0;
  *(_QWORD *)&v31[v41] = v36;
  *(_QWORD *)&v31[v42] = v37;
  if (v36 == 1 && v38)
    *(_QWORD *)&v31[v43] = sub_1B46007FC((char)v38);
  v44 = v100;
  v45 = objc_msgSend(v100, sel_endDateComponents);
  if (v45)
  {
    v46 = v45;
    sub_1B490326C();

    v47 = v94;
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v49 = v21;
    v50 = 0;
  }
  else
  {
    v47 = v94;
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
    v49 = v21;
    v50 = 1;
  }
  v52 = v98;
  v84 = v48;
  v48((uint64_t)v49, v50, 1, v98);
  sub_1B41DF5E4((uint64_t)v21, (uint64_t)v23, (uint64_t *)&unk_1ED4E9EB0);
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  if (v53(v23, 1, v52) == 1)
  {
    sub_1B41EA560((uint64_t)v23, (uint64_t *)&unk_1ED4E9EB0);
    v55 = v96;
    v54 = v97;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v26, 1, 1, v97);
  }
  else
  {
    sub_1B4903368();
    v52 = v98;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v98);
    v55 = v96;
    v54 = v97;
  }
  sub_1B4217B14((uint64_t)v87, (uint64_t)v101);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v26, 1, v54) == 1)
  {
    v56 = v102;
    v57 = v103;
    __swift_project_boxed_opaque_existential_1(v101, v102);
    v58 = *(void (**)(uint64_t, uint64_t))(v57 + 16);
    v59 = v57;
    v44 = v100;
    v58(v56, v59);
    v52 = v98;
    sub_1B41EA560((uint64_t)v26, &qword_1ED4EE308);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v95, v26, v54);
  }
  v60 = (uint64_t)v93;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v101);
  v61 = objc_msgSend(v44, sel_endDateComponents);
  if (v61)
  {
    v62 = v61;
    v63 = v92;
    sub_1B490326C();

    v64 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 32);
    v64(v60, v63, v52);
    v84(v60, 0, 1, v52);
    v65 = v53((char *)v60, 1, v52);
    v66 = v85;
    if (v65 != 1)
    {
      v67 = (uint64_t)v89;
      v64((uint64_t)v89, (char *)v60, v52);
      v68 = v87[3];
      v69 = v87[4];
      __swift_project_boxed_opaque_existential_1(v87, v68);
      v70 = (uint64_t)v90;
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v69);
      v71 = (uint64_t)v86;
      v72 = v95;
      Calendar.dateMatching(_:now:)(v67, v70, (uint64_t)v86);

      v73 = v91;
      v74 = v70;
      v75 = v83;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v74, v83);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v67, v98);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v72, v97);
      v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v75);
      v77 = v99;
      if (v76 == 1)
      {
        sub_1B41EA560(v71, &qword_1ED4EE300);
      }
      else
      {
        v78 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 32);
        v79 = v88;
        v78(v88, v71, v75);
        sub_1B41EA560((uint64_t)v31, &qword_1ED4EB030);
        v78(v31, (uint64_t)v79, v75);
        v80 = v82;
        swift_storeEnumTagMultiPayload();
        v81(v31, 0, 1, v80);
      }
      goto LABEL_23;
    }
  }
  else
  {
    v84(v60, 1, 1, v52);
    v66 = v85;
  }

  (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
  sub_1B41EA560(v60, (uint64_t *)&unk_1ED4E9EB0);
  v77 = v99;
LABEL_23:
  sub_1B420B3D0((uint64_t)v31, v66);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v77 + 56))(v66, 0, 1, v29);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v87);
  return sub_1B42EC2B8((uint64_t)v31);
}

void INRecurrenceFrequency.remRecurrenceFrequency.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return;
    default:
      if (qword_1EF097C68 != -1)
        swift_once();
      v6 = __swift_project_value_buffer(0, (uint64_t)qword_1EF09CFA0);
      (*(void (**)(char *, uint64_t, _QWORD))(v3 + 16))(v5, v6, 0);
      v7 = MEMORY[0x1E0DEE9D8];
      sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
      sub_1B41E292C(v7);
      sub_1B48204B4((uint64_t)"unknown frequency", 17, 2);
      __break(1u);
      break;
  }
}

uint64_t Calendar.dateMatching(_:now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, _QWORD, uint64_t);
  uint64_t v19;
  void (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  unsigned int v45;
  void (*v46)(char *, _QWORD, uint64_t);
  unsigned int v47;
  void (*v48)(char *, _QWORD, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v57 = a2;
  v58 = sub_1B49039E0();
  v52 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v56 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1B4903A10();
  v51 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1B49039BC();
  v59 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
  v12 = sub_1B4903AB8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B4911D80;
  v17 = v16 + v15;
  v18 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x1E0CB1158], v12);
  v18(v17 + v14, *MEMORY[0x1E0CB1160], v12);
  v18(v17 + 2 * v14, *MEMORY[0x1E0CB1130], v12);
  v19 = sub_1B4240450(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v61 = a1;
  LOBYTE(v12) = sub_1B42DE67C((uint64_t (*)(char *))sub_1B42EC2F4, (char)&v60, v19);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return sub_1B4903A4C();
  v50 = a3;
  v21 = *(void (**)(_QWORD))(v59 + 104);
  v47 = *MEMORY[0x1E0CB0F90];
  v22 = v54;
  v48 = (void (*)(char *, _QWORD, uint64_t))v21;
  v21(v8);
  v23 = v51;
  v24 = *(void (**)(_QWORD))(v51 + 104);
  v25 = v8;
  v26 = v53;
  v45 = *MEMORY[0x1E0CB1010];
  v27 = v55;
  v46 = (void (*)(char *, _QWORD, uint64_t))v24;
  v24(v53);
  v28 = *MEMORY[0x1E0CB0FD8];
  v29 = v52;
  v30 = v56;
  v31 = v58;
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 104);
  v44(v56, v28, v58);
  v49 = a1;
  sub_1B4903AA0();
  v52 = *(_QWORD *)(v29 + 8);
  ((void (*)(char *, uint64_t))v52)(v30, v31);
  v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v33 = v25;
  v32(v26, v27);
  v34 = *(void (**)(char *, uint64_t))(v59 + 8);
  v34(v25, v22);
  v35 = sub_1B49037E8();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v11, 1, v35) == 1)
  {
    sub_1B41EA560((uint64_t)v11, &qword_1ED4EE300);
    v37 = v54;
    v48(v25, v47, v54);
    v38 = v53;
    v39 = v55;
    v46(v53, v45, v55);
    v40 = v56;
    v41 = v58;
    v44(v56, *MEMORY[0x1E0CB0FE0], v58);
    sub_1B4903AA0();
    ((void (*)(char *, uint64_t))v52)(v40, v41);
    v32(v38, v39);
    return ((uint64_t (*)(char *, uint64_t))v34)(v33, v37);
  }
  else
  {
    v42 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v50, v11, v35);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v42, 0, 1, v35);
  }
}

uint64_t sub_1B42E6254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;

  v6 = v5;
  v80 = a2;
  v81 = a4;
  v85 = a3;
  v79 = a1;
  v71 = a5;
  v7 = sub_1B4903BF0();
  v83 = *(_QWORD *)(v7 - 8);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v82 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B49037E8();
  v86 = *(_QWORD *)(v9 - 8);
  v87 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B41EA51C(v6, (uint64_t)v14, &qword_1ED4EB030);
  v15 = type metadata accessor for TTRRecurrenceEndModel(0);
  v16 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15);
  v88 = 0;
  if (v16 != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v88 = objc_msgSend((id)objc_opt_self(), sel_recurrenceEndWithOccurrenceCount_, *v14);
    }
    else
    {
      v18 = v86;
      v17 = v87;
      (*(void (**)(char *, _QWORD *, uint64_t))(v86 + 32))(v11, v14, v87);
      v19 = (void *)sub_1B4903788();
      v88 = objc_msgSend((id)objc_opt_self(), sel_recurrenceEndWithEndDate_, v19);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
    }
  }
  v20 = (void *)objc_opt_self();
  v77 = objc_msgSend(v20, sel_newObjectID);
  v76 = objc_msgSend(v20, sel_newObjectID);
  v78 = v20;
  v75 = objc_msgSend(v20, sel_newObjectID);
  v21 = (int *)type metadata accessor for TTRRecurrenceRuleModel(0);
  v22 = *(_QWORD *)(v6 + v21[6]);
  v73 = *(_QWORD *)(v6 + v21[5]);
  v74 = v22;
  v23 = *(_QWORD *)(v6 + v21[8]);
  v72 = *(_QWORD *)(v6 + v21[7]);
  if (v23)
  {
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v25 = (_QWORD *)(v23 + 40);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D845C0]), sel_initWithDayOfTheWeek_weekNumber_, *(v25 - 1), *v25);
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v25 += 2;
        --v24;
      }
      while (v24);
      v70 = v89;
      swift_bridgeObjectRelease();
    }
    else
    {
      v70 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v70 = 0;
  }
  v26 = *(_QWORD *)(v6 + v21[9]);
  if (v26)
  {
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v28 = 0;
      do
      {
        v29 = v28 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v26 + 8 * v28 + 32));
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v28 = v29;
      }
      while (v27 != v29);
      v69 = v89;
      swift_bridgeObjectRelease();
    }
    else
    {
      v69 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v69 = 0;
  }
  v30 = *(_QWORD *)(v6 + v21[12]);
  if (v30)
  {
    v31 = *(_QWORD *)(v30 + 16);
    v32 = MEMORY[0x1E0DEE9D8];
    if (v31)
    {
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v33 = 0;
      do
      {
        v34 = v33 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v30 + 8 * v33 + 32));
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v33 = v34;
      }
      while (v31 != v34);
      v32 = v89;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v32 = 0;
  }
  v35 = *(_QWORD *)(v6 + v21[11]);
  if (v35)
  {
    v36 = *(_QWORD *)(v35 + 16);
    v37 = MEMORY[0x1E0DEE9D8];
    if (v36)
    {
      v68 = v32;
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v38 = 0;
      do
      {
        v39 = v38 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v35 + 8 * v38 + 32));
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v38 = v39;
      }
      while (v36 != v39);
      v37 = v89;
      swift_bridgeObjectRelease();
      v32 = v68;
    }
  }
  else
  {
    v37 = 0;
  }
  v40 = *(_QWORD *)(v6 + v21[10]);
  if (v40)
  {
    v41 = *(_QWORD *)(v40 + 16);
    v42 = MEMORY[0x1E0DEE9D8];
    if (v41)
    {
      v67 = v37;
      v68 = v32;
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v43 = 0;
      do
      {
        v44 = v43 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v40 + 8 * v43 + 32));
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v43 = v44;
      }
      while (v41 != v44);
      v42 = v89;
      swift_bridgeObjectRelease();
      v32 = v68;
      v37 = v67;
    }
  }
  else
  {
    v42 = 0;
  }
  v45 = *(_QWORD *)(v6 + v21[13]);
  if (v45)
  {
    v46 = *(_QWORD *)(v45 + 16);
    v47 = MEMORY[0x1E0DEE9D8];
    if (v46)
    {
      v67 = v37;
      v89 = MEMORY[0x1E0DEE9D8];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4907F28();
      v48 = 0;
      do
      {
        v49 = v48 + 1;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v45 + 8 * v48 + 32));
        sub_1B4907F04();
        sub_1B4907F34();
        sub_1B4907F40();
        sub_1B4907F10();
        v48 = v49;
      }
      while (v46 != v49);
      v47 = v89;
      swift_bridgeObjectRelease();
      v37 = v67;
    }
  }
  else
  {
    v47 = 0;
  }
  v50 = objc_allocWithZone(MEMORY[0x1E0D845D0]);
  v51 = v88;
  v52 = v88;
  v53 = sub_1B46036F8(v77, v76, v75, v73, v74, v72, v70, v69, v32, v37, v42, v47, v51);
  v54 = (void *)sub_1B4903788();
  v55 = (void *)sub_1B4903788();
  v56 = v81[3];
  v57 = v81[4];
  __swift_project_boxed_opaque_existential_1(v81, v56);
  v58 = v82;
  (*(void (**)(uint64_t, uint64_t))(v57 + 24))(v56, v57);
  v59 = (void *)sub_1B4903BCC();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1B49131A0;
  *(_QWORD *)(v60 + 32) = v53;
  v89 = v60;
  sub_1B4906DC4();
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECF50);
  v61 = v53;
  v62 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  v63 = objc_msgSend(v78, sel_nextRecurrentDueDateAfter_dueDate_timeZone_allDay_recurrenceRules_, v54, v55, v59, v85 & 1, v62);

  if (v63)
  {
    v64 = v71;
    sub_1B49037B8();

    v65 = 0;
  }
  else
  {
    v65 = 1;
    v64 = v71;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v64, v65, 1, v87);
}

uint64_t DateComponents.smartlyCorrectedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  int v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t (*v44)(_BYTE *, uint64_t, uint64_t);
  int v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(_BYTE *, uint64_t);
  _BYTE *v57;
  uint64_t result;
  _BYTE *v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  void (*v80)(_BYTE *, uint64_t);
  _BYTE v81[4];
  int v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t (*v91)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  void (*v106)(_BYTE *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;

  v105 = a1;
  v2 = sub_1B49037E8();
  v88 = *(_QWORD *)(v2 - 8);
  v89 = v2;
  MEMORY[0x1E0C80A78](v2);
  v87 = &v81[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1B4903AD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v90 = &v81[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B490338C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v86 = &v81[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v100 = &v81[-v11];
  v12 = sub_1B4903968();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v104 = &v81[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CFC8);
  v15 = MEMORY[0x1E0C80A78](v108);
  v93 = &v81[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v103 = &v81[-v17];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  v19 = MEMORY[0x1E0C80A78](v18);
  v83 = &v81[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v19);
  v92 = &v81[-v22];
  MEMORY[0x1E0C80A78](v21);
  v24 = &v81[-v23];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09CFD0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v84 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = MEMORY[0x1E0C80A78](v26);
  v97 = &v81[-v29];
  v30 = MEMORY[0x1E0C80A78](v28);
  v94 = &v81[-v31];
  v32 = MEMORY[0x1E0C80A78](v30);
  v85 = &v81[-v33];
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = &v81[-v35];
  MEMORY[0x1E0C80A78](v34);
  v38 = &v81[-v37];
  v101 = v8;
  v102 = v7;
  v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v99(v105, v1, v7);
  v98 = v1;
  sub_1B4903368();
  v91 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
  v39 = v91(v24, 1, v4);
  v107 = v4;
  v96 = v5;
  if (v39 == 1)
  {
    sub_1B41EA560((uint64_t)v24, &qword_1ED4EE308);
    v40 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v40(v38, 1, 1, v12);
  }
  else
  {
    sub_1B4903980();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v24, v4);
    v40 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v40(v38, 0, 1, v12);
  }
  v41 = *MEMORY[0x1E0CB0EE8];
  v106 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 104);
  v106(v36, v41, v12);
  v40(v36, 0, 1, v12);
  v42 = v103;
  v43 = (uint64_t)&v103[*(int *)(v108 + 48)];
  sub_1B41EA51C((uint64_t)v38, (uint64_t)v103, &qword_1EF09CFD0);
  sub_1B41EA51C((uint64_t)v36, v43, &qword_1EF09CFD0);
  v44 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48);
  v45 = v44(v42, 1, v12);
  v95 = v13;
  if (v45 != 1)
  {
    v49 = v85;
    sub_1B41EA51C((uint64_t)v42, (uint64_t)v85, &qword_1EF09CFD0);
    if (v44((_BYTE *)v43, 1, v12) != 1)
    {
      v59 = v104;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 32))(v104, v43, v12);
      sub_1B41E11F0(&qword_1EF09CFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00], MEMORY[0x1E0CB0F18]);
      v82 = sub_1B4906A1C();
      v60 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
      v60(v59, v12);
      sub_1B41EA560((uint64_t)v36, &qword_1EF09CFD0);
      sub_1B41EA560((uint64_t)v38, &qword_1EF09CFD0);
      v60(v49, v12);
      sub_1B41EA560((uint64_t)v42, &qword_1EF09CFD0);
      v46 = v100;
      v47 = v102;
      v99((uint64_t)v100, v98, v102);
      v48 = v107;
      v50 = v94;
      if ((v82 & 1) != 0)
        goto LABEL_20;
LABEL_10:
      v51 = (uint64_t)v92;
      sub_1B4903368();
      if (v91((_BYTE *)v51, 1, v48) == 1)
      {
        sub_1B41EA560(v51, &qword_1ED4EE308);
        v52 = 1;
      }
      else
      {
        sub_1B4903980();
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v51, v48);
        v52 = 0;
      }
      v53 = v97;
      v40(v50, v52, 1, v12);
      v106(v53, *MEMORY[0x1E0CB0EF0], v12);
      v40(v53, 0, 1, v12);
      v54 = v93;
      v55 = (uint64_t)&v93[*(int *)(v108 + 48)];
      sub_1B41EA51C((uint64_t)v50, (uint64_t)v93, &qword_1EF09CFD0);
      sub_1B41EA51C((uint64_t)v53, v55, &qword_1EF09CFD0);
      if (v44(v54, 1, v12) == 1)
      {
        sub_1B41EA560((uint64_t)v53, &qword_1EF09CFD0);
        sub_1B41EA560((uint64_t)v50, &qword_1EF09CFD0);
        v56 = *(void (**)(_BYTE *, uint64_t))(v101 + 8);
        v56(v46, v47);
        if (v44((_BYTE *)v55, 1, v12) == 1)
        {
          sub_1B41EA560((uint64_t)v54, &qword_1EF09CFD0);
          v48 = v107;
          goto LABEL_21;
        }
      }
      else
      {
        v57 = v84;
        sub_1B41EA51C((uint64_t)v54, (uint64_t)v84, &qword_1EF09CFD0);
        if (v44((_BYTE *)v55, 1, v12) != 1)
        {
          v75 = v57;
          v76 = v95;
          v77 = v104;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v95 + 32))(v104, v55, v12);
          sub_1B41E11F0(&qword_1EF09CFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0F00], MEMORY[0x1E0CB0F18]);
          LODWORD(v108) = sub_1B4906A1C();
          v78 = (uint64_t)v54;
          v79 = v46;
          v80 = *(void (**)(_BYTE *, uint64_t))(v76 + 8);
          v80(v77, v12);
          sub_1B41EA560((uint64_t)v97, &qword_1EF09CFD0);
          sub_1B41EA560((uint64_t)v94, &qword_1EF09CFD0);
          v56 = *(void (**)(_BYTE *, uint64_t))(v101 + 8);
          v56(v79, v47);
          v80(v75, v12);
          result = sub_1B41EA560(v78, &qword_1EF09CFD0);
          v48 = v107;
          if ((v108 & 1) == 0)
            return result;
          goto LABEL_21;
        }
        sub_1B41EA560((uint64_t)v97, &qword_1EF09CFD0);
        sub_1B41EA560((uint64_t)v50, &qword_1EF09CFD0);
        (*(void (**)(_BYTE *, uint64_t))(v101 + 8))(v46, v47);
        (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v57, v12);
      }
      return sub_1B41EA560((uint64_t)v54, &qword_1EF09CFC8);
    }
    sub_1B41EA560((uint64_t)v36, &qword_1EF09CFD0);
    sub_1B41EA560((uint64_t)v38, &qword_1EF09CFD0);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v49, v12);
LABEL_9:
    sub_1B41EA560((uint64_t)v42, &qword_1EF09CFC8);
    v46 = v100;
    v47 = v102;
    v99((uint64_t)v100, v98, v102);
    v48 = v107;
    v50 = v94;
    goto LABEL_10;
  }
  sub_1B41EA560((uint64_t)v36, &qword_1EF09CFD0);
  sub_1B41EA560((uint64_t)v38, &qword_1EF09CFD0);
  if (v44((_BYTE *)v43, 1, v12) != 1)
    goto LABEL_9;
  sub_1B41EA560((uint64_t)v42, &qword_1EF09CFD0);
  v46 = v100;
  v47 = v102;
  v99((uint64_t)v100, v98, v102);
  v48 = v107;
LABEL_20:
  v56 = *(void (**)(_BYTE *, uint64_t))(v101 + 8);
  v56(v46, v47);
LABEL_21:
  v61 = v104;
  v106(v104, *MEMORY[0x1E0CB0EF8], v12);
  v62 = v47;
  v63 = v90;
  sub_1B4903974();
  (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v61, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
  v64 = sub_1B4903AB8();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1B4911D70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v65 + 104))(v67 + v66, *MEMORY[0x1E0CB1158], v64);
  sub_1B4240450(v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v68 = v87;
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  v69 = v86;
  sub_1B49039D4();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v68, v89);
  v70 = sub_1B49032C0();
  LOBYTE(v64) = v71;
  v56(v69, v62);
  if ((v64 & 1) != 0)
    v70 = 0;
  result = sub_1B49032C0();
  if ((v72 & 1) != 0)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v96 + 8))(v63, v48);
  v73 = v96;
  if (__OFSUB__(v70, 1))
  {
    __break(1u);
  }
  else
  {
    if (result < v70 - 1)
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v63, v48);
    if (!__OFADD__(v70, 1))
    {
      if (v70 + 1 >= result)
      {
        v74 = v83;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v96 + 16))(v83, v63, v48);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v48);
        sub_1B4903374();
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v63, v48);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B42E755C(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  int v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;

  v81 = a2;
  v4 = sub_1B490338C();
  v5 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  v90 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v8);
  v77 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v11 = MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v88 = (char *)&v75 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE310);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B4903BF0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1B49037E8();
  v87 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v83 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v82 = (char *)&v75 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v78 = (char *)&v75 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v84 = (char *)&v75 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v85 = (char *)&v75 - v31;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v75 - v32;
  v34 = (void *)sub_1B4903254();
  v86 = v2;
  sub_1B4903380();
  v79 = a1;
  sub_1B4217B14((uint64_t)a1, (uint64_t)v95);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v75 = v21;
    v36 = v96;
    v35 = v97;
    v80 = v33;
    __swift_project_boxed_opaque_existential_1(v95, v96);
    v37 = v36;
    v21 = v75;
    v33 = v80;
    (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v37, v35);
    sub_1B41EA560((uint64_t)v16, &qword_1ED4EE310);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  }
  v38 = (void *)objc_opt_self();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
  v39 = (void *)sub_1B4903BCC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v40 = objc_msgSend(v38, sel_rem_dateWithDateComponents_timeZone_, v34, v39);

  if (v40)
  {
    v41 = v85;
    sub_1B49037B8();

    v43 = v87;
    v42 = (uint64_t)v88;
    v44 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    v44(v88, v41, v21);
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    v45(v42, 0, 1, v21);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v42, 1, v21) != 1)
    {
      v44(v33, (char *)v42, v21);
      v46 = v79;
      v47 = v41;
      v48 = v79[3];
      v49 = v79[4];
      __swift_project_boxed_opaque_existential_1(v79, v48);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
      v50 = v84;
      sub_1B4903770();
      v51 = v43;
      v52 = *(void (**)(char *, uint64_t))(v43 + 8);
      v52(v47, v21);
      sub_1B4217B14((uint64_t)v46, (uint64_t)v91);
      v53 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v54 = v78;
      v53(v78, v33, v21);
      if ((v81 & 1) != 0)
      {
        v55 = v92;
        v90 = v93;
        __swift_project_boxed_opaque_existential_1(v91, v92);
        v56 = v21;
        v80 = v33;
        v57 = sub_1B4903AD0();
        v58 = (uint64_t)v54;
        v59 = 1;
        v60 = (uint64_t)v77;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v77, 1, 1, v57);
        v61 = (uint64_t)v76;
        v45((uint64_t)v76, 1, 1, v56);
        v62 = v58;
        v63 = v58;
        v33 = v80;
        v21 = v56;
        v50 = v84;
        LOBYTE(v55) = TTRTimeProvider.isDateInToday(_:calendar:now:)(v62, v60, v61, v55, v90);
        sub_1B41EA560(v61, &qword_1ED4EE300);
        sub_1B41EA560(v60, &qword_1ED4EE308);
        v52((char *)v63, v21);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
        v64 = v82;
        v53(v82, v33, v21);
        v65 = v83;
        v53(v83, v50, v21);
        if ((v55 & 1) != 0)
          goto LABEL_18;
      }
      else
      {
        v52(v54, v21);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
        v64 = v82;
        v53(v82, v33, v21);
        v65 = v83;
        v53(v83, v50, v21);
      }
      v59 = sub_1B4903794();
LABEL_18:
      v52(v65, v21);
      v52(v64, v21);
      v52(v50, v21);
      v52(v33, v21);
      return v59 & 1;
    }
  }
  else
  {
    v42 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v88, 1, 1, v21);
  }
  sub_1B41EA560(v42, &qword_1ED4EE300);
  if (qword_1EF097C68 != -1)
    swift_once();
  v66 = sub_1B49058F4();
  __swift_project_value_buffer(v66, (uint64_t)qword_1EF09CFA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v7, v86, v89);
  v67 = sub_1B49058E8();
  v68 = sub_1B4907388();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v70 = swift_slowAlloc();
    v91[0] = v70;
    *(_DWORD *)v69 = 136315138;
    sub_1B41E11F0(&qword_1EF09CFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
    v71 = v89;
    v72 = sub_1B4908324();
    v94 = sub_1B41EF7C8(v72, v73, v91);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v7, v71);
    _os_log_impl(&dword_1B41C2000, v67, v68, "Unable to determine if date is in the future {dateComponents: %s}", v69, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v70, -1, -1);
    MEMORY[0x1B5E3D7E0](v69, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v7, v89);
  }

  v59 = 0;
  return v59 & 1;
}

BOOL DateComponents.has(component:)()
{
  uint64_t v0;
  char v1;

  v0 = sub_1B49032F0();
  return (v1 & 1) == 0 && v0 != sub_1B4902FB4();
}

uint64_t DateComponents.has(components:)(uint64_t a1)
{
  uint64_t v2;

  return sub_1B42DE67C((uint64_t (*)(char *))sub_1B42EC2F4, (char)&v2, a1) & 1;
}

Swift::Bool __swiftcall String.fuzzyMatch(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  sub_1B41DF50C(0, &qword_1EF09CFE0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1B41EA638();
  *(_QWORD *)(v3 + 32) = countAndFlagsBits;
  *(_QWORD *)(v3 + 40) = object;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v4 = (void *)sub_1B49072EC();
  v5 = (void *)sub_1B4906A34();
  v6 = objc_msgSend(v4, sel_evaluateWithObject_, v5);

  return v6;
}

uint64_t INSearchForNotebookItemsIntent.isTodayQuery(timeProvider:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  char v86;
  char v87;
  _QWORD *v88;
  _QWORD *v89;
  id v90;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD v111[3];
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[48];

  v2 = v1;
  v107 = a1;
  v3 = sub_1B490338C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v96 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v7 = MEMORY[0x1E0C80A78](v6);
  v97 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v99 = (uint64_t)&v92 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v92 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  v14 = MEMORY[0x1E0C80A78](v13);
  v101 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v102 = (char *)&v92 - v16;
  v103 = sub_1B4903AD0();
  v98 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v93 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1B49037E8();
  v105 = *(_QWORD *)(v18 - 8);
  v106 = v18;
  MEMORY[0x1E0C80A78](v18);
  v108 = (uint64_t)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v95 = (uint64_t)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v94 = (uint64_t)&v92 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v92 = (char *)&v92 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v92 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v92 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&v92 - v34;
  v36 = MEMORY[0x1E0C80A78](v33);
  v38 = (char *)&v92 - v37;
  v39 = MEMORY[0x1E0C80A78](v36);
  v110 = (char *)&v92 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v92 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v92 - v45;
  MEMORY[0x1E0C80A78](v44);
  v109 = (uint64_t)&v92 - v47;
  v104 = v2;
  v48 = objc_msgSend(v2, sel_dateTime);
  v100 = v12;
  if (!v48)
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_8:
    v52 = v109;
    v53 = 1;
    goto LABEL_10;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, sel_startDateComponents);

  if (v50)
  {
    sub_1B490326C();

    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v51(v43, 0, 1, v3);
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v51(v43, 1, 1, v3);
  }
  sub_1B41DF5E4((uint64_t)v43, (uint64_t)v46, (uint64_t *)&unk_1ED4E9EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v46, 1, v3) == 1)
  {
    sub_1B41EA560((uint64_t)v46, (uint64_t *)&unk_1ED4E9EB0);
    goto LABEL_8;
  }
  v54 = v109;
  DateComponents.smartlyCorrectedValue.getter(v109);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v46, v3);
  v52 = v54;
  v53 = 0;
LABEL_10:
  v51((char *)v52, v53, 1, v3);
  v55 = objc_msgSend(v104, sel_dateTime);
  if (v55)
  {
    v56 = v55;
    v57 = objc_msgSend(v55, sel_endDateComponents);

    if (v57)
    {
      sub_1B490326C();

      v58 = 0;
    }
    else
    {
      v58 = 1;
    }
    v51(v35, v58, 1, v3);
    sub_1B41DF5E4((uint64_t)v35, (uint64_t)v38, (uint64_t *)&unk_1ED4E9EB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v38, 1, v3) == 1)
    {
      sub_1B41EA560((uint64_t)v38, (uint64_t *)&unk_1ED4E9EB0);
      v59 = 1;
    }
    else
    {
      DateComponents.smartlyCorrectedValue.getter((uint64_t)v110);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v38, v3);
      v59 = 0;
    }
  }
  else
  {
    v59 = 1;
  }
  v60 = v103;
  v51(v110, v59, 1, v3);
  v61 = v107[3];
  v62 = v107[4];
  __swift_project_boxed_opaque_existential_1(v107, v61);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v62);
  sub_1B41EA51C(v109, (uint64_t)v32, (uint64_t *)&unk_1ED4E9EB0);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v63(v32, 1, v3) == 1)
  {
    sub_1B41EA560((uint64_t)v32, (uint64_t *)&unk_1ED4E9EB0);
    v64 = v98;
    v65 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v102, 1, 1, v60);
  }
  else
  {
    v65 = (uint64_t)v102;
    sub_1B4903368();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v32, v3);
    v64 = v98;
  }
  v66 = (uint64_t)v101;
  v67 = (uint64_t)v29;
  v68 = (uint64_t)v92;
  sub_1B41EA51C((uint64_t)v110, v67, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B4217B14((uint64_t)v107, (uint64_t)v114);
  v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  if (v69(v65, 1, v60) == 1)
  {
    sub_1B41EA51C(v67, v68, (uint64_t *)&unk_1ED4E9EB0);
    if (v63((char *)v68, 1, v3) == 1)
    {
      sub_1B41EA560(v68, (uint64_t *)&unk_1ED4E9EB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v66, 1, 1, v60);
    }
    else
    {
      sub_1B4903368();
      v66 = (uint64_t)v101;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v68, v3);
    }
    sub_1B4217B14((uint64_t)v114, (uint64_t)v111);
    if (v69(v66, 1, v60) == 1)
    {
      v71 = v112;
      v72 = v113;
      __swift_project_boxed_opaque_existential_1(v111, v112);
      v73 = *(void (**)(uint64_t, uint64_t))(v72 + 16);
      v70 = v93;
      v74 = v72;
      v65 = (uint64_t)v102;
      v73(v71, v74);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
      sub_1B41EA560(v67, (uint64_t *)&unk_1ED4E9EB0);
      v60 = v103;
      sub_1B41EA560(v66, &qword_1ED4EE308);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
      sub_1B41EA560(v67, (uint64_t *)&unk_1ED4E9EB0);
      v70 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v93, v66, v60);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v111);
    sub_1B41EA560(v65, &qword_1ED4EE308);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
    sub_1B41EA560(v67, (uint64_t *)&unk_1ED4E9EB0);
    v70 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v93, v65, v60);
  }
  v75 = v94;
  v76 = (uint64_t)v100;
  sub_1B41EA51C(v109, v94, (uint64_t *)&unk_1ED4E9EB0);
  if (v63((char *)v75, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v76, 1, 1, v106);
  }
  else
  {
    v77 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v96, v75, v3);
    Calendar.dateMatching(_:now:)(v77, v108, v76);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v77, v3);
  }
  v78 = v95;
  sub_1B41EA51C((uint64_t)v110, v95, (uint64_t *)&unk_1ED4E9EB0);
  if (v63((char *)v78, 1, v3) == 1)
  {
    v80 = v105;
    v79 = v106;
    v81 = v99;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v99, 1, 1, v106);
  }
  else
  {
    v82 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v96, v78, v3);
    v81 = v99;
    Calendar.dateMatching(_:now:)(v82, v108, v99);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v82, v3);
    v80 = v105;
    v79 = v106;
  }
  v83 = (uint64_t)v97;
  v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  v85 = v84(v76, 1, v79);
  sub_1B41EA51C(v81, v83, &qword_1ED4EE300);
  if (v85 == 1 && v84(v83, 1, v79) == 1)
  {
    sub_1B41EA560(v83, &qword_1ED4EE300);
LABEL_45:
    LOBYTE(v88) = 0;
    goto LABEL_46;
  }
  sub_1B41EA560(v83, &qword_1ED4EE300);
  v88 = v107;
  v86 = sub_1B42EC350(v76, v107);
  v87 = sub_1B42EC350(v81, v88);
  LOBYTE(v88) = 0;
  if ((v86 & 1) == 0 && (v87 & 1) == 0)
  {
    v89 = objc_msgSend(v104, sel_dateTime);
    v88 = v89;
    if (v89)
    {
      v90 = objc_msgSend(v89, sel_allDay);

      if (!v90)
        goto LABEL_45;
      LODWORD(v88) = objc_msgSend(v90, sel_BOOLValue);

      if ((_DWORD)v88)
        LOBYTE(v88) = sub_1B42E8968(0, 0, 1, 0, 0, 0, 0, 0);
    }
  }
LABEL_46:
  sub_1B41EA560(v81, &qword_1ED4EE300);
  sub_1B41EA560((uint64_t)v110, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B41EA560(v109, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B41EA560(v76, &qword_1ED4EE300);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v60);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v108, v79);
  return v88 & 1;
}

uint64_t sub_1B42E8968(char a1, char a2, char a3, char a4, char a5, char a6, char a7, char a8)
{
  void *v8;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v16 = a1 & 1;
  v17 = objc_msgSend(v8, sel_title);

  if ((v17 == 0) == v16)
    goto LABEL_13;
  v18 = objc_msgSend(v8, sel_content);
  if (v18)
  {

    if ((a2 & 1) == 0)
      goto LABEL_13;
  }
  else if ((a2 & 1) != 0)
  {
LABEL_13:
    a8 = 0;
    return a8 & 1;
  }
  v19 = objc_msgSend(v8, sel_dateTime);

  if ((v19 == 0) == (a3 & 1))
    goto LABEL_13;
  if ((objc_msgSend(v8, sel_status) == 0) == (a4 & 1))
    goto LABEL_13;
  v20 = objc_msgSend(v8, sel_location);

  if ((v20 == 0) == (a5 & 1)
    || (objc_msgSend(v8, sel_temporalEventTriggerTypes) == 0) == (a6 & 1)
    || (objc_msgSend(v8, sel_taskPriority) == 0) == (a7 & 1))
  {
    goto LABEL_13;
  }
  v21 = objc_msgSend(v8, sel_notebookItemIdentifier);
  if (v21)

  else
    a8 ^= 1u;
  return a8 & 1;
}

uint64_t INSearchForNotebookItemsIntent.isFlaggedQuery.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_taskPriority) == (id)2)
    return sub_1B42E8968(0, 0, 0, 0, 0, 0, 1, 0);
  else
    return 0;
}

uint64_t INSearchForNotebookItemsIntent.isScheduledQuery.getter()
{
  void *v0;
  uint64_t result;

  if (!objc_msgSend(v0, sel_temporalEventTriggerTypes))
  {
    result = (uint64_t)objc_msgSend(v0, sel_dateTime);
    if (!result)
      return result;

  }
  return 1;
}

uint64_t INSearchForNotebookItemsIntent.isListOrAllQuery.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_itemType) == (id)2)
    return 1;
  else
    return sub_1B42E8968(0, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t INDateComponentsRange.dueDateComponents(timeProvider:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  id v5;

  v5 = objc_msgSend(v2, sel_recurrenceRule);

  if (v5)
    return sub_1B42E8C78(a1, (uint64_t)a2);
  else
    return sub_1B42E975C(a1, a2);
}

uint64_t sub_1B42E8C78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, _QWORD, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[5];
  _QWORD v122[3];
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v3 = v2;
  v111 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v6 = MEMORY[0x1E0C80A78](v5);
  v99 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v100 = (uint64_t)&v99 - v9;
  MEMORY[0x1E0C80A78](v8);
  v109 = (char *)&v99 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8BA8);
  MEMORY[0x1E0C80A78](v11);
  v107 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for TTRRecurrenceRuleModel(0);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v115 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v14);
  v104 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1B4903AD0();
  v16 = *(_QWORD *)(v119 - 8);
  v17 = MEMORY[0x1E0C80A78](v119);
  v114 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v99 - v19;
  v20 = sub_1B49037E8();
  v113 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v103 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v102 = (char *)&v99 - v24;
  MEMORY[0x1E0C80A78](v23);
  v116 = (char *)&v99 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v99 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v99 - v33;
  v35 = sub_1B490338C();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v120 = (uint64_t)&v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = v3;
  v38 = objc_msgSend(v3, sel_startDateComponents);
  if (v38)
  {
    v39 = v38;
    sub_1B490326C();

    v40 = *(uint64_t **)(v36 + 56);
    v41 = v29;
    v42 = 0;
  }
  else
  {
    v40 = *(uint64_t **)(v36 + 56);
    v41 = v29;
    v42 = 1;
  }
  v118 = v40;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v40)(v41, v42, 1, v35);
  sub_1B41DF5E4((uint64_t)v29, (uint64_t)v32, (uint64_t *)&unk_1ED4E9EB0);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  if (v43(v32, 1, v35) == 1)
  {
    sub_1B41EA560((uint64_t)v32, (uint64_t *)&unk_1ED4E9EB0);
    v44 = 1;
  }
  else
  {
    DateComponents.smartlyCorrectedValue.getter((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    v44 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v34, v44, 1, v35);
  sub_1B4217B14((uint64_t)a1, (uint64_t)&v125);
  v45 = v43(v34, 1, v35);
  v112 = v20;
  v110 = v36;
  v117 = v16;
  if (v45 == 1)
  {
    v46 = v126;
    v47 = v127;
    __swift_project_boxed_opaque_existential_1(&v125, v126);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    v48 = v126;
    v49 = v127;
    __swift_project_boxed_opaque_existential_1(&v125, v126);
    v50 = v101;
    (*(void (**)(uint64_t, uint64_t))(v49 + 16))(v48, v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
    v51 = sub_1B4903AB8();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(_QWORD *)(v52 + 72);
    v54 = a1;
    v55 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1B49163D0;
    v57 = v56 + v55;
    v58 = *(void (**)(unint64_t, _QWORD, uint64_t))(v52 + 104);
    v58(v56 + v55, *MEMORY[0x1E0CB1158], v51);
    v58(v56 + v55 + v53, *MEMORY[0x1E0CB1160], v51);
    v58(v56 + v55 + 2 * v53, *MEMORY[0x1E0CB1130], v51);
    v58(v56 + v55 + 3 * v53, *MEMORY[0x1E0CB1140], v51);
    v58(v56 + v55 + 4 * v53, *MEMORY[0x1E0CB1178], v51);
    a1 = v54;
    v16 = v117;
    v58(v57 + 5 * v53, *MEMORY[0x1E0CB1188], v51);
    v59 = v119;
    sub_1B4240450(v56);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v60 = v116;
    sub_1B49039D4();
    v61 = v59;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v50, v59);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v60, v112);
    sub_1B41EA560((uint64_t)v34, (uint64_t *)&unk_1ED4E9EB0);
    v62 = v115;
    v63 = v114;
    v64 = (uint64_t)v109;
    v65 = (uint64_t)v104;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v120, v34, v35);
    v62 = v115;
    v63 = v114;
    v64 = (uint64_t)v109;
    v65 = (uint64_t)v104;
    v61 = v119;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v125);
  sub_1B4903368();
  sub_1B4217B14((uint64_t)a1, (uint64_t)v122);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v65, 1, v61) == 1)
  {
    v66 = v123;
    v67 = v124;
    __swift_project_boxed_opaque_existential_1(v122, v123);
    (*(void (**)(uint64_t, uint64_t))(v67 + 16))(v66, v67);
    sub_1B41EA560(v65, &qword_1ED4EE308);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v63, v65, v61);
  }
  v68 = v108;
  v69 = (uint64_t)v107;
  v70 = v106;
  v71 = v105;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v122);
  sub_1B4217B14((uint64_t)a1, (uint64_t)v121);
  v72 = v68;
  TTRRecurrenceRuleModel.init(dateComponentsRange:timeProvider:)(v72, v121, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70) == 1)
  {
    (*(void (**)(char *, uint64_t))(v117 + 8))(v63, v119);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v120, v35);
    v73 = &qword_1ED4E8BA8;
    v74 = v69;
LABEL_17:
    sub_1B41EA560(v74, v73);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v118)(v111, 1, 1, v35);
  }
  sub_1B420B414(v69, v62);
  v75 = a1[3];
  v76 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v75);
  v77 = (uint64_t)v116;
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v76);
  v78 = v120;
  v79 = v63;
  Calendar.dateMatching(_:now:)(v120, v77, v64);
  v80 = v113;
  v81 = v112;
  v116 = *(char **)(v113 + 8);
  ((void (*)(uint64_t, uint64_t))v116)(v77, v112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v64, 1, v81) == 1)
  {
    sub_1B42EC2B8(v62);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v79, v119);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v78, v35);
    v73 = &qword_1ED4EE300;
    v74 = v64;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v102, v64, v81);
  v83 = a1[3];
  v84 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v83);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v84);
  v85 = objc_msgSend(v72, sel_allDay);
  if (v85)
  {
    v86 = v85;
    v87 = objc_msgSend(v85, sel_BOOLValue);

  }
  else
  {
    v87 = 0;
  }
  v88 = (uint64_t)v102;
  v89 = (uint64_t)v103;
  v90 = sub_1B4903794();
  v91 = v113;
  if ((v90 & 1) != 0)
  {
    v92 = v100;
    v93 = v112;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v100, v88, v112);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v91 + 56))(v92, 0, 1, v93);
  }
  else
  {
    sub_1B42E6254(v89, v88, v87, a1, v100);
    v93 = v112;
  }
  v94 = v100;
  v95 = v99;
  v96 = sub_1B41EA51C(v100, v99, &qword_1ED4EE300);
  v118 = &v99;
  MEMORY[0x1E0C80A78](v96);
  v97 = v120;
  *(&v99 - 4) = v120;
  *(&v99 - 3) = (uint64_t)a1;
  *((_BYTE *)&v99 - 16) = v87;
  sub_1B42DE4EC((void (*)(char *))sub_1B42EC66C, v111);
  sub_1B41EA560(v95, &qword_1ED4EE300);
  sub_1B41EA560(v94, &qword_1ED4EE300);
  v98 = (void (*)(uint64_t, uint64_t))v116;
  ((void (*)(uint64_t, uint64_t))v116)(v89, v93);
  v98(v88, v93);
  sub_1B42EC2B8(v115);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v119);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v97, v35);
}

uint64_t sub_1B42E975C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  char *v78;
  char v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void *v118;
  void *v119;
  void (*v120)(char *, uint64_t);
  id v121;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unsigned int v141;
  char *v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  _QWORD v153[3];
  uint64_t v154;
  uint64_t v155;

  v151 = a1;
  v140 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE310);
  MEMORY[0x1E0C80A78](v3);
  v126 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v5);
  v132 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1B49037E8();
  v7 = *(_QWORD *)(v134 - 8);
  v8 = MEMORY[0x1E0C80A78](v134);
  v130 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v133 = (char *)&v123 - v10;
  v11 = sub_1B490338C();
  v146 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v144 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v13);
  v136 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_1B4903AD0();
  v143 = *(_QWORD *)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v142 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v137 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v127 = (uint64_t)&v123 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v128 = (uint64_t)&v123 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v129 = (uint64_t)&v123 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v135 = (char *)&v123 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v123 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v123 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&v123 - v34;
  v36 = MEMORY[0x1E0C80A78](v33);
  v150 = (uint64_t)&v123 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v123 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v43 = (char *)&v123 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v152 = (uint64_t)&v123 - v45;
  MEMORY[0x1E0C80A78](v44);
  v149 = (uint64_t)&v123 - v46;
  v139 = sub_1B4903BF0();
  v47 = *(_QWORD *)(v139 - 8);
  v48 = MEMORY[0x1E0C80A78](v139);
  v124 = (char *)&v123 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v125 = (char *)&v123 - v51;
  MEMORY[0x1E0C80A78](v50);
  v148 = (char *)&v123 - v52;
  v53 = v2;
  v54 = objc_msgSend(v2, sel_allDay);
  v131 = v7;
  v138 = v47;
  if (v54)
  {
    v55 = v54;
    v141 = objc_msgSend(v54, sel_BOOLValue);

  }
  else
  {
    v141 = 0;
  }
  v57 = v151[3];
  v56 = v151[4];
  __swift_project_boxed_opaque_existential_1(v151, v57);
  (*(void (**)(uint64_t, uint64_t))(v56 + 24))(v57, v56);
  v58 = objc_msgSend(v53, sel_startDateComponents);
  if (v58)
  {
    v59 = v58;
    sub_1B490326C();

    v60 = v146;
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56);
    v62 = v40;
    v63 = 0;
  }
  else
  {
    v60 = v146;
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56);
    v62 = v40;
    v63 = 1;
  }
  v145 = v61;
  v61(v62, v63, 1, v11);
  sub_1B41DF5E4((uint64_t)v40, (uint64_t)v43, (uint64_t *)&unk_1ED4E9EB0);
  v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v65 = v60;
  if (v64(v43, 1, v11) == 1)
  {
    sub_1B41EA560((uint64_t)v43, (uint64_t *)&unk_1ED4E9EB0);
    v66 = 1;
    v67 = v152;
  }
  else
  {
    v67 = v152;
    DateComponents.smartlyCorrectedValue.getter(v152);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v11);
    v66 = 0;
  }
  v68 = 1;
  v69 = v145;
  v145((char *)v67, v66, 1, v11);
  v70 = objc_msgSend(v53, sel_endDateComponents);
  if (v70)
  {
    v71 = v70;
    sub_1B490326C();

    v68 = 0;
  }
  v72 = (uint64_t)v135;
  v69(v32, v68, 1, v11);
  sub_1B41DF5E4((uint64_t)v32, (uint64_t)v35, (uint64_t *)&unk_1ED4E9EB0);
  if (v64(v35, 1, v11) == 1)
  {
    sub_1B41EA560((uint64_t)v35, (uint64_t *)&unk_1ED4E9EB0);
    v73 = 1;
    v74 = v150;
  }
  else
  {
    v75 = v150;
    DateComponents.smartlyCorrectedValue.getter(v150);
    v74 = v75;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v11);
    v73 = 0;
  }
  v76 = v147;
  v69((char *)v74, v73, 1, v11);
  sub_1B41EA51C(v152, (uint64_t)v29, (uint64_t *)&unk_1ED4E9EB0);
  v77 = v64(v29, 1, v11);
  v78 = v142;
  if (v77 == 1)
  {
    sub_1B41EA560((uint64_t)v29, (uint64_t *)&unk_1ED4E9EB0);
    v79 = 0;
  }
  else
  {
    v80 = sub_1B42E755C(v151, v141);
    v74 = v150;
    v79 = v80;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v11);
  }
  sub_1B41EA51C(v74, v72, (uint64_t *)&unk_1ED4E9EB0);
  v81 = v64((char *)v72, 1, v11);
  v82 = (uint64_t)v137;
  if (v81 == 1)
  {
    sub_1B41EA560(v72, (uint64_t *)&unk_1ED4E9EB0);
    if ((v79 & 1) == 0)
      goto LABEL_26;
    goto LABEL_22;
  }
  v83 = sub_1B42E755C(v151, v141);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v72, v11);
  if ((v79 & 1) != 0)
  {
LABEL_22:
    v84 = v152;
LABEL_25:
    v85 = v149;
    sub_1B41EA51C(v84, v149, (uint64_t *)&unk_1ED4E9EB0);
    v86 = v136;
    goto LABEL_30;
  }
  if ((v83 & 1) != 0)
  {
    v84 = v150;
    goto LABEL_25;
  }
LABEL_26:
  v87 = v128;
  sub_1B41EA51C(v152, v128, (uint64_t *)&unk_1ED4E9EB0);
  v88 = v127;
  sub_1B41EA51C(v150, v127, (uint64_t *)&unk_1ED4E9EB0);
  if (v64((char *)v87, 1, v11) == 1)
  {
    v89 = v88;
    v90 = v129;
    sub_1B41DF5E4(v89, v129, (uint64_t *)&unk_1ED4E9EB0);
    sub_1B41EA560(v87, (uint64_t *)&unk_1ED4E9EB0);
  }
  else
  {
    sub_1B41EA560(v88, (uint64_t *)&unk_1ED4E9EB0);
    v90 = v129;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v129, v87, v11);
    v69((char *)v90, 0, 1, v11);
  }
  v85 = v149;
  v86 = v136;
  sub_1B41DF5E4(v90, v149, (uint64_t *)&unk_1ED4E9EB0);
LABEL_30:
  v91 = v64((char *)v85, 1, v11);
  v92 = v143;
  if (v91)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v86, 1, 1, v76);
  }
  else
  {
    sub_1B4903368();
    v85 = v149;
  }
  sub_1B4217B14((uint64_t)v151, (uint64_t)v153);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v86, 1, v76) == 1)
  {
    v93 = (uint64_t)v86;
    v94 = v154;
    v95 = v155;
    __swift_project_boxed_opaque_existential_1(v153, v154);
    v96 = *(void (**)(uint64_t, uint64_t))(v95 + 16);
    v97 = v95;
    v65 = v146;
    v96(v94, v97);
    v85 = v149;
    sub_1B41EA560(v93, &qword_1ED4EE308);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v78, v86, v76);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v153);
  sub_1B41EA51C(v85, v82, (uint64_t *)&unk_1ED4E9EB0);
  v98 = v64((char *)v82, 1, v11);
  v99 = (uint64_t)v144;
  if (v98 == 1)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v78, v147);
    sub_1B41EA560(v150, (uint64_t *)&unk_1ED4E9EB0);
    sub_1B41EA560(v152, (uint64_t *)&unk_1ED4E9EB0);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v148, v139);
    sub_1B41EA560(v82, (uint64_t *)&unk_1ED4E9EB0);
    v100 = 1;
LABEL_40:
    v110 = v140;
    goto LABEL_45;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v144, v82, v11);
  v101 = v65;
  v102 = v151[3];
  v103 = v151[4];
  __swift_project_boxed_opaque_existential_1(v151, v102);
  v104 = (uint64_t)v130;
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v103);
  v105 = v132;
  v106 = v78;
  Calendar.dateMatching(_:now:)(v99, v104, v132);
  v107 = v131;
  v108 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v109 = v134;
  v108(v104, v134);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v105, 1, v109) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v11);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v106, v147);
    sub_1B41EA560(v150, (uint64_t *)&unk_1ED4E9EB0);
    sub_1B41EA560(v152, (uint64_t *)&unk_1ED4E9EB0);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v148, v139);
    sub_1B41EA560(v105, &qword_1ED4EE300);
    v100 = 1;
    v85 = v149;
    v69 = v145;
    goto LABEL_40;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v133, v105, v109);
  v111 = (void *)sub_1B4903788();
  v112 = (uint64_t)v126;
  sub_1B4903380();
  v113 = v138;
  v114 = v139;
  v115 = v124;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v124, v148, v139);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v112, 1, v114) == 1)
  {
    v116 = v125;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v125, v115, v114);
    sub_1B41EA560(v112, &qword_1ED4EE310);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v114);
    v116 = v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v125, v112, v114);
  }
  v69 = v145;
  v117 = v147;
  v118 = (void *)objc_opt_self();
  v119 = (void *)sub_1B4903BCC();
  v120 = *(void (**)(char *, uint64_t))(v113 + 8);
  v120(v116, v114);
  v121 = objc_msgSend(v118, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v111, v119, v141);

  v110 = v140;
  sub_1B490326C();

  v108((uint64_t)v133, v134);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v144, v11);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v117);
  sub_1B41EA560(v150, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B41EA560(v152, (uint64_t *)&unk_1ED4E9EB0);
  v120(v148, v114);
  v100 = 0;
  v85 = v149;
LABEL_45:
  v69(v110, v100, 1, v11);
  return sub_1B41EA560(v85, (uint64_t *)&unk_1ED4E9EB0);
}

uint64_t INDateComponentsRange.calendar(timeProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v41 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v41 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v41 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v41 - v22;
  v24 = objc_msgSend(v3, sel_startDateComponents);
  v43 = v3;
  v44 = a2;
  v42 = v21;
  if (v24)
  {
    v25 = v24;
    sub_1B490326C();

    v26 = sub_1B490338C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 0, 1, v26);
  }
  else
  {
    v26 = sub_1B490338C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 1, 1, v26);
  }
  sub_1B41DF5E4((uint64_t)v15, (uint64_t)v17, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B490338C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v17, 1, v26) == 1)
  {
    sub_1B41EA560((uint64_t)v17, (uint64_t *)&unk_1ED4E9EB0);
    v29 = sub_1B4903AD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 1, 1, v29);
  }
  else
  {
    sub_1B4903368();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v26);
  }
  sub_1B4217B14(a1, (uint64_t)v48);
  v30 = sub_1B4903AD0();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v32((uint64_t)v23, 1, v30) == 1)
  {
    v33 = objc_msgSend(v43, sel_endDateComponents);
    if (v33)
    {
      v34 = v33;
      sub_1B490326C();

      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v9, v35, 1, v26);
    sub_1B41DF5E4((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_1ED4E9EB0);
    if (v28(v12, 1, v26) == 1)
    {
      sub_1B41EA560((uint64_t)v12, (uint64_t *)&unk_1ED4E9EB0);
      v37 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v42, 1, 1, v30);
    }
    else
    {
      v37 = (uint64_t)v42;
      sub_1B4903368();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
    }
    v38 = v44;
    sub_1B4217B14((uint64_t)v48, (uint64_t)v45);
    if (v32(v37, 1, v30) == 1)
    {
      v39 = v46;
      v40 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      (*(void (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
      sub_1B41EA560(v37, &qword_1ED4EE308);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v38, v37, v30);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
    return sub_1B41EA560((uint64_t)v23, &qword_1ED4EE308);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v44, v23, v30);
  }
}

void sub_1B42EA7D4(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE310);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B4903BF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1B4903788();
  sub_1B4903380();
  sub_1B4217B14(a1, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v13 = v20;
    v14 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
    sub_1B41EA560((uint64_t)v7, &qword_1ED4EE310);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  v15 = (void *)objc_opt_self();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  v16 = (void *)sub_1B4903BCC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = objc_msgSend(v15, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v12, v16, a2 & 1, v18);

  sub_1B490326C();
}

BOOL static INTemporalEventTrigger.ValidationError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t INTemporalEventTrigger.ValidationError.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t INTemporalEventTrigger.ValidationError.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

void INTemporalEventTrigger.dueDateComponents(timeProvider:)(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  id v7;

  v3 = v2;
  v7 = objc_msgSend(v3, sel_dateComponentsRange);
  v6 = objc_msgSend(v7, sel_recurrenceRule);

  if (v6)
    sub_1B42E8C78(a1, (uint64_t)a2);
  else
    sub_1B42E975C(a1, a2);

}

uint64_t INTemporalEventTrigger.validate(timeProvider:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  id v19;
  id v20;
  id v21;
  id v22;
  int v23;
  char v24;
  id v25;
  _BYTE v27[40];
  _BYTE v28[40];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B490338C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E8BA8);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = objc_msgSend(v2, sel_dateComponentsRange);
  v15 = objc_msgSend(v14, sel_recurrenceRule);

  sub_1B4217B14((uint64_t)a1, (uint64_t)v28);
  if (v15)
  {
    sub_1B4217B14((uint64_t)v28, (uint64_t)v27);
    TTRRecurrenceRuleModel.init(temporalEventTrigger:timeProvider:)(v2, (uint64_t)v27, (uint64_t)v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    v16 = type metadata accessor for TTRRecurrenceRuleModel(0);
    v17 = 1;
    v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v13, 1, v16);
    sub_1B41EA560((uint64_t)v13, &qword_1ED4E8BA8);
    if (v18 == 1)
      return v17;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
  v19 = objc_msgSend(v2, sel_dateComponentsRange);
  v20 = objc_msgSend(v19, sel_recurrenceRule);

  if (v20)
    sub_1B42E8C78(a1, (uint64_t)v6);
  else
    sub_1B42E975C(a1, v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1B41EA560((uint64_t)v6, (uint64_t *)&unk_1ED4E9EB0);
    return 2;
  }
  else
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v21 = objc_msgSend(v2, sel_dateComponentsRange);
    v22 = objc_msgSend(v21, sel_allDay);

    if (v22)
    {
      v23 = objc_msgSend(v22, sel_BOOLValue);

    }
    else
    {
      v23 = 0;
    }
    v24 = sub_1B42E755C(a1, v23);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    if ((v24 & 1) != 0)
    {
      v25 = v2;
      return (uint64_t)v2;
    }
    else
    {
      return 0;
    }
  }
}

id sub_1B42EAD88()
{
  id *v0;

  return objc_msgSend(*v0, sel_priority);
}

id sub_1B42EAD98()
{
  id *v0;

  return objc_msgSend(*v0, sel_spatialEventTrigger);
}

BOOL sub_1B42EADBC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  void *v5;
  void *v6;
  void *v7;
  id v8;
  BOOL v9;

  v4 = *(uint64_t (**)(void))(a2 + 16);
  v5 = (void *)v4();

  v6 = (void *)((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_mobileSpace);

    if (v5)
      v9 = v8 == (id)1;
    else
      v9 = 1;
  }
  else
  {
    v9 = v5 == 0;
  }
  return !v9;
}

uint64_t TTRIntentResultWarningBearing.warnings(store:accountCapabilties:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4) == 2
    && !objc_msgSend(a2, sel_supportsFlagged))
  {
    v9 = 1;
    v8 = 2;
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = sub_1B42EB070(a1, a3, a4);
  v12 = v11;
  v13 = sub_1B42EB36C(a3, a4);
  v15 = v14;
  if ((v9 & 1) == 0)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((v12 & 1) != 0)
      goto LABEL_9;
LABEL_16:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1B4291EF8(0, v16[2] + 1, 1, v16);
    v23 = v16[2];
    v22 = v16[3];
    if (v23 >= v22 >> 1)
      v16 = sub_1B4291EF8((_QWORD *)(v22 > 1), v23 + 1, 1, v16);
    v16[2] = v23 + 1;
    v16[v23 + 4] = v10;
    if ((v15 & 1) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
  v16 = sub_1B4291EF8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v18 = v16[2];
  v17 = v16[3];
  if (v18 >= v17 >> 1)
    v16 = sub_1B4291EF8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
  v16[2] = v18 + 1;
  v16[v18 + 4] = v8;
  if ((v12 & 1) == 0)
    goto LABEL_16;
LABEL_9:
  if ((v15 & 1) == 0)
  {
LABEL_10:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1B4291EF8(0, v16[2] + 1, 1, v16);
    v20 = v16[2];
    v19 = v16[3];
    v21 = v20 + 1;
    if (v20 >= v19 >> 1)
      v16 = sub_1B4291EF8((_QWORD *)(v19 > 1), v20 + 1, 1, v16);
    v16[2] = v21;
    v16[v20 + 4] = v13;
    goto LABEL_22;
  }
LABEL_21:
  v21 = v16[2];
  if (!v21)
  {
    v25 = 0;
    goto LABEL_26;
  }
LABEL_22:
  v24 = 0;
  v25 = 0;
  do
  {
    v26 = v16[v24 + 4];
    if ((v26 & ~v25) == 0)
      v26 = 0;
    v25 |= v26;
    ++v24;
  }
  while (v21 != v24);
LABEL_26:
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1B42EB070(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22[2];

  v22[1] = *(id *)MEMORY[0x1E0C80C00];
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) != 2)
    return 0;
  v22[0] = 0;
  v4 = objc_msgSend(a1, sel_fetchActiveCloudKitAccountObjectIDsWithFetchOption_error_, 2, v22);
  v5 = v22[0];
  if (!v4)
  {
    v11 = v22[0];
    v12 = (void *)sub_1B4903560();

    swift_willThrow();
    if (qword_1EF097C68 != -1)
      swift_once();
    v13 = sub_1B49058F4();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF09CFA0);
    v14 = v12;
    v15 = v12;
    v16 = sub_1B49058E8();
    v17 = sub_1B4907388();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (void *)swift_slowAlloc();
      v22[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_getErrorValue();
      v20 = sub_1B4908438();
      sub_1B41EF7C8(v20, v21, (uint64_t *)v22);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, v16, v17, "Could not retrieve accounts to determine if upgraded to cloudkit {error: %s}", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v19, -1, -1);
      MEMORY[0x1B5E3D7E0](v18, -1, -1);

      return 0;
    }

    return 0;
  }
  v6 = v4;
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
  v7 = sub_1B4906DAC();
  v8 = v5;

  if (v7 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v9 = sub_1B49081B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return 8 * (v9 == 0);
}

uint64_t sub_1B42EB36C(uint64_t a1, uint64_t a2)
{
  Class *v2;
  unsigned int v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  id v12;
  unsigned int v13;
  unsigned int v14;

  if (!sub_1B42EADBC(a1, a2))
    return 0;
  v2 = (Class *)0x1E0C9E000;
  v3 = objc_msgSend((id)objc_opt_self(), sel_locationServicesEnabled);
  v4 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v5 = objc_msgSend(v4, sel_processName);

  v6 = sub_1B4906A64();
  v8 = v7;

  if (v6 == 0xD000000000000011 && v8 == 0x80000001B4944990)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_11;
  }
  if (qword_1ED4ED788 != -1)
    swift_once();
  v11 = objc_allocWithZone(MEMORY[0x1E0C9E3C8]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v2 = (Class *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v11, sel_initWithEffectiveBundleIdentifier_, v2);

  if (v12)
    goto LABEL_12;
  __break(1u);
LABEL_11:
  v12 = objc_msgSend(objc_allocWithZone(v2[121]), sel_init);
LABEL_12:
  v13 = objc_msgSend(v12, sel_authorizationStatus);

  if (v13 - 3 < 2)
    v14 = v3;
  else
    v14 = 0;
  return v14 ^ 1;
}

uint64_t sub_1B42EB53C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_name);
  v2 = sub_1B4906A64();

  return v2;
}

id sub_1B42EB590(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  void *v12;
  id v13;

  v4 = v3;
  v8 = sub_1B490338C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = 0;
  if (v10(a1, 1, v8) != 1)
  {
    v11 = (void *)sub_1B4903254();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  if (v10(a2, 1, v8) == 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = (void *)sub_1B4903254();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  v13 = objc_msgSend(v4, sel_initWithStartDateComponents_endDateComponents_recurrenceRule_, v11, v12, a3);

  return v13;
}

uint64_t _sSo10INTaskListC15RemindersUICoreE16encodeIdentifier3forSSSo08REMSmartB0C_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B490317C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B4903848();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_objectID);
  v14 = objc_msgSend(v13, sel_uuid);

  sub_1B4903824();
  v15 = sub_1B4903800();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1B4903170();
  sub_1B4903164();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4903158();
  sub_1B490314C();
  v16 = sub_1B49036D4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B41EA560((uint64_t)v4, &qword_1ED4E9EC0);
  }
  else
  {
    v15 = sub_1B49035C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1B42EB8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _sSo6INTaskC15RemindersUICoreE013allIncompleteB05storeSaySo11REMReminderCGSo8REMStoreC_tFZ_0(void *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(char *, unint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  unint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94[3];

  v91 = a1;
  v94[1] = *(id *)MEMORY[0x1E0C80C00];
  v76 = sub_1B49047F0();
  v92 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v2 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B4904958();
  v75 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1B4904964();
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v80 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B4904C88();
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B4904B50();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B4904AA8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D000);
  v77 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *MEMORY[0x1E0D85E28];
  v19 = sub_1B4904C7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v15, v18, v19);
  v20 = *MEMORY[0x1E0D85BC8];
  v86 = v13;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v22 = v83;
  v88 = v12;
  v21(v15, v20, v12);
  v23 = *MEMORY[0x1E0D85CC8];
  v87 = v10;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25 = v82;
  v89 = v9;
  v24(v82, v23, v9);
  v26 = v84;
  v27 = v85;
  (*(void (**)(char *, _QWORD))(v84 + 104))(v22, *MEMORY[0x1E0D85E48]);
  v28 = v17;
  v29 = v25;
  sub_1B4904F34();
  v90 = 0;
  v40 = v81;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v27);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v29, v89);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v15, v88);
  v41 = v28;
  v42 = (void *)MEMORY[0x1E0DEE9D8];
  sub_1B4904F28();
  v43 = sub_1B4904898();
  v94[0] = v42;
  v44 = *(_QWORD *)(v43 + 16);
  v89 = (uint64_t)v41;
  if (v44)
  {
    v45 = v75;
    v46 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    v88 = v43;
    v47 = v43 + v46;
    v48 = *(_QWORD *)(v75 + 72);
    v49 = *(void (**)(char *, unint64_t, uint64_t))(v75 + 16);
    do
    {
      v49(v5, v47, v3);
      v50 = sub_1B490494C();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v3);
      sub_1B4232EEC(v50);
      v47 += v48;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    v51 = v94[0];
    v52 = v81;
    v42 = (void *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v52 = v40;
  }
  v53 = v51[2];
  v54 = v92;
  v55 = v76;
  if (v53)
  {
    v94[0] = v42;
    sub_1B4907F28();
    v56 = (char *)v51 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    v57 = *(_QWORD *)(v54 + 72);
    v58 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    do
    {
      v58(v2, v56, v55);
      sub_1B49047D8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v2, v55);
      sub_1B4907F04();
      sub_1B4907F34();
      v54 = v92;
      sub_1B4907F40();
      sub_1B4907F10();
      v56 += v57;
      --v53;
    }
    while (v53);
    v59 = (unint64_t)v94[0];
    swift_bridgeObjectRelease();
    v52 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    v59 = MEMORY[0x1E0DEE9D8];
  }
  v60 = v91;
  v61 = v78;
  v62 = v80;
  v63 = v77;
  v64 = v52;
  if (v59 >> 62)
  {
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B490815C();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B490839C();
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
  }
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
  v65 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  v94[0] = 0;
  v66 = objc_msgSend(v60, sel_fetchRemindersWithObjectIDs_error_, v65, v94);

  v67 = v94[0];
  if (v66)
  {
    sub_1B41DF50C(0, (unint64_t *)&unk_1ED4ECEE0);
    sub_1B41DF544();
    v68 = sub_1B4906818();
    v69 = v67;

    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v39 = sub_1B4285BD0(v59, v68);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v64);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v89, v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v71 = v94[0];
    swift_bridgeObjectRelease();
    v72 = v63;
    v73 = (void *)sub_1B4903560();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v64);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v89, v79);
    if (qword_1EF097C68 != -1)
      swift_once();
    v30 = sub_1B49058F4();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EF09CFA0);
    v31 = v73;
    v32 = v73;
    v33 = sub_1B49058E8();
    v34 = sub_1B4907388();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v94[0] = v36;
      *(_DWORD *)v35 = 136315138;
      swift_getErrorValue();
      v37 = sub_1B490842C();
      v93 = sub_1B41EF7C8(v37, v38, (uint64_t *)v94);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, v33, v34, "Error trying to REMRemindersListDataView.fetchAll {error: %s}", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v36, -1, -1);
      MEMORY[0x1B5E3D7E0](v35, -1, -1);
    }
    else
    {

    }
    return MEMORY[0x1E0DEE9D8];
  }
  return v39;
}

uint64_t _sSo6INTaskC15RemindersUICoreE18allIncompleteTasks5storeSayABGSo8REMStoreC_tFZ_0(void *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _sSo6INTaskC15RemindersUICoreE013allIncompleteB05storeSaySo11REMReminderCGSo8REMStoreC_tFZ_0(a1);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = sub_1B49081B0();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  v7 = MEMORY[0x1E0DEE9D8];
  result = sub_1B4907F28();
  if ((v2 & 0x8000000000000000) == 0)
  {
    sub_1B41DF50C(0, &qword_1ED4ED010);
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1B5E3C268](v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      ++v4;
      INTask.init(reminder:)(v5);
      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    while (v2 != v4);
    v6 = v7;
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B42EC2B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRecurrenceRuleModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1B42EC2F4()
{
  return sub_1B42EC30C();
}

BOOL sub_1B42EC30C()
{
  uint64_t v0;
  char v1;

  v0 = sub_1B49032F0();
  return (v1 & 1) == 0 && v0 != sub_1B4902FB4();
}

uint64_t sub_1B42EC350(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE308);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  v13 = sub_1B49037E8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B41EA51C(a1, (uint64_t)v12, &qword_1ED4EE300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1B41EA560((uint64_t)v12, &qword_1ED4EE300);
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v18 = a2[3];
    v19 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    v20 = sub_1B4903AD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    v21 = TTRTimeProvider.isDateInToday(_:calendar:now:)((uint64_t)v16, (uint64_t)v6, (uint64_t)v10, v18, v19);
    sub_1B41EA560((uint64_t)v10, &qword_1ED4EE300);
    sub_1B41EA560((uint64_t)v6, &qword_1ED4EE308);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v17 = v21 ^ 1;
  }
  return v17 & 1;
}

unint64_t sub_1B42EC55C()
{
  unint64_t result;

  result = qword_1EF09CFE8;
  if (!qword_1EF09CFE8)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for INTemporalEventTrigger.ValidationError, &type metadata for INTemporalEventTrigger.ValidationError);
    atomic_store(result, (unint64_t *)&qword_1EF09CFE8);
  }
  return result;
}

uint64_t _s15ValidationErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B42EC5EC + 4 * byte_1B49163EC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B42EC620 + 4 * byte_1B49163E7[v4]))();
}

uint64_t sub_1B42EC620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B42EC628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B42EC630);
  return result;
}

uint64_t sub_1B42EC63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B42EC644);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B42EC648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B42EC650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for INTemporalEventTrigger.ValidationError()
{
  return &type metadata for INTemporalEventTrigger.ValidationError;
}

void sub_1B42EC66C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B42EA7D4(*(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t TTRIDateIconGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t TTRIDateIconGenerator.init()()
{
  uint64_t v0;

  return v0;
}

Class TTRIDateIconGenerator.generateQuickBarDateIcons(for:)()
{
  Swift::String v0;
  Class isa;

  v0._countAndFlagsBits = sub_1B42EC6FC();
  isa = TTRIDateIconGenerator.generateQuickBarDateIcons(withText:)(v0).normal.super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_1B42EC6FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE310);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B4903BF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49037E8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v30 - v15;
  v16 = (void *)sub_1B4903254();
  sub_1B4903380();
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v31 = v10;
  if (v17 == 1)
  {
    _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
    sub_1B41EA560((uint64_t)v5, &qword_1ED4EE310);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1B4903BCC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = objc_msgSend(v18, sel_rem_dateWithDateComponents_timeZone_, v16, v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v2, 1, 1, v31);
    goto LABEL_10;
  }
  sub_1B49037B8();

  v21 = v11;
  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v23 = v31;
  v22(v2, v14, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v2, 0, 1, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v2, 1, v23) == 1)
  {
LABEL_10:
    sub_1B41EA560((uint64_t)v2, &qword_1ED4EE300);
    return 0;
  }
  v24 = v30;
  v22(v30, v2, v23);
  if (qword_1ED4ED428 != -1)
    swift_once();
  v25 = (id)qword_1ED4E9ED0;
  v26 = (void *)sub_1B4903788();
  v27 = objc_msgSend(v25, sel_stringFromDate_, v26);

  v28 = sub_1B4906A64();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v23);
  return v28;
}

Swift::tuple_normal_UIImage_highlighted_UIImage __swiftcall TTRIDateIconGenerator.generateQuickBarDateIcons(withText:)(Swift::String withText)
{
  id **v1;
  id *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  id v30;
  id *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  objc_class *v38;
  objc_class *v39;
  objc_class *v40;
  Swift::tuple_normal_UIImage_highlighted_UIImage result;
  _BYTE v42[16];
  _QWORD *v43;
  id *v44;
  id *v45;
  id *v46;
  __int128 v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  id (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  _QWORD v61[3];
  __int128 v62;
  __int128 v63;

  v2 = *v1;
  type metadata accessor for RemindersUICoreBundleLookupObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = (void *)sub_1B4906A34();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v7);
  v9 = v8;

  v10 = v4;
  v11 = (void *)sub_1B4906A34();
  v12 = objc_msgSend(v6, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  v50 = v10;
  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v12);
  v49 = v13;

  v14 = *MEMORY[0x1E0DC1420];
  v15 = (void *)objc_opt_self();
  v16 = v9;
  v17 = objc_msgSend(v15, sel_systemFontOfSize_weight_, 12.0, v14);
  v18 = objc_msgSend(v17, sel_fontDescriptor);
  v19 = objc_msgSend(v18, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

  if (v19)
  {
    v20 = objc_msgSend(v15, sel_fontWithDescriptor_size_, v19, 0.0);

    v17 = v20;
  }
  v21 = (void *)objc_opt_self();
  v48 = objc_msgSend(v21, sel_labelColor);
  v61[0] = v16;
  v61[1] = v17;
  v61[2] = v48;
  v62 = xmmword_1B4916570;
  v63 = xmmword_1B4916580;
  sub_1B487DE2C((uint64_t)v61, (uint64_t)&v51);
  v22 = v51;
  v47 = v52;
  v23 = v53;
  v24 = v54;
  objc_msgSend(v16, sel_size);
  v26 = v25;
  v28 = v27;
  v29 = swift_allocObject();
  *(double *)(v29 + 16) = v26;
  *(double *)(v29 + 24) = v28;
  v55 = v22;
  v56 = v47;
  v57 = v23;
  v58 = v24;
  v59 = sub_1B42EE010;
  v60 = v29;
  MEMORY[0x1E0C80A78](v29);
  v43 = v61;
  v44 = &v55;
  v45 = v2;
  *(_QWORD *)&v47 = sub_1B42EDE18((uint64_t)sub_1B42EE018, (uint64_t)v42, v26, v28);
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v22);
  v31 = v2;
  v32 = *MEMORY[0x1E0DC1140];
  v33 = objc_msgSend(v21, sel_blackColor);
  v34 = objc_msgSend(v30, sel_string);
  sub_1B4906A64();

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v35 = sub_1B4906BF0();
  swift_bridgeObjectRelease_n();
  objc_msgSend(v30, sel_addAttribute_value_range_, v32, v33, 0, v35);

  MEMORY[0x1E0C80A78](v36);
  v37 = v49;
  v43 = v49;
  v44 = (id *)v30;
  v45 = &v55;
  v46 = v31;
  v38 = (objc_class *)sub_1B42EDE18((uint64_t)sub_1B42EE01C, (uint64_t)v42, v26, v28);

  sub_1B428B77C(&v51);
  swift_release();
  v39 = (objc_class *)v47;
  v40 = v38;
  result.highlighted.super.isa = v40;
  result.normal.super.isa = v39;
  return result;
}

id sub_1B42ECEE8(CGContext *a1, id a2, void *a3, double *a4)
{
  objc_msgSend(a2, sel_drawAtPoint_, 0.0, 0.0);
  CGContextSetBlendMode(a1, kCGBlendModeDestinationOut);
  return objc_msgSend(a3, sel_drawWithRect_options_context_, 2, 0, a4[1], a4[2], a4[3], a4[4]);
}

UIImage __swiftcall TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(Swift::String withText)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD v27[6];
  __int128 v28;
  id v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  __int128 v34;
  __int128 v35;
  id v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  id (*v40)(uint64_t, uint64_t);
  uint64_t v41;

  v2 = *v1;
  type metadata accessor for RemindersUICoreBundleLookupObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = (void *)sub_1B4906A34();
  v6 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v6);
  v8 = v7;

  v9 = *MEMORY[0x1E0DC1428];
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_systemFontOfSize_weight_, 16.0, v9);
  v12 = objc_msgSend(v11, sel_fontDescriptor);
  v13 = objc_msgSend(v12, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

  if (v13)
  {
    v14 = objc_msgSend(v10, sel_fontWithDescriptor_size_, v13, 0.0);

    v11 = v14;
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v33[0] = v8;
  v33[1] = v11;
  v33[2] = v15;
  v34 = xmmword_1B4916590;
  v35 = xmmword_1B49165A0;
  sub_1B487DE2C((uint64_t)v33, (uint64_t)&v29);
  v16 = v29;
  v28 = v30;
  v17 = v31;
  v18 = v32;
  objc_msgSend(v8, sel_size);
  v20 = v19;
  v22 = v21;
  v23 = swift_allocObject();
  *(double *)(v23 + 16) = v20;
  *(double *)(v23 + 24) = v22;
  v36 = v16;
  v37 = v28;
  v38 = v17;
  v39 = v18;
  v40 = sub_1B42EE284;
  v41 = v23;
  MEMORY[0x1E0C80A78](v23);
  v27[2] = v33;
  v27[3] = &v36;
  v27[4] = v2;
  v24 = sub_1B42EDE18((uint64_t)sub_1B42EE018, (uint64_t)v27, v20, v22);
  v25 = objc_msgSend(v24, sel_imageWithRenderingMode_, 2);

  sub_1B428B77C(&v29);
  swift_release();
  return (UIImage)v25;
}

uint64_t TTRIDateIconGenerator.generateDueDateMenuIcon(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  double v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v39;
  id v40;
  _QWORD aBlock[6];
  id v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  _BYTE v47[40];

  v1 = v0;
  sub_1B42EC6FC();
  type metadata accessor for RemindersUICoreBundleLookupObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_1B4906A34();
  v5 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v5);
  v7 = v6;

  v8 = *MEMORY[0x1E0DC1428];
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 24.0, v8);
  v11 = objc_msgSend(v10, sel_fontDescriptor);
  v12 = objc_msgSend(v11, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

  if (v12)
  {
    v13 = objc_msgSend(v9, sel_fontWithDescriptor_size_, v12, 0.0);

    v10 = v13;
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  *(_QWORD *)&v46 = v7;
  *((_QWORD *)&v46 + 1) = v10;
  *(_QWORD *)v47 = v14;
  *(_OWORD *)&v47[8] = xmmword_1B49165B0;
  *(_OWORD *)&v47[24] = xmmword_1B49165C0;
  sub_1B487DE2C((uint64_t)&v46, (uint64_t)&v42);
  v15 = v42;
  v39 = v43;
  v16 = v44;
  v17 = v45;
  objc_msgSend(v7, sel_size);
  v19 = v18;
  v21 = v20;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v19;
  *(_QWORD *)(v22 + 24) = v21;
  swift_bridgeObjectRelease();
  v23 = (void *)objc_opt_self();
  v24 = (void *)sub_1B4906A34();
  v25 = swift_allocObject();
  v26 = *(_OWORD *)v47;
  *(_OWORD *)(v25 + 16) = v46;
  *(_OWORD *)(v25 + 32) = v26;
  *(_OWORD *)(v25 + 48) = *(_OWORD *)&v47[16];
  *(_QWORD *)(v25 + 64) = *(_QWORD *)&v47[32];
  *(_QWORD *)(v25 + 72) = v3;
  *(_QWORD *)(v25 + 80) = v1;
  *(_QWORD *)(v25 + 88) = v15;
  *(_OWORD *)(v25 + 96) = v39;
  *(_QWORD *)(v25 + 112) = v16;
  *(_QWORD *)(v25 + 120) = v17;
  *(_QWORD *)(v25 + 128) = sub_1B42EE048;
  *(_QWORD *)(v25 + 136) = v22;
  aBlock[4] = sub_1B42EE0A4;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B42EDA7C;
  aBlock[3] = &block_descriptor_12;
  v27 = _Block_copy(aBlock);
  v40 = v3;
  swift_retain();
  sub_1B428B754(&v42);
  swift_retain();
  v28 = v7;
  v29 = v10;
  v30 = v14;
  swift_release();
  v31 = objc_msgSend(v23, sel__dynamicAssetNamed_generator_, v24, v27);
  _Block_release(v27);

  if (v31)
  {
    v32 = (void *)objc_opt_self();
    v33 = v31;
    v34 = objc_msgSend(v32, sel_currentTraitCollection, v40);
    v35 = objc_msgSend(v33, sel_imageWithTraitCollection_, v34);

  }
  else
  {
    v35 = 0;
  }
  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v35);
  v37 = v36;

  sub_1B428B77C(&v42);
  swift_release();

  return v37;
}

uint64_t sub_1B42ED698(int a1, id a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD aBlock[6];
  id v33;
  _OWORD v34[2];
  uint64_t v35;

  if (a2
    && (v11 = objc_msgSend(a2, sel_traitCollection)) != 0
    && (v12 = v11, v13 = objc_msgSend(v11, sel_userInterfaceStyle), v12, v13 == (id)2))
  {
    v14 = 2;
  }
  else
  {
    v14 = 1;
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithUserInterfaceStyle_, v14);
  v33 = 0;
  v16 = *(_OWORD *)(a7 + 16);
  v34[0] = *(_OWORD *)a7;
  v34[1] = v16;
  v35 = *(_QWORD *)(a7 + 32);
  v17 = swift_allocObject();
  v18 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v17 + 32) = v18;
  *(_OWORD *)(v17 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v17 + 64) = *(_QWORD *)(a4 + 48);
  *(_QWORD *)(v17 + 72) = a5;
  *(_QWORD *)(v17 + 80) = &v33;
  *(_QWORD *)(v17 + 88) = a6;
  v19 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v17 + 96) = *(_OWORD *)a7;
  *(_OWORD *)(v17 + 112) = v19;
  *(_OWORD *)(v17 + 128) = *(_OWORD *)(a7 + 32);
  *(_QWORD *)(v17 + 144) = *(_QWORD *)(a7 + 48);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1B42EE128;
  *(_QWORD *)(v20 + 24) = v17;
  aBlock[4] = sub_1B429EBC8;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_20_0;
  v21 = _Block_copy(aBlock);
  v22 = a5;
  swift_retain();
  sub_1B428B754((id *)v34);
  swift_retain();
  swift_retain();
  sub_1B42EE14C(a4);
  swift_release();
  objc_msgSend(v15, sel_performAsCurrentTraitCollection_, v21);
  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v25 = v33;
    if (v33)
    {
      v25 = objc_msgSend(v33, sel_imageWithRenderingMode_, 1);
      v26 = v33;
    }
    else
    {
      v26 = 0;
    }
    v33 = v25;

    v27 = v33;
    v28 = v33;
    _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v27);
    v30 = v29;

    v31 = v33;
    swift_release();

    return v30;
  }
  return result;
}

void sub_1B42ED920(uint64_t a1, void *a2, void **a3, uint64_t *a4, uint64_t a5)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t (*)(), _BYTE *);
  uint64_t v24;
  void *v25;
  __int128 v26;
  _QWORD v27[3];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v10 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  v26 = *(_OWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(void **)a1;
  sub_1B42EE14C(a1);
  v14 = a2;
  v15 = (void *)sub_1B4906A34();
  v16 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v15, v14, 0);

  _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v16);
  v18 = v17;

  v19 = v18;
  v27[0] = v19;
  v27[1] = v10;
  v27[2] = v9;
  v28 = v26;
  v29 = v11;
  v30 = v12;
  v20 = v10;
  v21 = v9;
  v22 = *a4;
  v23 = *(uint64_t (**)(uint64_t (*)(), _BYTE *))(a5 + 40);
  v32 = v27;
  v33 = a5;
  v34 = v22;
  v24 = v23(sub_1B42EE018, v31);

  v25 = *a3;
  *a3 = (void *)v24;

}

id sub_1B42EDA7C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t (*v7)(void *, void *, void *);
  id v8;
  id v9;
  id v10;
  void *v11;

  v7 = *(uint64_t (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = (void *)v7(a2, a3, a4);
  swift_release();

  return v11;
}

uint64_t sub_1B42EDB0C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const __CFData *v15;
  CGDataProvider *v16;
  CGPDFDocument *v17;
  CGPDFDocument *v18;
  CGPDFPage *v19;
  void *v20;
  CGPDFPage *v21;
  CGPDFPage *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3838]), sel_initWithBounds_, 0.0, 0.0, a3, a4);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1B42EE198;
  *(_QWORD *)(v8 + 24) = v7;
  v25[4] = sub_1B421CD14;
  v25[5] = v8;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 1107296256;
  v25[2] = sub_1B42EDDE4;
  v25[3] = &block_descriptor_29_0;
  v9 = _Block_copy(v25);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_PDFDataWithActions_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = sub_1B4903710();
    v14 = v13;

    v15 = (const __CFData *)sub_1B49036F8();
    v16 = CGDataProviderCreateWithCFData(v15);

    if (v16)
    {
      v17 = CGPDFDocumentCreateWithProvider(v16);
      if (v17)
      {
        v18 = v17;
        v19 = CGPDFDocumentGetPage(v17, 1uLL);
        if (v19)
        {
          v20 = (void *)objc_opt_self();
          v21 = v19;
          v19 = (CGPDFPage *)objc_msgSend(v20, sel__imageWithCGPDFPage_, v21);

        }
        else
        {

        }
      }
      else
      {

        v19 = 0;
      }
    }
    else
    {
      v19 = 0;
    }
    v22 = v19;
    _sSo7UIImageC15RemindersUICoreE22transformOptionalValueyA2BSgFZ_0(v19);
    v24 = v23;

    sub_1B41EB4E0(v12, v14);
    swift_release();

    return v24;
  }
  return result;
}

void sub_1B42EDD80(void *a1, void (*a2)(void))
{
  id v4;

  objc_msgSend(a1, sel_beginPage);
  v4 = objc_msgSend(a1, sel_CGContext);
  a2();

}

void sub_1B42EDDE4(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id sub_1B42EDE18(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id result;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  result = objc_msgSend((id)objc_opt_self(), sel__currentTraitCollection);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend((id)objc_opt_self(), sel_formatForTraitCollection_, result);

    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v10, a3, a4);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    *(_QWORD *)(v12 + 24) = a2;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = sub_1B42EE210;
    *(_QWORD *)(v13 + 24) = v12;
    v16[4] = sub_1B42EE264;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1B42EDDE4;
    v16[3] = &block_descriptor_39_0;
    v14 = _Block_copy(v16);
    swift_retain();
    swift_release();
    v15 = objc_msgSend(v11, sel_imageWithActions_, v14);

    _Block_release(v14);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((v10 & 1) == 0)
      return v15;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t TTRIDateIconGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TTRIDateIconGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B42EE000()
{
  return swift_deallocObject();
}

id sub_1B42EE010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B42EDE18(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

id sub_1B42EE01C(CGContext *a1)
{
  uint64_t v1;

  return sub_1B42ECEE8(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(double **)(v1 + 32));
}

uint64_t sub_1B42EE028()
{
  return swift_deallocObject();
}

uint64_t sub_1B42EE038()
{
  return swift_deallocObject();
}

uint64_t sub_1B42EE048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B42EDB0C(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

uint64_t sub_1B42EE050()
{
  id *v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B42EE0A4(int a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B42ED698(a1, a2, a3, v3 + 16, *(void **)(v3 + 72), *(_QWORD *)(v3 + 80), v3 + 88);
}

uint64_t type metadata accessor for TTRIDateIconGenerator()
{
  return objc_opt_self();
}

uint64_t sub_1B42EE0D4()
{
  id *v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B42EE128()
{
  uint64_t v0;

  sub_1B42ED920(v0 + 16, *(void **)(v0 + 72), *(void ***)(v0 + 80), *(uint64_t **)(v0 + 88), v0 + 96);
}

uint64_t sub_1B42EE13C()
{
  return swift_deallocObject();
}

uint64_t sub_1B42EE14C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(id *)a1;
  v5 = v2;
  v6 = v3;
  return a1;
}

uint64_t sub_1B42EE188()
{
  return swift_deallocObject();
}

void sub_1B42EE198(void *a1)
{
  uint64_t v1;

  sub_1B42EDD80(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1B42EE1A0()
{
  return swift_deallocObject();
}

id sub_1B42EE1B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  objc_msgSend(**(id **)(v0 + 16), sel_drawAtPoint_, 0.0, 0.0);
  return objc_msgSend(*(id *)v1, sel_drawWithRect_options_context_, 2, 0, *(double *)(v1 + 8), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1B42EE200()
{
  return swift_deallocObject();
}

void sub_1B42EE210(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = objc_msgSend(a1, sel_CGContext);
  v2();

}

uint64_t sub_1B42EE254()
{
  return swift_deallocObject();
}

uint64_t sub_1B42EE264(uint64_t a1)
{
  uint64_t v1;

  return sub_1B4691D9C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B42EE288(uint64_t a1)
{
  sub_1B4906EA8();
  return a1;
}

uint64_t sub_1B42EE2B0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1B49071E4();
  if (!v20)
    return sub_1B4906E30();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1B49067F4();
  v34 = sub_1B4907F64();
  sub_1B4907F1C();
  v37 = v8;
  result = sub_1B49071C0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1B4907268();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_1B4907F4C();
      result = sub_1B4907208();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B42EE5A0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1B42EE730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09D008);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09D008);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

void sub_1B42EE82C()
{
  swift_getTupleTypeMetadata2();
  sub_1B4906E30();
  swift_getAssociatedConformanceWitness();
  sub_1B4906854();
  swift_allocObject();
  sub_1B42FA02C();
}

uint64_t sub_1B42EE8AC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void TTRMutableTreeStorage.numberOfChildren(of:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = sub_1B4907B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  v21 = v3[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v14);
  v17 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    v18 = v3[11];
    v19 = v3[13];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v22 = v4;
    v23 = v18;
    v24 = v21;
    v25 = v19;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v4, v21);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v12, AssociatedTypeWitness);
  sub_1B42EEB4C();
}

void sub_1B42EEA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    v8 = *(_QWORD *)(v6 + 88);
    v9 = *(_QWORD *)(v6 + 104);
    *(_QWORD *)(v7 - 136) = v1;
    *(_QWORD *)(v7 - 128) = v8;
    *(_QWORD *)(v7 - 120) = v3;
    *(_QWORD *)(v7 - 112) = v9;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v2);
  JUMPOUT(0x1B42EEB28);
}

void sub_1B42EEB4C()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageNode();
}

uint64_t sub_1B42EEBD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v8;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x1B5E3AC6C](&v8, v1, v2, v3, a1, AssociatedConformanceWitness);
  v6 = v8;
  swift_endAccess();
  return v6;
}

void TTRMutableTreeStorage.child(_:of:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v21[1] = a1;
  v23 = a3;
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v21[0] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - v11;
  v13 = v5[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v24 = (char *)v21 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a2, v9, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_beginAccess();
    v19 = v5[11];
    v20 = v5[13];
    v26 = v6;
    v27 = v19;
    v28 = v13;
    v29 = v20;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v6, v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v15, AssociatedTypeWitness);
  sub_1B42EEB4C();
}

void sub_1B42EEE78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1)
  {
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    v5 = *(_QWORD *)(v2 + 88);
    v6 = *(_QWORD *)(v2 + 104);
    *(_QWORD *)(v4 - 144) = v1;
    *(_QWORD *)(v4 - 136) = v5;
    *(_QWORD *)(v4 - 128) = v3;
    *(_QWORD *)(v4 - 120) = v6;
    type metadata accessor for TTRTreeStorageNode();
  }
  *(_QWORD *)(v4 - 144) = 0;
  *(_QWORD *)(v4 - 136) = 0xE000000000000000;
  sub_1B4907E50();
  v7 = *(_QWORD *)(v4 - 136);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v4 - 136) = v7;
  sub_1B4906B78();
  sub_1B4908348();
  sub_1B4906B78();
  sub_1B4908144();
  __break(1u);
}

void sub_1B42EEED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1B4906ED8();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 - 112) + *(_QWORD *)(**(_QWORD **)(v3 - 112) + 120);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v0);
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(*(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 152));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v5, v0);
  JUMPOUT(0x1B42EEF54);
}

void TTRMutableTreeStorage.children(of:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_1B4907B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = *(_QWORD *)(v3 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v18 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v14);
  v17 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B42FA128();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v4, v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v12, v20);
  sub_1B42EEB4C();
}

void sub_1B42EF1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    sub_1B42FA128();
  }
  *(_QWORD *)(v1 - 104) = 0;
  *(_QWORD *)(v1 - 96) = 0xE000000000000000;
  sub_1B4907E50();
  v2 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 104);
  *(_QWORD *)(v1 - 96) = v2;
  sub_1B4906B78();
  sub_1B4908348();
  sub_1B4906B78();
  sub_1B4908144();
  __break(1u);
}

void sub_1B42EF204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  JUMPOUT(0x1B42EF220);
}

void TTRMutableTreeStorage.itemsFromNodes(_:)()
{
  sub_1B42FA128();
}

void TTRMutableTreeStorage.parent(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  __n128 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 24))(v2, v1, v4);
  sub_1B42EEB4C();
}

uint64_t sub_1B42EF384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  if (a1 && (Strong = swift_weakLoadStrong(), swift_release(), Strong))
  {
    v8 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 120);
    swift_beginAccess();
    v9 = *(_QWORD *)(v1 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v8, v1);
    swift_release();
    v10 = 0;
  }
  else
  {
    v9 = *(_QWORD *)(v1 - 8);
    v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, v10, 1, v1);
}

uint64_t sub_1B42EF43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t *v40;
  unint64_t v41;
  uint64_t result;
  uint64_t i;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v46 = a3;
  v5 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&i - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&i - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB518);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&i - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&i - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&i - v19;
  v47 = 0;
  sub_1B41EA51C(a1, (uint64_t)v14, &qword_1ED4EB518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_1B41EA560((uint64_t)v14, &qword_1ED4EB518);
    swift_beginAccess();
    v21 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B42EFD88(v21, MEMORY[0x1E0DEE9D8], &v47, a2, v46);
    return swift_bridgeObjectRelease();
  }
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v17);
  sub_1B41EA5FC((uint64_t)v14, type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1B41EA59C((uint64_t)v17, (uint64_t)v20, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v22 = sub_1B47669F8((uint64_t)v20);
  if (v22)
  {
    v23 = v22;
    v44 = v20;
    v45 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED0F0);
    v24 = *(_QWORD *)(v6 + 72);
    v25 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1B4911D70;
    v27 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 120);
    swift_beginAccess();
    sub_1B42FABFC(v27, v26 + v25);
    swift_retain();
    Strong = swift_weakLoadStrong();
    for (i = v23; Strong; Strong = swift_weakLoadStrong())
    {
      v29 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 120);
      swift_beginAccess();
      sub_1B42FABFC(v29, (uint64_t)v11);
      v31 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      if (v31 >= v30 >> 1)
        v26 = sub_1B4294124(v30 > 1, v31 + 1, 1, v26);
      *(_QWORD *)(v26 + 16) = v31 + 1;
      sub_1B41EA59C((uint64_t)v11, v26 + v25 + v31 * v24, type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
    }
    swift_release();
    v32 = *(_QWORD *)(v26 + 16);
    v33 = v45;
    if (v32 < 2)
    {
LABEL_14:
      v40 = (unint64_t *)(i + *(_QWORD *)(*(_QWORD *)i + 136));
      swift_beginAccess();
      v41 = *v40;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B42EFD88(v41, v26, &v47, v33, v46);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B41EA5FC((uint64_t)v44, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      return swift_bridgeObjectRelease();
    }
    v34 = v32 - 1;
    v35 = v26 + v25;
    v36 = v26 + v25 + v24 * (v32 - 1);
    v37 = 1;
    while (1)
    {
      v38 = *(_QWORD *)(v26 + 16);
      if (v37 - 1 >= v38)
        break;
      sub_1B42FABFC(v35, (uint64_t)v8);
      if (v34 >= v38)
        goto LABEL_17;
      sub_1B42FAC9C(v36, v35);
      if (v34 >= *(_QWORD *)(v26 + 16))
        goto LABEL_18;
      sub_1B42FACE0((uint64_t)v8, v36);
      --v34;
      v36 -= v24;
      v35 += v24;
      if (v37++ >= (uint64_t)v34)
        goto LABEL_14;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  result = sub_1B4908144();
  __break(1u);
  return result;
}

void TTRMutableTreeStorage.traverseDescendants(of:using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v25 = a3;
  v26 = a2;
  v24 = a1;
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 80);
  v6 = sub_1B4907B14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - v8;
  v10 = *(_QWORD *)(v4 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v23 - v17;
  v28 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v24, v6, v16);
  v19 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = v27;
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v22 = sub_1B4906E30();
    sub_1B42F00DC(v21, v22, (uint64_t)&v28, v26, v25);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v5, v10);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v5);
  v24 = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v14, AssociatedTypeWitness);
  v23[1] = v18;
  sub_1B42EEB4C();
}

uint64_t sub_1B42EFCD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v6 + *(_QWORD *)(v5 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_1B4906EA8();
  return sub_1B4906E78();
}

uint64_t sub_1B42EFD88(unint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE *v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v32 = a3;
  v33 = a5;
  v29 = a2;
  v30 = a4;
  v36 = *MEMORY[0x1E0C80C00];
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_21:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v9 = sub_1B49081B0();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v9)
    {
LABEL_3:
      v31 = a1 & 0xC000000000000001;
      v10 = 4;
      v27 = xmmword_1B4911D70;
      do
      {
        v11 = v10 - 4;
        if (v31)
        {
          v12 = MEMORY[0x1B5E3C268](v10 - 4, a1);
          v13 = v10 - 3;
          if (__OFADD__(v11, 1))
            goto LABEL_20;
        }
        else
        {
          v12 = *(_QWORD *)(a1 + 8 * v10);
          swift_retain();
          v13 = v10 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v14 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 120);
        swift_beginAccess();
        sub_1B42FABFC(v14, (uint64_t)v8);
        v15 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 128);
        swift_beginAccess();
        v16 = *(_BYTE *)(v15 + 8);
        v34 = *(_QWORD *)v15;
        v35 = v16;
        v17 = v32;
        sub_1B4780B14((uint64_t)v8);
        sub_1B41EA5FC((uint64_t)v8, type metadata accessor for TTRAccountsListsViewModel.Item);
        if (*v17 == 1)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        v18 = a1;
        v19 = (_QWORD *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 136));
        swift_beginAccess();
        if (*v19 >> 62)
        {
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v25 = sub_1B49081B0();
          swift_bridgeObjectRelease();
          if (!v25)
          {
LABEL_4:
            swift_release();
            goto LABEL_5;
          }
        }
        else if (!*(_QWORD *)((*v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_4;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED0F0);
        v20 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v27;
        sub_1B42FABFC(v14, v21 + v20);
        v34 = v29;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B4234608(v21);
        v22 = v34;
        v23 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v24 = v32;
        sub_1B42EFD88(v23, v22, v32, v30, v33);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*v24 & 1) != 0)
          return swift_bridgeObjectRelease();
LABEL_5:
        ++v10;
        a1 = v18;
      }
      while (v13 != v9);
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1B42F00DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[27];
  __int128 v15;

  v14[12] = a4;
  v14[13] = a5;
  v14[10] = a3;
  v14[11] = a2;
  v14[5] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 88) - 8);
  MEMORY[0x1E0C80A78](a1);
  v14[4] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[9] = *(_QWORD *)(*(_QWORD *)(v7 + 80) - 8);
  MEMORY[0x1E0C80A78](v8);
  v14[3] = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[17] = v10;
  v14[8] = v11;
  v14[25] = v11;
  v14[26] = v12;
  v14[6] = v12;
  v15 = *(_OWORD *)(v13 + 96);
  type metadata accessor for TTRTreeStorageNode();
}

void TTRMutableTreeStorage.item(withID:)()
{
  sub_1B42EEB4C();
}

uint64_t sub_1B42F04CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 56))(v1, 1, 1);
  v3 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 120);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
}

void TTRMutableTreeStorage.auxiliaryData(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  __n128 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 24))(v2, v1, v4);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F061C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v4 + 88) - 8) + 56))(v1, 1, 1, *(_QWORD *)(v4 + 88));
  v7 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
  swift_beginAccess();
  v8 = *(_QWORD *)(v4 + 88);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v7, v8);
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v1, 0, 1, v8);
}

void TTRMutableTreeStorage.setAuxiliaryData(_:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  __n128 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 24))(v2, v1, v4);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F0770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  if (a1)
  {
    v8 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 88) - 8) + 24))(v8, v1);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void TTRMutableTreeStorage.editAuxiliaryData(for:using:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  __n128 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 24))(v2, v1, v4);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F0898(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (a1)
  {
    v7 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
    swift_beginAccess();
    v1(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void TTRMutableTreeStorage.insertNewItem(with:in:at:)()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F098C()
{
  swift_getAssociatedConformanceWitness();
  sub_1B49067E8();
  sub_1B42F0A24();
}

void sub_1B42F09CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1B42F0B68(a1, v2, v1);
}

uint64_t sub_1B42F09E0(char a1)
{
  if ((a1 & 1) != 0)
    sub_1B42F0F5C();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1B42F0A24()
{
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F0A64()
{
  sub_1B49067F4();
  type metadata accessor for TTRTreeStorageNodeValue();
}

void sub_1B42F0A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1B4908330();
  v4 = *(_QWORD *)(a1 - 8);
  swift_allocObject();
  v5 = sub_1B4906DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  sub_1B4906EA8();
  sub_1B42F398C(v5, (uint64_t)&v7, v1);
}

void sub_1B42F0B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a3;
  v23 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 96);
  v7 = *(_QWORD *)(*v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v22[2] = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v14);
  v22[0] = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v22 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a2, v9, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v29 = v23;
    swift_beginAccess();
    v20 = *(_QWORD *)(v5 + 88);
    v21 = *(_QWORD *)(v5 + 104);
    swift_retain();
    v25 = v7;
    v26 = v20;
    v27 = v6;
    v28 = v21;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v12, v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  sub_1B42EEB4C();
}

void sub_1B42F0D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 184) + 8))(v6, *(_QWORD *)(v7 - 176));
  v9 = v3;
  if (a1)
  {
    sub_1B42CB5CC(v5);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
    JUMPOUT(0x1B42F0DA0);
  }
  if (qword_1EF097C70 != -1)
    swift_once();
  v10 = sub_1B49058F4();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF09D008);
  v11 = *(_QWORD *)(v7 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v11, v2, v1);
  v12 = sub_1B49058E8();
  v13 = sub_1B4907388();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_QWORD *)(v7 - 152) = v15;
    *(_QWORD *)(v7 - 144) = v15;
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)(v7 - 160) = v14 + 4;
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v1, v4);
    *(_QWORD *)(v7 - 112) = sub_1B41EF7C8(v16, v17, (uint64_t *)(v7 - 144));
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v18(v11, v1);
    _os_log_impl(&dword_1B41C2000, v12, v13, "Cannot find node {item: %s}", v14, 0xCu);
    v19 = *(_QWORD *)(v7 - 152);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v19, -1, -1);
    MEMORY[0x1B5E3D7E0](v14, -1, -1);

  }
  else
  {

    v18 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v18(v11, v1);
  }
  v18(v2, v1);
  JUMPOUT(0x1B42F0DA4);
}

void sub_1B42F0F5C()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  type metadata accessor for TTRTreeStorageNode();
}

uint64_t sub_1B42F0FE8()
{
  swift_getAssociatedConformanceWitness();
  sub_1B49068CC();
  sub_1B490689C();
  return swift_endAccess();
}

void TTRMutableTreeStorage.insertNewItems(with:in:at:)()
{
  type metadata accessor for TTRTreeStorageNodeValue();
}

uint64_t sub_1B42F10A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _BYTE v28[96];

  *(_QWORD *)(v2 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v2 - 152) = &v28[-v4];
  *(_QWORD *)(v2 - 120) = swift_getTupleTypeMetadata2();
  v5 = sub_1B4907B14();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v28[-v6];
  v8 = sub_1B4906EA8();
  v9 = sub_1B4903BC0();
  v10 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v8);
  v11 = sub_1B42FADC0((unint64_t *)&qword_1ED4E9F08, MEMORY[0x1E0CB13D0]);
  *(_QWORD *)(v2 - 112) = v8;
  *(_QWORD *)(v2 - 104) = v9;
  *(_QWORD *)(v2 - 96) = v10;
  *(_QWORD *)(v2 - 88) = v11;
  v12 = sub_1B4907EB0();
  *(_QWORD *)(v2 - 192) = v12;
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v2 - 200) = &v28[-v13];
  *(_QWORD *)(v2 - 128) = v8;
  *(_QWORD *)(v2 - 112) = v8;
  *(_QWORD *)(v2 - 104) = v9;
  *(_QWORD *)(v2 - 96) = v10;
  *(_QWORD *)(v2 - 88) = v11;
  *(_QWORD *)(v2 - 184) = v11;
  v14 = sub_1B4907EA4();
  *(_QWORD *)(v2 - 168) = v14;
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = &v28[-v16];
  v18 = v1;
  v19 = v1;
  v20 = a1;
  v21 = MEMORY[0x1B5E3B1F4](v19, a1, v15);
  if (v21 != sub_1B4903B18())
  {
    if (qword_1EF097C70 != -1)
      swift_once();
    v22 = sub_1B49058F4();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EF09D008);
    v23 = sub_1B49058E8();
    v24 = sub_1B4907394();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1B41C2000, v23, v24, "newItems and indexes have different count", v25, 2u);
      MEMORY[0x1B5E3D7E0](v25, -1, -1);
    }

  }
  *(_QWORD *)(v2 - 112) = v18;
  sub_1B4908408();
  sub_1B4907E8C();
  v26 = *(_QWORD *)(v2 - 168);
  *(_QWORD *)(v2 - 128) = v17;
  sub_1B4907E98();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v2 - 120) - 8) + 48))(v7, 1, *(_QWORD *)(v2 - 120)) != 1)
  {
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(*(_QWORD *)(v2 - 176) + 32))(*(_QWORD *)(v2 - 152), v7, v20);
    TTRMutableTreeStorage.insertNewItem(with:in:at:)();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(*(_QWORD *)(v2 - 128), v26);
}

void TTRMutableTreeStorage.deleteItems(at:in:)(uint64_t a1, uint64_t a2)
{
  sub_1B42F1474(a1, a2);
}

uint64_t sub_1B42F1420(uint64_t result)
{
  if (result)
    type metadata accessor for TTRTreeStorageNode();
  return result;
}

void sub_1B42F1474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v25[3] = a1;
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = sub_1B4907B14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v25 - v8;
  v26 = v4[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v25[1] = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v25[2] = (char *)v25 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v25 - v16;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v25 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a2, v6, v19);
  v22 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1B4903BC0();
    v23 = v4[11];
    v24 = v4[13];
    v27 = v5;
    v28 = v23;
    v29 = v26;
    v30 = v24;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(uint64_t))(v26 + 24))(v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v5);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v21, v17, AssociatedTypeWitness);
  sub_1B42EEB4C();
}

void sub_1B42F16D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;

  if (a1)
  {
    sub_1B4903BC0();
    v7 = *(_QWORD *)(v1 + 88);
    v8 = *(_QWORD *)(v1 + 104);
    *(_QWORD *)(v6 - 120) = v4;
    *(_QWORD *)(v6 - 112) = v7;
    *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 136);
    *(_QWORD *)(v6 - 96) = v8;
    type metadata accessor for TTRTreeStorageNode();
  }
  if (qword_1EF097C70 != -1)
    swift_once();
  v9 = sub_1B49058F4();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF09D008);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v11 = *(_QWORD *)(v6 - 160);
  v10(v11, v2, v3);
  v12 = sub_1B49058E8();
  v13 = sub_1B4907388();
  if (os_log_type_enabled(v12, v13))
  {
    *(_QWORD *)(v6 - 144) = v5;
    *(_QWORD *)(v6 - 136) = v2;
    v14 = v11;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)(v6 - 120) = v16;
    *(_DWORD *)v15 = 136315138;
    v10(*(_QWORD *)(v6 - 168), v14, v3);
    v17 = sub_1B4906A94();
    *(_QWORD *)(v6 - 128) = sub_1B41EF7C8(v17, v18, (uint64_t *)(v6 - 120));
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 144) + 8);
    v19(v14, v3);
    _os_log_impl(&dword_1B41C2000, v12, v13, "Cannot find node {itemID: %s}", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v16, -1, -1);
    MEMORY[0x1B5E3D7E0](v15, -1, -1);

    v20 = *(_QWORD *)(v6 - 136);
  }
  else
  {

    v19 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v19(v11, v3);
    v20 = v2;
  }
  v19(v20, v3);
}

void sub_1B42F1954(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 96);
  v7 = *(_QWORD *)(*v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v16 - v10, a2, AssociatedTypeWitness, v11);
    v16 = a1;
    swift_beginAccess();
    v12 = *(_QWORD *)(v5 + 88);
    v13 = *(_QWORD *)(v5 + 104);
    swift_retain();
    v17 = v7;
    v18 = v12;
    v19 = v6;
    v20 = v13;
    type metadata accessor for TTRTreeStorageNode();
  }
  swift_beginAccess();
  v14 = *(_QWORD *)(v5 + 88);
  v15 = *(_QWORD *)(v5 + 104);
  v17 = v7;
  v18 = v14;
  v19 = v6;
  v20 = v15;
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F1AB0()
{
  swift_getAssociatedConformanceWitness();
  sub_1B49068CC();
  sub_1B4906830();
  swift_endAccess();
  swift_release();
  JUMPOUT(0x1B42F1B08);
}

uint64_t TTRMutableTreeStorage.delete(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v21[2];

  v21[0] = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = sub_1B4907B14();
  v8 = type metadata accessor for TTRParentAndChildIndexes(255, v5, v6, v7);
  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - v11;
  sub_1B42F9F90(v4, v4);
  v13 = *(_QWORD *)(v4 - 8);
  swift_allocObject();
  v14 = sub_1B4906DD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, a1, v4);
  sub_1B4906EA8();
  v16 = TTRMutableTreeStorage.delete(_:)(v14);
  swift_bridgeObjectRelease();
  v21[1] = v16;
  v17 = sub_1B4906EA8();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF50], v17);
  sub_1B490722C();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v21[0], 1, 1, TupleTypeMetadata2);
  }
  else
  {
    TTRParentAndChildIndexes.first.getter(v8, v21[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v8);
  }
}

uint64_t TTRMutableTreeStorage.delete(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  uint64_t AssociatedConformanceWitness;
  uint64_t v51;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_1B4907B14();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v37 - v6;
  v7 = sub_1B4903BC0();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v5;
  v11 = type metadata accessor for TTRParentAndChildIndexes(0, v5, v9, v10);
  v48 = *(_QWORD *)(v11 - 8);
  v38 = *(_QWORD *)(v48 + 64);
  v12 = MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v37 - v13;
  v14 = MEMORY[0x1B5E3B1F4](a1, v4, v12);
  v47 = v1;
  if (v14 < 2)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  else
  {
    *(_QWORD *)&v40 = &v37;
    v51 = a1;
    MEMORY[0x1E0C80A78](v14);
    v15 = *(_QWORD *)(v3 + 88);
    *(&v37 - 4) = v4;
    *(&v37 - 3) = v15;
    v39 = *(_OWORD *)(v3 + 96);
    *((_OWORD *)&v37 - 1) = v39;
    v16 = sub_1B4906EA8();
    swift_getAssociatedTypeWitness();
    *(_QWORD *)&v39 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v16);
    swift_getAssociatedConformanceWitness();
    v17 = sub_1B4906CBC();
    v51 = a1;
    MEMORY[0x1E0C80A78](v17);
    *(&v37 - 2) = (uint64_t)v47;
    *(&v37 - 1) = v18;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF60], v16);
    a1 = sub_1B4907EF8();
    swift_bridgeObjectRelease();
  }
  v51 = a1;
  v19 = sub_1B4906EA8();
  swift_getTupleTypeMetadata2();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v19);
  v20 = sub_1B4906CF8();
  v21 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v21);
  v22 = *(_QWORD *)(v3 + 88);
  *(&v37 - 4) = v4;
  *(&v37 - 3) = v22;
  v40 = *(_OWORD *)(v3 + 96);
  *((_OWORD *)&v37 - 1) = v40;
  KeyPath = (_QWORD *)swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  v24 = sub_1B4907B14();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEE990], v24, &AssociatedConformanceWitness);
  v27 = static TTRParentAndChildIndexes.grouped<A>(_:byParentProperty:)(v20, KeyPath, v25, v26);
  swift_release();
  swift_bridgeObjectRelease();
  v28 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (MEMORY[0x1B5E3B224](v28, v11))
  {
    *(_QWORD *)&v39 = &v49[*(int *)(v11 + 28)];
    *(_QWORD *)&v40 = v27;
    v30 = (uint64_t)v41;
    v29 = v42;
    v31 = v43;
    v32 = v45;
    v33 = sub_1B4906E48();
    sub_1B4906DDC();
    if ((v33 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v49, v27 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80)), v11);
      goto LABEL_7;
    }
    result = sub_1B4907EC8();
    if (v38 == 8)
    {
      v51 = result;
      (*(void (**)(char *, uint64_t *, uint64_t))(v48 + 16))(v49, &v51, v11);
      swift_unknownObjectRelease();
LABEL_7:
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 16))(v30, v39, v31);
      v34 = (uint64_t)v44;
      v35 = v49;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v44, v49, v46);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v11);
      TTRMutableTreeStorage.deleteItems(at:in:)(v30, v34);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v27;
  }
  return result;
}

void sub_1B42F2278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  __n128 v5;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 24))(v3, v2, v5);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F2400(uint64_t a1, _BYTE *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v13 - v8;
  sub_1B42CB410(v10);
  swift_getAssociatedConformanceWitness();
  v11 = sub_1B4907118();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  if ((v11 & 1) != 0)
  {
    *a4 = 1;
    *a2 = 1;
  }
  return result;
}

void TTRMutableTreeStorage.moveItem(at:in:to:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v5 = (uint64_t)v4;
  v75 = a4;
  v64 = a3;
  v68 = a1;
  v7 = *v4;
  v8 = sub_1B4903BC0();
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v7 + 80);
  v11 = sub_1B4907B14();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v59 - v16;
  MEMORY[0x1E0C80A78](v18);
  v63 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v65 = (char *)v59 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v59 - v23;
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v59 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v72 = a2;
  v30 = a2;
  v32 = v31;
  v67 = v29;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v17, v30, v11, v26);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v33 = v66(v17, 1, v10);
  v73 = v5;
  v74 = v7;
  if (v33 == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    v62 = v12;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v28, v17, v10);
    v76 = v5;
    v34 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v7);
    if (TTRTreeContentsQueryable.contains(_:)((uint64_t)v28, v7, v34))
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v10);
    }
    else
    {
      if (qword_1EF097C70 != -1)
        swift_once();
      v35 = sub_1B49058F4();
      __swift_project_value_buffer(v35, (uint64_t)qword_1EF09D008);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v24, v28, v10);
      v36 = sub_1B49058E8();
      v37 = sub_1B4907388();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v61 = v38;
        v39 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v76 = v60;
        *(_DWORD *)v39 = 136315138;
        v59[1] = v39 + 4;
        v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v74 + 96) + 32))(v10);
        v77 = sub_1B41EF7C8(v40, v41, &v76);
        sub_1B4907B68();
        swift_bridgeObjectRelease();
        v42 = *(void (**)(char *, uint64_t))(v32 + 8);
        v42(v24, v10);
        _os_log_impl(&dword_1B41C2000, v36, (os_log_type_t)v61, "Invalid oldParent {oldParent: %s}", v39, 0xCu);
        v43 = v60;
        swift_arrayDestroy();
        MEMORY[0x1B5E3D7E0](v43, -1, -1);
        MEMORY[0x1B5E3D7E0](v39, -1, -1);

      }
      else
      {

        v42 = *(void (**)(char *, uint64_t))(v32 + 8);
        v42(v24, v10);
      }
      v42(v28, v10);
    }
    v12 = v62;
  }
  v67(v14, v75, v11);
  if (v66(v14, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v44 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v65, v14, v10);
    v45 = v74;
    v76 = v73;
    v46 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v74);
    if (TTRTreeContentsQueryable.contains(_:)(v44, v45, v46))
    {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v44, v10);
    }
    else
    {
      if (qword_1EF097C70 != -1)
        swift_once();
      v47 = sub_1B49058F4();
      __swift_project_value_buffer(v47, (uint64_t)qword_1EF09D008);
      v48 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v63, v44, v10);
      v49 = sub_1B49058E8();
      v50 = sub_1B4907388();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        v52 = swift_slowAlloc();
        v76 = v52;
        *(_DWORD *)v51 = 136315138;
        v67 = (void (*)(char *, uint64_t, uint64_t))(v51 + 4);
        v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v45 + 96) + 32))(v10);
        v77 = sub_1B41EF7C8(v53, v54, &v76);
        sub_1B4907B68();
        swift_bridgeObjectRelease();
        v55 = *(void (**)(char *, uint64_t))(v32 + 8);
        v55(v63, v10);
        _os_log_impl(&dword_1B41C2000, v49, v50, "Invalid newParent {newParent: %s}", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B5E3D7E0](v52, -1, -1);
        MEMORY[0x1B5E3D7E0](v51, -1, -1);

        v55(v65, v10);
      }
      else
      {

        v56 = *(void (**)(char *, uint64_t))(v32 + 8);
        v56(v48, v10);
        v56((char *)v44, v10);
      }
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED128);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v57 + 32) = v68;
  v76 = v57;
  sub_1B42FADC0((unint64_t *)&qword_1ED4E9F18, MEMORY[0x1E0CB13E8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE30);
  sub_1B41E1C74((unint64_t *)&qword_1ED4ECE38, &qword_1ED4ECE30, MEMORY[0x1E0DEAF38]);
  v58 = (uint64_t)v69;
  sub_1B4907CC4();
  sub_1B42F1474(v58, v72);
}

void TTRMutableTreeStorage.replace(_:with:replacesChildren:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[20];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  LODWORD(v13) = a3;
  v14 = a2;
  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v12[15] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12[19] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12[12] = (char *)v12 - v8;
  v9 = v4[12];
  swift_getAssociatedTypeWitness();
  v10 = v4[11];
  v11 = v4[13];
  v15 = v5;
  v16 = v10;
  v17 = v9;
  v18 = v11;
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F398C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[32];
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a3;
  v20 = a2;
  v4 = v3[12];
  v5 = v3[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = &v13[-v6];
  v18 = *(_QWORD *)(v3[11] - 8);
  MEMORY[0x1E0C80A78](v7);
  v17 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9);
  v15 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = v3;
  v11 = v3[13];
  v24 = v5;
  v25 = v4;
  v27 = v5;
  v28 = v12;
  v21 = v12;
  v29 = v4;
  v30 = v11;
  type metadata accessor for TTRTreeStorageNodeValue();
}

void sub_1B42F405C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v2 = (char *)&v4 - v1;
  sub_1B42CB410(v3);
  sub_1B42F1954(0, (uint64_t)v2);
}

uint64_t sub_1B42F40E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[10];

  v9[6] = a4;
  type metadata accessor for TTRRelativeInsertionPosition(255, *(_QWORD *)(*(_QWORD *)v4 + 80), a2, a3);
  v6 = sub_1B4907B14();
  v9[3] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9[5] = (char *)v9 - v7;
  v8 = sub_1B4907B14();
  v9[4] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  TTRMutableTreeStorage.numberOfChildren(of:)(a1);
}

uint64_t sub_1B42F41D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  uint64_t v26;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v14 = result;
    *(_QWORD *)(v13 - 144) = v4;
    v15 = v8[12];
    v16 = type metadata accessor for TTRTreeLocation(0, v9, v15, a4);
    v17 = *(_QWORD *)(v12 + *(int *)(v16 + 36));
    if (v17 < 0 || v14 < v17)
    {
      return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(*(_QWORD *)(v13 - 112), 1, 1, v7);
    }
    else
    {
      *(_QWORD *)(v13 - 152) = &v26;
      *(_QWORD *)(v13 - 96) = 0;
      *(_QWORD *)(v13 - 88) = v17;
      MEMORY[0x1E0C80A78](v16);
      v25[2] = v5;
      v25[3] = v12;
      v25[4] = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D020);
      sub_1B41E1C74(qword_1EF09D028, &qword_1EF09D020, MEMORY[0x1E0DECCF8]);
      v18 = sub_1B4906CB0();
      MEMORY[0x1E0C80A78](v18);
      v19 = v8[11];
      v25[-4] = v9;
      v25[-3] = v19;
      v20 = v8[13];
      v25[-2] = v15;
      v25[-1] = v20;
      v21 = *(_QWORD *)(v13 - 120);
      sub_1B42EE5A0((void (*)(char *, char *))sub_1B42FA304, (uint64_t)&v25[-6], MEMORY[0x1E0DEDCE8], v7, v22, v21);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 128) + 8))(v11, v10);
      v23 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v7) == 1)
      {
        v24 = *(_QWORD *)(v13 - 112);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v13 - 136) + 8))(v21, *(_QWORD *)(v13 - 144));
      }
      else
      {
        v24 = *(_QWORD *)(v13 - 112);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v24, v21, v7);
      }
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v7);
    }
  }
  return result;
}

uint64_t sub_1B42F43DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = __OFSUB__(*v9, 1);
  v11 = *v9 - 1;
  if (v11 < 0 == v10)
    TTRMutableTreeStorage.child(_:of:)(v11, v6, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(a3, 1, 1, v4, v8);
}

uint64_t sub_1B42F454C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  v15 = *(void (**)(uint64_t, uint64_t, __n128))(a5 + 24);
  v15(a3, a5, v12);
  ((void (*)(uint64_t, uint64_t))v15)(a3, a5);
  swift_getAssociatedConformanceWitness();
  v16 = sub_1B4906A1C();
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, AssociatedTypeWitness);
  v17(v14, AssociatedTypeWitness);
  return v16 & 1;
}

void (*TTRMutableTreeStorage.steps(forMoving:to:)(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD)))(_BYTE *, _QWORD)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = sub_1B4906EA8();
  v8 = type metadata accessor for TTRTreeLocation(255, v5, *(_QWORD *)(v4 + 96), v7);
  swift_getTupleTypeMetadata2();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v6);
  v9 = sub_1B4906CF8();
  v10 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRTreeLocation<A>, v8);
  v11 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRTreeLocation<A>, v8);
  v12 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)(v9, a2, v8, v10, v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B42F47A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  v41 = a3;
  v5 = *a2;
  v40 = *(_QWORD *)(*a2 + 80);
  v6 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_1B4907B14();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v14);
  v37 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - v18;
  v42 = a2;
  v20 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v5, v17);
  v38 = a1;
  TTRTreeContentsQueryable.parentAndChildIndex(for:)(a1, v5, v20, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v10, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
    type metadata accessor for TTRTreeLocation(255, v40, *(_QWORD *)(v5 + 96), v21);
    v22 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v41, 1, 1, v22);
  }
  else
  {
    v24 = *(_QWORD *)&v10[*(int *)(TupleTypeMetadata2 + 48)];
    v25 = *(int *)(v11 + 48);
    v26 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v26(v13, v10, v6);
    *(_QWORD *)&v13[v25] = v24;
    v36 = *(_QWORD *)&v13[*(int *)(v11 + 48)];
    v26(v19, v13, v6);
    v27 = *(_QWORD *)(v5 + 96);
    v28 = v40;
    type metadata accessor for TTRTreeLocation(255, v40, v27, v29);
    v30 = swift_getTupleTypeMetadata2();
    v31 = v41;
    v32 = v41 + *(int *)(v30 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v41, v38, v28);
    v33 = v39;
    v34 = (uint64_t)v37;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v37, v19, v6);
    TTRTreeLocation.init(parent:index:)(v34, v36, v28, v27, v32);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v31, 0, 1, v30);
  }
}

void (*static TTRMutableTreeStorage.steps<A>(forMoving:to:)(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5))(_BYTE *, _QWORD)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, _QWORD);
  void (*v30)(_QWORD, _QWORD, _QWORD);
  void (*result)(_BYTE *, _QWORD);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;
  int64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t (*v69)(_BYTE *, uint64_t, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t (*v82)(char *, uint64_t);
  unint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  _BYTE v95[16];
  uint64_t v96;
  uint64_t v97;

  v93 = a4;
  v89 = a2;
  v9 = *(_QWORD *)(v5 + 80);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v67 = (char *)&v64 - v11;
  v12 = sub_1B4907B14();
  v72 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v64 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v65 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v71 = (char *)&v64 - v16;
  v90 = v9;
  v75 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v20);
  v70 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v64 - v23;
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v64 - v26;
  v28 = MEMORY[0x1B5E3B1F4](a1, TupleTypeMetadata2, v25);
  v97 = a1;
  v74 = v19;
  v29 = *(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16);
  v94 = v27;
  v30 = v89;
  v76 = a3;
  v89 = v29;
  v29(v27, v30, a3);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v96 = sub_1B49067F4();
  v68 = TupleTypeMetadata3;
  v66 = sub_1B4906EA8();
  result = (void (*)(_BYTE *, _QWORD))sub_1B4906DE8();
  if (v28 < 0)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (v28)
  {
    v88 = v12;
    v32 = a5;
    v33 = 0;
    v69 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v93 + 64);
    v34 = v90;
    v35 = v75;
    v87 = v32;
    v80 = v14;
    v81 = TupleTypeMetadata2;
    v91 = v28;
    while (v33 != v28)
    {
      v36 = v71;
      sub_1B4906ED8();
      v37 = &v36[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v84, v36, v34);
      v38 = v74;
      v39 = (uint64_t)v92;
      v40 = v76;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v92, v37, v76);
      v86 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
      v86(v14, 1, 1, v40);
      v41 = v73[12];
      v42 = v73[13];
      v43 = (uint64_t)v94;
      v85 = v73[11];
      v79 = v41;
      v78 = v42;
      sub_1B42F50DC((uint64_t)v94, v39, (uint64_t)v14, v34, v85, v40, v41, v42, v93);
      v44 = v14;
      v45 = v40;
      v77 = *(void (**)(char *, uint64_t))(v72 + 8);
      v77(v44, v88);
      v46 = v70;
      v47 = v40;
      v48 = (void (*)(char *, uint64_t, uint64_t))v89;
      v89(v70, v43, v47);
      LOBYTE(v43) = sub_1B4906A1C();
      v82 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
      result = (void (*)(_BYTE *, _QWORD))v82(v46, v45);
      if ((v43 & 1) == 0)
      {
        v49 = &v67[*(int *)(v68 + 48)];
        v50 = &v67[*(int *)(v68 + 64)];
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v67, v84, v34);
        v48(v49, v39, v45);
        v48(v50, (uint64_t)v94, v45);
        result = (void (*)(_BYTE *, _QWORD))sub_1B4906E78();
      }
      v51 = v33 + 1;
      v83 = v51;
      v52 = v45;
      if (v51 != v91)
      {
        if (v51 >= v91)
          goto LABEL_18;
        v53 = v83;
        v54 = v65;
        v56 = (uint64_t)v80;
        v55 = v81;
        v57 = v79;
        v58 = v78;
        v59 = (void (*)(uint64_t, uint64_t))v77;
        do
        {
          v89(v56, v94, v52);
          v86((char *)v56, 0, 1, v52);
          sub_1B4906EA8();
          sub_1B4906E24();
          v60 = v97;
          sub_1B42F9FDC(v53, v97);
          sub_1B42F50DC(v60+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v53+ *(int *)(v55 + 48), (uint64_t)v92, v56, v90, v85, v52, v57, v58, v93);
          v59(v56, v88);
          ++v53;
        }
        while (v91 != v53);
      }
      result = (void (*)(_BYTE *, _QWORD))v69(v95, v52, v93);
      if (__OFADD__(*v61, 1))
        goto LABEL_17;
      ++*v61;
      result(v95, 0);
      v62 = (void (*)(char *, uint64_t))v82;
      v82(v92, v52);
      v35 = v75;
      v34 = v90;
      result = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v84, v90);
      v28 = v91;
      v33 = v83;
      v14 = v80;
      TupleTypeMetadata2 = v81;
      if (v83 == v91)
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v62 = *(void (**)(char *, uint64_t))(v74 + 8);
LABEL_15:
  v62(v94, v76);
  v63 = v96;
  swift_bridgeObjectRelease();
  return (void (*)(_BYTE *, _QWORD))v63;
}

void (*sub_1B42F50DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(char *, _QWORD)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  unsigned int (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  int v48;
  unsigned int (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, _QWORD);
  unsigned int v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char v76;
  unsigned int (*v77)(_QWORD, _QWORD, _QWORD);
  void (*v78)(_QWORD, _QWORD);
  void (*v79)(char *, uint64_t);
  unsigned int (*v80)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  void (*result)(char *, _QWORD);
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t (*v99)(char *, uint64_t, _QWORD);
  char *v100;
  void (*v101)(char *, uint64_t);
  int v102;
  char *v103;
  uint64_t v104;
  char *v105;
  int v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  char v110;
  unsigned int (*v111)(_QWORD, _QWORD, _QWORD);
  void (*v112)(_QWORD, _QWORD);
  void (*v113)(char *, uint64_t);
  uint64_t (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(_QWORD, _QWORD, _QWORD);
  uint64_t v133;
  char *v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  void (*v142)(char *, uint64_t);
  char *v143;
  char *v144;
  uint64_t AssociatedConformanceWitness;
  void (*v146)(char *, uint64_t, uint64_t, unsigned int (*)(_QWORD, _QWORD, _QWORD));
  uint64_t (*v147)(char *, uint64_t, uint64_t);
  void (*v148)(uint64_t, uint64_t, __n128);
  uint64_t v149;
  uint64_t v150;
  uint64_t TupleTypeMetadata2;
  uint64_t v152;
  uint64_t v153;
  char v154[8];

  v129 = a3;
  v137 = a2;
  v150 = a1;
  v133 = sub_1B4907B14();
  v130 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v144 = (char *)&v117 - v10;
  v138 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v11);
  v139 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v153 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v119 = (char *)&v117 - v14;
  v132 = v15;
  v16 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v127 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v128 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v143 = (char *)&v117 - v19;
  v20 = swift_checkMetadataState();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v123 = (char *)&v117 - v22;
  v23 = sub_1B4907B14();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v121 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v120 = (char *)&v117 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v117 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v117 - v32;
  v136 = v16;
  v142 = *(void (**)(char *, uint64_t))(v16 - 8);
  MEMORY[0x1E0C80A78](v34);
  v118 = (char *)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v125 = (char *)&v117 - v37;
  MEMORY[0x1E0C80A78](v38);
  v134 = (char *)&v117 - v39;
  MEMORY[0x1E0C80A78](v40);
  v122 = (char *)&v117 - v41;
  MEMORY[0x1E0C80A78](v42);
  v141 = (char *)&v117 - v43;
  v45 = MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v117 - v46;
  v148 = *(void (**)(uint64_t, uint64_t, __n128))(a9 + 24);
  v149 = a6;
  v152 = a9;
  v148(a6, a9, v45);
  v147 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v48 = v147(v33, 1, v20);
  v131 = v21;
  if (v48)
  {
    v135 = *(void (**)(char *, uint64_t))(v24 + 8);
    v135(v33, v23);
    v49 = v132;
    v146 = *(void (**)(char *, uint64_t, uint64_t, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 56);
    v146(v47, 1, 1, v132);
    v50 = AssociatedConformanceWitness;
  }
  else
  {
    v51 = v123;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v123, v33, v20);
    v135 = *(void (**)(char *, uint64_t))(v24 + 8);
    v135(v33, v23);
    v52 = AssociatedConformanceWitness;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v20, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v51, v20);
    v49 = v132;
    v146 = *(void (**)(char *, uint64_t, uint64_t, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 56);
    v146(v47, 0, 1, v132);
    v50 = v52;
  }
  v140 = v47;
  ((void (*)(uint64_t, uint64_t))v148)(v149, v152);
  v53 = v147(v30, 1, v20);
  v126 = v20;
  v124 = v23;
  if (v53 == 1)
  {
    v135(v30, v23);
    v54 = 1;
    v55 = v141;
  }
  else
  {
    v55 = v141;
    (*(void (**)(uint64_t, uint64_t))(v50 + 24))(v20, v50);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v30, v20);
    v54 = 0;
  }
  v146(v55, v54, 1, v49);
  v56 = v142;
  v57 = v143;
  v58 = &v143[*(int *)(TupleTypeMetadata2 + 48)];
  v59 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v142 + 2);
  v60 = v140;
  v61 = v136;
  v59(v143, v140, v136);
  v59(v58, v55, v61);
  v62 = *(unsigned int (**)(char *, uint64_t, _QWORD))(v153 + 48);
  v63 = v62(v57, 1, v49);
  v64 = v144;
  v132 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v62;
  if (v63 != 1)
  {
    v70 = v122;
    v59(v122, v57, v61);
    if (v62(v58, 1, v49) != 1)
    {
      v72 = v70;
      v73 = v153;
      v74 = v57;
      v75 = v119;
      (*(void (**)(char *, char *, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 32))(v119, v58, v49);
      swift_getAssociatedConformanceWitness();
      v76 = sub_1B4906A1C();
      v77 = v49;
      v78 = *(void (**)(_QWORD, _QWORD))(v73 + 8);
      v78(v75, v77);
      v79 = (void (*)(char *, uint64_t))*((_QWORD *)v142 + 1);
      v79(v141, v61);
      v79(v140, v61);
      v78(v72, v77);
      v49 = v77;
      v64 = v144;
      v142 = v79;
      v79(v74, v61);
      v67 = v149;
      v68 = v152;
      v69 = v133;
      if ((v76 & 1) == 0)
        goto LABEL_19;
      goto LABEL_15;
    }
    v71 = (void (*)(char *, uint64_t))*((_QWORD *)v142 + 1);
    v71(v141, v61);
    v142 = v71;
    v71(v140, v61);
    (*(void (**)(char *, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 8))(v70, v49);
    v67 = v149;
    v68 = v152;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v57, TupleTypeMetadata2);
    v69 = v133;
    goto LABEL_19;
  }
  v65 = (void (*)(char *, uint64_t))*((_QWORD *)v56 + 1);
  v65(v55, v61);
  v65(v60, v61);
  v66 = v62(v58, 1, v49);
  v142 = v65;
  if (v66 != 1)
  {
    v67 = v149;
    v68 = v152;
    v57 = v143;
    goto LABEL_13;
  }
  v65(v143, v61);
  v67 = v149;
  v68 = v152;
  v69 = v133;
LABEL_15:
  v80 = v49;
  v81 = *(uint64_t (**)(uint64_t, uint64_t))(v68 + 48);
  v82 = v81(v67, v68);
  if (v82 < v81(v67, v68))
  {
    result = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 64))(v154, v67, v68);
    if (__OFSUB__(*v84, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    --*v84;
    result(v154, 0);
  }
  v49 = v80;
  v61 = v136;
  v64 = v144;
LABEL_19:
  v85 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v64, v129, v69);
  v86 = v138;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v64, 1, v67) == 1)
    return (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v64, v69);
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v139, v64, v67);
  v87 = v120;
  ((void (*)(uint64_t, uint64_t))v148)(v67, v68);
  v88 = v126;
  if (v147(v87, 1, v126))
  {
    v135(v87, v124);
    v89 = 1;
    v90 = v131;
    v91 = v134;
  }
  else
  {
    v90 = v131;
    v92 = v123;
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v123, v87, v88);
    v135(v87, v124);
    v91 = v134;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v88);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v88);
    v89 = 0;
  }
  v146(v91, v89, 1, v49);
  v93 = v121;
  ((void (*)(uint64_t, uint64_t))v148)(v67, v68);
  if (v147(v93, 1, v88) == 1)
  {
    v135(v93, v124);
    v94 = 1;
    v95 = v128;
    v96 = v125;
  }
  else
  {
    v96 = v125;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v88);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v88);
    v94 = 0;
    v95 = v128;
  }
  v146(v96, v94, 1, v49);
  v97 = &v95[*(int *)(TupleTypeMetadata2 + 48)];
  v98 = v134;
  v59(v95, v134, v61);
  v59(v97, v96, v61);
  v99 = (uint64_t (*)(char *, uint64_t, _QWORD))v132;
  if (v132(v95, 1, v49) != 1)
  {
    v105 = v118;
    v59(v118, v95, v61);
    v106 = v99(v97, 1, v49);
    v104 = v152;
    if (v106 != 1)
    {
      v108 = v153;
      v109 = v119;
      (*(void (**)(char *, char *, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 32))(v119, v97, v49);
      swift_getAssociatedConformanceWitness();
      v110 = sub_1B4906A1C();
      v111 = v49;
      v112 = *(void (**)(_QWORD, _QWORD))(v108 + 8);
      v112(v109, v111);
      v113 = v142;
      v142(v125, v61);
      v113(v134, v61);
      v112(v105, v111);
      v113(v95, v61);
      v103 = v139;
      if ((v110 & 1) == 0)
        return (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v103, v67);
      goto LABEL_34;
    }
    v107 = v142;
    v142(v125, v61);
    v107(v134, v61);
    (*(void (**)(char *, unsigned int (*)(_QWORD, _QWORD, _QWORD)))(v153 + 8))(v105, v49);
    v103 = v139;
LABEL_32:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, TupleTypeMetadata2);
    return (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v103, v67);
  }
  v100 = v96;
  v101 = v142;
  v142(v100, v61);
  v101(v98, v61);
  v102 = v99(v97, 1, v49);
  v103 = v139;
  if (v102 != 1)
    goto LABEL_32;
  v101(v128, v61);
  v104 = v152;
LABEL_34:
  v114 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 48);
  v115 = v114(v67, v104);
  if (v114(v67, v104) >= v115)
  {
    result = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 64))(v154, v67, v104);
    if (!__OFADD__(*v116, 1))
    {
      ++*v116;
      result(v154, 0);
      return (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v103, v67);
    }
LABEL_40:
    __break(1u);
    return result;
  }
  return (void (*)(char *, _QWORD))(*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v103, v67);
}

uint64_t TTRMutableTreeStorage.unadjustInsertionLocation(_:forMoving:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_1B4906EA8();
  v7 = type metadata accessor for TTRTreeLocation(0, v4, *(_QWORD *)(v3 + 96), v6);
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v5);
  v8 = sub_1B4906CF8();
  v9 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRTreeLocation<A>, v7);
  static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)(a1, v8, v7, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B42F5E70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  v41 = a3;
  v39 = a1;
  v4 = *a2;
  v40 = *(_QWORD *)(*a2 + 80);
  v5 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = sub_1B4907B14();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  v36 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](v36);
  v11 = (char *)&v35 - v10;
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - v18;
  v42 = a2;
  v20 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v4, v17);
  v21 = v39;
  v39 = v4;
  TTRTreeContentsQueryable.parentAndChildIndex(for:)(v21, v4, v20, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v9, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    v23 = type metadata accessor for TTRTreeLocation(0, v40, *(_QWORD *)(v39 + 96), v22);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v41, 1, 1, v23);
  }
  else
  {
    v38 = *(_QWORD *)&v9[*(int *)(TupleTypeMetadata2 + 48)];
    v25 = v36;
    v26 = *(int *)(v36 + 48);
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v11, v9, v5);
    *(_QWORD *)&v11[v26] = v38;
    v28 = *(_QWORD *)&v11[*(int *)(v25 + 48)];
    v27(v19, v11, v5);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v19, v5);
    v29 = *(_QWORD *)(v39 + 96);
    v30 = v41;
    v31 = v28;
    v32 = v40;
    TTRTreeLocation.init(parent:index:)((uint64_t)v15, v31, v40, v29, v41);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v5);
    v34 = type metadata accessor for TTRTreeLocation(0, v32, v29, v33);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v30, 0, 1, v34);
  }
}

uint64_t static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[16];
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_getAssociatedTypeWitness();
  v9 = sub_1B4907B14();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v16[-v10];
  v22 = a2;
  v12 = *(_OWORD *)(v4 + 96);
  v17 = *(_OWORD *)(v4 + 80);
  v18 = a3;
  v19 = v12;
  v20 = a4;
  v21 = a1;
  v13 = sub_1B4906EA8();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v13);
  v14 = sub_1B4906C80();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  if (!__OFADD__(result, v14))
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(a4 + 72))(v11, result + v14, a3, a4);
  __break(1u);
  return result;
}

BOOL sub_1B42F6254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  void (*v34)(uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  void (*v58)(char *, uint64_t);
  int v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  _BOOL8 v81;
  void (*v82)(char *, uint64_t);
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t TupleTypeMetadata2;
  uint64_t AssociatedConformanceWitness;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v104 = a2;
  v96 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v95 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v94 = (char *)&v84 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedTypeWitness();
  v106 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v84 - v16;
  v90 = v17;
  v18 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v87 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v103 = (char *)&v84 - v19;
  v20 = sub_1B4907B14();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v88 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v84 - v24;
  v92 = v18;
  v100 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v26);
  v86 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v98 = (char *)&v84 - v29;
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v84 - v32;
  v34 = *(void (**)(uint64_t, uint64_t, __n128))(a8 + 24);
  v93 = a1;
  v105 = a5;
  v97 = a8;
  v34(a5, a8, v31);
  v35 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v25, 1, AssociatedTypeWitness);
  v38 = v106;
  v99 = v33;
  v91 = v20;
  v89 = v21;
  v85 = v35;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v40 = v33;
    v41 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, AssociatedTypeWitness);
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v40 = v33;
    v41 = 0;
  }
  v42 = v90;
  v39(v40, v41, 1, v90);
  v43 = v88;
  ((void (*)(uint64_t, uint64_t))v34)(v105, v97);
  v44 = 1;
  v45 = v36(v43, 1, AssociatedTypeWitness);
  v46 = v91;
  v47 = v92;
  v48 = v98;
  v49 = v89;
  if (v45 != 1)
  {
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness);
    v44 = 0;
    v49 = v85;
    v46 = AssociatedTypeWitness;
  }
  v91 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v46);
  v39(v48, v44, 1, v42);
  v50 = v100;
  v51 = v103;
  v52 = &v103[*(int *)(TupleTypeMetadata2 + 48)];
  v53 = v42;
  v54 = v48;
  v55 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v56 = v99;
  v55(v103, v99, v47);
  v55(v52, v54, v47);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48);
  if (v57(v51, 1, v53) != 1)
  {
    v65 = v86;
    v55(v86, v51, v47);
    v66 = v57(v52, 1, v53);
    v67 = v51;
    v60 = v96;
    v61 = v94;
    v68 = v53;
    if (v66 != 1)
    {
      v71 = v106;
      v72 = v84;
      v73 = v67;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v84, v52, v68);
      swift_getAssociatedConformanceWitness();
      v74 = sub_1B4906A1C();
      v75 = *(void (**)(char *, uint64_t))(v71 + 8);
      v75(v72, v68);
      v76 = *(void (**)(char *, uint64_t))(v100 + 8);
      v76(v98, v47);
      v76(v99, v47);
      v75(v65, v68);
      v76(v73, v47);
      v77 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      v63 = v105;
      v77(v61, v93, v105);
      v64 = v95;
      v77(v95, v104, v63);
      if ((v74 & 1) != 0)
        goto LABEL_13;
LABEL_14:
      v81 = 0;
      goto LABEL_15;
    }
    v69 = *(void (**)(char *, uint64_t))(v100 + 8);
    v69(v98, v47);
    v69(v99, v47);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v65, v53);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v87 + 8))(v103, TupleTypeMetadata2);
    v70 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
    v63 = v105;
    v70(v61, v93, v105);
    v64 = v95;
    v70(v95, v104, v63);
    goto LABEL_14;
  }
  v58 = *(void (**)(char *, uint64_t))(v50 + 8);
  v58(v54, v47);
  v58(v56, v47);
  v59 = v57(v52, 1, v53);
  v60 = v96;
  v61 = v94;
  if (v59 != 1)
    goto LABEL_11;
  v58(v103, v47);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v63 = v105;
  v62(v61, v93, v105);
  v64 = v95;
  v62(v95, v104, v63);
LABEL_13:
  v78 = v97;
  v79 = *(uint64_t (**)(uint64_t, uint64_t))(v97 + 48);
  v80 = v79(v63, v97);
  v81 = v80 < v79(v63, v78);
LABEL_15:
  v82 = *(void (**)(char *, uint64_t))(v60 + 8);
  v82(v64, v63);
  v82(v61, v63);
  return v81;
}

void TTRMutableTreeStorage.insertTemporaryItem(with:)()
{
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

void sub_1B42F691C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v13 - 200) = a1;
  v14 = sub_1B4907B14();
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 216) = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v13 - 272) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 240) = v12;
  *(_QWORD *)(v13 - 232) = v11;
  *(_QWORD *)(v13 - 192) = v9;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v12;
  type metadata accessor for TTRTreeStorageNodeValue();
}

uint64_t sub_1B42F6A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  void (*v54)(_BYTE *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  _BYTE v65[96];

  *(_QWORD *)(v5 - 256) = a1;
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v5 - 280) = &v65[-v6];
  v7 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1B4907B14();
  *(_QWORD *)(v5 - 312) = v9;
  *(_QWORD *)(v5 - 320) = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v65[-v10];
  v12 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v5 - 304) = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = &v65[-v13];
  *(_QWORD *)(v5 - 136) = v7;
  *(_QWORD *)(v5 - 328) = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v5 - 248) = &v65[-v16];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v65[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  *(_QWORD *)(v5 - 296) = &v65[-v21];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v65[-v23];
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = &v65[-v27];
  *(_QWORD *)(v5 - 168) = v29;
  *(_QWORD *)(v5 - 160) = v1;
  v30 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v29 + 16);
  *(_QWORD *)(v5 - 184) = v3;
  *(_QWORD *)(v5 - 176) = v30;
  v30(&v65[-v27], v3, v1, v26);
  *(_QWORD *)(v5 - 120) = v4;
  v31 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v2);
  *(_QWORD *)(v5 - 144) = v28;
  if (TTRTreeContentsQueryable.contains(_:)((uint64_t)v28, v2, v31))
  {
    if (qword_1EF097C70 != -1)
      swift_once();
    v32 = sub_1B49058F4();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EF09D008);
    v33 = *(_BYTE **)(v5 - 144);
    v34 = *(_QWORD *)(v5 - 160);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 - 176))(v19, v33, v34);
    v35 = sub_1B49058E8();
    v36 = sub_1B4907370();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_QWORD *)(v5 - 120) = v38;
      *(_DWORD *)v37 = 136315138;
      v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 192) + 32))(v34);
      *(_QWORD *)(v5 - 128) = sub_1B41EF7C8(v39, v40, (uint64_t *)(v5 - 120));
      sub_1B4907B68();
      swift_bridgeObjectRelease();
      v41 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 168) + 8);
      v41(v19, v34);
      _os_log_impl(&dword_1B41C2000, v35, v36, "Temporary item already exists {item: %s}", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v38, -1, -1);
      MEMORY[0x1B5E3D7E0](v37, -1, -1);

      v41(v33, v34);
    }
    else
    {

      v54 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 168) + 8);
      v54(v19, v34);
      v54(v33, v34);
    }
  }
  else
  {
    v42 = *(_QWORD *)(v5 - 200);
    TTRMutableTreeStorage.resolve(_:)(*(_QWORD *)(v5 - 184) + *(int *)(v42 + 56), (uint64_t)v11);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v11, 1, TupleTypeMetadata2) != 1)
    {
      v55 = *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)];
      v56 = *(_QWORD *)(v5 - 304);
      v57 = *(int *)(v56 + 48);
      v58 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 328) + 32);
      *(_QWORD *)(v5 - 312) = v58;
      v59 = v11;
      v60 = *(_QWORD *)(v5 - 136);
      v58(v14, v59, v60);
      *(_QWORD *)&v14[v57] = v55;
      *(_QWORD *)(v5 - 296) = *(_QWORD *)&v14[*(int *)(v56 + 48)];
      v58(*(_BYTE **)(v5 - 248), v14, v60);
      v61 = *(_QWORD *)(v5 - 160);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 - 176))(v24, *(_QWORD *)(v5 - 144), v61);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v5 - 288) + 16))(*(_QWORD *)(v5 - 272), *(_QWORD *)(v5 - 184) + *(int *)(v42 + 52), *(_QWORD *)(v5 - 232));
      sub_1B4906E30();
      TTRTreeStorageNodeValue.init(item:auxiliaryData:children:)((uint64_t)v24, v61, *(_QWORD *)(v5 - 280));
    }
    (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 320) + 8))(v11, *(_QWORD *)(v5 - 312));
    if (qword_1EF097C70 != -1)
      swift_once();
    v43 = sub_1B49058F4();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EF09D008);
    v44 = *(_QWORD *)(v5 - 296);
    v45 = *(_QWORD *)(v5 - 144);
    v46 = *(_QWORD *)(v5 - 160);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 176))(v44, v45, v46);
    v47 = sub_1B49058E8();
    v48 = sub_1B4907370();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_QWORD *)(v5 - 120) = v50;
      *(_DWORD *)v49 = 136315138;
      v51 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 192) + 32))(v46);
      *(_QWORD *)(v5 - 128) = sub_1B41EF7C8(v51, v52, (uint64_t *)(v5 - 120));
      sub_1B4907B68();
      swift_bridgeObjectRelease();
      v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8);
      v53(v44, v46);
      _os_log_impl(&dword_1B41C2000, v47, v48, "Unable to determine target location for new temporary item {item: %s}", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v50, -1, -1);
      MEMORY[0x1B5E3D7E0](v49, -1, -1);

      v53(v45, v46);
    }
    else
    {

      v62 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8);
      v62(v44, v46);
      v62(v45, v46);
    }
  }
  v63 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(*(_QWORD *)(v5 - 152), 1, 1, v63);
}

uint64_t TTRMutableTreeStorage.resolve(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  v22 = type metadata accessor for TTRTreeStorageTemporaryNodeLocation(0, v5, *(_QWORD *)(v4 + 96), v16);
  v23 = a1;
  TTRTreeStorageTemporaryNodeLocation.parent.getter(v22, (uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  v26 = v25;
  v17 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v4);
  v18 = TTRTreeContentsQueryable.contains(_:)((uint64_t)v8, v4, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v18)
LABEL_4:
    TTRMutableTreeStorage.numberOfChildren(of:)((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v24, 1, 1, TupleTypeMetadata2);
}

uint64_t sub_1B42F74DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  _BOOL8 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D068);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB518);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v10);
  sub_1B4767528((uint64_t)v10, (uint64_t)v13);
  sub_1B41EA5FC((uint64_t)v10, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v14 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  sub_1B41EA560((uint64_t)v13, &qword_1ED4EB518);
  if (v15 == 1)
    return 2;
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v7);
  swift_beginAccess();
  v17 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1B41ED940((uint64_t)v7), (v19 & 1) != 0))
  {
    v20 = v18;
    v21 = *(_QWORD *)(v17 + 56);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099758);
    v23 = *(_QWORD *)(v22 - 8);
    sub_1B41EA51C(v21 + *(_QWORD *)(v23 + 72) * v20, (uint64_t)v4, &qword_1EF099758);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v4, 0, 1, v22);
  }
  else
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099758);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 1, 1, v24);
  }
  swift_endAccess();
  sub_1B41EA5FC((uint64_t)v7, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099758);
  v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v4, 1, v25) != 1;
  sub_1B41EA560((uint64_t)v4, &qword_1EF09D068);
  return v16;
}

void TTRMutableTreeStorage.isTemporary(_:)()
{
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

uint64_t sub_1B42F77A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  _BYTE v22[96];

  *(_QWORD *)(v5 - 168) = a1;
  v6 = sub_1B4907B14();
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 152) = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = &v22[-v7];
  v9 = *(_QWORD *)(v5 - 144);
  v10 = *(_QWORD *)(v5 - 128);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 128) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = &v22[-v13];
  *(_QWORD *)(v5 - 112) = v2;
  v15 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, v1, v12);
  if (!TTRTreeContentsQueryable.contains(_:)(v3, v1, v15))
    return 2;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  swift_beginAccess();
  v16 = *(_QWORD *)(v4 + 32);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = v16;
  v19 = *(_QWORD *)(v5 - 168);
  MEMORY[0x1B5E3AC6C](v14, v18, AssociatedTypeWitness, v19, AssociatedConformanceWitness);
  swift_endAccess();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 128) + 8))(v14, AssociatedTypeWitness);
  v20 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v8, 1, v19) != 1;
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v5 - 160) + 8))(v8, *(_QWORD *)(v5 - 152));
  return v20;
}

void TTRMutableTreeStorage.temporaryNodeValues.getter()
{
  sub_1B42F7A9C();
}

void sub_1B42F7978()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 32);
  swift_getAssociatedTypeWitness();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

uint64_t sub_1B42F79F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  swift_getAssociatedConformanceWitness();
  v2 = sub_1B49068CC();
  v3 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEA0E0], v2);
  v5 = sub_1B42EE2B0((void (*)(char *, char *))sub_1B42FA3C8, (uint64_t)&v7, v2, a1, MEMORY[0x1E0DEDCE8], v3, MEMORY[0x1E0DEDD18], v4);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1B42F7A9C()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

uint64_t sub_1B42F7B28()
{
  uint64_t v0;

  swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 + 32) = sub_1B49068B4();
  return swift_bridgeObjectRelease();
}

void sub_1B42F7B98()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1B4907B14();
  MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

void sub_1B42F7C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
  TTRMutableTreeStorage.auxiliaryData(for:)();
}

uint64_t sub_1B42F7C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v3, 1, v0) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v3, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v4, v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v1 + *(int *)(v5 + 52), v4, v0);
}

void sub_1B42F7CF0()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRTreeStorageTemporaryNodeValue();
}

uint64_t sub_1B42F7D68()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v0(v1, v1 + *(int *)(TupleTypeMetadata2 + 48));
}

void TTRMutableTreeStorage.copy()()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F7E1C()
{
  sub_1B4906EA8();
  type metadata accessor for TTRTreeStorageNodeValue();
}

void sub_1B42F7E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF50], v1);
  sub_1B42EE2B0((void (*)(char *, char *))sub_1B42FAF60, v2, v1, a1, MEMORY[0x1E0DEDCE8], v4, MEMORY[0x1E0DEDD18], v5);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_allocObject();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B42FA02C();
}

uint64_t sub_1B42F7ED8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1B42F7F04(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42F7FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1B4906EA8();
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v0;
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v3;
  type metadata accessor for TTRTreeStorageNodeValue();
}

void sub_1B42F8004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF50], v2);
  sub_1B42EE2B0((void (*)(char *, char *))sub_1B42FAD24, *(_QWORD *)(v7 - 200), v2, a1, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 120);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 192) + 16))(v6, v11, v4);
  v12 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 128);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 184) + 16))(v3, v12, v1);
  TTRTreeStorageNodeValue.init(item:auxiliaryData:children:)(v6, v4, *(_QWORD *)(v7 - 176));
}

void TTRMutableTreeStorage.subtreeCopy(rootItem:)()
{
  type metadata accessor for TTRTreeStorageNodeValue();
}

void sub_1B42F8158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  __n128 v14;

  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v11 - 168) = (char *)&a9 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v11 - 160) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v11 - 152) = AssociatedTypeWitness;
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 24))(v9, v10, v14);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F81F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (a1)
  {
    v7 = swift_beginAccess();
    *(_QWORD *)(v6 - 192) = &v10;
    MEMORY[0x1E0C80A78](v7);
    *(_QWORD *)(v6 - 184) = v1;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    *(_QWORD *)(v6 - 112) = v2;
    *(_QWORD *)(v6 - 104) = v3;
    v8 = *(_QWORD *)(v6 - 176);
    *(_QWORD *)(v6 - 96) = v5;
    *(_QWORD *)(v6 - 88) = v8;
    type metadata accessor for TTRTreeStorageTemporaryNodeValue();
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(v4, *(_QWORD *)(v6 - 152));
  return 0;
}

uint64_t sub_1B42F83C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v15 = *a5;
  v12 = a4;
  v11 = sub_1B4907B14();
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v5);
  v14 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v13 = (char *)&v10 - v8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if ((sub_1B4906A1C() & 1) == 0)
    TTRMutableTreeStorage.item(withID:)();
  return 1;
}

uint64_t sub_1B42F85FC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v23[2];
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a4;
  v28 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if (qword_1EF097C70 != -1)
    swift_once();
  v12 = sub_1B49058F4();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EF09D008);
  swift_retain_n();
  v13 = sub_1B49058E8();
  v14 = sub_1B4907394();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25 = v16;
    v26 = v4;
    *(_DWORD *)v15 = 136315138;
    v31 = v16;
    v23[1] = v15 + 4;
    v24 = v15;
    v17 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, a2);
    (*(void (**)(uint64_t))(v28 + 24))(a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a2);
    v18 = sub_1B4906A94();
    v30 = sub_1B41EF7C8(v18, v19, &v31);
    sub_1B4907B68();
    swift_release_n();
    swift_bridgeObjectRelease();
    v20 = v24;
    _os_log_impl(&dword_1B41C2000, v13, v14, "item ID is not unique {treeItemIdentifier: %s}", v24, 0xCu);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v21, -1, -1);
    MEMORY[0x1B5E3D7E0](v20, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  *v29 = v11;
  return swift_retain();
}

uint64_t sub_1B42F88B4()
{
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4906ED8();
  return swift_bridgeObjectRelease();
}

void sub_1B42F893C()
{
  swift_beginAccess();
  type metadata accessor for TTRTreeStorageNode();
}

uint64_t sub_1B42F8994()
{
  sub_1B4906ED8();
  return swift_endAccess();
}

uint64_t TTRMutableTreeStorage.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTRMutableTreeStorage.__deallocating_deinit()
{
  TTRMutableTreeStorage.deinit();
  return swift_deallocClassInstance();
}

void sub_1B42F8A18(uint64_t a1)
{
  TTRMutableTreeStorage.numberOfChildren(of:)(a1);
}

void sub_1B42F8A38(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TTRMutableTreeStorage.child(_:of:)(a1, a2, a3);
}

void sub_1B42F8A58()
{
  TTRMutableTreeStorage.item(withID:)();
}

void sub_1B42F8A78()
{
  TTRMutableTreeStorage.parent(of:)();
}

void TTRMutableTreeStorage.descendants(of:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_1B4907B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = *(_QWORD *)(v3 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v18 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, a1, v5, v14);
  v17 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B42F8D8C();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v4, v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v4);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v12, v20);
  sub_1B42EEB4C();
}

uint64_t sub_1B42F8C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    swift_beginAccess();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B42F8D8C();
  }
  *(_QWORD *)(v4 - 136) = sub_1B4906E30();
  v5 = sub_1B4906EA8();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v5);
  v6 = sub_1B4907DFC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  return v6;
}

void sub_1B42F8C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  JUMPOUT(0x1B42F8CA4);
}

void sub_1B42F8CDC(uint64_t a1)
{
  MEMORY[0x1B5E3D6D8](&unk_1B49166E0, a1);
  sub_1B4907E08();
  JUMPOUT(0x1B42F8D68);
}

void sub_1B42F8D8C()
{
  type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level();
}

uint64_t sub_1B42F8DB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1B4908330();
  swift_allocObject();
  v1 = sub_1B4906DD0();
  *v2 = v0;
  v2[1] = 0;
  sub_1B4906EA8();
  return v1;
}

void sub_1B42F8E08()
{
  type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level();
}

uint64_t sub_1B42F8E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1B4906EA8();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF20], v4);
  sub_1B4906998();
  if (v13)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v16 = v1;
    v17 = v0;
    v18 = v2;
    v19 = v3;
    type metadata accessor for TTRTreeStorageNode();
  }
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF48], v4);
  v5 = MEMORY[0x1E0DEB458];
  sub_1B49071B4();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE80);
  v14[0] = v5;
  v14[1] = sub_1B42FA4AC();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEB890], v6, v14);
  sub_1B4906998();
  if ((v15 & 1) == 0)
  {
    sub_1B4906ED8();
    v16 = v12;
    v17 = v9;
    v18 = v10;
    v19 = v11;
    type metadata accessor for TTRTreeStorageNode();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1);
}

void TTRMutableTreeStorage.debugTreeDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = sub_1B4907B14();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v6[-v4];
  v9 = MEMORY[0x1E0DEE9D8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 56))(&v6[-v4], 1, 1, v1, v3);
  v7 = v0;
  v8 = &v9;
  sub_1B42F98AC((uint64_t)v5, (uint64_t)sub_1B42FA434, (uint64_t)v6);
}

uint64_t sub_1B42F9200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  *(_QWORD *)(v3 - 64) = *(_QWORD *)(v3 - 56);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
  sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
  v4 = sub_1B49069BC();
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t sub_1B42F9298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;

  v28 = a4;
  v6 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1B5E3AFA8](538976288, 0xE400000000000000, *(_QWORD *)(a2 + 16), v7);
  v11 = v10;
  v12 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 120);
  swift_beginAccess();
  sub_1B42FABFC(v12, (uint64_t)v9);
  sub_1B42C52E4();
  sub_1B41EA5FC((uint64_t)v9, type metadata accessor for TTRAccountsListsViewModel.Item);
  v13 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
  swift_beginAccess();
  v14 = *(void **)v13;
  LOBYTE(v13) = *(_BYTE *)(v13 + 8);
  sub_1B42C1C10(v14, v13);
  v15 = sub_1B42C1998(v14, v13);
  v17 = v16;
  sub_1B42FAC40(v14, v13);
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v15 & 0xFFFFFFFFFFFFLL;
  if (v18)
  {
    v29 = 0x203A787561202CLL;
    v30 = 0xE700000000000000;
    sub_1B4906B78();
    swift_bridgeObjectRelease();
  }
  sub_1B42FABFC(v12, (uint64_t)v9);
  sub_1B42F74DC();
  sub_1B41EA5FC((uint64_t)v9, type metadata accessor for TTRAccountsListsViewModel.Item);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1B4907E50();
  swift_bridgeObjectRelease();
  v29 = v27;
  v30 = v11;
  sub_1B4906B78();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  sub_1B4906B78();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  v19 = v29;
  v20 = v30;
  v21 = v28;
  v22 = (_QWORD *)*v28;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v21 = (uint64_t)v22;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1B4290474(0, v22[2] + 1, 1, v22);
    v22 = (_QWORD *)result;
    *v21 = result;
  }
  v25 = v22[2];
  v24 = v22[3];
  if (v25 >= v24 >> 1)
  {
    result = (uint64_t)sub_1B4290474((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v22 = (_QWORD *)result;
    *v21 = result;
  }
  v22[2] = v25 + 1;
  v26 = &v22[2 * v25];
  v26[4] = v19;
  v26[5] = v20;
  return result;
}

void sub_1B42F9578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v33 = a3;
  v34 = a4;
  v5 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v5[10];
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1B5E3B1F4](v16, v10, v13);
  v18 = MEMORY[0x1B5E3AFA8](538976288, 0xE400000000000000, v17);
  v31 = v19;
  v32 = v18;
  v20 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 120);
  swift_beginAccess();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v28(v15, v20, v10);
  v29 = (*(uint64_t (**)(uint64_t))(v5[12] + 32))(v10);
  v30 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  v22 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
  v23 = (*(uint64_t (**)(uint64_t))(v5[13] + 16))(v6);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v23 & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    v35 = 0x203A787561202CLL;
    v36 = 0xE700000000000000;
    sub_1B4906B78();
    swift_bridgeObjectRelease();
  }
  v28(v15, v20, v10);
  TTRMutableTreeStorage.isTemporary(_:)();
}

uint64_t sub_1B42F974C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v2(v1, v0);
  *(_QWORD *)(v3 - 144) = 0;
  *(_QWORD *)(v3 - 136) = 0xE000000000000000;
  sub_1B4907E50();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 - 176);
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 168);
  *(_QWORD *)(v3 - 136) = v4;
  sub_1B4906B78();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  sub_1B4906B78();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v3 - 144);
  v6 = *(_QWORD *)(v3 - 136);
  v7 = *(uint64_t **)(v3 - 152);
  v8 = (_QWORD *)*v7;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = (uint64_t)v8;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1B4290474(0, v8[2] + 1, 1, v8);
    v8 = (_QWORD *)result;
    *v7 = result;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_1B4290474((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    v8 = (_QWORD *)result;
    *v7 = result;
  }
  v8[2] = v11 + 1;
  v12 = &v8[2 * v11];
  v12[4] = v5;
  v12[5] = v6;
  return result;
}

void sub_1B42F98AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a3;
  v21[1] = a2;
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = sub_1B4907B14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - v9;
  v11 = v5[12];
  v21[0] = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21[0] - 8);
  MEMORY[0x1E0C80A78](v21[0]);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v15);
  v18 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    v19 = v5[11];
    v20 = v5[13];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v24 = v6;
    v25 = v19;
    v26 = v11;
    v27 = v20;
    type metadata accessor for TTRTreeStorageNode();
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v6, v11);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v6);
  (*(void (**)(char *, char *, _QWORD))(v22 + 32))(v17, v13, v21[0]);
  sub_1B42EEB4C();
}

void sub_1B42F9A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    swift_initStackObject();
    sub_1B4906DD0();
    *v6 = a1;
    v7 = *(_QWORD *)(v1 + 88);
    v8 = *(_QWORD *)(v1 + 104);
    *(_QWORD *)(v4 - 136) = v2;
    *(_QWORD *)(v4 - 128) = v7;
    *(_QWORD *)(v4 - 120) = v3;
    *(_QWORD *)(v4 - 112) = v8;
    type metadata accessor for TTRTreeStorageNode();
  }
  sub_1B4908144();
  __break(1u);
}

void sub_1B42F9AE4()
{
  sub_1B4906EA8();
  swift_retain();
  sub_1B4906E30();
  sub_1B42F9D2C();
}

void TTRMutableTreeStorage.debugTraverseItems(startingAt:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[4];

  v3[2] = a2;
  v3[3] = a3;
  sub_1B42F98AC(a1, (uint64_t)sub_1B42FA43C, (uint64_t)v3);
}

uint64_t sub_1B42F9BE0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);

  v21 = a3;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v16 + *(_QWORD *)(v15 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v17, v10);
  v18 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
  v21(v14, v8, a2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1B42F9D2C()
{
  type metadata accessor for TTRTreeStorageNode();
}

uint64_t sub_1B42F9F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  else
    return sub_1B4908330();
}

uint64_t sub_1B42F9FDC(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

void sub_1B42FA02C()
{
  type metadata accessor for TTRTreeStorageNode();
}

void sub_1B42FA074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1B49067F4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v1 = sub_1B49067E8();
  sub_1B42F398C(v0, (uint64_t)&v2, (uint64_t)&v1);
}

void sub_1B42FA128()
{
  type metadata accessor for TTRTreeStorageNode();
}

uint64_t sub_1B42FA160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = sub_1B4906EA8();
  v2 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF50], v1);
  return sub_1B42EE2B0((void (*)(char *, char *))sub_1B42FAC88, (uint64_t)&v5, v1, v0, MEMORY[0x1E0DEDCE8], v2, MEMORY[0x1E0DEDD18], v3);
}

void sub_1B42FA1C8()
{
  sub_1B42F405C();
}

uint64_t sub_1B42FA1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  v6 = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRMutableTreeStorage<A, B>, *v2);
  return TTRTreeContentsQueryable.parentAndChildIndex(for:)(a1, v5, v6, a2);
}

uint64_t sub_1B42FA248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a3 + a2 - 16) + 24))(*(_QWORD *)(a3 + a2 - 32));
}

uint64_t sub_1B42FA27C()
{
  return 32;
}

__n128 sub_1B42FA288(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B42FA294()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 24))(*(_QWORD *)(v0 + 16));
}

void sub_1B42FA2CC(uint64_t a1)
{
  uint64_t v1;

  sub_1B42F2278(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1B42FA2DC(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B42FA2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B42F43DC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1B42FA304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, a1, v3);
  type metadata accessor for TTRRelativeInsertionPosition(0, v3, v4, v5);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B42FA368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1B42F47A4(a1, v2, a2);
}

uint64_t sub_1B42FA380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1B42F5E70(a1, v2, a2);
}

BOOL sub_1B42FA398(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B42F6254(a1, v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

void sub_1B42FA3C0()
{
  sub_1B42F7B98();
}

void sub_1B42FA3C8()
{
  sub_1B42F7CF0();
}

uint64_t sub_1B42FA3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B42F83C0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t **)(v2 + 32));
}

uint64_t sub_1B42FA3F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B42FA41C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

void type metadata accessor for TTRMutableTreeStorage.DescendantIterator()
{
  JUMPOUT(0x1B5E3D624);
}

void sub_1B42FA434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B42F9578(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1B42FA43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B42F9BE0(a1, a2, *(void (**)(char *, char *, uint64_t))(v2 + 16));
}

uint64_t sub_1B42FA444(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1B42FA44C()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for TTRMutableTreeStorage()
{
  JUMPOUT(0x1B5E3D624);
}

void type metadata accessor for TTRMutableTreeStorage.DescendantIterator.Level()
{
  JUMPOUT(0x1B5E3D624);
}

unint64_t sub_1B42FA4AC()
{
  unint64_t result;

  result = qword_1ED4ECDB8;
  if (!qword_1ED4ECDB8)
  {
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED4ECDB8);
  }
  return result;
}

uint64_t sub_1B42FA4F0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;

  v39 = a5;
  v37 = a3;
  v8 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v38 = a2;
  if (a2 >> 62)
  {
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v15 = sub_1B49081B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  v16 = MEMORY[0x1E0DEE9D8];
  if (!v15)
    goto LABEL_16;
  v41 = MEMORY[0x1E0DEE9D8];
  result = sub_1B41FF024(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    v36 = a1;
    v16 = v41;
    if ((v38 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v15; ++i)
      {
        v19 = MEMORY[0x1B5E3C268](i, v38);
        v20 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 120);
        swift_beginAccess();
        sub_1B42FABFC(v20, (uint64_t)v11);
        swift_unknownObjectRelease();
        v41 = v16;
        v22 = *(_QWORD *)(v16 + 16);
        v21 = *(_QWORD *)(v16 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1B41FF024(v21 > 1, v22 + 1, 1);
          v16 = v41;
        }
        *(_QWORD *)(v16 + 16) = v22 + 1;
        sub_1B41EA59C((uint64_t)v11, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22, type metadata accessor for TTRAccountsListsViewModel.Item);
      }
    }
    else
    {
      v23 = v38 + 32;
      do
      {
        v24 = *(_QWORD *)v23 + *(_QWORD *)(**(_QWORD **)v23 + 120);
        swift_beginAccess();
        sub_1B42FABFC(v24, (uint64_t)v14);
        v41 = v16;
        v26 = *(_QWORD *)(v16 + 16);
        v25 = *(_QWORD *)(v16 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1B41FF024(v25 > 1, v26 + 1, 1);
          v16 = v41;
        }
        *(_QWORD *)(v16 + 16) = v26 + 1;
        sub_1B41EA59C((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v26, type metadata accessor for TTRAccountsListsViewModel.Item);
        v23 += 8;
        --v15;
      }
      while (v15);
    }
    a1 = v36;
LABEL_16:
    if (a1 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      result = sub_1B49081B0();
      v27 = result;
      if (result)
      {
LABEL_18:
        if (v27 >= 1)
        {
          v28 = 0;
          while (1)
          {
            if ((a1 & 0xC000000000000001) != 0)
            {
              v29 = MEMORY[0x1B5E3C268](v28, a1);
            }
            else
            {
              v29 = *(_QWORD *)(a1 + 8 * v28 + 32);
              swift_retain();
            }
            sub_1B42F9298(v29, v16, a4, v39);
            v30 = (_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 136));
            swift_beginAccess();
            if (*v30 >> 62)
            {
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              v34 = sub_1B49081B0();
              swift_bridgeObjectRelease();
              if (v34)
              {
LABEL_26:
                v40 = v38;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                v31 = swift_retain();
                MEMORY[0x1B5E3B128](v31);
                if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1B4906DF4();
                sub_1B4906E54();
                sub_1B4906DC4();
                v32 = v40;
                swift_retain();
                v33 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                sub_1B42FA4F0(v33, v32, v37, a4, v39);
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
              }
            }
            else if (*(_QWORD *)((*v30 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_26;
            }
            swift_release();
            if (v27 == ++v28)
              goto LABEL_33;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v27)
        goto LABEL_18;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B42FA958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  uint64_t result;
  _BYTE v24[40];
  unint64_t v25;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB518);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v24[-v15];
  sub_1B41EA51C(a1, (uint64_t)v10, &qword_1ED4EB518);
  v17 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  LODWORD(a1) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17);
  swift_retain_n();
  if ((_DWORD)a1 == 1)
  {
    sub_1B41EA560((uint64_t)v10, &qword_1ED4EB518);
    swift_beginAccess();
    swift_retain();
    v18 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B42FA4F0(v18, MEMORY[0x1E0DEE9D8], a2, a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release_n();
  }
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter((uint64_t)v13);
  sub_1B41EA5FC((uint64_t)v10, type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1B41EA59C((uint64_t)v13, (uint64_t)v16, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  v19 = sub_1B47669F8((uint64_t)v16);
  if (v19)
  {
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B49131A0;
    *(_QWORD *)(inited + 32) = v20;
    v25 = inited;
    sub_1B4906DC4();
    v22 = v25;
    swift_retain();
    swift_retain();
    sub_1B42FA4F0(v22, MEMORY[0x1E0DEE9D8], a2, a3, a4);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1B41EA5FC((uint64_t)v16, type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return swift_release_n();
  }
  swift_release_n();
  result = sub_1B4908144();
  __break(1u);
  return result;
}

uint64_t sub_1B42FABFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B42FAC40(id a1, char a2)
{
  if (a2 != -1)
    sub_1B42FAC54(a1, a2);
}

void sub_1B42FAC54(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 4:

      break;
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1B42FAC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B42FAE38(a1, a2);
}

uint64_t sub_1B42FAC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B42FACE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRAccountsListsViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B42FAD24(uint64_t *a1)
{
  sub_1B42F7F04(*a1);
}

void sub_1B42FAD4C()
{
  sub_1B42EEB4C();
}

BOOL sub_1B42FAD5C(uint64_t a1)
{
  if (a1)
    swift_release();
  return a1 != 0;
}

uint64_t sub_1B42FAD80(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B42F454C(a1, v1[6], v1[2], v1[3], v1[4]) & 1;
}

void sub_1B42FADA4()
{
  sub_1B42F893C();
}

uint64_t sub_1B42FADC0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1B4903BC0();
    result = MEMORY[0x1B5E3D6D8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B42FAE00()
{
  return sub_1B42F88B4();
}

uint64_t sub_1B42FAE1C@<X0>(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1B42F85FC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1B42FAE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v5, v4);
}

_QWORD *sub_1B42FAEAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

_QWORD *sub_1B42FAED8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_1B42FAF24(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void sub_1B42FAF60(uint64_t *a1)
{
  sub_1B42FAD24(a1);
}

id TTRNoDefaultImplicitActionLayer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTRNoDefaultImplicitActionLayer.init()()
{
  return sub_1B42FB0B0(type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionLayer()
{
  return objc_opt_self();
}

id TTRNoDefaultImplicitActionLayer.init(layer:)(_QWORD *a1)
{
  return sub_1B42FB194(a1, type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id TTRNoDefaultImplicitActionLayer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TTRNoDefaultImplicitActionLayer.init(coder:)(void *a1)
{
  return sub_1B42FB228(a1, type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id TTRNoDefaultImplicitActionLayer.__deallocating_deinit()
{
  return sub_1B42FB47C(type metadata accessor for TTRNoDefaultImplicitActionLayer);
}

id _s15RemindersUICore31TTRNoDefaultImplicitActionLayerC07defaultF06forKeySo8CAAction_pSgSS_tFZ_0()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
}

id TTRNoDefaultImplicitActionShapeLayer.init()()
{
  return sub_1B42FB0B0(type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B42FB0B0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionShapeLayer()
{
  return objc_opt_self();
}

id _s15RemindersUICore31TTRNoDefaultImplicitActionLayerC5layerACyp_tcfC_0(_QWORD *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1B4908378());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

id TTRNoDefaultImplicitActionShapeLayer.init(layer:)(_QWORD *a1)
{
  return sub_1B42FB194(a1, type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B42FB194(_QWORD *a1, uint64_t (*a2)(void))
{
  void *v2;
  uint64_t v5;
  id v6;
  objc_super v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_1B4908378();
  v8.receiver = v2;
  v8.super_class = (Class)a2();
  v6 = objc_msgSendSuper2(&v8, sel_initWithLayer_, v5);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

id TTRNoDefaultImplicitActionShapeLayer.init(coder:)(void *a1)
{
  return sub_1B42FB228(a1, type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B42FB228(void *a1, uint64_t (*a2)(void))
{
  void *v2;
  id v4;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)a2();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id TTRNoDefaultImplicitActionShapeLayer.__deallocating_deinit()
{
  return sub_1B42FB47C(type metadata accessor for TTRNoDefaultImplicitActionShapeLayer);
}

id sub_1B42FB2B0()
{
  return sub_1B42FB47C(type metadata accessor for TTRNoDefaultImplicitActionGradientLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitActionGradientLayer()
{
  return objc_opt_self();
}

id sub_1B42FB300()
{
  return sub_1B42FB47C(type metadata accessor for TTRNoDefaultImplicitTransformLayer);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitTransformLayer()
{
  return objc_opt_self();
}

id sub_1B42FB338(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1B42FB380(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  id v7;
  objc_super v9;
  _QWORD v10[4];

  swift_unknownObjectRetain();
  sub_1B4907C4C();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v6 = sub_1B4908378();
  v9.receiver = a1;
  v9.super_class = (Class)a4();
  v7 = objc_msgSendSuper2(&v9, sel_initWithLayer_, v6);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  return v7;
}

id sub_1B42FB42C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1B42FB470()
{
  return sub_1B42FB47C(type metadata accessor for TTRNoDefaultImplicitScrollLayer);
}

id sub_1B42FB47C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for TTRNoDefaultImplicitScrollLayer()
{
  return objc_opt_self();
}

uint64_t static TTRTextFieldCharacterLimiter.isWithinCharacterLimit(for:range:replacementString:maxLength:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if (!a5)
    return 1;
  result = (uint64_t)objc_msgSend(a1, sel_string);
  if (result)
  {
    v11 = (void *)result;
    v12 = (void *)sub_1B4906A34();
    v13 = objc_msgSend(v11, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v12);

    sub_1B4906A64();
    v14 = sub_1B4906B30();
    v15 = objc_msgSend(a1, sel_string);
    sub_1B4906A64();

    v16 = sub_1B4906B30();
    swift_bridgeObjectRelease();
    if (v16 < v14)
    {
      v17 = sub_1B4906B30();
      swift_bridgeObjectRelease();

      return v17 <= a6;
    }

    swift_bridgeObjectRelease();
    return 1;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for TTRTextFieldCharacterLimiter()
{
  return &type metadata for TTRTextFieldCharacterLimiter;
}

uint64_t TTRBoardReminderCellTitleConfiguration.module.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B4907B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TTRBoardReminderCellTitleConfiguration.module.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B4907B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TTRBoardReminderCellTitleConfiguration.module.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellTitleConfiguration.viewModelUpdate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B42FB6D8(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1B42FB6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TTRBoardReminderCellTitleConfiguration.viewModelUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B42FB72C(a1, v2 + *(int *)(a2 + 28));
}

uint64_t sub_1B42FB72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TTRBoardReminderCellTitleConfiguration.viewModelUpdate.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellTitleConfiguration.init(module:viewModelUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
  v8 = sub_1B4907B14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(a4, a1, v8);
  v11 = type metadata accessor for TTRBoardReminderCellTitleConfiguration(0, a3, v9, v10);
  return sub_1B41DF5E4(a2, a4 + *(int *)(v11 + 28), &qword_1EF09D110);
}

uint64_t type metadata accessor for TTRBoardReminderCellTitleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRBoardReminderCellTitleConfiguration);
}

uint64_t TTRBoardReminderCellNotesConfiguration.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TTRBoardReminderCellNotesConfiguration.isHidden.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.isHidden.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.module.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1B4907B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t TTRBoardReminderCellNotesConfiguration.module.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_1B4907B14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.module.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.viewModelUpdate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(int *)(a1 + 40);
  v7 = type metadata accessor for TTRBoardReminderCellOptionalUpdate(0, *(_QWORD *)(a1 + 24), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t type metadata accessor for TTRBoardReminderCellOptionalUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRBoardReminderCellOptionalUpdate);
}

uint64_t TTRBoardReminderCellNotesConfiguration.viewModelUpdate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(int *)(a2 + 40);
  v7 = type metadata accessor for TTRBoardReminderCellOptionalUpdate(0, *(_QWORD *)(a2 + 24), a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
}

uint64_t (*TTRBoardReminderCellNotesConfiguration.viewModelUpdate.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellNotesConfiguration.init(isHidden:module:viewModelUpdate:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v12 = type metadata accessor for TTRBoardReminderCellNotesConfiguration(0, a4, a5, a4);
  v13 = &a6[*(int *)(v12 + 36)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v13, 1, 1, a4);
  *a6 = a1;
  v14 = sub_1B4907B14();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v13, a2, v14);
  v15 = &a6[*(int *)(v12 + 40)];
  v18 = type metadata accessor for TTRBoardReminderCellOptionalUpdate(0, a5, v16, v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, a3, v18);
}

uint64_t type metadata accessor for TTRBoardReminderCellNotesConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRBoardReminderCellNotesConfiguration);
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.isCompleted.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellCompletedButtonConfiguration.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void TTRBoardReminderCellCompletedButtonConfiguration.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.buttonStyle.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.preferredSymbolConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellCompletedButtonConfiguration.onCompletedPressed.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

void *TTRBoardReminderCellLocationConfiguration.icon.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void TTRBoardReminderCellLocationConfiguration.icon.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*TTRBoardReminderCellLocationConfiguration.icon.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellLocationConfiguration.attributedDescription.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

void TTRBoardReminderCellLocationConfiguration.attributedDescription.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellLocationConfiguration.attributedDescription.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellLocationConfiguration.isHidden.getter(int a1, id a2)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!a2)
    return 1;
  v2 = objc_msgSend(a2, sel_string);
  v3 = sub_1B4906A64();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  return v6 == 0;
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.url.modify())()
{
  return nullsub_1;
}

id TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 20)));
}

uint64_t type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment()
{
  uint64_t result;

  result = qword_1EF09D308;
  if (!qword_1EF09D308)
    return swift_getSingletonMetadata();
  return result;
}

void TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.attachmentID.modify())(_QWORD)
{
  type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
  return nullsub_1;
}

void *TTRBoardReminderCellURLConfiguration.Attachment.metadata.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 24));
  v2 = v1;
  return v1;
}

void TTRBoardReminderCellURLConfiguration.Attachment.metadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment() + 24);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.Attachment.metadata.modify())(_QWORD)
{
  type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
  return nullsub_1;
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.init(url:attachmentID:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
  v9 = *(int *)(v8 + 24);
  v10 = sub_1B49036D4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a4, a1, v10);
  *(_QWORD *)(a4 + *(int *)(v8 + 20)) = a2;
  *(_QWORD *)(a4 + v9) = a3;
  return result;
}

uint64_t TTRBoardReminderCellURLConfiguration.attachments.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TTRBoardReminderCellURLConfiguration.attachments.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellURLConfiguration.isHidden.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.contact.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.name.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellAssigneeConfiguration.onAssigneePress.modify())()
{
  return nullsub_1;
}

BOOL TTRBoardReminderCellAssigneeConfiguration.isHidden.getter()
{
  _QWORD *v0;

  return *v0 == 0;
}

id TTRBoardReminderCellAppLinkConfiguration.icon.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void TTRBoardReminderCellAppLinkConfiguration.icon.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.name.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1B41E1C64(v1);
  return v1;
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B41E1CB4(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellAppLinkConfiguration.onAppLinkPress.modify())()
{
  return nullsub_1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationV7contact4name02onF5PressACSo9CNContactCSg_SSSgySo6UIViewCcSgtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

BOOL TTRBoardReminderCellAppLinkConfiguration.isHidden.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_1B41DF5E4(v0, (uint64_t)&v2, &qword_1EF09D118);
  sub_1B41DF5E4((uint64_t)&v2, (uint64_t)&v3, &qword_1EF09D118);
  return !v3 && *(_QWORD *)(v0 + 16) == 0;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.isShowingSubtasks.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.subtaskCount.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellShowSubtasksConfiguration.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void TTRBoardReminderCellShowSubtasksConfiguration.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1B41E1C64(v1);
  return v1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B41E1CB4(*(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellShowSubtasksConfiguration.onShowSubtasksButtonPress.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3 & 1;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v1 = 0;
    if ((*(_BYTE *)v0 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 8);
    if ((*(_BYTE *)v0 & 1) != 0)
    {
LABEL_3:
      if (qword_1ED4EE550 == -1)
        goto LABEL_7;
      goto LABEL_8;
    }
  }
  if (qword_1ED4EE550 != -1)
LABEL_8:
    swift_once();
LABEL_7:
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = v1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.isHidden.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) & 1 | (*(_QWORD *)(v0 + 8) == 0);
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.subtaskCountString.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellSubtaskCountConfiguration.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void TTRBoardReminderCellSubtaskCountConfiguration.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t (*TTRBoardReminderCellSubtaskCountConfiguration.onSubtaskCountPressed.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCount:displayStyle:tintColor:onSubtaskCountPressed:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a3 != 2 && (a3 & 1) == 0 && (a2 & 1) == 0)
  {
    v15 = result;
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v16 = swift_allocObject();
    v17 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v16 + 16) = xmmword_1B4911D70;
    v18 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v16 + 56) = v17;
    *(_QWORD *)(v16 + 64) = v18;
    *(_QWORD *)(v16 + 32) = v15;
    v13 = sub_1B4906A40();
    v14 = v19;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  *a7 = v13;
  a7[1] = v14;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = a6;
  return result;
}

BOOL TTRBoardReminderCellSubtaskCountConfiguration.isHidden.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[16];
  uint64_t v4;
  unint64_t v5;

  sub_1B41DF5E4(v0, (uint64_t)v3, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)v3, (uint64_t)&v4, &qword_1ED4E16B0);
  if (!v5)
    return 1;
  if ((v5 & 0x2000000000000000) != 0)
    v1 = HIBYTE(v5) & 0xF;
  else
    v1 = v4 & 0xFFFFFFFFFFFFLL;
  return v1 == 0;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.sectionTitle.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B41E1C64(v1);
  return v1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B41E1CB4(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.onSuggestedSectionPress.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.isEditingItem.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*TTRBoardReminderCellSuggestedSectionConfiguration.isInMultiSelectMode.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.init(sectionTitle:onSuggestedSectionPress:isEditingItem:isInMultiSelectMode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 33) = a6;
  return result;
}

uint64_t TTRBoardReminderCellSuggestedSectionConfiguration.isHidden.getter()
{
  uint64_t v0;
  _BYTE v2[16];
  _BYTE v3[8];
  uint64_t v4;

  sub_1B41DF5E4(v0, (uint64_t)v2, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)v2, (uint64_t)v3, &qword_1ED4E16B0);
  if (!v4 || (*(_BYTE *)(v0 + 32) & 1) != 0)
    return 1;
  else
    return *(_BYTE *)(v0 + 33) & 1;
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.infoButtonState.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.infoButtonState.modify())()
{
  return nullsub_1;
}

void *TTRBoardReminderCellInfoButtonConfiguration.tintColor.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

void TTRBoardReminderCellInfoButtonConfiguration.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.tintColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B41E1C64(a3);
  return a3;
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B41E1CB4(*(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*TTRBoardReminderCellInfoButtonConfiguration.onInfoPressed.modify())()
{
  return nullsub_1;
}

BOOL static TTRBoardReminderCellInfoButtonVisibility.Layout.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRBoardReminderCellInfoButtonVisibility.Layout.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t TTRBoardReminderCellInfoButtonVisibility.Layout.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

uint64_t static TTRBoardReminderCellInfoButtonVisibility.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t result;
  _BOOL4 v4;

  v2 = a1;
  result = a2 == 2 && a1 == 2;
  if (v2 != 2)
  {
    v4 = ((a2 ^ v2) & 1) == 0;
    if (a2 == 2)
      return result;
    else
      return v4;
  }
  return result;
}

BOOL sub_1B42FCA54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL8 result;

  v2 = *a1;
  v3 = *a2;
  result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2)
    return ((v3 ^ v2) & 1) == 0;
  return result;
}

uint64_t TTRBoardReminderCellContentConfigurationType.notesTextViewIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for TTRBoardReminderCellNotesConfiguration(0, AssociatedTypeWitness, v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (unsigned __int8 *)&v14 - v10;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 144))(a1, a2, v9);
  v12 = *v11;
  (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v11, v7);
  return v12;
}

BOOL TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (*(uint64_t (**)(void))(a2 + 336))();
  if (!v3)
    return 1;
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v4 & 0xFFFFFFFFFFFFLL;
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (*(uint64_t (**)(void))(a2 + 384))();
  if (!v3)
    return 1;
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v4 & 0xFFFFFFFFFFFFLL;
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.flaggedIndicatorIsHidden.getter(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 360))() & 1) == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 432))();
  if (!v2)
    return 1;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_string);

  v5 = sub_1B4906A64();
  v7 = v6;

  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  return v8 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (*(uint64_t (**)(void))(a2 + 408))();
  if (!v3)
    return 1;
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v4 & 0xFFFFFFFFFFFFLL;
  return v6 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  _QWORD v7[2];
  uint64_t v8[2];
  id v9;
  _BYTE v10[16];
  uint64_t v11;
  unint64_t v12;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 216))(v7);
  sub_1B41DF5E4((uint64_t)v7, (uint64_t)v10, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)v10, (uint64_t)&v11, &qword_1ED4E16B0);
  v2 = v12;
  if (v12)
  {
    v3 = v11;
    sub_1B42CA414((uint64_t)v10);
    v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    v5 = v4 == 0;
  }
  else
  {
    v5 = 1;
  }
  sub_1B41DF5E4((uint64_t)v8, (uint64_t)&v9, &qword_1EF0B3A20);
  sub_1B428B77C(&v9);
  sub_1B41E1CB4(v8[1]);
  return v5;
}

BOOL TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  v3 = (void *)(*(uint64_t (**)(void))(a2 + 168))();
  v4 = v2;
  if (v2)
  {
    v5 = objc_msgSend(v2, sel_string);
    v6 = sub_1B4906A64();
    v8 = v7;

    swift_bridgeObjectRelease();
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v6 & 0xFFFFFFFFFFFFLL;
    v10 = v9 == 0;
  }
  else
  {
    v10 = 1;
  }

  return v10;
}

uint64_t TTRBoardReminderCellContentConfigurationType.imageAttachmentsAreHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 288))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
  return a2 & 1;
}

BOOL TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  id v4;
  uint64_t v5[3];
  _BYTE v6[16];

  (*(void (**)(id *__return_ptr))(a2 + 480))(&v4);
  v2 = v4 == 0;

  sub_1B41DF5E4((uint64_t)v5, (uint64_t)v6, &qword_1ED4E16B0);
  sub_1B42CA414((uint64_t)v6);
  sub_1B41E1CB4(v5[2]);
  return v2;
}

BOOL TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(uint64_t a1, uint64_t a2)
{
  _BOOL8 v2;
  uint64_t v4;
  _QWORD v5[3];
  _BYTE v6[16];
  id v7;
  uint64_t v8;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 504))(&v4);
  sub_1B41DF5E4((uint64_t)&v4, (uint64_t)&v7, &qword_1EF09D118);
  sub_1B41DF5E4((uint64_t)&v7, (uint64_t)&v8, &qword_1EF09D118);
  if (v8)
  {
    sub_1B428B77C(&v7);
    v2 = 0;
  }
  else
  {
    v2 = v5[1] == 0;
  }
  sub_1B41DF5E4((uint64_t)v5, (uint64_t)v6, &qword_1ED4E16B0);
  sub_1B42CA414((uint64_t)v6);
  sub_1B41E1CB4(v5[2]);
  return v2;
}

BOOL TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)((*(uint64_t (**)(void))(a2 + 456))() + 16);
  swift_bridgeObjectRelease();
  return v2 == 0;
}

BOOL TTRBoardReminderCellContentConfigurationType.accessoriesAreHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  void (*v15)(char *, uint64_t, uint64_t);
  BOOL v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v21;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v14 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter(v12, v13);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v11, v3, a1);
  v16 = v14 && TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter(a1, a2);
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v11, a1);
  v15(v8, v3, a1);
  if (v16)
  {
    v18 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 456))(a1, a2) + 16);
    swift_bridgeObjectRelease();
    v19 = v18 == 0;
  }
  else
  {
    v19 = 0;
  }
  v17(v8, a1);
  return v19;
}

uint64_t TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter(uint64_t a1, uint64_t a2)
{
  char v2;
  _QWORD v4[2];
  char v5;
  uint64_t v6[2];
  id v7;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 192))(v4);
  v2 = v5 | (v4[1] == 0);
  sub_1B41DF5E4((uint64_t)v6, (uint64_t)&v7, &qword_1EF0B3A20);
  sub_1B428B77C(&v7);
  sub_1B41E1CB4(v6[1]);
  return v2 & 1;
}

void TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = (*(uint64_t (**)(void))(a2 + 264))();
  v4 = v3;

  sub_1B41E1CB4(v4);
  __asm { BR              X10 }
}

BOOL sub_1B42FD268()
{
  uint64_t v0;
  uint64_t v1;

  return ((*(uint64_t (**)(uint64_t, uint64_t))(v0 + 48))(v1, v0) & 1) != 0;
}

uint64_t TTRBoardReminderCellContentConfigurationType.suggestedSectionButtonIsHidden.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[3];
  char v5;
  char v6;
  _BYTE v7[16];
  _BYTE v8[8];
  uint64_t v9;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 240))(v4);
  sub_1B41DF5E4((uint64_t)v4, (uint64_t)v7, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)v7, (uint64_t)v8, &qword_1ED4E16B0);
  if (!v9 || (sub_1B42CA414((uint64_t)v7), (v5 & 1) != 0))
    v2 = 1;
  else
    v2 = v6 & 1;
  sub_1B41E1CB4(v4[2]);
  return v2;
}

unint64_t sub_1B42FD348()
{
  unint64_t result;

  result = qword_1EF09D120[0];
  if (!qword_1EF09D120[0])
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRBoardReminderCellInfoButtonVisibility.Layout, &type metadata for TTRBoardReminderCellInfoButtonVisibility.Layout);
    atomic_store(result, qword_1EF09D120);
  }
  return result;
}

uint64_t sub_1B42FD38C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1B42FD404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  size_t v10;
  int v11;
  int v12;
  size_t v13;
  uint64_t v15;
  int v16;
  int v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  v10 = v8 + 9;
  v11 = *(_DWORD *)(v6 + 80);
  v12 = *(_DWORD *)(v6 + 84);
  if (v12)
    v13 = v9;
  else
    v13 = v10;
  if ((v11 & 0x1000F8) != 0 || v13 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8));
    swift_retain();
    return a1;
  }
  if (!v12)
  {
    if (!*((_BYTE *)a2 + v9))
      goto LABEL_18;
    v16 = *((unsigned __int8 *)a2 + v9) - 1;
    v17 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0)
    {
      v16 = 0;
      v17 = *(_DWORD *)a2;
    }
    if ((v17 | v16) == 0xFFFFFFFF)
      goto LABEL_18;
LABEL_17:
    memcpy(a1, a2, v13);
    return a1;
  }
  if ((*(unsigned int (**)(_QWORD *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
    goto LABEL_17;
  }
LABEL_18:
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
  *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (!v12)
    *((_BYTE *)a1 + v9) = 0;
  return a1;
}

uint64_t sub_1B42FD538(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
  {
    result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    v7 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (!*((_BYTE *)a1 + v7))
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v4 + 8))(a1, v3);
    v8 = v7 & 0xFFFFFFF8;
    v9 = (v7 & 0xFFFFFFF8) != 0 ? 0 : *((unsigned __int8 *)a1 + v7) - 1;
    v10 = v8 ? *a1 : 0;
    v11 = v10 | v9;
    result = (v11 + 1);
    if (v11 == -1)
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_1B42FD5E0(_BYTE *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  size_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7)
  {
    if (!(*(unsigned int (**)(_DWORD *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
LABEL_12:
      (*(void (**)(_BYTE *, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(_QWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (!v7)
        a1[v10] = 0;
      return a1;
    }
  }
  else
  {
    if (!*((_BYTE *)a2 + v10))
      goto LABEL_12;
    v11 = *((unsigned __int8 *)a2 + v10) - 1;
    v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      v11 = 0;
      v12 = *a2;
    }
    if ((v12 | v11) == 0xFFFFFFFF)
      goto LABEL_12;
  }
  if (v7)
    v13 = v9 + 8;
  else
    v13 = v9 + 9;
  memcpy(a1, a2, v13);
  return a1;
}

_DWORD *sub_1B42FD6D8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(_DWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (!(_DWORD)v7)
  {
    if (*((_BYTE *)a1 + v10))
    {
      v14 = *((unsigned __int8 *)a1 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v15 = 0;
      }
      else
      {
        v14 = 0;
        v15 = *a1;
      }
      if ((v15 | v14) != 0xFFFFFFFF)
      {
        if (!*((_BYTE *)a2 + v10))
          goto LABEL_27;
        v16 = *((unsigned __int8 *)a2 + v10) - 1;
        if ((_DWORD)v9 == -8)
        {
          v17 = 0;
        }
        else
        {
          v16 = 0;
          v17 = *a2;
        }
        if ((v17 | v16) == 0xFFFFFFFF)
          goto LABEL_27;
        goto LABEL_23;
      }
    }
    if (!*((_BYTE *)a2 + v10))
    {
LABEL_20:
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 24))(a1, a2, v5);
      *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      return a1;
    }
    v18 = *((unsigned __int8 *)a2 + v10) - 1;
    if ((_DWORD)v9 == -8)
    {
      v19 = 0;
    }
    else
    {
      v18 = 0;
      v19 = *a2;
    }
    v13 = (v19 | v18) + 1;
LABEL_18:
    if (v13)
    {
      (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  v11 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  v12 = v11(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v13 = v11(a2, v7, v5);
  if (!v12)
    goto LABEL_18;
  if (!v13)
  {
LABEL_27:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    if (!(_DWORD)v7)
      *((_BYTE *)a1 + v10) = 0;
    return a1;
  }
LABEL_23:
  if ((_DWORD)v7)
    v20 = v9 + 8;
  else
    v20 = v9 + 9;
  memcpy(a1, a2, v20);
  return a1;
}

_BYTE *sub_1B42FD8A4(_BYTE *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  size_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (v7)
  {
    if (!(*(unsigned int (**)(_DWORD *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
LABEL_12:
      (*(void (**)(_BYTE *, _DWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      *(_QWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (!v7)
        a1[v10] = 0;
      return a1;
    }
  }
  else
  {
    if (!*((_BYTE *)a2 + v10))
      goto LABEL_12;
    v11 = *((unsigned __int8 *)a2 + v10) - 1;
    v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0)
    {
      v11 = 0;
      v12 = *a2;
    }
    if ((v12 | v11) == 0xFFFFFFFF)
      goto LABEL_12;
  }
  if (v7)
    v13 = v9 + 8;
  else
    v13 = v9 + 9;
  memcpy(a1, a2, v13);
  return a1;
}

_DWORD *sub_1B42FD99C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(_DWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  if (!(_DWORD)v7)
  {
    if (*((_BYTE *)a1 + v10))
    {
      v14 = *((unsigned __int8 *)a1 + v10) - 1;
      if ((_DWORD)v9 == -8)
      {
        v15 = 0;
      }
      else
      {
        v14 = 0;
        v15 = *a1;
      }
      if ((v15 | v14) != 0xFFFFFFFF)
      {
        if (!*((_BYTE *)a2 + v10))
          goto LABEL_27;
        v16 = *((unsigned __int8 *)a2 + v10) - 1;
        if ((_DWORD)v9 == -8)
        {
          v17 = 0;
        }
        else
        {
          v16 = 0;
          v17 = *a2;
        }
        if ((v17 | v16) == 0xFFFFFFFF)
          goto LABEL_27;
        goto LABEL_23;
      }
    }
    if (!*((_BYTE *)a2 + v10))
    {
LABEL_20:
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 40))(a1, a2, v5);
      *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      return a1;
    }
    v18 = *((unsigned __int8 *)a2 + v10) - 1;
    if ((_DWORD)v9 == -8)
    {
      v19 = 0;
    }
    else
    {
      v18 = 0;
      v19 = *a2;
    }
    v13 = (v19 | v18) + 1;
LABEL_18:
    if (v13)
    {
      (*(void (**)(_DWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  v11 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
  v12 = v11(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v13 = v11(a2, v7, v5);
  if (!v12)
    goto LABEL_18;
  if (!v13)
  {
LABEL_27:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    if (!(_DWORD)v7)
      *((_BYTE *)a1 + v10) = 0;
    return a1;
  }
LABEL_23:
  if ((_DWORD)v7)
    v20 = v9 + 8;
  else
    v20 = v9 + 9;
  memcpy(a1, a2, v20);
  return a1;
}

uint64_t sub_1B42FDB68(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = 8;
  if (!v5)
    v7 = 9;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v9 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v7;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v11 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v11))
    {
      v12 = *(_DWORD *)((char *)a1 + v9);
      if (v12)
        goto LABEL_12;
      goto LABEL_18;
    }
    if (v11 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v9);
      if (*(_WORD *)((char *)a1 + v9))
        goto LABEL_12;
      goto LABEL_18;
    }
    if (v11 < 2)
      goto LABEL_18;
  }
  v12 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
  {
LABEL_18:
    if (v5 >= 2)
    {
      v15 = (*(uint64_t (**)(void))(v4 + 48))();
      if (v15 >= 2)
        return v15 - 1;
      else
        return 0;
    }
    return 0;
  }
LABEL_12:
  v13 = (v12 - 1) << v10;
  if (v9 >= 4)
    v13 = 0;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
      LODWORD(v9) = *(unsigned __int8 *)a1;
    else
      LODWORD(v9) = *a1;
  }
  return v6 + (v9 | v13) + 1;
}

void sub_1B42FDC74(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  size_t v11;
  size_t v12;
  size_t v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = (*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  v12 = v10 + 9;
  if (v8)
    v13 = v11;
  else
    v13 = v12;
  v14 = a3 >= v9;
  v15 = a3 - v9;
  if (v15 != 0 && v14)
  {
    if (v13 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_17;
      goto LABEL_25;
    }
    v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_17:
        v17 = ~v9 + a2;
        if (v13 < 4)
        {
          if (!(_DWORD)v13)
            goto LABEL_23;
          v17 &= ~(-1 << (8 * v13));
          bzero(a1, v13);
          if ((_DWORD)v13 == 1)
          {
            *a1 = v17;
            goto LABEL_23;
          }
        }
        else
        {
          bzero(a1, v13);
        }
        *(_DWORD *)a1 = v17;
LABEL_23:
        __asm { BR              X10 }
      }
LABEL_25:
      __asm { BR              X12 }
    }
    if (v16 >= 0x100)
      v6 = 2;
    else
      v6 = v16 > 1;
  }
  if (v9 < a2)
    goto LABEL_17;
  goto LABEL_25;
}

void sub_1B42FDDD0(int a1@<W1>, unsigned int a2@<W2>, size_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  int v14;

  *((_BYTE *)v12 + v13) = 0;
  if (a1 && a2 >= 2)
  {
    if (a1 + 1 <= a2)
    {
      if (a1 != -1)
        (*(void (**)(_DWORD *, _QWORD))(v11 + 56))(v12, (a1 + 1));
    }
    else if ((_DWORD)a3)
    {
      v14 = a1 - a2;
      bzero(v12, a3);
      *v12 = v14;
    }
  }
}

uint64_t sub_1B42FDE6C(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84))
    return (*(uint64_t (**)(void))(v2 + 48))();
  v4 = ((*(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!*((_BYTE *)a1 + v4))
    return 0;
  v5 = v4 & 0xFFFFFFF8;
  if ((v4 & 0xFFFFFFF8) != 0)
    v6 = 0;
  else
    v6 = *((unsigned __int8 *)a1 + v4) - 1;
  if (v5)
    v7 = *a1;
  else
    v7 = 0;
  return (v7 | v6) + 1;
}

void sub_1B42FDECC(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  char v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v6 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 <= v5)
  {
    if ((_DWORD)v5)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v6] = 0;
      if (!(_DWORD)a2)
        return;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 56))(a1, a2, v5);
    return;
  }
  if (((*(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
    v7 = a2 - v5;
  else
    v7 = 1;
  if (((*(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v8 = ~(_DWORD)v5 + a2;
    bzero(a1, v6);
    *(_DWORD *)a1 = v8;
  }
  if (!(_DWORD)v5)
    a1[v6] = v7;
}

void sub_1B42FDF7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B4907B14();
  if (v0 <= 0x3F)
  {
    sub_1B430BA7C(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_1B42FE004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  _BYTE *v41;
  _BYTE *v42;
  int v43;
  char v44;
  int v45;
  int v46;
  char v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  char v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  size_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  unsigned __int8 *v82;
  int v83;
  id v84;
  uint64_t *v85;
  size_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  unsigned __int8 *v90;
  int v91;
  id v92;
  uint64_t *v93;
  size_t v94;
  uint64_t v95;
  void *v96;
  char *v97;
  unsigned __int8 *v98;
  int v99;
  id v100;
  void *v101;
  id v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  void *v110;
  id v111;
  unsigned int v112;
  unsigned int v113;
  unint64_t v114;
  unsigned int v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  void (*v119)(unint64_t, unint64_t, uint64_t);
  unint64_t v120;
  unint64_t v121;
  void *v122;
  id v123;
  __int128 v124;
  int v125;
  void *v126;
  char v127;
  __int128 v128;
  void *v129;
  char v130;
  __int128 v131;
  id v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  int v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  char v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  id v158;
  id v159;
  unint64_t v160;
  unint64_t v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unsigned __int8 v168;
  int v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  char v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  id v187;
  void *v188;
  char v189;
  char v190;
  __int128 v191;
  id v192;
  void *v193;
  char v194;
  char v195;
  __int128 v196;
  id v197;
  void *v198;
  char v199;
  char v200;
  __int128 v201;
  id v202;
  unsigned int v203;
  uint64_t v204;
  BOOL v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  void *v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  void *v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  void *v219;
  id v220;
  id v221;
  id v222;
  unsigned int v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t *result;
  uint64_t v227;
  uint64_t v228;
  size_t __n;
  unsigned int v230;
  int v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  size_t v244;
  uint64_t v246;
  uint64_t v247;
  _BYTE *v248;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  v244 = v5;
  v239 = sub_1B49037E8();
  v6 = *(_QWORD *)(v239 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 & 0xF8;
  v9 = v8 | 7;
  v238 = sub_1B49046DC();
  v10 = *(_QWORD *)(v238 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = sub_1B4905C78();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v11 | v14 | v8 | 7;
  v242 = v10;
  v243 = v6;
  v16 = *(_QWORD *)(v6 + 64);
  if (v16 <= 0x19)
    v17 = 25;
  else
    v17 = *(_QWORD *)(v6 + 64);
  v18 = v17 + 1;
  v19 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v20 = v8 + 15;
  v241 = v7 & 0xF8 | 7;
  v237 = v11 + 8;
  v21 = *(_QWORD *)(v10 + 64) + (v237 & ~(unint64_t)v11);
  if (v17 + 1 + ((v8 + 15) & (unint64_t)~v9) > v19)
    v19 = v17 + 1 + ((v8 + 15) & ~v9);
  if (v19 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v19 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v19 <= (v16 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= *(_QWORD *)(v13 + 64) + ((v14 + 1) & ~v14))
    v19 = *(_QWORD *)(v13 + 64) + ((v14 + 1) & ~v14);
  if (v19 <= 0x18)
    v22 = 24;
  else
    v22 = v19;
  if (v22 > 3)
    goto LABEL_22;
  v23 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  v24 = 2;
  if (v23 > 0xFFF5)
    v24 = 4;
  if (v23 <= 0xF5)
LABEL_22:
    v24 = 1;
  v25 = v15 | *(_DWORD *)(v4 + 80);
  if (v25 != 7
    || ((v11 | v7 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || (v26 = v15 + v244,
        ((v15 + v244) & ~v15)
      + ((((((((v24 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    v30 = *a2;
    *a1 = *a2;
    v29 = (uint64_t *)(v30 + ((v25 + 16) & ~v25));
    swift_retain();
    return v29;
  }
  v232 = v14 + 1;
  v233 = *(_QWORD *)(v12 - 8);
  v27 = *(_DWORD *)(v13 + 80);
  v28 = v20;
  v234 = v12;
  v235 = v21 + 7;
  __n = v21;
  v236 = v16;
  v240 = v17;
  v230 = *(_DWORD *)(v243 + 84);
  v231 = *(_DWORD *)(v242 + 84);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
  {
    v29 = a1;
    memcpy(a1, a2, v244);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
    v31 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56);
    v29 = a1;
    v31(a1, 0, 1, v3);
  }
  v32 = v240;
  v33 = v28;
  v34 = ~v15;
  if (v22 > 3)
  {
    v35 = 11;
LABEL_32:
    v36 = 8;
    goto LABEL_33;
  }
  v40 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v40 > 0xFFF5)
  {
    v38 = 0x7FFFFFFF;
    goto LABEL_42;
  }
  v35 = v40 + 10;
  if (v40 <= 0xF5)
    goto LABEL_32;
  v36 = 16;
LABEL_33:
  v37 = (1 << v36) - v35;
  v38 = 0x7FFFFFFF;
  if (v37 <= 0x7FFFFFFF)
    v39 = 0x7FFFFFFF;
  else
    v39 = v37;
  if ((v37 & 0x80000000) == 0)
    v38 = v39;
LABEL_42:
  v41 = (_BYTE *)(((unint64_t)v29 + v26) & v34);
  v42 = (_BYTE *)(((unint64_t)a2 + v26) & v34);
  if (v22 > 3)
  {
    v43 = 11;
LABEL_44:
    v44 = 8;
    goto LABEL_45;
  }
  v49 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v49 > 0xFFF5)
    goto LABEL_56;
  v43 = v49 + 10;
  if (v49 <= 0xF5)
    goto LABEL_44;
  v44 = 16;
LABEL_45:
  v45 = (1 << v44) - v43;
  if ((v45 & 0x80000000) == 0)
  {
    if (v45 == v38)
      goto LABEL_47;
LABEL_57:
    if (v22 > 3)
      goto LABEL_61;
    v50 = ((1 << (8 * v22)) + 1) >> (8 * v22);
    v51 = 2;
    if (v50 > 0xFFF5)
      v51 = 4;
    if (v50 <= 0xF5)
LABEL_61:
      v51 = 1;
    v52 = *(_QWORD *)(((unint64_t)&v42[v22 + v51] & 0xFFFFFFFFFFFFF8) + 8);
    if (v52 >= 0xFFFFFFFF)
      LODWORD(v52) = -1;
    if ((_DWORD)v52 == -1)
      goto LABEL_103;
    goto LABEL_168;
  }
LABEL_56:
  if (v38 != 0x7FFFFFFF)
    goto LABEL_57;
LABEL_47:
  if (v22 > 3)
  {
    v46 = 11;
LABEL_49:
    v47 = 8;
    goto LABEL_50;
  }
  v53 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v53 > 0xFFF5)
    goto LABEL_69;
  v46 = v53 + 10;
  if (v53 <= 0xF5)
    goto LABEL_49;
  v47 = 16;
LABEL_50:
  v48 = (1 << v47) - v46;
  if ((v48 & 0x80000000) == 0)
  {
    if (v22 > 3)
      goto LABEL_73;
LABEL_70:
    v54 = ((1 << (8 * v22)) + 1) >> (8 * v22);
    v55 = 2;
    if (v54 > 0xFFF5)
      v55 = 4;
    if (v54 > 0xF5)
      goto LABEL_74;
    goto LABEL_73;
  }
LABEL_69:
  v48 = 0x7FFFFFFF;
  if (v22 <= 3)
    goto LABEL_70;
LABEL_73:
  v55 = 1;
LABEL_74:
  v56 = v38 - v48;
  if (v38 <= v48)
    goto LABEL_90;
  v57 = v55 + v22;
  v58 = 8 * (v55 + v22);
  if (v57 > 3)
    goto LABEL_76;
  v60 = ((v56 + ~(-1 << v58)) >> v58) + 1;
  if (HIWORD(v60))
  {
    v59 = *(_DWORD *)&v42[v57];
    if (!v59)
      goto LABEL_90;
    goto LABEL_83;
  }
  if (v60 > 0xFF)
  {
    v59 = *(unsigned __int16 *)&v42[v57];
    if (!*(_WORD *)&v42[v57])
      goto LABEL_90;
    goto LABEL_83;
  }
  if (v60 >= 2)
  {
LABEL_76:
    v59 = v42[v57];
    if (!v42[v57])
      goto LABEL_90;
LABEL_83:
    v61 = (v59 - 1) << v58;
    if (v57 > 3)
      v61 = 0;
    if ((_DWORD)v57)
    {
      if (v57 > 3)
        LODWORD(v57) = 4;
      __asm { BR              X12 }
    }
    if (v48 + v61 == -1)
      goto LABEL_103;
    goto LABEL_168;
  }
LABEL_90:
  if (!v48)
    goto LABEL_103;
  if (v22 > 3)
  {
    v62 = v42[v22];
    v63 = v62 | 0xFFFFFF00;
    v64 = v62 ^ 0xFF;
    v65 = 8;
    v66 = 11;
    goto LABEL_98;
  }
  v67 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v67 <= 0xFFF5)
  {
    v66 = v67 + 10;
    if (v67 > 0xF5)
    {
      v69 = *(unsigned __int16 *)&v42[v22];
      v63 = v69 | 0xFFFF0000;
      v64 = v69 ^ 0xFFFF;
      v65 = 16;
    }
    else
    {
      v68 = v42[v22];
      v63 = v68 | 0xFFFFFF00;
      v64 = v68 ^ 0xFF;
      v65 = 8;
    }
LABEL_98:
    v70 = (1 << v65) - v66;
    if ((v70 & 0x80000000) == 0)
    {
      if (v70 <= v64)
        goto LABEL_103;
LABEL_102:
      if (!v63)
        goto LABEL_103;
LABEL_168:
      if (v22 > 3)
        goto LABEL_172;
      v117 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      v118 = 2;
      if (v117 > 0xFFF5)
        v118 = 4;
      if (v117 <= 0xF5)
LABEL_172:
        v118 = 1;
      memcpy(v41, v42, ((((((((v118 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      return v29;
    }
    goto LABEL_101;
  }
  v63 = *(_DWORD *)&v42[v22];
  v64 = ~v63;
LABEL_101:
  if (v64 < 0x7FFFFFFF)
    goto LABEL_102;
LABEL_103:
  if (v22 > 3)
    goto LABEL_104;
  v72 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v72 > 0xFFF5)
  {
    v71 = *(_DWORD *)&v42[v22];
    goto LABEL_109;
  }
  if (v72 <= 0xF5)
LABEL_104:
    v71 = v42[v22];
  else
    v71 = *(unsigned __int16 *)&v42[v22];
LABEL_109:
  if (v71 >= 0xA)
  {
    if (v22 <= 3)
      v73 = v22;
    else
      v73 = 4;
    __asm { BR              X12 }
  }
  v74 = ~v241;
  switch(v71)
  {
    case 0u:
      v227 = v22;
      switch(v42[v240])
      {
        case 0:
          *v41 = *v42;
          v41[v240] = 0;
          goto LABEL_214;
        case 1:
          v126 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v127 = 1;
          goto LABEL_213;
        case 2:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 2;
          goto LABEL_214;
        case 3:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 3;
          goto LABEL_214;
        case 4:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 4;
          goto LABEL_214;
        case 5:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 5;
          goto LABEL_214;
        case 6:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 6;
          goto LABEL_214;
        case 7:
          v128 = *(_OWORD *)v42;
          *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
          *(_OWORD *)v41 = v128;
          v41[v240] = 7;
          goto LABEL_214;
        case 8:
          v126 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v127 = 8;
          goto LABEL_213;
        case 9:
          v126 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v127 = 9;
LABEL_213:
          v41[v240] = v127;
          v132 = v126;
          v32 = v240;
LABEL_214:
          v133 = (unint64_t)&v41[v32 + 8] & 0xFFFFFFFFFFFFFFF8;
          v134 = (unint64_t)&v42[v32 + 8] & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v134 + 8) < 0xFFFFFFFFuLL)
          {
            v145 = *(_OWORD *)v134;
            v146 = *(_OWORD *)(v134 + 16);
            v147 = *(_OWORD *)(v134 + 48);
            *(_OWORD *)(v133 + 32) = *(_OWORD *)(v134 + 32);
            *(_OWORD *)(v133 + 48) = v147;
            *(_OWORD *)v133 = v145;
            *(_OWORD *)(v133 + 16) = v146;
            v148 = *(_OWORD *)(v134 + 64);
            v149 = *(_OWORD *)(v134 + 80);
            v150 = *(_OWORD *)(v134 + 96);
            *(_OWORD *)(v133 + 106) = *(_OWORD *)(v134 + 106);
            *(_OWORD *)(v133 + 80) = v149;
            *(_OWORD *)(v133 + 96) = v150;
            *(_OWORD *)(v133 + 64) = v148;
          }
          else
          {
            *(_QWORD *)v133 = *(_QWORD *)v134;
            *(_QWORD *)(v133 + 8) = *(_QWORD *)(v134 + 8);
            v136 = *(void **)(v134 + 16);
            v135 = *(_QWORD *)(v134 + 24);
            v137 = *(_QWORD *)(v134 + 40);
            v246 = *(_QWORD *)(v134 + 32);
            v138 = *(_QWORD *)(v134 + 48);
            v139 = *(_QWORD *)(v134 + 56);
            v140 = *(_BYTE *)(v134 + 64);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B41E9D64(v136, v135, v246, v137, v138, v139, v140);
            *(_QWORD *)(v133 + 16) = v136;
            *(_QWORD *)(v133 + 24) = v135;
            *(_QWORD *)(v133 + 32) = v246;
            *(_QWORD *)(v133 + 40) = v137;
            *(_QWORD *)(v133 + 48) = v138;
            *(_QWORD *)(v133 + 56) = v139;
            *(_BYTE *)(v133 + 64) = v140;
            *(_BYTE *)(v133 + 65) = *(_BYTE *)(v134 + 65);
            *(_BYTE *)(v133 + 66) = *(_BYTE *)(v134 + 66);
            *(_BYTE *)(v133 + 67) = *(_BYTE *)(v134 + 67);
            *(_BYTE *)(v133 + 68) = *(_BYTE *)(v134 + 68);
            v141 = *(unsigned __int8 *)(v134 + 120);
            if (v141 == 255)
            {
              v142 = *(_OWORD *)(v134 + 72);
              v143 = *(_OWORD *)(v134 + 88);
              v144 = *(_OWORD *)(v134 + 104);
              *(_BYTE *)(v133 + 120) = *(_BYTE *)(v134 + 120);
              *(_OWORD *)(v133 + 88) = v143;
              *(_OWORD *)(v133 + 104) = v144;
              *(_OWORD *)(v133 + 72) = v142;
            }
            else
            {
              v151 = v141 & 1;
              v152 = *(void **)(v134 + 72);
              v153 = *(_QWORD *)(v134 + 80);
              v154 = *(_QWORD *)(v134 + 88);
              v155 = *(_QWORD *)(v134 + 96);
              v156 = *(_QWORD *)(v134 + 104);
              v247 = *(_QWORD *)(v134 + 112);
              sub_1B41DF628(v152, v153, v154, v155, v156, v247, v141 & 1);
              *(_QWORD *)(v133 + 72) = v152;
              *(_QWORD *)(v133 + 80) = v153;
              *(_QWORD *)(v133 + 88) = v154;
              *(_QWORD *)(v133 + 96) = v155;
              *(_QWORD *)(v133 + 104) = v156;
              *(_QWORD *)(v133 + 112) = v247;
              *(_BYTE *)(v133 + 120) = v151;
            }
            v29 = a1;
            *(_BYTE *)(v133 + 121) = *(_BYTE *)(v134 + 121);
          }
          *(_BYTE *)(v133 + 122) = *(_BYTE *)(v134 + 122);
          *(_BYTE *)(v133 + 123) = *(_BYTE *)(v134 + 123);
          *(_BYTE *)(v133 + 124) = *(_BYTE *)(v134 + 124);
          *(_BYTE *)(v133 + 125) = *(_BYTE *)(v134 + 125);
          *(_BYTE *)(v133 + 126) = *(_BYTE *)(v134 + 126);
          v157 = *(void **)((v134 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v133 + 134) & 0xFFFFFFFFFFFFF8) = v157;
          v158 = v157;
          v22 = v227;
          if (v227 > 3)
            goto LABEL_221;
          v112 = ((1 << (8 * v227)) + 1) >> (8 * v227);
          if (v112 > 0xFFF5)
          {
            *(_DWORD *)&v41[v227] = 0;
          }
          else
          {
            if (v112 <= 0xF5)
            {
LABEL_221:
              v41[v227] = 0;
              goto LABEL_288;
            }
            *(_WORD *)&v41[v227] = 0;
          }
          break;
        default:
          if (v240 <= 3)
            v75 = v240;
          else
            v75 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_298;
    case 1u:
      v228 = v22;
      switch(v42[v240])
      {
        case 0:
          *v41 = *v42;
          v41[v240] = 0;
          goto LABEL_229;
        case 1:
          v129 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v130 = 1;
          goto LABEL_228;
        case 2:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 2;
          goto LABEL_229;
        case 3:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 3;
          goto LABEL_229;
        case 4:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 4;
          goto LABEL_229;
        case 5:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 5;
          goto LABEL_229;
        case 6:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
          v32 = v240;
          v41[v240] = 6;
          goto LABEL_229;
        case 7:
          v131 = *(_OWORD *)v42;
          *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
          *(_OWORD *)v41 = v131;
          v41[v240] = 7;
          goto LABEL_229;
        case 8:
          v129 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v130 = 8;
          goto LABEL_228;
        case 9:
          v129 = *(void **)v42;
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v130 = 9;
LABEL_228:
          v41[v240] = v130;
          v159 = v129;
          v32 = v240;
LABEL_229:
          v160 = (unint64_t)&v41[v32 + 8] & 0xFFFFFFFFFFFFFFF8;
          v161 = (unint64_t)&v42[v32 + 8] & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v161 + 8) < 0xFFFFFFFFuLL)
          {
            v173 = *(_OWORD *)v161;
            v174 = *(_OWORD *)(v161 + 16);
            v175 = *(_OWORD *)(v161 + 48);
            *(_OWORD *)(v160 + 32) = *(_OWORD *)(v161 + 32);
            *(_OWORD *)(v160 + 48) = v175;
            *(_OWORD *)v160 = v173;
            *(_OWORD *)(v160 + 16) = v174;
            v176 = *(_OWORD *)(v161 + 64);
            v177 = *(_OWORD *)(v161 + 80);
            v178 = *(_OWORD *)(v161 + 96);
            *(_OWORD *)(v160 + 106) = *(_OWORD *)(v161 + 106);
            *(_OWORD *)(v160 + 80) = v177;
            *(_OWORD *)(v160 + 96) = v178;
            *(_OWORD *)(v160 + 64) = v176;
          }
          else
          {
            v248 = v41;
            *(_QWORD *)v160 = *(_QWORD *)v161;
            *(_QWORD *)(v160 + 8) = *(_QWORD *)(v161 + 8);
            v162 = *(void **)(v161 + 16);
            v163 = *(_QWORD *)(v161 + 24);
            v164 = *(_QWORD *)(v161 + 32);
            v165 = *(_QWORD *)(v161 + 40);
            v166 = *(_QWORD *)(v161 + 48);
            v167 = *(_QWORD *)(v161 + 56);
            v168 = *(_BYTE *)(v161 + 64);
            _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B41E9D64(v162, v163, v164, v165, v166, v167, v168);
            *(_QWORD *)(v160 + 16) = v162;
            *(_QWORD *)(v160 + 24) = v163;
            *(_QWORD *)(v160 + 32) = v164;
            *(_QWORD *)(v160 + 40) = v165;
            *(_QWORD *)(v160 + 48) = v166;
            *(_QWORD *)(v160 + 56) = v167;
            *(_BYTE *)(v160 + 64) = v168;
            *(_BYTE *)(v160 + 65) = *(_BYTE *)(v161 + 65);
            *(_BYTE *)(v160 + 66) = *(_BYTE *)(v161 + 66);
            *(_BYTE *)(v160 + 67) = *(_BYTE *)(v161 + 67);
            *(_BYTE *)(v160 + 68) = *(_BYTE *)(v161 + 68);
            v169 = *(unsigned __int8 *)(v161 + 120);
            if (v169 == 255)
            {
              v170 = *(_OWORD *)(v161 + 72);
              v171 = *(_OWORD *)(v161 + 88);
              v172 = *(_OWORD *)(v161 + 104);
              *(_BYTE *)(v160 + 120) = *(_BYTE *)(v161 + 120);
              *(_OWORD *)(v160 + 88) = v171;
              *(_OWORD *)(v160 + 104) = v172;
              *(_OWORD *)(v160 + 72) = v170;
            }
            else
            {
              v179 = v169 & 1;
              v180 = *(void **)(v161 + 72);
              v181 = *(_QWORD *)(v161 + 80);
              v182 = *(_QWORD *)(v161 + 88);
              v183 = *(_QWORD *)(v161 + 96);
              v185 = *(_QWORD *)(v161 + 104);
              v184 = *(_QWORD *)(v161 + 112);
              sub_1B41DF628(v180, v181, v182, v183, v185, v184, v169 & 1);
              *(_QWORD *)(v160 + 72) = v180;
              *(_QWORD *)(v160 + 80) = v181;
              *(_QWORD *)(v160 + 88) = v182;
              *(_QWORD *)(v160 + 96) = v183;
              *(_QWORD *)(v160 + 104) = v185;
              *(_QWORD *)(v160 + 112) = v184;
              *(_BYTE *)(v160 + 120) = v179;
            }
            v41 = v248;
            v29 = a1;
            *(_BYTE *)(v160 + 121) = *(_BYTE *)(v161 + 121);
          }
          *(_BYTE *)(v160 + 122) = *(_BYTE *)(v161 + 122);
          *(_BYTE *)(v160 + 123) = *(_BYTE *)(v161 + 123);
          *(_BYTE *)(v160 + 124) = *(_BYTE *)(v161 + 124);
          *(_BYTE *)(v160 + 125) = *(_BYTE *)(v161 + 125);
          *(_BYTE *)(v160 + 126) = *(_BYTE *)(v161 + 126);
          v186 = *(void **)((v161 + 134) & 0xFFFFFFFFFFFFF8);
          *(_QWORD *)((v160 + 134) & 0xFFFFFFFFFFFFF8) = v186;
          v187 = v186;
          v22 = v228;
          if (v228 > 3)
            goto LABEL_236;
          v125 = 1;
          v112 = ((1 << (8 * v228)) + 1) >> (8 * v228);
          if (v112 > 0xFFF5)
            goto LABEL_297;
          if (v112 <= 0xF5)
          {
LABEL_236:
            v103 = 1;
            goto LABEL_287;
          }
          *(_WORD *)&v41[v228] = 1;
          break;
        default:
          if (v240 <= 3)
            v76 = v240;
          else
            v76 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_298;
    case 2u:
      v77 = v29;
      v78 = v18;
      v79 = v22;
      v80 = *(void **)v42;
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v81 = (char *)((unint64_t)&v41[v33] & v74);
      v82 = (unsigned __int8 *)((unint64_t)&v42[v33] & v74);
      v83 = v82[v240];
      v84 = v80;
      switch(v83)
      {
        case 0:
          *v81 = *v82;
          v81[v240] = 0;
          break;
        case 1:
          v188 = *(void **)v82;
          *(_QWORD *)v81 = *(_QWORD *)v82;
          v189 = 1;
          goto LABEL_250;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v81, v82, v239);
          v190 = 2;
          goto LABEL_247;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v81, v82, v239);
          v190 = 3;
          goto LABEL_247;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v81, v82, v239);
          v190 = 4;
          goto LABEL_247;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v81, v82, v239);
          v190 = 5;
          goto LABEL_247;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v81, v82, v239);
          v190 = 6;
          goto LABEL_247;
        case 7:
          v191 = *(_OWORD *)v82;
          *(_OWORD *)(v81 + 9) = *(_OWORD *)(v82 + 9);
          *(_OWORD *)v81 = v191;
          v190 = 7;
LABEL_247:
          v81[v240] = v190;
          break;
        case 8:
          v188 = *(void **)v82;
          *(_QWORD *)v81 = *(_QWORD *)v82;
          v189 = 8;
          goto LABEL_250;
        case 9:
          v188 = *(void **)v82;
          *(_QWORD *)v81 = *(_QWORD *)v82;
          v189 = 9;
LABEL_250:
          v81[v240] = v189;
          v192 = v188;
          break;
        default:
          memcpy(v81, v82, v78);
          break;
      }
      v22 = v79;
      v29 = v77;
      if (v79 > 3)
        goto LABEL_252;
      v112 = ((1 << (8 * v79)) + 1) >> (8 * v79);
      if (v112 > 0xFFF5)
      {
        v125 = 2;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_252:
        v103 = 2;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v79] = 2;
      goto LABEL_298;
    case 3u:
      v85 = v29;
      v86 = v18;
      v87 = v22;
      v88 = *(void **)v42;
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v89 = (char *)((unint64_t)&v41[v33] & v74);
      v90 = (unsigned __int8 *)((unint64_t)&v42[v33] & v74);
      v91 = v90[v240];
      v92 = v88;
      switch(v91)
      {
        case 0:
          *v89 = *v90;
          v89[v240] = 0;
          break;
        case 1:
          v193 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v194 = 1;
          goto LABEL_267;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v89, v90, v239);
          v195 = 2;
          goto LABEL_264;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v89, v90, v239);
          v195 = 3;
          goto LABEL_264;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v89, v90, v239);
          v195 = 4;
          goto LABEL_264;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v89, v90, v239);
          v195 = 5;
          goto LABEL_264;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v89, v90, v239);
          v195 = 6;
          goto LABEL_264;
        case 7:
          v196 = *(_OWORD *)v90;
          *(_OWORD *)(v89 + 9) = *(_OWORD *)(v90 + 9);
          *(_OWORD *)v89 = v196;
          v195 = 7;
LABEL_264:
          v89[v240] = v195;
          break;
        case 8:
          v193 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v194 = 8;
          goto LABEL_267;
        case 9:
          v193 = *(void **)v90;
          *(_QWORD *)v89 = *(_QWORD *)v90;
          v194 = 9;
LABEL_267:
          v89[v240] = v194;
          v197 = v193;
          break;
        default:
          memcpy(v89, v90, v86);
          break;
      }
      v22 = v87;
      v29 = v85;
      if (v87 > 3)
        goto LABEL_269;
      v112 = ((1 << (8 * v87)) + 1) >> (8 * v87);
      if (v112 > 0xFFF5)
      {
        v125 = 3;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_269:
        v103 = 3;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v87] = 3;
      goto LABEL_298;
    case 4u:
      v93 = v29;
      v94 = v18;
      v95 = v22;
      v96 = *(void **)v42;
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v97 = (char *)((unint64_t)&v41[v33] & v74);
      v98 = (unsigned __int8 *)((unint64_t)&v42[v33] & v74);
      v99 = v98[v240];
      v100 = v96;
      switch(v99)
      {
        case 0:
          *v97 = *v98;
          v97[v240] = 0;
          break;
        case 1:
          v198 = *(void **)v98;
          *(_QWORD *)v97 = *(_QWORD *)v98;
          v199 = 1;
          goto LABEL_284;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v97, v98, v239);
          v200 = 2;
          goto LABEL_281;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v97, v98, v239);
          v200 = 3;
          goto LABEL_281;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v97, v98, v239);
          v200 = 4;
          goto LABEL_281;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v97, v98, v239);
          v200 = 5;
          goto LABEL_281;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v243 + 16))(v97, v98, v239);
          v200 = 6;
          goto LABEL_281;
        case 7:
          v201 = *(_OWORD *)v98;
          *(_OWORD *)(v97 + 9) = *(_OWORD *)(v98 + 9);
          *(_OWORD *)v97 = v201;
          v200 = 7;
LABEL_281:
          v97[v240] = v200;
          break;
        case 8:
          v198 = *(void **)v98;
          *(_QWORD *)v97 = *(_QWORD *)v98;
          v199 = 8;
          goto LABEL_284;
        case 9:
          v198 = *(void **)v98;
          *(_QWORD *)v97 = *(_QWORD *)v98;
          v199 = 9;
LABEL_284:
          v97[v240] = v199;
          v202 = v198;
          break;
        default:
          memcpy(v97, v98, v94);
          break;
      }
      v22 = v95;
      v29 = v93;
      if (v95 > 3)
        goto LABEL_286;
      v112 = ((1 << (8 * v95)) + 1) >> (8 * v95);
      if (v112 > 0xFFF5)
      {
        v125 = 4;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_286:
        v103 = 4;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v95] = 4;
      goto LABEL_298;
    case 5u:
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v41[9] = v42[9];
      v41[10] = v42[10];
      v101 = (void *)*((_QWORD *)v42 + 2);
      *((_QWORD *)v41 + 2) = v101;
      v102 = v101;
      if (v22 > 3)
        goto LABEL_130;
      v112 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      if (v112 > 0xFFF5)
      {
        v125 = 5;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_130:
        v103 = 5;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v22] = 5;
      goto LABEL_298;
    case 6u:
      v110 = *(void **)v42;
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v111 = v110;
      if (v22 > 3)
        goto LABEL_146;
      v112 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      if (v112 > 0xFFF5)
      {
        v125 = 6;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_146:
        v103 = 6;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v22] = 6;
      goto LABEL_298;
    case 7u:
      v104 = v22;
      v105 = ~(unint64_t)v11;
      if (v231 < 0)
      {
        v107 = (*(uint64_t (**)(unint64_t))(v242 + 48))((unint64_t)&v42[v237] & v105);
      }
      else
      {
        v106 = *(_QWORD *)v42;
        if (*(_QWORD *)v42 >= 0xFFFFFFFFuLL)
          LODWORD(v106) = -1;
        v107 = v106 + 1;
      }
      if (v107)
      {
        memcpy(v41, v42, __n);
      }
      else
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v119 = *(void (**)(unint64_t, unint64_t, uint64_t))(v242 + 16);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v119((unint64_t)&v41[v237] & v105, (unint64_t)&v42[v237] & v105, v238);
      }
      v120 = (unint64_t)&v41[v235] & 0xFFFFFFFFFFFFFFF8;
      v121 = (unint64_t)&v42[v235] & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v121 + 8) < 0xFFFFFFFFuLL)
      {
        v124 = *(_OWORD *)v121;
        *(_QWORD *)(v120 + 16) = *(_QWORD *)(v121 + 16);
        *(_OWORD *)v120 = v124;
      }
      else
      {
        *(_QWORD *)v120 = *(_QWORD *)v121;
        *(_QWORD *)(v120 + 8) = *(_QWORD *)(v121 + 8);
        v122 = *(void **)(v121 + 16);
        *(_QWORD *)(v120 + 16) = v122;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v123 = v122;
      }
      v22 = v104;
      if (v104 > 3)
        goto LABEL_182;
      v112 = ((1 << (8 * v104)) + 1) >> (8 * v104);
      if (v112 > 0xFFF5)
      {
        v125 = 7;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_182:
        v103 = 7;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v104] = 7;
      goto LABEL_298;
    case 8u:
      if (v230 < 0xFD)
      {
        v114 = v236;
        v115 = v42[v236];
        if (v115 < 3)
          goto LABEL_162;
        v113 = v115 - 2;
      }
      else
      {
        v113 = (*(uint64_t (**)(_BYTE *))(v243 + 48))(v42);
        v114 = v236;
      }
      if (v113)
      {
        memcpy(v41, v42, v114 + 1);
        v116 = v236;
        goto LABEL_163;
      }
LABEL_162:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v243 + 16))(v41, v42, v239);
      v116 = v236;
      v41[v236] = v42[v236];
LABEL_163:
      *(_QWORD *)((unint64_t)&v41[v116 + 8] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v42[v116 + 8] & 0xFFFFFFFFFFFFF8);
      if (v22 > 3)
        goto LABEL_166;
      v112 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      if (v112 > 0xFFF5)
      {
        v125 = 8;
        goto LABEL_297;
      }
      if (v112 <= 0xF5)
      {
LABEL_166:
        v103 = 8;
        goto LABEL_287;
      }
      *(_WORD *)&v41[v22] = 8;
      goto LABEL_298;
    case 9u:
      *v41 = *v42;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v233 + 16))((unint64_t)&v41[v232] & ~v27, (unint64_t)&v42[v232] & ~v27, v234);
      if (v22 > 3)
        goto LABEL_136;
      v112 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      if (v112 > 0xFFF5)
      {
        v125 = 9;
LABEL_297:
        *(_DWORD *)&v41[v22] = v125;
        goto LABEL_298;
      }
      if (v112 > 0xF5)
      {
        *(_WORD *)&v41[v22] = 9;
LABEL_298:
        v205 = v112 > 0xFFF5;
        v204 = 2;
        if (v205)
          v204 = 4;
        goto LABEL_300;
      }
LABEL_136:
      v103 = 9;
LABEL_287:
      v41[v22] = v103;
LABEL_288:
      if (v22 > 3)
        goto LABEL_292;
      v203 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      v204 = 2;
      if (v203 > 0xFFF5)
        v204 = 4;
      if (v203 <= 0xF5)
LABEL_292:
        v204 = 1;
LABEL_300:
      v206 = v204 + v22;
      v207 = (unint64_t)&v41[v206];
      v208 = (unint64_t)&v42[v206];
      *(_BYTE *)v207 = *(_BYTE *)v208;
      v207 &= 0xFFFFFFFFFFFFFFF8;
      v208 &= 0xFFFFFFFFFFFFFFF8;
      v209 = *(void **)(v208 + 8);
      *(_QWORD *)(v207 + 8) = v209;
      v210 = (v207 + 23) & 0xFFFFFFFFFFFFFFF8;
      v211 = (v208 + 23) & 0xFFFFFFFFFFFFFFF8;
      v212 = v22;
      v213 = *(void **)v211;
      *(_QWORD *)v210 = *(_QWORD *)v211;
      *(_BYTE *)(v210 + 8) = *(_BYTE *)(v211 + 8);
      v214 = (v207 + 39) & 0xFFFFFFFFFFFFFFF8;
      v215 = (v208 + 39) & 0xFFFFFFFFFFFFFFF8;
      v216 = *(_QWORD *)v215;
      *(_BYTE *)(v214 + 8) = *(_BYTE *)(v215 + 8);
      *(_QWORD *)v214 = v216;
      v217 = (_QWORD *)((v207 + 55) & 0xFFFFFFFFFFFFF8);
      v218 = (_QWORD *)((v208 + 55) & 0xFFFFFFFFFFFFF8);
      *v217 = *v218;
      v219 = *(void **)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFF8) = v219;
      v220 = v209;
      v221 = v213;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v222 = v219;
      if (v212 > 3)
        goto LABEL_304;
      v223 = ((1 << (8 * v212)) + 1) >> (8 * v212);
      v224 = 2;
      if (v223 > 0xFFF5)
        v224 = 4;
      if (v223 <= 0xF5)
LABEL_304:
        v224 = 1;
      v225 = ((((((v224 + v212) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_QWORD *)((unint64_t)&v41[v225] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v42[v225] & 0xFFFFFFFFFFFFF8);
      break;
    default:
      if (v22 > 3)
        goto LABEL_141;
      v108 = ((1 << (8 * v22)) + 1) >> (8 * v22);
      v109 = 2;
      if (v108 > 0xFFF5)
        v109 = 4;
      if (v108 <= 0xF5)
LABEL_141:
        v109 = 1;
      memcpy(v41, v42, v109 + v22);
      goto LABEL_288;
  }
  return v29;
}

void sub_1B42FF964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  char v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  char v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  char v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  char v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id *v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  v79 = sub_1B49037E8();
  v7 = *(_QWORD *)(v79 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v78 = sub_1B49046DC();
  v9 = *(_QWORD *)(v78 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = sub_1B4905C78();
  v12 = v8 & 0xF8 | 7;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  if (v5)
    v15 = v6 + a1;
  else
    v15 = v6 + a1 + 1;
  v16 = *(_QWORD *)(v7 + 64);
  if (v16 <= 0x19)
    v17 = 25;
  else
    v17 = *(_QWORD *)(v7 + 64);
  v18 = v17 + 1;
  v19 = *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  v20 = v17 + 1 + (((v8 & 0xF8) + 15) & ~v12);
  if (v20 <= (((v17 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8)
    v20 = (((v17 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v20 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v21 = (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 > v21)
    v21 = v20;
  if (v21 <= *(_QWORD *)(v13 + 64) + ((v14 + 1) & (unint64_t)~v14))
    v21 = *(_QWORD *)(v13 + 64) + ((v14 + 1) & ~v14);
  if (v21 <= 0x18)
    v22 = 24;
  else
    v22 = v21;
  v23 = 8 * v22;
  v24 = v10 | v14 | v12;
  v25 = v15 + v24;
  if (v22 > 3)
  {
    v26 = 11;
LABEL_22:
    v27 = 8;
    goto LABEL_23;
  }
  v31 = ((1 << v23) + 1) >> v23;
  if (v31 > 0xFFF5)
  {
    v29 = 0x7FFFFFFF;
    goto LABEL_32;
  }
  v26 = v31 + 10;
  if (v31 <= 0xF5)
    goto LABEL_22;
  v27 = 16;
LABEL_23:
  v28 = (1 << v27) - v26;
  v29 = 0x7FFFFFFF;
  if (v28 <= 0x7FFFFFFF)
    v30 = 0x7FFFFFFF;
  else
    v30 = v28;
  if ((v28 & 0x80000000) == 0)
    v29 = v30;
LABEL_32:
  v32 = v25 & ~v24;
  if (v22 > 3)
  {
    v33 = 11;
    goto LABEL_34;
  }
  v36 = ((1 << v23) + 1) >> v23;
  if (v36 <= 0xFFF5)
  {
    v33 = v36 + 10;
    if (v36 > 0xF5)
    {
      v34 = 16;
LABEL_35:
      v35 = (1 << v34) - v33;
      if ((v35 & 0x80000000) == 0)
        goto LABEL_41;
      goto LABEL_40;
    }
LABEL_34:
    v34 = 8;
    goto LABEL_35;
  }
LABEL_40:
  v35 = 0x7FFFFFFF;
LABEL_41:
  if (v35 != v29)
  {
    if (v22 > 3)
      goto LABEL_48;
    v38 = ((1 << v23) + 1) >> v23;
    v39 = 2;
    if (v38 > 0xFFF5)
      v39 = 4;
    if (v38 <= 0xF5)
LABEL_48:
      v39 = 1;
    v40 = *(_QWORD *)(((v22 + v32 + v39) & 0xFFFFFFFFFFFFF8) + 8);
    if (v40 >= 0xFFFFFFFF)
      LODWORD(v40) = -1;
    if ((_DWORD)v40 != -1)
      return;
    goto LABEL_94;
  }
  if (v22 > 3)
  {
    v37 = 11;
LABEL_55:
    v42 = 8;
    goto LABEL_56;
  }
  v41 = ((1 << v23) + 1) >> v23;
  if (v41 > 0xFFF5)
    goto LABEL_59;
  v37 = v41 + 10;
  if (v41 <= 0xF5)
    goto LABEL_55;
  v42 = 16;
LABEL_56:
  v43 = (1 << v42) - v37;
  if ((v43 & 0x80000000) == 0)
  {
    if (v22 > 3)
      goto LABEL_63;
LABEL_60:
    v44 = ((1 << v23) + 1) >> v23;
    v45 = 2;
    if (v44 > 0xFFF5)
      v45 = 4;
    if (v44 > 0xF5)
      goto LABEL_64;
    goto LABEL_63;
  }
LABEL_59:
  v43 = 0x7FFFFFFF;
  if (v22 <= 3)
    goto LABEL_60;
LABEL_63:
  v45 = 1;
LABEL_64:
  v46 = v29 - v43;
  if (v29 <= v43)
    goto LABEL_81;
  v47 = v45 + v22;
  v48 = 8 * (v45 + v22);
  if (v47 > 3)
    goto LABEL_66;
  v50 = ((v46 + ~(-1 << v48)) >> v48) + 1;
  if (HIWORD(v50))
  {
    v49 = *(_DWORD *)(v32 + v47);
    if (!v49)
      goto LABEL_81;
    goto LABEL_74;
  }
  if (v50 > 0xFF)
  {
    v49 = *(unsigned __int16 *)(v32 + v47);
    if (!*(_WORD *)(v32 + v47))
      goto LABEL_81;
    goto LABEL_74;
  }
  if (v50 >= 2)
  {
LABEL_66:
    v49 = *(unsigned __int8 *)(v32 + v47);
    if (!*(_BYTE *)(v32 + v47))
      goto LABEL_81;
LABEL_74:
    v51 = (v49 - 1) << v48;
    if (v47 > 3)
      v51 = 0;
    if ((_DWORD)v47)
    {
      if (v47 > 3)
        LODWORD(v47) = 4;
      __asm { BR              X0 }
    }
    if (v43 + v51 != -1)
      return;
    goto LABEL_94;
  }
LABEL_81:
  if (!v43)
    goto LABEL_94;
  if (v22 > 3)
  {
    v52 = *(unsigned __int8 *)(v32 + v22);
    v53 = v52 | 0xFFFFFF00;
    v54 = v52 ^ 0xFF;
    v55 = 8;
    v56 = 11;
    goto LABEL_89;
  }
  v57 = ((1 << v23) + 1) >> v23;
  if (v57 <= 0xFFF5)
  {
    v56 = v57 + 10;
    if (v57 > 0xF5)
    {
      v59 = *(unsigned __int16 *)(v32 + v22);
      v53 = v59 | 0xFFFF0000;
      v54 = v59 ^ 0xFFFF;
      v55 = 16;
    }
    else
    {
      v58 = *(unsigned __int8 *)(v32 + v22);
      v53 = v58 | 0xFFFFFF00;
      v54 = v58 ^ 0xFF;
      v55 = 8;
    }
LABEL_89:
    v60 = (1 << v55) - v56;
    if ((v60 & 0x80000000) == 0)
    {
      if (v60 <= v54)
        goto LABEL_94;
LABEL_93:
      if (v53)
        return;
      goto LABEL_94;
    }
    goto LABEL_92;
  }
  v53 = *(_DWORD *)(v32 + v22);
  v54 = ~v53;
LABEL_92:
  if (v54 < 0x7FFFFFFF)
    goto LABEL_93;
LABEL_94:
  if (v22 > 3)
    goto LABEL_95;
  v62 = ((1 << v23) + 1) >> v23;
  if (v62 > 0xFFF5)
  {
    v61 = *(_DWORD *)(v32 + v22);
    goto LABEL_100;
  }
  if (v62 <= 0xF5)
LABEL_95:
    v61 = *(unsigned __int8 *)(v32 + v22);
  else
    v61 = *(unsigned __int16 *)(v32 + v22);
LABEL_100:
  if (v61 >= 0xA)
  {
    if (v22 <= 3)
      v63 = v22;
    else
      v63 = 4;
    __asm { BR              X0 }
  }
  v64 = ~v12;
  switch(v61)
  {
    case 0u:
      switch(*(_BYTE *)(v32 + v17))
      {
        case 0:
        case 7:
          goto LABEL_148;
        case 1:
        case 8:
        case 9:
          goto LABEL_146;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_145;
        default:
          if (v17 <= 3)
            v65 = v17;
          else
            v65 = 4;
          __asm { BR              X12 }
          return;
      }
    case 1u:
      switch(*(_BYTE *)(v32 + v17))
      {
        case 0:
        case 7:
          goto LABEL_148;
        case 1:
        case 8:
        case 9:
LABEL_146:
          v72 = v17 + 1;

          goto LABEL_147;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_145:
          v72 = v17 + 1;
          (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v79);
LABEL_147:
          v18 = v72;
LABEL_148:
          v73 = ((v32 | 7) + v18) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v73 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            sub_1B41E9C70(*(void **)(v73 + 16), *(_QWORD *)(v73 + 24), *(_QWORD *)(v73 + 32), *(_QWORD *)(v73 + 40), *(_QWORD *)(v73 + 48), *(_QWORD *)(v73 + 56), *(_BYTE *)(v73 + 64));
            v74 = *(unsigned __int8 *)(v73 + 120);
            if (v74 != 255)
              sub_1B41E9C98(*(void **)(v73 + 72), *(_QWORD *)(v73 + 80), *(_QWORD *)(v73 + 88), *(_QWORD *)(v73 + 96), *(_QWORD *)(v73 + 104), *(_QWORD *)(v73 + 112), v74 & 1);
          }
          v71 = *(id *)((v73 + 134) & 0xFFFFFFFFFFFFF8);
          break;
        default:
          if (v17 <= 3)
            v66 = v17;
          else
            v66 = 4;
          __asm { BR              X12 }
          return;
      }
      goto LABEL_152;
    case 2u:

      v67 = (id *)((v32 + v12 + 8) & v64);
      switch(*((_BYTE *)v67 + v17))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_138;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_117;
        default:
          goto LABEL_139;
      }
    case 3u:

      v67 = (id *)((v32 + v12 + 8) & v64);
      switch(*((_BYTE *)v67 + v17))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_138;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_117;
        default:
          goto LABEL_139;
      }
    case 4u:

      v67 = (id *)((v32 + v12 + 8) & v64);
      switch(*((_BYTE *)v67 + v17))
      {
        case 1:
        case 8:
        case 9:
LABEL_138:

          goto LABEL_139;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_117:
          (*(void (**)(id *, uint64_t))(v7 + 8))(v67, v79);
          goto LABEL_134;
        default:
          goto LABEL_139;
      }
    case 5u:
      v71 = *(id *)(v32 + 16);
      goto LABEL_152;
    case 6u:
      v71 = *(id *)v32;
      goto LABEL_152;
    case 7u:
      v68 = ~v10;
      if ((*(_DWORD *)(v9 + 84) & 0x80000000) != 0)
      {
        if (!(*(unsigned int (**)(uint64_t))(v9 + 48))((v32 + v10 + 8) & v68))
        {
LABEL_122:
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))((v32 + v10 + 8) & v68, v78);
        }
      }
      else
      {
        v69 = *(id *)v32;
        if (*(_QWORD *)v32 >= 0xFFFFFFFFuLL)
          LODWORD(v69) = -1;
        if ((_DWORD)v69 == -1)
          goto LABEL_122;
      }
      v70 = ((v32 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v70 + 8) < 0xFFFFFFFFuLL)
      {
LABEL_139:
        if (v22 > 3)
        {
LABEL_156:
          v76 = 1;
          goto LABEL_157;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v71 = *(id *)(v70 + 16);
LABEL_152:

        if (v22 > 3)
          goto LABEL_156;
      }
LABEL_153:
      v75 = ((1 << v23) + 1) >> v23;
      v76 = 2;
      if (v75 > 0xFFF5)
        v76 = 4;
      if (v75 <= 0xF5)
        goto LABEL_156;
LABEL_157:
      v77 = (v22 + v32 + v76) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      break;
    case 8u:
      if (*(_DWORD *)(v7 + 84) < 0xFDu)
      {
        if (*(unsigned __int8 *)(v32 + v16) >= 3u)
          goto LABEL_139;
      }
      else if ((*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(v32, *(unsigned int *)(v7 + 84), v79))
      {
        goto LABEL_139;
      }
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v79);
LABEL_134:
      if (v22 > 3)
        goto LABEL_156;
      goto LABEL_153;
    case 9u:
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))((v14 + 1 + v32) & ~v14, v11);
      if (v22 > 3)
        goto LABEL_156;
      goto LABEL_153;
    default:
      goto LABEL_139;
  }
}

char *sub_1B4300368(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  char *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  size_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  int v45;
  unsigned int v46;
  int v47;
  char v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  char v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  size_t v77;
  void *v78;
  char *v79;
  unsigned __int8 *v80;
  int v81;
  id v82;
  size_t v83;
  void *v84;
  char *v85;
  unsigned __int8 *v86;
  int v87;
  id v88;
  size_t v89;
  void *v90;
  char *v91;
  unsigned __int8 *v92;
  int v93;
  id v94;
  void *v95;
  id v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  size_t v100;
  unsigned int v101;
  uint64_t v102;
  void *v103;
  id v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  unint64_t v110;
  uint64_t v111;
  void (*v112)(unint64_t, uint64_t, uint64_t);
  unint64_t v113;
  unint64_t v114;
  void *v115;
  id v116;
  __int128 v117;
  int v118;
  void *v119;
  char v120;
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  void *v134;
  char v135;
  void (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  void (*v149)(uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  unint64_t v154;
  unint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  void (*v178)(uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  unint64_t v183;
  unint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  id v206;
  void *v207;
  char v208;
  char v209;
  __int128 v210;
  id v211;
  void *v212;
  char v213;
  char v214;
  __int128 v215;
  id v216;
  void *v217;
  char v218;
  char v219;
  __int128 v220;
  id v221;
  unsigned int v222;
  uint64_t v223;
  BOOL v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  void *v228;
  unint64_t v229;
  unint64_t v230;
  void *v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  void *v237;
  id v238;
  id v239;
  id v240;
  unsigned int v241;
  uint64_t v242;
  unint64_t v243;
  char *result;
  unsigned __int8 v245;
  uint64_t v246;
  unsigned __int8 v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    v10 = a1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    v10 = a1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  v259 = sub_1B49037E8();
  v12 = *(_QWORD *)(v259 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v253 = sub_1B49046DC();
  v15 = *(_QWORD *)(v253 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = sub_1B4905C78();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v28 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 > v28)
    v28 = v24;
  if (v28 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v28 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v28 <= 0x18)
    v29 = 24;
  else
    v29 = v28;
  v30 = 8 * v29;
  v31 = v20 + v11;
  v32 = v10;
  v33 = (unint64_t)&v10[v31];
  v34 = (unint64_t)&a2[v31];
  if (v29 > 3)
  {
    v35 = 11;
LABEL_26:
    v36 = 8;
    goto LABEL_27;
  }
  v40 = ((1 << v30) + 1) >> v30;
  if (v40 > 0xFFF5)
  {
    v38 = 0x7FFFFFFF;
    goto LABEL_36;
  }
  v35 = v40 + 10;
  if (v40 <= 0xF5)
    goto LABEL_26;
  v36 = 16;
LABEL_27:
  v37 = (1 << v36) - v35;
  v38 = 0x7FFFFFFF;
  if (v37 <= 0x7FFFFFFF)
    v39 = 0x7FFFFFFF;
  else
    v39 = v37;
  if ((v37 & 0x80000000) == 0)
    v38 = v39;
LABEL_36:
  v41 = v33 & ~v20;
  v42 = v34 & ~v20;
  if (v29 > 3)
  {
    v43 = 11;
    goto LABEL_38;
  }
  v46 = ((1 << v30) + 1) >> v30;
  if (v46 <= 0xFFF5)
  {
    v43 = v46 + 10;
    if (v46 > 0xF5)
    {
      v44 = 16;
LABEL_39:
      v45 = (1 << v44) - v43;
      if ((v45 & 0x80000000) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
LABEL_38:
    v44 = 8;
    goto LABEL_39;
  }
LABEL_44:
  v45 = 0x7FFFFFFF;
LABEL_45:
  if (v45 != v38)
  {
    if (v29 > 3)
      goto LABEL_56;
    v50 = ((1 << v30) + 1) >> v30;
    v51 = 2;
    if (v50 > 0xFFF5)
      v51 = 4;
    if (v50 <= 0xF5)
LABEL_56:
      v51 = 1;
    v52 = *(_QWORD *)(((v29 + v42 + v51) & 0xFFFFFFFFFFFFF8) + 8);
    if (v52 >= 0xFFFFFFFF)
      LODWORD(v52) = -1;
    if ((_DWORD)v52 != -1)
      goto LABEL_164;
    goto LABEL_98;
  }
  if (v29 > 3)
  {
    v47 = 11;
LABEL_48:
    v48 = 8;
    goto LABEL_49;
  }
  v53 = ((1 << v30) + 1) >> v30;
  if (v53 > 0xFFF5)
    goto LABEL_64;
  v47 = v53 + 10;
  if (v53 <= 0xF5)
    goto LABEL_48;
  v48 = 16;
LABEL_49:
  v49 = (1 << v48) - v47;
  if ((v49 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_68;
    goto LABEL_65;
  }
LABEL_64:
  v49 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_68:
    v55 = 1;
    goto LABEL_69;
  }
LABEL_65:
  v54 = ((1 << v30) + 1) >> v30;
  v55 = 2;
  if (v54 > 0xFFF5)
    v55 = 4;
  if (v54 <= 0xF5)
    goto LABEL_68;
LABEL_69:
  v56 = v38 - v49;
  if (v38 <= v49)
    goto LABEL_85;
  v57 = v55 + v29;
  v58 = 8 * (v55 + v29);
  if (v57 > 3)
  {
LABEL_71:
    v59 = *(unsigned __int8 *)(v42 + v57);
    if (!*(_BYTE *)(v42 + v57))
      goto LABEL_85;
    goto LABEL_78;
  }
  v60 = ((v56 + ~(-1 << v58)) >> v58) + 1;
  if (HIWORD(v60))
  {
    v59 = *(_DWORD *)(v42 + v57);
    if (!v59)
      goto LABEL_85;
LABEL_78:
    v61 = (v59 - 1) << v58;
    if (v57 > 3)
      v61 = 0;
    if ((_DWORD)v57)
    {
      if (v57 > 3)
        LODWORD(v57) = 4;
      __asm { BR              X17 }
    }
    if (v49 + v61 != -1)
      goto LABEL_164;
LABEL_98:
    if (v29 > 3)
    {
LABEL_99:
      v71 = *(unsigned __int8 *)(v42 + v29);
      goto LABEL_104;
    }
    v72 = ((1 << v30) + 1) >> v30;
    if (v72 > 0xFFF5)
    {
      v71 = *(_DWORD *)(v42 + v29);
    }
    else
    {
      if (v72 <= 0xF5)
        goto LABEL_99;
      v71 = *(unsigned __int16 *)(v42 + v29);
    }
LABEL_104:
    if (v71 >= 0xA)
    {
      if (v29 <= 3)
        v73 = v29;
      else
        v73 = 4;
      __asm { BR              X17 }
    }
    v74 = ~v14;
    switch(v71)
    {
      case 0u:
        switch(*(_BYTE *)(v42 + v22))
        {
          case 0:
            *(_BYTE *)v41 = *(_BYTE *)v42;
            *(_BYTE *)(v41 + v22) = 0;
            goto LABEL_208;
          case 1:
            v119 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v120 = 1;
            goto LABEL_207;
          case 2:
            v121 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v122 = v22;
            v123 = v22 + 1;
            v121(v41, v42, v259);
            v23 = v123;
            *(_BYTE *)(v41 + v122) = 2;
            goto LABEL_208;
          case 3:
            v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v125 = v22;
            v126 = v22 + 1;
            v124(v41, v42, v259);
            v23 = v126;
            *(_BYTE *)(v41 + v125) = 3;
            goto LABEL_208;
          case 4:
            v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v128 = v22;
            v129 = v22 + 1;
            v127(v41, v42, v259);
            v23 = v129;
            *(_BYTE *)(v41 + v128) = 4;
            goto LABEL_208;
          case 5:
            v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v131 = v22;
            v132 = v22 + 1;
            v130(v41, v42, v259);
            v23 = v132;
            *(_BYTE *)(v41 + v131) = 5;
            goto LABEL_208;
          case 6:
            v149 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v150 = v22;
            v151 = v22 + 1;
            v149(v41, v42, v259);
            v23 = v151;
            *(_BYTE *)(v41 + v150) = 6;
            goto LABEL_208;
          case 7:
            v133 = *(_OWORD *)v42;
            *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
            *(_OWORD *)v41 = v133;
            *(_BYTE *)(v41 + v22) = 7;
            goto LABEL_208;
          case 8:
            v119 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v120 = 8;
            goto LABEL_207;
          case 9:
            v119 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v120 = 9;
LABEL_207:
            *(_BYTE *)(v41 + v22) = v120;
            v152 = v22 + 1;
            v153 = v119;
            v23 = v152;
LABEL_208:
            v154 = ((v41 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
            v155 = ((v42 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v155 + 8) < 0xFFFFFFFFuLL)
            {
              v165 = *(_OWORD *)v155;
              v166 = *(_OWORD *)(v155 + 16);
              v167 = *(_OWORD *)(v155 + 48);
              *(_OWORD *)(v154 + 32) = *(_OWORD *)(v155 + 32);
              *(_OWORD *)(v154 + 48) = v167;
              *(_OWORD *)v154 = v165;
              *(_OWORD *)(v154 + 16) = v166;
              v168 = *(_OWORD *)(v155 + 64);
              v169 = *(_OWORD *)(v155 + 80);
              v170 = *(_OWORD *)(v155 + 96);
              *(_OWORD *)(v154 + 106) = *(_OWORD *)(v155 + 106);
              *(_OWORD *)(v154 + 80) = v169;
              *(_OWORD *)(v154 + 96) = v170;
              *(_OWORD *)(v154 + 64) = v168;
            }
            else
            {
              v257 = v41;
              v260 = v32;
              *(_QWORD *)v154 = *(_QWORD *)v155;
              *(_QWORD *)(v154 + 8) = *(_QWORD *)(v155 + 8);
              v156 = *(void **)(v155 + 16);
              v157 = *(_QWORD *)(v155 + 24);
              v158 = *(_QWORD *)(v155 + 32);
              v159 = *(_QWORD *)(v155 + 40);
              v160 = *(_QWORD *)(v155 + 48);
              v249 = *(_QWORD *)(v155 + 56);
              v245 = *(_BYTE *)(v155 + 64);
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              sub_1B41E9D64(v156, v157, v158, v159, v160, v249, v245);
              *(_QWORD *)(v154 + 16) = v156;
              *(_QWORD *)(v154 + 24) = v157;
              *(_QWORD *)(v154 + 32) = v158;
              *(_QWORD *)(v154 + 40) = v159;
              *(_QWORD *)(v154 + 48) = v160;
              *(_QWORD *)(v154 + 56) = v249;
              *(_BYTE *)(v154 + 64) = v245;
              *(_BYTE *)(v154 + 65) = *(_BYTE *)(v155 + 65);
              *(_BYTE *)(v154 + 66) = *(_BYTE *)(v155 + 66);
              *(_BYTE *)(v154 + 67) = *(_BYTE *)(v155 + 67);
              *(_BYTE *)(v154 + 68) = *(_BYTE *)(v155 + 68);
              v161 = *(unsigned __int8 *)(v155 + 120);
              if (v161 == 255)
              {
                v162 = *(_OWORD *)(v155 + 72);
                v163 = *(_OWORD *)(v155 + 88);
                v164 = *(_OWORD *)(v155 + 104);
                *(_BYTE *)(v154 + 120) = *(_BYTE *)(v155 + 120);
                *(_OWORD *)(v154 + 88) = v163;
                *(_OWORD *)(v154 + 104) = v164;
                *(_OWORD *)(v154 + 72) = v162;
              }
              else
              {
                v250 = v161 & 1;
                v171 = *(void **)(v155 + 72);
                v172 = *(_QWORD *)(v155 + 80);
                v174 = *(_QWORD *)(v155 + 88);
                v173 = *(_QWORD *)(v155 + 96);
                v175 = *(_QWORD *)(v155 + 112);
                v246 = *(_QWORD *)(v155 + 104);
                sub_1B41DF628(v171, v172, v174, v173, v246, v175, v161 & 1);
                *(_QWORD *)(v154 + 72) = v171;
                *(_QWORD *)(v154 + 80) = v172;
                *(_QWORD *)(v154 + 88) = v174;
                *(_QWORD *)(v154 + 96) = v173;
                *(_QWORD *)(v154 + 104) = v246;
                *(_QWORD *)(v154 + 112) = v175;
                *(_BYTE *)(v154 + 120) = v250;
              }
              v41 = v257;
              v32 = v260;
              *(_BYTE *)(v154 + 121) = *(_BYTE *)(v155 + 121);
            }
            *(_BYTE *)(v154 + 122) = *(_BYTE *)(v155 + 122);
            *(_BYTE *)(v154 + 123) = *(_BYTE *)(v155 + 123);
            *(_BYTE *)(v154 + 124) = *(_BYTE *)(v155 + 124);
            *(_BYTE *)(v154 + 125) = *(_BYTE *)(v155 + 125);
            *(_BYTE *)(v154 + 126) = *(_BYTE *)(v155 + 126);
            v176 = *(void **)((v155 + 134) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)((v154 + 134) & 0xFFFFFFFFFFFFF8) = v176;
            v177 = v176;
            if (v29 > 3)
              goto LABEL_215;
            v105 = ((1 << v30) + 1) >> v30;
            if (v105 > 0xFFF5)
            {
              *(_DWORD *)(v41 + v29) = 0;
              goto LABEL_292;
            }
            if (v105 > 0xF5)
            {
              *(_WORD *)(v41 + v29) = 0;
              goto LABEL_292;
            }
LABEL_215:
            *(_BYTE *)(v41 + v29) = 0;
            if (v29 <= 3)
              goto LABEL_283;
            break;
          default:
            if (v22 <= 3)
              v75 = v22;
            else
              v75 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_286;
      case 1u:
        switch(*(_BYTE *)(v42 + v22))
        {
          case 0:
            *(_BYTE *)v41 = *(_BYTE *)v42;
            *(_BYTE *)(v41 + v22) = 0;
            goto LABEL_224;
          case 1:
            v134 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v135 = 1;
            goto LABEL_223;
          case 2:
            v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v137 = v22;
            v138 = v22 + 1;
            v136(v41, v42, v259);
            v23 = v138;
            *(_BYTE *)(v41 + v137) = 2;
            goto LABEL_224;
          case 3:
            v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v140 = v22;
            v141 = v22 + 1;
            v139(v41, v42, v259);
            v23 = v141;
            *(_BYTE *)(v41 + v140) = 3;
            goto LABEL_224;
          case 4:
            v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v143 = v22;
            v144 = v22 + 1;
            v142(v41, v42, v259);
            v23 = v144;
            *(_BYTE *)(v41 + v143) = 4;
            goto LABEL_224;
          case 5:
            v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v146 = v22;
            v147 = v22 + 1;
            v145(v41, v42, v259);
            v23 = v147;
            *(_BYTE *)(v41 + v146) = 5;
            goto LABEL_224;
          case 6:
            v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
            v179 = v22;
            v180 = v22 + 1;
            v178(v41, v42, v259);
            v23 = v180;
            *(_BYTE *)(v41 + v179) = 6;
            goto LABEL_224;
          case 7:
            v148 = *(_OWORD *)v42;
            *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
            *(_OWORD *)v41 = v148;
            *(_BYTE *)(v41 + v22) = 7;
            goto LABEL_224;
          case 8:
            v134 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v135 = 8;
            goto LABEL_223;
          case 9:
            v134 = *(void **)v42;
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v135 = 9;
LABEL_223:
            *(_BYTE *)(v41 + v22) = v135;
            v181 = v22 + 1;
            v182 = v134;
            v23 = v181;
LABEL_224:
            v183 = ((v41 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
            v184 = ((v42 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v184 + 8) < 0xFFFFFFFFuLL)
            {
              v194 = *(_OWORD *)v184;
              v195 = *(_OWORD *)(v184 + 16);
              v196 = *(_OWORD *)(v184 + 48);
              *(_OWORD *)(v183 + 32) = *(_OWORD *)(v184 + 32);
              *(_OWORD *)(v183 + 48) = v196;
              *(_OWORD *)v183 = v194;
              *(_OWORD *)(v183 + 16) = v195;
              v197 = *(_OWORD *)(v184 + 64);
              v198 = *(_OWORD *)(v184 + 80);
              v199 = *(_OWORD *)(v184 + 96);
              *(_OWORD *)(v183 + 106) = *(_OWORD *)(v184 + 106);
              *(_OWORD *)(v183 + 80) = v198;
              *(_OWORD *)(v183 + 96) = v199;
              *(_OWORD *)(v183 + 64) = v197;
            }
            else
            {
              v258 = v41;
              v261 = v32;
              *(_QWORD *)v183 = *(_QWORD *)v184;
              *(_QWORD *)(v183 + 8) = *(_QWORD *)(v184 + 8);
              v185 = *(void **)(v184 + 16);
              v186 = *(_QWORD *)(v184 + 24);
              v187 = *(_QWORD *)(v184 + 32);
              v188 = *(_QWORD *)(v184 + 40);
              v189 = *(_QWORD *)(v184 + 48);
              v251 = *(_QWORD *)(v184 + 56);
              v247 = *(_BYTE *)(v184 + 64);
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              sub_1B41E9D64(v185, v186, v187, v188, v189, v251, v247);
              *(_QWORD *)(v183 + 16) = v185;
              *(_QWORD *)(v183 + 24) = v186;
              *(_QWORD *)(v183 + 32) = v187;
              *(_QWORD *)(v183 + 40) = v188;
              *(_QWORD *)(v183 + 48) = v189;
              *(_QWORD *)(v183 + 56) = v251;
              *(_BYTE *)(v183 + 64) = v247;
              *(_BYTE *)(v183 + 65) = *(_BYTE *)(v184 + 65);
              *(_BYTE *)(v183 + 66) = *(_BYTE *)(v184 + 66);
              *(_BYTE *)(v183 + 67) = *(_BYTE *)(v184 + 67);
              *(_BYTE *)(v183 + 68) = *(_BYTE *)(v184 + 68);
              v190 = *(unsigned __int8 *)(v184 + 120);
              if (v190 == 255)
              {
                v191 = *(_OWORD *)(v184 + 72);
                v192 = *(_OWORD *)(v184 + 88);
                v193 = *(_OWORD *)(v184 + 104);
                *(_BYTE *)(v183 + 120) = *(_BYTE *)(v184 + 120);
                *(_OWORD *)(v183 + 88) = v192;
                *(_OWORD *)(v183 + 104) = v193;
                *(_OWORD *)(v183 + 72) = v191;
              }
              else
              {
                v252 = v190 & 1;
                v200 = *(void **)(v184 + 72);
                v201 = *(_QWORD *)(v184 + 80);
                v203 = *(_QWORD *)(v184 + 88);
                v202 = *(_QWORD *)(v184 + 96);
                v204 = *(_QWORD *)(v184 + 112);
                v248 = *(_QWORD *)(v184 + 104);
                sub_1B41DF628(v200, v201, v203, v202, v248, v204, v190 & 1);
                *(_QWORD *)(v183 + 72) = v200;
                *(_QWORD *)(v183 + 80) = v201;
                *(_QWORD *)(v183 + 88) = v203;
                *(_QWORD *)(v183 + 96) = v202;
                *(_QWORD *)(v183 + 104) = v248;
                *(_QWORD *)(v183 + 112) = v204;
                *(_BYTE *)(v183 + 120) = v252;
              }
              v41 = v258;
              v32 = v261;
              *(_BYTE *)(v183 + 121) = *(_BYTE *)(v184 + 121);
            }
            *(_BYTE *)(v183 + 122) = *(_BYTE *)(v184 + 122);
            *(_BYTE *)(v183 + 123) = *(_BYTE *)(v184 + 123);
            *(_BYTE *)(v183 + 124) = *(_BYTE *)(v184 + 124);
            *(_BYTE *)(v183 + 125) = *(_BYTE *)(v184 + 125);
            *(_BYTE *)(v183 + 126) = *(_BYTE *)(v184 + 126);
            v205 = *(void **)((v184 + 134) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)((v183 + 134) & 0xFFFFFFFFFFFFF8) = v205;
            v206 = v205;
            if (v29 > 3)
              goto LABEL_231;
            v118 = 1;
            v105 = ((1 << v30) + 1) >> v30;
            if (v105 > 0xFFF5)
              goto LABEL_291;
            if (v105 <= 0xF5)
            {
LABEL_231:
              v97 = 1;
              goto LABEL_282;
            }
            *(_WORD *)(v41 + v29) = 1;
            break;
          default:
            if (v22 <= 3)
              v76 = v22;
            else
              v76 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_292;
      case 2u:
        v77 = v22 + 1;
        v78 = *(void **)v42;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v79 = (char *)((v25 + v41) & v74);
        v80 = (unsigned __int8 *)((v25 + v42) & v74);
        v254 = v22;
        v81 = v80[v22];
        v82 = v78;
        switch(v81)
        {
          case 0:
            *v79 = *v80;
            v79[v254] = 0;
            break;
          case 1:
            v207 = *(void **)v80;
            *(_QWORD *)v79 = *(_QWORD *)v80;
            v208 = 1;
            goto LABEL_245;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v79, v80, v259);
            v209 = 2;
            goto LABEL_242;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v79, v80, v259);
            v209 = 3;
            goto LABEL_242;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v79, v80, v259);
            v209 = 4;
            goto LABEL_242;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v79, v80, v259);
            v209 = 5;
            goto LABEL_242;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v79, v80, v259);
            v209 = 6;
            goto LABEL_242;
          case 7:
            v210 = *(_OWORD *)v80;
            *(_OWORD *)(v79 + 9) = *(_OWORD *)(v80 + 9);
            *(_OWORD *)v79 = v210;
            v209 = 7;
LABEL_242:
            v79[v254] = v209;
            break;
          case 8:
            v207 = *(void **)v80;
            *(_QWORD *)v79 = *(_QWORD *)v80;
            v208 = 8;
            goto LABEL_245;
          case 9:
            v207 = *(void **)v80;
            *(_QWORD *)v79 = *(_QWORD *)v80;
            v208 = 9;
LABEL_245:
            v79[v254] = v208;
            v211 = v207;
            break;
          default:
            memcpy(v79, v80, v77);
            break;
        }
        if (v29 > 3)
          goto LABEL_247;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 2;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_247:
          v97 = 2;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 2;
        goto LABEL_292;
      case 3u:
        v83 = v22 + 1;
        v84 = *(void **)v42;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v85 = (char *)((v25 + v41) & v74);
        v86 = (unsigned __int8 *)((v25 + v42) & v74);
        v255 = v22;
        v87 = v86[v22];
        v88 = v84;
        switch(v87)
        {
          case 0:
            *v85 = *v86;
            v85[v255] = 0;
            break;
          case 1:
            v212 = *(void **)v86;
            *(_QWORD *)v85 = *(_QWORD *)v86;
            v213 = 1;
            goto LABEL_262;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v85, v86, v259);
            v214 = 2;
            goto LABEL_259;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v85, v86, v259);
            v214 = 3;
            goto LABEL_259;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v85, v86, v259);
            v214 = 4;
            goto LABEL_259;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v85, v86, v259);
            v214 = 5;
            goto LABEL_259;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v85, v86, v259);
            v214 = 6;
            goto LABEL_259;
          case 7:
            v215 = *(_OWORD *)v86;
            *(_OWORD *)(v85 + 9) = *(_OWORD *)(v86 + 9);
            *(_OWORD *)v85 = v215;
            v214 = 7;
LABEL_259:
            v85[v255] = v214;
            break;
          case 8:
            v212 = *(void **)v86;
            *(_QWORD *)v85 = *(_QWORD *)v86;
            v213 = 8;
            goto LABEL_262;
          case 9:
            v212 = *(void **)v86;
            *(_QWORD *)v85 = *(_QWORD *)v86;
            v213 = 9;
LABEL_262:
            v85[v255] = v213;
            v216 = v212;
            break;
          default:
            memcpy(v85, v86, v83);
            break;
        }
        if (v29 > 3)
          goto LABEL_264;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 3;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_264:
          v97 = 3;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 3;
        goto LABEL_292;
      case 4u:
        v89 = v22 + 1;
        v90 = *(void **)v42;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v91 = (char *)((v25 + v41) & v74);
        v92 = (unsigned __int8 *)((v25 + v42) & v74);
        v256 = v22;
        v93 = v92[v22];
        v94 = v90;
        switch(v93)
        {
          case 0:
            *v91 = *v92;
            v91[v256] = 0;
            break;
          case 1:
            v217 = *(void **)v92;
            *(_QWORD *)v91 = *(_QWORD *)v92;
            v218 = 1;
            goto LABEL_279;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v91, v92, v259);
            v219 = 2;
            goto LABEL_276;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v91, v92, v259);
            v219 = 3;
            goto LABEL_276;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v91, v92, v259);
            v219 = 4;
            goto LABEL_276;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v91, v92, v259);
            v219 = 5;
            goto LABEL_276;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v91, v92, v259);
            v219 = 6;
            goto LABEL_276;
          case 7:
            v220 = *(_OWORD *)v92;
            *(_OWORD *)(v91 + 9) = *(_OWORD *)(v92 + 9);
            *(_OWORD *)v91 = v220;
            v219 = 7;
LABEL_276:
            v91[v256] = v219;
            break;
          case 8:
            v217 = *(void **)v92;
            *(_QWORD *)v91 = *(_QWORD *)v92;
            v218 = 8;
            goto LABEL_279;
          case 9:
            v217 = *(void **)v92;
            *(_QWORD *)v91 = *(_QWORD *)v92;
            v218 = 9;
LABEL_279:
            v91[v256] = v218;
            v221 = v217;
            break;
          default:
            memcpy(v91, v92, v89);
            break;
        }
        if (v29 > 3)
          goto LABEL_281;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 4;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_281:
          v97 = 4;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 4;
        goto LABEL_292;
      case 5u:
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
        *(_BYTE *)(v41 + 9) = *(_BYTE *)(v42 + 9);
        *(_BYTE *)(v41 + 10) = *(_BYTE *)(v42 + 10);
        v95 = *(void **)(v42 + 16);
        *(_QWORD *)(v41 + 16) = v95;
        v96 = v95;
        if (v29 > 3)
          goto LABEL_125;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 5;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_125:
          v97 = 5;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 5;
        goto LABEL_292;
      case 6u:
        v103 = *(void **)v42;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v104 = v103;
        if (v29 > 3)
          goto LABEL_143;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 6;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_143:
          v97 = 6;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 6;
        goto LABEL_292;
      case 7u:
        v98 = ~v16;
        if ((*(_DWORD *)(v15 + 84) & 0x80000000) != 0)
        {
          v108 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
          v109 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v42 + v16 + 8) & v98, *(unsigned int *)(v15 + 84), v253);
          v26 = v16 + 8;
          v27 = v108;
          if (v109)
          {
LABEL_130:
            v100 = v27;
            memcpy((void *)v41, (const void *)v42, v27);
            goto LABEL_172;
          }
        }
        else
        {
          v99 = *(_QWORD *)v42;
          if (*(_QWORD *)v42 >= 0xFFFFFFFFuLL)
            LODWORD(v99) = -1;
          if ((_DWORD)v99 != -1)
            goto LABEL_130;
        }
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v110 = (v26 + v41) & v98;
        v111 = (v42 + v16 + 8) & v98;
        v112 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16);
        v100 = v27;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v112(v110, v111, v253);
LABEL_172:
        v113 = ((v41 | 7) + v100) & 0xFFFFFFFFFFFFFFF8;
        v114 = ((v42 | 7) + v100) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v114 + 8) < 0xFFFFFFFFuLL)
        {
          v117 = *(_OWORD *)v114;
          *(_QWORD *)(v113 + 16) = *(_QWORD *)(v114 + 16);
          *(_OWORD *)v113 = v117;
          if (v29 > 3)
          {
LABEL_178:
            v97 = 7;
            goto LABEL_282;
          }
        }
        else
        {
          *(_QWORD *)v113 = *(_QWORD *)v114;
          *(_QWORD *)(v113 + 8) = *(_QWORD *)(v114 + 8);
          v115 = *(void **)(v114 + 16);
          *(_QWORD *)(v113 + 16) = v115;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v116 = v115;
          if (v29 > 3)
            goto LABEL_178;
        }
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 7;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
          goto LABEL_178;
        *(_WORD *)(v41 + v29) = 7;
        goto LABEL_292;
      case 8u:
        if (*(_DWORD *)(v12 + 84) < 0xFDu)
        {
          if (*(unsigned __int8 *)(v42 + v21) < 3u)
          {
LABEL_158:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v41, v42, v259);
            *(_BYTE *)(v41 + v21) = *(_BYTE *)(v42 + v21);
LABEL_159:
            *(_QWORD *)(((v41 | 7) + v21 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v42 | 7) + v21 + 1) & 0xFFFFFFFFFFFFF8);
            if (v29 > 3)
              goto LABEL_162;
            v105 = ((1 << v30) + 1) >> v30;
            if (v105 > 0xFFF5)
            {
              v118 = 8;
LABEL_291:
              *(_DWORD *)(v41 + v29) = v118;
            }
            else
            {
              if (v105 <= 0xF5)
              {
LABEL_162:
                v97 = 8;
LABEL_282:
                *(_BYTE *)(v41 + v29) = v97;
                if (v29 <= 3)
                {
LABEL_283:
                  v222 = ((1 << v30) + 1) >> v30;
                  v223 = 2;
                  if (v222 > 0xFFF5)
                    v223 = 4;
                  if (v222 > 0xF5)
                    goto LABEL_294;
                }
LABEL_286:
                v223 = 1;
LABEL_294:
                v225 = v223 + v29;
                v226 = v225 + v41;
                v227 = v225 + v42;
                *(_BYTE *)v226 = *(_BYTE *)v227;
                v226 &= 0xFFFFFFFFFFFFFFF8;
                v227 &= 0xFFFFFFFFFFFFFFF8;
                v228 = *(void **)(v227 + 8);
                *(_QWORD *)(v226 + 8) = v228;
                v229 = (v226 + 23) & 0xFFFFFFFFFFFFFFF8;
                v230 = (v227 + 23) & 0xFFFFFFFFFFFFFFF8;
                v231 = *(void **)v230;
                *(_QWORD *)v229 = *(_QWORD *)v230;
                *(_BYTE *)(v229 + 8) = *(_BYTE *)(v230 + 8);
                v232 = (v226 + 39) & 0xFFFFFFFFFFFFFFF8;
                v233 = (v227 + 39) & 0xFFFFFFFFFFFFFFF8;
                v234 = *(_QWORD *)v233;
                *(_BYTE *)(v232 + 8) = *(_BYTE *)(v233 + 8);
                *(_QWORD *)v232 = v234;
                v235 = (_QWORD *)((v226 + 55) & 0xFFFFFFFFFFFFF8);
                v236 = (_QWORD *)((v227 + 55) & 0xFFFFFFFFFFFFF8);
                *v235 = *v236;
                v237 = *(void **)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFF8);
                *(_QWORD *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFF8) = v237;
                v238 = v228;
                v239 = v231;
                _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                v240 = v237;
                if (v29 > 3)
                  goto LABEL_298;
                v241 = ((1 << v30) + 1) >> v30;
                v242 = 2;
                if (v241 > 0xFFF5)
                  v242 = 4;
                if (v241 <= 0xF5)
LABEL_298:
                  v242 = 1;
                v243 = ((((((v242 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 8;
                *(_QWORD *)((v41 + v243) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v42 + v243) & 0xFFFFFFFFFFFFF8);
                return v32;
              }
              *(_WORD *)(v41 + v29) = 8;
            }
LABEL_292:
            v224 = v105 > 0xFFF5;
            v223 = 2;
            if (v224)
              v223 = 4;
            goto LABEL_294;
          }
        }
        else if (!(*(unsigned int (**)(uint64_t))(v12 + 48))(v42))
        {
          goto LABEL_158;
        }
        memcpy((void *)v41, (const void *)v42, v21 + 1);
        goto LABEL_159;
      case 9u:
        *(_BYTE *)v41 = *(_BYTE *)v42;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v19 + 1 + v41) & ~v19, (v19 + 1 + v42) & ~v19, v17);
        if (v29 > 3)
          goto LABEL_132;
        v105 = ((1 << v30) + 1) >> v30;
        if (v105 > 0xFFF5)
        {
          v118 = 9;
          goto LABEL_291;
        }
        if (v105 <= 0xF5)
        {
LABEL_132:
          v97 = 9;
          goto LABEL_282;
        }
        *(_WORD *)(v41 + v29) = 9;
        goto LABEL_292;
      default:
        if (v29 > 3)
          goto LABEL_137;
        v101 = ((1 << v30) + 1) >> v30;
        v102 = 2;
        if (v101 > 0xFFF5)
          v102 = 4;
        if (v101 <= 0xF5)
LABEL_137:
          v102 = 1;
        memcpy((void *)v41, (const void *)v42, v102 + v29);
        if (v29 > 3)
          goto LABEL_286;
        goto LABEL_283;
    }
  }
  if (v60 > 0xFF)
  {
    v59 = *(unsigned __int16 *)(v42 + v57);
    if (!*(_WORD *)(v42 + v57))
      goto LABEL_85;
    goto LABEL_78;
  }
  if (v60 >= 2)
    goto LABEL_71;
LABEL_85:
  if (!v49)
    goto LABEL_98;
  if (v29 <= 3)
  {
    v67 = ((1 << v30) + 1) >> v30;
    if (v67 > 0xFFF5)
    {
      v63 = *(_DWORD *)(v42 + v29);
      v64 = ~v63;
      goto LABEL_96;
    }
    v66 = v67 + 10;
    if (v67 > 0xF5)
    {
      v69 = *(unsigned __int16 *)(v42 + v29);
      v63 = v69 | 0xFFFF0000;
      v64 = v69 ^ 0xFFFF;
      v65 = 16;
    }
    else
    {
      v68 = *(unsigned __int8 *)(v42 + v29);
      v63 = v68 | 0xFFFFFF00;
      v64 = v68 ^ 0xFF;
      v65 = 8;
    }
  }
  else
  {
    v62 = *(unsigned __int8 *)(v42 + v29);
    v63 = v62 | 0xFFFFFF00;
    v64 = v62 ^ 0xFF;
    v65 = 8;
    v66 = 11;
  }
  v70 = (1 << v65) - v66;
  if ((v70 & 0x80000000) == 0)
  {
    if (v70 <= v64)
      goto LABEL_98;
    goto LABEL_97;
  }
LABEL_96:
  if (v64 >= 0x7FFFFFFF)
    goto LABEL_98;
LABEL_97:
  if (!v63)
    goto LABEL_98;
LABEL_164:
  if (v29 > 3)
    goto LABEL_168;
  v106 = ((1 << v30) + 1) >> v30;
  v107 = 2;
  if (v106 > 0xFFF5)
    v107 = 4;
  if (v106 <= 0xF5)
LABEL_168:
    v107 = 1;
  memcpy((void *)v41, (const void *)v42, ((((((((v107 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v32;
}

void *sub_1B4301B88(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;
  size_t v39;
  int v40;
  char v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  char v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  char v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  char v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  char v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  unsigned int v85;
  char v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  char v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  char v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  char v105;
  int v106;
  int v107;
  unsigned int v108;
  uint64_t v109;
  unint64_t v110;
  unsigned int v111;
  char v112;
  unsigned int v113;
  unsigned int v114;
  uint64_t v115;
  unsigned int v116;
  uint64_t v117;
  char v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  char v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  size_t v135;
  id *v136;
  id v137;
  id v138;
  int v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  char v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void *v162;
  char *v163;
  unsigned __int8 *v164;
  int v165;
  id v166;
  void *v167;
  char *v168;
  unsigned __int8 *v169;
  int v170;
  id v171;
  void *v172;
  char *v173;
  unsigned __int8 *v174;
  int v175;
  id v176;
  void *v177;
  id v178;
  unsigned int v179;
  char v180;
  void *v181;
  id v182;
  size_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void **v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  uint64_t v203;
  id v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  size_t v208;
  unsigned int v209;
  unsigned int v210;
  uint64_t v211;
  size_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(uint64_t, uint64_t, uint64_t);
  unint64_t v217;
  unint64_t v218;
  void *v219;
  id v220;
  __int128 v221;
  uint64_t v222;
  unsigned int v223;
  size_t v224;
  unint64_t v225;
  __int16 v226;
  uint64_t v227;
  unint64_t v228;
  int v229;
  unsigned int v230;
  uint64_t v231;
  unint64_t v232;
  unsigned int v233;
  void *v234;
  char v235;
  __int128 v236;
  id v237;
  unint64_t v238;
  unint64_t v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  id v263;
  void *v264;
  char v265;
  __int128 v266;
  id v267;
  unint64_t v268;
  unint64_t v269;
  void *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  int v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  void *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  id v293;
  unint64_t v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  void *v301;
  char *v302;
  unsigned __int8 *v303;
  int v304;
  id v305;
  void *v306;
  char *v307;
  unsigned __int8 *v308;
  int v309;
  id v310;
  void *v311;
  char *v312;
  unsigned __int8 *v313;
  int v314;
  id v315;
  void *v316;
  id v317;
  char v318;
  uint64_t v319;
  uint64_t v320;
  int v321;
  unsigned int v322;
  uint64_t v323;
  void *v324;
  id v325;
  unsigned int v326;
  size_t v327;
  unsigned int v328;
  unsigned int v329;
  size_t v330;
  size_t v331;
  size_t v332;
  uint64_t v333;
  uint64_t v334;
  void (*v335)(uint64_t, uint64_t, uint64_t);
  unint64_t v336;
  unint64_t v337;
  void *v338;
  id v339;
  __int128 v340;
  int v341;
  void *v342;
  char v343;
  __int128 v344;
  void *v345;
  char v346;
  __int128 v347;
  id v348;
  unint64_t v349;
  unint64_t v350;
  void *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  int v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  void *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  void *v373;
  id v374;
  id v375;
  unint64_t v376;
  unint64_t v377;
  void *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  void *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  id v401;
  void *v402;
  char v403;
  __int128 v404;
  id v405;
  void *v406;
  char v407;
  __int128 v408;
  id v409;
  void *v410;
  char v411;
  __int128 v412;
  id v413;
  unsigned int v414;
  uint64_t v415;
  BOOL v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  void *v420;
  unint64_t v421;
  unint64_t v422;
  void *v423;
  unint64_t v424;
  unint64_t v425;
  uint64_t v426;
  _QWORD *v427;
  _QWORD *v428;
  void *v429;
  id v430;
  id v431;
  id v432;
  unsigned int v433;
  uint64_t v434;
  void *v435;
  char v436;
  __int128 v437;
  id v438;
  void *v439;
  char v440;
  __int128 v441;
  id v442;
  void *v443;
  char v444;
  __int128 v445;
  id v446;
  unsigned int v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unint64_t v451;
  unint64_t v452;
  unint64_t v453;
  void *v454;
  void *v455;
  id v456;
  unint64_t v457;
  unint64_t v458;
  void *v459;
  void *v460;
  id v461;
  unint64_t v462;
  unint64_t v463;
  uint64_t v464;
  _QWORD *v465;
  _QWORD *v466;
  void **v467;
  void *v468;
  void *v469;
  id v470;
  unsigned int v471;
  unint64_t v472;
  void *result;
  size_t v474;
  size_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  size_t __n;
  uint64_t v483;
  unsigned int v484;
  uint64_t v485;
  unsigned int v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  unsigned __int8 v492;
  char v493;
  unsigned __int8 v494;
  char v495;
  unsigned __int8 v496;
  char v497;
  unsigned __int8 v498;
  char v499;
  void *v500;
  uint64_t v501;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v500 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v491 = sub_1B49037E8();
  v12 = *(_QWORD *)(v491 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v490 = sub_1B49046DC();
  v15 = *(_QWORD *)(v490 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = sub_1B4905C78();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v24 <= (v21 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  v28 = v19 + 1;
  if (v24 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v24 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v24 <= 0x18)
    v29 = 24;
  else
    v29 = v24;
  v30 = (unint64_t)&a2[v20 + v11];
  if (v29 > 3)
  {
    v31 = 11;
LABEL_29:
    v32 = 8;
    goto LABEL_30;
  }
  v36 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v36 > 0xFFF5)
  {
    v34 = 0x7FFFFFFF;
    goto LABEL_39;
  }
  v31 = v36 + 10;
  if (v36 <= 0xF5)
    goto LABEL_29;
  v32 = 16;
LABEL_30:
  v33 = (1 << v32) - v31;
  v34 = 0x7FFFFFFF;
  if (v33 <= 0x7FFFFFFF)
    v35 = 0x7FFFFFFF;
  else
    v35 = v33;
  if ((v33 & 0x80000000) == 0)
    v34 = v35;
LABEL_39:
  v37 = ((unint64_t)v500 + v20 + v11) & ~v20;
  v501 = v30 & ~v20;
  v38 = *(_DWORD *)(v12 + 84);
  v39 = v21 + 1;
  if (v29 > 3)
  {
    v40 = 11;
    goto LABEL_41;
  }
  v43 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v43 <= 0xFFF5)
  {
    v40 = v43 + 10;
    if (v43 > 0xF5)
    {
      v41 = 16;
LABEL_42:
      v42 = (1 << v41) - v40;
      if ((v42 & 0x80000000) == 0)
        goto LABEL_48;
      goto LABEL_47;
    }
LABEL_41:
    v41 = 8;
    goto LABEL_42;
  }
LABEL_47:
  v42 = 0x7FFFFFFF;
LABEL_48:
  v44 = ~v14;
  v45 = *(unsigned int *)(v15 + 84);
  v46 = ~v16;
  v47 = ~v19;
  if (v42 == v34)
  {
    if (v29 <= 3)
    {
      v54 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v54 > 0xFFF5)
        goto LABEL_67;
      v48 = v54 + 10;
      if (v54 > 0xF5)
      {
        v49 = 16;
LABEL_52:
        v50 = (1 << v49) - v48;
        if ((v50 & 0x80000000) == 0)
        {
          if (v29 > 3)
            goto LABEL_71;
LABEL_68:
          v55 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          v56 = 2;
          if (v55 > 0xFFF5)
            v56 = 4;
          if (v55 > 0xF5)
          {
LABEL_72:
            v57 = v34 - v50;
            if (v34 <= v50)
              goto LABEL_89;
            v58 = v56 + v29;
            v59 = 8 * (v56 + v29);
            if (v58 > 3)
            {
LABEL_74:
              v60 = *(unsigned __int8 *)(v37 + v58);
              if (!*(_BYTE *)(v37 + v58))
                goto LABEL_89;
              goto LABEL_82;
            }
            v61 = ((v57 + ~(-1 << v59)) >> v59) + 1;
            if (HIWORD(v61))
            {
              v60 = *(_DWORD *)(v37 + v58);
              if (!v60)
                goto LABEL_89;
            }
            else
            {
              if (v61 <= 0xFF)
              {
                if (v61 < 2)
                {
LABEL_89:
                  if (!v50)
                    goto LABEL_101;
                  if (v29 <= 3)
                  {
                    v69 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v69 > 0xFFF5)
                    {
                      v64 = *(_DWORD *)(v37 + v29);
                      v65 = ~v64;
                      goto LABEL_99;
                    }
                    v67 = v69 + 10;
                    if (v69 > 0xF5)
                    {
                      v96 = *(unsigned __int16 *)(v37 + v29);
                      v64 = v96 | 0xFFFF0000;
                      v65 = v96 ^ 0xFFFF;
                      v66 = 16;
                    }
                    else
                    {
                      v70 = *(unsigned __int8 *)(v37 + v29);
                      v64 = v70 | 0xFFFFFF00;
                      v65 = v70 ^ 0xFF;
                      v66 = 8;
                    }
                  }
                  else
                  {
                    v63 = *(unsigned __int8 *)(v37 + v29);
                    v64 = v63 | 0xFFFFFF00;
                    v65 = v63 ^ 0xFF;
                    v66 = 8;
                    v67 = 11;
                  }
                  v68 = (1 << v66) - v67;
                  if ((v68 & 0x80000000) == 0)
                  {
                    if (v68 <= v65)
                      goto LABEL_101;
                    goto LABEL_100;
                  }
LABEL_99:
                  if (v65 >= 0x7FFFFFFF)
                    goto LABEL_101;
LABEL_100:
                  if (!v64)
                    goto LABEL_101;
LABEL_162:
                  if (v29 <= 3)
                  {
                    v98 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v98 > 0xFFF5)
                    {
                      v101 = 0x7FFFFFFF;
                      if (v29 > 3)
                      {
LABEL_173:
                        v103 = 11;
                        goto LABEL_177;
                      }
LABEL_175:
                      v104 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                      if (v104 > 0xFFF5)
                        goto LABEL_182;
                      v103 = v104 + 10;
                      if (v104 > 0xF5)
                      {
                        v105 = 16;
LABEL_178:
                        v106 = (1 << v105) - v103;
                        if ((v106 & 0x80000000) == 0)
                        {
                          if (v106 == v101)
                            goto LABEL_180;
                          goto LABEL_183;
                        }
LABEL_182:
                        if (v101 == 0x7FFFFFFF)
                        {
LABEL_180:
                          if (v29 <= 3)
                          {
                            v111 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                            if (v111 > 0xFFF5)
                              goto LABEL_198;
                            v107 = v111 + 10;
                            if (v111 > 0xF5)
                            {
                              v112 = 16;
LABEL_195:
                              v113 = (1 << v112) - v107;
                              if ((v113 & 0x80000000) == 0)
                              {
                                if (v29 > 3)
                                  goto LABEL_202;
LABEL_199:
                                v114 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                v115 = 2;
                                if (v114 > 0xFFF5)
                                  v115 = 4;
                                if (v114 > 0xF5)
                                {
LABEL_203:
                                  v116 = v101 - v113;
                                  if (v101 <= v113)
                                    goto LABEL_272;
                                  v117 = v115 + v29;
                                  v118 = 8 * (v115 + v29);
                                  if (v117 <= 3)
                                  {
                                    v120 = ((v116 + ~(-1 << v118)) >> v118) + 1;
                                    if (HIWORD(v120))
                                    {
                                      v119 = *(_DWORD *)(v501 + v117);
                                      if (!v119)
                                        goto LABEL_272;
                                      goto LABEL_215;
                                    }
                                    if (v120 > 0xFF)
                                    {
                                      v119 = *(unsigned __int16 *)(v501 + v117);
                                      if (!*(_WORD *)(v501 + v117))
                                        goto LABEL_272;
                                      goto LABEL_215;
                                    }
                                    if (v120 < 2)
                                    {
LABEL_272:
                                      if (!v113)
                                        goto LABEL_284;
                                      if (v29 <= 3)
                                      {
                                        v152 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        if (v152 > 0xFFF5)
                                        {
                                          v147 = *(_DWORD *)(v501 + v29);
                                          v148 = ~v147;
LABEL_282:
                                          if (v148 < 0x7FFFFFFF)
                                            goto LABEL_283;
                                          if (v29 > 3)
                                            goto LABEL_287;
LABEL_284:
                                          v154 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          if (v154 > 0xFFF5)
                                          {
                                            v155 = *(_DWORD *)(v501 + v29);
                                            if (v155 < 0xA)
                                              goto LABEL_296;
                                            goto LABEL_292;
                                          }
                                          if (v154 > 0xF5)
                                          {
                                            v155 = *(unsigned __int16 *)(v501 + v29);
                                            if (v155 < 0xA)
                                            {
LABEL_296:
                                              switch(v155)
                                              {
                                                case 0u:
                                                  switch(*(_BYTE *)(v501 + v22))
                                                  {
                                                    case 0:
                                                      *(_BYTE *)v37 = *(_BYTE *)v501;
                                                      *(_BYTE *)(v37 + v22) = 0;
                                                      goto LABEL_473;
                                                    case 1:
                                                      v234 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v235 = 1;
                                                      goto LABEL_472;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 2;
                                                      goto LABEL_473;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 3;
                                                      goto LABEL_473;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 4;
                                                      goto LABEL_473;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 5;
                                                      goto LABEL_473;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 6;
                                                      goto LABEL_473;
                                                    case 7:
                                                      v236 = *(_OWORD *)v501;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v501 + 9);
                                                      *(_OWORD *)v37 = v236;
                                                      *(_BYTE *)(v37 + v22) = 7;
                                                      goto LABEL_473;
                                                    case 8:
                                                      v234 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v235 = 8;
                                                      goto LABEL_472;
                                                    case 9:
                                                      v234 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v235 = 9;
LABEL_472:
                                                      *(_BYTE *)(v37 + v22) = v235;
                                                      v237 = v234;
                                                      v23 = v22 + 1;
LABEL_473:
                                                      v238 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                      v239 = (v22 + v501 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                      if (*(_QWORD *)(v239 + 8) < 0xFFFFFFFFuLL)
                                                      {
                                                        v250 = *(_OWORD *)v239;
                                                        v251 = *(_OWORD *)(v239 + 16);
                                                        v252 = *(_OWORD *)(v239 + 48);
                                                        *(_OWORD *)(v238 + 32) = *(_OWORD *)(v239 + 32);
                                                        *(_OWORD *)(v238 + 48) = v252;
                                                        *(_OWORD *)v238 = v250;
                                                        *(_OWORD *)(v238 + 16) = v251;
                                                        v253 = *(_OWORD *)(v239 + 64);
                                                        v254 = *(_OWORD *)(v239 + 80);
                                                        v255 = *(_OWORD *)(v239 + 96);
                                                        *(_OWORD *)(v238 + 106) = *(_OWORD *)(v239 + 106);
                                                        *(_OWORD *)(v238 + 80) = v254;
                                                        *(_OWORD *)(v238 + 96) = v255;
                                                        *(_OWORD *)(v238 + 64) = v253;
                                                        v160 = v500;
                                                      }
                                                      else
                                                      {
                                                        *(_QWORD *)v238 = *(_QWORD *)v239;
                                                        *(_QWORD *)(v238 + 8) = *(_QWORD *)(v239 + 8);
                                                        v240 = *(void **)(v239 + 16);
                                                        v241 = *(_QWORD *)(v239 + 24);
                                                        v242 = *(_QWORD *)(v239 + 32);
                                                        v243 = *(_QWORD *)(v239 + 40);
                                                        v245 = *(_QWORD *)(v239 + 48);
                                                        v244 = *(_QWORD *)(v239 + 56);
                                                        v492 = *(_BYTE *)(v239 + 64);
                                                        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                                                        sub_1B41E9D64(v240, v241, v242, v243, v245, v244, v492);
                                                        *(_QWORD *)(v238 + 16) = v240;
                                                        *(_QWORD *)(v238 + 24) = v241;
                                                        *(_QWORD *)(v238 + 32) = v242;
                                                        *(_QWORD *)(v238 + 40) = v243;
                                                        *(_QWORD *)(v238 + 48) = v245;
                                                        *(_QWORD *)(v238 + 56) = v244;
                                                        *(_BYTE *)(v238 + 64) = v492;
                                                        *(_BYTE *)(v238 + 65) = *(_BYTE *)(v239 + 65);
                                                        *(_BYTE *)(v238 + 66) = *(_BYTE *)(v239 + 66);
                                                        *(_BYTE *)(v238 + 67) = *(_BYTE *)(v239 + 67);
                                                        *(_BYTE *)(v238 + 68) = *(_BYTE *)(v239 + 68);
                                                        v246 = *(unsigned __int8 *)(v239 + 120);
                                                        if (v246 == 255)
                                                        {
                                                          v247 = *(_OWORD *)(v239 + 72);
                                                          v248 = *(_OWORD *)(v239 + 88);
                                                          v249 = *(_OWORD *)(v239 + 104);
                                                          *(_BYTE *)(v238 + 120) = *(_BYTE *)(v239 + 120);
                                                          *(_OWORD *)(v238 + 88) = v248;
                                                          *(_OWORD *)(v238 + 104) = v249;
                                                          *(_OWORD *)(v238 + 72) = v247;
                                                        }
                                                        else
                                                        {
                                                          v493 = v246 & 1;
                                                          v256 = *(void **)(v239 + 72);
                                                          v257 = *(_QWORD *)(v239 + 80);
                                                          v258 = *(_QWORD *)(v239 + 88);
                                                          v259 = *(_QWORD *)(v239 + 96);
                                                          v260 = *(_QWORD *)(v239 + 104);
                                                          v261 = *(_QWORD *)(v239 + 112);
                                                          sub_1B41DF628(v256, v257, v258, v259, v260, v261, v246 & 1);
                                                          *(_QWORD *)(v238 + 72) = v256;
                                                          *(_QWORD *)(v238 + 80) = v257;
                                                          *(_QWORD *)(v238 + 88) = v258;
                                                          *(_QWORD *)(v238 + 96) = v259;
                                                          *(_QWORD *)(v238 + 104) = v260;
                                                          *(_QWORD *)(v238 + 112) = v261;
                                                          *(_BYTE *)(v238 + 120) = v493;
                                                        }
                                                        v160 = v500;
                                                        *(_BYTE *)(v238 + 121) = *(_BYTE *)(v239 + 121);
                                                      }
                                                      *(_BYTE *)(v238 + 122) = *(_BYTE *)(v239 + 122);
                                                      *(_BYTE *)(v238 + 123) = *(_BYTE *)(v239 + 123);
                                                      *(_BYTE *)(v238 + 124) = *(_BYTE *)(v239 + 124);
                                                      *(_BYTE *)(v238 + 125) = *(_BYTE *)(v239 + 125);
                                                      *(_BYTE *)(v238 + 126) = *(_BYTE *)(v239 + 126);
                                                      v262 = *(void **)((v239 + 134) & 0xFFFFFFFFFFFFF8);
                                                      *(_QWORD *)((v238 + 134) & 0xFFFFFFFFFFFFF8) = v262;
                                                      v263 = v262;
                                                      if (v29 > 3)
                                                        goto LABEL_482;
                                                      v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      if (v179 > 0xFFF5)
                                                      {
                                                        *(_DWORD *)(v37 + v29) = 0;
                                                      }
                                                      else
                                                      {
                                                        if (v179 <= 0xF5)
                                                        {
LABEL_482:
                                                          *(_BYTE *)(v37 + v29) = 0;
                                                          goto LABEL_692;
                                                        }
                                                        *(_WORD *)(v37 + v29) = 0;
                                                      }
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v157 = v22;
                                                      else
                                                        v157 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  goto LABEL_700;
                                                case 1u:
                                                  switch(*(_BYTE *)(v501 + v22))
                                                  {
                                                    case 0:
                                                      *(_BYTE *)v37 = *(_BYTE *)v501;
                                                      *(_BYTE *)(v37 + v22) = 0;
                                                      goto LABEL_495;
                                                    case 1:
                                                      v264 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v265 = 1;
                                                      goto LABEL_494;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 2;
                                                      goto LABEL_495;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 3;
                                                      goto LABEL_495;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 4;
                                                      goto LABEL_495;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 5;
                                                      goto LABEL_495;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                      v23 = v22 + 1;
                                                      *(_BYTE *)(v37 + v22) = 6;
                                                      goto LABEL_495;
                                                    case 7:
                                                      v266 = *(_OWORD *)v501;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v501 + 9);
                                                      *(_OWORD *)v37 = v266;
                                                      *(_BYTE *)(v37 + v22) = 7;
                                                      goto LABEL_495;
                                                    case 8:
                                                      v264 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v265 = 8;
                                                      goto LABEL_494;
                                                    case 9:
                                                      v264 = *(void **)v501;
                                                      *(_QWORD *)v37 = *(_QWORD *)v501;
                                                      v265 = 9;
LABEL_494:
                                                      *(_BYTE *)(v37 + v22) = v265;
                                                      v267 = v264;
                                                      v23 = v22 + 1;
LABEL_495:
                                                      v268 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                      v269 = (v22 + v501 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                      if (*(_QWORD *)(v269 + 8) < 0xFFFFFFFFuLL)
                                                      {
                                                        v280 = *(_OWORD *)v269;
                                                        v281 = *(_OWORD *)(v269 + 16);
                                                        v282 = *(_OWORD *)(v269 + 48);
                                                        *(_OWORD *)(v268 + 32) = *(_OWORD *)(v269 + 32);
                                                        *(_OWORD *)(v268 + 48) = v282;
                                                        *(_OWORD *)v268 = v280;
                                                        *(_OWORD *)(v268 + 16) = v281;
                                                        v283 = *(_OWORD *)(v269 + 64);
                                                        v284 = *(_OWORD *)(v269 + 80);
                                                        v285 = *(_OWORD *)(v269 + 96);
                                                        *(_OWORD *)(v268 + 106) = *(_OWORD *)(v269 + 106);
                                                        *(_OWORD *)(v268 + 80) = v284;
                                                        *(_OWORD *)(v268 + 96) = v285;
                                                        *(_OWORD *)(v268 + 64) = v283;
                                                        v160 = v500;
                                                      }
                                                      else
                                                      {
                                                        *(_QWORD *)v268 = *(_QWORD *)v269;
                                                        *(_QWORD *)(v268 + 8) = *(_QWORD *)(v269 + 8);
                                                        v270 = *(void **)(v269 + 16);
                                                        v271 = *(_QWORD *)(v269 + 24);
                                                        v272 = *(_QWORD *)(v269 + 32);
                                                        v273 = *(_QWORD *)(v269 + 40);
                                                        v275 = *(_QWORD *)(v269 + 48);
                                                        v274 = *(_QWORD *)(v269 + 56);
                                                        v494 = *(_BYTE *)(v269 + 64);
                                                        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                                                        sub_1B41E9D64(v270, v271, v272, v273, v275, v274, v494);
                                                        *(_QWORD *)(v268 + 16) = v270;
                                                        *(_QWORD *)(v268 + 24) = v271;
                                                        *(_QWORD *)(v268 + 32) = v272;
                                                        *(_QWORD *)(v268 + 40) = v273;
                                                        *(_QWORD *)(v268 + 48) = v275;
                                                        *(_QWORD *)(v268 + 56) = v274;
                                                        *(_BYTE *)(v268 + 64) = v494;
                                                        *(_BYTE *)(v268 + 65) = *(_BYTE *)(v269 + 65);
                                                        *(_BYTE *)(v268 + 66) = *(_BYTE *)(v269 + 66);
                                                        *(_BYTE *)(v268 + 67) = *(_BYTE *)(v269 + 67);
                                                        *(_BYTE *)(v268 + 68) = *(_BYTE *)(v269 + 68);
                                                        v276 = *(unsigned __int8 *)(v269 + 120);
                                                        if (v276 == 255)
                                                        {
                                                          v277 = *(_OWORD *)(v269 + 72);
                                                          v278 = *(_OWORD *)(v269 + 88);
                                                          v279 = *(_OWORD *)(v269 + 104);
                                                          *(_BYTE *)(v268 + 120) = *(_BYTE *)(v269 + 120);
                                                          *(_OWORD *)(v268 + 88) = v278;
                                                          *(_OWORD *)(v268 + 104) = v279;
                                                          *(_OWORD *)(v268 + 72) = v277;
                                                        }
                                                        else
                                                        {
                                                          v495 = v276 & 1;
                                                          v286 = *(void **)(v269 + 72);
                                                          v287 = *(_QWORD *)(v269 + 80);
                                                          v288 = *(_QWORD *)(v269 + 88);
                                                          v289 = *(_QWORD *)(v269 + 96);
                                                          v290 = *(_QWORD *)(v269 + 104);
                                                          v291 = *(_QWORD *)(v269 + 112);
                                                          sub_1B41DF628(v286, v287, v288, v289, v290, v291, v276 & 1);
                                                          *(_QWORD *)(v268 + 72) = v286;
                                                          *(_QWORD *)(v268 + 80) = v287;
                                                          *(_QWORD *)(v268 + 88) = v288;
                                                          *(_QWORD *)(v268 + 96) = v289;
                                                          *(_QWORD *)(v268 + 104) = v290;
                                                          *(_QWORD *)(v268 + 112) = v291;
                                                          *(_BYTE *)(v268 + 120) = v495;
                                                        }
                                                        v160 = v500;
                                                        *(_BYTE *)(v268 + 121) = *(_BYTE *)(v269 + 121);
                                                      }
                                                      *(_BYTE *)(v268 + 122) = *(_BYTE *)(v269 + 122);
                                                      *(_BYTE *)(v268 + 123) = *(_BYTE *)(v269 + 123);
                                                      *(_BYTE *)(v268 + 124) = *(_BYTE *)(v269 + 124);
                                                      *(_BYTE *)(v268 + 125) = *(_BYTE *)(v269 + 125);
                                                      *(_BYTE *)(v268 + 126) = *(_BYTE *)(v269 + 126);
                                                      v292 = *(void **)((v269 + 134) & 0xFFFFFFFFFFFFF8);
                                                      *(_QWORD *)((v268 + 134) & 0xFFFFFFFFFFFFF8) = v292;
                                                      v293 = v292;
                                                      if (v29 > 3)
                                                        goto LABEL_504;
                                                      v226 = 1;
                                                      v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      if (v179 > 0xFFF5)
                                                      {
                                                        *(_DWORD *)(v37 + v29) = 1;
                                                        goto LABEL_700;
                                                      }
                                                      if (v179 > 0xF5)
                                                        goto LABEL_699;
LABEL_504:
                                                      v180 = 1;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v161 = v22;
                                                      else
                                                        v161 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  goto LABEL_691;
                                                case 2u:
                                                  v162 = *(void **)v501;
                                                  *(_QWORD *)v37 = *(_QWORD *)v501;
                                                  v163 = (char *)((v25 + v37) & v44);
                                                  v164 = (unsigned __int8 *)((v25 + v501) & v44);
                                                  v165 = v164[v22];
                                                  v166 = v162;
                                                  switch(v165)
                                                  {
                                                    case 0:
                                                      *v163 = *v164;
                                                      v163[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v402 = *(void **)v164;
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v403 = 1;
                                                      goto LABEL_654;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v163, v164, v491);
                                                      v163[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v163, v164, v491);
                                                      v163[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v163, v164, v491);
                                                      v163[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v163, v164, v491);
                                                      v163[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v163, v164, v491);
                                                      v163[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v404 = *(_OWORD *)v164;
                                                      *(_OWORD *)(v163 + 9) = *(_OWORD *)(v164 + 9);
                                                      *(_OWORD *)v163 = v404;
                                                      v163[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v402 = *(void **)v164;
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v403 = 8;
                                                      goto LABEL_654;
                                                    case 9:
                                                      v402 = *(void **)v164;
                                                      *(_QWORD *)v163 = *(_QWORD *)v164;
                                                      v403 = 9;
LABEL_654:
                                                      v163[v22] = v403;
                                                      v405 = v402;
                                                      break;
                                                    default:
                                                      memcpy(v163, v164, v22 + 1);
                                                      break;
                                                  }
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_658;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 2;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_658:
                                                    v180 = 2;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 2;
                                                  goto LABEL_699;
                                                case 3u:
                                                  v167 = *(void **)v501;
                                                  *(_QWORD *)v37 = *(_QWORD *)v501;
                                                  v168 = (char *)((v25 + v37) & v44);
                                                  v169 = (unsigned __int8 *)((v25 + v501) & v44);
                                                  v170 = v169[v22];
                                                  v171 = v167;
                                                  switch(v170)
                                                  {
                                                    case 0:
                                                      *v168 = *v169;
                                                      v168[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v406 = *(void **)v169;
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v407 = 1;
                                                      goto LABEL_670;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v168, v169, v491);
                                                      v168[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v168, v169, v491);
                                                      v168[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v168, v169, v491);
                                                      v168[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v168, v169, v491);
                                                      v168[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v168, v169, v491);
                                                      v168[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v408 = *(_OWORD *)v169;
                                                      *(_OWORD *)(v168 + 9) = *(_OWORD *)(v169 + 9);
                                                      *(_OWORD *)v168 = v408;
                                                      v168[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v406 = *(void **)v169;
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v407 = 8;
                                                      goto LABEL_670;
                                                    case 9:
                                                      v406 = *(void **)v169;
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v407 = 9;
LABEL_670:
                                                      v168[v22] = v407;
                                                      v409 = v406;
                                                      break;
                                                    default:
                                                      memcpy(v168, v169, v22 + 1);
                                                      break;
                                                  }
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_674;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 3;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_674:
                                                    v180 = 3;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 3;
                                                  goto LABEL_699;
                                                case 4u:
                                                  v172 = *(void **)v501;
                                                  *(_QWORD *)v37 = *(_QWORD *)v501;
                                                  v173 = (char *)((v25 + v37) & v44);
                                                  v174 = (unsigned __int8 *)((v25 + v501) & v44);
                                                  v175 = v174[v22];
                                                  v176 = v172;
                                                  switch(v175)
                                                  {
                                                    case 0:
                                                      *v173 = *v174;
                                                      v173[v22] = 0;
                                                      break;
                                                    case 1:
                                                      v410 = *(void **)v174;
                                                      *(_QWORD *)v173 = *(_QWORD *)v174;
                                                      v411 = 1;
                                                      goto LABEL_686;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v173, v174, v491);
                                                      v173[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v173, v174, v491);
                                                      v173[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v173, v174, v491);
                                                      v173[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v173, v174, v491);
                                                      v173[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v173, v174, v491);
                                                      v173[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v412 = *(_OWORD *)v174;
                                                      *(_OWORD *)(v173 + 9) = *(_OWORD *)(v174 + 9);
                                                      *(_OWORD *)v173 = v412;
                                                      v173[v22] = 7;
                                                      break;
                                                    case 8:
                                                      v410 = *(void **)v174;
                                                      *(_QWORD *)v173 = *(_QWORD *)v174;
                                                      v411 = 8;
                                                      goto LABEL_686;
                                                    case 9:
                                                      v410 = *(void **)v174;
                                                      *(_QWORD *)v173 = *(_QWORD *)v174;
                                                      v411 = 9;
LABEL_686:
                                                      v173[v22] = v411;
                                                      v413 = v410;
                                                      break;
                                                    default:
                                                      memcpy(v173, v174, v22 + 1);
                                                      break;
                                                  }
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_690;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 4;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_690:
                                                    v180 = 4;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 4;
                                                  goto LABEL_699;
                                                case 5u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v501;
                                                  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v501 + 8);
                                                  *(_BYTE *)(v37 + 9) = *(_BYTE *)(v501 + 9);
                                                  *(_BYTE *)(v37 + 10) = *(_BYTE *)(v501 + 10);
                                                  v177 = *(void **)(v501 + 16);
                                                  *(_QWORD *)(v37 + 16) = v177;
                                                  v178 = v177;
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_320;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 5;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_320:
                                                    v180 = 5;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 5;
                                                  goto LABEL_699;
                                                case 6u:
                                                  v181 = *(void **)v501;
                                                  *(_QWORD *)v37 = *(_QWORD *)v501;
                                                  v182 = v181;
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_324;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 6;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_324:
                                                    v180 = 6;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 6;
                                                  goto LABEL_699;
                                                case 7u:
                                                  v183 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
                                                  if ((v45 & 0x80000000) != 0)
                                                  {
                                                    v184 = v16 + 8;
                                                    v186 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v26 + v501) & v46, *(unsigned int *)(v15 + 84), v490);
                                                  }
                                                  else
                                                  {
                                                    v184 = v16 + 8;
                                                    v185 = *(_QWORD *)v501;
                                                    if (*(_QWORD *)v501 >= 0xFFFFFFFFuLL)
                                                      LODWORD(v185) = -1;
                                                    v186 = v185 + 1;
                                                  }
                                                  if (v186)
                                                  {
                                                    v212 = v183;
                                                    memcpy((void *)v37, (const void *)v501, v183);
                                                    v160 = v500;
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v37 = *(_QWORD *)v501;
                                                    v214 = (v37 + v16 + 8) & v46;
                                                    v215 = (v184 + v501) & v46;
                                                    v216 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
                                                    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                                                    v216(v214, v215, v490);
                                                    v160 = v500;
                                                    v212 = v183;
                                                  }
                                                  v217 = ((v37 | 7) + v212) & 0xFFFFFFFFFFFFFFF8;
                                                  v218 = ((v501 | 7) + v212) & 0xFFFFFFFFFFFFFFF8;
                                                  if (*(_QWORD *)(v218 + 8) < 0xFFFFFFFFuLL)
                                                  {
                                                    v221 = *(_OWORD *)v218;
                                                    *(_QWORD *)(v217 + 16) = *(_QWORD *)(v218 + 16);
                                                    *(_OWORD *)v217 = v221;
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v217 = *(_QWORD *)v218;
                                                    *(_QWORD *)(v217 + 8) = *(_QWORD *)(v218 + 8);
                                                    v219 = *(void **)(v218 + 16);
                                                    *(_QWORD *)(v217 + 16) = v219;
                                                    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                                                    v220 = v219;
                                                  }
                                                  if (v29 > 3)
                                                    goto LABEL_412;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 7;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_412:
                                                    v180 = 7;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 7;
                                                  goto LABEL_699;
                                                case 8u:
                                                  if (v38 < 0xFD)
                                                  {
                                                    v160 = v500;
                                                    v207 = *(unsigned __int8 *)(v501 + v21);
                                                    if (v207 < 3)
                                                      goto LABEL_379;
                                                    v187 = v207 - 2;
                                                  }
                                                  else
                                                  {
                                                    v187 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v501);
                                                    v39 = v21 + 1;
                                                    v160 = v500;
                                                  }
                                                  if (v187)
                                                  {
                                                    v208 = v39;
                                                    memcpy((void *)v37, (const void *)v501, v39);
                                                    goto LABEL_380;
                                                  }
LABEL_379:
                                                  v208 = v39;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
                                                  *(_BYTE *)(v37 + v21) = *(_BYTE *)(v501 + v21);
LABEL_380:
                                                  *(_QWORD *)(((v37 | 7) + v208) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v501 | 7) + v208) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_383;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 8;
                                                    goto LABEL_700;
                                                  }
                                                  if (v179 <= 0xF5)
                                                  {
LABEL_383:
                                                    v180 = 8;
                                                    goto LABEL_691;
                                                  }
                                                  v226 = 8;
                                                  goto LABEL_699;
                                                case 9u:
                                                  *(_BYTE *)v37 = *(_BYTE *)v501;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v28 + v37) & v47, (v28 + v501) & v47, v17);
                                                  v160 = v500;
                                                  if (v29 > 3)
                                                    goto LABEL_334;
                                                  v179 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v179 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v179 <= 0xF5)
                                                    {
LABEL_334:
                                                      v180 = 9;
LABEL_691:
                                                      *(_BYTE *)(v37 + v29) = v180;
LABEL_692:
                                                      if (v29 > 3)
                                                        goto LABEL_696;
                                                      v414 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v415 = 2;
                                                      if (v414 > 0xFFF5)
                                                        v415 = 4;
                                                      if (v414 <= 0xF5)
LABEL_696:
                                                        v415 = 1;
LABEL_702:
                                                      v417 = v415 + v29;
                                                      v418 = v417 + v37;
                                                      v419 = v417 + v501;
                                                      *(_BYTE *)v418 = *(_BYTE *)v419;
                                                      v418 &= 0xFFFFFFFFFFFFFFF8;
                                                      v419 &= 0xFFFFFFFFFFFFFFF8;
                                                      v420 = *(void **)(v419 + 8);
                                                      *(_QWORD *)(v418 + 8) = v420;
                                                      v421 = (v418 + 23) & 0xFFFFFFFFFFFFFFF8;
                                                      v422 = (v419 + 23) & 0xFFFFFFFFFFFFFFF8;
                                                      v423 = *(void **)v422;
                                                      *(_QWORD *)v421 = *(_QWORD *)v422;
                                                      *(_BYTE *)(v421 + 8) = *(_BYTE *)(v422 + 8);
                                                      v424 = (v418 + 39) & 0xFFFFFFFFFFFFFFF8;
                                                      v425 = (v419 + 39) & 0xFFFFFFFFFFFFFFF8;
                                                      v426 = *(_QWORD *)v425;
                                                      *(_BYTE *)(v424 + 8) = *(_BYTE *)(v425 + 8);
                                                      *(_QWORD *)v424 = v426;
                                                      v427 = (_QWORD *)((v418 + 55) & 0xFFFFFFFFFFFFF8);
                                                      v428 = (_QWORD *)((v419 + 55) & 0xFFFFFFFFFFFFF8);
                                                      *v427 = *v428;
                                                      v429 = *(void **)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFF8);
                                                      *(_QWORD *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFF8) = v429;
                                                      v430 = v420;
                                                      v431 = v423;
                                                      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
                                                      v432 = v429;
                                                      if (v29 > 3)
                                                        goto LABEL_706;
                                                      v433 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v434 = 2;
                                                      if (v433 > 0xFFF5)
                                                        v434 = 4;
                                                      if (v433 <= 0xF5)
LABEL_706:
                                                        v434 = 1;
                                                      goto LABEL_770;
                                                    }
                                                    v226 = 9;
LABEL_699:
                                                    *(_WORD *)(v37 + v29) = v226;
                                                  }
LABEL_700:
                                                  v416 = v179 > 0xFFF5;
                                                  v415 = 2;
                                                  if (v416)
                                                    v415 = 4;
                                                  goto LABEL_702;
                                                default:
                                                  if (v29 > 3)
                                                    goto LABEL_305;
                                                  v158 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  v159 = 2;
                                                  if (v158 > 0xFFF5)
                                                    v159 = 4;
                                                  if (v158 <= 0xF5)
LABEL_305:
                                                    v159 = 1;
                                                  v160 = v500;
                                                  memcpy((void *)v37, (const void *)v501, v159 + v29);
                                                  goto LABEL_692;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_287:
                                            v155 = *(unsigned __int8 *)(v501 + v29);
                                            if (v155 < 0xA)
                                              goto LABEL_296;
                                          }
LABEL_292:
                                          if (v29 <= 3)
                                            v156 = v29;
                                          else
                                            v156 = 4;
                                          __asm { BR              X12 }
                                        }
                                        v150 = v152 + 10;
                                        if (v152 > 0xF5)
                                        {
                                          v189 = *(unsigned __int16 *)(v501 + v29);
                                          v147 = v189 | 0xFFFF0000;
                                          v148 = v189 ^ 0xFFFF;
                                          v149 = 16;
                                        }
                                        else
                                        {
                                          v153 = *(unsigned __int8 *)(v501 + v29);
                                          v147 = v153 | 0xFFFFFF00;
                                          v148 = v153 ^ 0xFF;
                                          v149 = 8;
                                        }
                                      }
                                      else
                                      {
                                        v146 = *(unsigned __int8 *)(v501 + v29);
                                        v147 = v146 | 0xFFFFFF00;
                                        v148 = v146 ^ 0xFF;
                                        v149 = 8;
                                        v150 = 11;
                                      }
                                      v151 = (1 << v149) - v150;
                                      if ((v151 & 0x80000000) == 0)
                                      {
                                        if (v151 <= v148)
                                          goto LABEL_284;
LABEL_283:
                                        if (!v147)
                                          goto LABEL_284;
LABEL_390:
                                        if (v29 > 3)
                                          goto LABEL_394;
                                        v210 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        v211 = 2;
                                        if (v210 > 0xFFF5)
                                          v211 = 4;
                                        if (v210 <= 0xF5)
LABEL_394:
                                          v211 = 1;
                                        v160 = v500;
                                        goto LABEL_462;
                                      }
                                      goto LABEL_282;
                                    }
                                  }
                                  v119 = *(unsigned __int8 *)(v501 + v117);
                                  if (!*(_BYTE *)(v501 + v117))
                                    goto LABEL_272;
LABEL_215:
                                  v121 = (v119 - 1) << v118;
                                  if (v117 > 3)
                                    v121 = 0;
                                  if ((_DWORD)v117)
                                  {
                                    if (v117 > 3)
                                      LODWORD(v117) = 4;
                                    __asm { BR              X12 }
                                  }
                                  if (v113 + v121 == -1)
                                    goto LABEL_284;
                                  goto LABEL_390;
                                }
LABEL_202:
                                v115 = 1;
                                goto LABEL_203;
                              }
LABEL_198:
                              v113 = 0x7FFFFFFF;
                              if (v29 > 3)
                                goto LABEL_202;
                              goto LABEL_199;
                            }
                          }
                          else
                          {
                            v107 = 11;
                          }
                          v112 = 8;
                          goto LABEL_195;
                        }
LABEL_183:
                        if (v29 > 3)
                          goto LABEL_187;
                        v108 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                        v109 = 2;
                        if (v108 > 0xFFF5)
                          v109 = 4;
                        if (v108 <= 0xF5)
LABEL_187:
                          v109 = 1;
                        v110 = *(_QWORD *)(((v29 + v501 + v109) & 0xFFFFFFFFFFFFF8) + 8);
                        if (v110 >= 0xFFFFFFFF)
                          LODWORD(v110) = -1;
                        if ((_DWORD)v110 == -1)
                          goto LABEL_284;
                        goto LABEL_390;
                      }
LABEL_177:
                      v105 = 8;
                      goto LABEL_178;
                    }
                    v97 = v98 + 10;
                    if (v98 > 0xF5)
                    {
                      v99 = 16;
LABEL_167:
                      v100 = (1 << v99) - v97;
                      v101 = 0x7FFFFFFF;
                      if (v100 <= 0x7FFFFFFF)
                        v102 = 0x7FFFFFFF;
                      else
                        v102 = v100;
                      if ((v100 & 0x80000000) == 0)
                        v101 = v102;
                      if (v29 > 3)
                        goto LABEL_173;
                      goto LABEL_175;
                    }
                  }
                  else
                  {
                    v97 = 11;
                  }
                  v99 = 8;
                  goto LABEL_167;
                }
                goto LABEL_74;
              }
              v60 = *(unsigned __int16 *)(v37 + v58);
              if (!*(_WORD *)(v37 + v58))
                goto LABEL_89;
            }
LABEL_82:
            v62 = (v60 - 1) << v59;
            if (v58 > 3)
              v62 = 0;
            if ((_DWORD)v58)
            {
              if (v58 > 3)
                LODWORD(v58) = 4;
              __asm { BR              X12 }
            }
            if (v50 + v62 != -1)
              goto LABEL_162;
            goto LABEL_101;
          }
LABEL_71:
          v56 = 1;
          goto LABEL_72;
        }
LABEL_67:
        v50 = 0x7FFFFFFF;
        if (v29 > 3)
          goto LABEL_71;
        goto LABEL_68;
      }
    }
    else
    {
      v48 = 11;
    }
    v49 = 8;
    goto LABEL_52;
  }
  if (v29 > 3)
    goto LABEL_59;
  v51 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v52 = 2;
  if (v51 > 0xFFF5)
    v52 = 4;
  if (v51 <= 0xF5)
LABEL_59:
    v52 = 1;
  v53 = *(_QWORD *)(((v29 + v37 + v52) & 0xFFFFFFFFFFFFF8) + 8);
  if (v53 >= 0xFFFFFFFF)
    LODWORD(v53) = -1;
  if ((_DWORD)v53 != -1)
    goto LABEL_162;
LABEL_101:
  if (v29 > 3)
  {
    v71 = 11;
    goto LABEL_105;
  }
  v72 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v72 <= 0xFFF5)
  {
    v71 = v72 + 10;
    if (v72 > 0xF5)
    {
      v73 = 16;
LABEL_106:
      v74 = (1 << v73) - v71;
      v75 = 0x7FFFFFFF;
      if (v74 <= 0x7FFFFFFF)
        v76 = 0x7FFFFFFF;
      else
        v76 = v74;
      if ((v74 & 0x80000000) == 0)
        v75 = v76;
      if (v29 > 3)
        goto LABEL_112;
      goto LABEL_114;
    }
LABEL_105:
    v73 = 8;
    goto LABEL_106;
  }
  v75 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_112:
    v77 = 11;
LABEL_116:
    v79 = 8;
    goto LABEL_117;
  }
LABEL_114:
  v78 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v78 > 0xFFF5)
    goto LABEL_121;
  v77 = v78 + 10;
  if (v78 <= 0xF5)
    goto LABEL_116;
  v79 = 16;
LABEL_117:
  v80 = (1 << v79) - v77;
  if ((v80 & 0x80000000) == 0)
  {
    if (v80 == v75)
      goto LABEL_119;
LABEL_122:
    if (v29 > 3)
      goto LABEL_126;
    v82 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    v83 = 2;
    if (v82 > 0xFFF5)
      v83 = 4;
    if (v82 <= 0xF5)
LABEL_126:
      v83 = 1;
    v84 = *(_QWORD *)(((v29 + v501 + v83) & 0xFFFFFFFFFFFFF8) + 8);
    if (v84 >= 0xFFFFFFFF)
      LODWORD(v84) = -1;
    if ((_DWORD)v84 != -1)
      goto LABEL_338;
LABEL_234:
    if (v37 == v501)
    {
LABEL_752:
      if (v29 > 3)
        goto LABEL_756;
      v447 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v448 = 2;
      if (v447 > 0xFFF5)
        v448 = 4;
      if (v447 <= 0xF5)
LABEL_756:
        v448 = 1;
LABEL_764:
      v449 = v448 + v29;
      v450 = v449 + v37;
      v451 = v449 + v501;
      *(_BYTE *)v450 = *(_BYTE *)v451;
      v452 = v450 & 0xFFFFFFFFFFFFFFF8;
      v453 = v451 & 0xFFFFFFFFFFFFFFF8;
      v454 = *(void **)((v451 & 0xFFFFFFFFFFFFFFF8) + 8);
      v455 = *(void **)((v450 & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_QWORD *)((v450 & 0xFFFFFFFFFFFFFFF8) + 8) = v454;
      v456 = v454;

      v457 = (v452 + 23) & 0xFFFFFFFFFFFFFFF8;
      v458 = (v453 + 23) & 0xFFFFFFFFFFFFFFF8;
      v459 = *(void **)v458;
      v460 = *(void **)v457;
      *(_QWORD *)v457 = *(_QWORD *)v458;
      v461 = v459;

      *(_BYTE *)(v457 + 8) = *(_BYTE *)(v458 + 8);
      v462 = (v452 + 39) & 0xFFFFFFFFFFFFFFF8;
      v463 = (v453 + 39) & 0xFFFFFFFFFFFFFFF8;
      v464 = *(_QWORD *)v463;
      *(_BYTE *)(v462 + 8) = *(_BYTE *)(v463 + 8);
      *(_QWORD *)v462 = v464;
      v465 = (_QWORD *)((v452 + 55) & 0xFFFFFFFFFFFFFFF8);
      v466 = (_QWORD *)((v453 + 55) & 0xFFFFFFFFFFFFF8);
      *v465 = *v466;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      v467 = (void **)(((unint64_t)v465 + 15) & 0xFFFFFFFFFFFFFFF8);
      v468 = *(void **)(((unint64_t)v466 + 15) & 0xFFFFFFFFFFFFF8);
      v469 = *v467;
      *v467 = v468;
      v470 = v468;

      if (v29 > 3)
        goto LABEL_768;
      v471 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v434 = 2;
      if (v471 > 0xFFF5)
        v434 = 4;
      if (v471 <= 0xF5)
LABEL_768:
        v434 = 1;
      v160 = v500;
LABEL_770:
      v472 = ((((((v434 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_QWORD *)((v37 + v472) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v501 + v472) & 0xFFFFFFFFFFFFF8);
      return v160;
    }
    if (v29 > 3)
      goto LABEL_236;
    v131 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v131 > 0xFFF5)
    {
      v130 = *(_DWORD *)(v37 + v29);
    }
    else
    {
      if (v131 <= 0xF5)
      {
LABEL_236:
        v130 = *(unsigned __int8 *)(v37 + v29);
        goto LABEL_241;
      }
      v130 = *(unsigned __int16 *)(v37 + v29);
    }
LABEL_241:
    if (v130 >= 0xA)
    {
      if (v29 <= 3)
        v132 = v29;
      else
        v132 = 4;
      __asm { BR              X12 }
    }
    v489 = ~v16;
    v480 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
    v481 = v17;
    __n = v22 + 1;
    v487 = v28;
    v488 = v25;
    v486 = *(_DWORD *)(v12 + 84);
    v485 = v44;
    v484 = *(_DWORD *)(v15 + 84);
    v483 = v47;
    switch(v130)
    {
      case 0u:
        v474 = v21 + 1;
        v222 = v22 + 1;
        v479 = v16 + 8;
        switch(*(_BYTE *)(v37 + v22))
        {
          case 0:
          case 7:
            goto LABEL_511;
          case 1:
          case 8:
          case 9:
            goto LABEL_509;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_508;
          default:
            if (v22 <= 3)
              v133 = v22;
            else
              v133 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 1u:
        v474 = v21 + 1;
        v222 = v22 + 1;
        v479 = v16 + 8;
        switch(*(_BYTE *)(v37 + v22))
        {
          case 0:
          case 7:
            goto LABEL_511;
          case 1:
          case 8:
          case 9:
LABEL_509:

            goto LABEL_510;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
LABEL_508:
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v491);
LABEL_510:
            v222 = v22 + 1;
LABEL_511:
            v294 = ((v37 | 7) + v222) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v294 + 8) >= 0xFFFFFFFFuLL)
            {
              swift_bridgeObjectRelease();
              sub_1B41E9C70(*(void **)(v294 + 16), *(_QWORD *)(v294 + 24), *(_QWORD *)(v294 + 32), *(_QWORD *)(v294 + 40), *(_QWORD *)(v294 + 48), *(_QWORD *)(v294 + 56), *(_BYTE *)(v294 + 64));
              v295 = *(unsigned __int8 *)(v294 + 120);
              if (v295 != 255)
                sub_1B41E9C98(*(void **)(v294 + 72), *(_QWORD *)(v294 + 80), *(_QWORD *)(v294 + 88), *(_QWORD *)(v294 + 96), *(_QWORD *)(v294 + 104), *(_QWORD *)(v294 + 112), v295 & 1);
            }

            v28 = v487;
            v25 = v488;
            v26 = v479;
            v38 = v486;
            v39 = v474;
            v44 = v485;
            v45 = v484;
            v47 = v483;
            break;
          default:
            if (v22 <= 3)
              v134 = v22;
            else
              v134 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_515;
      case 2u:
        v477 = v16 + 8;
        v135 = v21 + 1;

        v47 = v483;
        v45 = v484;
        v44 = v485;
        v39 = v21 + 1;
        v38 = v486;
        v26 = v16 + 8;
        v28 = v487;
        v25 = v488;
        v136 = (id *)((v488 + v37) & v485);
        switch(*((_BYTE *)v136 + v22))
        {
          case 1:
          case 8:
          case 9:
            goto LABEL_419;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_260;
          default:
            goto LABEL_515;
        }
        goto LABEL_515;
      case 3u:
        v477 = v16 + 8;
        v135 = v21 + 1;

        v47 = v483;
        v45 = v484;
        v44 = v485;
        v39 = v21 + 1;
        v38 = v486;
        v26 = v16 + 8;
        v28 = v487;
        v25 = v488;
        v136 = (id *)((v488 + v37) & v485);
        switch(*((_BYTE *)v136 + v22))
        {
          case 1:
          case 8:
          case 9:
            goto LABEL_419;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_260;
          default:
            goto LABEL_515;
        }
        goto LABEL_515;
      case 4u:
        v477 = v16 + 8;
        v135 = v21 + 1;

        v47 = v483;
        v45 = v484;
        v44 = v485;
        v39 = v21 + 1;
        v38 = v486;
        v26 = v16 + 8;
        v28 = v487;
        v25 = v488;
        v136 = (id *)((v488 + v37) & v485);
        switch(*((_BYTE *)v136 + v22))
        {
          case 1:
          case 8:
          case 9:
LABEL_419:

            goto LABEL_420;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
LABEL_260:
            (*(void (**)(void))(v12 + 8))();
LABEL_420:
            v47 = v483;
            v45 = v484;
            v44 = v485;
            v39 = v135;
            goto LABEL_426;
          default:
            goto LABEL_515;
        }
      case 5u:
        v137 = *(id *)(v37 + 16);
        goto LABEL_268;
      case 6u:
        v137 = *(id *)v37;
LABEL_268:
        v143 = v16 + 8;
        v476 = v37;
        v144 = v21 + 1;

        goto LABEL_418;
      case 7u:
        if ((v45 & 0x80000000) != 0)
        {
          v139 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v37 + v16 + 8) & v489, v45, v490);
          v47 = v483;
          v45 = v484;
          v44 = v485;
          v39 = v21 + 1;
          v38 = v486;
          v26 = v16 + 8;
          v28 = v487;
          v25 = v488;
        }
        else
        {
          v138 = *(id *)v37;
          if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
            LODWORD(v138) = -1;
          v139 = (_DWORD)v138 + 1;
        }
        if (!v139)
        {
          v478 = v26;
          v224 = v39;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v37 + v16 + 8) & v489, v490);
          v47 = v483;
          v45 = v484;
          v44 = v485;
          v39 = v224;
          v38 = v486;
          v26 = v478;
          v28 = v487;
          v25 = v488;
        }
        v225 = ((v37 | 7) + v480) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v225 + 8) < 0xFFFFFFFFuLL)
          goto LABEL_515;
        v477 = v26;
        v475 = v39;
        swift_bridgeObjectRelease();

        v47 = v483;
        v45 = v484;
        v44 = v485;
        v39 = v475;
LABEL_426:
        v38 = v486;
        v26 = v477;
        goto LABEL_427;
      case 8u:
        v476 = v37;
        if (v38 < 0xFD)
        {
          v223 = *(unsigned __int8 *)(v37 + v21);
          if (v223 < 3)
            goto LABEL_416;
          v145 = v223 - 2;
        }
        else
        {
          v145 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
          v47 = v483;
          v45 = v484;
          v44 = v485;
          v39 = v21 + 1;
          v38 = v486;
          v26 = v16 + 8;
          v28 = v487;
          v25 = v488;
        }
        if (v145)
          goto LABEL_515;
LABEL_416:
        v141 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v140 = v37;
        v142 = v491;
        v143 = v26;
LABEL_417:
        v144 = v39;
        v141(v140, v142);
LABEL_418:
        v47 = v483;
        v45 = v484;
        v44 = v485;
        v39 = v144;
        v37 = v476;
        v38 = v486;
        v26 = v143;
LABEL_427:
        v28 = v487;
        v25 = v488;
LABEL_515:
        if (v29 > 3)
          goto LABEL_516;
        v297 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v297 > 0xFFF5)
        {
          v296 = *(_DWORD *)(v501 + v29);
        }
        else if (v297 <= 0xF5)
        {
LABEL_516:
          v296 = *(unsigned __int8 *)(v501 + v29);
        }
        else
        {
          v296 = *(unsigned __int16 *)(v501 + v29);
        }
        if (v296 >= 0xA)
        {
          if (v29 <= 3)
            v298 = v29;
          else
            v298 = 4;
          __asm { BR              X12 }
        }
        return result;
      case 9u:
        v140 = (v28 + v37) & v47;
        v141 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
        v142 = v481;
        v143 = v16 + 8;
        v476 = v37;
        goto LABEL_417;
      default:
        goto LABEL_515;
    }
    switch(v296)
    {
      case 0u:
        switch(*(_BYTE *)(v501 + v22))
        {
          case 0:
            *(_BYTE *)v37 = *(_BYTE *)v501;
            *(_BYTE *)(v37 + v22) = 0;
            goto LABEL_619;
          case 1:
            v342 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v343 = 1;
            goto LABEL_618;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 2;
            goto LABEL_619;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 3;
            goto LABEL_619;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 4;
            goto LABEL_619;
          case 5:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 5;
            goto LABEL_619;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 6;
            goto LABEL_619;
          case 7:
            v344 = *(_OWORD *)v501;
            *(_OWORD *)(v37 + 9) = *(_OWORD *)(v501 + 9);
            *(_OWORD *)v37 = v344;
            *(_BYTE *)(v37 + v22) = 7;
            goto LABEL_619;
          case 8:
            v342 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v343 = 8;
            goto LABEL_618;
          case 9:
            v342 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v343 = 9;
LABEL_618:
            *(_BYTE *)(v37 + v22) = v343;
            v348 = v342;
LABEL_619:
            v349 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
            v350 = (v22 + v501 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v350 + 8) < 0xFFFFFFFFuLL)
            {
              v361 = *(_OWORD *)v350;
              v362 = *(_OWORD *)(v350 + 16);
              v363 = *(_OWORD *)(v350 + 48);
              *(_OWORD *)(v349 + 32) = *(_OWORD *)(v350 + 32);
              *(_OWORD *)(v349 + 48) = v363;
              *(_OWORD *)v349 = v361;
              *(_OWORD *)(v349 + 16) = v362;
              v364 = *(_OWORD *)(v350 + 64);
              v365 = *(_OWORD *)(v350 + 80);
              v366 = *(_OWORD *)(v350 + 96);
              *(_OWORD *)(v349 + 106) = *(_OWORD *)(v350 + 106);
              *(_OWORD *)(v349 + 80) = v365;
              *(_OWORD *)(v349 + 96) = v366;
              *(_OWORD *)(v349 + 64) = v364;
            }
            else
            {
              *(_QWORD *)v349 = *(_QWORD *)v350;
              *(_QWORD *)(v349 + 8) = *(_QWORD *)(v350 + 8);
              v351 = *(void **)(v350 + 16);
              v352 = *(_QWORD *)(v350 + 24);
              v353 = *(_QWORD *)(v350 + 32);
              v354 = *(_QWORD *)(v350 + 40);
              v356 = *(_QWORD *)(v350 + 48);
              v355 = *(_QWORD *)(v350 + 56);
              v496 = *(_BYTE *)(v350 + 64);
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              sub_1B41E9D64(v351, v352, v353, v354, v356, v355, v496);
              *(_QWORD *)(v349 + 16) = v351;
              *(_QWORD *)(v349 + 24) = v352;
              *(_QWORD *)(v349 + 32) = v353;
              *(_QWORD *)(v349 + 40) = v354;
              *(_QWORD *)(v349 + 48) = v356;
              *(_QWORD *)(v349 + 56) = v355;
              *(_BYTE *)(v349 + 64) = v496;
              *(_BYTE *)(v349 + 65) = *(_BYTE *)(v350 + 65);
              *(_BYTE *)(v349 + 66) = *(_BYTE *)(v350 + 66);
              *(_BYTE *)(v349 + 67) = *(_BYTE *)(v350 + 67);
              *(_BYTE *)(v349 + 68) = *(_BYTE *)(v350 + 68);
              v357 = *(unsigned __int8 *)(v350 + 120);
              if (v357 == 255)
              {
                v358 = *(_OWORD *)(v350 + 72);
                v359 = *(_OWORD *)(v350 + 88);
                v360 = *(_OWORD *)(v350 + 104);
                *(_BYTE *)(v349 + 120) = *(_BYTE *)(v350 + 120);
                *(_OWORD *)(v349 + 88) = v359;
                *(_OWORD *)(v349 + 104) = v360;
                *(_OWORD *)(v349 + 72) = v358;
              }
              else
              {
                v497 = v357 & 1;
                v367 = *(void **)(v350 + 72);
                v368 = *(_QWORD *)(v350 + 80);
                v369 = *(_QWORD *)(v350 + 88);
                v370 = *(_QWORD *)(v350 + 96);
                v371 = *(_QWORD *)(v350 + 104);
                v372 = *(_QWORD *)(v350 + 112);
                sub_1B41DF628(v367, v368, v369, v370, v371, v372, v357 & 1);
                *(_QWORD *)(v349 + 72) = v367;
                *(_QWORD *)(v349 + 80) = v368;
                *(_QWORD *)(v349 + 88) = v369;
                *(_QWORD *)(v349 + 96) = v370;
                *(_QWORD *)(v349 + 104) = v371;
                *(_QWORD *)(v349 + 112) = v372;
                *(_BYTE *)(v349 + 120) = v497;
              }
              *(_BYTE *)(v349 + 121) = *(_BYTE *)(v350 + 121);
            }
            *(_BYTE *)(v349 + 122) = *(_BYTE *)(v350 + 122);
            *(_BYTE *)(v349 + 123) = *(_BYTE *)(v350 + 123);
            *(_BYTE *)(v349 + 124) = *(_BYTE *)(v350 + 124);
            *(_BYTE *)(v349 + 125) = *(_BYTE *)(v350 + 125);
            *(_BYTE *)(v349 + 126) = *(_BYTE *)(v350 + 126);
            v373 = *(void **)((v350 + 134) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)((v349 + 134) & 0xFFFFFFFFFFFFF8) = v373;
            v374 = v373;
            if (v29 > 3)
              goto LABEL_626;
            v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
            if (v326 > 0xFFF5)
            {
              *(_DWORD *)(v37 + v29) = 0;
            }
            else
            {
              if (v326 <= 0xF5)
              {
LABEL_626:
                *(_BYTE *)(v37 + v29) = 0;
                goto LABEL_752;
              }
              *(_WORD *)(v37 + v29) = 0;
            }
            break;
          default:
            if (v22 <= 3)
              v299 = v22;
            else
              v299 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_762;
      case 1u:
        switch(*(_BYTE *)(v501 + v22))
        {
          case 0:
            *(_BYTE *)v37 = *(_BYTE *)v501;
            *(_BYTE *)(v37 + v22) = 0;
            goto LABEL_634;
          case 1:
            v345 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v346 = 1;
            goto LABEL_633;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 2;
            goto LABEL_634;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 3;
            goto LABEL_634;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 4;
            goto LABEL_634;
          case 5:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 5;
            goto LABEL_634;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
            *(_BYTE *)(v37 + v22) = 6;
            goto LABEL_634;
          case 7:
            v347 = *(_OWORD *)v501;
            *(_OWORD *)(v37 + 9) = *(_OWORD *)(v501 + 9);
            *(_OWORD *)v37 = v347;
            *(_BYTE *)(v37 + v22) = 7;
            goto LABEL_634;
          case 8:
            v345 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v346 = 8;
            goto LABEL_633;
          case 9:
            v345 = *(void **)v501;
            *(_QWORD *)v37 = *(_QWORD *)v501;
            v346 = 9;
LABEL_633:
            *(_BYTE *)(v37 + v22) = v346;
            v375 = v345;
LABEL_634:
            v376 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
            v377 = (v22 + v501 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v377 + 8) < 0xFFFFFFFFuLL)
            {
              v388 = *(_OWORD *)v377;
              v389 = *(_OWORD *)(v377 + 16);
              v390 = *(_OWORD *)(v377 + 48);
              *(_OWORD *)(v376 + 32) = *(_OWORD *)(v377 + 32);
              *(_OWORD *)(v376 + 48) = v390;
              *(_OWORD *)v376 = v388;
              *(_OWORD *)(v376 + 16) = v389;
              v391 = *(_OWORD *)(v377 + 64);
              v392 = *(_OWORD *)(v377 + 80);
              v393 = *(_OWORD *)(v377 + 96);
              *(_OWORD *)(v376 + 106) = *(_OWORD *)(v377 + 106);
              *(_OWORD *)(v376 + 80) = v392;
              *(_OWORD *)(v376 + 96) = v393;
              *(_OWORD *)(v376 + 64) = v391;
            }
            else
            {
              *(_QWORD *)v376 = *(_QWORD *)v377;
              *(_QWORD *)(v376 + 8) = *(_QWORD *)(v377 + 8);
              v378 = *(void **)(v377 + 16);
              v379 = *(_QWORD *)(v377 + 24);
              v380 = *(_QWORD *)(v377 + 32);
              v381 = *(_QWORD *)(v377 + 40);
              v383 = *(_QWORD *)(v377 + 48);
              v382 = *(_QWORD *)(v377 + 56);
              v498 = *(_BYTE *)(v377 + 64);
              _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
              sub_1B41E9D64(v378, v379, v380, v381, v383, v382, v498);
              *(_QWORD *)(v376 + 16) = v378;
              *(_QWORD *)(v376 + 24) = v379;
              *(_QWORD *)(v376 + 32) = v380;
              *(_QWORD *)(v376 + 40) = v381;
              *(_QWORD *)(v376 + 48) = v383;
              *(_QWORD *)(v376 + 56) = v382;
              *(_BYTE *)(v376 + 64) = v498;
              *(_BYTE *)(v376 + 65) = *(_BYTE *)(v377 + 65);
              *(_BYTE *)(v376 + 66) = *(_BYTE *)(v377 + 66);
              *(_BYTE *)(v376 + 67) = *(_BYTE *)(v377 + 67);
              *(_BYTE *)(v376 + 68) = *(_BYTE *)(v377 + 68);
              v384 = *(unsigned __int8 *)(v377 + 120);
              if (v384 == 255)
              {
                v385 = *(_OWORD *)(v377 + 72);
                v386 = *(_OWORD *)(v377 + 88);
                v387 = *(_OWORD *)(v377 + 104);
                *(_BYTE *)(v376 + 120) = *(_BYTE *)(v377 + 120);
                *(_OWORD *)(v376 + 88) = v386;
                *(_OWORD *)(v376 + 104) = v387;
                *(_OWORD *)(v376 + 72) = v385;
              }
              else
              {
                v499 = v384 & 1;
                v394 = *(void **)(v377 + 72);
                v395 = *(_QWORD *)(v377 + 80);
                v396 = *(_QWORD *)(v377 + 88);
                v397 = *(_QWORD *)(v377 + 96);
                v398 = *(_QWORD *)(v377 + 104);
                v399 = *(_QWORD *)(v377 + 112);
                sub_1B41DF628(v394, v395, v396, v397, v398, v399, v384 & 1);
                *(_QWORD *)(v376 + 72) = v394;
                *(_QWORD *)(v376 + 80) = v395;
                *(_QWORD *)(v376 + 88) = v396;
                *(_QWORD *)(v376 + 96) = v397;
                *(_QWORD *)(v376 + 104) = v398;
                *(_QWORD *)(v376 + 112) = v399;
                *(_BYTE *)(v376 + 120) = v499;
              }
              *(_BYTE *)(v376 + 121) = *(_BYTE *)(v377 + 121);
            }
            *(_BYTE *)(v376 + 122) = *(_BYTE *)(v377 + 122);
            *(_BYTE *)(v376 + 123) = *(_BYTE *)(v377 + 123);
            *(_BYTE *)(v376 + 124) = *(_BYTE *)(v377 + 124);
            *(_BYTE *)(v376 + 125) = *(_BYTE *)(v377 + 125);
            *(_BYTE *)(v376 + 126) = *(_BYTE *)(v377 + 126);
            v400 = *(void **)((v377 + 134) & 0xFFFFFFFFFFFFF8);
            *(_QWORD *)((v376 + 134) & 0xFFFFFFFFFFFFF8) = v400;
            v401 = v400;
            if (v29 > 3)
              goto LABEL_641;
            v341 = 1;
            v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
            if (v326 > 0xFFF5)
              goto LABEL_761;
            if (v326 <= 0xF5)
            {
LABEL_641:
              v318 = 1;
              goto LABEL_751;
            }
            *(_WORD *)(v37 + v29) = 1;
            break;
          default:
            if (v22 <= 3)
              v300 = v22;
            else
              v300 = 4;
            __asm { BR              X12 }
            return result;
        }
        goto LABEL_762;
      case 2u:
        v301 = *(void **)v501;
        *(_QWORD *)v37 = *(_QWORD *)v501;
        v302 = (char *)((v25 + v37) & v44);
        v303 = (unsigned __int8 *)((v25 + v501) & v44);
        v304 = v303[v22];
        v305 = v301;
        switch(v304)
        {
          case 0:
            *v302 = *v303;
            v302[v22] = 0;
            break;
          case 1:
            v435 = *(void **)v303;
            *(_QWORD *)v302 = *(_QWORD *)v303;
            v436 = 1;
            goto LABEL_716;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v302, v303, v491);
            v302[v22] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v302, v303, v491);
            v302[v22] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v302, v303, v491);
            v302[v22] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v302, v303, v491);
            v302[v22] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v302, v303, v491);
            v302[v22] = 6;
            break;
          case 7:
            v437 = *(_OWORD *)v303;
            *(_OWORD *)(v302 + 9) = *(_OWORD *)(v303 + 9);
            *(_OWORD *)v302 = v437;
            v302[v22] = 7;
            break;
          case 8:
            v435 = *(void **)v303;
            *(_QWORD *)v302 = *(_QWORD *)v303;
            v436 = 8;
            goto LABEL_716;
          case 9:
            v435 = *(void **)v303;
            *(_QWORD *)v302 = *(_QWORD *)v303;
            v436 = 9;
LABEL_716:
            v302[v22] = v436;
            v438 = v435;
            break;
          default:
            memcpy(v302, v303, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_718;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 2;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_718:
          v318 = 2;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 2;
        goto LABEL_762;
      case 3u:
        v306 = *(void **)v501;
        *(_QWORD *)v37 = *(_QWORD *)v501;
        v307 = (char *)((v25 + v37) & v44);
        v308 = (unsigned __int8 *)((v25 + v501) & v44);
        v309 = v308[v22];
        v310 = v306;
        switch(v309)
        {
          case 0:
            *v307 = *v308;
            v307[v22] = 0;
            break;
          case 1:
            v439 = *(void **)v308;
            *(_QWORD *)v307 = *(_QWORD *)v308;
            v440 = 1;
            goto LABEL_732;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v307, v308, v491);
            v307[v22] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v307, v308, v491);
            v307[v22] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v307, v308, v491);
            v307[v22] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v307, v308, v491);
            v307[v22] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v307, v308, v491);
            v307[v22] = 6;
            break;
          case 7:
            v441 = *(_OWORD *)v308;
            *(_OWORD *)(v307 + 9) = *(_OWORD *)(v308 + 9);
            *(_OWORD *)v307 = v441;
            v307[v22] = 7;
            break;
          case 8:
            v439 = *(void **)v308;
            *(_QWORD *)v307 = *(_QWORD *)v308;
            v440 = 8;
            goto LABEL_732;
          case 9:
            v439 = *(void **)v308;
            *(_QWORD *)v307 = *(_QWORD *)v308;
            v440 = 9;
LABEL_732:
            v307[v22] = v440;
            v442 = v439;
            break;
          default:
            memcpy(v307, v308, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_734;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 3;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_734:
          v318 = 3;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 3;
        goto LABEL_762;
      case 4u:
        v311 = *(void **)v501;
        *(_QWORD *)v37 = *(_QWORD *)v501;
        v312 = (char *)((v25 + v37) & v44);
        v313 = (unsigned __int8 *)((v25 + v501) & v44);
        v314 = v313[v22];
        v315 = v311;
        switch(v314)
        {
          case 0:
            *v312 = *v313;
            v312[v22] = 0;
            break;
          case 1:
            v443 = *(void **)v313;
            *(_QWORD *)v312 = *(_QWORD *)v313;
            v444 = 1;
            goto LABEL_748;
          case 2:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v312, v313, v491);
            v312[v22] = 2;
            break;
          case 3:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v312, v313, v491);
            v312[v22] = 3;
            break;
          case 4:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v312, v313, v491);
            v312[v22] = 4;
            break;
          case 5:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v312, v313, v491);
            v312[v22] = 5;
            break;
          case 6:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 16))(v312, v313, v491);
            v312[v22] = 6;
            break;
          case 7:
            v445 = *(_OWORD *)v313;
            *(_OWORD *)(v312 + 9) = *(_OWORD *)(v313 + 9);
            *(_OWORD *)v312 = v445;
            v312[v22] = 7;
            break;
          case 8:
            v443 = *(void **)v313;
            *(_QWORD *)v312 = *(_QWORD *)v313;
            v444 = 8;
            goto LABEL_748;
          case 9:
            v443 = *(void **)v313;
            *(_QWORD *)v312 = *(_QWORD *)v313;
            v444 = 9;
LABEL_748:
            v312[v22] = v444;
            v446 = v443;
            break;
          default:
            memcpy(v312, v313, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_750;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 4;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_750:
          v318 = 4;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 4;
        goto LABEL_762;
      case 5u:
        *(_QWORD *)v37 = *(_QWORD *)v501;
        *(_BYTE *)(v37 + 8) = *(_BYTE *)(v501 + 8);
        *(_BYTE *)(v37 + 9) = *(_BYTE *)(v501 + 9);
        *(_BYTE *)(v37 + 10) = *(_BYTE *)(v501 + 10);
        v316 = *(void **)(v501 + 16);
        *(_QWORD *)(v37 + 16) = v316;
        v317 = v316;
        if (v29 > 3)
          goto LABEL_542;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 5;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_542:
          v318 = 5;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 5;
        goto LABEL_762;
      case 6u:
        v324 = *(void **)v501;
        *(_QWORD *)v37 = *(_QWORD *)v501;
        v325 = v324;
        if (v29 > 3)
          goto LABEL_558;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 6;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_558:
          v318 = 6;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 6;
        goto LABEL_762;
      case 7u:
        if ((v45 & 0x80000000) != 0)
        {
          v319 = v26;
          v321 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v26 + v501) & v489, v45, v490);
        }
        else
        {
          v319 = v26;
          v320 = *(_QWORD *)v501;
          if (*(_QWORD *)v501 >= 0xFFFFFFFFuLL)
            LODWORD(v320) = -1;
          v321 = v320 + 1;
        }
        if (v321)
        {
          v333 = v480;
          memcpy((void *)v37, (const void *)v501, v480);
        }
        else
        {
          *(_QWORD *)v37 = *(_QWORD *)v501;
          v334 = (v319 + v501) & v489;
          v335 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v335((v37 + v16 + 8) & v489, v334, v490);
          v333 = v480;
        }
        v336 = ((v37 | 7) + v333) & 0xFFFFFFFFFFFFFFF8;
        v337 = ((v501 | 7) + v333) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v337 + 8) < 0xFFFFFFFFuLL)
        {
          v340 = *(_OWORD *)v337;
          *(_QWORD *)(v336 + 16) = *(_QWORD *)(v337 + 16);
          *(_OWORD *)v336 = v340;
        }
        else
        {
          *(_QWORD *)v336 = *(_QWORD *)v337;
          *(_QWORD *)(v336 + 8) = *(_QWORD *)(v337 + 8);
          v338 = *(void **)(v337 + 16);
          *(_QWORD *)(v336 + 16) = v338;
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          v339 = v338;
        }
        if (v29 > 3)
          goto LABEL_587;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 7;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_587:
          v318 = 7;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 7;
        goto LABEL_762;
      case 8u:
        if (v38 < 0xFD)
        {
          v329 = *(unsigned __int8 *)(v501 + v21);
          if (v329 < 3)
            goto LABEL_574;
          v328 = v329 - 2;
        }
        else
        {
          v327 = v39;
          v328 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v501);
          v39 = v327;
        }
        if (v328)
        {
          v330 = v39;
          memcpy((void *)v37, (const void *)v501, v39);
          v331 = v330;
          goto LABEL_575;
        }
LABEL_574:
        v332 = v39;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v37, v501, v491);
        v331 = v332;
        *(_BYTE *)(v37 + v21) = *(_BYTE *)(v501 + v21);
LABEL_575:
        *(_QWORD *)(((v37 | 7) + v331) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v501 | 7) + v331) & 0xFFFFFFFFFFFFF8);
        if (v29 > 3)
          goto LABEL_578;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 8;
          goto LABEL_761;
        }
        if (v326 <= 0xF5)
        {
LABEL_578:
          v318 = 8;
          goto LABEL_751;
        }
        *(_WORD *)(v37 + v29) = 8;
        goto LABEL_762;
      case 9u:
        *(_BYTE *)v37 = *(_BYTE *)v501;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))((v28 + v37) & v47, (v28 + v501) & v47, v481);
        if (v29 > 3)
          goto LABEL_548;
        v326 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v326 > 0xFFF5)
        {
          v341 = 9;
LABEL_761:
          *(_DWORD *)(v37 + v29) = v341;
          goto LABEL_762;
        }
        if (v326 > 0xF5)
        {
          *(_WORD *)(v37 + v29) = 9;
LABEL_762:
          v416 = v326 > 0xFFF5;
          v448 = 2;
          if (v416)
            v448 = 4;
          goto LABEL_764;
        }
LABEL_548:
        v318 = 9;
LABEL_751:
        *(_BYTE *)(v37 + v29) = v318;
        break;
      default:
        if (v29 > 3)
          goto LABEL_553;
        v322 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        v323 = 2;
        if (v322 > 0xFFF5)
          v323 = 4;
        if (v322 <= 0xF5)
LABEL_553:
          v323 = 1;
        memcpy((void *)v37, (const void *)v501, v323 + v29);
        goto LABEL_752;
    }
    goto LABEL_752;
  }
LABEL_121:
  if (v75 != 0x7FFFFFFF)
    goto LABEL_122;
LABEL_119:
  if (v29 > 3)
  {
    v81 = 11;
LABEL_133:
    v86 = 8;
    goto LABEL_134;
  }
  v85 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v85 > 0xFFF5)
    goto LABEL_137;
  v81 = v85 + 10;
  if (v85 <= 0xF5)
    goto LABEL_133;
  v86 = 16;
LABEL_134:
  v87 = (1 << v86) - v81;
  if ((v87 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_141;
    goto LABEL_138;
  }
LABEL_137:
  v87 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_141:
    v89 = 1;
    goto LABEL_142;
  }
LABEL_138:
  v88 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v89 = 2;
  if (v88 > 0xFFF5)
    v89 = 4;
  if (v88 <= 0xF5)
    goto LABEL_141;
LABEL_142:
  v90 = v75 - v87;
  if (v75 <= v87)
    goto LABEL_222;
  v91 = v89 + v29;
  v92 = 8 * (v89 + v29);
  if (v91 > 3)
  {
LABEL_144:
    v93 = *(unsigned __int8 *)(v501 + v91);
    if (!*(_BYTE *)(v501 + v91))
      goto LABEL_222;
    goto LABEL_154;
  }
  v94 = ((v90 + ~(-1 << v92)) >> v92) + 1;
  if (HIWORD(v94))
  {
    v93 = *(_DWORD *)(v501 + v91);
    if (!v93)
      goto LABEL_222;
LABEL_154:
    v95 = (v93 - 1) << v92;
    if (v91 > 3)
      v95 = 0;
    if ((_DWORD)v91)
    {
      if (v91 > 3)
        LODWORD(v91) = 4;
      __asm { BR              X12 }
    }
    if (v87 + v95 != -1)
      goto LABEL_338;
    goto LABEL_234;
  }
  if (v94 > 0xFF)
  {
    v93 = *(unsigned __int16 *)(v501 + v91);
    if (!*(_WORD *)(v501 + v91))
      goto LABEL_222;
    goto LABEL_154;
  }
  if (v94 >= 2)
    goto LABEL_144;
LABEL_222:
  if (!v87)
    goto LABEL_234;
  if (v29 <= 3)
  {
    v128 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v128 > 0xFFF5)
    {
      v123 = *(_DWORD *)(v501 + v29);
      v124 = ~v123;
      goto LABEL_232;
    }
    v126 = v128 + 10;
    if (v128 > 0xF5)
    {
      v188 = *(unsigned __int16 *)(v501 + v29);
      v123 = v188 | 0xFFFF0000;
      v124 = v188 ^ 0xFFFF;
      v125 = 16;
    }
    else
    {
      v129 = *(unsigned __int8 *)(v501 + v29);
      v123 = v129 | 0xFFFFFF00;
      v124 = v129 ^ 0xFF;
      v125 = 8;
    }
  }
  else
  {
    v122 = *(unsigned __int8 *)(v501 + v29);
    v123 = v122 | 0xFFFFFF00;
    v124 = v122 ^ 0xFF;
    v125 = 8;
    v126 = 11;
  }
  v127 = (1 << v125) - v126;
  if ((v127 & 0x80000000) == 0)
  {
    if (v127 <= v124)
      goto LABEL_234;
    goto LABEL_233;
  }
LABEL_232:
  if (v124 >= 0x7FFFFFFF)
    goto LABEL_234;
LABEL_233:
  if (!v123)
    goto LABEL_234;
LABEL_338:
  if (v29 > 3)
    goto LABEL_341;
  v190 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v190 <= 0xFFF5)
  {
    if (v190 > 0xF5)
    {
      v191 = *(unsigned __int16 *)(v37 + v29);
      if (v191 < 0xA)
        goto LABEL_350;
      goto LABEL_346;
    }
LABEL_341:
    v191 = *(unsigned __int8 *)(v37 + v29);
    if (v191 < 0xA)
      goto LABEL_350;
LABEL_346:
    if (v29 <= 3)
      v192 = v29;
    else
      v192 = 4;
    __asm { BR              X12 }
  }
  v191 = *(_DWORD *)(v37 + v29);
  if (v191 >= 0xA)
    goto LABEL_346;
LABEL_350:
  switch(v191)
  {
    case 0u:
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_447;
        case 1:
        case 8:
        case 9:
          goto LABEL_445;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_444;
        default:
          if (v22 <= 3)
            v193 = v22;
          else
            v193 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1u:
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_447;
        case 1:
        case 8:
        case 9:
LABEL_445:
          v227 = v22 + 1;

          goto LABEL_446;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_444:
          v227 = v22 + 1;
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v491);
LABEL_446:
          v23 = v227;
LABEL_447:
          v228 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v228 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            sub_1B41E9C70(*(void **)(v228 + 16), *(_QWORD *)(v228 + 24), *(_QWORD *)(v228 + 32), *(_QWORD *)(v228 + 40), *(_QWORD *)(v228 + 48), *(_QWORD *)(v228 + 56), *(_BYTE *)(v228 + 64));
            v229 = *(unsigned __int8 *)(v228 + 120);
            if (v229 != 255)
              sub_1B41E9C98(*(void **)(v228 + 72), *(_QWORD *)(v228 + 80), *(_QWORD *)(v228 + 88), *(_QWORD *)(v228 + 96), *(_QWORD *)(v228 + 104), *(_QWORD *)(v228 + 112), v229 & 1);
          }
          v202 = *(id *)((v228 + 134) & 0xFFFFFFFFFFFFF8);
          break;
        default:
          if (v22 <= 3)
            v194 = v22;
          else
            v194 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_451;
    case 2u:
      v195 = v25;
      v196 = v44;

      v197 = (void **)((v195 + v37) & v196);
      switch(*((_BYTE *)v197 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_396;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_362;
        default:
          goto LABEL_452;
      }
      goto LABEL_452;
    case 3u:
      v198 = v25;
      v199 = v44;

      v197 = (void **)((v198 + v37) & v199);
      switch(*((_BYTE *)v197 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_396;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_362;
        default:
          goto LABEL_452;
      }
      goto LABEL_452;
    case 4u:
      v200 = v25;
      v201 = v44;

      v197 = (void **)((v200 + v37) & v201);
      switch(*((_BYTE *)v197 + v22))
      {
        case 1:
        case 8:
        case 9:
LABEL_396:
          v202 = *v197;
          goto LABEL_451;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_362:
          (*(void (**)(void **, uint64_t))(v12 + 8))(v197, v491);
          break;
        default:
          goto LABEL_452;
      }
      goto LABEL_452;
    case 5u:
      v202 = *(id *)(v37 + 16);
      goto LABEL_451;
    case 6u:
      v202 = *(id *)v37;
      goto LABEL_451;
    case 7u:
      v203 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
      if ((v45 & 0x80000000) != 0)
      {
        v205 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v37 + v16 + 8) & v46, *(unsigned int *)(v15 + 84), v490);
      }
      else
      {
        v204 = *(id *)v37;
        if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
          LODWORD(v204) = -1;
        v205 = (_DWORD)v204 + 1;
      }
      if (!v205)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v37 + v16 + 8) & v46, v490);
      }
      v213 = ((v37 | 7) + v203) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v213 + 8) < 0xFFFFFFFFuLL)
        goto LABEL_452;
      swift_bridgeObjectRelease();
      v202 = *(id *)(v213 + 16);
LABEL_451:

      goto LABEL_452;
    case 8u:
      if (v38 < 0xFD)
      {
        v209 = *(unsigned __int8 *)(v37 + v21);
        if (v209 < 3)
          goto LABEL_387;
        v206 = v209 - 2;
      }
      else
      {
        v206 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
      }
      if (v206)
        goto LABEL_452;
LABEL_387:
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v491);
LABEL_452:
      if (v29 > 3)
        goto LABEL_456;
      v230 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v231 = 2;
      if (v230 > 0xFFF5)
        v231 = 4;
      if (v230 <= 0xF5)
LABEL_456:
        v231 = 1;
      v160 = v500;
      v232 = (v29 + v37 + v231) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      if (v29 > 3)
        goto LABEL_461;
      v233 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v211 = 2;
      if (v233 > 0xFFF5)
        v211 = 4;
      if (v233 <= 0xF5)
LABEL_461:
        v211 = 1;
      break;
    case 9u:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))((v28 + v37) & v47, v17);
      goto LABEL_452;
    default:
      goto LABEL_452;
  }
LABEL_462:
  memcpy((void *)v37, (const void *)v501, ((((((((v211 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v160;
}

char *sub_1B4305A34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  char *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  size_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  int v45;
  unsigned int v46;
  int v47;
  char v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  int v59;
  unsigned int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  char v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _BYTE *v78;
  _BYTE *v79;
  char *v80;
  _BYTE *v81;
  _BYTE *v82;
  char *v83;
  _BYTE *v84;
  _BYTE *v85;
  __int128 v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  size_t v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  __int128 v101;
  unint64_t v102;
  int v103;
  char v104;
  char v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  void (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  void (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  unsigned int v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char *result;
  void (*v171)(uint64_t);
  uint64_t v172;
  void (*v173)(uint64_t);
  uint64_t v174;
  void (*v175)(uint64_t);
  uint64_t v176;
  void (*v177)(uint64_t);
  uint64_t v178;
  void (*v179)(uint64_t);
  uint64_t v180;
  __int128 v181;
  void (*v182)(uint64_t);
  uint64_t v183;
  void (*v184)(uint64_t);
  uint64_t v185;
  void (*v186)(uint64_t);
  uint64_t v187;
  void (*v188)(uint64_t);
  uint64_t v189;
  void (*v190)(uint64_t);
  uint64_t v191;
  __int128 v192;
  void (*v193)(uint64_t);
  uint64_t v194;
  void (*v195)(uint64_t);
  uint64_t v196;
  void (*v197)(uint64_t);
  uint64_t v198;
  void (*v199)(uint64_t);
  uint64_t v200;
  void (*v201)(uint64_t);
  uint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    v10 = a1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    v10 = a1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  v205 = sub_1B49037E8();
  v12 = *(_QWORD *)(v205 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v204 = sub_1B49046DC();
  v15 = *(_QWORD *)(v204 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = sub_1B4905C78();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  v28 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 > v28)
    v28 = v24;
  if (v28 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v28 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v28 <= 0x18)
    v29 = 24;
  else
    v29 = v28;
  v30 = 8 * v29;
  v31 = v20 + v11;
  v32 = v10;
  v33 = (unint64_t)&v10[v31];
  v34 = (unint64_t)&a2[v31];
  if (v29 > 3)
  {
    v35 = 11;
LABEL_26:
    v36 = 8;
    goto LABEL_27;
  }
  v40 = ((1 << v30) + 1) >> v30;
  if (v40 > 0xFFF5)
  {
    v38 = 0x7FFFFFFF;
    goto LABEL_36;
  }
  v35 = v40 + 10;
  if (v40 <= 0xF5)
    goto LABEL_26;
  v36 = 16;
LABEL_27:
  v37 = (1 << v36) - v35;
  v38 = 0x7FFFFFFF;
  if (v37 <= 0x7FFFFFFF)
    v39 = 0x7FFFFFFF;
  else
    v39 = v37;
  if ((v37 & 0x80000000) == 0)
    v38 = v39;
LABEL_36:
  v41 = v33 & ~v20;
  v42 = v34 & ~v20;
  if (v29 > 3)
  {
    v43 = 11;
    goto LABEL_38;
  }
  v46 = ((1 << v30) + 1) >> v30;
  if (v46 <= 0xFFF5)
  {
    v43 = v46 + 10;
    if (v46 > 0xF5)
    {
      v44 = 16;
LABEL_39:
      v45 = (1 << v44) - v43;
      if ((v45 & 0x80000000) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
LABEL_38:
    v44 = 8;
    goto LABEL_39;
  }
LABEL_44:
  v45 = 0x7FFFFFFF;
LABEL_45:
  if (v45 != v38)
  {
    if (v29 > 3)
      goto LABEL_56;
    v50 = ((1 << v30) + 1) >> v30;
    v51 = 2;
    if (v50 > 0xFFF5)
      v51 = 4;
    if (v50 <= 0xF5)
LABEL_56:
      v51 = 1;
    v52 = *(_QWORD *)(((v29 + v42 + v51) & 0xFFFFFFFFFFFFF8) + 8);
    if (v52 >= 0xFFFFFFFF)
      LODWORD(v52) = -1;
    if ((_DWORD)v52 != -1)
      goto LABEL_179;
    goto LABEL_98;
  }
  if (v29 > 3)
  {
    v47 = 11;
LABEL_48:
    v48 = 8;
    goto LABEL_49;
  }
  v53 = ((1 << v30) + 1) >> v30;
  if (v53 > 0xFFF5)
    goto LABEL_64;
  v47 = v53 + 10;
  if (v53 <= 0xF5)
    goto LABEL_48;
  v48 = 16;
LABEL_49:
  v49 = (1 << v48) - v47;
  if ((v49 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_68;
    goto LABEL_65;
  }
LABEL_64:
  v49 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_68:
    v55 = 1;
    goto LABEL_69;
  }
LABEL_65:
  v54 = ((1 << v30) + 1) >> v30;
  v55 = 2;
  if (v54 > 0xFFF5)
    v55 = 4;
  if (v54 <= 0xF5)
    goto LABEL_68;
LABEL_69:
  v56 = v38 - v49;
  if (v38 <= v49)
    goto LABEL_85;
  v57 = v55 + v29;
  v58 = 8 * (v55 + v29);
  if (v57 > 3)
  {
LABEL_71:
    v59 = *(unsigned __int8 *)(v42 + v57);
    if (!*(_BYTE *)(v42 + v57))
      goto LABEL_85;
    goto LABEL_78;
  }
  v60 = ((v56 + ~(-1 << v58)) >> v58) + 1;
  if (HIWORD(v60))
  {
    v59 = *(_DWORD *)(v42 + v57);
    if (!v59)
      goto LABEL_85;
LABEL_78:
    v61 = (v59 - 1) << v58;
    if (v57 > 3)
      v61 = 0;
    if ((_DWORD)v57)
    {
      if (v57 > 3)
        LODWORD(v57) = 4;
      __asm { BR              X17 }
    }
    if (v49 + v61 != -1)
      goto LABEL_179;
LABEL_98:
    if (v29 > 3)
    {
LABEL_99:
      v71 = *(unsigned __int8 *)(v42 + v29);
      goto LABEL_104;
    }
    v72 = ((1 << v30) + 1) >> v30;
    if (v72 > 0xFFF5)
    {
      v71 = *(_DWORD *)(v42 + v29);
    }
    else
    {
      if (v72 <= 0xF5)
        goto LABEL_99;
      v71 = *(unsigned __int16 *)(v42 + v29);
    }
LABEL_104:
    if (v71 >= 0xA)
    {
      if (v29 <= 3)
        v73 = v29;
      else
        v73 = 4;
      __asm { BR              X17 }
    }
    v74 = ~v14;
    switch(v71)
    {
      case 0u:
        switch(*(_BYTE *)(v42 + v22))
        {
          case 0:
            v104 = 0;
            *(_BYTE *)v41 = *(_BYTE *)v42;
            break;
          case 1:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v104 = 1;
            break;
          case 2:
            v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v107 = v22;
            v108 = v22 + 1;
            v106(v41, v42, v205);
            v23 = v108;
            v22 = v107;
            v104 = 2;
            break;
          case 3:
            v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v110 = v22;
            v111 = v22 + 1;
            v109(v41, v42, v205);
            v23 = v111;
            v22 = v110;
            v104 = 3;
            break;
          case 4:
            v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v113 = v22;
            v114 = v22 + 1;
            v112(v41, v42, v205);
            v23 = v114;
            v22 = v113;
            v104 = 4;
            break;
          case 5:
            v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v116 = v22;
            v117 = v22 + 1;
            v115(v41, v42, v205);
            v23 = v117;
            v22 = v116;
            v104 = 5;
            break;
          case 6:
            v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v133 = v22;
            v134 = v22 + 1;
            v132(v41, v42, v205);
            v23 = v134;
            v22 = v133;
            v104 = 6;
            break;
          case 7:
            v118 = *(_OWORD *)v42;
            *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
            *(_OWORD *)v41 = v118;
            v104 = 7;
            break;
          case 8:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v104 = 8;
            break;
          case 9:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v104 = 9;
            break;
          default:
            if (v22 <= 3)
              v75 = v22;
            else
              v75 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v41 + v22) = v104;
        v135 = ((v41 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v136 = ((v42 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v137 = *(_OWORD *)v136;
        v138 = *(_OWORD *)(v136 + 16);
        v139 = *(_OWORD *)(v136 + 48);
        *(_OWORD *)(v135 + 32) = *(_OWORD *)(v136 + 32);
        *(_OWORD *)(v135 + 48) = v139;
        *(_OWORD *)v135 = v137;
        *(_OWORD *)(v135 + 16) = v138;
        v140 = *(_OWORD *)(v136 + 64);
        v141 = *(_OWORD *)(v136 + 80);
        v142 = *(_OWORD *)(v136 + 96);
        *(_OWORD *)(v135 + 106) = *(_OWORD *)(v136 + 106);
        *(_OWORD *)(v135 + 80) = v141;
        *(_OWORD *)(v135 + 96) = v142;
        *(_OWORD *)(v135 + 64) = v140;
        *(_BYTE *)(v135 + 122) = *(_BYTE *)(v136 + 122);
        *(_BYTE *)(v135 + 123) = *(_BYTE *)(v136 + 123);
        *(_BYTE *)(v135 + 124) = *(_BYTE *)(v136 + 124);
        *(_BYTE *)(v135 + 125) = *(_BYTE *)(v136 + 125);
        *(_BYTE *)(v135 + 126) = *(_BYTE *)(v136 + 126);
        *(_QWORD *)((v135 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v136 + 134) & 0xFFFFFFFFFFFFF8);
        if (v29 <= 3)
        {
          v93 = ((1 << v30) + 1) >> v30;
          if (v93 > 0xFFF5)
          {
            *(_DWORD *)(v41 + v29) = 0;
            goto LABEL_242;
          }
          if (v93 > 0xF5)
          {
            *(_WORD *)(v41 + v29) = 0;
            goto LABEL_242;
          }
        }
        *(_BYTE *)(v41 + v29) = 0;
        if (v29 <= 3)
          goto LABEL_234;
        goto LABEL_237;
      case 1u:
        switch(*(_BYTE *)(v42 + v22))
        {
          case 0:
            v105 = 0;
            *(_BYTE *)v41 = *(_BYTE *)v42;
            break;
          case 1:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v105 = 1;
            break;
          case 2:
            v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v120 = v22;
            v121 = v22 + 1;
            v119(v41, v42, v205);
            v23 = v121;
            v22 = v120;
            v105 = 2;
            break;
          case 3:
            v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v123 = v22;
            v124 = v22 + 1;
            v122(v41, v42, v205);
            v23 = v124;
            v22 = v123;
            v105 = 3;
            break;
          case 4:
            v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v126 = v22;
            v127 = v22 + 1;
            v125(v41, v42, v205);
            v23 = v127;
            v22 = v126;
            v105 = 4;
            break;
          case 5:
            v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v129 = v22;
            v130 = v22 + 1;
            v128(v41, v42, v205);
            v23 = v130;
            v22 = v129;
            v105 = 5;
            break;
          case 6:
            v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
            v144 = v22;
            v145 = v22 + 1;
            v143(v41, v42, v205);
            v23 = v145;
            v22 = v144;
            v105 = 6;
            break;
          case 7:
            v131 = *(_OWORD *)v42;
            *(_OWORD *)(v41 + 9) = *(_OWORD *)(v42 + 9);
            *(_OWORD *)v41 = v131;
            v105 = 7;
            break;
          case 8:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v105 = 8;
            break;
          case 9:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v105 = 9;
            break;
          default:
            if (v22 <= 3)
              v76 = v22;
            else
              v76 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v41 + v22) = v105;
        v146 = ((v41 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v147 = ((v42 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v148 = *(_OWORD *)v147;
        v149 = *(_OWORD *)(v147 + 16);
        v150 = *(_OWORD *)(v147 + 48);
        *(_OWORD *)(v146 + 32) = *(_OWORD *)(v147 + 32);
        *(_OWORD *)(v146 + 48) = v150;
        *(_OWORD *)v146 = v148;
        *(_OWORD *)(v146 + 16) = v149;
        v151 = *(_OWORD *)(v147 + 64);
        v152 = *(_OWORD *)(v147 + 80);
        v153 = *(_OWORD *)(v147 + 96);
        *(_OWORD *)(v146 + 106) = *(_OWORD *)(v147 + 106);
        *(_OWORD *)(v146 + 80) = v152;
        *(_OWORD *)(v146 + 96) = v153;
        *(_OWORD *)(v146 + 64) = v151;
        *(_BYTE *)(v146 + 122) = *(_BYTE *)(v147 + 122);
        *(_BYTE *)(v146 + 123) = *(_BYTE *)(v147 + 123);
        *(_BYTE *)(v146 + 124) = *(_BYTE *)(v147 + 124);
        *(_BYTE *)(v146 + 125) = *(_BYTE *)(v147 + 125);
        *(_BYTE *)(v146 + 126) = *(_BYTE *)(v147 + 126);
        *(_QWORD *)((v146 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v147 + 134) & 0xFFFFFFFFFFFFF8);
        if (v29 > 3)
          goto LABEL_232;
        v103 = 1;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
          goto LABEL_241;
        if (v93 <= 0xF5)
        {
LABEL_232:
          v87 = 1;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 1;
        goto LABEL_242;
      case 2u:
        v77 = v32;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v78 = (_BYTE *)((v25 + v41) & v74);
        v79 = (_BYTE *)((v25 + v42) & v74);
        switch(v79[v22])
        {
          case 0:
            *v78 = *v79;
            v78[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v78 = *(_QWORD *)v79;
            v78[v22] = 1;
            break;
          case 2:
            v171 = *(void (**)(uint64_t))(v12 + 32);
            v172 = v22;
            v171((v25 + v41) & v74);
            v78[v172] = 2;
            break;
          case 3:
            v173 = *(void (**)(uint64_t))(v12 + 32);
            v174 = v22;
            v173((v25 + v41) & v74);
            v78[v174] = 3;
            break;
          case 4:
            v175 = *(void (**)(uint64_t))(v12 + 32);
            v176 = v22;
            v175((v25 + v41) & v74);
            v78[v176] = 4;
            break;
          case 5:
            v177 = *(void (**)(uint64_t))(v12 + 32);
            v178 = v22;
            v177((v25 + v41) & v74);
            v78[v178] = 5;
            break;
          case 6:
            v179 = *(void (**)(uint64_t))(v12 + 32);
            v180 = v22;
            v179((v25 + v41) & v74);
            v78[v180] = 6;
            break;
          case 7:
            v181 = *(_OWORD *)v79;
            *(_OWORD *)(((v25 + v41) & v74) + 9) = *(_OWORD *)(((v25 + v42) & v74) + 9);
            *(_OWORD *)v78 = v181;
            v78[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v78 = *(_QWORD *)v79;
            v78[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v78 = *(_QWORD *)v79;
            v78[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v41) & v74), v79, v22 + 1);
            break;
        }
        v32 = v77;
        if (v29 > 3)
          goto LABEL_149;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 2;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_149:
          v87 = 2;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 2;
        goto LABEL_242;
      case 3u:
        v80 = v32;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v81 = (_BYTE *)((v25 + v41) & v74);
        v82 = (_BYTE *)((v25 + v42) & v74);
        switch(v82[v22])
        {
          case 0:
            *v81 = *v82;
            v81[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v81 = *(_QWORD *)v82;
            v81[v22] = 1;
            break;
          case 2:
            v182 = *(void (**)(uint64_t))(v12 + 32);
            v183 = v22;
            v182((v25 + v41) & v74);
            v81[v183] = 2;
            break;
          case 3:
            v184 = *(void (**)(uint64_t))(v12 + 32);
            v185 = v22;
            v184((v25 + v41) & v74);
            v81[v185] = 3;
            break;
          case 4:
            v186 = *(void (**)(uint64_t))(v12 + 32);
            v187 = v22;
            v186((v25 + v41) & v74);
            v81[v187] = 4;
            break;
          case 5:
            v188 = *(void (**)(uint64_t))(v12 + 32);
            v189 = v22;
            v188((v25 + v41) & v74);
            v81[v189] = 5;
            break;
          case 6:
            v190 = *(void (**)(uint64_t))(v12 + 32);
            v191 = v22;
            v190((v25 + v41) & v74);
            v81[v191] = 6;
            break;
          case 7:
            v192 = *(_OWORD *)v82;
            *(_OWORD *)(((v25 + v41) & v74) + 9) = *(_OWORD *)(((v25 + v42) & v74) + 9);
            *(_OWORD *)v81 = v192;
            v81[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v81 = *(_QWORD *)v82;
            v81[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v81 = *(_QWORD *)v82;
            v81[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v41) & v74), v82, v22 + 1);
            break;
        }
        v32 = v80;
        if (v29 > 3)
          goto LABEL_152;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 3;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_152:
          v87 = 3;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 3;
        goto LABEL_242;
      case 4u:
        v83 = v32;
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v84 = (_BYTE *)((v25 + v41) & v74);
        v85 = (_BYTE *)((v25 + v42) & v74);
        switch(v85[v22])
        {
          case 0:
            *v84 = *v85;
            v84[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v84 = *(_QWORD *)v85;
            v84[v22] = 1;
            break;
          case 2:
            v193 = *(void (**)(uint64_t))(v12 + 32);
            v194 = v22;
            v193((v25 + v41) & v74);
            v84[v194] = 2;
            break;
          case 3:
            v195 = *(void (**)(uint64_t))(v12 + 32);
            v196 = v22;
            v195((v25 + v41) & v74);
            v84[v196] = 3;
            break;
          case 4:
            v197 = *(void (**)(uint64_t))(v12 + 32);
            v198 = v22;
            v197((v25 + v41) & v74);
            v84[v198] = 4;
            break;
          case 5:
            v199 = *(void (**)(uint64_t))(v12 + 32);
            v200 = v22;
            v199((v25 + v41) & v74);
            v84[v200] = 5;
            break;
          case 6:
            v201 = *(void (**)(uint64_t))(v12 + 32);
            v202 = v22;
            v201((v25 + v41) & v74);
            v84[v202] = 6;
            break;
          case 7:
            v203 = *(_OWORD *)v85;
            *(_OWORD *)(((v25 + v41) & v74) + 9) = *(_OWORD *)(((v25 + v42) & v74) + 9);
            *(_OWORD *)v84 = v203;
            v84[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v84 = *(_QWORD *)v85;
            v84[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v84 = *(_QWORD *)v85;
            v84[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v41) & v74), v85, v22 + 1);
            break;
        }
        v32 = v83;
        if (v29 > 3)
          goto LABEL_155;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 4;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_155:
          v87 = 4;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 4;
        goto LABEL_242;
      case 5u:
        v86 = *(_OWORD *)v42;
        *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
        *(_OWORD *)v41 = v86;
        if (v29 > 3)
          goto LABEL_125;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 5;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_125:
          v87 = 5;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 5;
        goto LABEL_242;
      case 6u:
        *(_QWORD *)v41 = *(_QWORD *)v42;
        if (v29 > 3)
          goto LABEL_143;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 6;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_143:
          v87 = 6;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 6;
        goto LABEL_242;
      case 7u:
        v88 = ~v16;
        if ((*(_DWORD *)(v15 + 84) & 0x80000000) != 0)
        {
          v96 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
          v97 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v42 + v16 + 8) & v88, *(unsigned int *)(v15 + 84), v204);
          v26 = v16 + 8;
          v27 = v96;
          if (v97)
          {
LABEL_130:
            v90 = v27;
            memcpy((void *)v41, (const void *)v42, v27);
            goto LABEL_187;
          }
        }
        else
        {
          v89 = *(_QWORD *)v42;
          if (*(_QWORD *)v42 >= 0xFFFFFFFFuLL)
            LODWORD(v89) = -1;
          if ((_DWORD)v89 != -1)
            goto LABEL_130;
        }
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v98 = (v26 + v41) & v88;
        v99 = (v42 + v16 + 8) & v88;
        v90 = v27;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v98, v99, v204);
LABEL_187:
        v100 = ((v42 | 7) + v90) & 0xFFFFFFFFFFFFFFF8;
        v101 = *(_OWORD *)v100;
        v102 = ((v41 | 7) + v90) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)(v102 + 16) = *(_QWORD *)(v100 + 16);
        *(_OWORD *)v102 = v101;
        if (v29 > 3)
          goto LABEL_188;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 7;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_188:
          v87 = 7;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 7;
        goto LABEL_242;
      case 8u:
        if (*(_DWORD *)(v12 + 84) < 0xFDu)
        {
          if (*(unsigned __int8 *)(v42 + v21) < 3u)
          {
LABEL_173:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v41, v42, v205);
            *(_BYTE *)(v41 + v21) = *(_BYTE *)(v42 + v21);
LABEL_174:
            *(_QWORD *)(((v41 | 7) + v21 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v42 | 7) + v21 + 1) & 0xFFFFFFFFFFFFF8);
            if (v29 > 3)
              goto LABEL_177;
            v93 = ((1 << v30) + 1) >> v30;
            if (v93 > 0xFFF5)
            {
              v103 = 8;
LABEL_241:
              *(_DWORD *)(v41 + v29) = v103;
            }
            else
            {
              if (v93 <= 0xF5)
              {
LABEL_177:
                v87 = 8;
LABEL_233:
                *(_BYTE *)(v41 + v29) = v87;
                if (v29 <= 3)
                {
LABEL_234:
                  v154 = ((1 << v30) + 1) >> v30;
                  v155 = 2;
                  if (v154 > 0xFFF5)
                    v155 = 4;
                  if (v154 > 0xF5)
                    goto LABEL_244;
                }
LABEL_237:
                v155 = 1;
LABEL_244:
                v157 = v155 + v29;
                v158 = v157 + v41;
                v159 = v157 + v42;
                *(_BYTE *)v158 = *(_BYTE *)v159;
                v158 &= 0xFFFFFFFFFFFFFFF8;
                v159 &= 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)(v158 + 8) = *(_QWORD *)(v159 + 8);
                v160 = (v158 + 23) & 0xFFFFFFFFFFFFFFF8;
                v161 = (v159 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(_QWORD *)v160 = *(_QWORD *)v161;
                *(_BYTE *)(v160 + 8) = *(_BYTE *)(v161 + 8);
                v162 = (v158 + 39) & 0xFFFFFFFFFFFFFFF8;
                v163 = (v159 + 39) & 0xFFFFFFFFFFFFFFF8;
                v164 = *(_QWORD *)v163;
                *(_BYTE *)(v162 + 8) = *(_BYTE *)(v163 + 8);
                *(_QWORD *)v162 = v164;
                v165 = (_QWORD *)((v158 + 55) & 0xFFFFFFFFFFFFF8);
                v166 = (_QWORD *)((v159 + 55) & 0xFFFFFFFFFFFFF8);
                *v165 = *v166;
                *(_QWORD *)(((unint64_t)v165 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v166
                                                                                             + 15) & 0xFFFFFFFFFFFFF8);
                if (v29 > 3)
                  goto LABEL_248;
                v167 = ((1 << v30) + 1) >> v30;
                v168 = 2;
                if (v167 > 0xFFF5)
                  v168 = 4;
                if (v167 <= 0xF5)
LABEL_248:
                  v168 = 1;
                v169 = ((((((v168 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 8;
                *(_QWORD *)((v41 + v169) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v42 + v169) & 0xFFFFFFFFFFFFF8);
                return v32;
              }
              *(_WORD *)(v41 + v29) = 8;
            }
LABEL_242:
            v156 = v93 > 0xFFF5;
            v155 = 2;
            if (v156)
              v155 = 4;
            goto LABEL_244;
          }
        }
        else if (!(*(unsigned int (**)(uint64_t))(v12 + 48))(v42))
        {
          goto LABEL_173;
        }
        memcpy((void *)v41, (const void *)v42, v21 + 1);
        goto LABEL_174;
      case 9u:
        *(_BYTE *)v41 = *(_BYTE *)v42;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v19 + 1 + v41) & ~v19, (v19 + 1 + v42) & ~v19, v17);
        if (v29 > 3)
          goto LABEL_132;
        v93 = ((1 << v30) + 1) >> v30;
        if (v93 > 0xFFF5)
        {
          v103 = 9;
          goto LABEL_241;
        }
        if (v93 <= 0xF5)
        {
LABEL_132:
          v87 = 9;
          goto LABEL_233;
        }
        *(_WORD *)(v41 + v29) = 9;
        goto LABEL_242;
      default:
        if (v29 > 3)
          goto LABEL_137;
        v91 = ((1 << v30) + 1) >> v30;
        v92 = 2;
        if (v91 > 0xFFF5)
          v92 = 4;
        if (v91 <= 0xF5)
LABEL_137:
          v92 = 1;
        memcpy((void *)v41, (const void *)v42, v92 + v29);
        if (v29 > 3)
          goto LABEL_237;
        goto LABEL_234;
    }
  }
  if (v60 > 0xFF)
  {
    v59 = *(unsigned __int16 *)(v42 + v57);
    if (!*(_WORD *)(v42 + v57))
      goto LABEL_85;
    goto LABEL_78;
  }
  if (v60 >= 2)
    goto LABEL_71;
LABEL_85:
  if (!v49)
    goto LABEL_98;
  if (v29 <= 3)
  {
    v67 = ((1 << v30) + 1) >> v30;
    if (v67 > 0xFFF5)
    {
      v63 = *(_DWORD *)(v42 + v29);
      v64 = ~v63;
      goto LABEL_96;
    }
    v66 = v67 + 10;
    if (v67 > 0xF5)
    {
      v69 = *(unsigned __int16 *)(v42 + v29);
      v63 = v69 | 0xFFFF0000;
      v64 = v69 ^ 0xFFFF;
      v65 = 16;
    }
    else
    {
      v68 = *(unsigned __int8 *)(v42 + v29);
      v63 = v68 | 0xFFFFFF00;
      v64 = v68 ^ 0xFF;
      v65 = 8;
    }
  }
  else
  {
    v62 = *(unsigned __int8 *)(v42 + v29);
    v63 = v62 | 0xFFFFFF00;
    v64 = v62 ^ 0xFF;
    v65 = 8;
    v66 = 11;
  }
  v70 = (1 << v65) - v66;
  if ((v70 & 0x80000000) == 0)
  {
    if (v70 <= v64)
      goto LABEL_98;
    goto LABEL_97;
  }
LABEL_96:
  if (v64 >= 0x7FFFFFFF)
    goto LABEL_98;
LABEL_97:
  if (!v63)
    goto LABEL_98;
LABEL_179:
  if (v29 > 3)
    goto LABEL_183;
  v94 = ((1 << v30) + 1) >> v30;
  v95 = 2;
  if (v94 > 0xFFF5)
    v95 = 4;
  if (v94 <= 0xF5)
LABEL_183:
    v95 = 1;
  memcpy((void *)v41, (const void *)v42, ((((((((v95 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v32;
}

void *sub_1B4306F60(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  size_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  size_t v40;
  int v41;
  char v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  char v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  char v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  char v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  char v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  char v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  char v106;
  int v107;
  int v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  char v113;
  unsigned int v114;
  unsigned int v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  char v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  char v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  id *v137;
  id v138;
  id v139;
  int v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  char v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  __int128 v170;
  unsigned int v171;
  char v172;
  size_t v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void **v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  id v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  size_t v198;
  unsigned int v199;
  unsigned int v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  __int128 v204;
  unint64_t v205;
  uint64_t v206;
  unsigned int v207;
  size_t v208;
  unint64_t v209;
  unsigned int v210;
  __int16 v211;
  char v212;
  char v213;
  size_t v214;
  unint64_t v215;
  int v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  unsigned int v220;
  __int128 v221;
  unint64_t v222;
  unint64_t v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  unint64_t v231;
  unint64_t v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  unsigned int v239;
  uint64_t v240;
  BOOL v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  _QWORD *v251;
  unsigned int v252;
  uint64_t v253;
  unint64_t v254;
  int v255;
  unsigned int v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _BYTE *v260;
  _BYTE *v261;
  _BYTE *v262;
  _BYTE *v263;
  _BYTE *v264;
  _BYTE *v265;
  __int128 v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  unsigned int v271;
  uint64_t v272;
  unsigned int v273;
  size_t v274;
  unsigned int v275;
  unsigned int v276;
  size_t v277;
  size_t v278;
  size_t v279;
  uint64_t v280;
  unint64_t v281;
  __int128 v282;
  unint64_t v283;
  int v284;
  char v285;
  char v286;
  __int128 v287;
  __int128 v288;
  unint64_t v289;
  unint64_t v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  unint64_t v297;
  unint64_t v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  unint64_t v309;
  unint64_t v310;
  unint64_t v311;
  void *v312;
  unint64_t v313;
  unint64_t v314;
  void *v315;
  unint64_t v316;
  unint64_t v317;
  uint64_t v318;
  unint64_t v319;
  _QWORD *v320;
  void *v321;
  unsigned int v322;
  unint64_t v323;
  void *result;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  size_t v331;
  size_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  size_t __n;
  uint64_t v341;
  unsigned int v342;
  uint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  void *v349;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  v349 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v348 = sub_1B49037E8();
  v12 = *(_QWORD *)(v348 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  v14 = v13 | 7;
  v347 = sub_1B49046DC();
  v15 = *(_QWORD *)(v347 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = sub_1B4905C78();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 | v19 | v13 | 7;
  v21 = *(_QWORD *)(v12 + 64);
  if (v21 <= 0x19)
    v22 = 25;
  else
    v22 = *(_QWORD *)(v12 + 64);
  v23 = v22 + 1;
  v24 = (((v22 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = v13 + 15;
  v26 = v16 + 8;
  v27 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
  if (v22 + 1 + ((v13 + 15) & (unint64_t)~v14) > v24)
    v24 = v22 + 1 + ((v13 + 15) & ~v14);
  if (v24 <= ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24)
    v24 = ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v24 <= (v21 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 16;
  v28 = v19 + 1;
  if (v24 <= *(_QWORD *)(v18 + 64) + ((v19 + 1) & (unint64_t)~v19))
    v24 = *(_QWORD *)(v18 + 64) + ((v19 + 1) & ~v19);
  if (v24 <= 0x18)
    v29 = 24;
  else
    v29 = v24;
  v30 = (unint64_t)&a2[v20 + v11];
  if (v29 > 3)
  {
    v31 = 11;
LABEL_29:
    v32 = 8;
    goto LABEL_30;
  }
  v36 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v36 > 0xFFF5)
  {
    v34 = 0x7FFFFFFF;
    goto LABEL_39;
  }
  v31 = v36 + 10;
  if (v36 <= 0xF5)
    goto LABEL_29;
  v32 = 16;
LABEL_30:
  v33 = (1 << v32) - v31;
  v34 = 0x7FFFFFFF;
  if (v33 <= 0x7FFFFFFF)
    v35 = 0x7FFFFFFF;
  else
    v35 = v33;
  if ((v33 & 0x80000000) == 0)
    v34 = v35;
LABEL_39:
  v37 = ((unint64_t)v349 + v20 + v11) & ~v20;
  v38 = v30 & ~v20;
  v39 = *(_DWORD *)(v12 + 84);
  v40 = v21 + 1;
  if (v29 > 3)
  {
    v41 = 11;
    goto LABEL_41;
  }
  v44 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v44 <= 0xFFF5)
  {
    v41 = v44 + 10;
    if (v44 > 0xF5)
    {
      v42 = 16;
LABEL_42:
      v43 = (1 << v42) - v41;
      if ((v43 & 0x80000000) == 0)
        goto LABEL_48;
      goto LABEL_47;
    }
LABEL_41:
    v42 = 8;
    goto LABEL_42;
  }
LABEL_47:
  v43 = 0x7FFFFFFF;
LABEL_48:
  v45 = ~v14;
  v46 = *(unsigned int *)(v15 + 84);
  v47 = ~v16;
  v48 = ~v19;
  if (v43 == v34)
  {
    if (v29 <= 3)
    {
      v55 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      if (v55 > 0xFFF5)
        goto LABEL_67;
      v49 = v55 + 10;
      if (v55 > 0xF5)
      {
        v50 = 16;
LABEL_52:
        v51 = (1 << v50) - v49;
        if ((v51 & 0x80000000) == 0)
        {
          if (v29 > 3)
            goto LABEL_71;
LABEL_68:
          v56 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          v57 = 2;
          if (v56 > 0xFFF5)
            v57 = 4;
          if (v56 > 0xF5)
          {
LABEL_72:
            v58 = v34 - v51;
            if (v34 <= v51)
              goto LABEL_89;
            v59 = v57 + v29;
            v60 = 8 * (v57 + v29);
            if (v59 > 3)
            {
LABEL_74:
              v61 = *(unsigned __int8 *)(v37 + v59);
              if (!*(_BYTE *)(v37 + v59))
                goto LABEL_89;
              goto LABEL_82;
            }
            v62 = ((v58 + ~(-1 << v60)) >> v60) + 1;
            if (HIWORD(v62))
            {
              v61 = *(_DWORD *)(v37 + v59);
              if (!v61)
                goto LABEL_89;
            }
            else
            {
              if (v62 <= 0xFF)
              {
                if (v62 < 2)
                {
LABEL_89:
                  if (!v51)
                    goto LABEL_101;
                  if (v29 <= 3)
                  {
                    v70 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v70 > 0xFFF5)
                    {
                      v65 = *(_DWORD *)(v37 + v29);
                      v66 = ~v65;
                      goto LABEL_99;
                    }
                    v68 = v70 + 10;
                    if (v70 > 0xF5)
                    {
                      v97 = *(unsigned __int16 *)(v37 + v29);
                      v65 = v97 | 0xFFFF0000;
                      v66 = v97 ^ 0xFFFF;
                      v67 = 16;
                    }
                    else
                    {
                      v71 = *(unsigned __int8 *)(v37 + v29);
                      v65 = v71 | 0xFFFFFF00;
                      v66 = v71 ^ 0xFF;
                      v67 = 8;
                    }
                  }
                  else
                  {
                    v64 = *(unsigned __int8 *)(v37 + v29);
                    v65 = v64 | 0xFFFFFF00;
                    v66 = v64 ^ 0xFF;
                    v67 = 8;
                    v68 = 11;
                  }
                  v69 = (1 << v67) - v68;
                  if ((v69 & 0x80000000) == 0)
                  {
                    if (v69 <= v66)
                      goto LABEL_101;
                    goto LABEL_100;
                  }
LABEL_99:
                  if (v66 >= 0x7FFFFFFF)
                    goto LABEL_101;
LABEL_100:
                  if (!v65)
                    goto LABEL_101;
LABEL_162:
                  if (v29 <= 3)
                  {
                    v99 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                    if (v99 > 0xFFF5)
                    {
                      v102 = 0x7FFFFFFF;
                      if (v29 > 3)
                      {
LABEL_173:
                        v104 = 11;
                        goto LABEL_177;
                      }
LABEL_175:
                      v105 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                      if (v105 > 0xFFF5)
                        goto LABEL_182;
                      v104 = v105 + 10;
                      if (v105 > 0xF5)
                      {
                        v106 = 16;
LABEL_178:
                        v107 = (1 << v106) - v104;
                        if ((v107 & 0x80000000) == 0)
                        {
                          if (v107 == v102)
                            goto LABEL_180;
                          goto LABEL_183;
                        }
LABEL_182:
                        if (v102 == 0x7FFFFFFF)
                        {
LABEL_180:
                          if (v29 <= 3)
                          {
                            v112 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                            if (v112 > 0xFFF5)
                              goto LABEL_198;
                            v108 = v112 + 10;
                            if (v112 > 0xF5)
                            {
                              v113 = 16;
LABEL_195:
                              v114 = (1 << v113) - v108;
                              if ((v114 & 0x80000000) == 0)
                              {
                                if (v29 > 3)
                                  goto LABEL_202;
LABEL_199:
                                v115 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                v116 = 2;
                                if (v115 > 0xFFF5)
                                  v116 = 4;
                                if (v115 > 0xF5)
                                {
LABEL_203:
                                  v117 = v102 - v114;
                                  if (v102 <= v114)
                                    goto LABEL_272;
                                  v118 = v116 + v29;
                                  v119 = 8 * (v116 + v29);
                                  if (v118 <= 3)
                                  {
                                    v121 = ((v117 + ~(-1 << v119)) >> v119) + 1;
                                    if (HIWORD(v121))
                                    {
                                      v120 = *(_DWORD *)(v38 + v118);
                                      if (!v120)
                                        goto LABEL_272;
                                      goto LABEL_215;
                                    }
                                    if (v121 > 0xFF)
                                    {
                                      v120 = *(unsigned __int16 *)(v38 + v118);
                                      if (!*(_WORD *)(v38 + v118))
                                        goto LABEL_272;
                                      goto LABEL_215;
                                    }
                                    if (v121 < 2)
                                    {
LABEL_272:
                                      if (!v114)
                                        goto LABEL_284;
                                      if (v29 <= 3)
                                      {
                                        v154 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        if (v154 > 0xFFF5)
                                        {
                                          v149 = *(_DWORD *)(v38 + v29);
                                          v150 = ~v149;
LABEL_282:
                                          if (v150 < 0x7FFFFFFF)
                                            goto LABEL_283;
                                          if (v29 > 3)
                                            goto LABEL_287;
LABEL_284:
                                          v156 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                          if (v156 > 0xFFF5)
                                          {
                                            v157 = *(_DWORD *)(v38 + v29);
                                            if (v157 < 0xA)
                                              goto LABEL_296;
                                            goto LABEL_292;
                                          }
                                          if (v156 > 0xF5)
                                          {
                                            v157 = *(unsigned __int16 *)(v38 + v29);
                                            if (v157 < 0xA)
                                            {
LABEL_296:
                                              switch(v157)
                                              {
                                                case 0u:
                                                  v162 = v349;
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      v212 = 0;
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v212 = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v212 = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v212 = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v212 = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v212 = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v212 = 6;
                                                      break;
                                                    case 7:
                                                      v221 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v221;
                                                      v212 = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v212 = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v212 = 9;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v159 = v22;
                                                      else
                                                        v159 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  *(_BYTE *)(v37 + v22) = v212;
                                                  v222 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                  v223 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                  v224 = *(_OWORD *)v223;
                                                  v225 = *(_OWORD *)(v223 + 16);
                                                  v226 = *(_OWORD *)(v223 + 48);
                                                  *(_OWORD *)(v222 + 32) = *(_OWORD *)(v223 + 32);
                                                  *(_OWORD *)(v222 + 48) = v226;
                                                  *(_OWORD *)v222 = v224;
                                                  *(_OWORD *)(v222 + 16) = v225;
                                                  v227 = *(_OWORD *)(v223 + 64);
                                                  v228 = *(_OWORD *)(v223 + 80);
                                                  v229 = *(_OWORD *)(v223 + 96);
                                                  *(_OWORD *)(v222 + 106) = *(_OWORD *)(v223 + 106);
                                                  *(_OWORD *)(v222 + 80) = v228;
                                                  *(_OWORD *)(v222 + 96) = v229;
                                                  *(_OWORD *)(v222 + 64) = v227;
                                                  *(_BYTE *)(v222 + 122) = *(_BYTE *)(v223 + 122);
                                                  *(_BYTE *)(v222 + 123) = *(_BYTE *)(v223 + 123);
                                                  *(_BYTE *)(v222 + 124) = *(_BYTE *)(v223 + 124);
                                                  *(_BYTE *)(v222 + 125) = *(_BYTE *)(v223 + 125);
                                                  *(_BYTE *)(v222 + 126) = *(_BYTE *)(v223 + 126);
                                                  *(_QWORD *)((v222 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v223 + 134) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_492;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 0;
                                                  }
                                                  else
                                                  {
                                                    if (v171 <= 0xF5)
                                                    {
LABEL_492:
                                                      *(_BYTE *)(v37 + v29) = 0;
                                                      goto LABEL_509;
                                                    }
                                                    *(_WORD *)(v37 + v29) = 0;
                                                  }
                                                  goto LABEL_515;
                                                case 1u:
                                                  v162 = v349;
                                                  switch(*(_BYTE *)(v38 + v22))
                                                  {
                                                    case 0:
                                                      v213 = 0;
                                                      *(_BYTE *)v37 = *(_BYTE *)v38;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v213 = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v213 = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v213 = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v213 = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                      v23 = v22 + 1;
                                                      v213 = 6;
                                                      break;
                                                    case 7:
                                                      v230 = *(_OWORD *)v38;
                                                      *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
                                                      *(_OWORD *)v37 = v230;
                                                      v213 = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v37 = *(_QWORD *)v38;
                                                      v213 = 9;
                                                      break;
                                                    default:
                                                      if (v22 <= 3)
                                                        v163 = v22;
                                                      else
                                                        v163 = 4;
                                                      __asm { BR              X12 }
                                                      return result;
                                                  }
                                                  *(_BYTE *)(v37 + v22) = v213;
                                                  v231 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
                                                  v232 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
                                                  v233 = *(_OWORD *)v232;
                                                  v234 = *(_OWORD *)(v232 + 16);
                                                  v235 = *(_OWORD *)(v232 + 48);
                                                  *(_OWORD *)(v231 + 32) = *(_OWORD *)(v232 + 32);
                                                  *(_OWORD *)(v231 + 48) = v235;
                                                  *(_OWORD *)v231 = v233;
                                                  *(_OWORD *)(v231 + 16) = v234;
                                                  v236 = *(_OWORD *)(v232 + 64);
                                                  v237 = *(_OWORD *)(v232 + 80);
                                                  v238 = *(_OWORD *)(v232 + 96);
                                                  *(_OWORD *)(v231 + 106) = *(_OWORD *)(v232 + 106);
                                                  *(_OWORD *)(v231 + 80) = v237;
                                                  *(_OWORD *)(v231 + 96) = v238;
                                                  *(_OWORD *)(v231 + 64) = v236;
                                                  *(_BYTE *)(v231 + 122) = *(_BYTE *)(v232 + 122);
                                                  *(_BYTE *)(v231 + 123) = *(_BYTE *)(v232 + 123);
                                                  *(_BYTE *)(v231 + 124) = *(_BYTE *)(v232 + 124);
                                                  *(_BYTE *)(v231 + 125) = *(_BYTE *)(v232 + 125);
                                                  *(_BYTE *)(v231 + 126) = *(_BYTE *)(v232 + 126);
                                                  *(_QWORD *)((v231 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v232 + 134) & 0xFFFFFFFFFFFFF8);
                                                  if (v29 > 3)
                                                    goto LABEL_507;
                                                  v211 = 1;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 1;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 > 0xF5)
                                                    goto LABEL_514;
LABEL_507:
                                                  v172 = 1;
                                                  goto LABEL_508;
                                                case 2u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v164 = (_BYTE *)((v25 + v37) & v45);
                                                  v165 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v165[v22])
                                                  {
                                                    case 0:
                                                      *v164 = *v165;
                                                      v164[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v164 = *(_QWORD *)v165;
                                                      v164[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v164[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v164[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v164[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v164[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v164[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v325 = *(_OWORD *)v165;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v164 = v325;
                                                      v164[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v164 = *(_QWORD *)v165;
                                                      v164[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v164 = *(_QWORD *)v165;
                                                      v164[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v165, v23);
                                                      break;
                                                  }
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_376;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 2;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_376:
                                                    v172 = 2;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 2;
                                                  goto LABEL_514;
                                                case 3u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v166 = (_BYTE *)((v25 + v37) & v45);
                                                  v167 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v167[v22])
                                                  {
                                                    case 0:
                                                      *v166 = *v167;
                                                      v166[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v166 = *(_QWORD *)v167;
                                                      v166[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v166[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v166[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v166[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v166[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v166[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v326 = *(_OWORD *)v167;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v166 = v326;
                                                      v166[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v166 = *(_QWORD *)v167;
                                                      v166[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v166 = *(_QWORD *)v167;
                                                      v166[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v167, v23);
                                                      break;
                                                  }
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_381;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 3;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_381:
                                                    v172 = 3;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 3;
                                                  goto LABEL_514;
                                                case 4u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v168 = (_BYTE *)((v25 + v37) & v45);
                                                  v169 = (_BYTE *)((v25 + v38) & v45);
                                                  switch(v169[v22])
                                                  {
                                                    case 0:
                                                      *v168 = *v169;
                                                      v168[v22] = 0;
                                                      break;
                                                    case 1:
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v168[v22] = 1;
                                                      break;
                                                    case 2:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v168[v22] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v168[v22] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v168[v22] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v168[v22] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
                                                      v168[v22] = 6;
                                                      break;
                                                    case 7:
                                                      v327 = *(_OWORD *)v169;
                                                      *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
                                                      *(_OWORD *)v168 = v327;
                                                      v168[v22] = 7;
                                                      break;
                                                    case 8:
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v168[v22] = 8;
                                                      break;
                                                    case 9:
                                                      *(_QWORD *)v168 = *(_QWORD *)v169;
                                                      v168[v22] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)((v25 + v37) & v45), v169, v23);
                                                      break;
                                                  }
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_386;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 4;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_386:
                                                    v172 = 4;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 4;
                                                  goto LABEL_514;
                                                case 5u:
                                                  v170 = *(_OWORD *)v38;
                                                  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
                                                  *(_OWORD *)v37 = v170;
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_320;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 5;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_320:
                                                    v172 = 5;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 5;
                                                  goto LABEL_514;
                                                case 6u:
                                                  *(_QWORD *)v37 = *(_QWORD *)v38;
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_324;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 6;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_324:
                                                    v172 = 6;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 6;
                                                  goto LABEL_514;
                                                case 7u:
                                                  v173 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
                                                  if ((v46 & 0x80000000) != 0)
                                                  {
                                                    v174 = v16 + 8;
                                                    v176 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v26 + v38) & v47, *(unsigned int *)(v15 + 84), v347);
                                                  }
                                                  else
                                                  {
                                                    v174 = v16 + 8;
                                                    v175 = *(_QWORD *)v38;
                                                    if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
                                                      LODWORD(v175) = -1;
                                                    v176 = v175 + 1;
                                                  }
                                                  v162 = v349;
                                                  if (v176)
                                                  {
                                                    memcpy((void *)v37, (const void *)v38, v173);
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v37 = *(_QWORD *)v38;
                                                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))((v37 + v16 + 8) & ~v16, (v174 + v38) & ~v16, v347);
                                                  }
                                                  v203 = ((v38 | 7) + v173) & 0xFFFFFFFFFFFFFFF8;
                                                  v204 = *(_OWORD *)v203;
                                                  v205 = ((v37 | 7) + v173) & 0xFFFFFFFFFFFFFFF8;
                                                  *(_QWORD *)(v205 + 16) = *(_QWORD *)(v203 + 16);
                                                  *(_OWORD *)v205 = v204;
                                                  if (v29 > 3)
                                                    goto LABEL_421;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 7;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_421:
                                                    v172 = 7;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 7;
                                                  goto LABEL_514;
                                                case 8u:
                                                  if (v39 < 0xFD)
                                                  {
                                                    v197 = *(unsigned __int8 *)(v38 + v21);
                                                    if (v197 < 3)
                                                      goto LABEL_391;
                                                    v177 = v197 - 2;
                                                  }
                                                  else
                                                  {
                                                    v177 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
                                                    v40 = v21 + 1;
                                                  }
                                                  if (v177)
                                                  {
                                                    v198 = v40;
                                                    memcpy((void *)v37, (const void *)v38, v40);
                                                    goto LABEL_392;
                                                  }
LABEL_391:
                                                  v198 = v40;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
                                                  *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_392:
                                                  *(_QWORD *)(((v37 | 7) + v198) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v198) & 0xFFFFFFFFFFFFF8);
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_395;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 8;
                                                    goto LABEL_515;
                                                  }
                                                  if (v171 <= 0xF5)
                                                  {
LABEL_395:
                                                    v172 = 8;
                                                    goto LABEL_508;
                                                  }
                                                  v211 = 8;
                                                  goto LABEL_514;
                                                case 9u:
                                                  *(_BYTE *)v37 = *(_BYTE *)v38;
                                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v28 + v37) & v48, (v28 + v38) & v48, v17);
                                                  v162 = v349;
                                                  if (v29 > 3)
                                                    goto LABEL_334;
                                                  v171 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  if (v171 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)(v37 + v29) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v171 <= 0xF5)
                                                    {
LABEL_334:
                                                      v172 = 9;
LABEL_508:
                                                      *(_BYTE *)(v37 + v29) = v172;
LABEL_509:
                                                      if (v29 > 3)
                                                        goto LABEL_513;
                                                      v239 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v240 = 2;
                                                      if (v239 > 0xFFF5)
                                                        v240 = 4;
                                                      if (v239 <= 0xF5)
LABEL_513:
                                                        v240 = 1;
LABEL_517:
                                                      v242 = v240 + v29;
                                                      v243 = v242 + v37;
                                                      v244 = v242 + v38;
                                                      *(_BYTE *)v243 = *(_BYTE *)v244;
                                                      v243 &= 0xFFFFFFFFFFFFFFF8;
                                                      v244 &= 0xFFFFFFFFFFFFFFF8;
                                                      *(_QWORD *)(v243 + 8) = *(_QWORD *)(v244 + 8);
                                                      v245 = (v243 + 23) & 0xFFFFFFFFFFFFFFF8;
                                                      v246 = (v244 + 23) & 0xFFFFFFFFFFFFFFF8;
                                                      *(_QWORD *)v245 = *(_QWORD *)v246;
                                                      *(_BYTE *)(v245 + 8) = *(_BYTE *)(v246 + 8);
                                                      v247 = (v243 + 39) & 0xFFFFFFFFFFFFFFF8;
                                                      v248 = (v244 + 39) & 0xFFFFFFFFFFFFFFF8;
                                                      v249 = *(_QWORD *)v248;
                                                      *(_BYTE *)(v247 + 8) = *(_BYTE *)(v248 + 8);
                                                      *(_QWORD *)v247 = v249;
                                                      v250 = (_QWORD *)((v243 + 55) & 0xFFFFFFFFFFFFF8);
                                                      v251 = (_QWORD *)((v244 + 55) & 0xFFFFFFFFFFFFF8);
                                                      *v250 = *v251;
                                                      *(_QWORD *)(((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v251 + 15) & 0xFFFFFFFFFFFFF8);
                                                      if (v29 > 3)
                                                        goto LABEL_521;
                                                      v252 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                      v253 = 2;
                                                      if (v252 > 0xFFF5)
                                                        v253 = 4;
                                                      if (v252 <= 0xF5)
LABEL_521:
                                                        v253 = 1;
                                                      goto LABEL_676;
                                                    }
                                                    v211 = 9;
LABEL_514:
                                                    *(_WORD *)(v37 + v29) = v211;
                                                  }
LABEL_515:
                                                  v241 = v171 > 0xFFF5;
                                                  v240 = 2;
                                                  if (v241)
                                                    v240 = 4;
                                                  goto LABEL_517;
                                                default:
                                                  if (v29 > 3)
                                                    goto LABEL_305;
                                                  v160 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                                  v161 = 2;
                                                  if (v160 > 0xFFF5)
                                                    v161 = 4;
                                                  if (v160 <= 0xF5)
LABEL_305:
                                                    v161 = 1;
                                                  v162 = v349;
                                                  memcpy((void *)v37, (const void *)v38, v161 + v29);
                                                  goto LABEL_509;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_287:
                                            v157 = *(unsigned __int8 *)(v38 + v29);
                                            if (v157 < 0xA)
                                              goto LABEL_296;
                                          }
LABEL_292:
                                          if (v29 <= 3)
                                            v158 = v29;
                                          else
                                            v158 = 4;
                                          __asm { BR              X12 }
                                        }
                                        v152 = v154 + 10;
                                        if (v154 > 0xF5)
                                        {
                                          v179 = *(unsigned __int16 *)(v38 + v29);
                                          v149 = v179 | 0xFFFF0000;
                                          v150 = v179 ^ 0xFFFF;
                                          v151 = 16;
                                        }
                                        else
                                        {
                                          v155 = *(unsigned __int8 *)(v38 + v29);
                                          v149 = v155 | 0xFFFFFF00;
                                          v150 = v155 ^ 0xFF;
                                          v151 = 8;
                                        }
                                      }
                                      else
                                      {
                                        v148 = *(unsigned __int8 *)(v38 + v29);
                                        v149 = v148 | 0xFFFFFF00;
                                        v150 = v148 ^ 0xFF;
                                        v151 = 8;
                                        v152 = 11;
                                      }
                                      v153 = (1 << v151) - v152;
                                      if ((v153 & 0x80000000) == 0)
                                      {
                                        if (v153 <= v150)
                                          goto LABEL_284;
LABEL_283:
                                        if (!v149)
                                          goto LABEL_284;
LABEL_402:
                                        if (v29 > 3)
                                          goto LABEL_406;
                                        v200 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                                        v201 = 2;
                                        if (v200 > 0xFFF5)
                                          v201 = 4;
                                        if (v200 <= 0xF5)
LABEL_406:
                                          v201 = 1;
                                        v162 = v349;
                                        goto LABEL_479;
                                      }
                                      goto LABEL_282;
                                    }
                                  }
                                  v120 = *(unsigned __int8 *)(v38 + v118);
                                  if (!*(_BYTE *)(v38 + v118))
                                    goto LABEL_272;
LABEL_215:
                                  v122 = (v120 - 1) << v119;
                                  if (v118 > 3)
                                    v122 = 0;
                                  if ((_DWORD)v118)
                                  {
                                    if (v118 > 3)
                                      LODWORD(v118) = 4;
                                    __asm { BR              X12 }
                                  }
                                  if (v114 + v122 == -1)
                                    goto LABEL_284;
                                  goto LABEL_402;
                                }
LABEL_202:
                                v116 = 1;
                                goto LABEL_203;
                              }
LABEL_198:
                              v114 = 0x7FFFFFFF;
                              if (v29 > 3)
                                goto LABEL_202;
                              goto LABEL_199;
                            }
                          }
                          else
                          {
                            v108 = 11;
                          }
                          v113 = 8;
                          goto LABEL_195;
                        }
LABEL_183:
                        if (v29 > 3)
                          goto LABEL_187;
                        v109 = ((1 << (8 * v29)) + 1) >> (8 * v29);
                        v110 = 2;
                        if (v109 > 0xFFF5)
                          v110 = 4;
                        if (v109 <= 0xF5)
LABEL_187:
                          v110 = 1;
                        v111 = *(_QWORD *)(((v29 + v38 + v110) & 0xFFFFFFFFFFFFF8) + 8);
                        if (v111 >= 0xFFFFFFFF)
                          LODWORD(v111) = -1;
                        if ((_DWORD)v111 == -1)
                          goto LABEL_284;
                        goto LABEL_402;
                      }
LABEL_177:
                      v106 = 8;
                      goto LABEL_178;
                    }
                    v98 = v99 + 10;
                    if (v99 > 0xF5)
                    {
                      v100 = 16;
LABEL_167:
                      v101 = (1 << v100) - v98;
                      v102 = 0x7FFFFFFF;
                      if (v101 <= 0x7FFFFFFF)
                        v103 = 0x7FFFFFFF;
                      else
                        v103 = v101;
                      if ((v101 & 0x80000000) == 0)
                        v102 = v103;
                      if (v29 > 3)
                        goto LABEL_173;
                      goto LABEL_175;
                    }
                  }
                  else
                  {
                    v98 = 11;
                  }
                  v100 = 8;
                  goto LABEL_167;
                }
                goto LABEL_74;
              }
              v61 = *(unsigned __int16 *)(v37 + v59);
              if (!*(_WORD *)(v37 + v59))
                goto LABEL_89;
            }
LABEL_82:
            v63 = (v61 - 1) << v60;
            if (v59 > 3)
              v63 = 0;
            if ((_DWORD)v59)
            {
              if (v59 > 3)
                LODWORD(v59) = 4;
              __asm { BR              X12 }
            }
            if (v51 + v63 != -1)
              goto LABEL_162;
            goto LABEL_101;
          }
LABEL_71:
          v57 = 1;
          goto LABEL_72;
        }
LABEL_67:
        v51 = 0x7FFFFFFF;
        if (v29 > 3)
          goto LABEL_71;
        goto LABEL_68;
      }
    }
    else
    {
      v49 = 11;
    }
    v50 = 8;
    goto LABEL_52;
  }
  if (v29 > 3)
    goto LABEL_59;
  v52 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v53 = 2;
  if (v52 > 0xFFF5)
    v53 = 4;
  if (v52 <= 0xF5)
LABEL_59:
    v53 = 1;
  v54 = *(_QWORD *)(((v29 + v37 + v53) & 0xFFFFFFFFFFFFF8) + 8);
  if (v54 >= 0xFFFFFFFF)
    LODWORD(v54) = -1;
  if ((_DWORD)v54 != -1)
    goto LABEL_162;
LABEL_101:
  if (v29 > 3)
  {
    v72 = 11;
    goto LABEL_105;
  }
  v73 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v73 <= 0xFFF5)
  {
    v72 = v73 + 10;
    if (v73 > 0xF5)
    {
      v74 = 16;
LABEL_106:
      v75 = (1 << v74) - v72;
      v76 = 0x7FFFFFFF;
      if (v75 <= 0x7FFFFFFF)
        v77 = 0x7FFFFFFF;
      else
        v77 = v75;
      if ((v75 & 0x80000000) == 0)
        v76 = v77;
      if (v29 > 3)
        goto LABEL_112;
      goto LABEL_114;
    }
LABEL_105:
    v74 = 8;
    goto LABEL_106;
  }
  v76 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_112:
    v78 = 11;
LABEL_116:
    v80 = 8;
    goto LABEL_117;
  }
LABEL_114:
  v79 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v79 > 0xFFF5)
    goto LABEL_121;
  v78 = v79 + 10;
  if (v79 <= 0xF5)
    goto LABEL_116;
  v80 = 16;
LABEL_117:
  v81 = (1 << v80) - v78;
  if ((v81 & 0x80000000) == 0)
  {
    if (v81 == v76)
      goto LABEL_119;
LABEL_122:
    if (v29 > 3)
      goto LABEL_126;
    v83 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    v84 = 2;
    if (v83 > 0xFFF5)
      v84 = 4;
    if (v83 <= 0xF5)
LABEL_126:
      v84 = 1;
    v85 = *(_QWORD *)(((v29 + v38 + v84) & 0xFFFFFFFFFFFFF8) + 8);
    if (v85 >= 0xFFFFFFFF)
      LODWORD(v85) = -1;
    if ((_DWORD)v85 != -1)
      goto LABEL_338;
LABEL_234:
    if (v37 == v38)
    {
LABEL_659:
      if (v29 > 3)
        goto LABEL_663;
      v305 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v306 = 2;
      if (v305 > 0xFFF5)
        v306 = 4;
      if (v305 <= 0xF5)
LABEL_663:
        v306 = 1;
LABEL_670:
      v307 = v306 + v29;
      v308 = v307 + v37;
      v309 = v307 + v38;
      *(_BYTE *)v308 = *(_BYTE *)v309;
      v310 = v308 & 0xFFFFFFFFFFFFFFF8;
      v311 = v309 & 0xFFFFFFFFFFFFFFF8;
      v312 = *(void **)((v308 & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_QWORD *)(v310 + 8) = *(_QWORD *)((v309 & 0xFFFFFFFFFFFFFFF8) + 8);

      v313 = (v310 + 23) & 0xFFFFFFFFFFFFFFF8;
      v314 = (v311 + 23) & 0xFFFFFFFFFFFFFFF8;
      v315 = *(void **)v313;
      *(_QWORD *)v313 = *(_QWORD *)v314;

      *(_BYTE *)(v313 + 8) = *(_BYTE *)(v314 + 8);
      v316 = (v310 + 39) & 0xFFFFFFFFFFFFFFF8;
      v317 = (v311 + 39) & 0xFFFFFFFFFFFFFFF8;
      v318 = *(_QWORD *)v317;
      *(_BYTE *)(v316 + 8) = *(_BYTE *)(v317 + 8);
      *(_QWORD *)v316 = v318;
      v319 = (v310 + 55) & 0xFFFFFFFFFFFFFFF8;
      v320 = (_QWORD *)((v311 + 55) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)v319 = *v320;
      v319 += 15;
      swift_bridgeObjectRelease();
      v321 = *(void **)(v319 & 0xFFFFFFFFFFFFFFF8);
      *(_QWORD *)(v319 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFF8);

      if (v29 > 3)
        goto LABEL_674;
      v322 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v253 = 2;
      if (v322 > 0xFFF5)
        v253 = 4;
      if (v322 <= 0xF5)
LABEL_674:
        v253 = 1;
      v162 = v349;
LABEL_676:
      v323 = ((((((v253 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(_QWORD *)((v37 + v323) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v38 + v323) & 0xFFFFFFFFFFFFF8);
      return v162;
    }
    if (v29 > 3)
      goto LABEL_236;
    v132 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v132 > 0xFFF5)
    {
      v131 = *(_DWORD *)(v37 + v29);
    }
    else
    {
      if (v132 <= 0xF5)
      {
LABEL_236:
        v131 = *(unsigned __int8 *)(v37 + v29);
        goto LABEL_241;
      }
      v131 = *(unsigned __int16 *)(v37 + v29);
    }
LABEL_241:
    if (v131 >= 0xA)
    {
      if (v29 <= 3)
        v133 = v29;
      else
        v133 = 4;
      __asm { BR              X12 }
    }
    v334 = ~v16;
    v338 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
    v339 = v17;
    __n = v22 + 1;
    v345 = v28;
    v346 = v25;
    v344 = *(_DWORD *)(v12 + 84);
    v343 = ~v14;
    v342 = *(_DWORD *)(v15 + 84);
    v341 = v48;
    switch(v131)
    {
      case 0u:
        v206 = v22 + 1;
        v332 = v21 + 1;
        v337 = v16 + 8;
        switch(*(_BYTE *)(v37 + v22))
        {
          case 0:
          case 7:
            goto LABEL_528;
          case 1:
          case 8:
          case 9:
            goto LABEL_526;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_525;
          default:
            if (v22 <= 3)
              v134 = v22;
            else
              v134 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 1u:
        v206 = v22 + 1;
        v332 = v21 + 1;
        v337 = v16 + 8;
        switch(*(_BYTE *)(v37 + v22))
        {
          case 0:
          case 7:
            goto LABEL_528;
          case 1:
          case 8:
          case 9:
LABEL_526:

            goto LABEL_527;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
LABEL_525:
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v348);
LABEL_527:
            v206 = v22 + 1;
LABEL_528:
            v254 = ((v37 | 7) + v206) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v254 + 8) >= 0xFFFFFFFFuLL)
            {
              swift_bridgeObjectRelease();
              sub_1B41E9C70(*(void **)(v254 + 16), *(_QWORD *)(v254 + 24), *(_QWORD *)(v254 + 32), *(_QWORD *)(v254 + 40), *(_QWORD *)(v254 + 48), *(_QWORD *)(v254 + 56), *(_BYTE *)(v254 + 64));
              v255 = *(unsigned __int8 *)(v254 + 120);
              if (v255 != 255)
                sub_1B41E9C98(*(void **)(v254 + 72), *(_QWORD *)(v254 + 80), *(_QWORD *)(v254 + 88), *(_QWORD *)(v254 + 96), *(_QWORD *)(v254 + 104), *(_QWORD *)(v254 + 112), v255 & 1);
            }

            v28 = v345;
            v25 = v346;
            v26 = v337;
            v39 = v344;
            v40 = v332;
            v45 = v343;
            v46 = v342;
            v48 = v341;
            if (v29 <= 3)
              goto LABEL_532;
            goto LABEL_438;
          default:
            if (v22 <= 3)
              v135 = v22;
            else
              v135 = 4;
            __asm { BR              X12 }
            return result;
        }
      case 2u:
        v335 = v16 + 8;
        v136 = v21 + 1;

        v48 = v341;
        v46 = v342;
        v45 = v343;
        v40 = v21 + 1;
        v39 = v344;
        v26 = v16 + 8;
        v28 = v345;
        v25 = v346;
        v137 = (id *)((v346 + v37) & v343);
        switch(*((_BYTE *)v137 + v22))
        {
          case 1:
          case 8:
          case 9:
            goto LABEL_428;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_260;
          default:
            goto LABEL_437;
        }
        goto LABEL_437;
      case 3u:
        v335 = v16 + 8;
        v136 = v21 + 1;

        v48 = v341;
        v46 = v342;
        v45 = v343;
        v40 = v21 + 1;
        v39 = v344;
        v26 = v16 + 8;
        v28 = v345;
        v25 = v346;
        v137 = (id *)((v346 + v37) & v343);
        switch(*((_BYTE *)v137 + v22))
        {
          case 1:
          case 8:
          case 9:
            goto LABEL_428;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
            goto LABEL_260;
          default:
            goto LABEL_437;
        }
        goto LABEL_437;
      case 4u:
        v335 = v16 + 8;
        v136 = v21 + 1;

        v48 = v341;
        v46 = v342;
        v45 = v343;
        v40 = v21 + 1;
        v39 = v344;
        v26 = v16 + 8;
        v28 = v345;
        v25 = v346;
        v137 = (id *)((v346 + v37) & v343);
        switch(*((_BYTE *)v137 + v22))
        {
          case 1:
          case 8:
          case 9:
LABEL_428:

            goto LABEL_429;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
LABEL_260:
            (*(void (**)(void))(v12 + 8))();
LABEL_429:
            v48 = v341;
            v46 = v342;
            v45 = v343;
            v40 = v136;
            goto LABEL_435;
          default:
            goto LABEL_437;
        }
      case 5u:
        v138 = *(id *)(v37 + 16);
        goto LABEL_268;
      case 6u:
        v138 = *(id *)v37;
LABEL_268:
        v143 = v16 + 8;
        v333 = v22;
        v145 = v38;
        v146 = v21 + 1;

        goto LABEL_427;
      case 7u:
        if ((v46 & 0x80000000) != 0)
        {
          v140 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v37 + v16 + 8) & v334, v46, v347);
          v48 = v341;
          v46 = v342;
          v45 = ~v14;
          v40 = v21 + 1;
          v39 = v344;
          v26 = v16 + 8;
          v28 = v345;
          v25 = v346;
        }
        else
        {
          v139 = *(id *)v37;
          if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
            LODWORD(v139) = -1;
          v140 = (_DWORD)v139 + 1;
        }
        if (!v140)
        {
          v336 = v26;
          v208 = v40;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v37 + v16 + 8) & v334, v347);
          v48 = v341;
          v46 = v342;
          v45 = v343;
          v40 = v208;
          v39 = v344;
          v26 = v336;
          v28 = v345;
          v25 = v346;
        }
        v209 = ((v37 | 7) + v338) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v209 + 8) < 0xFFFFFFFFuLL)
          goto LABEL_437;
        v335 = v26;
        v331 = v40;
        swift_bridgeObjectRelease();

        v48 = v341;
        v46 = v342;
        v45 = v343;
        v40 = v331;
LABEL_435:
        v39 = v344;
        v26 = v335;
        goto LABEL_436;
      case 8u:
        v333 = v22;
        if (v39 < 0xFD)
        {
          v207 = *(unsigned __int8 *)(v37 + v21);
          if (v207 < 3)
            goto LABEL_425;
          v147 = v207 - 2;
        }
        else
        {
          v147 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
          v48 = v341;
          v46 = v342;
          v45 = ~v14;
          v40 = v21 + 1;
          v39 = v344;
          v26 = v16 + 8;
          v28 = v345;
          v25 = v346;
        }
        if (v147)
          goto LABEL_437;
LABEL_425:
        v142 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v141 = v37;
        v143 = v26;
        v144 = v348;
LABEL_426:
        v145 = v38;
        v146 = v40;
        v142(v141, v144);
LABEL_427:
        v48 = v341;
        v46 = v342;
        v45 = v343;
        v40 = v146;
        v38 = v145;
        v22 = v333;
        v39 = v344;
        v26 = v143;
LABEL_436:
        v28 = v345;
        v25 = v346;
LABEL_437:
        if (v29 > 3)
          goto LABEL_438;
LABEL_532:
        v256 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v256 > 0xFFF5)
        {
          v210 = *(_DWORD *)(v38 + v29);
        }
        else if (v256 <= 0xF5)
        {
LABEL_438:
          v210 = *(unsigned __int8 *)(v38 + v29);
        }
        else
        {
          v210 = *(unsigned __int16 *)(v38 + v29);
        }
        if (v210 >= 0xA)
        {
          if (v29 <= 3)
            v257 = v29;
          else
            v257 = 4;
          __asm { BR              X12 }
        }
        return result;
      case 9u:
        v141 = (v28 + v37) & v48;
        v142 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
        v143 = v16 + 8;
        v144 = v339;
        v333 = v22;
        goto LABEL_426;
      default:
        goto LABEL_437;
    }
    switch(v210)
    {
      case 0u:
        switch(*(_BYTE *)(v38 + v22))
        {
          case 0:
            v285 = 0;
            *(_BYTE *)v37 = *(_BYTE *)v38;
            break;
          case 1:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v285 = 1;
            break;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v285 = 2;
            break;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v285 = 3;
            break;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v285 = 4;
            break;
          case 5:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v285 = 5;
            break;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v285 = 6;
            break;
          case 7:
            v287 = *(_OWORD *)v38;
            *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
            *(_OWORD *)v37 = v287;
            v285 = 7;
            break;
          case 8:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v285 = 8;
            break;
          case 9:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v285 = 9;
            break;
          default:
            if (v22 <= 3)
              v258 = v22;
            else
              v258 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v37 + v22) = v285;
        v289 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
        v290 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
        v291 = *(_OWORD *)v290;
        v292 = *(_OWORD *)(v290 + 16);
        v293 = *(_OWORD *)(v290 + 48);
        *(_OWORD *)(v289 + 32) = *(_OWORD *)(v290 + 32);
        *(_OWORD *)(v289 + 48) = v293;
        *(_OWORD *)v289 = v291;
        *(_OWORD *)(v289 + 16) = v292;
        v294 = *(_OWORD *)(v290 + 64);
        v295 = *(_OWORD *)(v290 + 80);
        v296 = *(_OWORD *)(v290 + 96);
        *(_OWORD *)(v289 + 106) = *(_OWORD *)(v290 + 106);
        *(_OWORD *)(v289 + 80) = v295;
        *(_OWORD *)(v289 + 96) = v296;
        *(_OWORD *)(v289 + 64) = v294;
        *(_BYTE *)(v289 + 122) = *(_BYTE *)(v290 + 122);
        *(_BYTE *)(v289 + 123) = *(_BYTE *)(v290 + 123);
        *(_BYTE *)(v289 + 124) = *(_BYTE *)(v290 + 124);
        *(_BYTE *)(v289 + 125) = *(_BYTE *)(v290 + 125);
        *(_BYTE *)(v289 + 126) = *(_BYTE *)(v290 + 126);
        *(_QWORD *)((v289 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v290 + 134) & 0xFFFFFFFFFFFFF8);
        if (v29 > 3)
          goto LABEL_649;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          *(_DWORD *)(v37 + v29) = 0;
        }
        else
        {
          if (v273 <= 0xF5)
          {
LABEL_649:
            *(_BYTE *)(v37 + v29) = 0;
            goto LABEL_659;
          }
          *(_WORD *)(v37 + v29) = 0;
        }
        goto LABEL_668;
      case 1u:
        switch(*(_BYTE *)(v38 + v22))
        {
          case 0:
            v286 = 0;
            *(_BYTE *)v37 = *(_BYTE *)v38;
            break;
          case 1:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v286 = 1;
            break;
          case 2:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v286 = 2;
            break;
          case 3:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v286 = 3;
            break;
          case 4:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v286 = 4;
            break;
          case 5:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v286 = 5;
            break;
          case 6:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
            v286 = 6;
            break;
          case 7:
            v288 = *(_OWORD *)v38;
            *(_OWORD *)(v37 + 9) = *(_OWORD *)(v38 + 9);
            *(_OWORD *)v37 = v288;
            v286 = 7;
            break;
          case 8:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v286 = 8;
            break;
          case 9:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            v286 = 9;
            break;
          default:
            if (v22 <= 3)
              v259 = v22;
            else
              v259 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v37 + v22) = v286;
        v297 = ((v37 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
        v298 = (v22 + v38 + 8) & 0xFFFFFFFFFFFFFFF8;
        v299 = *(_OWORD *)v298;
        v300 = *(_OWORD *)(v298 + 16);
        v301 = *(_OWORD *)(v298 + 48);
        *(_OWORD *)(v297 + 32) = *(_OWORD *)(v298 + 32);
        *(_OWORD *)(v297 + 48) = v301;
        *(_OWORD *)v297 = v299;
        *(_OWORD *)(v297 + 16) = v300;
        v302 = *(_OWORD *)(v298 + 64);
        v303 = *(_OWORD *)(v298 + 80);
        v304 = *(_OWORD *)(v298 + 96);
        *(_OWORD *)(v297 + 106) = *(_OWORD *)(v298 + 106);
        *(_OWORD *)(v297 + 80) = v303;
        *(_OWORD *)(v297 + 96) = v304;
        *(_OWORD *)(v297 + 64) = v302;
        *(_BYTE *)(v297 + 122) = *(_BYTE *)(v298 + 122);
        *(_BYTE *)(v297 + 123) = *(_BYTE *)(v298 + 123);
        *(_BYTE *)(v297 + 124) = *(_BYTE *)(v298 + 124);
        *(_BYTE *)(v297 + 125) = *(_BYTE *)(v298 + 125);
        *(_BYTE *)(v297 + 126) = *(_BYTE *)(v298 + 126);
        *(_QWORD *)((v297 + 134) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v298 + 134) & 0xFFFFFFFFFFFFF8);
        if (v29 > 3)
          goto LABEL_657;
        v284 = 1;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
          goto LABEL_667;
        if (v273 <= 0xF5)
        {
LABEL_657:
          v267 = 1;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 1;
        goto LABEL_668;
      case 2u:
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v260 = (_BYTE *)((v25 + v37) & v45);
        v261 = (_BYTE *)((v25 + v38) & v45);
        switch(v261[v22])
        {
          case 0:
            *v260 = *v261;
            v260[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v260 = *(_QWORD *)v261;
            v260[v22] = 1;
            break;
          case 2:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v260[v22] = 2;
            break;
          case 3:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v260[v22] = 3;
            break;
          case 4:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v260[v22] = 4;
            break;
          case 5:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v260[v22] = 5;
            break;
          case 6:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v260[v22] = 6;
            break;
          case 7:
            v328 = *(_OWORD *)v261;
            *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
            *(_OWORD *)v260 = v328;
            v260[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v260 = *(_QWORD *)v261;
            v260[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v260 = *(_QWORD *)v261;
            v260[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v37) & v45), v261, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_578;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 2;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_578:
          v267 = 2;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 2;
        goto LABEL_668;
      case 3u:
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v262 = (_BYTE *)((v25 + v37) & v45);
        v263 = (_BYTE *)((v25 + v38) & v45);
        switch(v263[v22])
        {
          case 0:
            *v262 = *v263;
            v262[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v262 = *(_QWORD *)v263;
            v262[v22] = 1;
            break;
          case 2:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v262[v22] = 2;
            break;
          case 3:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v262[v22] = 3;
            break;
          case 4:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v262[v22] = 4;
            break;
          case 5:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v262[v22] = 5;
            break;
          case 6:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v262[v22] = 6;
            break;
          case 7:
            v329 = *(_OWORD *)v263;
            *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
            *(_OWORD *)v262 = v329;
            v262[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v262 = *(_QWORD *)v263;
            v262[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v262 = *(_QWORD *)v263;
            v262[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v37) & v45), v263, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_581;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 3;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_581:
          v267 = 3;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 3;
        goto LABEL_668;
      case 4u:
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v264 = (_BYTE *)((v25 + v37) & v45);
        v265 = (_BYTE *)((v25 + v38) & v45);
        switch(v265[v22])
        {
          case 0:
            *v264 = *v265;
            v264[v22] = 0;
            break;
          case 1:
            *(_QWORD *)v264 = *(_QWORD *)v265;
            v264[v22] = 1;
            break;
          case 2:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v264[v22] = 2;
            break;
          case 3:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v264[v22] = 3;
            break;
          case 4:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v264[v22] = 4;
            break;
          case 5:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v264[v22] = 5;
            break;
          case 6:
            (*(void (**)(uint64_t))(v12 + 32))((v25 + v37) & v45);
            v264[v22] = 6;
            break;
          case 7:
            v330 = *(_OWORD *)v265;
            *(_OWORD *)(((v25 + v37) & v45) + 9) = *(_OWORD *)(((v25 + v38) & v45) + 9);
            *(_OWORD *)v264 = v330;
            v264[v22] = 7;
            break;
          case 8:
            *(_QWORD *)v264 = *(_QWORD *)v265;
            v264[v22] = 8;
            break;
          case 9:
            *(_QWORD *)v264 = *(_QWORD *)v265;
            v264[v22] = 9;
            break;
          default:
            memcpy((void *)((v25 + v37) & v45), v265, __n);
            break;
        }
        if (v29 > 3)
          goto LABEL_584;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 4;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_584:
          v267 = 4;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 4;
        goto LABEL_668;
      case 5u:
        v266 = *(_OWORD *)v38;
        *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
        *(_OWORD *)v37 = v266;
        if (v29 > 3)
          goto LABEL_557;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 5;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_557:
          v267 = 5;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 5;
        goto LABEL_668;
      case 6u:
        *(_QWORD *)v37 = *(_QWORD *)v38;
        if (v29 > 3)
          goto LABEL_573;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 6;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_573:
          v267 = 6;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 6;
        goto LABEL_668;
      case 7u:
        if ((v46 & 0x80000000) != 0)
        {
          v268 = v26;
          v270 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v26 + v38) & v334, v46, v347);
        }
        else
        {
          v268 = v26;
          v269 = *(_QWORD *)v38;
          if (*(_QWORD *)v38 >= 0xFFFFFFFFuLL)
            LODWORD(v269) = -1;
          v270 = v269 + 1;
        }
        if (v270)
        {
          v280 = v338;
          memcpy((void *)v37, (const void *)v38, v338);
        }
        else
        {
          *(_QWORD *)v37 = *(_QWORD *)v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))((v37 + v16 + 8) & v334, (v268 + v38) & v334, v347);
          v280 = v338;
        }
        v281 = ((v38 | 7) + v280) & 0xFFFFFFFFFFFFFFF8;
        v282 = *(_OWORD *)v281;
        v283 = ((v37 | 7) + v280) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)(v283 + 16) = *(_QWORD *)(v281 + 16);
        *(_OWORD *)v283 = v282;
        if (v29 > 3)
          goto LABEL_614;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 7;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_614:
          v267 = 7;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 7;
        goto LABEL_668;
      case 8u:
        if (v39 < 0xFD)
        {
          v276 = *(unsigned __int8 *)(v38 + v21);
          if (v276 < 3)
            goto LABEL_604;
          v275 = v276 - 2;
        }
        else
        {
          v274 = v40;
          v275 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v38);
          v40 = v274;
        }
        if (v275)
        {
          v277 = v40;
          memcpy((void *)v37, (const void *)v38, v40);
          v278 = v277;
          goto LABEL_605;
        }
LABEL_604:
        v279 = v40;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v37, v38, v348);
        v278 = v279;
        *(_BYTE *)(v37 + v21) = *(_BYTE *)(v38 + v21);
LABEL_605:
        *(_QWORD *)(((v37 | 7) + v278) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v38 | 7) + v278) & 0xFFFFFFFFFFFFF8);
        if (v29 > 3)
          goto LABEL_608;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 8;
          goto LABEL_667;
        }
        if (v273 <= 0xF5)
        {
LABEL_608:
          v267 = 8;
          goto LABEL_658;
        }
        *(_WORD *)(v37 + v29) = 8;
        goto LABEL_668;
      case 9u:
        *(_BYTE *)v37 = *(_BYTE *)v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))((v28 + v37) & v48, (v28 + v38) & v48, v339);
        if (v29 > 3)
          goto LABEL_563;
        v273 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v273 > 0xFFF5)
        {
          v284 = 9;
LABEL_667:
          *(_DWORD *)(v37 + v29) = v284;
          goto LABEL_668;
        }
        if (v273 > 0xF5)
        {
          *(_WORD *)(v37 + v29) = 9;
LABEL_668:
          v241 = v273 > 0xFFF5;
          v306 = 2;
          if (v241)
            v306 = 4;
          goto LABEL_670;
        }
LABEL_563:
        v267 = 9;
LABEL_658:
        *(_BYTE *)(v37 + v29) = v267;
        break;
      default:
        if (v29 > 3)
          goto LABEL_568;
        v271 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        v272 = 2;
        if (v271 > 0xFFF5)
          v272 = 4;
        if (v271 <= 0xF5)
LABEL_568:
          v272 = 1;
        memcpy((void *)v37, (const void *)v38, v272 + v29);
        goto LABEL_659;
    }
    goto LABEL_659;
  }
LABEL_121:
  if (v76 != 0x7FFFFFFF)
    goto LABEL_122;
LABEL_119:
  if (v29 > 3)
  {
    v82 = 11;
LABEL_133:
    v87 = 8;
    goto LABEL_134;
  }
  v86 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v86 > 0xFFF5)
    goto LABEL_137;
  v82 = v86 + 10;
  if (v86 <= 0xF5)
    goto LABEL_133;
  v87 = 16;
LABEL_134:
  v88 = (1 << v87) - v82;
  if ((v88 & 0x80000000) == 0)
  {
    if (v29 > 3)
      goto LABEL_141;
    goto LABEL_138;
  }
LABEL_137:
  v88 = 0x7FFFFFFF;
  if (v29 > 3)
  {
LABEL_141:
    v90 = 1;
    goto LABEL_142;
  }
LABEL_138:
  v89 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v90 = 2;
  if (v89 > 0xFFF5)
    v90 = 4;
  if (v89 <= 0xF5)
    goto LABEL_141;
LABEL_142:
  v91 = v76 - v88;
  if (v76 <= v88)
    goto LABEL_222;
  v92 = v90 + v29;
  v93 = 8 * (v90 + v29);
  if (v92 > 3)
  {
LABEL_144:
    v94 = *(unsigned __int8 *)(v38 + v92);
    if (!*(_BYTE *)(v38 + v92))
      goto LABEL_222;
    goto LABEL_154;
  }
  v95 = ((v91 + ~(-1 << v93)) >> v93) + 1;
  if (HIWORD(v95))
  {
    v94 = *(_DWORD *)(v38 + v92);
    if (!v94)
      goto LABEL_222;
LABEL_154:
    v96 = (v94 - 1) << v93;
    if (v92 > 3)
      v96 = 0;
    if ((_DWORD)v92)
    {
      if (v92 > 3)
        LODWORD(v92) = 4;
      __asm { BR              X12 }
    }
    if (v88 + v96 != -1)
      goto LABEL_338;
    goto LABEL_234;
  }
  if (v95 > 0xFF)
  {
    v94 = *(unsigned __int16 *)(v38 + v92);
    if (!*(_WORD *)(v38 + v92))
      goto LABEL_222;
    goto LABEL_154;
  }
  if (v95 >= 2)
    goto LABEL_144;
LABEL_222:
  if (!v88)
    goto LABEL_234;
  if (v29 <= 3)
  {
    v129 = ((1 << (8 * v29)) + 1) >> (8 * v29);
    if (v129 > 0xFFF5)
    {
      v124 = *(_DWORD *)(v38 + v29);
      v125 = ~v124;
      goto LABEL_232;
    }
    v127 = v129 + 10;
    if (v129 > 0xF5)
    {
      v178 = *(unsigned __int16 *)(v38 + v29);
      v124 = v178 | 0xFFFF0000;
      v125 = v178 ^ 0xFFFF;
      v126 = 16;
    }
    else
    {
      v130 = *(unsigned __int8 *)(v38 + v29);
      v124 = v130 | 0xFFFFFF00;
      v125 = v130 ^ 0xFF;
      v126 = 8;
    }
  }
  else
  {
    v123 = *(unsigned __int8 *)(v38 + v29);
    v124 = v123 | 0xFFFFFF00;
    v125 = v123 ^ 0xFF;
    v126 = 8;
    v127 = 11;
  }
  v128 = (1 << v126) - v127;
  if ((v128 & 0x80000000) == 0)
  {
    if (v128 <= v125)
      goto LABEL_234;
    goto LABEL_233;
  }
LABEL_232:
  if (v125 >= 0x7FFFFFFF)
    goto LABEL_234;
LABEL_233:
  if (!v124)
    goto LABEL_234;
LABEL_338:
  if (v29 > 3)
    goto LABEL_341;
  v180 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  if (v180 <= 0xFFF5)
  {
    if (v180 > 0xF5)
    {
      v181 = *(unsigned __int16 *)(v37 + v29);
      if (v181 < 0xA)
        goto LABEL_350;
      goto LABEL_346;
    }
LABEL_341:
    v181 = *(unsigned __int8 *)(v37 + v29);
    if (v181 < 0xA)
      goto LABEL_350;
LABEL_346:
    if (v29 <= 3)
      v182 = v29;
    else
      v182 = 4;
    __asm { BR              X12 }
  }
  v181 = *(_DWORD *)(v37 + v29);
  if (v181 >= 0xA)
    goto LABEL_346;
LABEL_350:
  switch(v181)
  {
    case 0u:
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_464;
        case 1:
        case 8:
        case 9:
          goto LABEL_462;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_461;
        default:
          if (v22 <= 3)
            v183 = v22;
          else
            v183 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 1u:
      switch(*(_BYTE *)(v37 + v22))
      {
        case 0:
        case 7:
          goto LABEL_464;
        case 1:
        case 8:
        case 9:
LABEL_462:
          v214 = v22 + 1;

          goto LABEL_463;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_461:
          v214 = v22 + 1;
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v348);
LABEL_463:
          v23 = v214;
LABEL_464:
          v215 = ((v37 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v215 + 8) >= 0xFFFFFFFFuLL)
          {
            swift_bridgeObjectRelease();
            sub_1B41E9C70(*(void **)(v215 + 16), *(_QWORD *)(v215 + 24), *(_QWORD *)(v215 + 32), *(_QWORD *)(v215 + 40), *(_QWORD *)(v215 + 48), *(_QWORD *)(v215 + 56), *(_BYTE *)(v215 + 64));
            v216 = *(unsigned __int8 *)(v215 + 120);
            if (v216 != 255)
              sub_1B41E9C98(*(void **)(v215 + 72), *(_QWORD *)(v215 + 80), *(_QWORD *)(v215 + 88), *(_QWORD *)(v215 + 96), *(_QWORD *)(v215 + 104), *(_QWORD *)(v215 + 112), v216 & 1);
          }
          v192 = *(id *)((v215 + 134) & 0xFFFFFFFFFFFFF8);
          break;
        default:
          if (v22 <= 3)
            v184 = v22;
          else
            v184 = 4;
          __asm { BR              X12 }
          return result;
      }
      goto LABEL_468;
    case 2u:
      v185 = v25;
      v186 = v45;

      v187 = (void **)((v185 + v37) & v186);
      switch(*((_BYTE *)v187 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_408;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_362;
        default:
          goto LABEL_469;
      }
      goto LABEL_469;
    case 3u:
      v188 = v25;
      v189 = v45;

      v187 = (void **)((v188 + v37) & v189);
      switch(*((_BYTE *)v187 + v22))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_408;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_362;
        default:
          goto LABEL_469;
      }
      goto LABEL_469;
    case 4u:
      v190 = v25;
      v191 = v45;

      v187 = (void **)((v190 + v37) & v191);
      switch(*((_BYTE *)v187 + v22))
      {
        case 1:
        case 8:
        case 9:
LABEL_408:
          v192 = *v187;
          goto LABEL_468;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_362:
          (*(void (**)(void **, uint64_t))(v12 + 8))(v187, v348);
          break;
        default:
          goto LABEL_469;
      }
      goto LABEL_469;
    case 5u:
      v192 = *(id *)(v37 + 16);
      goto LABEL_468;
    case 6u:
      v192 = *(id *)v37;
      goto LABEL_468;
    case 7u:
      v193 = *(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16);
      if ((v46 & 0x80000000) != 0)
      {
        v195 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v15 + 48))((v37 + v16 + 8) & v47, *(unsigned int *)(v15 + 84), v347);
      }
      else
      {
        v194 = *(id *)v37;
        if (*(_QWORD *)v37 >= 0xFFFFFFFFuLL)
          LODWORD(v194) = -1;
        v195 = (_DWORD)v194 + 1;
      }
      if (!v195)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v37 + v16 + 8) & ~v16, v347);
      }
      v202 = ((v37 | 7) + v193) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v202 + 8) < 0xFFFFFFFFuLL)
        goto LABEL_469;
      swift_bridgeObjectRelease();
      v192 = *(id *)(v202 + 16);
LABEL_468:

      goto LABEL_469;
    case 8u:
      if (v39 < 0xFD)
      {
        v199 = *(unsigned __int8 *)(v37 + v21);
        if (v199 < 3)
          goto LABEL_399;
        v196 = v199 - 2;
      }
      else
      {
        v196 = (*(uint64_t (**)(uint64_t))(v12 + 48))(v37);
      }
      if (v196)
        goto LABEL_469;
LABEL_399:
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v348);
LABEL_469:
      if (v29 > 3)
        goto LABEL_473;
      v217 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v218 = 2;
      if (v217 > 0xFFF5)
        v218 = 4;
      if (v217 <= 0xF5)
LABEL_473:
        v218 = 1;
      v162 = v349;
      v219 = (v29 + v37 + v218) & 0xFFFFFFFFFFFFFFF8;

      swift_bridgeObjectRelease();
      if (v29 > 3)
        goto LABEL_478;
      v220 = ((1 << (8 * v29)) + 1) >> (8 * v29);
      v201 = 2;
      if (v220 > 0xFFF5)
        v201 = 4;
      if (v220 <= 0xF5)
LABEL_478:
        v201 = 1;
      break;
    case 9u:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))((v28 + v37) & v48, v17);
      goto LABEL_469;
    default:
      goto LABEL_469;
  }
LABEL_479:
  memcpy((void *)v37, (const void *)v38, ((((((((v201 + v29) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
  return v162;
}

uint64_t sub_1B430A5E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  char v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  char v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t result;
  int v65;
  char v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  char v71;
  int v72;
  int v73;
  char v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  unsigned int v80;
  unint64_t v81;
  char v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  char v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  uint64_t v101;

  v101 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v101 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_QWORD *)(sub_1B49037E8() - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = 25;
  if (v9 > 0x19)
    v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_DWORD *)(v8 + 80) & 0xF8;
  v12 = v11 | 7;
  v13 = v10 + ((v11 + 15) & ~(v11 | 7));
  v14 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = *(_QWORD *)(sub_1B49046DC() - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((*(_QWORD *)(v15 + 64) + ((v16 + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v13 + 1 > v14)
    v18 = v13 + 1;
  else
    v18 = v14;
  if (v18 > v17)
    v17 = v18;
  if (v17 <= (v9 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v19 = v17;
  v20 = *(_QWORD *)(sub_1B4905C78() - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((v21 + 1) & ~v21) + *(_QWORD *)(v20 + 64);
  if (v19 > v22)
    v22 = v19;
  if (v22 <= 0x18)
    v22 = 24;
  v23 = 8 * v22;
  if (v22 > 3)
  {
    v24 = 11;
LABEL_20:
    v25 = 8;
    goto LABEL_21;
  }
  v29 = ((1 << v23) + 1) >> v23;
  if (v29 > 0xFFF5)
  {
LABEL_29:
    v28 = 2147483646;
    goto LABEL_30;
  }
  v24 = v29 + 10;
  if (v29 <= 0xF5)
    goto LABEL_20;
  v25 = 16;
LABEL_21:
  v26 = (1 << v25) - v24;
  if (v26 <= 0x7FFFFFFF)
    v27 = 0x7FFFFFFF;
  else
    v27 = v26;
  if ((v26 & 0x80000000) != 0)
    goto LABEL_29;
  v28 = v27 - 1;
LABEL_30:
  if (v28 <= v7)
    v30 = v7;
  else
    v30 = v28;
  v31 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v31;
  if (v22 > 3)
    goto LABEL_39;
  v32 = ((1 << v23) + 1) >> v23;
  v33 = 2;
  if (v32 > 0xFFF5)
    v33 = 4;
  if (v32 <= 0xF5)
LABEL_39:
    v33 = 1;
  if (!a2)
    return 0;
  v34 = v16 | v12 | v21;
  v35 = v31 + v34;
  if (a2 > v30)
  {
    v36 = (v35 & ~v34)
        + ((((((((v33 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    v37 = 8 * v36;
    if (v36 > 3)
      goto LABEL_43;
    v39 = ((a2 - v30 + ~(-1 << v37)) >> v37) + 1;
    if (HIWORD(v39))
    {
      v38 = *(_DWORD *)(a1 + v36);
      if (!v38)
        goto LABEL_59;
      goto LABEL_50;
    }
    if (v39 > 0xFF)
    {
      v38 = *(unsigned __int16 *)(a1 + v36);
      if (!*(_WORD *)(a1 + v36))
        goto LABEL_59;
      goto LABEL_50;
    }
    if (v39 >= 2)
    {
LABEL_43:
      v38 = *(unsigned __int8 *)(a1 + v36);
      if (!*(_BYTE *)(a1 + v36))
        goto LABEL_59;
LABEL_50:
      v40 = (v38 - 1) << v37;
      if (v36 > 3)
        v40 = 0;
      if ((_DWORD)v36)
      {
        if (v36 <= 3)
          v41 = v36;
        else
          v41 = 4;
        __asm { BR              X11 }
      }
      return v30 + v40 + 1;
    }
  }
LABEL_59:
  if (v22 > 3)
  {
    v42 = 11;
LABEL_61:
    v43 = 8;
    goto LABEL_62;
  }
  v47 = ((1 << v23) + 1) >> v23;
  if (v47 > 0xFFF5)
  {
LABEL_70:
    v46 = 2147483646;
    goto LABEL_71;
  }
  v42 = v47 + 10;
  if (v47 <= 0xF5)
    goto LABEL_61;
  v43 = 16;
LABEL_62:
  v44 = (1 << v43) - v42;
  if (v44 <= 0x7FFFFFFF)
    v45 = 0x7FFFFFFF;
  else
    v45 = v44;
  if ((v44 & 0x80000000) != 0)
    goto LABEL_70;
  v46 = v45 - 1;
LABEL_71:
  if (v46 <= v7)
    v48 = v7;
  else
    v48 = v46;
  if (v7 < v46)
  {
    v49 = ~v34;
    v50 = v35 + a1;
    if (v22 <= 3)
    {
      v57 = ((1 << v23) + 1) >> v23;
      if (v57 > 0xFFF5)
        goto LABEL_90;
      v51 = v57 + 10;
      if (v57 > 0xF5)
      {
        v52 = 16;
LABEL_78:
        v53 = (1 << v52) - v51;
        if (v53 <= 0x7FFFFFFF)
          v54 = 0x7FFFFFFF;
        else
          v54 = v53;
        if ((v53 & 0x80000000) == 0)
        {
          v55 = v54 - 1;
LABEL_91:
          v58 = v50 & v49;
          if (v22 > 3)
            goto LABEL_95;
          v59 = ((1 << v23) + 1) >> v23;
          v60 = 2;
          if (v59 > 0xFFF5)
            v60 = 4;
          if (v59 <= 0xF5)
LABEL_95:
            v60 = 1;
          if (v48 > v55)
          {
            if (((((((((((v60 + v22) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 8) & 0xFFFFFFF8) != 0)
              v61 = 2;
            else
              v61 = v48 - v55 + 1;
            if (v61 >= 0x10000)
              v62 = 4;
            else
              v62 = 2;
            if (v61 < 0x100)
              v62 = 1;
            if (v61 >= 2)
              v63 = v62;
            else
              v63 = 0;
            __asm { BR              X16 }
          }
          if (v22 <= 3)
          {
            v76 = ((1 << v23) + 1) >> v23;
            if (v76 > 0xFFF5)
            {
              v68 = 0x7FFFFFFF;
              if (v22 > 3)
              {
LABEL_118:
                v70 = 11;
                goto LABEL_119;
              }
LABEL_143:
              v84 = ((1 << v23) + 1) >> v23;
              if (v84 > 0xFFF5)
                goto LABEL_146;
              v70 = v84 + 10;
              if (v84 > 0xF5)
              {
                v71 = 16;
LABEL_120:
                v72 = (1 << v71) - v70;
                if ((v72 & 0x80000000) == 0)
                {
                  if (v72 == v68)
                    goto LABEL_122;
                  goto LABEL_147;
                }
LABEL_146:
                if (v68 == 0x7FFFFFFF)
                {
LABEL_122:
                  if (v22 <= 3)
                  {
                    v77 = ((1 << v23) + 1) >> v23;
                    if (v77 > 0xFFF5)
                      goto LABEL_134;
                    v73 = v77 + 10;
                    if (v77 > 0xF5)
                    {
                      v74 = 16;
LABEL_125:
                      v75 = (1 << v74) - v73;
                      if ((v75 & 0x80000000) == 0)
                      {
                        if (v22 > 3)
                          goto LABEL_138;
LABEL_135:
                        v78 = ((1 << v23) + 1) >> v23;
                        v79 = 2;
                        if (v78 > 0xFFF5)
                          v79 = 4;
                        if (v78 > 0xF5)
                        {
LABEL_139:
                          v80 = v68 - v75;
                          if (v68 <= v75)
                            goto LABEL_169;
                          v81 = v79 + v22;
                          v82 = 8 * (v79 + v22);
                          if (v81 > 3)
                          {
LABEL_141:
                            v83 = *(unsigned __int8 *)(v58 + v81);
                            goto LABEL_161;
                          }
                          v89 = ((v80 + ~(-1 << v82)) >> v82) + 1;
                          if (HIWORD(v89))
                          {
                            v83 = *(_DWORD *)(v58 + v81);
                          }
                          else
                          {
                            if (v89 <= 0xFF)
                            {
                              if (v89 < 2)
                                goto LABEL_169;
                              goto LABEL_141;
                            }
                            v83 = *(unsigned __int16 *)(v58 + v81);
                          }
LABEL_161:
                          if (v83)
                          {
                            v90 = (v83 - 1) << v82;
                            if (v81 > 3)
                              v90 = 0;
                            if ((_DWORD)v81)
                            {
                              if (v81 <= 3)
                                v91 = v81;
                              else
                                v91 = 4;
                              __asm { BR              X13 }
                            }
                            v88 = v75 + v90 + 1;
                            goto LABEL_183;
                          }
LABEL_169:
                          if (!v75)
                            return 0;
                          if (v22 <= 3)
                          {
                            v98 = ((1 << v23) + 1) >> v23;
                            if (v98 > 0xFFF5)
                            {
                              v93 = *(_DWORD *)(v58 + v22);
                              v94 = ~v93;
LABEL_178:
                              v97 = 0x7FFFFFFF;
LABEL_179:
                              if (v97 > v94)
                              {
                                v88 = -v93;
                                goto LABEL_183;
                              }
                              return 0;
                            }
                            v96 = v98 + 10;
                            if (v98 > 0xF5)
                            {
                              v100 = *(unsigned __int16 *)(v58 + v22);
                              v93 = v100 | 0xFFFF0000;
                              v94 = v100 ^ 0xFFFF;
                              v95 = 16;
                            }
                            else
                            {
                              v99 = *(unsigned __int8 *)(v58 + v22);
                              v93 = v99 | 0xFFFFFF00;
                              v94 = v99 ^ 0xFF;
                              v95 = 8;
                            }
                          }
                          else
                          {
                            v92 = *(unsigned __int8 *)(v58 + v22);
                            v93 = v92 | 0xFFFFFF00;
                            v94 = v92 ^ 0xFF;
                            v95 = 8;
                            v96 = 11;
                          }
                          v97 = (1 << v95) - v96;
                          if ((v97 & 0x80000000) == 0)
                            goto LABEL_179;
                          goto LABEL_178;
                        }
LABEL_138:
                        v79 = 1;
                        goto LABEL_139;
                      }
LABEL_134:
                      v75 = 0x7FFFFFFF;
                      if (v22 > 3)
                        goto LABEL_138;
                      goto LABEL_135;
                    }
                  }
                  else
                  {
                    v73 = 11;
                  }
                  v74 = 8;
                  goto LABEL_125;
                }
LABEL_147:
                if (v22 > 3)
                  goto LABEL_151;
                v85 = ((1 << v23) + 1) >> v23;
                v86 = 2;
                if (v85 > 0xFFF5)
                  v86 = 4;
                if (v85 <= 0xF5)
LABEL_151:
                  v86 = 1;
                v87 = *(_QWORD *)(((v58 + v22 + v86) & 0xFFFFFFFFFFFFF8) + 8);
                if (v87 >= 0xFFFFFFFF)
                  LODWORD(v87) = -1;
                v88 = v87 + 1;
LABEL_183:
                result = v88 - 1;
                if (v88 > 1)
                  return result;
                return 0;
              }
LABEL_119:
              v71 = 8;
              goto LABEL_120;
            }
            v65 = v76 + 10;
            if (v76 > 0xF5)
            {
              v66 = 16;
LABEL_112:
              v67 = (1 << v66) - v65;
              v68 = 0x7FFFFFFF;
              if (v67 <= 0x7FFFFFFF)
                v69 = 0x7FFFFFFF;
              else
                v69 = v67;
              if ((v67 & 0x80000000) == 0)
                v68 = v69;
              if (v22 > 3)
                goto LABEL_118;
              goto LABEL_143;
            }
          }
          else
          {
            v65 = 11;
          }
          v66 = 8;
          goto LABEL_112;
        }
LABEL_90:
        v55 = 2147483646;
        goto LABEL_91;
      }
    }
    else
    {
      v51 = 11;
    }
    v52 = 8;
    goto LABEL_78;
  }
  if (v6 < 2)
    return 0;
  v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, v101);
  if (v56 >= 2)
    return v56 - 1;
  else
    return 0;
}

void sub_1B430AEA4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  char v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  size_t v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(sub_1B49037E8() - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = 25;
  if (v10 > 0x19)
    v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_DWORD *)(v9 + 80) & 0xF8;
  v13 = v12 | 7;
  v14 = v11 + ((v12 + 15) & ~(v12 | 7));
  v15 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v16 = *(_QWORD *)(sub_1B49046DC() - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = ((*(_QWORD *)(v16 + 64) + ((v17 + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v14 + 1 > v15)
    v19 = v14 + 1;
  else
    v19 = v15;
  if (v19 > v18)
    v18 = v19;
  if (v18 <= (v10 & 0xFFFFFFFFFFFFFFF8) + 16)
    v20 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v20 = v18;
  v21 = *(_QWORD *)(sub_1B4905C78() - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = ((v22 + 1) & ~v22) + *(_QWORD *)(v21 + 64);
  if (v20 > v23)
    v23 = v20;
  if (v23 <= 0x18)
    v23 = 24;
  v24 = 8 * v23;
  if (v23 <= 3)
  {
    v33 = ((1 << v24) + 1) >> v24;
    if (v33 > 0xFFF5)
    {
      v32 = 2147483646;
      v26 = a2;
      v27 = v7;
      v28 = a3;
      goto LABEL_31;
    }
    v25 = v33 + 10;
    if (v33 > 0xF5)
    {
      v29 = 16;
      v26 = a2;
      v27 = v7;
      v28 = a3;
      goto LABEL_21;
    }
  }
  else
  {
    v25 = 11;
  }
  v26 = a2;
  v27 = v7;
  v28 = a3;
  v29 = 8;
LABEL_21:
  v30 = (1 << v29) - v25;
  if (v30 <= 0x7FFFFFFF)
    v31 = 0x7FFFFFFF;
  else
    v31 = v30;
  if ((v30 & 0x80000000) != 0)
    v32 = 2147483646;
  else
    v32 = v31 - 1;
LABEL_31:
  if (v32 <= v8)
    v32 = v8;
  if (v27)
    v34 = *(_QWORD *)(v6 + 64);
  else
    v34 = *(_QWORD *)(v6 + 64) + 1;
  if (v23 > 3)
    goto LABEL_40;
  v35 = ((1 << v24) + 1) >> v24;
  v36 = 2;
  if (v35 > 0xFFF5)
    v36 = 4;
  if (v35 <= 0xF5)
LABEL_40:
    v36 = 1;
  v37 = ((v34 + (v17 | v13 | v22)) & ~(v17 | v13 | v22))
      + ((((((((v36 + v23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v28 <= v32)
  {
    v38 = 0;
  }
  else if (v37 <= 3)
  {
    v40 = ((v28 - v32 + ~(-1 << (8 * v37))) >> (8 * v37)) + 1;
    if (HIWORD(v40))
    {
      v38 = 4;
    }
    else if (v40 >= 0x100)
    {
      v38 = 2;
    }
    else
    {
      v38 = v40 > 1;
    }
  }
  else
  {
    v38 = 1;
  }
  if (v32 < v26)
  {
    v39 = ~v32 + v26;
    if (v37 < 4)
    {
      if ((_DWORD)v37)
      {
        v41 = v39 & ~(-1 << (8 * v37));
        bzero(a1, v37);
        if ((_DWORD)v37 == 3)
        {
          *(_WORD *)a1 = v41;
          a1[2] = BYTE2(v41);
        }
        else if ((_DWORD)v37 == 2)
        {
          *(_WORD *)a1 = v41;
        }
        else
        {
          *a1 = v41;
        }
      }
    }
    else
    {
      bzero(a1, v37);
      *(_DWORD *)a1 = v39;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1B430B4C4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B4CC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B4D4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B4DC(unsigned int a1@<W8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a1 <= 3 && ((1 << v1) + 1) >> v1 > 0xFFF5)
    JUMPOUT(0x1B430B55CLL);
  JUMPOUT(0x1B430B560);
}

void sub_1B430B4E4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B554()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B644()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B64C()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x1B430B708);
}

void sub_1B430B65C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430B994(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_BYTE *)(v3 + v4) = 0;
  v5 = ~v2;
  if (a1 > 3)
    goto LABEL_4;
  v6 = ((1 << v1) + 1) >> v1;
  if (v6 > 0xFFF5)
  {
    *(_DWORD *)(v3 + a1) = v5;
  }
  else
  {
    if (v6 <= 0xF5)
    {
LABEL_4:
      *(_BYTE *)(v3 + a1) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a1) = v5;
  }
LABEL_7:
  JUMPOUT(0x1B430B708);
}

void sub_1B430B9DC(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_WORD *)(v3 + v4) = 0;
  v5 = ~v2;
  if (a1 > 3)
    goto LABEL_4;
  v6 = ((1 << v1) + 1) >> v1;
  if (v6 > 0xFFF5)
  {
    *(_DWORD *)(v3 + a1) = v5;
  }
  else
  {
    if (v6 <= 0xF5)
    {
LABEL_4:
      *(_BYTE *)(v3 + a1) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a1) = v5;
  }
LABEL_7:
  JUMPOUT(0x1B430B708);
}

void sub_1B430BA60()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430BA68()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430BA70()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x1B430B708);
}

void sub_1B430BA7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF09D228[0])
  {
    v2 = type metadata accessor for TTRReminderCellTitleViewModel();
    v5 = type metadata accessor for TTRBoardReminderCellOptionalUpdate(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_1EF09D228);
  }
}

uint64_t sub_1B430BAD0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = sub_1B4907B14();
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for TTRBoardReminderCellOptionalUpdate(319, *(_QWORD *)(a1 + 24), v3, v4);
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B430BB68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  void *v21;
  _DWORD *v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v29;
  size_t __n;
  unint64_t v31;
  uint64_t v32;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(unsigned int *)(v8 + 84);
  v11 = v9 & 0xF8 | 7;
  v12 = *(_QWORD *)(v8 + 64) + 7;
  if ((_DWORD)v10)
    v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 9;
  if ((v11 | v6) != 7
    || ((v9 | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || v13 + ((v7 + v11 + ((v6 + 1) & ~v6)) & ~v11) > 0x18)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + (((v11 | v6) + 16) & ~(v11 | v6)));
    swift_retain();
    return v3;
  }
  v29 = *(_QWORD *)(v8 + 64) + 7;
  __n = v13;
  v31 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
  v32 = *(_QWORD *)(a3 + 24);
  v17 = ~v11;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v18 = (void *)(((unint64_t)a1 + v6 + 1) & ~v6);
  v19 = (char *)(((unint64_t)a2 + v6 + 1) & ~v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4))
  {
    memcpy(v18, v19, v7);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v18, v19, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  }
  v20 = &v19[v7];
  v21 = (void *)(((unint64_t)v18 + v7 + v11) & v17);
  v22 = (_DWORD *)((unint64_t)&v20[v11] & v17);
  if (!(_DWORD)v10)
  {
    v25 = v31;
    v23 = v32;
    if (!*((_BYTE *)v22 + v31))
      goto LABEL_27;
    v26 = *((unsigned __int8 *)v22 + v31) - 1;
    v27 = v31 & 0xFFFFFFF8;
    if ((v31 & 0xFFFFFFF8) != 0)
    {
      v26 = 0;
      v27 = *v22;
    }
    if ((v27 | v26) == 0xFFFFFFFF)
      goto LABEL_27;
LABEL_26:
    memcpy(v21, v22, __n);
    return v3;
  }
  v23 = v32;
  v24 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))((unint64_t)&v20[v11] & v17, v10, v32);
  v25 = v31;
  if (v24)
    goto LABEL_26;
LABEL_27:
  (*(void (**)(void *, _DWORD *, uint64_t))(v8 + 16))(v21, v22, v23);
  *(_QWORD *)(((unint64_t)v21 + v29) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v29) & 0xFFFFFFFFFFFFF8);
  if (!(_DWORD)v10)
    *((_BYTE *)v21 + v25) = 0;
  return v3;
}

uint64_t sub_1B430BD88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v5, v3);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v10 = *(_QWORD *)(v4 + 64) + v5;
  if (!*(_DWORD *)(v4 + 84))
    ++v10;
  v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v11 = (_DWORD *)((v10 + v9) & ~v9);
  if ((_DWORD)v8)
  {
    result = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(v11, v8, v6);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v7 + 8))(v11, v6);
  }
  else
  {
    v13 = ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (!*((_BYTE *)v11 + v13))
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v7 + 8))(v11, v6);
    v14 = v13 & 0xFFFFFFF8;
    v15 = (v13 & 0xFFFFFFF8) != 0 ? 0 : *((unsigned __int8 *)v11 + v13) - 1;
    v16 = v14 ? *v11 : 0;
    v17 = v16 | v15;
    result = (v17 + 1);
    if (v17 == -1)
      return (*(uint64_t (**)(_DWORD *, uint64_t))(v7 + 8))(v11, v6);
  }
  return result;
}

_BYTE *sub_1B430BE94(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  int v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  size_t v18;
  _BYTE *v19;
  _DWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  size_t v26;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((unint64_t)&a1[v7 + 1] & ~v7);
  v9 = (const void *)((unint64_t)&a2[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
    if (v10)
      v12 = v11;
    else
      v12 = v11 + 1;
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
  }
  if (v10)
    v13 = v11;
  else
    v13 = v11 + 1;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = v13 + v17;
  v19 = (_BYTE *)(((unint64_t)v8 + v18) & ~v17);
  v20 = (_DWORD *)(((unint64_t)v9 + v18) & ~v17);
  v21 = *(_QWORD *)(v15 + 64) + 7;
  v22 = v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16)
  {
    if (!(*(unsigned int (**)(_DWORD *, _QWORD, uint64_t))(v15 + 48))(v20, *(unsigned int *)(v15 + 84), v14))
    {
LABEL_21:
      (*(void (**)(_BYTE *, _DWORD *, uint64_t))(v15 + 16))(v19, v20, v14);
      *(_QWORD *)((unint64_t)&v19[v21] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + v21) & 0xFFFFFFFFFFFFF8);
      if (!v16)
        v19[v23] = 0;
      return a1;
    }
  }
  else
  {
    if (!*((_BYTE *)v20 + v23))
      goto LABEL_21;
    v24 = *((unsigned __int8 *)v20 + v23) - 1;
    v25 = v23 & 0xFFFFFFF8;
    if ((v23 & 0xFFFFFFF8) != 0)
    {
      v24 = 0;
      v25 = *v20;
    }
    if ((v25 | v24) == 0xFFFFFFFF)
      goto LABEL_21;
  }
  if (v16)
    v26 = v22 + 8;
  else
    v26 = v22 + 9;
  memcpy(v19, v20, v26);
  return a1;
}

_BYTE *sub_1B430C044(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  uint64_t (*v29)(_DWORD *, uint64_t, uint64_t);
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  size_t v38;
  _DWORD *__dst;

  v4 = a1;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((unint64_t)&a1[v7 + 1] & ~v7);
  v9 = (void *)((unint64_t)&a2[v7 + 1] & ~v7);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v11 = v10(v8, 1, v5);
  v12 = v10(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v8, v9, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v8, v9, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v13 = *(_QWORD *)(v6 + 64);
  else
    v13 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(v8, v9, v13);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v14 = *(_QWORD *)(v6 + 64);
  else
    v14 = *(_QWORD *)(v6 + 64) + 1;
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  v18 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v19 = v14 + v18;
  v20 = (_DWORD *)(((unint64_t)v8 + v19) & ~v18);
  v21 = (_DWORD *)(((unint64_t)v9 + v19) & ~v18);
  v22 = *(_QWORD *)(v16 + 64);
  v23 = v22 + 7;
  v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  if (!(_DWORD)v17)
  {
    if (*((_BYTE *)v20 + v25))
    {
      v32 = *((unsigned __int8 *)v20 + v25) - 1;
      if ((_DWORD)v24 == -8)
      {
        v33 = 0;
      }
      else
      {
        v32 = 0;
        v33 = *v20;
      }
      if ((v33 | v32) != 0xFFFFFFFF)
      {
        if (!*((_BYTE *)v21 + v25))
          goto LABEL_42;
        v34 = *((unsigned __int8 *)v21 + v25) - 1;
        if ((_DWORD)v24 == -8)
        {
          v35 = 0;
        }
        else
        {
          v34 = 0;
          v35 = *v21;
        }
        if ((v35 | v34) == 0xFFFFFFFF)
          goto LABEL_42;
        goto LABEL_38;
      }
    }
    if (!*((_BYTE *)v21 + v25))
    {
LABEL_35:
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v16 + 24))(v20, v21, v15);
      *(_QWORD *)(((unint64_t)v20 + v23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v23) & 0xFFFFFFFFFFFFF8);
      return v4;
    }
    v36 = *((unsigned __int8 *)v21 + v25) - 1;
    if ((_DWORD)v24 != -8)
      v36 = 0;
    __dst = v20;
    if ((_DWORD)v24 == -8)
      v37 = 0;
    else
      v37 = *v21;
    v31 = (v37 | v36) + 1;
LABEL_33:
    v20 = __dst;
    if (v31)
    {
      (*(void (**)(_DWORD *, uint64_t))(v16 + 8))(__dst, v15);
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  v26 = v22 + 7;
  v27 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = v4;
  v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48);
  __dst = v20;
  v30 = v29(v20, v17, v15);
  v31 = v29(v21, v17, v15);
  v4 = v28;
  v24 = v27;
  v23 = v26;
  if (!v30)
    goto LABEL_33;
  v20 = __dst;
  if (!v31)
  {
LABEL_42:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v16 + 16))(v20, v21, v15);
    *(_QWORD *)(((unint64_t)v20 + v23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v23) & 0xFFFFFFFFFFFFF8);
    if (!(_DWORD)v17)
      *((_BYTE *)v20 + v25) = 0;
    return v4;
  }
LABEL_38:
  if ((_DWORD)v17)
    v38 = v25;
  else
    v38 = v24 + 9;
  memcpy(v20, v21, v38);
  return v4;
}

_BYTE *sub_1B430C338(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  int v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  size_t v18;
  _BYTE *v19;
  _DWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  size_t v26;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((unint64_t)&a1[v7 + 1] & ~v7);
  v9 = (const void *)((unint64_t)&a2[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
    if (v10)
      v12 = v11;
    else
      v12 = v11 + 1;
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v8, v9, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
  }
  if (v10)
    v13 = v11;
  else
    v13 = v11 + 1;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = v13 + v17;
  v19 = (_BYTE *)(((unint64_t)v8 + v18) & ~v17);
  v20 = (_DWORD *)(((unint64_t)v9 + v18) & ~v17);
  v21 = *(_QWORD *)(v15 + 64) + 7;
  v22 = v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16)
  {
    if (!(*(unsigned int (**)(_DWORD *, _QWORD, uint64_t))(v15 + 48))(v20, *(unsigned int *)(v15 + 84), v14))
    {
LABEL_21:
      (*(void (**)(_BYTE *, _DWORD *, uint64_t))(v15 + 32))(v19, v20, v14);
      *(_QWORD *)((unint64_t)&v19[v21] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + v21) & 0xFFFFFFFFFFFFF8);
      if (!v16)
        v19[v23] = 0;
      return a1;
    }
  }
  else
  {
    if (!*((_BYTE *)v20 + v23))
      goto LABEL_21;
    v24 = *((unsigned __int8 *)v20 + v23) - 1;
    v25 = v23 & 0xFFFFFFF8;
    if ((v23 & 0xFFFFFFF8) != 0)
    {
      v24 = 0;
      v25 = *v20;
    }
    if ((v25 | v24) == 0xFFFFFFFF)
      goto LABEL_21;
  }
  if (v16)
    v26 = v22 + 8;
  else
    v26 = v22 + 9;
  memcpy(v19, v20, v26);
  return a1;
}

_BYTE *sub_1B430C4E8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  uint64_t (*v29)(_DWORD *, uint64_t, uint64_t);
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  size_t v38;
  _DWORD *__dst;

  v4 = a1;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((unint64_t)&a1[v7 + 1] & ~v7);
  v9 = (void *)((unint64_t)&a2[v7 + 1] & ~v7);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v11 = v10(v8, 1, v5);
  v12 = v10(v9, 1, v5);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v8, v9, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v8, v9, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v13 = *(_QWORD *)(v6 + 64);
  else
    v13 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(v8, v9, v13);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v14 = *(_QWORD *)(v6 + 64);
  else
    v14 = *(_QWORD *)(v6 + 64) + 1;
  v15 = *(_QWORD *)(a3 + 24);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  v18 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  v19 = v14 + v18;
  v20 = (_DWORD *)(((unint64_t)v8 + v19) & ~v18);
  v21 = (_DWORD *)(((unint64_t)v9 + v19) & ~v18);
  v22 = *(_QWORD *)(v16 + 64);
  v23 = v22 + 7;
  v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  if (!(_DWORD)v17)
  {
    if (*((_BYTE *)v20 + v25))
    {
      v32 = *((unsigned __int8 *)v20 + v25) - 1;
      if ((_DWORD)v24 == -8)
      {
        v33 = 0;
      }
      else
      {
        v32 = 0;
        v33 = *v20;
      }
      if ((v33 | v32) != 0xFFFFFFFF)
      {
        if (!*((_BYTE *)v21 + v25))
          goto LABEL_42;
        v34 = *((unsigned __int8 *)v21 + v25) - 1;
        if ((_DWORD)v24 == -8)
        {
          v35 = 0;
        }
        else
        {
          v34 = 0;
          v35 = *v21;
        }
        if ((v35 | v34) == 0xFFFFFFFF)
          goto LABEL_42;
        goto LABEL_38;
      }
    }
    if (!*((_BYTE *)v21 + v25))
    {
LABEL_35:
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v16 + 40))(v20, v21, v15);
      *(_QWORD *)(((unint64_t)v20 + v23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v23) & 0xFFFFFFFFFFFFF8);
      return v4;
    }
    v36 = *((unsigned __int8 *)v21 + v25) - 1;
    if ((_DWORD)v24 != -8)
      v36 = 0;
    __dst = v20;
    if ((_DWORD)v24 == -8)
      v37 = 0;
    else
      v37 = *v21;
    v31 = (v37 | v36) + 1;
LABEL_33:
    v20 = __dst;
    if (v31)
    {
      (*(void (**)(_DWORD *, uint64_t))(v16 + 8))(__dst, v15);
      goto LABEL_38;
    }
    goto LABEL_35;
  }
  v26 = v22 + 7;
  v27 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = v4;
  v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48);
  __dst = v20;
  v30 = v29(v20, v17, v15);
  v31 = v29(v21, v17, v15);
  v4 = v28;
  v24 = v27;
  v23 = v26;
  if (!v30)
    goto LABEL_33;
  v20 = __dst;
  if (!v31)
  {
LABEL_42:
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v16 + 32))(v20, v21, v15);
    *(_QWORD *)(((unint64_t)v20 + v23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v23) & 0xFFFFFFFFFFFFF8);
    if (!(_DWORD)v17)
      *((_BYTE *)v20 + v25) = 0;
    return v4;
  }
LABEL_38:
  if ((_DWORD)v17)
    v38 = v25;
  else
    v38 = v24 + 9;
  memcpy(v20, v21, v38);
  return v4;
}

uint64_t sub_1B430C7DC(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  unsigned int v27;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v6 <= v9)
    v10 = v9;
  else
    v10 = v6;
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v12;
  if (v8)
    v13 = 8;
  else
    v13 = 9;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v16 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_36;
  v17 = ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v13 + ((v12 + v15 + ((v14 + 1) & ~v14)) & ~v15);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((v16 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)&a1[v17];
      if (!v19)
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)&a1[v17];
      if (!*(_WORD *)&a1[v17])
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v20 < 2)
    {
LABEL_36:
      if (v10 <= 0xFE)
      {
        v23 = *a1;
        v24 = v23 >= 2;
        v25 = (v23 + 2147483646) & 0x7FFFFFFF;
        if (v24)
          return (v25 + 1);
        else
          return 0;
      }
      v26 = (unint64_t)&a1[v14 + 1] & ~v14;
      if (v6 == v11)
      {
        if (v5 >= 2)
        {
          v27 = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(v26, *(unsigned int *)(v4 + 84));
          goto LABEL_47;
        }
      }
      else if (v8 >= 2)
      {
        v27 = (*(uint64_t (**)(uint64_t))(v7 + 48))((v26 + v12 + v15) & ~v15);
LABEL_47:
        if (v27 >= 2)
          return v27 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v19 = a1[v17];
  if (!a1[v17])
    goto LABEL_36;
LABEL_27:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v11 + v21 + 1;
}

void sub_1B430C9F8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  BOOL v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;

  v6 = 0u;
  v8 = *(_QWORD *)(a4 + 16);
  v7 = *(_QWORD *)(a4 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(v7 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v11 <= v14)
    v15 = v14;
  else
    v15 = v11;
  if (v15 <= 0xFE)
    v16 = 254;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v17;
  v18 = (*(_QWORD *)(v12 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = v18 + 8;
  v20 = v18 + 9;
  if (v13)
    v20 = v19;
  v21 = ((v17
        + (*(_DWORD *)(v12 + 80) & 0xF8 | 7)
        + ((*(unsigned __int8 *)(v9 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(*(_DWORD *)(v12 + 80) & 0xF8 | 7))
      + v20;
  v22 = a3 >= v16;
  v23 = a3 - v16;
  if (v23 != 0 && v22)
  {
    if (v21 > 3)
    {
      v6 = 1u;
      if (v16 < a2)
        goto LABEL_26;
      goto LABEL_32;
    }
    v24 = ((v23 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v24))
    {
      v6 = 4u;
      if (v16 < a2)
      {
LABEL_26:
        v25 = ~v16 + a2;
        if (v21 < 4)
        {
          if ((_DWORD)v21)
          {
            bzero(a1, v21);
            *a1 = v25 & ~(-1 << (8 * v21));
          }
        }
        else
        {
          bzero(a1, v21);
          *(_DWORD *)a1 = v25;
        }
        __asm { BR              X10 }
      }
LABEL_32:
      __asm { BR              X21 }
    }
    if (v24 >= 0x100)
      v6 = 2;
    else
      v6 = v24 > 1;
  }
  if (v16 < a2)
    goto LABEL_26;
  goto LABEL_32;
}

void sub_1B430CBA4(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  int v28;

  v24[v25] = 0;
  if (a2)
  {
    if (a5 > 0xFE)
    {
      v26 = (unint64_t)&v24[a1 + 1] & a6;
      if (v20 == v23)
      {
        if (v15 >= 2)
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, (a2 + 1), v15, a7);
      }
      else if (a3 >= 2)
      {
        v27 = (_DWORD *)((v26 + v21 + v22) & v17);
        if (a2 + 1 <= a3)
        {
          if (a2 != -1)
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))((v26 + v21 + v22) & v17, (a2 + 1), a3, a4);
        }
        else if ((_DWORD)v16)
        {
          v28 = a2 - a3;
          bzero((void *)((v26 + v21 + v22) & v17), v16);
          *v27 = v28;
        }
      }
    }
    else
    {
      *v24 = a2 + 1;
    }
  }
}

void destroy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 32))
    swift_release();
}

uint64_t initializeWithCopy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  id v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  v8 = v4;
  v9 = v5;
  if (v6)
  {
    v10 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v12;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellCompletedButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellCompletedButtonConfiguration()
{
  return &type metadata for TTRBoardReminderCellCompletedButtonConfiguration;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(id *a1)
{

}

uint64_t assignWithCopy for TTRBoardReminderCellLocationConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRDataViewMonitorEnvironmentInfo.ApplicationActivationNotificationNames(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellLocationConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellLocationConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellLocationConfiguration()
{
  return &type metadata for TTRBoardReminderCellLocationConfiguration;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellURLConfiguration()
{
  return &type metadata for TTRBoardReminderCellURLConfiguration;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B49036D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = v10;
    v13 = v11;
  }
  return a1;
}

void destroy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = v9;
  v12 = v10;
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t initializeWithTake for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellURLConfiguration.Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellURLConfiguration.Attachment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B430D3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellURLConfiguration.Attachment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B430D484(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1B49036D4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1B430D4FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B49036D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellAssigneeConfiguration()
{
  return &type metadata for TTRBoardReminderCellAssigneeConfiguration;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwxx_0(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

_QWORD *_s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwcp_0(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  a1[2] = *(_QWORD *)(a2 + 16);
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    a1[3] = v6;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v7;
  }
  return a1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15RemindersUICore41TTRBoardReminderCellAssigneeConfigurationVwta_0(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[3];
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSectionLite(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSectionLite(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellAppLinkConfiguration()
{
  return &type metadata for TTRBoardReminderCellAppLinkConfiguration;
}

void destroy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 32))
    swift_release();
}

uint64_t initializeWithCopy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _OWORD *v6;
  id v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  v7 = v4;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  v8 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellShowSubtasksConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellShowSubtasksConfiguration()
{
  return &type metadata for TTRBoardReminderCellShowSubtasksConfiguration;
}

void destroy for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(a1 + 24))
    swift_release();
}

_QWORD *initializeWithCopy for TTRBoardReminderCellSubtaskCountConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v7 = a2 + 3;
  v6 = a2[3];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v8 = v5;
  if (v6)
  {
    v9 = a2[4];
    a1[3] = v6;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v7;
  }
  return a1;
}

_QWORD *assignWithCopy for TTRBoardReminderCellSubtaskCountConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  v7 = a2[3];
  if (!a1[3])
  {
    if (v7)
    {
      v9 = a2[4];
      a1[3] = v7;
      a1[4] = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = a2[4];
  a1[3] = v7;
  a1[4] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellSubtaskCountConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellSubtaskCountConfiguration()
{
  return &type metadata for TTRBoardReminderCellSubtaskCountConfiguration;
}

uint64_t destroy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
LABEL_8:
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellSuggestedSectionConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellSuggestedSectionConfiguration()
{
  return &type metadata for TTRBoardReminderCellSuggestedSectionConfiguration;
}

void destroy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 16))
    swift_release();
}

uint64_t initializeWithCopy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _OWORD *v6;
  id v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v7 = v4;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellInfoButtonConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonConfiguration()
{
  return &type metadata for TTRBoardReminderCellInfoButtonConfiguration;
}

uint64_t getEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = v6 - 2;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B430E3BC + 4 * byte_1B4916E4A[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B430E464 + 4 * byte_1B4916E54[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B430E498 + 4 * byte_1B4916E4F[v5]))();
}

uint64_t sub_1B430E498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B430E4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B430E4A8);
  return result;
}

uint64_t sub_1B430E4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B430E4BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B430E4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B430E4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonVisibility()
{
  return &type metadata for TTRBoardReminderCellInfoButtonVisibility;
}

uint64_t storeEnumTagSinglePayload for TTRBoardReminderCellInfoButtonVisibility.Layout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B430E530 + 4 * byte_1B4916E5E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B430E564 + 4 * byte_1B4916E59[v4]))();
}

uint64_t sub_1B430E564(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B430E56C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B430E574);
  return result;
}

uint64_t sub_1B430E580(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B430E588);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B430E58C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B430E594(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRBoardReminderCellInfoButtonVisibility.Layout()
{
  return &type metadata for TTRBoardReminderCellInfoButtonVisibility.Layout;
}

void *TTRReminderLocationOptions.homeLocation.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void TTRReminderLocationOptions.homeLocation.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*TTRReminderLocationOptions.homeLocation.modify())()
{
  return nullsub_1;
}

void *TTRReminderLocationOptions.workLocation.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

void TTRReminderLocationOptions.workLocation.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*TTRReminderLocationOptions.workLocation.modify())()
{
  return nullsub_1;
}

uint64_t TTRReminderLocationOptions.canUseVehicleEvent.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t TTRReminderLocationOptions.canUseVehicleEvent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTRReminderLocationOptions.canUseVehicleEvent.modify())()
{
  return nullsub_1;
}

uint64_t TTRReminderLocationOptions.init()()
{
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TTRReminderLocationOptions(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRDataViewMonitorEnvironmentInfo(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRDataViewMonitorEnvironmentInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderLocationOptions()
{
  return &type metadata for TTRReminderLocationOptions;
}

uint64_t TTRReminderCellHashtagSuggestion.label.getter(uint64_t a1)
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t TTRReminderCellHashtagSuggestion.rangeToReplace.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t TTRReminderCellHashtagSuggestion.headerText.getter()
{
  return 0;
}

id TTRReminderCellHashtagSuggestion.valueText.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1B4906AF4();
  v6 = v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v2 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithString_, v2, v5, v6);

  return v3;
}

uint64_t TTRReminderCellHashtagSuggestion.contact.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.iconImageInfo.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.secondaryValueText.getter()
{
  return 0;
}

uint64_t TTRReminderCellHashtagSuggestion.images.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t TTRReminderCellHashtagSuggestion.requiresSeparator.getter()
{
  return 0;
}

BOOL static TTRReminderCellHashtagSuggestion.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  _BOOL8 result;

  if (a1 == a5 && a2 == a6)
    return a3 == a7 && a4 == a8;
  v12 = sub_1B4908390();
  result = 0;
  if ((v12 & 1) != 0)
    return a3 == a7 && a4 == a8;
  return result;
}

uint64_t sub_1B430EA04()
{
  return 0;
}

id sub_1B430EA10()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1B4906AF4();
  v6 = v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  v1 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v2 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithString_, v2, v5, v6);

  return v3;
}

uint64_t sub_1B430EAB4()
{
  return 0;
}

uint64_t sub_1B430EABC()
{
  return 0;
}

uint64_t static TTRReminderCellHashtagSuggestion.identitiesEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6)
    return 1;
  else
    return sub_1B4908390();
}

BOOL static TTRReminderCellHashtagSuggestion.contentsEqual(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  _BOOL8 result;

  if (a1 == a5 && a2 == a6)
    return a3 == a7 && a4 == a8;
  v12 = sub_1B4908390();
  result = 0;
  if ((v12 & 1) != 0)
    return a3 == a7 && a4 == a8;
  return result;
}

unint64_t sub_1B430EB60(uint64_t a1)
{
  unint64_t result;

  result = sub_1B430EB84();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B430EB84()
{
  unint64_t result;

  result = qword_1EF09D348[0];
  if (!qword_1EF09D348[0])
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRReminderCellHashtagSuggestion, &type metadata for TTRReminderCellHashtagSuggestion);
    atomic_store(result, qword_1EF09D348);
  }
  return result;
}

uint64_t sub_1B430EBC8(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1B4908390();
}

BOOL sub_1B430EBF8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v4 && v3 == v5;
  v7 = sub_1B4908390();
  result = 0;
  if ((v7 & 1) != 0)
    return v2 == v4 && v3 == v5;
  return result;
}

uint64_t initializeWithCopy for TTRReminderCellHashtagSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

_QWORD *assignWithCopy for TTRReminderCellHashtagSuggestion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TTRReminderCellHashtagSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderCellHashtagSuggestion()
{
  return &type metadata for TTRReminderCellHashtagSuggestion;
}

uint64_t static TTRIOptionMenuCellContentState.Option.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata2;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = a1;
  v7 = type metadata accessor for TTRIMenuItem(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v28 = (char *)&v27 - v9;
  v29 = a3;
  v30 = a4;
  v11 = type metadata accessor for TTRIOptionMenuCellContentState.Option(0, a3, a4, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v31 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v18 = (char *)&v27 - v17;
  v20 = (char *)&v27 + *(int *)(v19 + 48) - v17;
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v21((char *)&v27 - v17, v32, v11, v16);
  ((void (*)(char *, uint64_t, uint64_t))v21)(v20, a2, v11);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v22(v18, 1, v7) == 1)
  {
    v23 = 1;
    if (v22(v20, 1, v7) == 1)
      goto LABEL_8;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v21)(v14, v18, v11);
    if (v22(v20, 1, v7) != 1)
    {
      v24 = (uint64_t)v28;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v28, v20, v7);
      v23 = static TTRIMenuItem.== infix(_:_:)((uint64_t)v14, v24, v29, v30);
      v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v25(v24, v7);
      v25((uint64_t)v14, v7);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  v23 = 0;
  v12 = v31;
  v11 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return v23 & 1;
}

uint64_t type metadata accessor for TTRIOptionMenuCellContentState.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIOptionMenuCellContentState.Option);
}

uint64_t sub_1B430EF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static TTRIOptionMenuCellContentState.Option.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

id TTRIOptionMenuCellContentState.icon.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1B430EFBC(*v0, v0[1], v0[2]);
  return v1;
}

id sub_1B430EFBC(id result, void *a2, void *a3)
{
  void *v3;
  id v4;
  id v5;

  if (result != (id)1)
  {
    v3 = result;
    v4 = a3;
    v5 = v3;
    return a2;
  }
  return result;
}

void TTRIOptionMenuCellContentState.icon.setter(void *a1, void *a2, void *a3)
{
  void **v3;

  sub_1B430F03C(*v3, v3[1], v3[2]);
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
}

void sub_1B430F03C(void *a1, void *a2, void *a3)
{
  if (a1 != (void *)1)
  {

  }
}

uint64_t (*TTRIOptionMenuCellContentState.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIOptionMenuCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.ttriAccessibilitySubtitle.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.menuOptions.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRIOptionMenuCellContentState.menuOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.menuOptions.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.selectedItem.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t TTRIOptionMenuCellContentState.selectedItem.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 48), a1);
}

uint64_t (*TTRIOptionMenuCellContentState.selectedItem.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.isSeparatorHidden.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t TTRIOptionMenuCellContentState.isSeparatorHidden.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*TTRIOptionMenuCellContentState.isSeparatorHidden.modify())()
{
  return nullsub_1;
}

uint64_t TTRIOptionMenuCellContentState.init(icon:title:ttriAccessibilitySubtitle:menuOptions:selectedItem:isSeparatorHidden:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t result;

  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  *((_QWORD *)a9 + 2) = a3;
  *((_QWORD *)a9 + 3) = a4;
  *((_QWORD *)a9 + 4) = a5;
  *((_QWORD *)a9 + 5) = a6;
  *((_QWORD *)a9 + 6) = a7;
  *((_QWORD *)a9 + 7) = a8;
  v14 = type metadata accessor for TTRIOptionMenuCellContentState(0, a12, a13, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(&a9[*(int *)(v14 + 48)], a10, a12);
  a9[*(int *)(v14 + 52)] = a11;
  return result;
}

uint64_t type metadata accessor for TTRIOptionMenuCellContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIOptionMenuCellContentState);
}

uint64_t TTRIOptionMenuCellContentState.subtitle.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for TTRIOptionMenuCellContentState.Option(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v4 = sub_1B4906EA8();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v4);
  sub_1B4906CB0();
  swift_bridgeObjectRelease();
  if (v7)
    return v6;
  else
    return 0;
}

uint64_t sub_1B430F368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD v30[2];

  v30[1] = a2;
  v9 = type metadata accessor for TTRIMenuItem(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - v14;
  v17 = type metadata accessor for TTRIOptionMenuCellContentState.Option(0, a3, a4, v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v30 - v19;
  (*(void (**)(char *, uint64_t, __n128))(v21 + 16))((char *)v30 - v19, a1, v18);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9);
  if ((_DWORD)result == 1)
  {
    *a5 = 0;
    a5[1] = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v20, v9);
    v23 = &v15[*(int *)(v9 + 44)];
    v24 = *((_QWORD *)v23 + 1);
    v30[0] = *(_QWORD *)v23;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    if (v24)
    {
      v25 = v24;
    }
    else
    {
      v25 = *((_QWORD *)v12 + 1);
      v30[0] = *(_QWORD *)v12;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    }
    v26 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v26(v12, v9);
    type metadata accessor for TTRIOptionMenuCellContentState(0, a3, a4, v27);
    v28 = sub_1B4906A1C();
    result = v26(v15, v9);
    if ((v28 & 1) != 0)
    {
      v29 = v30[0];
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v29 = 0;
      v25 = 0;
    }
    *a5 = v29;
    a5[1] = v25;
  }
  return result;
}

uint64_t sub_1B430F568@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1B430F368(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t static TTRIOptionMenuCellContentState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v8;
  void *v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  char v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  char v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;

  v4 = a4;
  v5 = a3;
  v8 = *(void **)a1;
  v9 = *(void **)a2;
  if (*(_QWORD *)a1 != 1)
  {
    if (v9 == (void *)1)
      goto LABEL_39;
    v17 = *(void **)(a1 + 8);
    v16 = *(void **)(a1 + 16);
    v18 = *(void **)(a2 + 8);
    v19 = *(void **)(a2 + 16);
    if (v8)
    {
      if (!v9)
        goto LABEL_39;
      v45 = a3;
      v46 = a4;
      v48 = *(void **)(a2 + 8);
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED020);
      sub_1B430EFBC(v9, v18, v19);
      sub_1B430EFBC(v8, v17, v16);
      v20 = v19;
      v21 = v9;
      v22 = v16;
      v23 = v17;
      v24 = v8;
      v25 = sub_1B4907844();

      v17 = v23;
      v26 = v48;
      if ((v25 & 1) == 0)
      {
        sub_1B430F03C(v9, v48, v20);
        v27 = v8;
        v28 = v23;
        v29 = v22;
        goto LABEL_38;
      }
    }
    else
    {
      if (v9)
        goto LABEL_39;
      v45 = a3;
      v46 = a4;
      sub_1B430EFBC(0, v18, v19);
      sub_1B430EFBC(0, v17, v16);
      v26 = v18;
      v22 = v16;
      v20 = v19;
    }
    v30 = v26;
    v47 = v22;
    if (v17)
    {
      if (!v26)
      {
        v35 = v9;
        v36 = 0;
        goto LABEL_36;
      }
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
      v31 = v30;
      v32 = v17;
      v33 = v17;
      v34 = sub_1B4907844();

      v17 = v32;
      if ((v34 & 1) == 0)
      {
        v35 = v9;
        v36 = v30;
LABEL_36:
        sub_1B430F03C(v35, v36, v20);
        v27 = v8;
        v28 = v17;
        goto LABEL_37;
      }
    }
    else if (v26)
    {
      sub_1B430F03C(v9, v26, v20);
      v27 = v8;
      v28 = 0;
LABEL_37:
      v29 = v47;
      goto LABEL_38;
    }
    if (v47)
    {
      v4 = v46;
      if (v20)
      {
        v49 = v30;
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
        v40 = v20;
        v44 = v17;
        v41 = v47;
        v42 = sub_1B4907844();

        sub_1B430F03C(v9, v49, v20);
        sub_1B430F03C(v8, v44, v47);
        v5 = v45;
        if ((v42 & 1) == 0)
          goto LABEL_39;
        goto LABEL_3;
      }
      sub_1B430F03C(v9, v30, 0);
      v27 = v8;
      v28 = v17;
      v29 = v47;
    }
    else
    {
      v4 = v46;
      if (!v20)
      {
        sub_1B430F03C(v9, v30, 0);
        sub_1B430F03C(v8, v17, 0);
        v5 = v45;
        goto LABEL_3;
      }
      sub_1B430F03C(v9, v30, v20);
      v27 = v8;
      v28 = v17;
      v29 = 0;
    }
LABEL_38:
    sub_1B430F03C(v27, v28, v29);
    goto LABEL_39;
  }
  if (v9 != (void *)1)
    goto LABEL_39;
LABEL_3:
  v10 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
  if (v10 || (v11 = sub_1B4908390(), v12 = 0, (v11 & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 48);
    v14 = *(_QWORD *)(a2 + 48);
    if (v13)
    {
      if (!v14)
        goto LABEL_39;
      if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v13 != v14)
      {
        v15 = sub_1B4908390();
        v12 = 0;
        if ((v15 & 1) == 0)
          return v12 & 1;
      }
    }
    else if (v14)
    {
      goto LABEL_39;
    }
    v37 = type metadata accessor for TTRIOptionMenuCellContentState.Option(0, v5, v4, v14);
    MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRIOptionMenuCellContentState<A>.Option, v37);
    if ((sub_1B4906EB4() & 1) != 0)
    {
      v39 = type metadata accessor for TTRIOptionMenuCellContentState(0, v5, v4, v38);
      if ((sub_1B4906A1C() & 1) != 0)
      {
        v12 = *(_BYTE *)(a1 + *(int *)(v39 + 52)) ^ *(_BYTE *)(a2 + *(int *)(v39 + 52)) ^ 1;
        return v12 & 1;
      }
    }
LABEL_39:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1B430F974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static TTRIOptionMenuCellContentState.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t TTRIOptionMenuCellContent.action.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8));
  swift_beginAccess();
  v2 = *v1;
  sub_1B41E1C64(*v1);
  return v2;
}

uint64_t TTRIOptionMenuCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xF8));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1B41E1CB4(v6);
}

uint64_t (*TTRIOptionMenuCellContent.action.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t TTRIOptionMenuCellContent.stateChangeBlock.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100));
  swift_beginAccess();
  v2 = *v1;
  sub_1B41E1C64(*v1);
  return v2;
}

uint64_t TTRIOptionMenuCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x100));
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1B41E1CB4(v6);
}

uint64_t (*TTRIOptionMenuCellContent.stateChangeBlock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTRIOptionMenuCellContent.__allocating_init(state:menuImageProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = v3;
  v8 = objc_allocWithZone((Class)v4);
  v9 = sub_1B4312BD0(a1, a2, a3);
  swift_unknownObjectRelease();
  v11 = type metadata accessor for TTRIOptionMenuCellContentState(0, v4[29], v4[30], v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  return v9;
}

id TTRIOptionMenuCellContent.init(state:menuImageProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *MEMORY[0x1E0DEEDD8] & *v3;
  v6 = sub_1B4312BD0(a1, a2, a3);
  swift_unknownObjectRelease();
  v8 = type metadata accessor for TTRIOptionMenuCellContentState(0, *(_QWORD *)(v5 + 232), *(_QWORD *)(v5 + 240), v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v6;
}

uint64_t TTRIOptionMenuCellContent.selectionBehavior.getter()
{
  return 0;
}

uint64_t TTRIOptionMenuCellContent.willUnassignCell(_:)(_QWORD *a1)
{
  *(_QWORD *)((char *)a1 + *(_QWORD *)((*a1 & *MEMORY[0x1E0DEEDD8]) + 0x3A8) + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t TTRIOptionMenuCellContent.didAssignCell(_:)(_QWORD *a1)
{
  *(_QWORD *)((char *)a1 + *(_QWORD *)((*a1 & *MEMORY[0x1E0DEEDD8]) + 0x3A8) + 8) = &protocol witness table for TTRIOptionMenuCellContent<A>;
  return swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall TTRIOptionMenuCellContent.cellDidBecomeSelected()()
{
  _QWORD *v0;
  void (**v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = (void (**)(uint64_t))((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8));
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    v3 = swift_retain();
    v2(v3);
    sub_1B41E1CB4((uint64_t)v2);
  }
}

uint64_t TTRIOptionMenuCellContent.updateCell(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  _QWORD v5[3];
  _QWORD aBlock[6];

  v5[2] = a1;
  v1 = *(void **)(a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1B4312C90;
  *(_QWORD *)(v2 + 24) = v5;
  aBlock[4] = sub_1B429EBC8;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_13;
  v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performBatchUpdates_, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B430FEA8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  BOOL v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73[8];

  v4 = *MEMORY[0x1E0DEEDD8];
  v5 = *MEMORY[0x1E0DEEDD8] & *a1;
  v6 = *(_QWORD *)(v5 + 0x398);
  v71 = sub_1B4907B14();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v68 = (char *)&v56 - v7;
  v8 = *(_QWORD *)(v5 + 928);
  v70 = v6;
  v65 = type metadata accessor for TTRIOptionMenuCellContentState(0, v6, v8, v9);
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v66 = (char *)&v56 - v10;
  v11 = *(_QWORD *)((*a2 & v4) + 0x78);
  v72 = a2;
  v12 = (char *)a2 + v11;
  swift_beginAccess();
  v14 = *(void **)v12;
  v13 = (void *)*((_QWORD *)v12 + 1);
  v15 = (void *)*((_QWORD *)v12 + 2);
  v16 = *(_QWORD *)v12 == 1;
  if (*(_QWORD *)v12 == 1)
    v17 = 0;
  else
    v17 = *(void **)v12;
  v56 = v17;
  if (v16)
    v18 = 0;
  else
    v18 = v13;
  if (v16)
    v19 = 0;
  else
    v19 = v15;
  if (v16)
    v20 = 0x1FFFFFFFELL;
  else
    v20 = 0;
  v21 = (uint64_t)a1 + direct field offset for TTRIStaticTableViewStandardCell.icon;
  swift_beginAccess();
  sub_1B4221F18(v21, (uint64_t)v73);
  v64 = *(void **)v21;
  v63 = *(void **)(v21 + 8);
  v62 = *(void **)(v21 + 16);
  v61 = *(_QWORD *)(v21 + 24);
  v60 = *(_QWORD *)(v21 + 32);
  v59 = *(_QWORD *)(v21 + 40);
  v58 = *(_QWORD *)(v21 + 48);
  v57 = *(_QWORD *)(v21 + 56);
  v22 = *(_BYTE *)(v21 + 64);
  *(_QWORD *)v21 = v56;
  *(_QWORD *)(v21 + 8) = v18;
  v23 = v65;
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_OWORD *)(v21 + 48) = 0u;
  *(_BYTE *)(v21 + 64) = 0;
  sub_1B430EFBC(v14, v13, v15);
  sub_1B430EFBC(v14, v13, v15);
  sub_1B4222068((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B4221F60);
  sub_1B4221FE8(v64, v63, v62, v61, v60, v59, v58, v57, v22);
  sub_1B47C9730((uint64_t)v73);
  sub_1B430F03C(v14, v13, v15);
  sub_1B4222068((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B4221FE8);
  v24 = *(void **)((char *)a1 + qword_1EF0B34C8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v25 = v24;
  v26 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v26);

  v27 = v67;
  v28 = v66;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, v12, v23);
  v32 = TTRIOptionMenuCellContentState.subtitle.getter(v23, v29, v30, v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v23);
  v35 = (_QWORD *)((char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.subtitle);
  swift_beginAccess();
  v36 = *v35;
  v37 = v35[1];
  *v35 = v32;
  v35[1] = v34;
  if (v34)
  {
    if (v37)
    {
      v38 = v32 == v36 && v37 == v34;
      if (v38 || (sub_1B4908390() & 1) != 0)
        goto LABEL_23;
    }
  }
  else if (!v37)
  {
    goto LABEL_24;
  }
  TTRIStaticTableViewStandardCell.updateSubtitle()();
LABEL_23:
  swift_bridgeObjectRelease();
LABEL_24:
  v40 = *((_QWORD *)v12 + 5);
  v39 = *((_QWORD *)v12 + 6);
  v41 = (_QWORD *)((char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.ttriAccessibilitySubtitle);
  swift_beginAccess();
  *v41 = v40;
  v41[1] = v39;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v42 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v43 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x3C0);
  v44 = *(_QWORD *)((char *)a1 + v43);
  *(_QWORD *)((char *)a1 + v43) = *((_QWORD *)v12 + 7);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4311FDC(v44, v45, v46, v47);
  swift_bridgeObjectRelease();
  v48 = v70;
  v49 = *(_QWORD *)(v70 - 8);
  v50 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v68, &v12[*(int *)(v23 + 48)], v70);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
  sub_1B4312CA8(v50);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v50, v71);
  LODWORD(v48) = v12[*(int *)(v23 + 52)];
  v51 = (char *)a1 + direct field offset for TTRIStaticTableViewStandardCell.isSeparatorHidden;
  swift_beginAccess();
  v52 = *v51;
  *v51 = v48;
  if ((_DWORD)v48 != v52)
    objc_msgSend(*(id *)((char *)a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView), sel_invalidateIntrinsicContentSize);
  v53 = *(_QWORD *)((char *)v72 + *(_QWORD *)((*v42 & *v72) + 0x108) + 8);
  v54 = swift_unknownObjectRetain();
  sub_1B4312DA0(v54, v53);
  return swift_unknownObjectRelease();
}

void TTRIOptionMenuCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TTRIOptionMenuCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
  sub_1B4312E24();
}

uint64_t sub_1B4310434()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1B41E1CB4(*(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8)));
  sub_1B41E1CB4(*(_QWORD *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x100)));
  return swift_unknownObjectRelease();
}

uint64_t sub_1B43104A4(_QWORD *a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1B41E1CB4(*(_QWORD *)((char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0xF8)));
  sub_1B41E1CB4(*(_QWORD *)((char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x100)));
  return swift_unknownObjectRelease();
}

uint64_t TTRIOptionMenuCellContent.selected(item:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  _QWORD *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (**v26)(char *);
  void (*v27)(char *);
  uint64_t v29;
  char v30[32];

  v6 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xE8);
  v29 = type metadata accessor for TTRIOptionMenuCellContentState(0, v6, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF0), a4);
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v9 = v30 - v8 + 16;
  v10 = sub_1B4907B14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = v30 - v12 + 16;
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = v30 - v16 + 16;
  sub_1B41F335C(a1, (uint64_t)v30);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v13, 0, 1, v6);
    v20 = v17;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, v6);
    v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v22 = (char *)v4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x78);
    swift_beginAccess();
    v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v24 = v29;
    v23(v9, v22, v29);
    (*(void (**)(char *, char *, uint64_t))(v14 + 24))(&v9[*(int *)(v24 + 48)], v20, v6);
    sub_1B48F9D2C((uint64_t)v9);
    v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v9, v24);
    v26 = (void (**)(char *))((char *)v4 + *(_QWORD *)((*v21 & *v4) + 0x100));
    swift_beginAccess();
    v27 = *v26;
    if (*v26)
    {
      swift_endAccess();
      v23(v9, v22, v24);
      swift_retain();
      v27(v9);
      sub_1B41E1CB4((uint64_t)v27);
      v25(v9, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v6);
      return swift_endAccess();
    }
  }
  else
  {
    v19(v13, 1, 1, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1B43107AC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  void (*v52)(char *, uint64_t);
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  void (*v60)(char *, uint64_t);
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *boxed_opaque_existential_0;
  void (*v77)(uint64_t *, id, uint64_t, uint64_t);
  uint64_t result;
  void *v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t TupleTypeMetadata2;
  uint64_t v102;
  char *v103;
  void (*v104)(uint64_t *, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, char *, _QWORD *);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116[4];
  uint64_t v117;
  uint64_t v118;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v1);
  v4 = v3[115];
  v102 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v87 = (char *)&v85 - v5;
  v6 = sub_1B4907B14();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v88 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v85 - v7;
  v95 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v9);
  v92 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v100 = (char *)&v85 - v12;
  v13 = v3[116];
  v15 = type metadata accessor for TTRIMenuItem(0, v4, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v111 = v15;
  v112 = v16;
  MEMORY[0x1E0C80A78](v15);
  v93 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v17;
  MEMORY[0x1E0C80A78](v18);
  v113 = (char *)&v85 - v19;
  v98 = v13;
  v21 = (_QWORD *)type metadata accessor for TTRIOptionMenuCellContentState.Option(0, v4, v13, v20);
  v22 = *(v21 - 1);
  MEMORY[0x1E0C80A78](v21);
  v110 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v23;
  MEMORY[0x1E0C80A78](v24);
  v115 = (char *)&v85 - v25;
  v117 = 0;
  v118 = MEMORY[0x1E0DEE9D8];
  v26 = v3[118];
  v99 = v1;
  v27 = (_QWORD *)((char *)v1 + v26);
  swift_beginAccess();
  v28 = *v27;
  v96 = v21;
  v105 = v22;
  if (v28)
  {
    v29 = v27[1];
    ObjectType = swift_getObjectType();
    v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    swift_unknownObjectRetain();
    v32 = ObjectType;
    v22 = v105;
    v31(v32, v29);
    v21 = v96;
    swift_unknownObjectRelease();
  }
  v97 = v27;
  v33 = *(_QWORD *)((char *)v99 + *(_QWORD *)((*v2 & *v99) + 0x3C0));
  v34 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v35 = MEMORY[0x1B5E3B224](v34, v21);
  v37 = (_QWORD *)v111;
  v36 = v112;
  if (v35)
  {
    v89 = (char *)v99 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v99) + 0x3B8);
    swift_beginAccess();
    v38 = 0;
    v109 = v4;
    v91 = v6;
    v90 = v8;
    v108 = v33;
    while (1)
    {
      v40 = sub_1B4906E48();
      sub_1B4906DDC();
      if ((v40 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, _QWORD *))(v22 + 16))(v115, v33+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v38, v21);
        v41 = v38 + 1;
        if (__OFADD__(v38, 1))
          goto LABEL_44;
      }
      else
      {
        result = sub_1B4907EC8();
        if (v86 != 8)
        {
          __break(1u);
          return result;
        }
        v116[0] = result;
        (*(void (**)(char *, uint64_t *, _QWORD *))(v22 + 16))(v115, v116, v21);
        swift_unknownObjectRelease();
        v41 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
      }
      v114 = v41;
      v42 = v110;
      (*(void (**)(char *, char *, _QWORD *))(v22 + 32))(v110, v115, v21);
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v36 + 48))(v42, 1, v37) != 1)
        break;
      if (v117)
      {
        sub_1B41DF50C(0, (unint64_t *)&unk_1EF0A7B40);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B49077E4();
        MEMORY[0x1B5E3B128]();
        v33 = v108;
        if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B4906DF4();
        sub_1B4906E54();
        sub_1B4906DC4();
        v36 = v112;
        v22 = v105;
      }
      else
      {
        v33 = v108;
      }
      v117 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
LABEL_7:
      v39 = v114;
      ++v38;
      if (v39 == MEMORY[0x1B5E3B224](v33, v21))
        goto LABEL_38;
    }
    v43 = v113;
    v107 = *(void (**)(char *, char *, _QWORD *))(v36 + 32);
    v107(v113, v42, v37);
    v44 = &v43[*((int *)v37 + 10)];
    v45 = v102;
    v46 = *(void (**)(uint64_t *, char *, uint64_t))(v102 + 16);
    v47 = v100;
    v103 = v44;
    v104 = v46;
    ((void (*)(char *))v46)(v100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v47, 0, 1, v4);
    v48 = &v8[*(int *)(TupleTypeMetadata2 + 48)];
    v49 = v95;
    v50 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v50(v8, v47, v6);
    v50(v48, v89, v6);
    v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
    if (v51(v8, 1, v4) == 1)
    {
      v52 = *(void (**)(char *, uint64_t))(v49 + 8);
      v52(v47, v6);
      v53 = v51(v48, 1, v4);
      v54 = v111;
      if (v53 == 1)
      {
        v52(v8, v6);
LABEL_22:
        v106 = 1;
LABEL_24:
        sub_1B41DF50C(0, (unint64_t *)&qword_1EF0A7B60);
        v61 = v113;
        v62 = (void *)*((_QWORD *)v113 + 2);
        v63 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v64 = v112;
        v65 = v93;
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v93, v61, v54);
        v66 = (*(unsigned __int8 *)(v64 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v67 = (char *)swift_allocObject();
        v68 = v98;
        *((_QWORD *)v67 + 2) = v109;
        *((_QWORD *)v67 + 3) = v68;
        *((_QWORD *)v67 + 4) = v63;
        v107(&v67[v66], v65, (_QWORD *)v54);
        v69 = v62;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v70 = (void *)sub_1B4907928();
        v71 = v117;
        v72 = v70;
        if (v71)
        {
          MEMORY[0x1B5E3B128]();
          v73 = v97;
          v6 = v91;
          v21 = v96;
          v33 = v108;
          if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B4906DF4();
        }
        else
        {
          MEMORY[0x1B5E3B128]();
          v73 = v97;
          v6 = v91;
          v21 = v96;
          v33 = v108;
          if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B4906DF4();
        }
        sub_1B4906E54();
        v4 = v109;
        sub_1B4906DC4();
        swift_beginAccess();
        if (*v73)
        {
          v74 = v73[1];
          swift_endAccess();
          v75 = swift_getObjectType();
          v116[3] = v4;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v116);
          v104(boxed_opaque_existential_0, v103, v4);
          v77 = *(void (**)(uint64_t *, id, uint64_t, uint64_t))(v74 + 16);
          swift_unknownObjectRetain();
          v77(v116, v72, v75, v74);

          swift_unknownObjectRelease();
          v36 = v112;
          v37 = (_QWORD *)v111;
          (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v111);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
        }
        else
        {
          v36 = v112;
          v37 = (_QWORD *)v111;
          (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v111);
          swift_endAccess();

        }
        v8 = v90;
        v22 = v105;
        goto LABEL_7;
      }
    }
    else
    {
      v55 = v92;
      v50(v92, v8, v6);
      if (v51(v48, 1, v4) != 1)
      {
        v56 = v102;
        v57 = v87;
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v87, v48, v4);
        v58 = sub_1B4906A1C();
        v59 = *(void (**)(char *, uint64_t))(v56 + 8);
        v59(v57, v4);
        v60 = *(void (**)(char *, uint64_t))(v49 + 8);
        v60(v100, v6);
        v59(v92, v4);
        v60(v8, v6);
        v54 = v111;
        if ((v58 & 1) != 0)
          goto LABEL_22;
LABEL_23:
        v106 = 0;
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v100, v6);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v4);
      v54 = v111;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v8, TupleTypeMetadata2);
    goto LABEL_23;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v37 = v97;
  if (v117)
  {
    sub_1B41DF50C(0, (unint64_t *)&unk_1EF0A7B40);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B49077E4();
    MEMORY[0x1B5E3B128]();
    if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_45:
      sub_1B4906DF4();
    sub_1B4906E54();
    sub_1B4906DC4();
  }
  v79 = v99;
  v80 = *(void **)((char *)v99 + *(_QWORD *)((*v21 & *v99) + 0x3C8));
  sub_1B41DF50C(0, (unint64_t *)&unk_1EF0A7B40);
  v81 = (void *)sub_1B49077E4();
  objc_msgSend(v80, sel_setMenu_, v81);

  objc_msgSend(v80, sel_setChangesSelectionAsPrimaryAction_, 1);
  objc_msgSend(v79, sel__setPopupMenuButton_, v80);
  if (*v37)
  {
    v82 = v37[1];
    v83 = swift_getObjectType();
    v84 = *(void (**)(void *, uint64_t, uint64_t))(v82 + 24);
    swift_unknownObjectRetain();
    v84(v80, v83, v82);
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id TTRIOptionMenuTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *TTRIOptionMenuTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  int v35;
  id v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  objc_class *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_class *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  NSString *v61;
  NSString *v62;
  uint64_t v63;
  char *v64;
  id v65;
  char *v66;
  void *v67;
  id v68;
  void *v69;
  char *v70;
  _BYTE v72[4];
  int v73;
  id v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  objc_class *ObjectType;
  uint64_t v81;
  void *v82;
  _QWORD aBlock[6];
  objc_super v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  char v94;

  v4 = v3;
  v82 = a3;
  v79 = a2;
  v81 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09B258);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1B49079A0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1B4907A54();
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)&v3[v6[117] + 8] = 0;
  swift_unknownObjectWeakInit();
  v15 = &v4[*(_QWORD *)((*v5 & *(_QWORD *)v4) + 0x3B0)];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = v6[115];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(&v4[*(_QWORD *)((*v5 & *(_QWORD *)v4) + 0x3B8)], 1, 1, v16);
  v17 = *(_QWORD *)((*v5 & *(_QWORD *)v3) + 0x3C0);
  type metadata accessor for TTRIOptionMenuCellContentState.Option(0, v16, v6[116], v18);
  v19 = v3;
  *(_QWORD *)&v3[v17] = sub_1B4906E30();
  type metadata accessor for TTRIOptionMenuTitlelessPopupButton();
  sub_1B4907A18();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DC30E0], v10);
  sub_1B49079AC();
  sub_1B4907994();
  sub_1B490797C();
  sub_1B4905C6C();
  v20 = sub_1B4905C60();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
  sub_1B49079E8();
  v21 = (void *)sub_1B4907A60();
  v22 = objc_msgSend(v21, sel_titleLabel);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);

  }
  objc_msgSend(v21, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v21, sel_setShowsMenuAsPrimaryAction_, 1);
  v24 = (void *)objc_opt_self();
  v25 = v21;
  v26 = objc_msgSend(v24, sel_secondaryLabelColor);
  objc_msgSend(v25, sel_setTintColor_, v26);

  *(_QWORD *)&v19[*(_QWORD *)((*v5 & *(_QWORD *)v19) + 0x3C8)] = v25;
  v27 = v25;

  v75 = v24;
  if (v82)
  {
    v28 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  v84.receiver = v19;
  v84.super_class = ObjectType;
  v29 = (char *)objc_msgSendSuper2(&v84, sel_initWithStyle_reuseIdentifier_, v81, v28);

  v30 = &v29[direct field offset for TTRIStaticTableViewStandardCell.extraAccessory];
  swift_beginAccess();
  v31 = *(void **)v30;
  v32 = *((_QWORD *)v30 + 1);
  v33 = *((_QWORD *)v30 + 2);
  v40 = *((_QWORD *)v30 + 3);
  v34 = (void *)*((_QWORD *)v30 + 4);
  v35 = v30[40];
  *(_QWORD *)v30 = v27;
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  v30[40] = 1;
  v36 = v27;
  v37 = v29;
  v38 = v36;
  v76 = v37;
  sub_1B4312E50(v31, v32, v33, v40, v34, v35);
  ObjectType = (objc_class *)v31;
  v79 = v32;
  v78 = v33;
  v77 = v40;
  v39 = v40;
  LODWORD(v40) = v35;
  v82 = v34;
  sub_1B4312EB8(v31, v32, v33, v39, v34, v35);
  v42 = *(void **)v30;
  v41 = *((_QWORD *)v30 + 1);
  v44 = *((_QWORD *)v30 + 2);
  v43 = *((_QWORD *)v30 + 3);
  v45 = (void *)*((_QWORD *)v30 + 4);
  v46 = v30[40];
  if (v46 == 255)
  {
    if ((_DWORD)v40 == 255)
      goto LABEL_14;
    goto LABEL_11;
  }
  if ((_DWORD)v40 == 255)
  {
LABEL_11:
    v74 = v38;
    v51 = ObjectType;
    LODWORD(v81) = v40;
    v40 = v79;
    v52 = v78;
    v53 = v77;
    sub_1B4312E50(ObjectType, v79, v78, v77, v82, v81);
    sub_1B4312E50(v42, v41, v44, v43, v45, v46);
    sub_1B4312EB8(v42, v41, v44, v43, v45, v46);
    v54 = v40;
    LOBYTE(v40) = v81;
    sub_1B4312EB8(v51, v54, v52, v53, v82, v81);
    goto LABEL_12;
  }
  v74 = v38;
  v47 = ObjectType;
  LODWORD(v81) = v40;
  v40 = v79;
  *(_QWORD *)&v90 = ObjectType;
  *((_QWORD *)&v90 + 1) = v79;
  v48 = v78;
  v49 = v77;
  v91 = v78;
  v92 = v77;
  v93 = v82;
  v94 = v81;
  *(_QWORD *)&v85 = v42;
  *((_QWORD *)&v85 + 1) = v41;
  v86 = v44;
  v87 = v43;
  v88 = v45;
  v89 = v46;
  sub_1B4312E50(ObjectType, v79, v78, v77, v82, v81);
  sub_1B4312E50(v42, v41, v44, v43, v45, v46);
  v73 = _s15RemindersUICore31TTRIStaticTableViewStandardCellC14ExtraAccessoryO2eeoiySbAE_AEtFZ_0(&v85, &v90);
  v50 = v40;
  LOBYTE(v40) = v81;
  sub_1B4312EB8(v47, v50, v48, v49, v82, v81);
  sub_1B4312EB8(v42, v41, v44, v43, v45, v46);
  if ((v73 & 1) != 0)
  {
    v38 = v74;
    goto LABEL_14;
  }
LABEL_12:
  v55 = v76;
  v56 = *(void **)&v76[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v55;
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = sub_1B4312F4C;
  *(_QWORD *)(v58 + 24) = v57;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v58;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_10;
  v59 = _Block_copy(aBlock);
  v60 = v55;
  swift_retain();
  swift_release();
  objc_msgSend(v56, sel_performBatchUpdates_, v59);
  _Block_release(v59);
  LOBYTE(v56) = swift_isEscapingClosureAtFileLocation();
  v38 = v74;

  swift_release();
  swift_release();
  sub_1B4312EB8(ObjectType, v79, v78, v77, v82, v40);
  if ((v56 & 1) == 0)
    goto LABEL_15;
  __break(1u);
LABEL_14:
  v55 = v76;

  sub_1B4312EB8(ObjectType, v79, v78, v77, v82, v40);
LABEL_15:

  v61 = (NSString *)*MEMORY[0x1E0DC4920];
  v62 = (NSString *)*MEMORY[0x1E0DC4938];
  v63 = *MEMORY[0x1E0DC4A88];
  v64 = v55;
  v65 = sub_1B47B81C8(v63, v61, v62, 0, 1);
  v66 = &v64[direct field offset for TTRIStaticTableViewStandardCell.subtitleFont];
  swift_beginAccess();
  v67 = *(void **)v66;
  *(_QWORD *)v66 = v65;
  v68 = v65;

  v69 = *(void **)&v64[qword_1EF0B34E8];
  if (v69)
    objc_msgSend(v69, sel_setFont_, *(_QWORD *)v66);

  v70 = v64;
  TTRIStaticTableViewStandardCell.subtitleTextColor.setter(objc_msgSend(v75, sel_secondaryLabelColor));

  return v70;
}

char *sub_1B4311CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;

  if (a4)
  {
    a4 = sub_1B4906A64();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return TTRIOptionMenuTableViewCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

void sub_1B4311CEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1B4313E8C();
}

void sub_1B4311D2C()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  sub_1B4313E8C();
}

uint64_t sub_1B4311D70(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  char *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  _QWORD v22[2];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;

  v27 = a1;
  v2 = *MEMORY[0x1E0DEEDD8] & *v1;
  v3 = *(_QWORD *)(v2 + 0x398);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v23 = (char *)v22 - v5;
  v6 = sub_1B4907B14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v24 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)v22 - v11;
  v22[1] = v2;
  v13 = *(_QWORD *)(v2 + 952);
  v26 = v1;
  v14 = (char *)v1 + v13;
  swift_beginAccess();
  v15 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v25 = v7;
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v16(v12, v14, v6);
  v16(v15, v27, v6);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v17(v12, 1, v3) == 1)
  {
    if (v17(v15, 1, v3) == 1)
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v6);
  }
  else
  {
    v16(v9, v12, v6);
    if (v17(v15, 1, v3) != 1)
    {
      v19 = v23;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v23, v15, v3);
      v20 = sub_1B4906A1C();
      v21 = *(void (**)(char *, uint64_t))(v4 + 8);
      v21(v19, v3);
      v21(v9, v3);
      result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v6);
      if ((v20 & 1) != 0)
        return result;
      return sub_1B43107AC(result);
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, TupleTypeMetadata2);
  return sub_1B43107AC(result);
}

uint64_t sub_1B4311FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v5 = type metadata accessor for TTRIOptionMenuCellContentState.Option(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x398), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x3A0), a4);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRIOptionMenuCellContentState<A>.Option, v5);
  v6 = sub_1B4906EB4();
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    return sub_1B43107AC(result);
  return result;
}

double TTRIOptionMenuTableViewCell.sideBySideTitleConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.6;
  *(_OWORD *)a1 = xmmword_1B49173C0;
  *(_OWORD *)(a1 + 16) = xmmword_1B49173D0;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t TTRIOptionMenuTableViewCell.extraAccessoryAlwaysPinnedToTrailingEdge.getter()
{
  return 1;
}

void sub_1B43120A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v24[4];

  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24[-1] - v11;
  swift_beginAccess();
  v13 = MEMORY[0x1B5E3D8DC](a2 + 16);
  if (v13)
  {
    v15 = (_QWORD *)v13;
    v16 = a3 + *(int *)(type metadata accessor for TTRIMenuItem(0, a4, a5, v14) + 40);
    v17 = *(_QWORD *)(a4 - 8);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v18(v12, v16, a4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, a4);
    sub_1B4312CA8((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v19 = (char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x3A8);
    if (MEMORY[0x1B5E3D8DC](v19))
    {
      v20 = *((_QWORD *)v19 + 1);
      ObjectType = swift_getObjectType();
      v24[3] = a4;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v24);
      v18((char *)boxed_opaque_existential_0, v16, a4);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 8))(v24, ObjectType, v20);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    UIAccessibilityPostNotification(*MEMORY[0x1E0DC4578], v15);

  }
}

uint64_t sub_1B4312238()
{
  return 1;
}

uint64_t TTRIOptionMenuTableViewCell.isAccessibilityElement.getter()
{
  return 1;
}

uint64_t (*TTRIOptionMenuTableViewCell.isAccessibilityElement.modify(_BYTE *a1))()
{
  *a1 = 1;
  return nullsub_1;
}

id sub_1B4312268(void *a1, uint64_t a2)
{
  return sub_1B4312830(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityLabel.getter);
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityLabel.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + qword_1EF0B34C8), sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B4906A64();

  return v3;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityLabel.modify(uint64_t *a1))()
{
  uint64_t v2;

  *a1 = TTRIOptionMenuTableViewCell.accessibilityLabel.getter();
  a1[1] = v2;
  return destroy for TTRAccountsListsViewModel.SmartList.DynamicGlyph;
}

id sub_1B4312314(void *a1)
{
  id v1;
  _QWORD *v2;
  void *v3;

  v1 = a1;
  v2 = TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter();

  if (v2)
  {
    v3 = (void *)sub_1B4906DA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

_QWORD *TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter()
{
  _QWORD *v0;
  objc_class *ObjectType;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *result;
  void *v20;
  uint64_t v21;
  objc_super v22;
  _QWORD *v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = TTRIOptionMenuTableViewCell.accessibilityLabel.getter();
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    v2 = sub_1B4290474(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v8 = v2[2];
    v7 = v2[3];
    if (v8 >= v7 >> 1)
      v2 = sub_1B4290474((_QWORD *)(v7 > 1), v8 + 1, 1, v2);
    v2[2] = v8 + 1;
    v9 = &v2[2 * v8];
    v9[4] = v5;
    v9[5] = v6;
    v23 = v2;
  }
  v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                              + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8)), sel_titleLabel));
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_text);

    if (v12)
    {
      v13 = sub_1B4906A64();
      v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1B4290474(0, v2[2] + 1, 1, v2);
      v17 = v2[2];
      v16 = v2[3];
      if (v17 >= v16 >> 1)
        v2 = sub_1B4290474((_QWORD *)(v16 > 1), v17 + 1, 1, v2);
      v2[2] = v17 + 1;
      v18 = &v2[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
      v23 = v2;
    }
  }
  v22.receiver = v0;
  v22.super_class = ObjectType;
  result = objc_msgSendSuper2(&v22, sel_accessibilityUserInputLabels);
  if (result)
  {
    v20 = result;
    v21 = sub_1B4906DAC();

    sub_1B4232AEC(v21);
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.modify(_QWORD *a1))()
{
  *a1 = TTRIOptionMenuTableViewCell.accessibilityUserInputLabels.getter();
  return destroy for TTRReminderCellInlineHashtagVisibility;
}

id sub_1B4312584(void *a1, uint64_t a2)
{
  return sub_1B4312830(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityValue.getter);
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityValue.getter()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = (_QWORD *)((char *)v0 + direct field offset for TTRIStaticTableViewStandardCell.ttriAccessibilitySubtitle);
  swift_beginAccess();
  v2 = v1[1];
  if (v2
    || (v1 = (_QWORD *)((char *)v0 + direct field offset for TTRIStaticTableViewStandardCell.subtitle),
        swift_beginAccess(),
        (v2 = v1[1]) != 0))
  {
    v3 = *v1;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v4 = sub_1B4290474(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v4 = sub_1B4290474((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v4[2] = v6 + 1;
    v7 = &v4[2 * v6];
    v7[4] = v3;
    v7[5] = v2;
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v8 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8));
  if ((objc_msgSend(v8, sel_isHidden) & 1) == 0)
  {
    v9 = objc_msgSend(v8, sel_titleLabel);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_text);

      if (v11)
      {
        v12 = sub_1B4906A64();
        v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1B4290474(0, v4[2] + 1, 1, v4);
        v16 = v4[2];
        v15 = v4[3];
        if (v16 >= v15 >> 1)
          v4 = sub_1B4290474((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
        v4[2] = v16 + 1;
        v17 = &v4[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
      }
    }
  }
  if (qword_1ED4EE450 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
  sub_1B4221ECC();
  v18 = sub_1B49069BC();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityValue.modify(uint64_t *a1))()
{
  uint64_t v2;

  *a1 = TTRIOptionMenuTableViewCell.accessibilityValue.getter();
  a1[1] = v2;
  return destroy for TTRAccountsListsViewModel.SmartList.DynamicGlyph;
}

id sub_1B4312824(void *a1, uint64_t a2)
{
  return sub_1B4312830(a1, a2, (void (*)(void))TTRIOptionMenuTableViewCell.accessibilityHint.getter);
}

id sub_1B4312830(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

id TTRIOptionMenuTableViewCell.accessibilityHint.getter()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8));
  if ((objc_msgSend(v1, sel_isHidden) & 1) != 0)
    return 0;
  v2 = objc_msgSend(v1, sel_menu);

  if (v2)
  {
    if (qword_1EF0985C8 != -1)
      swift_once();
    v2 = (id)static TTRAccesibility.General.Hint.ShowContextMenu;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return v2;
}

uint64_t TTRIOptionMenuTableViewCell.accessibilityHint.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityHint.modify(id *a1))()
{
  void *v2;

  *a1 = TTRIOptionMenuTableViewCell.accessibilityHint.getter();
  a1[1] = v2;
  return destroy for TTRRemindersBoardCellInfoButtonStates;
}

double sub_1B4312994(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  TTRIOptionMenuTableViewCell.accessibilityActivationPoint.getter();
  v3 = v2;

  return v3;
}

id TTRIOptionMenuTableViewCell.accessibilityActivationPoint.getter()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8)), sel_accessibilityActivationPoint);
}

uint64_t (*TTRIOptionMenuTableViewCell.accessibilityActivationPoint.modify(_QWORD *a1))(_QWORD)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(*(id *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x3C8)), sel_accessibilityActivationPoint);
  *a1 = v3;
  a1[1] = v4;
  return nullsub_1;
}

void sub_1B4312A58()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1B41F4748((uint64_t)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8));
  swift_unknownObjectRelease();
  v2 = (char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x3B8);
  v3 = sub_1B4907B14();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

}

void sub_1B4312B14(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1B41F4748((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x3A8));
  swift_unknownObjectRelease();
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x3B8);
  v4 = sub_1B4907B14();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

}

id sub_1B4312BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  swift_getObjectType();
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v8 = (_QWORD *)((char *)v3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF8));
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)((char *)v3 + *(_QWORD *)((*v7 & *v3) + 0x100));
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)((char *)v3 + *(_QWORD *)((*v7 & *v3) + 0x108));
  *v10 = a2;
  v10[1] = a3;
  swift_getMetatypeMetadata();
  swift_unknownObjectRetain();
  v11 = sub_1B4906A94();
  return sub_1B48F9E18(a1, 0, v11, v12);
}

uint64_t sub_1B4312C90()
{
  uint64_t v0;

  return sub_1B430FEA8(*(_QWORD **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1B4312C98()
{
  return swift_deallocObject();
}

uint64_t sub_1B4312CA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _BYTE v10[24];

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1B4907B14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-v6];
  v8 = (char *)v1 + *(_QWORD *)(v3 + 952);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
  swift_endAccess();
  sub_1B4311D70(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B4312DA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x3B0));
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_unknownObjectRetain();
  v6 = swift_unknownObjectRelease();
  return sub_1B43107AC(v6);
}

void sub_1B4312E24()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1B4312E50(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 != -1)
    return sub_1B4312E64(result, a2, a3, a4, a5, a6);
  return result;
}

id sub_1B4312E64(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  id v6;

  switch(a6)
  {
    case 2:
      return (id)swift_unknownObjectRetain();
    case 1:
      return result;
    case 0:
      v6 = a5;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      return (id)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return result;
}

void sub_1B4312EB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 != -1)
    sub_1B4312ECC(a1, a2, a3, a4, a5, a6);
}

void sub_1B4312ECC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    if (a6 != 1)
    {
      if (a6)
        return;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = a5;
    }

  }
}

uint64_t sub_1B4312F28()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B4312F4C()
{
  uint64_t v0;

  return sub_1B47CBAAC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B4312F54()
{
  return swift_deallocObject();
}

uint64_t sub_1B4312F64()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1B4313004(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || v8 + ((v7 + 64) & (unint64_t)~v7) + 1 > 0x18)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v11[(v7 & 0xF8 ^ 0x1F8) & (v7 + 16)];
    swift_retain();
  }
  else
  {
    v12 = ~v7;
    v13 = *a2;
    LODWORD(v14) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF)
      v14 = *a2;
    if ((int)v14 - 1 < 0)
    {
      v15 = a2[1];
      v16 = a2[2];
      *(_QWORD *)a1 = v13;
      *((_QWORD *)a1 + 1) = v15;
      *((_QWORD *)a1 + 2) = v16;
      v17 = v13;
      v18 = v15;
      v19 = v16;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = a2[2];
    }
    v20 = (_QWORD *)((unint64_t)(v4 + 31) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v22[1] = v23[1];
    v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v24 = *v25;
    v26 = (char *)v25 + v7;
    v27 = ((unint64_t)v24 + v7 + 8) & v12;
    v28 = (unint64_t)(v26 + 8) & v12;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v29(v27, v28, v5);
    *(_BYTE *)(v27 + v8) = *(_BYTE *)(v28 + v8);
  }
  return v4;
}

uint64_t sub_1B431318C(id *a1, uint64_t a2)
{
  id v4;

  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    v4 = *a1;
  if ((int)v4 - 1 < 0)
  {

  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((((((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1B4313224(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a2;
  LODWORD(v7) = -1;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v7 = *(void **)a2;
  if ((int)v7 - 1 < 0)
  {
    v8 = *(void **)(a2 + 8);
    v9 = *(void **)(a2 + 16);
    *a1 = v6;
    a1[1] = v8;
    a1[2] = v9;
    v10 = v6;
    v11 = v8;
    v12 = v9;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(_QWORD *)(a2 + 16);
  }
  v13 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((unint64_t)v17 + v21 + 8) & ~v21;
  v23 = ((unint64_t)v18 + v21 + 8) & ~v21;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v24(v22, v23, v19);
  *(_BYTE *)(v22 + *(_QWORD *)(v20 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v20 + 64));
  return a1;
}

void **sub_1B4313354(void **a1, __int128 *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  __int128 v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;

  v6 = *a1;
  LODWORD(v7) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  else
    v8 = *a1;
  v9 = (_DWORD)v8 - 1;
  v10 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v7 = *(void **)a2;
  v11 = (_DWORD)v7 - 1;
  if (v9 < 0)
  {
    if (v11 < 0)
    {
      *a1 = v10;
      v29 = v10;

      v30 = a1[1];
      v31 = (void *)*((_QWORD *)a2 + 1);
      a1[1] = v31;
      v32 = v31;

      v33 = a1[2];
      v34 = (void *)*((_QWORD *)a2 + 2);
      a1[2] = v34;
      v35 = v34;

      goto LABEL_12;
    }

    goto LABEL_11;
  }
  if ((v11 & 0x80000000) == 0)
  {
LABEL_11:
    v17 = *a2;
    a1[2] = (void *)*((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v17;
    goto LABEL_12;
  }
  *a1 = v10;
  v12 = (void *)*((_QWORD *)a2 + 1);
  a1[1] = v12;
  v13 = (void *)*((_QWORD *)a2 + 2);
  a1[2] = v13;
  v14 = v10;
  v15 = v12;
  v16 = v13;
LABEL_12:
  v18 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = ((unint64_t)v22 + v25 + 8) & ~v25;
  v27 = ((unint64_t)v23 + v25 + 8) & ~v25;
  (*(void (**)(uint64_t, uint64_t))(v24 + 24))(v26, v27);
  *(_BYTE *)(v26 + *(_QWORD *)(v24 + 64)) = *(_BYTE *)(v27 + *(_QWORD *)(v24 + 64));
  return a1;
}

uint64_t sub_1B4313500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (_OWORD *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)((a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v8 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v9 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v12, v13);
  *(_BYTE *)(v12 + *(_QWORD *)(v10 + 64)) = *(_BYTE *)(v13 + *(_QWORD *)(v10 + 64));
  return a1;
}

void **sub_1B43135AC(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  void *v21;

  v6 = *a1;
  LODWORD(v7) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    v7 = *a1;
  if ((int)v7 - 1 < 0)
  {
    LODWORD(v8) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF)
      v8 = *a2;
    if ((int)v8 - 1 < 0)
    {
      *a1 = *a2;

      v20 = a1[1];
      a1[1] = a2[1];

      v21 = a1[2];
      a1[2] = a2[2];

      goto LABEL_9;
    }

  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
LABEL_9:
  v9 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = ((unint64_t)v13 + v16 + 8) & ~v16;
  v18 = ((unint64_t)v14 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v17, v18);
  *(_BYTE *)(v17 + *(_QWORD *)(v15 + 64)) = *(_BYTE *)(v18 + *(_QWORD *)(v15 + 64));
  return a1;
}

uint64_t sub_1B4313710(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = *(_QWORD *)(v4 + 64) + ((v7 + 64) & ~v7) + 1;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      v15 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 8) & ~v7);
      v16 = *(_QWORD *)(v15 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B43137E8 + 4 * byte_1B49173E0[(v9 - 1)]))();
}

void sub_1B4313870(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64)
     + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + 1;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if (*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~*(unsigned __int8 *)(v5 + 80)) != -1)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1B4313A84(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;
  unsigned int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 - 1 < a2)
  {
    v8 = a2 - v6 + 2;
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 24) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if ((v5 & 0x80000000) != 0)
  {
    v13 = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
  }
  else
  {
    v12 = *(_QWORD *)(a1 + 8);
    if (v12 >= 0xFFFFFFFF)
      LODWORD(v12) = -1;
    v13 = v12 + 1;
  }
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_1B4313BC0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = v6 - 1;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v6 - 1 >= a3)
  {
    v11 = 0u;
    if (v7 >= a2)
      goto LABEL_16;
  }
  else
  {
    v9 = a3 - v6 + 2;
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v8 + 24) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_16:
      __asm { BR              X14 }
  }
  v12 = a2 - v6;
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v8 + 24) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v8 + 24) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1B4313CD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B4313D78);
}

void sub_1B4313CD8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B4313CE0);
  JUMPOUT(0x1B4313D78);
}

void sub_1B4313D20()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B4313D78);
}

void sub_1B4313D28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B4313D78);
}

void sub_1B4313D30(uint64_t a1, unsigned int a2, int a3)
{
  unsigned int v3;
  unsigned int v4;
  _QWORD *v5;
  size_t v6;

  *(_WORD *)((char *)v5 + v6) = 0;
  if (a2)
  {
    if (a2 + 1 <= v4)
    {
      if (a2 != -1)
      {
        if (a3 < 0)
          JUMPOUT(0x1B4313D3CLL);
        if (((a2 + 1) & 0x80000000) != 0)
          JUMPOUT(0x1B4313D6CLL);
        v5[1] = a2;
      }
    }
    else if ((_DWORD)v6)
    {
      v3 = a2 - v4;
      bzero(v5, v6);
      *(_DWORD *)v5 = v3;
    }
  }
  JUMPOUT(0x1B4313D78);
}

uint64_t sub_1B4313D90()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTRIOptionMenuCellContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIOptionMenuCellContent);
}

uint64_t sub_1B4313DE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B4907B14();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TTRIOptionMenuTableViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIOptionMenuTableViewCell);
}

void sub_1B4313E8C()
{
  char *v0;
  _QWORD *v1;
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v0);
  *(_QWORD *)&v0[v2[117] + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = &v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x3B0)];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = v2[115];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(&v0[*(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x3B8)], 1, 1, v4);
  v5 = *(_QWORD *)((*v1 & *(_QWORD *)v0) + 0x3C0);
  type metadata accessor for TTRIOptionMenuCellContentState.Option(0, v4, v2[116], v6);
  *(_QWORD *)&v0[v5] = sub_1B4906E30();

  sub_1B4908144();
  __break(1u);
}

uint64_t sub_1B4313F90()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B4313FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for TTRIMenuItem(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 40) & ~v7;
  swift_release();
  v9 = v4 + v8;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(v6 + 40), v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B431405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v4[2];
  v7 = v4[3];
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRIMenuItem(0, v6, v7, a4) - 8) + 80);
  sub_1B43120A0(a1, v4[4], (uint64_t)v4 + ((v8 + 40) & ~v8), v6, v7);
}

uint64_t TTRIButtonCellContentState.title.getter(uint64_t a1)
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t TTRIButtonCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRIButtonCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t static TTRIButtonCellContentState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1B4908390();
}

uint64_t TTRIButtonCellContent.action.getter()
{
  return sub_1B43141E0(&direct field offset for TTRIButtonCellContent.action, (void (*)(_QWORD, _QWORD))sub_1B41E1C64);
}

uint64_t TTRIButtonCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B4314254(a1, a2, &direct field offset for TTRIButtonCellContent.action, (uint64_t (*)(uint64_t, uint64_t))sub_1B41E1CB4);
}

uint64_t (*TTRIButtonCellContent.action.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t TTRIButtonCellContent.stateChangeBlock.getter()
{
  return sub_1B43141E0(&direct field offset for TTRIButtonCellContent.stateChangeBlock, (void (*)(_QWORD, _QWORD))sub_1B41E1C64);
}

uint64_t sub_1B43141E0(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t TTRIButtonCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B4314254(a1, a2, &direct field offset for TTRIButtonCellContent.stateChangeBlock, (uint64_t (*)(uint64_t, uint64_t))sub_1B41E1CB4);
}

uint64_t sub_1B4314254(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  v9 = *v8;
  v10 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*TTRIButtonCellContent.stateChangeBlock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTRIButtonCellContent.__allocating_init(state:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return TTRIButtonCellContent.init(state:)(a1, a2);
}

id TTRIButtonCellContent.init(state:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  objc_super v11;

  v5 = (_QWORD *)((char *)v2 + direct field offset for TTRIButtonCellContent.action);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)((char *)v2 + direct field offset for TTRIButtonCellContent.stateChangeBlock);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x68)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)((*v7 & *v2) + 0x70) + 8) = 0;
  swift_unknownObjectWeakInit();
  *((_BYTE *)v2 + *(_QWORD *)((*v7 & *v2) + 0x90)) = 0;
  v8 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v7 & *v2) + 0x78));
  *v8 = a1;
  v8[1] = a2;
  *(_QWORD *)((char *)v2 + *(_QWORD *)((*v7 & *v2) + 0x80)) = 0;
  v9 = (_QWORD *)((char *)v2 + *(_QWORD *)((*v7 & *v2) + 0x88));
  *v9 = 0x61426E6F74747542;
  v9[1] = 0xEF6C6C6543656764;
  v11.receiver = v2;
  v11.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D560);
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t TTRIButtonCellContent.selectionBehavior.getter()
{
  return 3;
}

void TTRIButtonCellContent.updateCell(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button);
  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v2 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_forState_, v2, 0);

  v3 = objc_msgSend(v1, sel_titleLabel);
  if (v3)
  {
    v4 = v3;
    v5 = *MEMORY[0x1E0DC4A88];
    v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_, *MEMORY[0x1E0DC4A88], 0);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_fontDescriptorWithDesign_, *MEMORY[0x1E0DC13A8]);

      if (v8)
      {
        v9 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v8, 0.0);
        if (v9)
          goto LABEL_8;
      }
    }
    else
    {
      v8 = 0;
    }
    v9 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, v5);
LABEL_8:

    objc_msgSend(v4, sel_setFont_, v9);
    objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);

  }
}

id TTRIButtonCellContent.willUnassignCell(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button), sel_removeTarget_action_forControlEvents_, v1, sel_buttonAction_, 0x2000);
}

id TTRIButtonCellContent.didAssignCell(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button), sel_addTarget_action_forControlEvents_, v1, sel_buttonAction_, 0x2000);
}

uint64_t sub_1B4314688(char *a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  char *v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  _OWORD v10[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_1B4907C4C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v5 = a1;
  }
  v6 = &a1[direct field offset for TTRIButtonCellContent.action];
  swift_beginAccess();
  v7 = *(void (**)(uint64_t))v6;
  if (*(_QWORD *)v6)
  {
    v8 = swift_retain();
    v7(v8);
    sub_1B41E1CB4((uint64_t)v7);
  }

  return sub_1B4314F88((uint64_t)v10);
}

void TTRIButtonCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TTRIButtonCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B4314790()
{
  uint64_t v0;

  sub_1B41E1CB4(*(_QWORD *)(v0 + direct field offset for TTRIButtonCellContent.action));
  return sub_1B41E1CB4(*(_QWORD *)(v0 + direct field offset for TTRIButtonCellContent.stateChangeBlock));
}

uint64_t sub_1B43147C8(uint64_t a1)
{
  sub_1B41E1CB4(*(_QWORD *)(a1 + direct field offset for TTRIButtonCellContent.action));
  return sub_1B41E1CB4(*(_QWORD *)(a1 + direct field offset for TTRIButtonCellContent.stateChangeBlock));
}

void sub_1B4314808()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TTRIButtonCellTableCell.button.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button);
}

id TTRIButtonCellTableCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void TTRIButtonCellTableCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  void *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  void *v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  double v30;
  id v31;
  void *v32;
  void *v33;
  int v34;
  objc_super v35;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = (void *)objc_opt_self();
  v9 = v4;
  v10 = objc_msgSend(v8, sel_buttonWithType_, 1);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button] = v10;
  v11 = v10;
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  if (a3)
  {
    v12 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v35.receiver = v9;
  v35.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v35, sel_initWithStyle_reuseIdentifier_, a1, v12);

  v14 = (char *)v13;
  v15 = objc_msgSend(v14, sel_contentView);
  v16 = OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button;
  objc_msgSend(v15, sel_addSubview_, *(_QWORD *)&v14[OBJC_IVAR____TtC15RemindersUICore23TTRIButtonCellTableCell_button]);

  v17 = objc_msgSend(*(id *)&v14[v16], sel_heightAnchor);
  v18 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToConstant_, 52.0);

  v19 = *(id *)&v14[v16];
  v20 = objc_msgSend(v14, sel_contentView);
  v21 = UIView.constraintsEqualTo(_:edges:)(v20, 15);

  v22 = *(void **)&v14[v16];
  v23 = objc_msgSend(v22, sel_titleLabel);
  if (v23)
  {
    v24 = v23;
    v25 = UIView.constraintsEqualTo(_:edges:)(v22, 5);
    sub_1B42330A4(v25);

  }
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v26 = sub_1B49081B0();
    if (!v26)
      goto LABEL_15;
  }
  else
  {
    v26 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v26)
      goto LABEL_15;
  }
  type metadata accessor for UILayoutPriority(0);
  if (v26 < 1)
  {
    __break(1u);
    return;
  }
  v27 = 0;
  do
  {
    if ((v21 & 0xC000000000000001) != 0)
      v28 = (id)MEMORY[0x1B5E3C268](v27, v21);
    else
      v28 = *(id *)(v21 + 8 * v27 + 32);
    v29 = v28;
    ++v27;
    objc_msgSend(v18, sel_priority);
    sub_1B4314D30();
    sub_1B490590C();
    LODWORD(v30) = v34;
    objc_msgSend(v29, sel_setPriority_, v30);

  }
  while (v26 != v27);
LABEL_15:
  swift_bridgeObjectRelease_n();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v31 = v18;
  MEMORY[0x1B5E3B128]();
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B4906DF4();
  v32 = (void *)objc_opt_self();
  sub_1B4906E54();
  sub_1B4906DC4();
  swift_bridgeObjectRelease();
  sub_1B4314D78();
  v33 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);

}

unint64_t sub_1B4314D30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4E94B0;
  if (!qword_1ED4E94B0)
  {
    type metadata accessor for UILayoutPriority(255);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DC2B88], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4E94B0);
  }
  return result;
}

unint64_t sub_1B4314D78()
{
  unint64_t result;

  result = qword_1ED4E9D30;
  if (!qword_1ED4E9D30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4E9D30);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRIButtonCellContentState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

_QWORD *assignWithCopy for TTRIButtonCellContentState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TTRIButtonCellContentState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersBoardCellInfoButtonStates(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersBoardCellInfoButtonStates(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIButtonCellContentState()
{
  return &type metadata for TTRIButtonCellContentState;
}

uint64_t type metadata accessor for TTRIButtonCellContent()
{
  uint64_t result;

  result = qword_1EF09D598;
  if (!qword_1EF09D598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B4314F20()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B4314F60()
{
  return type metadata accessor for TTRIButtonCellContent();
}

uint64_t type metadata accessor for TTRIButtonCellTableCell()
{
  return objc_opt_self();
}

uint64_t sub_1B4314F88(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id TTRISliderCellContentState.icon.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1B430EFBC(*v0, v0[1], v0[2]);
  return v1;
}

void TTRISliderCellContentState.icon.setter(void *a1, void *a2, void *a3)
{
  void **v3;

  sub_1B430F03C(*v3, v3[1], v3[2]);
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
}

uint64_t (*TTRISliderCellContentState.icon.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRISliderCellContentState.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRISliderCellContentState.title.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRISliderCellContentState.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TTRISliderCellContentState.subtitle.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.minimumValue.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 56);
}

void TTRISliderCellContentState.minimumValue.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 56) = a1;
}

uint64_t (*TTRISliderCellContentState.minimumValue.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.maximumValue.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 60);
}

void TTRISliderCellContentState.maximumValue.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 60) = a1;
}

uint64_t (*TTRISliderCellContentState.maximumValue.modify())()
{
  return nullsub_1;
}

float TTRISliderCellContentState.value.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 64);
}

void TTRISliderCellContentState.value.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 64) = a1;
}

uint64_t (*TTRISliderCellContentState.value.modify())()
{
  return nullsub_1;
}

uint64_t TTRISliderCellContentState.init(icon:title:subtitle:minimumValue:maximumValue:value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  *(float *)(a8 + 56) = a9;
  *(float *)(a8 + 60) = a10;
  *(float *)(a8 + 64) = a11;
  return result;
}

BOOL sub_1B43151C0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  int v8;
  _OWORD v9[4];
  int v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_DWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_DWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s15RemindersUICore26TTRISliderCellContentStateV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
}

uint64_t TTRISliderCellContent.action.getter()
{
  return sub_1B43141E0(&direct field offset for TTRISliderCellContent.action, (void (*)(_QWORD, _QWORD))sub_1B41E1C64);
}

uint64_t TTRISliderCellContent.action.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B4314254(a1, a2, &direct field offset for TTRISliderCellContent.action, (uint64_t (*)(uint64_t, uint64_t))sub_1B41E1CB4);
}

uint64_t (*TTRISliderCellContent.action.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t TTRISliderCellContent.stateChangeBlock.getter()
{
  return sub_1B43141E0(&direct field offset for TTRISliderCellContent.stateChangeBlock, (void (*)(_QWORD, _QWORD))sub_1B41E1C64);
}

uint64_t TTRISliderCellContent.stateChangeBlock.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B4314254(a1, a2, &direct field offset for TTRISliderCellContent.stateChangeBlock, (uint64_t (*)(uint64_t, uint64_t))sub_1B41E1CB4);
}

uint64_t (*TTRISliderCellContent.stateChangeBlock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTRISliderCellContent.__allocating_init(state:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TTRISliderCellContent.init(state:)(a1);
}

id TTRISliderCellContent.init(state:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  objc_super v11;

  v3 = (_QWORD *)((char *)v1 + direct field offset for TTRISliderCellContent.action);
  *v3 = 0;
  v3[1] = 0;
  v4 = (_QWORD *)((char *)v1 + direct field offset for TTRISliderCellContent.stateChangeBlock);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68)) = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x70) + 8) = 0;
  swift_unknownObjectWeakInit();
  *((_BYTE *)v1 + *(_QWORD *)((*v5 & *v1) + 0x90)) = 0;
  v6 = (char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x78);
  *((_DWORD *)v6 + 16) = *(_DWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v6 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v6 + 3) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *((_OWORD *)v6 + 1) = v8;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x80)) = 0;
  v9 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v5 & *v1) + 0x88));
  *v9 = 0x6543726564696C53;
  v9[1] = 0xEA00000000006C6CLL;
  v11.receiver = v1;
  v11.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09D710);
  return objc_msgSendSuper2(&v11, sel_init);
}

id TTRISliderCellContent.willUnassignCell(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(a1 + qword_1EF09D718), sel_removeTarget_action_forControlEvents_, v1, 0, 4096);
}

id TTRISliderCellContent.didAssignCell(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(a1 + qword_1EF09D718), sel_addTarget_action_forControlEvents_, v1, sel_sliderAction_, 4096);
}

uint64_t TTRISliderCellContent.updateCell(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  _QWORD v5[3];
  _QWORD aBlock[6];

  v5[2] = a1;
  v1 = *(void **)(a1 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1B4316650;
  *(_QWORD *)(v2 + 24) = v5;
  aBlock[4] = sub_1B429EBC8;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_14;
  v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performBatchUpdates_, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1B43155A4(uint64_t a1, _QWORD *a2)
{
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  _BYTE v35[80];

  v3 = (char *)a2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + 0x78);
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = (void *)*((_QWORD *)v3 + 1);
  v6 = (void *)*((_QWORD *)v3 + 2);
  if (*(_QWORD *)v3 == 1)
    v7 = 0;
  else
    v7 = *(void **)v3;
  v26 = v7;
  if (*(_QWORD *)v3 == 1)
    v8 = 0;
  else
    v8 = *((_QWORD *)v3 + 1);
  if (*(_QWORD *)v3 == 1)
    v9 = 0;
  else
    v9 = *((_QWORD *)v3 + 2);
  if (*(_QWORD *)v3 == 1)
    v10 = 0x1FFFFFFFELL;
  else
    v10 = 0;
  v11 = a1 + direct field offset for TTRIStaticTableViewStandardCell.icon;
  swift_beginAccess();
  sub_1B4221F18(v11, (uint64_t)v35);
  v33 = *(void **)(v11 + 8);
  v34 = *(void **)v11;
  v31 = *(_QWORD *)(v11 + 24);
  v32 = *(void **)(v11 + 16);
  v29 = *(_QWORD *)(v11 + 40);
  v30 = *(_QWORD *)(v11 + 32);
  v27 = *(_QWORD *)(v11 + 56);
  v28 = *(_QWORD *)(v11 + 48);
  v12 = *(_BYTE *)(v11 + 64);
  *(_QWORD *)v11 = v26;
  *(_QWORD *)(v11 + 8) = v8;
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_BYTE *)(v11 + 64) = 0;
  sub_1B430EFBC(v4, v5, v6);
  sub_1B430EFBC(v4, v5, v6);
  sub_1B4222068((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B4221F60);
  sub_1B4221FE8(v34, v33, v32, v31, v30, v29, v28, v27, v12);
  sub_1B47C9730((uint64_t)v35);
  sub_1B430F03C(v4, v5, v6);
  sub_1B4222068((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B4221FE8);
  v13 = *(void **)(a1 + qword_1EF0B34C8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v14 = v13;
  v15 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setText_, v15);

  v16 = *((_QWORD *)v3 + 5);
  v17 = *((_QWORD *)v3 + 6);
  v18 = (uint64_t *)(a1 + direct field offset for TTRIStaticTableViewStandardCell.subtitle);
  swift_beginAccess();
  v20 = *v18;
  v19 = v18[1];
  *v18 = v16;
  v18[1] = v17;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v17)
  {
    if (v19 && (v16 == v20 && v17 == v19 || (sub_1B4908390() & 1) != 0))
      goto LABEL_21;
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    TTRIStaticTableViewStandardCell.updateSubtitle()();
LABEL_21:
    swift_bridgeObjectRelease();
  }
  v22 = *(void **)(a1 + qword_1EF09D718);
  LODWORD(v21) = *((_DWORD *)v3 + 14);
  objc_msgSend(v22, sel_setMinimumValue_, v21);
  LODWORD(v23) = *((_DWORD *)v3 + 15);
  objc_msgSend(v22, sel_setMaximumValue_, v23);
  LODWORD(v24) = *((_DWORD *)v3 + 16);
  return objc_msgSend(v22, sel_setValue_, v24);
}

void sub_1B4315848(uint64_t a1)
{
  _QWORD *v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void (**v13)(_QWORD *);
  void (*v14)(_QWORD *);
  void *v15;
  _QWORD v16[8];
  int v17;

  sub_1B41F335C(a1, (uint64_t)v16);
  sub_1B41DF50C(0, (unint64_t *)&unk_1EF09DC90);
  if (swift_dynamicCast())
  {
    v2 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
    swift_beginAccess();
    v3 = *(void **)v2;
    v4 = (void *)*((_QWORD *)v2 + 1);
    v5 = (void *)*((_QWORD *)v2 + 2);
    v6 = *((_QWORD *)v2 + 3);
    v8 = *((_QWORD *)v2 + 4);
    v7 = *((_QWORD *)v2 + 5);
    v9 = *((_QWORD *)v2 + 6);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v10 = *((_QWORD *)v2 + 7);
    sub_1B430EFBC(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B430EFBC(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B430EFBC(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    objc_msgSend(v15, sel_value);
    v16[0] = v3;
    v16[1] = v4;
    v16[2] = v5;
    v16[3] = v6;
    v16[4] = v8;
    v16[5] = v7;
    v16[6] = v9;
    v16[7] = v10;
    v17 = v11;
    sub_1B430EFBC(v3, v4, v5);
    sub_1B430F03C(v3, v4, v5);
    v12 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90);
    *((_BYTE *)v1 + v12) = 1;
    sub_1B430EFBC(v3, v4, v5);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B44B6708((uint64_t)v16);
    *((_BYTE *)v1 + v12) = 0;
    sub_1B430F03C(v3, v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = (void (**)(_QWORD *))((char *)v1 + direct field offset for TTRISliderCellContent.stateChangeBlock);
    swift_beginAccess();
    v14 = *v13;
    if (*v13)
    {
      sub_1B430EFBC(v3, v4, v5);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B41E1C64((uint64_t)v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B430F03C(v3, v4, v5);
      v14(v16);
      sub_1B41E1CB4((uint64_t)v14);

      sub_1B430F03C(v3, v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B430F03C(v3, v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B430F03C(v3, v4, v5);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1B430F03C(v3, v4, v5);

    }
  }
}

uint64_t sub_1B4315B4C(void *a1)
{
  id v2;
  _BYTE v4[32];

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1B4907C4C();
  swift_unknownObjectRelease();
  sub_1B4315848((uint64_t)v4);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

void TTRISliderCellContent.__allocating_init(state:prototypeCellView:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TTRISliderCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B4315C04()
{
  uint64_t v0;

  sub_1B41E1CB4(*(_QWORD *)(v0 + direct field offset for TTRISliderCellContent.action));
  return sub_1B41E1CB4(*(_QWORD *)(v0 + direct field offset for TTRISliderCellContent.stateChangeBlock));
}

uint64_t sub_1B4315C3C(uint64_t a1)
{
  sub_1B41E1CB4(*(_QWORD *)(a1 + direct field offset for TTRISliderCellContent.action));
  return sub_1B41E1CB4(*(_QWORD *)(a1 + direct field offset for TTRISliderCellContent.stateChangeBlock));
}

void sub_1B4315C7C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TTRISliderTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *TTRISliderTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  id v8;
  char *v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  void *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v41;
  void *v42;
  char v43;
  char *v44;
  id v45;
  void *v46;
  void *v47;
  char *v48;
  _QWORD aBlock[6];
  objc_super v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char v60;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3C80]);
  v9 = v4;
  v10 = objc_msgSend(v8, sel_init);
  *(_QWORD *)&v9[qword_1EF09D718] = v10;

  if (a3)
  {
    v11 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v50.receiver = v9;
  v50.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v50, sel_initWithStyle_reuseIdentifier_, a1, v11);

  v13 = qword_1EF09D718;
  v14 = *(void **)&v12[qword_1EF09D718];
  v15 = v12;
  v16 = v14;
  objc_msgSend(v16, sel_sizeThatFits_, 150.0, 100.0);
  objc_msgSend(v16, sel_setLayoutSize_withContentPriority_);

  v17 = *(void **)&v12[v13];
  v18 = &v15[direct field offset for TTRIStaticTableViewStandardCell.extraAccessory];
  swift_beginAccess();
  v19 = *(void **)v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v18 + 2);
  v22 = *((_QWORD *)v18 + 3);
  v23 = (void *)*((_QWORD *)v18 + 4);
  LODWORD(v24) = v18[40];
  *(_QWORD *)v18 = v17;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  v18[40] = 1;
  v25 = v17;
  v44 = v15;
  v45 = v25;
  sub_1B4312E50(v19, v20, v21, v22, v23, (char)v24);
  v46 = v19;
  sub_1B4312EB8(v19, v20, v21, v22, v23, (char)v24);
  v27 = *(void **)v18;
  v26 = *((_QWORD *)v18 + 1);
  v28 = *((_QWORD *)v18 + 2);
  v29 = *((_QWORD *)v18 + 3);
  v30 = (void *)*((_QWORD *)v18 + 4);
  v31 = v18[40];
  if (v31 == 255)
  {
    if ((_DWORD)v24 == 255)
    {
LABEL_12:
      v35 = v44;

      sub_1B4312EB8(v46, v20, v21, v22, v23, (char)v24);
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  if ((_DWORD)v24 == 255)
  {
LABEL_9:
    v43 = (char)v24;
    v24 = v30;
    sub_1B4312E50(v46, v20, v21, v22, v23, v43);
    sub_1B4312E50(v27, v26, v28, v29, v24, v31);
    sub_1B4312EB8(v27, v26, v28, v29, v24, v31);
    LOBYTE(v24) = v43;
    sub_1B4312EB8(v46, v20, v21, v22, v23, v43);
    goto LABEL_10;
  }
  v47 = v23;
  v32 = v22;
  *(_QWORD *)&v56 = v46;
  *((_QWORD *)&v56 + 1) = v20;
  v57 = v21;
  v58 = v22;
  v59 = v47;
  v60 = (char)v24;
  *(_QWORD *)&v51 = v27;
  *((_QWORD *)&v51 + 1) = v26;
  v52 = v28;
  v53 = v29;
  v54 = v30;
  v55 = v31;
  v33 = v22;
  v34 = v30;
  v42 = v30;
  sub_1B4312E50(v46, v20, v21, v33, v47, (char)v24);
  sub_1B4312E50(v27, v26, v28, v29, v34, v31);
  v41 = _s15RemindersUICore31TTRIStaticTableViewStandardCellC14ExtraAccessoryO2eeoiySbAE_AEtFZ_0(&v51, &v56);
  v22 = v32;
  v23 = v47;
  sub_1B4312EB8(v46, v20, v21, v22, v47, (char)v24);
  sub_1B4312EB8(v27, v26, v28, v29, v42, v31);
  if ((v41 & 1) != 0)
    goto LABEL_12;
LABEL_10:
  v35 = v44;
  v36 = *(void **)&v44[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v44;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1B4312F4C;
  *(_QWORD *)(v38 + 24) = v37;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_10_0;
  v39 = _Block_copy(aBlock);
  v48 = v44;
  swift_retain();
  swift_release();
  objc_msgSend(v36, sel_performBatchUpdates_, v39);
  _Block_release(v39);
  LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  sub_1B4312EB8(v46, v20, v21, v22, v23, (char)v24);

  if ((v36 & 1) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:

  return v35;
}

char *sub_1B43161F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = sub_1B4906A64();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return TTRISliderTableViewCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

void sub_1B4316238()
{
  sub_1B4908144();
  __break(1u);
}

void sub_1B4316290()
{
  sub_1B4908144();
  __break(1u);
}

void sub_1B43162E8()
{
  uint64_t v0;

}

void sub_1B43162FC(uint64_t a1)
{

}

BOOL _s15RemindersUICore26TTRISliderCellContentStateV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  void *v36;
  void *v37;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 != 1)
  {
    if (v5 == (void *)1)
      return 0;
    v12 = *(void **)(a1 + 8);
    v13 = *(void **)(a1 + 16);
    v15 = *(void **)(a2 + 8);
    v14 = *(void **)(a2 + 16);
    if (v4)
    {
      if (!v5)
        return 0;
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED020);
      sub_1B430EFBC(v5, v15, v14);
      sub_1B430EFBC(v4, v12, v13);
      v37 = v12;
      v16 = v13;
      v17 = v5;
      v18 = v4;
      v19 = sub_1B4907844();

      v13 = v16;
      v12 = v37;
      if ((v19 & 1) == 0)
      {
        v20 = v5;
        v21 = v15;
        v22 = v14;
        goto LABEL_19;
      }
    }
    else
    {
      if (v5)
        return 0;
      sub_1B430EFBC(0, *(void **)(a2 + 8), *(void **)(a2 + 16));
      sub_1B430EFBC(0, v12, v13);
    }
    v26 = v14;
    v36 = v13;
    if (v12)
    {
      if (!v15)
      {
        v30 = v5;
        v31 = 0;
        v32 = v14;
        goto LABEL_37;
      }
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
      v27 = v15;
      v28 = v12;
      v29 = sub_1B4907844();

      v14 = v26;
      if ((v29 & 1) == 0)
      {
        v30 = v5;
        v31 = v15;
        v32 = v26;
LABEL_37:
        sub_1B430F03C(v30, v31, v32);
        v23 = v4;
        v24 = v12;
        goto LABEL_38;
      }
    }
    else if (v15)
    {
      sub_1B430F03C(v5, v15, v14);
      v23 = v4;
      v24 = 0;
LABEL_38:
      v25 = v36;
      goto LABEL_39;
    }
    v13 = v36;
    if (!v36)
    {
      if (!v14)
      {
        sub_1B430F03C(v5, v15, 0);
        sub_1B430F03C(v4, v12, 0);
        goto LABEL_3;
      }
      sub_1B430F03C(v5, v15, v14);
      v23 = v4;
      v24 = v12;
      v25 = 0;
LABEL_39:
      sub_1B430F03C(v23, v24, v25);
      return 0;
    }
    if (v14)
    {
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
      v33 = v14;
      v34 = v36;
      v35 = sub_1B4907844();

      sub_1B430F03C(v5, v15, v14);
      sub_1B430F03C(v4, v12, v36);
      if ((v35 & 1) == 0)
        return 0;
      goto LABEL_3;
    }
    v20 = v5;
    v21 = v15;
    v22 = 0;
LABEL_19:
    sub_1B430F03C(v20, v21, v22);
    v23 = v4;
    v24 = v12;
    v25 = v13;
    goto LABEL_39;
  }
  if (v5 != (void *)1)
    return 0;
LABEL_3:
  v6 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
  if (v6 || (v7 = sub_1B4908390(), result = 0, (v7 & 1) != 0))
  {
    v9 = *(_QWORD *)(a1 + 48);
    v10 = *(_QWORD *)(a2 + 48);
    if (v9)
    {
      if (v10)
      {
        if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v9 != v10)
        {
          v11 = sub_1B4908390();
          result = 0;
          if ((v11 & 1) == 0)
            return result;
        }
        goto LABEL_27;
      }
    }
    else if (!v10)
    {
LABEL_27:
      if (*(float *)(a1 + 56) == *(float *)(a2 + 56) && *(float *)(a1 + 60) == *(float *)(a2 + 60))
        return *(float *)(a1 + 64) == *(float *)(a2 + 64);
    }
    return 0;
  }
  return result;
}

id sub_1B4316650()
{
  uint64_t v0;

  return sub_1B43155A4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1B4316658()
{
  return swift_deallocObject();
}

uint64_t sub_1B4316668()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B431668C()
{
  return swift_deallocObject();
}

uint64_t destroy for TTRISliderCellContentState(id *a1)
{
  if (*a1 != (id)1)
  {

  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRISliderCellContentState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v5 = *(void **)(a2 + 8);
    v6 = *(void **)(a2 + 16);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    v7 = v4;
    v8 = v5;
    v9 = v6;
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRISliderCellContentState(uint64_t a1, __int128 *a2)
{
  id v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v4 = *(id *)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 == 1)
  {
    if (v5 == (void *)1)
    {
      v6 = *a2;
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      *(_QWORD *)a1 = v5;
      v8 = (void *)*((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v8;
      v9 = (void *)*((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 16) = v9;
      v10 = v5;
      v11 = v8;
      v12 = v9;
    }
  }
  else if (v5 == (void *)1)
  {
    sub_1B43168A0((id *)a1);
    v7 = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(_QWORD *)a1 = v5;
    v13 = v5;

    v14 = *(void **)(a1 + 8);
    v15 = (void *)*((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v15;
    v16 = v15;

    v17 = *(void **)(a1 + 16);
    v18 = (void *)*((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 16) = v18;
    v19 = v18;

  }
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  return a1;
}

id *sub_1B43168A0(id *a1)
{
  destroy for TTRIStaticTableViewStandardCell.RoundRectIcon(a1);
  return a1;
}

__n128 __swift_memcpy68_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TTRISliderCellContentState(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(id *)a1;
  if (*(_QWORD *)a1 != 1)
  {
    if (*(_QWORD *)a2 != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;

      v5 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

      v6 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

      goto LABEL_6;
    }
    sub_1B43168A0((id *)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
LABEL_6:
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRISliderCellContentState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 68))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRISliderCellContentState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 68) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 68) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISliderCellContentState()
{
  return &type metadata for TTRISliderCellContentState;
}

uint64_t type metadata accessor for TTRISliderCellContent(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09D748);
}

uint64_t sub_1B4316A68()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B4316AA8()
{
  return type metadata accessor for TTRISliderCellContent(0);
}

uint64_t type metadata accessor for TTRISliderTableViewCell(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09D8B0);
}

uint64_t sub_1B4316AC4()
{
  return type metadata accessor for TTRISliderTableViewCell(0);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.regular.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.shortened.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

void *TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.textColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.Text.init(regular:shortened:textColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1B4316B64(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProviderC0G0V23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  swift_beginAccess();
  return MEMORY[0x1B5E3D8DC](v1);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1B5E3D8DC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B41F37A0;
}

void sub_1B4316CD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  v6 = v4[2];
  v5 = v4[3];
  v7 = (void *)v4[4];
  v8 = *v4 == *a1 && v4[1] == a1[1];
  if (v8 || (sub_1B4908390() & 1) != 0)
  {
    v9 = a1[3];
    if (v5)
    {
      if (!v9)
        goto LABEL_20;
      v10 = v6 == a1[2] && v5 == v9;
      if (!v10 && (sub_1B4908390() & 1) == 0)
        goto LABEL_20;
    }
    else if (v9)
    {
      goto LABEL_20;
    }
    v11 = (void *)a1[4];
    if (v7)
    {
      if (v11)
      {
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v12 = v7;
        v13 = v11;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v14 = sub_1B4907844();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v14 & 1) != 0)
          return;
      }
    }
    else if (!v11)
    {
      return;
    }
  }
LABEL_20:
  if (v4[3]
    && (v15 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label),
        objc_msgSend(v15, sel_numberOfLines)))
  {
    objc_msgSend(v15, sel_invalidateIntrinsicContentSize);
  }
  else
  {
    v16 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    v17 = *v4;
    v18 = v4[1];
    v19 = (void *)v4[4];
    v20 = v19;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v21 = sub_1B4318258(v17, v18, v19);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setAttributedText_, v21);

  }
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.text.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v8 = (id)v3[4];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v8;
}

id *TTRIStaticTableViewDisclosureTextAccessoryProvider.text.setter(__int128 *a1)
{
  uint64_t v1;
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  __int128 v7;
  id v9;
  _BYTE v10[16];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  __int128 v15;
  _BYTE v16[16];
  id v17[2];

  v3 = (__int128 *)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  v5 = v3[1];
  v12 = *v3;
  v4 = v12;
  v13 = v5;
  v14 = (void *)*((_QWORD *)v3 + 4);
  v6 = v14;
  v7 = a1[1];
  *v3 = *a1;
  v3[1] = v7;
  *((_QWORD *)v3 + 4) = *((_QWORD *)a1 + 4);
  v15 = v4;
  sub_1B41DF5E4((uint64_t)&v13, (uint64_t)v16, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)&v14, (uint64_t)v17, &qword_1EF0B3A20);
  v11 = *a1;
  sub_1B41DF5E4((uint64_t)(a1 + 1), (uint64_t)v10, &qword_1ED4E16B0);
  sub_1B41DF5E4((uint64_t)(a1 + 2), (uint64_t)&v9, &qword_1EF0B3A20);
  sub_1B420ADA0((uint64_t)&v15);
  sub_1B420ADA0((uint64_t)v16);
  sub_1B428B754(v17);
  sub_1B420ADA0((uint64_t)&v11);
  sub_1B420ADA0((uint64_t)v10);
  sub_1B428B754(&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B4316CD4(&v12);
  sub_1B42CA414((uint64_t)&v11);
  sub_1B42CA414((uint64_t)v10);
  sub_1B428B77C(&v9);
  sub_1B42CA414((uint64_t)&v15);
  sub_1B42CA414((uint64_t)v16);
  return sub_1B428B77C(v17);
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.text.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = malloc(0xF0uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  v3[28] = v1;
  v3[29] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess();
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  v9 = (void *)v5[4];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  v3[4] = v9;
  v10 = v9;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return sub_1B4317144;
}

void sub_1B4317144(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = (void *)(*a1)[4];
  v8 = (__int128 *)((*a1)[28] + (*a1)[29]);
  v9 = *v8;
  v10 = v8[1];
  if ((a2 & 1) != 0)
  {
    v2[14] = *((_QWORD *)v8 + 4);
    *((_OWORD *)v2 + 5) = v9;
    *((_OWORD *)v2 + 6) = v10;
    v15 = (void *)*((_QWORD *)v8 + 4);
    *(_QWORD *)v8 = v3;
    *((_QWORD *)v8 + 1) = v4;
    *((_QWORD *)v8 + 2) = v5;
    *((_QWORD *)v8 + 3) = v6;
    *((_QWORD *)v8 + 4) = v7;
    *((_OWORD *)v2 + 10) = *((_OWORD *)v2 + 5);
    sub_1B41DF5E4((uint64_t)(v2 + 12), (uint64_t)(v2 + 18), &qword_1ED4E16B0);
    sub_1B41DF5E4((uint64_t)(v2 + 14), (uint64_t)(v2 + 26), &qword_1EF0B3A20);
    v11 = v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = v11;
    sub_1B420ADA0((uint64_t)(v2 + 20));
    sub_1B420ADA0((uint64_t)(v2 + 18));
    sub_1B428B754((id *)v2 + 26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B4316CD4(v2 + 10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B42CA414((uint64_t)(v2 + 20));
    sub_1B42CA414((uint64_t)(v2 + 18));
    sub_1B428B77C((id *)v2 + 26);
    v13 = (void *)v2[4];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    v2[9] = *((_QWORD *)v8 + 4);
    *(_OWORD *)(v2 + 5) = v9;
    *(_OWORD *)(v2 + 7) = v10;
    v16 = (void *)*((_QWORD *)v8 + 4);
    *(_QWORD *)v8 = v3;
    *((_QWORD *)v8 + 1) = v4;
    *((_QWORD *)v8 + 2) = v5;
    *((_QWORD *)v8 + 3) = v6;
    *((_QWORD *)v8 + 4) = v7;
    *((_OWORD *)v2 + 11) = *(_OWORD *)(v2 + 5);
    sub_1B41DF5E4((uint64_t)(v2 + 7), (uint64_t)(v2 + 24), &qword_1ED4E16B0);
    sub_1B41DF5E4((uint64_t)(v2 + 9), (uint64_t)(v2 + 27), &qword_1EF0B3A20);
    sub_1B420ADA0((uint64_t)(v2 + 22));
    sub_1B420ADA0((uint64_t)(v2 + 24));
    sub_1B428B754((id *)v2 + 27);
    v14 = v7;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B4316CD4(v2 + 5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B42CA414((uint64_t)(v2 + 22));
    sub_1B42CA414((uint64_t)(v2 + 24));
    sub_1B428B77C((id *)v2 + 27);
  }
  free(v2);
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon);
  swift_beginAccess();
  v2 = *v1;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v2;
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = (_QWORD *)(v2
                + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  v6 = *(void **)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  v10 = (void *)v7[4];
  v11 = v10;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v12 = sub_1B4318258(v8, v9, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAttributedText_, v12);

}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.accessibilityDifferentiateWithoutColorsIcon.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B4317540;
}

void sub_1B4317540(uint64_t a1, char a2)
{
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(a1 + 24);
    v5 = *(void **)(v4 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    v6 = (uint64_t *)(v4 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
    swift_beginAccess();
    v7 = *v6;
    v8 = v6[1];
    v9 = (void *)v6[4];
    v10 = v9;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v11 = sub_1B4318258(v7, v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    objc_msgSend(v5, sel_setAttributedText_, v11);
  }
}

char *TTRIStaticTableViewDisclosureTextAccessoryProvider.__allocating_init(label:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TTRIStaticTableViewDisclosureTextAccessoryProvider.init(label:)(a1);
}

char *TTRIStaticTableViewDisclosureTextAccessoryProvider.init(label:)(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  objc_super v23;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = &v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label] = a1;
  v4 = v1;
  v5 = a1;
  v6 = objc_msgSend(v5, sel_text);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1B4906A64();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0xE000000000000000;
  }
  v11 = objc_msgSend(v5, sel_textColor);
  v12 = (uint64_t *)&v4[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text];
  *v12 = v8;
  v12[1] = v10;
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = (uint64_t)v11;

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider();
  v13 = objc_msgSendSuper2(&v23, sel_init);
  v14 = (void *)objc_opt_self();
  v15 = (char *)v13;
  v16 = objc_msgSend(v14, sel_defaultCenter);
  v17 = *MEMORY[0x1E0DC45D0];
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainQueue, (unsigned __int128)0, (unsigned __int128)0);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v20 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v17, (uint64_t)&v22, (uint64_t)v18, (uint64_t)sub_1B4318664, v19);

  swift_release();
  sub_1B4314F88((uint64_t)&v22);
  swift_release();
  *(_QWORD *)&v15[OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityObserver] = v20;
  swift_release();
  return v15;
}

void sub_1B431786C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1B5E3D8DC](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
    swift_beginAccess();
    v7 = *v6;
    v8 = v6[1];
    v9 = (void *)v6[4];
    v10 = v9;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v11 = sub_1B4318258(v7, v8, v9);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAttributedText_, v11);

  }
}

BOOL TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label), sel_numberOfLines) == 0;
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;

  swift_beginAccess();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v1 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED140);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  v5 = v3;
  v6 = objc_msgSend(v4, sel_font);
  if (v6)
  {
    v7 = v6;
    *(_QWORD *)(inited + 64) = sub_1B41DF50C(0, (unint64_t *)&qword_1ED4E9DA0);
    *(_QWORD *)(inited + 40) = v7;
    sub_1B41E2F5C(inited);
    type metadata accessor for Key(0);
    sub_1B421E608();
    v8 = (void *)sub_1B490680C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_sizeWithAttributes_, v8);

  }
  else
  {
    __break(1u);
  }
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.updateTextBasedOnLabelWidth()()
{
  uint64_t v0;
  uint64_t *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text);
  result = (id)swift_beginAccess();
  if (v1[3])
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
    result = objc_msgSend(v3, sel_numberOfLines);
    if (result)
    {
      v4 = v1[3];
      if (v4)
      {
        v5 = v1[2];
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        objc_msgSend(v3, sel_bounds);
        v7 = v6;
        TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter();
        if ((sub_1B4543F38(v8, 0.0000000149011612, v7) & 1) != 0
          || (TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter(), v9 < v7))
        {
          swift_bridgeObjectRelease();
          v5 = *v1;
          v4 = v1[1];
          _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        }
        v10 = objc_msgSend(v3, sel_text);
        if (v10)
        {
          v11 = v10;
          v12 = sub_1B4906A64();
          v14 = v13;

          if (v5 == v12 && v4 == v14)
            return (id)swift_bridgeObjectRelease_n();
          v16 = sub_1B4908390();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
            return (id)swift_bridgeObjectRelease();
        }
        v17 = (void *)sub_1B4906A34();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setText_, v17);

        v18 = v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_delegate;
        swift_beginAccess();
        result = (id)MEMORY[0x1B5E3D8DC](v18);
        if (result)
        {
          v19 = *(_QWORD *)(v18 + 8);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v0, ObjectType, v19);
          return (id)swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TTRIStaticTableViewDisclosureTextAccessoryProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.view.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label));
}

uint64_t TTRIStaticTableViewDisclosureTextAccessoryProvider.isLabelLike.getter()
{
  return 1;
}

id TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.setter(char a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  objc_msgSend(v2, sel_setNumberOfLines_, (a1 & 1) == 0);
  v3 = v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24) && objc_msgSend(v2, sel_numberOfLines))
    v4 = 2 * (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) != (id)1);
  else
    v4 = 4;
  return objc_msgSend(v2, sel_setTextAlignment_, v4);
}

void (*TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label);
  v3[6] = v1;
  v3[7] = v4;
  *((_BYTE *)v3 + 64) = objc_msgSend(v4, sel_numberOfLines) == 0;
  return sub_1B4317F4C;
}

void sub_1B4317F4C(id **a1)
{
  id *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = (*a1)[6];
  objc_msgSend((*a1)[7], sel_setNumberOfLines_, ((_BYTE)(*a1)[8] & 1) == 0);
  v3 = (uint64_t)v2 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text;
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24) && objc_msgSend(v1[7], sel_numberOfLines))
    v4 = 2 * (objc_msgSend(v1[7], sel_effectiveUserInterfaceLayoutDirection) != (id)1);
  else
    v4 = 4;
  objc_msgSend(v1[7], sel_setTextAlignment_, v4);
  free(v1);
}

id sub_1B4318014()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label));
}

BOOL sub_1B4318024()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label), sel_numberOfLines) == 0;
}

void (*sub_1B4318058(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRIStaticTableViewDisclosureTextAccessoryProvider.allowsWrapping.modify(v2);
  return sub_1B420A06C;
}

CGSize __swiftcall TTRIStaticTableViewDisclosureTextAccessoryProvider.containerView(_:systemLayoutSizeFitting:forArrangedSubview:)(NUIContainerView *_, CGSize systemLayoutSizeFitting, UIView *forArrangedSubview)
{
  double v3;
  double v4;
  CGSize result;

  sub_1B431866C(forArrangedSubview);
  result.height = v4;
  result.width = v3;
  return result;
}

uint64_t _s15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProviderC0G0V23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_1B4908390();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = a1[3];
  v8 = a2[3];
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (v10 = sub_1B4908390(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    v11 = (void *)a1[4];
    v12 = (void *)a2[4];
    if (v11)
    {
      if (v12)
      {
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
        v13 = v12;
        v14 = v11;
        v15 = sub_1B4907844();

        if ((v15 & 1) != 0)
          return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

id sub_1B4318258(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t inited;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ED140);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
    v6 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1140];
    *(_QWORD *)(inited + 64) = sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE400);
    *(_QWORD *)(inited + 40) = a3;
    v7 = a3;
    v8 = v6;
    sub_1B41E2F5C(inited);
    v9 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v10 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1B421E608();
    v11 = (void *)sub_1B490680C();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

    if (!UIAccessibilityShouldDifferentiateWithoutColor())
      return v12;
  }
  else
  {
    v13 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v14 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v13, sel_initWithString_, v14);

    if (!UIAccessibilityShouldDifferentiateWithoutColor())
      return v12;
  }
  v15 = v3
      + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_accessibilityDifferentiateWithoutColorsIcon;
  swift_beginAccess();
  if (*(_QWORD *)(v15 + 8))
  {
    v16 = (void *)objc_opt_self();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v17 = objc_msgSend(v16, sel_configurationWithScale_, 1);
    v18 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v18, v17);

    if (v19)
    {
      v20 = objc_msgSend(v19, sel_imageWithRenderingMode_, 1);

      if (v20)
      {
        if (a3)
        {
          v21 = a3;
          v22 = objc_msgSend(v20, sel_imageWithTintColor_, v21);
          v23 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v22);

        }
        else
        {
          v23 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v20);
        }
        sub_1B41DF50C(0, (unint64_t *)&qword_1EF09DD00);
        v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v23);
        v25 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v26 = (void *)sub_1B4906A34();
        v27 = objc_msgSend(v25, sel_initWithString_, v26);

        objc_msgSend(v24, sel_appendAttributedString_, v27);
        objc_msgSend(v24, sel_appendAttributedString_, v12);

        v17 = v12;
        v12 = v24;
      }
    }

  }
  return v12;
}

uint64_t type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider()
{
  return objc_opt_self();
}

uint64_t sub_1B4318640()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B4318664(uint64_t a1)
{
  uint64_t v1;

  sub_1B431786C(a1, v1);
}

void sub_1B431866C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  if (*(void **)(v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_label) == a1
    && (v3 = v1 + OBJC_IVAR____TtC15RemindersUICore50TTRIStaticTableViewDisclosureTextAccessoryProvider_text,
        swift_beginAccess(),
        *(_QWORD *)(v3 + 24))
    && objc_msgSend(a1, sel_numberOfLines))
  {
    TTRIStaticTableViewDisclosureTextAccessoryProvider.regularTextSize.getter();
  }
  else if (qword_1ED4E0590 != -1)
  {
    swift_once();
  }
}

void destroy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for SectionsMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionsMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text()
{
  return &type metadata for TTRIStaticTableViewDisclosureTextAccessoryProvider.Text;
}

uint64_t TTRIStaticTableViewBaseCell.isInsetGrouppedStyle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1EF09DD18);
}

uint64_t TTRIStaticTableViewBaseCell.isInsetGrouppedStyle.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1EF09DD18) = result;
  return result;
}

id TTRIStaticTableViewBaseCell.containerView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + direct field offset for TTRIStaticTableViewBaseCell.containerView);
}

BOOL static TTRIStaticTableViewBaseCell.MinHeightType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t TTRIStaticTableViewBaseCell.MinHeightType.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t TTRIStaticTableViewBaseCell.MinHeightType.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

BOOL sub_1B43189C0(char *a1, char *a2)
{
  return static TTRIStaticTableViewBaseCell.MinHeightType.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1B43189CC()
{
  return TTRIStaticTableViewBaseCell.MinHeightType.hashValue.getter();
}

uint64_t sub_1B43189D4()
{
  return TTRIStaticTableViewBaseCell.MinHeightType.hash(into:)();
}

uint64_t sub_1B43189DC()
{
  sub_1B4908498();
  TTRIStaticTableViewBaseCell.MinHeightType.hash(into:)();
  return sub_1B49084D4();
}

uint64_t TTRIStaticTableViewBaseCell.preferredSeparatorInsetType.getter()
{
  return 0;
}

uint64_t TTRIStaticTableViewBaseCell.preferredMinHeightForInsetGrouppedStyle.getter()
{
  return 0;
}

id TTRIStaticTableViewBaseCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a3)
  {
    v6 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id TTRIStaticTableViewBaseCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  objc_super v30;

  v6 = *MEMORY[0x1E0DEEDD8] & *v3;
  *((_BYTE *)v3 + qword_1EF09DD18) = 0;
  v7 = *(_QWORD *)(v6 + 80);
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = v3;
  v10 = objc_msgSend(v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, sel_setEdgesPreservingSuperviewLayoutMargins_, 10);
  objc_msgSend(v10, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v10, sel_setLayoutMargins_, 7.0, 0.0, 7.0, 0.0);
  objc_msgSend(v10, sel_setAutoresizingMask_, 18);
  objc_msgSend(v10, sel_setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview_, 1);
  *(_QWORD *)((char *)v9 + direct field offset for TTRIStaticTableViewBaseCell.containerView) = v10;
  v11 = v10;

  if (a3)
  {
    v14 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v30.receiver = v9;
  v30.super_class = (Class)type metadata accessor for TTRIStaticTableViewBaseCell(0, v7, v12, v13);
  v15 = objc_msgSendSuper2(&v30, sel_initWithStyle_reuseIdentifier_, a1, v14);

  v16 = v15;
  objc_msgSend(v11, sel_setDelegate_, v16);
  v17 = v11;
  v18 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v18, sel_bounds);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  objc_msgSend(v17, sel_setFrame_, v20, v22, v24, v26);
  v27 = objc_msgSend(v16, sel_contentView);
  v28 = v17;
  objc_msgSend(v27, sel_addSubview_, v28);

  return v16;
}

id sub_1B4318CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = sub_1B4906A64();
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return TTRIStaticTableViewBaseCell.init(style:reuseIdentifier:)(a3, a4, v6);
}

id TTRIStaticTableViewBaseCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1B4318D84(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s15RemindersUICore27TTRIStaticTableViewBaseCellC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

void TTRIStaticTableViewBaseCell.__allocating_init(reuseIdentifier:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  _s15RemindersUICore27TTRIStaticTableViewBaseCellC15reuseIdentifierACyxGSgSSSg_tcfc_0();
}

CGSize __swiftcall TTRIStaticTableViewBaseCell.sizeThatFits(_:)(CGSize a1)
{
  _QWORD *v1;
  double height;
  double width;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  int v19;
  char v20;
  double v21;
  double v22;
  double v23;
  CGSize result;
  CGRect v25;

  height = a1.height;
  width = a1.width;
  v4 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v4, sel_bounds);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v25.origin.x = v6;
  v25.origin.y = v8;
  v25.size.width = v10;
  v25.size.height = v12;
  v13 = CGRectGetWidth(v25);
  if (v13 >= width)
    v13 = width;
  v14 = objc_msgSend(*(id *)((char *)v1 + direct field offset for TTRIStaticTableViewBaseCell.containerView), sel_sizeThatFits_, v13, height);
  v16 = v15;
  v18 = v17;
  v19 = *((unsigned __int8 *)v1 + qword_1EF09DD18);
  v20 = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70))(v14);
  v21 = 48.0;
  if (v20 == 1)
    v21 = 104.0;
  if (!v19)
    v21 = 44.0;
  if (v21 > v18)
    v22 = v21;
  else
    v22 = v18;
  v23 = v16;
  result.height = v22;
  result.width = v23;
  return result;
}

double sub_1B4318EE8(void *a1, double a2, double a3)
{
  id v5;
  double v6;

  v5 = a1;
  *(_QWORD *)&v6 = *(_OWORD *)&TTRIStaticTableViewBaseCell.sizeThatFits(_:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));

  return v6;
}

Swift::Void __swiftcall TTRIStaticTableViewBaseCell.didMoveToSuperview()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  _QWORD *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  objc_super v10;

  v3 = (objc_class *)type metadata accessor for TTRIStaticTableViewBaseCell(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50), v0, v1);
  v10.receiver = v2;
  v10.super_class = v3;
  objc_msgSendSuper2(&v10, sel_didMoveToSuperview);
  v4 = v2;
  v5 = objc_msgSend(v4, sel_superview);
  if (v5)
  {
    v6 = v4;
    while (1)
    {
      v7 = v6;
      v6 = v5;
      objc_opt_self();
      v8 = (void *)swift_dynamicCastObjCClass();

      if (v8)
        break;
      v5 = objc_msgSend(v6, sel_superview);
      if (!v5)
      {

        return;
      }
    }
    v9 = objc_msgSend(v8, sel_style);

    *((_BYTE *)v4 + qword_1EF09DD18) = v9 == (id)2;
  }
  else
  {

  }
}

void sub_1B4319044(void *a1)
{
  id v1;

  v1 = a1;
  TTRIStaticTableViewBaseCell.didMoveToSuperview()();

}

Swift::Void __swiftcall TTRIStaticTableViewBaseCell.containerViewDidLayoutArrangedSubviews(_:)(NUIContainerView *a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;

  if (*(NUIContainerView **)((char *)v1 + direct field offset for TTRIStaticTableViewBaseCell.containerView) == a1)
  {
    v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68))();
    v3 = v2;
    v4 = 0.0;
    if (v2)
    {
      if (v2 == (void *)1)
      {
        v5 = *MEMORY[0x1E0DC49E8];
        v6 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
        v7 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
        v4 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
LABEL_8:
        objc_msgSend(v1, sel_setSeparatorInset_, v5, v6, v7, v4);
        sub_1B42847E4(v3);
        return;
      }
      objc_msgSend(v2, sel_bounds);
      objc_msgSend(v1, sel_convertRect_fromCoordinateSpace_, v3);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;
      objc_msgSend(v3, sel_effectiveAlignmentRectInsets);
      v18 = UIEdgeInsetsInsetRect(v9, v11, v13, v15, v16, v17);
      v20 = v19;
      v22 = v21;
      v28 = v23;
      objc_msgSend(v1, sel_bounds);
      _sSo23NSDirectionalEdgeInsetsV15RemindersUICoreE12forInsetting8toBecome15layoutDirectionABSo6CGRectV_AHSo021UIUserInterfaceLayoutK0VtcfC_0((unint64_t)objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection), v24, v25, v26, v27, v18, v20, v22, v28);
    }
    else
    {
      v6 = 1.79769313e308;
    }
    v7 = 0.0;
    v5 = 0.0;
    goto LABEL_8;
  }
}

void sub_1B4319230(void *a1, uint64_t a2, void *a3)
{
  NUIContainerView *v4;
  id v5;

  v4 = a3;
  v5 = a1;
  TTRIStaticTableViewBaseCell.containerViewDidLayoutArrangedSubviews(_:)(v4);

}

id TTRIStaticTableViewBaseCell.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for TTRIStaticTableViewBaseCell(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1B43192D0(uint64_t a1)
{

}

uint64_t type metadata accessor for TTRIStaticTableViewBaseCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIStaticTableViewBaseCell);
}

void _s15RemindersUICore27TTRIStaticTableViewBaseCellC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;

  v0[qword_1EF09DD18] = 0;

  sub_1B4908144();
  __break(1u);
}

void _s15RemindersUICore27TTRIStaticTableViewBaseCellC15reuseIdentifierACyxGSgSSSg_tcfc_0()
{
  _BYTE *v0;

  v0[qword_1EF09DD18] = 0;

  sub_1B4908144();
  __break(1u);
}

void sub_1B43193BC()
{
  JUMPOUT(0x1B5E3D6D8);
}

ValueMetadata *type metadata accessor for TTRIStaticTableCellSeparatorAnchor()
{
  return &type metadata for TTRIStaticTableCellSeparatorAnchor;
}

uint64_t sub_1B43193DC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B4319424(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B4319470 + 4 * byte_1B49177E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B43194A4 + 4 * asc_1B49177E0[v4]))();
}

uint64_t sub_1B43194A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43194AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B43194B4);
  return result;
}

uint64_t sub_1B43194C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B43194C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B43194CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43194D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for TTRIStaticTableViewBaseCell.MinHeightType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRIStaticTableViewBaseCell.MinHeightType);
}

uint64_t sub_1B43194EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1B490347C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 0.1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B422BD38();
  return sub_1B4903464();
}

uint64_t sub_1B43195A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E5670);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B4911D70;
  v1 = sub_1B4905C54();
  v2 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v2;
  sub_1B49077FC();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TTRIOptionMenuTitlelessPopupButton()
{
  return objc_opt_self();
}

void sub_1B4319838(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  objc_super v10;

  v4 = objc_msgSend(a1, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LODWORD(v4) = sub_1B4907724() & 1;
  v6 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v5) = sub_1B4907724() & 1;

  if ((_DWORD)v4 != (_DWORD)v5)
  {
    v7 = objc_msgSend(a1, sel_traitCollection);
    v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

    sub_1B4907724();
    v9 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v10.receiver = a1;
    v10.super_class = (Class)type metadata accessor for TTRIOptionMenuTitlelessPopupButton();
    objc_msgSendSuper2(&v10, sel_setTitle_forState_, v9, 0);

  }
}

uint64_t sub_1B4319978()
{
  return 8;
}

uint64_t sub_1B4319984()
{
  return swift_release();
}

uint64_t sub_1B431998C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1B43199A0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t TTRParentAndChildIndexes.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;

  v3 = v2;
  v6 = sub_1B4903B24();
  if ((v7 & 1) != 0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
    v13 = a2;
    v14 = 1;
  }
  else
  {
    v8 = v6;
    v9 = *(_QWORD *)(a1 + 16);
    v10 = swift_getTupleTypeMetadata2();
    v11 = *(int *)(v10 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, v3, v9);
    *(_QWORD *)(a2 + v11) = v8;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v13 = a2;
    v14 = 0;
    TupleTypeMetadata2 = v10;
  }
  return v12(v13, v14, 1, TupleTypeMetadata2);
}

uint64_t static TTRParentAndChildIndexes.grouped<A>(_:byParentProperty:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)@<X0>(uint64_t@<X8>);
  char *v83;
  uint64_t v84;
  uint64_t v85;

  v69 = a2;
  v6 = (uint64_t *)(*a2 + *MEMORY[0x1E0DEE2A8]);
  v7 = *v6;
  v8 = type metadata accessor for TTRParentAndChildIndexes(0, *v6, a3, a4);
  v63 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v60 = (uint64_t)&v59 - v9;
  v10 = v6[1];
  v79 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v66 = (char *)&v59 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v59 - v16;
  v78 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v18);
  v67 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v19;
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v59 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v23 = sub_1B4907B14();
  v71 = *(_QWORD *)(v23 - 8);
  v72 = v23;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v70 = (char *)&v59 - v27;
  v84 = a3;
  v28 = sub_1B49067E8();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v82 = 0;
  v83 = 0;
  v29 = 0;
  v30 = v10;
  v81 = v10;
  v75 = v25;
  v65 = a1;
  v64 = v7;
  v74 = v8;
  v62 = v17;
  v61 = TupleTypeMetadata2;
  while (1)
  {
    if (v29 == MEMORY[0x1B5E3B224](a1, TupleTypeMetadata2))
    {
      v80 = v29;
      v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v25, 1, 1, TupleTypeMetadata2);
    }
    else
    {
      v37 = sub_1B4906E48();
      sub_1B4906DDC();
      if ((v37 & 1) != 0)
      {
        v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        v38 = v75;
        (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v75, a1+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v29, TupleTypeMetadata2);
      }
      else
      {
        v80 = v29;
        v54 = sub_1B4907EC8();
        v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        if (*(_QWORD *)(v36 + 64) != 8)
          goto LABEL_21;
        v85 = v54;
        v55 = v75;
        (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 16))(v75, &v85, TupleTypeMetadata2);
        v38 = v55;
        swift_unknownObjectRelease();
        v29 = v80;
      }
      v80 = v29 + 1;
      v30 = v81;
      if (__OFADD__(v29, 1))
        goto LABEL_20;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, TupleTypeMetadata2);
    }
    v39 = v70;
    (*(void (**)(void))(v71 + 32))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v39, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      v85 = v28;
      v56 = sub_1B49068A8();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DE9F98], v56);
      v57 = sub_1B4906EC0();
      swift_bridgeObjectRelease();
      sub_1B41E1CB4((uint64_t)v82);
      return v57;
    }
    v40 = (uint64_t)v66;
    v76 = *(_QWORD *)&v39[*(int *)(TupleTypeMetadata2 + 48)];
    v42 = v77;
    v41 = v78;
    v43 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
    v43(v77, v39, v7);
    swift_getAtKeyPath();
    v44 = v30;
    v73 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 16);
    v73(v40, v17, v30);
    v45 = v67;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v67, v42, v7);
    v46 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v47 = (char *)swift_allocObject();
    *((_QWORD *)v47 + 2) = v7;
    *((_QWORD *)v47 + 3) = v44;
    v48 = v84;
    *((_QWORD *)v47 + 4) = v84;
    v43(&v47[v46], v45, v7);
    sub_1B41E1CB4((uint64_t)v82);
    swift_isUniquelyReferenced_nonNull_native();
    v85 = v28;
    v49 = v40;
    sub_1B431A670(v40, v44, v48);
    if (__OFADD__(*(_QWORD *)(v28 + 16), (v50 & 1) == 0))
      break;
    v51 = v50;
    sub_1B4908060();
    v52 = sub_1B490803C();
    v28 = v85;
    if ((v52 & 1) != 0)
    {
      sub_1B431A670(v40, v81, v84);
      if ((v51 & 1) != (v53 & 1))
        goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      a1 = v65;
      v34 = v81;
    }
    else
    {
      v31 = *((_QWORD *)v47 + 2);
      v32 = *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80);
      v33 = (uint64_t)&v47[(v32 + 40) & ~v32];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B431A310(v33, v31, v60);
      v34 = v81;
      v73((uint64_t)v59, (char *)v40, v81);
      sub_1B4908048();
      a1 = v65;
    }
    v25 = v75;
    swift_bridgeObjectRelease();
    sub_1B4903B48();
    v35 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    v35(v49, v34);
    v17 = v62;
    v35((uint64_t)v62, v34);
    v7 = v64;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v64);
    v82 = sub_1B431A828;
    v83 = v47;
    v30 = v34;
    TupleTypeMetadata2 = v61;
    v29 = v80;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1B4908420();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRParentAndChildIndexes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRParentAndChildIndexes);
}

uint64_t TTRParentAndChildIndexes.parent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TTRParentAndChildIndexes.parent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TTRParentAndChildIndexes.parent.modify())()
{
  return nullsub_1;
}

uint64_t TTRParentAndChildIndexes.childIndexes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1B4903BC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t TTRParentAndChildIndexes.childIndexes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_1B4903BC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*TTRParentAndChildIndexes.childIndexes.modify())()
{
  return nullsub_1;
}

uint64_t sub_1B431A214()
{
  sub_1B4903BC0();
  sub_1B42FADC0((unint64_t *)&qword_1ED4E9F18, MEMORY[0x1E0CB13E8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE30);
  sub_1B431AFE0();
  return sub_1B4907CC4();
}

uint64_t TTRParentAndChildIndexes.init(parent:childIndexes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for TTRParentAndChildIndexes(0, a3, v7, v8) + 28);
  v10 = sub_1B4903BC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
}

uint64_t sub_1B431A310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_1B4903BC0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v12, a1, a2, v10);
  sub_1B431A214();
  return TTRParentAndChildIndexes.init(parent:childIndexes:)((uint64_t)v12, (uint64_t)v8, a2, a3);
}

uint64_t TTRParentAndChildIndexes.compactMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = sub_1B4903BC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v4 + *(int *)(a3 + 28), v9, v11);
  v17 = *(_QWORD *)(a3 + 16);
  v18 = a4;
  v19 = a1;
  v20 = a2;
  v21 = v4;
  sub_1B42FADC0((unint64_t *)&qword_1ED4E9F08, MEMORY[0x1E0CB13D0]);
  v14 = sub_1B4906CF8();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  return v14;
}

uint64_t static TTRParentAndChildIndexes<A>.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if ((sub_1B4906A1C() & 1) != 0)
  {
    type metadata accessor for TTRParentAndChildIndexes(0, a3, v4, v5);
    JUMPOUT(0x1B5E37EA0);
  }
  return 0;
}

uint64_t sub_1B431A548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static TTRParentAndChildIndexes<A>.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t TTRParentAndChildIndexes<A>.hash(into:)()
{
  sub_1B490695C();
  sub_1B4903BC0();
  sub_1B42FADC0(&qword_1EF09DEA8, MEMORY[0x1E0CB13B8]);
  return sub_1B490695C();
}

uint64_t TTRParentAndChildIndexes<A>.hashValue.getter()
{
  sub_1B4908498();
  TTRParentAndChildIndexes<A>.hash(into:)();
  return sub_1B49084D4();
}

uint64_t sub_1B431A610()
{
  return TTRParentAndChildIndexes<A>.hashValue.getter();
}

uint64_t sub_1B431A618()
{
  return TTRParentAndChildIndexes<A>.hash(into:)();
}

uint64_t sub_1B431A620()
{
  sub_1B4908498();
  TTRParentAndChildIndexes<A>.hash(into:)();
  return sub_1B49084D4();
}

unint64_t sub_1B431A670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B4906950();
  return sub_1B431A6B8(a1, v6, a2, a3);
}

unint64_t sub_1B431A6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  char v17;
  _QWORD v19[2];

  v5 = v4;
  v19[0] = a1;
  v19[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v13 = v12 & ~v11;
  if (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v11;
    v15 = *(_QWORD *)(v7 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    do
    {
      v16(v10, *(_QWORD *)(v5 + 48) + v15 * v13, a3, v8);
      v17 = sub_1B4906A1C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a3);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1B431A7D0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1B431A828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1B431A310(v1 + ((v3 + 40) & ~v3), v2, a1);
}

uint64_t sub_1B431A848(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 32))(*(_QWORD *)(v1 + 48), *a1);
}

uint64_t sub_1B431A878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for <A> TTRParentAndChildIndexes<A>, a1, &v4);
}

uint64_t sub_1B431A8B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1B4903BC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B431A938(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1B4903BC0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v16 = v8;
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_1B431AA18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1B4903BC0();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + a1 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_1B431AA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B4903BC0();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B431AADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B4903BC0();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B431AB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B4903BC0();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B431ABBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1B4903BC0();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), v7);
  return a1;
}

uint64_t sub_1B431AC2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1B4903BC0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v6 + 64) + v12;
  if (a2 <= v11)
    goto LABEL_23;
  v14 = (v13 & ~v12) + *(_QWORD *)(v9 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v13 + a1) & ~v12, v10, v8);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v11 + v18 + 1;
}

void sub_1B431ADC4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1B4903BC0() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v12 = 0u;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 - v10 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v10 < a2)
  {
    v13 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

unint64_t sub_1B431AFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4ECE38;
  if (!qword_1ED4ECE38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4ECE30);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4ECE38);
  }
  return result;
}

uint64_t static TTRLocalizableStrings.Common.dueDateAndRecurrenceFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.standard.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.groceries.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.smartList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.addAttachments.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagsChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.reminderNotesChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersBoard.hideSubtasksText(withCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersBoard.showSubtasksText(withCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersList.subtaskCountText(withCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B431B9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09DEB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09DEB0);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void *TTRLocalizableStrings.Common.recurrenceImagePlaceholder.unsafeMutableAddressor()
{
  return &static TTRLocalizableStrings.Common.recurrenceImagePlaceholder;
}

unint64_t static TTRLocalizableStrings.Common.recurrenceImagePlaceholder.getter()
{
  return 0xD000000000000022;
}

uint64_t static TTRLocalizableStrings.Common.symbolRecurrenceFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.alertOKButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.alertDeleteButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.alertCancelButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.continueButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.saveButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.createButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.deleteButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.renameButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.editButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.doneButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.updateButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.settingsButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.completeButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.learnMoreButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.notNowButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.resetButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.recoverButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.moveButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.dotSeparator.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteReminderWithSubtasksConfirmationTitle(isDeletingMoreThanOneReminder:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteRecurringReminderAllFutureInstancesButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderConfirmationTitle(isUpdatingMoreThanOneReminder:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderThisInstanceButton(isUpdatingMoreThanOneReminder:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderAllFutureInstancesButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.resetGrocerySectionRulesMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.resetGrocerySectionRulesDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Alerts.recoverRecentlyDeletedReminderAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.noReminders.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.noItemsInGroceryList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.allRemindersCompleted.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.allCompleted.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.allItemsCompletedInGroceryList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.itemsInGroceryListDescription(listLayout:)(char a1)
{
  return sub_1B4324D78(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.hideCompletedRemindersButtonText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.completedCountText(withCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.RemindersList.outdentRemindersText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    if (a1 > 1)
    {
      if (qword_1ED4EE550 == -1)
        goto LABEL_7;
      goto LABEL_12;
    }
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
LABEL_14:
    swift_once();
    return sub_1B4903434();
  }
  if (a1 > 1)
  {
    if (qword_1ED4EE550 == -1)
    {
LABEL_7:
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v3 = swift_allocObject();
      v4 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
      v5 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v3 + 56) = v4;
      *(_QWORD *)(v3 + 64) = v5;
      *(_QWORD *)(v3 + 32) = a1;
      v6 = sub_1B4906A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (qword_1ED4EE550 != -1)
    goto LABEL_14;
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.indentRemindersText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    if (a1 > 1)
    {
      if (qword_1ED4EE550 == -1)
        goto LABEL_7;
      goto LABEL_12;
    }
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
LABEL_14:
    swift_once();
    return sub_1B4903434();
  }
  if (a1 > 1)
  {
    if (qword_1ED4EE550 == -1)
    {
LABEL_7:
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v3 = swift_allocObject();
      v4 = MEMORY[0x1E0DEB418];
      *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
      v5 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v3 + 56) = v4;
      *(_QWORD *)(v3 + 64) = v5;
      *(_QWORD *)(v3 + 32) = a1;
      v6 = sub_1B4906A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (qword_1ED4EE550 != -1)
    goto LABEL_14;
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.reminderCellDescriptionComponentSeparator.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.markAsCompletedText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.markAsIncompleteText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerNoneText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerLowText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerMediumText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerHighText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.sectionPickerSectionLessTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.selectedHashtagCountText(count:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.ReminderDetail.notesFieldCharacterLimitReachedTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.notesFieldCharacterLimitReachedBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.earlyAlertPassedDetailsMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Assignments.me.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForAllTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForUntagged.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListName(forSelectedLabelCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.anyIncludedFiltersOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.allIncludedFiltersOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.anyIncludedFiltersOptionShort.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.allIncludedFiltersOptionShort.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionAllTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionUntagged.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForOneTagFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForTwoTagsFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionWithMenuDescription(forLabelCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForTwoIncludedTagsFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForTwoExcludedTagsFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionForOneIncludedAndOneExcludedTagFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forIncludedLabelCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forExcludedLabelCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionDescription(forIncludedExcludedLabelCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.listNameForAllTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.failureTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.defaultListFailureDetails.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.defaultListInDifferentAccount.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.sharedListFailureDetails.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ScheduledList.pastDue.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ScheduledList.nextFiveDays.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.CompletedList.pastSevenDays.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.CompletedList.pastThirtyDays.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.CompletedList.completed(dateString:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.DateBucketHeaders.restOfMonth(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.DateBucketHeaders.restOfYear(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.TodayList.nearbySectionName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.TodayList.groupByTime.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.listName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.reminderTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AppIntents.Default.sectionName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((a2 & 1) != 0 && a1 == 1)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    return sub_1B4903434();
  }
  else
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v4 = swift_allocObject();
    v5 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
    v6 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v4 + 56) = v5;
    *(_QWORD *)(v4 + 64) = v6;
    *(_QWORD *)(v4 + 32) = a1;
    v7 = sub_1B4906A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeletedReminderWithSubtasksConfirmationAlertMessage(isDeletingMoreThanOneReminder:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.UndoAction.addReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.recoverReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.editReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateFilter.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.completionChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.priorityChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.assigneeChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.customSmartListFilterChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.flaggedChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.dueDateChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.dueDateTimeChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.markOverdueToToday.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.notesChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.locationChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.addImage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.urlChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.removeEndRepeat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.endRepeatOccuencesCount.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateEndRepeatToDefaultDate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.updateEndRepeatDate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.earlyAlertChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.removeAttachments.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSiriSuggestedReminder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.addList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameGroup.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.reminderTitleChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.personChange.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveReminders.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.toggleFilter.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeListType.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.pinList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.unpinList.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteSection.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeSection.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.editSections.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveSection.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.UndoAction.applySuggestion.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t sub_1B4323108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B4911DA0;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1B41EA638();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B4323278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B4911DA0;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1B41EA638();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v8 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v6 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v6 + 104) = v8;
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = a3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v9 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6CommonO28defaultTitleForBlankReminder19effectiveParentListSSAA15TTRListProtocol_pSg_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_1B42CE5C0(a1, (uint64_t)v9);
  v1 = v10;
  if (!v10)
  {
    v6 = (uint64_t *)&unk_1ED4EE3B0;
    v7 = v9;
LABEL_8:
    sub_1B41EA560((uint64_t)v7, v6);
    goto LABEL_9;
  }
  v2 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 104))(v12, v1, v2);
  v3 = v13;
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    v6 = (uint64_t *)&unk_1EF09CB58;
    v7 = v12;
    goto LABEL_8;
  }
  v4 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  if ((v5 & 1) != 0)
  {
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_11;
  }
LABEL_9:
  if (qword_1ED4EE550 != -1)
LABEL_11:
    swift_once();
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO25earlyAlertBeforeCountText5count12intervalUnitSSSi_So015REMDueDateDeltaN0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a2)
  {
    case 0:
      if (qword_1ED4EE550 != -1)
        goto LABEL_18;
      goto LABEL_16;
    case 1:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 2:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 3:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 4:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B4903434();
      break;
    default:
      if (qword_1EF097C78 != -1)
        swift_once();
      v3 = sub_1B49058F4();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF09DEB0);
      v4 = sub_1B49058E8();
      v5 = sub_1B4907394();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v6 = 134217984;
        sub_1B4907B68();
        _os_log_impl(&dword_1B41C2000, v4, v5, "Unknown REMDueDateDeltaUnit value: %ld", v6, 0xCu);
        MEMORY[0x1B5E3D7E0](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1B4911D70;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO19earlyAlertCountText5count12intervalUnitSSSi_So015REMDueDateDeltaM0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a2)
  {
    case 0:
      if (qword_1ED4EE550 != -1)
        goto LABEL_18;
      goto LABEL_16;
    case 1:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 2:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 3:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 4:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B4903434();
      break;
    default:
      if (qword_1EF097C78 != -1)
        swift_once();
      v3 = sub_1B49058F4();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF09DEB0);
      v4 = sub_1B49058E8();
      v5 = sub_1B4907394();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v6 = 134217984;
        sub_1B4907B68();
        _os_log_impl(&dword_1B41C2000, v4, v5, "Unknown REMDueDateDeltaUnit value: %ld", v6, 0xCu);
        MEMORY[0x1B5E3D7E0](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1B4911D70;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO16intervalUnitText5count0gH0SSSi_So015REMDueDateDeltaH0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a2)
  {
    case 0:
      if (qword_1ED4EE550 != -1)
        goto LABEL_18;
      goto LABEL_16;
    case 1:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 2:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 3:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 4:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B4903434();
      break;
    default:
      if (qword_1EF097C78 != -1)
        swift_once();
      v3 = sub_1B49058F4();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF09DEB0);
      v4 = sub_1B49058E8();
      v5 = sub_1B4907394();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v6 = 134217984;
        sub_1B4907B68();
        _os_log_impl(&dword_1B41C2000, v4, v5, "Unknown REMDueDateDelta value: %ld", v6, 0xCu);
        MEMORY[0x1B5E3D7E0](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1B4911D70;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14ReminderDetailO22intervalUnitBeforeText5count0gH0SSSi_So015REMDueDateDeltaH0VtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a2)
  {
    case 0:
      if (qword_1ED4EE550 != -1)
        goto LABEL_18;
      goto LABEL_16;
    case 1:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 2:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 3:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
      goto LABEL_18;
    case 4:
      if (qword_1ED4EE550 == -1)
        goto LABEL_16;
LABEL_18:
      swift_once();
LABEL_16:
      sub_1B4903434();
      break;
    default:
      if (qword_1EF097C78 != -1)
        swift_once();
      v3 = sub_1B49058F4();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF09DEB0);
      v4 = sub_1B49058E8();
      v5 = sub_1B4907394();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v6 = 134217984;
        sub_1B4907B68();
        _os_log_impl(&dword_1B41C2000, v4, v5, "Unknown REMDueDateDelta value: %ld", v6, 0xCu);
        MEMORY[0x1B5E3D7E0](v6, -1, -1);
      }

      break;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1B4911D70;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  v10 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO31deleteReminderConfirmationTitle021isDeletingMoreThanOneG0SSSb_tFZ_0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO45deleteReminderWithSubtasksConfirmationMessage021isDeletingMoreThanOneG008includesah9CompletedI0SSSb_SbtFZ_0(char a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO40deleteRecurringReminderConfirmationTitle021isDeletingMoreThanOneH0SSSb_tFZ_0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO6AlertsO41deleteRecurringReminderThisInstanceButton021isDeletingMoreThanOneH0SSSb_tFZ_0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B4324D78(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO14LocationPickerO16vehicleEventTextySSSo022REMAlarmVehicleTriggerH0VFZ_0(uint64_t result)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (result)
  {
    if (result == 2)
    {
      if (qword_1ED4EE550 == -1)
        return sub_1B4903434();
LABEL_14:
      swift_once();
      return sub_1B4903434();
    }
    if (result == 1)
    {
      if (qword_1ED4EE550 == -1)
        return sub_1B4903434();
      goto LABEL_14;
    }
    if (qword_1EF097C78 != -1)
      swift_once();
    v1 = sub_1B49058F4();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DEB0);
    v2 = sub_1B49058E8();
    v3 = sub_1B4907388();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1B41C2000, v2, v3, "unknown event", v4, 2u);
      MEMORY[0x1B5E3D7E0](v4, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO29ConvertToCustomSmartListAlertO9makeTitle11willFlattenSSSb_tFZ_0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B4325204(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((a3 & 1) != 0)
  {
    if ((a4 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a4 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  v5 = sub_1B4906B18();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  v8 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO29ConvertToCustomSmartListAlertO06legacyI14FailureDetailsSSvgZ_0()
{
  if ((sub_1B4903E48() & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO17DateBucketHeadersO5month_4yearS2S_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B4911DA0;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1B41EA638();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO17DateBucketHeadersO11restOfMonth_4yearS2S_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B4911DA0;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1B41EA638();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11 = sub_1B4906A70();
  swift_bridgeObjectRelease();
  return v11;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings()
{
  return &type metadata for TTRLocalizableStrings;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Common()
{
  return &type metadata for TTRLocalizableStrings.Common;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Alerts()
{
  return &type metadata for TTRLocalizableStrings.Alerts;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AccountsList()
{
  return &type metadata for TTRLocalizableStrings.AccountsList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersList()
{
  return &type metadata for TTRLocalizableStrings.RemindersList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersBoard()
{
  return &type metadata for TTRLocalizableStrings.RemindersBoard;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ReminderDetail()
{
  return &type metadata for TTRLocalizableStrings.ReminderDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.LocationPicker()
{
  return &type metadata for TTRLocalizableStrings.LocationPicker;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.UndoAction()
{
  return &type metadata for TTRLocalizableStrings.UndoAction;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Assignments()
{
  return &type metadata for TTRLocalizableStrings.Assignments;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Hashtags()
{
  return &type metadata for TTRLocalizableStrings.Hashtags;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ConvertToCustomSmartListAlert()
{
  return &type metadata for TTRLocalizableStrings.ConvertToCustomSmartListAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ScheduledList()
{
  return &type metadata for TTRLocalizableStrings.ScheduledList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.CompletedList()
{
  return &type metadata for TTRLocalizableStrings.CompletedList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.DateBucketHeaders()
{
  return &type metadata for TTRLocalizableStrings.DateBucketHeaders;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.TodayList()
{
  return &type metadata for TTRLocalizableStrings.TodayList;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AppIntents()
{
  return &type metadata for TTRLocalizableStrings.AppIntents;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AppIntents.Default()
{
  return &type metadata for TTRLocalizableStrings.AppIntents.Default;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RecentlyDeletedList()
{
  return &type metadata for TTRLocalizableStrings.RecentlyDeletedList;
}

uint64_t sub_1B4325A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09DEC8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09DEC8);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static TTRIReminderDetailDueDateModifiedComponents.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRIReminderDetailDueDateModifiedComponents.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t TTRIReminderDetailDueDateModifiedComponents.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateTitle:)(NSAttributedString updateTitle)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  uint64_t v28;
  void *v29;
  objc_class *v30;
  uint64_t v31;
  char *v32;
  Class isa;
  _QWORD aBlock[6];

  v4 = v3;
  v5 = v2;
  v6 = v1;
  isa = updateTitle.super.isa;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](updateTitle.super.isa);
  v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B49058F4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 0x7265646E696D6572;
  *(_QWORD *)(inited + 40) = 0xEA00000000004449;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  v31 = v5;
  v16 = v15;
  ObjectType = swift_getObjectType();
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  swift_unknownObjectRelease();
  v19 = objc_msgSend(v18, sel_objectID);

  *(_QWORD *)(inited + 72) = sub_1B4325F40();
  *(_QWORD *)(inited + 48) = v19;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v20 = (void *)objc_opt_self();
  v21 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v22 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v32, v4, v6);
  v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  v26 = v31;
  *(_QWORD *)(v25 + 16) = v6;
  *(_QWORD *)(v25 + 24) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25 + v23, v22, v6);
  v27 = isa;
  *(_QWORD *)(v25 + v24) = isa;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1B432B03C;
  *(_QWORD *)(v28 + 24) = v25;
  aBlock[4] = sub_1B429EBC8;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_15;
  v29 = _Block_copy(aBlock);
  v30 = v27;
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_withActionName_block_, v21, v29);

  _Block_release(v29);
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v29 & 1) != 0)
    __break(1u);
}

unint64_t sub_1B4325F40()
{
  unint64_t result;

  result = qword_1ED4ECEB0;
  if (!qword_1ED4ECEB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED4ECEB0);
  }
  return result;
}

uint64_t sub_1B4325F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateCompleted:)(Swift::Bool updateCompleted)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t inited;
  Swift::Bool v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = *(_QWORD *)(v1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](updateCompleted);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B49058F4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
  v13 = updateCompleted;
  *(_BYTE *)(inited + 48) = updateCompleted;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v14 = (void *)objc_opt_self();
  v15 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 16))((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v22[0], v2);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = v16 + v5;
  v18 = swift_allocObject();
  v19 = v22[1];
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18 + v16, v6, v2);
  *(_BYTE *)(v18 + v17) = v13;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1B432B05C;
  *(_QWORD *)(v20 + 24) = v18;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_13_0;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_withActionName_block_, v15, v21);

  _Block_release(v21);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B4326360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 112))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updatePriorityLevel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v4 = v3;
  v28 = a3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  aBlock[0] = a1;
  type metadata accessor for REMReminderPriorityLevel(0);
  v16 = sub_1B4906A94();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v18 = (void *)objc_opt_self();
  v19 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = (v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  v23 = v28;
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v20, v9, a2);
  *(_QWORD *)(v22 + v21) = a1;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1B432B0DC;
  *(_QWORD *)(v24 + 24) = v22;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_23;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_withActionName_block_, v19, v25);

  _Block_release(v25);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v19 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B4326770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 120))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updateParentList:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t result;
  id v30[2];
  uint64_t v31;
  void *aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;

  v31 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  aBlock = a1;
  v16 = a2 & 1;
  LOBYTE(v33) = v16;
  v30[0] = a1;
  v17 = sub_1B4906A94();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v19 = (void *)objc_opt_self();
  v20 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, id, uint64_t))(v7 + 16))((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v30[1], a3);
  v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  v24 = v31;
  *(_QWORD *)(v23 + 16) = a3;
  *(_QWORD *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v21, v9, a3);
  v25 = v23 + v22;
  *(_QWORD *)v25 = a1;
  *(_BYTE *)(v25 + 8) = v16;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1B432B164;
  *(_QWORD *)(v26 + 24) = v23;
  v36 = sub_1B42DBDB0;
  v37 = v26;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_1B47C92AC;
  v35 = &block_descriptor_33_0;
  v27 = _Block_copy(&aBlock);
  v28 = v30[0];
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_withActionName_block_, v20, v27);

  _Block_release(v27);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v20 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B4326B98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v6 = a3 & 1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  v8 = v7;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 96))(a2, v6, ObjectType, v8);
  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.request(updateAssignee:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v27;
  _QWORD aBlock[14];

  v4 = v3;
  v27 = a3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  sub_1B432B1AC(a1, (uint64_t)aBlock);
  sub_1B432BAC8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B4249D3C);
  v16 = sub_1B4906A94();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  v20 = (*(unsigned __int8 *)(v7 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = v22;
  sub_1B432B1AC(a1, v21 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, a2);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1B432B290;
  *(_QWORD *)(v23 + 24) = v21;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_43;
  v24 = _Block_copy(aBlock);
  sub_1B432BAC8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B4249D3C);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_withActionName_block_, v19, v24);

  _Block_release(v24);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

_QWORD *sub_1B4326FE8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD v22[14];
  _QWORD v23[15];

  sub_1B432B1AC(a1, (uint64_t)v22);
  v6 = (void *)v22[0];
  v7 = (void *)v22[1];
  v8 = (void *)v22[13];
  sub_1B432B1AC(a1, (uint64_t)v23);
  v9 = v23[0];
  if (v23[0])
  {
    v20 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
    v10 = v8;
    v11 = v6;
    v12 = v7;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v20(a3, a4);
    v14 = v13;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 224))(v9, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_1B432BAC8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B4249FA4);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    v18 = v17;
    v19 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v18 + 216))(v19, v18);
    return (_QWORD *)swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateFlagged:)(Swift::Bool updateFlagged)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v4 = v3;
  v27 = v2;
  v5 = v1;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](updateFlagged);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v16 = 1702195828;
  if (!updateFlagged)
    v16 = 0x65736C6166;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  v17 = 0xE400000000000000;
  if (!updateFlagged)
    v17 = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v18 = (void *)objc_opt_self();
  v19 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
  v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = v20 + v8;
  v22 = swift_allocObject();
  v23 = v27;
  *(_QWORD *)(v22 + 16) = v5;
  *(_QWORD *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v20, v9, v5);
  *(_BYTE *)(v22 + v21) = updateFlagged;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1B432B320;
  *(_QWORD *)(v24 + 24) = v22;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_53;
  v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_withActionName_block_, v19, v25);

  _Block_release(v25);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v19 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B43274E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 128))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateDueTimeOn:)(Swift::Bool updateDueTimeOn)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t inited;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  void *v50;
  id v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  char *v67;
  void *v68;
  id v69;
  void *v70;
  char *v71;
  _QWORD *v72;
  void (*v73)(char *, char *, _QWORD *);
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  void (*v111)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD aBlock[6];

  v4 = v3;
  v5 = v2;
  v6 = v1;
  v7 = updateDueTimeOn;
  v118 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](updateDueTimeOn);
  v115 = v8;
  v117 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B490338C();
  v129 = *(_QWORD *)(v9 - 8);
  v130 = v9;
  MEMORY[0x1E0C80A78](v9);
  v116 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v119 = (uint64_t)&v106 - v12;
  v114 = v13;
  MEMORY[0x1E0C80A78](v14);
  v127 = (char *)&v106 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE310);
  MEMORY[0x1E0C80A78](v16);
  v108 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = (_QWORD *)sub_1B4903BF0();
  v123 = (_QWORD *)*(v124 - 1);
  MEMORY[0x1E0C80A78](v124);
  v107 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v109 = (char *)&v106 - v20;
  v122 = sub_1B49037E8();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v110 = (char *)&v106 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v106 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v106 - v31;
  MEMORY[0x1E0C80A78](v33);
  v128 = (uint64_t)&v106 - v34;
  v35 = sub_1B49058F4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v106 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v35, (uint64_t)qword_1EF09DEC8);
  v40 = *(void (**)(char *))(v36 + 16);
  v112 = v39;
  v40(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v113 = v7;
  v42 = 1702195828;
  if (!v7)
    v42 = 0x65736C6166;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  v43 = 0xE400000000000000;
  if (!v7)
    v43 = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v42;
  *(_QWORD *)(inited + 56) = v43;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  v44 = v5;
  v45 = *(void (**)(uint64_t))(v5 + 16);
  v46 = v4;
  v125 = v44;
  v45(v6);
  v48 = v47;
  ObjectType = swift_getObjectType();
  v50 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(ObjectType, v48);
  swift_unknownObjectRelease();
  v51 = objc_msgSend(v50, sel_dueDateComponents);

  v126 = v6;
  if (v51)
  {
    sub_1B490326C();

    v52 = v129;
    v53 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56);
    v54 = v32;
    v55 = 0;
  }
  else
  {
    v52 = v129;
    v53 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56);
    v54 = v32;
    v55 = 1;
  }
  v56 = v130;
  v111 = v53;
  v53((uint64_t)v54, v55, 1, v130);
  v57 = v128;
  sub_1B41DF5E4((uint64_t)v32, v128, (uint64_t *)&unk_1ED4E9EB0);
  sub_1B41EA51C(v57, (uint64_t)v29, (uint64_t *)&unk_1ED4E9EB0);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v59 = v58(v29, 1, v56);
  sub_1B41EA560((uint64_t)v29, (uint64_t *)&unk_1ED4E9EB0);
  v60 = v46;
  if (v59 == 1)
  {
    ((void (*)(uint64_t, uint64_t))v45)(v126, v125);
    v62 = v61;
    v63 = swift_getObjectType();
    v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
    swift_unknownObjectRelease();
    v65 = objc_msgSend(v64, sel_displayDate);

    if (v65)
    {
      v106 = v46;
      v66 = objc_msgSend(v65, sel_date);
      v67 = v120;
      sub_1B49037B8();

      v68 = (void *)sub_1B4903788();
      (*(void (**)(char *, uint64_t))(v121 + 8))(v67, v122);
      v69 = objc_msgSend(v65, sel_timeZone);
      if (v69)
      {
        v70 = v69;
        v71 = v107;
        sub_1B4903BD8();

        v72 = v123;
        v73 = (void (*)(char *, char *, _QWORD *))v123[4];
        v74 = (uint64_t)v108;
        v75 = v71;
        v76 = v124;
        v73(v108, v75, v124);
        ((void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))v72[7])(v74, 0, 1, v76);
        v77 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD *))v72[6])(v74, 1, v76);
        v78 = v130;
        v79 = (uint64_t)v110;
        if (v77 != 1)
        {
          v80 = v109;
          v73(v109, (char *)v74, v124);
          v81 = v80;
LABEL_17:
          v82 = (void *)objc_opt_self();
          v83 = (void *)sub_1B4903BCC();
          ((void (*)(char *, _QWORD *))v123[1])(v81, v124);
          v84 = objc_msgSend(v82, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v68, v83, objc_msgSend(v65, sel_isAllDay));

          sub_1B490326C();
          sub_1B41EA560(v57, (uint64_t *)&unk_1ED4E9EB0);
          v111(v79, 0, 1, v78);
          sub_1B41DF5E4(v79, v57, (uint64_t *)&unk_1ED4E9EB0);
          v52 = v129;
          v60 = v106;
          goto LABEL_18;
        }
      }
      else
      {
        v74 = (uint64_t)v108;
        ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v123[7])(v108, 1, 1, v124);
        v78 = v130;
        v79 = (uint64_t)v110;
      }
      v81 = v109;
      _s15RemindersUICore36TTRReminderTitleAttributesStylerTypePAAE26timeZoneForFormattingDates10Foundation04TimeI0Vvg_0();
      sub_1B41EA560(v74, &qword_1ED4EE310);
      goto LABEL_17;
    }
  }
LABEL_18:
  sub_1B41EA51C(v57, (uint64_t)v24, (uint64_t *)&unk_1ED4E9EB0);
  v85 = v130;
  if (v58(v24, 1, v130) == 1)
  {
    sub_1B41EA560((uint64_t)v24, (uint64_t *)&unk_1ED4E9EB0);
    v86 = sub_1B49058E8();
    v87 = sub_1B4907388();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_1B41C2000, v86, v87, "Attempted to toggle dueTimeOn while not having a dueDate.", v88, 2u);
      MEMORY[0x1B5E3D7E0](v88, -1, -1);
    }

    sub_1B41EA560(v57, (uint64_t *)&unk_1ED4E9EB0);
  }
  else
  {
    v89 = (uint64_t)v127;
    v124 = *(_QWORD **)(v52 + 32);
    ((void (*)(char *, char *, uint64_t))v124)(v127, v24, v85);
    if (v113)
    {
      type metadata accessor for TTRReminderEditor();
      v90 = v120;
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      v91 = v119;
      static TTRReminderEditor.defaultDueDateComponentsSettingToNextFullHour(dateComponents:now:)(v89, v119);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v90, v122);
    }
    else
    {
      v92 = (void *)sub_1B4903254();
      v93 = objc_msgSend(v92, sel_rem_allDayDateComponents);

      v91 = v119;
      sub_1B490326C();

    }
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    v123 = (_QWORD *)objc_opt_self();
    v94 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    v95 = v118;
    v96 = v117;
    v97 = v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v60, v126);
    v98 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v116, v91, v85);
    v99 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    v100 = (v115 + *(unsigned __int8 *)(v52 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    v101 = swift_allocObject();
    v102 = v125;
    *(_QWORD *)(v101 + 16) = v97;
    *(_QWORD *)(v101 + 24) = v102;
    (*(void (**)(unint64_t, char *, uint64_t))(v95 + 32))(v101 + v99, v96, v97);
    ((void (*)(unint64_t, char *, uint64_t))v124)(v101 + v100, v98, v85);
    v103 = swift_allocObject();
    *(_QWORD *)(v103 + 16) = sub_1B432B414;
    *(_QWORD *)(v103 + 24) = v101;
    aBlock[4] = sub_1B42DBDB0;
    aBlock[5] = v103;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B47C92AC;
    aBlock[3] = &block_descriptor_63_0;
    v104 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v123, sel_withActionName_block_, v94, v104);
    _Block_release(v104);

    v105 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
    v105(v91, v85);
    v105((uint64_t)v127, v85);
    sub_1B41EA560(v128, (uint64_t *)&unk_1ED4E9EB0);
    LOBYTE(v98) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v98 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1B432813C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 16))(a3, a4, v8);
  v12 = v11;
  ObjectType = swift_getObjectType();
  v14 = sub_1B490338C();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a2, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 136))(v10, ObjectType, v12);
  swift_unknownObjectRelease();
  return sub_1B41EA560((uint64_t)v10, (uint64_t *)&unk_1ED4E9EB0);
}

uint64_t TTRReminderDetailPresenterCapability.request(updateDueDateComponents:modifiedComponents:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t result;
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  _BYTE *v38;

  v36 = a4;
  v4 = a3;
  v30 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v34 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9EB0);
  v31 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1B49058F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EF097C80 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v33 = a1;
  sub_1B41EA51C(a1, (uint64_t)&v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t *)&unk_1ED4E9EB0);
  v17 = sub_1B4906A94();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v17;
  *(_QWORD *)(inited + 56) = v18;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  if ((v30 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      goto LABEL_9;
  }
  else if (qword_1ED4EE550 != -1)
  {
    goto LABEL_9;
  }
  while (1)
  {
    sub_1B4903434();
    v19 = v33;
    v20 = (void *)objc_opt_self();
    v21 = sub_1B4906A34();
    swift_bridgeObjectRelease();
    v22 = v34;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v34, v32, v4);
    sub_1B41EA51C(v19, (uint64_t)v10, (uint64_t *)&unk_1ED4E9EB0);
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v24 = (v35 + v23 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v25 = swift_allocObject();
    v26 = v36;
    *(_QWORD *)(v25 + 16) = v4;
    *(_QWORD *)(v25 + 24) = v26;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v25 + v23, v22, v4);
    sub_1B41DF5E4((uint64_t)v10, v25 + v24, (uint64_t *)&unk_1ED4E9EB0);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_1B432B4A4;
    *(_QWORD *)(v4 + 24) = v25;
    aBlock[4] = sub_1B42DBDB0;
    v38 = (_BYTE *)v4;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B47C92AC;
    aBlock[3] = &block_descriptor_73;
    v27 = _Block_copy(aBlock);
    v10 = v38;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_withActionName_block_, v21, v27);

    _Block_release(v27);
    LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v21 & 1) == 0)
      break;
    __break(1u);
LABEL_9:
    swift_once();
  }
  return result;
}

uint64_t sub_1B432873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 136))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateNotes:)(NSAttributedString_optional updateNotes)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Class v26;
  uint64_t v27;
  void *v28;
  objc_class *v29;
  uint64_t v30;
  char *v31;
  Class isa;
  _QWORD aBlock[6];

  v3 = v2;
  v4 = v1;
  v5 = *(_QWORD *)&updateNotes.is_nil;
  isa = updateNotes.value.super.isa;
  v6 = *(_QWORD *)(*(_QWORD *)&updateNotes.is_nil - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](updateNotes.value.super.isa);
  v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B49058F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 0x7265646E696D6572;
  *(_QWORD *)(inited + 40) = 0xEA00000000004449;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v4);
  v30 = v4;
  v15 = v14;
  ObjectType = swift_getObjectType();
  v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(ObjectType, v15);
  swift_unknownObjectRelease();
  v18 = objc_msgSend(v17, sel_objectID);

  *(_QWORD *)(inited + 72) = sub_1B4325F40();
  *(_QWORD *)(inited + 48) = v18;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v19 = (void *)objc_opt_self();
  v20 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v21 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v31, v3, v5);
  v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  v25 = v30;
  *(_QWORD *)(v24 + 16) = v5;
  *(_QWORD *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v22, v21, v5);
  v26 = isa;
  *(_QWORD *)(v24 + v23) = isa;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1B432B4CC;
  *(_QWORD *)(v27 + 24) = v24;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_83;
  v28 = _Block_copy(aBlock);
  v29 = v26;
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_withActionName_block_, v20, v28);

  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v28 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B4328BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 208))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(updateURL:)(Swift::String_optional updateURL)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *object;
  void *countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  id v60;
  uint8_t *v61;
  void *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76[3];

  v73 = v1;
  v74 = v2;
  object = updateURL.value._object;
  countAndFlagsBits = (void *)updateURL.value._countAndFlagsBits;
  v76[2] = *(id *)MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v66 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - v14;
  v16 = sub_1B49036D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v69 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v68 = (char *)&v66 - v20;
  MEMORY[0x1E0C80A78](v21);
  v67 = (char *)&v66 - v22;
  v23 = sub_1B49030BC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!object)
    goto LABEL_10;
  v70 = v3;
  v76[0] = countAndFlagsBits;
  v76[1] = object;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4903008();
  sub_1B41E971C();
  v28 = sub_1B4907BA4();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  swift_bridgeObjectRelease();
  v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v31 = v28 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v45 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v72, 1, 1, v16, v25);
    TTRReminderDetailPresenterCapability.request(updateURL:)(v45, v73, v74);
    sub_1B41EA560(v45, &qword_1ED4E9EC0);
    return;
  }
  v32 = sub_1B4906B30();
  v33 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
  v76[0] = 0;
  v34 = objc_msgSend(v33, sel_initWithTypes_error_, 32, v76);
  v66 = v34;
  if (!v34)
  {
    v46 = v76[0];
    v47 = (void *)sub_1B4903560();

    swift_willThrow();
    v40 = v17;
    goto LABEL_12;
  }
  v35 = v34;
  v36 = v76[0];
  v37 = v35;
  v38 = (void *)sub_1B4906A34();
  v39 = objc_msgSend(v37, sel_firstMatchInString_options_range_, v38, 0, 0, v32);

  v40 = v17;
  if (!v39)
  {
LABEL_12:
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v44(v15, 1, 1, v16);
    v41 = 0;
    goto LABEL_15;
  }
  v41 = v39;
  v42 = objc_msgSend(v39, "URL");
  if (v42)
  {
    v43 = v42;
    sub_1B490368C();

    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v44(v12, 0, 1, v16);
  }
  else
  {
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v44(v12, 1, 1, v16);
  }
  sub_1B41DF5E4((uint64_t)v12, (uint64_t)v15, &qword_1ED4E9EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v15, 1, v16) != 1)
  {
    swift_bridgeObjectRelease();
    v63 = v37;
    v64 = v67;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v67, v15, v16);
    v65 = (uint64_t)v72;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v72, v64, v16);
    v44((char *)v65, 0, 1, v16);
    TTRReminderDetailPresenterCapability.request(updateURL:)(v65, v73, v74);

    sub_1B41EA560(v65, &qword_1ED4E9EC0);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v64, v16);
    return;
  }
LABEL_15:
  sub_1B41EA560((uint64_t)v15, &qword_1ED4E9EC0);
  v48 = (void *)objc_opt_self();
  v49 = (void *)sub_1B4906A34();
  v50 = objc_msgSend(v48, sel__lp_URLWithUserTypedString_relativeToURL_, v49, 0);

  if (v50)
  {
    v51 = v69;
    sub_1B490368C();

    v52 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v53 = (uint64_t)v71;
    v52(v71, v51, v16);
    v44((char *)v53, 0, 1, v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v53, 1, v16) != 1)
    {
      swift_bridgeObjectRelease();
      v54 = v68;
      v52(v68, (char *)v53, v16);
      v55 = (uint64_t)v72;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v72, v54, v16);
      v44((char *)v55, 0, 1, v16);
      TTRReminderDetailPresenterCapability.request(updateURL:)(v55, v73, v74);

      sub_1B41EA560(v55, &qword_1ED4E9EC0);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v54, v16);
      return;
    }
  }
  else
  {
    v53 = (uint64_t)v71;
    v44(v71, 1, 1, v16);
  }
  sub_1B41EA560(v53, &qword_1ED4E9EC0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v56 = sub_1B49058F4();
  __swift_project_value_buffer(v56, (uint64_t)qword_1EF09DEC8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v57 = sub_1B49058E8();
  v58 = sub_1B4907370();
  v59 = os_log_type_enabled(v57, v58);
  v60 = v66;
  if (v59)
  {
    v61 = (uint8_t *)swift_slowAlloc();
    v62 = (void *)swift_slowAlloc();
    v76[0] = v62;
    *(_DWORD *)v61 = 136315138;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v75 = sub_1B41EF7C8(v28, v30, (uint64_t *)v76);
    sub_1B4907B68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B41C2000, v57, v58, "Discarding edits for invalid URL string: {url: %s}", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v62, -1, -1);
    MEMORY[0x1B5E3D7E0](v61, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t))(v74 + 24))(v73);

}

uint64_t TTRReminderDetailPresenterCapability.request(updateURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v3 = a2;
  v4 = a1;
  v49 = *(_QWORD *)(a2 - 8);
  v50 = a3;
  MEMORY[0x1E0C80A78](a1);
  v44 = v5;
  v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  v45 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v46 = v7;
  v47 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - v9;
  v11 = sub_1B49058F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 28532;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  sub_1B41EA51C(v4, (uint64_t)v10, &qword_1ED4E9EC0);
  v17 = sub_1B49036D4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1)
  {
    sub_1B41EA560((uint64_t)v10, &qword_1ED4E9EC0);
    v19 = (uint64_t *)(inited + 48);
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    v20 = v44;
  }
  else
  {
    v42 = v4;
    v21 = v3;
    v22 = sub_1B49035C0();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
    v19 = (uint64_t *)(inited + 48);
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    if (v24)
    {
      *v19 = v22;
      v3 = v21;
      v20 = v44;
      v4 = v42;
      v25 = v43;
      goto LABEL_9;
    }
    v3 = v21;
    v20 = v44;
    v4 = v42;
  }
  v25 = v43;
  *v19 = 0;
  v24 = 0xE000000000000000;
LABEL_9:
  *(_QWORD *)(inited + 56) = v24;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v26 = (void *)objc_opt_self();
  v27 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  v29 = v48;
  v28 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v25, v3);
  v30 = v4;
  v31 = v47;
  sub_1B41EA51C(v30, v47, &qword_1ED4E9EC0);
  v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v33 = *(unsigned __int8 *)(v45 + 80);
  v34 = v20 + v32 + v33;
  v35 = v3;
  v36 = v34 & ~v33;
  v37 = swift_allocObject();
  v38 = v50;
  *(_QWORD *)(v37 + 16) = v35;
  *(_QWORD *)(v37 + 24) = v38;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v37 + v32, v29, v35);
  sub_1B41DF5E4(v31, v37 + v36, &qword_1ED4E9EC0);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1B432B5C8;
  *(_QWORD *)(v39 + 24) = v37;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_93;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_withActionName_block_, v27, v40);

  _Block_release(v40);
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v27 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B432988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 320))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestRemoveEndRepeat()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v3 = v2;
  v4 = v1;
  v5 = v0;
  v6 = *(_QWORD *)(v0 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v9 = sub_1B49058F4();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF09DEC8);
  sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v10 = (void *)objc_opt_self();
  v11 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v5;
  *(_QWORD *)(v13 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, v8, v5);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1B432B668;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_103;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_withActionName_block_, v11, v15);

  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B4329BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v6);
  v10 = v9;
  ObjectType = swift_getObjectType();
  v12 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 184))(v8, ObjectType, v10);
  swift_unknownObjectRelease();
  return sub_1B41EA560((uint64_t)v8, &qword_1ED4EB030);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestEndRepeat(after:)(Swift::UInt after)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = v3;
  v24 = v2;
  v5 = v1;
  v7 = *(_QWORD *)(v1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](after);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 0x7265746661;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(inited + 48) = after;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v16 = (void *)objc_opt_self();
  v17 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v5);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v24;
  *((_QWORD *)v19 + 2) = v5;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = after;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v19[v18], v9, v5);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1B432B6DC;
  *(_QWORD *)(v21 + 24) = v19;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_113;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_withActionName_block_, v17, v22);

  _Block_release(v22);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B432A038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v13 = a1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v15 = v14;
  ObjectType = swift_getObjectType();
  sub_1B432BA48((uint64_t)v13, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 184))(v9, ObjectType, v15);
  swift_unknownObjectRelease();
  sub_1B41EA560((uint64_t)v9, &qword_1ED4EB030);
  return sub_1B432BA8C((uint64_t)v13);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.requestEndRepeatOnDefaultDate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[6];

  v3 = v2;
  v4 = v1;
  v5 = v0;
  v6 = *(_QWORD *)(v0 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v9 = sub_1B49058F4();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF09DEC8);
  sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v10 = (void *)objc_opt_self();
  v11 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v5;
  *(_QWORD *)(v13 + 24) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, v8, v5);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1B432B710;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_123;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_withActionName_block_, v11, v15);

  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
}

uint64_t sub_1B432A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v4 = v3;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 192))(ObjectType, v4);
  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.requestEndRepeat(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t result;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD aBlock[6];

  v34 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v33 = v6;
  v35 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1B49037E8();
  v7 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v30 = v8;
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B49058F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF097C80 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF09DEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  *(_QWORD *)(inited + 32) = 0x657461446E6FLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v16 = sub_1B4903740();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v17;
  sub_1B41E292C(inited);
  sub_1B4820734();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v29 = (id)objc_opt_self();
  v18 = sub_1B4906A34();
  swift_bridgeObjectRelease();
  v19 = a1;
  v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v31);
  v21 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v35, v32, a2);
  v22 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v23 = (v30 + *(unsigned __int8 *)(v5 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v24 = swift_allocObject();
  v25 = v34;
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v22, v9, v20);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v23, v21, a2);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1B432B7E4;
  *(_QWORD *)(v26 + 24) = v24;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_133;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v29, sel_withActionName_block_, v18, v27);

  _Block_release(v27);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v18 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B432A8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB030);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRRecurrenceEndModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B49037E8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v16 = v15;
  ObjectType = swift_getObjectType();
  sub_1B432BA48((uint64_t)v13, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 184))(v9, ObjectType, v16);
  swift_unknownObjectRelease();
  sub_1B41EA560((uint64_t)v9, &qword_1ED4EB030);
  return sub_1B432BA8C((uint64_t)v13);
}

Swift::Void __swiftcall TTRReminderDetailPresenterCapability.request(addAttachments:)(Swift::OpaquePointer addAttachments)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v4 = v3;
  v5 = v2;
  v6 = v1;
  v8 = *(_QWORD *)(v1 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](addAttachments._rawValue);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v6);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v6;
  *(_QWORD *)(v15 + 24) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v10, v6);
  *(Swift::OpaquePointer *)(v15 + v14) = addAttachments;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1B432B8C4;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_143;
  v17 = _Block_copy(aBlock);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_withActionName_block_, v12, v17);

  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_1B432ACEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 296))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

uint64_t TTRReminderDetailPresenterCapability.requestRemove(attachment:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = *(_QWORD *)(a2 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v10, a2);
  *(_QWORD *)(v15 + v14) = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1B432B8E4;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1B42DBDB0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B47C92AC;
  aBlock[3] = &block_descriptor_153;
  v17 = _Block_copy(aBlock);
  v18 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_withActionName_block_, v12, v17);

  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1B432AFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 304))(a2, ObjectType, v6);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B432B03C()
{
  return sub_1B432B8F0((uint64_t (*)(unint64_t, _QWORD))sub_1B4325F7C);
}

uint64_t sub_1B432B048()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B05C()
{
  return sub_1B432B32C((uint64_t (*)(unint64_t, _QWORD))sub_1B4326360);
}

uint64_t sub_1B432B068()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B078()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1B432B0DC()
{
  return sub_1B432B8F0((uint64_t (*)(unint64_t, _QWORD))sub_1B4326770);
}

uint64_t sub_1B432B0E8()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B0F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t sub_1B432B164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1B4326B98(v0 + v3, *(_QWORD *)v4, *(_BYTE *)(v4 + 8), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B432B19C()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B1AC(__int128 *a1, uint64_t a2)
{
  __swift_memcpy112_8(a2, a1);
  return a2;
}

uint64_t sub_1B432B1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(void **)(v0 + 32);
  if (v4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 144) & ~v3), v1);
  return swift_deallocObject();
}

_QWORD *sub_1B432B290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1B4326FE8((__int128 *)(v0 + 32), v0 + ((v2 + 144) & ~v2), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B432B2B0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1B432B320()
{
  return sub_1B432B32C((uint64_t (*)(unint64_t, _QWORD))sub_1B43274E0);
}

uint64_t sub_1B432B32C(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(unsigned __int8 *)(v1 + v3 + *(_QWORD *)(v2 + 64)));
}

uint64_t sub_1B432B358()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1B490338C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1B432B414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B490338C() - 8) + 80);
  return sub_1B432813C(v0 + v4, v0 + ((v4 + v5 + v6) & ~v6), v1, v2);
}

uint64_t sub_1B432B480()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B490()
{
  return objectdestroy_65Tm((uint64_t *)&unk_1ED4E9EB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAEAB0]);
}

uint64_t sub_1B432B4A4()
{
  return sub_1B432B5DC((uint64_t *)&unk_1ED4E9EB0, (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1B432873C);
}

uint64_t sub_1B432B4B8()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B4CC()
{
  return sub_1B432B8F0((uint64_t (*)(unint64_t, _QWORD))sub_1B4328BB0);
}

uint64_t sub_1B432B4D8()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B4E8()
{
  return objectdestroy_65Tm(&qword_1ED4E9EC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t objectdestroy_65Tm(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  v9 = (v6 + v7 + v8) & ~v8;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v2 + v6, v4);
  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v2 + v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v2 + v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1B432B5C8()
{
  return sub_1B432B5DC(&qword_1ED4E9EC0, (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1B432988C);
}

uint64_t sub_1B432B5DC(uint64_t *a1, uint64_t (*a2)(unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return a2(v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), v3, v4);
}

uint64_t sub_1B432B654()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B668()
{
  return sub_1B432B71C((uint64_t (*)(uint64_t))sub_1B4329BD4);
}

uint64_t sub_1B432B674()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B684()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1B432B6DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1B432A038(v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2), v1, v0[3]);
}

uint64_t sub_1B432B6FC()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B710()
{
  return sub_1B432B71C((uint64_t (*)(uint64_t))sub_1B432A468);
}

uint64_t sub_1B432B71C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_1B432B73C()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1B49037E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_1B432B7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_1B49037E8() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1B432A8E8(v0 + v4, v0 + ((v4 + *(_QWORD *)(v3 + 64) + v5) & ~v5), v1, v2);
}

uint64_t sub_1B432B848()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B858()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B432B8C4()
{
  return sub_1B432B8F0((uint64_t (*)(unint64_t, _QWORD))sub_1B432ACEC);
}

uint64_t sub_1B432B8D0()
{
  return swift_deallocObject();
}

uint64_t sub_1B432B8E4()
{
  return sub_1B432B8F0((uint64_t (*)(unint64_t, _QWORD))sub_1B432AFDC);
}

uint64_t sub_1B432B8F0(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B432B924()
{
  return swift_deallocObject();
}

unint64_t sub_1B432B938()
{
  unint64_t result;

  result = qword_1EF09DEE0;
  if (!qword_1EF09DEE0)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRIReminderDetailDueDateModifiedComponents, &type metadata for TTRIReminderDetailDueDateModifiedComponents);
    atomic_store(result, (unint64_t *)&qword_1EF09DEE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRIReminderDetailDueDateModifiedComponents(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B432B9C8 + 4 * byte_1B4917BB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B432B9FC + 4 * asc_1B4917BB0[v4]))();
}

uint64_t sub_1B432B9FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B432BA04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B432BA0CLL);
  return result;
}

uint64_t sub_1B432BA18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B432BA20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B432BA24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B432BA2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIReminderDetailDueDateModifiedComponents()
{
  return &type metadata for TTRIReminderDetailDueDateModifiedComponents;
}

uint64_t sub_1B432BA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B432BA8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TTRRecurrenceEndModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1B432BAC8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

uint64_t REMSmartListType.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v0 = sub_1B4906A64();
  v2 = v1;
  if (v0 == sub_1B4906A64() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
LABEL_50:
    swift_once();
    return sub_1B4903434();
  }
  v5 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_15;
  v6 = sub_1B4906A64();
  v8 = v7;
  if (v6 == sub_1B4906A64() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
LABEL_18:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  v11 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_18;
  v12 = sub_1B4906A64();
  v14 = v13;
  if (v12 == sub_1B4906A64() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v17 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_21:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  v18 = sub_1B4906A64();
  v20 = v19;
  if (v18 == sub_1B4906A64() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  v22 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
LABEL_27:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  v23 = sub_1B4906A64();
  v25 = v24;
  if (v23 == sub_1B4906A64() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_33;
  }
  v27 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
LABEL_33:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  v28 = sub_1B4906A64();
  v30 = v29;
  if (v28 == sub_1B4906A64() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_39;
  }
  v32 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
  {
LABEL_39:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  v33 = sub_1B4906A64();
  v35 = v34;
  if (v33 == sub_1B4906A64() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_46;
  }
  v37 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
  {
LABEL_46:
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_50;
  }
  return 0;
}

uint64_t REMSmartListType.longTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1B4906A64();
  v2 = v1;
  if (v0 == sub_1B4906A64() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      return REMSmartListType.title.getter();
  }
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t REMSmartListType.glyph.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v0 = sub_1B4906A64();
  v2 = v1;
  if (v0 == sub_1B4906A64() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v5 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_15:
    if (qword_1ED4ED6D8 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Image.smartListToday;
    goto LABEL_18;
  }
  v6 = sub_1B4906A64();
  v8 = v7;
  if (v6 == sub_1B4906A64() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v11 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_21:
    if (qword_1ED4ED700 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Image.smartListScheduled;
    goto LABEL_18;
  }
  v12 = sub_1B4906A64();
  v14 = v13;
  if (v12 != sub_1B4906A64() || v14 != v15)
  {
    v20 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_25;
    v21 = sub_1B4906A64();
    v23 = v22;
    if (v21 == sub_1B4906A64() && v23 == v24)
    {
      swift_bridgeObjectRelease_n();
LABEL_32:
      if (qword_1ED4ED6E8 != -1)
        swift_once();
      v16 = &static TTRCommonAsset.Image.smartListFlagged;
      goto LABEL_18;
    }
    v25 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_32;
    v26 = sub_1B4906A64();
    v28 = v27;
    if (v26 == sub_1B4906A64() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
LABEL_39:
      if (qword_1ED4E5820 != -1)
        swift_once();
      v16 = &static TTRCommonAsset.Image.smartListAssigned;
      goto LABEL_18;
    }
    v30 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      goto LABEL_39;
    v31 = sub_1B4906A64();
    v33 = v32;
    if (v31 == sub_1B4906A64() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    v35 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      v36 = sub_1B4906A64();
      v38 = v37;
      if (v36 == sub_1B4906A64() && v38 == v39)
      {
        swift_bridgeObjectRelease_n();
LABEL_50:
        if (qword_1ED4E5840 != -1)
          swift_once();
        v16 = &static TTRCommonAsset.Image.smartListCompleted;
        goto LABEL_18;
      }
      v40 = sub_1B4908390();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
        goto LABEL_50;
    }
    return 0;
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  if (qword_1ED4ED6C8 != -1)
    swift_once();
  v16 = &static TTRCommonAsset.Image.smartListAll;
LABEL_18:
  v17 = *v16;
  v18 = (id)*v16;
  return v17;
}

id REMSmartListType.color.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v0 = sub_1B4906A64();
  v2 = v1;
  if (v0 == sub_1B4906A64() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v5 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_15:
    if (qword_1ED4E5810 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Color.remindersColor6;
    goto LABEL_18;
  }
  v6 = sub_1B4906A64();
  v8 = v7;
  if (v6 == sub_1B4906A64() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v11 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_21:
    if (qword_1ED4E57F8 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Color.remindersColor1;
    goto LABEL_18;
  }
  v12 = sub_1B4906A64();
  v14 = v13;
  if (v12 == sub_1B4906A64() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:
    if (qword_1ED4E57F0 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Color.smartListAllColor;
    goto LABEL_18;
  }
  v20 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_25;
  v21 = sub_1B4906A64();
  v23 = v22;
  if (v21 == sub_1B4906A64() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_32:
    if (qword_1ED4E5800 != -1)
      swift_once();
    v16 = &static TTRCommonAsset.Color.remindersColor2;
    goto LABEL_18;
  }
  v25 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_32;
  v26 = sub_1B4906A64();
  v28 = v27;
  if (v26 == sub_1B4906A64() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v30 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      v31 = sub_1B4906A64();
      v33 = v32;
      if (v31 == sub_1B4906A64() && v33 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v35 = sub_1B4908390();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          v36 = sub_1B4906A64();
          v38 = v37;
          if (v36 == sub_1B4906A64() && v38 == v39)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v40 = sub_1B4908390();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
              return 0;
          }
          if (qword_1ED4E5818 != -1)
            swift_once();
          v16 = &static TTRCommonAsset.Color.remindersColor12;
          goto LABEL_18;
        }
      }
      return objc_msgSend((id)objc_opt_self(), sel_ttr_systemPurpleColor);
    }
  }
  if (qword_1ED4E5808 != -1)
    swift_once();
  v16 = &static TTRCommonAsset.Color.remindersColor4;
LABEL_18:
  v17 = *v16;
  v18 = (id)*v16;
  return (id)v17;
}

uint64_t REMSmartListType.navigationSpecifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;

  v2 = sub_1B4906A64();
  v4 = v3;
  if (v2 == sub_1B4906A64() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v7 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_15:
    v18 = *MEMORY[0x1E0D85348];
    v19 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a1, v18, v19);
    v20 = (unsigned int *)MEMORY[0x1E0D85448];
    goto LABEL_16;
  }
  v8 = sub_1B4906A64();
  v10 = v9;
  if (v8 == sub_1B4906A64() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  v13 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_19:
    v29 = *MEMORY[0x1E0D85348];
    v30 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(a1, v29, v30);
    v20 = (unsigned int *)MEMORY[0x1E0D85498];
    goto LABEL_16;
  }
  v14 = sub_1B4906A64();
  v16 = v15;
  if (v14 == sub_1B4906A64() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
LABEL_21:
    v32 = *MEMORY[0x1E0D85348];
    v33 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(a1, v32, v33);
    v20 = (unsigned int *)MEMORY[0x1E0D85408];
    goto LABEL_16;
  }
  v31 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_21;
  v34 = sub_1B4906A64();
  v36 = v35;
  if (v34 == sub_1B4906A64() && v36 == v37)
  {
    swift_bridgeObjectRelease_n();
LABEL_26:
    v39 = *MEMORY[0x1E0D85348];
    v40 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(a1, v39, v40);
    v20 = (unsigned int *)MEMORY[0x1E0D85468];
    goto LABEL_16;
  }
  v38 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
    goto LABEL_26;
  v41 = sub_1B4906A64();
  v43 = v42;
  if (v41 == sub_1B4906A64() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:
    v46 = *MEMORY[0x1E0D85348];
    v47 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(a1, v46, v47);
    v20 = (unsigned int *)MEMORY[0x1E0D85480];
    goto LABEL_16;
  }
  v45 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
    goto LABEL_31;
  v48 = sub_1B4906A64();
  v50 = v49;
  if (v48 == sub_1B4906A64() && v50 == v51)
  {
    swift_bridgeObjectRelease_n();
LABEL_36:
    v53 = *MEMORY[0x1E0D85348];
    v54 = sub_1B49042C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(a1, v53, v54);
    v20 = (unsigned int *)MEMORY[0x1E0D85420];
    goto LABEL_16;
  }
  v52 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
    goto LABEL_36;
  v55 = sub_1B4906A64();
  v57 = v56;
  if (v55 == sub_1B4906A64() && v57 == v58)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v59 = sub_1B4908390();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
    {
      v27 = sub_1B490431C();
      v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
      v25 = a1;
      v26 = 1;
      return v24(v25, v26, 1, v27);
    }
  }
  v60 = *MEMORY[0x1E0D85348];
  v61 = sub_1B49042C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(a1, v60, v61);
  v20 = (unsigned int *)MEMORY[0x1E0D85490];
LABEL_16:
  v21 = *v20;
  v22 = sub_1B490431C();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(a1, v21, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v25 = a1;
  v26 = 0;
  v27 = v22;
  return v24(v25, v26, 1, v27);
}

uint64_t TTRTreeStorageWithHiddenChildren.wrappedTree.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t TTRTreeStorageWithHiddenChildren.itemIDsWithHiddenChildren.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRTreeStorageWithHiddenChildren.upstreamTree.getter()
{
  sub_1B432E690();
  return swift_unknownObjectRetain();
}

uint64_t TTRTreeStorageWithHiddenChildren.__allocating_init(upstreamTree:itemIDsWithHiddenChildren:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t TTRTreeStorageWithHiddenChildren.init(upstreamTree:itemIDsWithHiddenChildren:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t TTRTreeStorageWithHiddenChildren.numberOfChildren(of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1B4907B14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - v8;
  v26 = v3;
  v27 = v4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v25 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v28 = a1;
  v19(v9, a1, v6, v16);
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v21 = v29;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v14, v11);
    v22 = v29;
    swift_getAssociatedConformanceWitness();
    v23 = sub_1B4907118();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    v21 = v22;
    if ((v23 & 1) != 0)
      return 0;
  }
  v30 = *(_QWORD *)(v21 + 16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v28, v26);
}

uint64_t TTRTreeStorageWithHiddenChildren.child(_:of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a3;
  v31 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 88) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_1B4907B14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - v10;
  v28 = v5;
  v29 = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v26 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v32 = a2;
  v21(v11, a2, v8, v18);
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = v27;
LABEL_5:
    v33 = *(_QWORD *)(v23 + 16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v31, v32, v28);
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v16, v13);
  v24 = v27;
  swift_getAssociatedConformanceWitness();
  if ((sub_1B4907118() & 1) == 0)
  {
    v23 = v24;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    goto LABEL_5;
  }
  result = sub_1B4908144();
  __break(1u);
  return result;
}

uint64_t TTRTreeStorageWithHiddenChildren.item(withID:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v49 = a1;
  v50 = a2;
  v3 = *(_QWORD *)(*v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v2 + 88) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v40 - v7;
  v8 = sub_1B4907B14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v48 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v15);
  v42 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - v19;
  v47 = v2;
  v21 = v2[2];
  v51 = v21;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 40);
  v23 = v49;
  v49 = v3;
  v22(v23, v3, v4, v18);
  v24 = v14;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v13, 1, AssociatedTypeWitness) != 1)
  {
    v41 = v8;
    v28 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v28(v20, v13, AssociatedTypeWitness);
    v51 = v21;
    v29 = v24;
    v30 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 48))(v20, v49, v4);
    if (v25(v30, 1, AssociatedTypeWitness) == 1)
    {
      v31 = v24;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v41);
    }
    else
    {
      v32 = v42;
      v28(v42, v30, AssociatedTypeWitness);
      v33 = v28;
      v34 = v43;
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
      v35 = v46;
      swift_getAssociatedConformanceWitness();
      v36 = sub_1B4907118();
      v37 = v34;
      v28 = v33;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v35);
      v31 = v29;
      v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v32, AssociatedTypeWitness);
      if ((v36 & 1) != 0)
      {
        v38(v20, AssociatedTypeWitness);
        v26 = 1;
        v27 = v50;
LABEL_8:
        v24 = v31;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, AssociatedTypeWitness);
      }
    }
    v27 = v50;
    v28(v50, v20, AssociatedTypeWitness);
    v26 = 0;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  v26 = 1;
  v27 = v50;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1, AssociatedTypeWitness);
}

uint64_t TTRTreeStorageWithHiddenChildren.parent(of:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v29 = a1;
  v30 = a2;
  v3 = *(_QWORD *)(*v2 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v2 + 88) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_1B4907B14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - v16;
  v28 = v2;
  v31 = v2[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v29, v3, v4, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v18(v17, v12, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v19 = v27;
    swift_getAssociatedConformanceWitness();
    v20 = sub_1B4907118();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v19);
    if ((v20 & 1) == 0)
    {
      v22 = v30;
      v18(v30, v17, AssociatedTypeWitness);
      v21 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, v21, 1, AssociatedTypeWitness);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, AssociatedTypeWitness);
  }
  v21 = 1;
  v22 = v30;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, v21, 1, AssociatedTypeWitness);
}

uint64_t TTRTreeStorageWithHiddenChildren.isExpandSuppressed(_:)(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) + 8) + 16))(a1, *(_QWORD *)(*(_QWORD *)v1 + 80)) & 1;
}

uint64_t TTRTreeStorageWithHiddenChildren.convertFromImmediateUpstream(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v27 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - v6;
  v8 = sub_1B4907B14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v27, v8, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v11, AssociatedTypeWitness);
    v18 = v5;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    swift_getAssociatedConformanceWitness();
    v19 = sub_1B4907118();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, AssociatedTypeWitness);
    if ((v19 & 1) != 0)
    {
      v20 = type metadata accessor for TTRDerivedTreeLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v26, 1, 1, v20);
    }
  }
  v22 = type metadata accessor for TTRDerivedTreeLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v26, v27, v22);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
}

uint64_t TTRTreeStorageWithHiddenChildren.convertToImmediateUpstream(_:for:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v58 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 88) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = v4;
  v56 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedTypeWitness();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - v9;
  v11 = sub_1B4907B14();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v49 - v19;
  v22 = type metadata accessor for TTRDerivedTreeLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v21);
  MEMORY[0x1E0C80A78](v22);
  v53 = (uint64_t)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v49 - v26;
  v62 = v29;
  v63 = v28;
  (*(void (**)(char *, uint64_t, __n128))(v29 + 16))((char *)&v49 - v26, a1, v25);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v57 = a1;
  v30(v16, a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
LABEL_7:
    v37 = v62;
    v36 = v63;
LABEL_8:
    sub_1B4908330();
    swift_allocObject();
    v38 = sub_1B4906DD0();
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v39, v27, v36);
    return sub_1B42EE288(v38);
  }
  v50 = v12;
  v51 = v11;
  v52 = v27;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, AssociatedTypeWitness);
  v31 = v61;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v32 = v60;
  swift_getAssociatedConformanceWitness();
  v33 = sub_1B4907118();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v32);
  if ((v33 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, AssociatedTypeWitness);
    v27 = v52;
    goto LABEL_7;
  }
  if ((v58 & 1) != 0)
  {
    v36 = v63;
    v40 = v52;
    if (*(_QWORD *)(v57 + *(int *)(v63 + 36)))
    {
      v35 = sub_1B4906E30();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v36);
      return v35;
    }
    v64 = v31[2];
    v61 = *(_QWORD **)(v17 + 16);
    v42 = (uint64_t)v54;
    ((void (*)(char *, char *, uint64_t))v61)(v54, v20, AssociatedTypeWitness);
    v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56);
    v43(v42, 0, 1, AssociatedTypeWitness);
    v44 = v56;
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 24);
    swift_unknownObjectRetain();
    v46 = v45(v42, v55, v44);
    v27 = v52;
    v47 = v46;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v42, v51);
    swift_unknownObjectRelease();
    ((void (*)(uint64_t, char *, uint64_t))v61)(v42, v20, AssociatedTypeWitness);
    v43(v42, 0, 1, AssociatedTypeWitness);
    v48 = v53;
    TTRDerivedTreeLocation.init(parent:index:)(v42, v47, AssociatedTypeWitness, AssociatedConformanceWitness, v53);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, AssociatedTypeWitness);
    v37 = v62;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v36);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v27, v48, v36);
    goto LABEL_8;
  }
  v34 = v63;
  v35 = sub_1B4906E30();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v34);
  return v35;
}

uint64_t TTRTreeStorageWithHiddenChildren.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTRTreeStorageWithHiddenChildren.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B432E5D8()
{
  sub_1B432E690();
  return swift_unknownObjectRetain();
}

uint64_t sub_1B432E604(uint64_t a1, char a2)
{
  return TTRTreeStorageWithHiddenChildren.convertToImmediateUpstream(_:for:)(a1, a2 & 1);
}

uint64_t sub_1B432E610(uint64_t a1)
{
  return TTRTreeStorageWithHiddenChildren.numberOfChildren(of:)(a1);
}

uint64_t sub_1B432E630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.child(_:of:)(a1, a2, a3);
}

uint64_t sub_1B432E650@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.item(withID:)(a1, a2);
}

uint64_t sub_1B432E670@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return TTRTreeStorageWithHiddenChildren.parent(of:)(a1, a2);
}

uint64_t sub_1B432E690()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1B432E6A0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRTreeStorageWithHiddenChildren<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B432E6CC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRTreeStorageWithHiddenChildren<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B432E6F8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B432E71C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TTRTreeStorageWithHiddenChildren(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRTreeStorageWithHiddenChildren);
}

void sub_1B432E774(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B432E7C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432E858 + 4 * byte_1B4917D75[a2]))(0x6874695765766F6DLL);
}

uint64_t sub_1B432E858(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6874695765766F6DLL && v1 == 0xEE007473694C6E69)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1B432E938(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432E994(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432EA0C + 4 * byte_1B4917D7E[a2]))(0x724F6C61756E616DLL);
}

uint64_t sub_1B432EA0C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x724F6C61756E616DLL && v1 == 0xEE00676E69726564)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B432EAD4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7365746F6ELL;
    else
      v3 = 0x7367617468736168;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7365746F6ELL;
      else
        v6 = 0x7367617468736168;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x656C746974;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x656C746974)
  {
LABEL_21:
    v8 = sub_1B4908390();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B432EBDC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E6967617373656DLL;
    else
      v3 = 0x68535641446C6163;
    if (v2 == 1)
      v4 = 0xE900000000000067;
    else
      v4 = 0xED0000676E697261;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E6967617373656DLL;
      else
        v6 = 0x68535641446C6163;
      if (v5 == 1)
        v7 = 0xE900000000000067;
      else
        v7 = 0xED0000676E697261;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x6E6F697461636F6CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x6E6F697461636F6CLL)
  {
LABEL_21:
    v8 = sub_1B4908390();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1B432ED14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432ED54(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432EDEC + 4 * byte_1B4917D88[a2]))(0x7961646F74);
}

uint64_t sub_1B432EDEC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7961646F74 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B432EED4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x795364756F6C4369;
  else
    v3 = 0x5641446C6163;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEA0000000000636ELL;
  if ((a2 & 1) != 0)
    v5 = 0x795364756F6C4369;
  else
    v5 = 0x5641446C6163;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000636ELL;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1B432EF78(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B432EFEC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432F090 + 4 * byte_1B4917D95[a2]))(0xD000000000000011);
}

uint64_t sub_1B432F090(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x80000001B493F200)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B432F16C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 7105633;
  else
    v2 = 7958113;
  if ((a2 & 1) != 0)
    v3 = 7105633;
  else
    v3 = 7958113;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1B4908390();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B432F1DC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7265646E696D6572;
  else
    v3 = 0x73746E756F636361;
  if (v2)
    v4 = 0xEC0000007473694CLL;
  else
    v4 = 0xED00007473694C73;
  if ((a2 & 1) != 0)
    v5 = 0x7265646E696D6572;
  else
    v5 = 0x73746E756F636361;
  if ((a2 & 1) != 0)
    v6 = 0xED00007473694C73;
  else
    v6 = 0xEC0000007473694CLL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B432F294(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C65636E6163;
  else
    v3 = 0x65756E69746E6F63;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C65636E6163;
  else
    v5 = 0x65756E69746E6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B432F334(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x736E6D756C6F63;
  else
    v3 = 1953720684;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x736E6D756C6F63;
  else
    v5 = 1953720684;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1B432F3D0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B432F41C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432F48C + 4 * byte_1B4917DA4[a2]))(a3 - 1);
}

uint64_t sub_1B432F48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 1 && v3 == 0x80000001B493EF50)
    v4 = 1;
  else
    v4 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1B432F578()
{
  JUMPOUT(0x1B432F524);
}

void sub_1B432F59C()
{
  JUMPOUT(0x1B432F524);
}

void sub_1B432F5C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432F600(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432F6E4 + 4 * byte_1B4917DB5[a2]))(0x7961646F74);
}

uint64_t sub_1B432F6E4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7961646F74 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1B432F830(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432F89C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432F900 + 4 * byte_1B4917DC2[a2]))(0x6E6F697461636F6CLL);
}

uint64_t sub_1B432F900(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E6F697461636F6CLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1B432F9AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432FA08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432FA60 + 4 * byte_1B4917DCA[a2]))(0x656C6269736976);
}

uint64_t sub_1B432FA60(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C6269736976 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1B432FB00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B432FB48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B432FBF8 + 4 * byte_1B4917DD5[a2]))(0x656C756465686373);
}

uint64_t sub_1B432FBF8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C756465686373 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = sub_1B4908390();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B432FCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09DFA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09DFA0);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL static TTRInlineRequestPresentationState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t TTRInlineRequestPresentationState.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t TTRInlineRequestPresentationState.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

uint64_t TTRPrivacyType.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B432FE2C + 4 * byte_1B4917DDC[a1]))(0x6163696669746F6ELL, 0xED0000736E6F6974);
}

uint64_t sub_1B432FE2C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B432FE44()
{
  return 0x73746361746E6F63;
}

unint64_t sub_1B432FE5C()
{
  return 0xD000000000000010;
}

uint64_t TTRPrivacyType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B432FEB8 + 4 * byte_1B4917DE0[a1]))(0x6163696669746F6ELL, 0xED0000736E6F6974);
}

uint64_t sub_1B432FEB8()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B432FED0()
{
  return 0x73746361746E6F63;
}

unint64_t sub_1B432FEE8()
{
  return 0xD000000000000010;
}

void sub_1B432FF08()
{
  char *v0;

  sub_1B4654B48(*v0);
}

void sub_1B432FF10()
{
  __asm { BR              X10 }
}

uint64_t sub_1B432FF58()
{
  sub_1B4906B24();
  return swift_bridgeObjectRelease();
}

void sub_1B432FFB8(uint64_t a1)
{
  char *v1;

  sub_1B4829850(a1, *v1);
}

uint64_t sub_1B432FFC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s15RemindersUICore14TTRPrivacyTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1B432FFEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B4330028 + 4 * byte_1B4917DE8[*v0]))();
}

void sub_1B4330028(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461636F6CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1B4330044(_QWORD *a1@<X8>)
{
  *a1 = 0x73746361746E6F63;
  a1[1] = 0xE800000000000000;
}

void sub_1B4330060(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001B493ECB0;
}

void sub_1B4330080(char *a1)
{
  sub_1B432F830(*a1);
}

uint64_t sub_1B433008C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B43300C8 + 4 * byte_1B4917DEC[*v0]))(0x6163696669746F6ELL, 0xED0000736E6F6974);
}

uint64_t sub_1B43300C8()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B43300E0()
{
  return 0x73746361746E6F63;
}

unint64_t sub_1B43300F8()
{
  return 0xD000000000000010;
}

RemindersUICore::TTRPrivacyAlertResponse_optional __swiftcall TTRPrivacyAlertResponse.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  RemindersUICore::TTRPrivacyAlertResponse_optional v2;

  v1 = sub_1B4908234();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = RemindersUICore_TTRPrivacyAlertResponse_cancel;
  else
    v2.value = RemindersUICore_TTRPrivacyAlertResponse_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t TTRPrivacyAlertResponse.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C65636E6163;
  else
    return 0x65756E69746E6F63;
}

uint64_t sub_1B4330198(char *a1, char *a2)
{
  return sub_1B432F294(*a1, *a2);
}

uint64_t sub_1B43301A4()
{
  sub_1B4908498();
  sub_1B4906B24();
  swift_bridgeObjectRelease();
  return sub_1B49084D4();
}

uint64_t sub_1B4330220()
{
  sub_1B4906B24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B4330278()
{
  sub_1B4908498();
  sub_1B4906B24();
  swift_bridgeObjectRelease();
  return sub_1B49084D4();
}

uint64_t sub_1B43302F0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B4908234();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1B433034C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65756E69746E6F63;
  if (*v1)
    v2 = 0x6C65636E6163;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t TTRContactsAccessAlertFeature.description.getter(char a1)
{
  if (!a1)
    return 0x6E6F697461636F6CLL;
  if (a1 == 1)
    return 0x6E6967617373656DLL;
  return 0x68535641446C6163;
}

uint64_t TTRContactsAccessAlertFeature.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6E6F697461636F6CLL;
  if (a1 == 1)
    return 0x6E6967617373656DLL;
  return 0x68535641446C6163;
}

uint64_t static TTRContactsAccessAlertFeature.hasPreviouslyViewedAlert(for:userDefaults:)(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1B4334C6C(a1, a2, ObjectType, a3);
}

uint64_t static TTRContactsAccessAlertFeature.saveHasViewedAlert(for:userDefaults:)(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1B4334CA8(a1, a2, ObjectType, a3);
}

uint64_t sub_1B43304E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B432EBDC(*a1, *a2);
}

uint64_t sub_1B43304F0()
{
  sub_1B4908498();
  sub_1B4906B24();
  swift_bridgeObjectRelease();
  return sub_1B49084D4();
}

uint64_t sub_1B43305A0()
{
  sub_1B4906B24();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B433062C()
{
  sub_1B4908498();
  sub_1B4906B24();
  swift_bridgeObjectRelease();
  return sub_1B49084D4();
}

uint64_t sub_1B43306D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s15RemindersUICore29TTRContactsAccessAlertFeatureO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1B4330704(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE900000000000067;
  v5 = 0x6E6967617373656DLL;
  if (v2 != 1)
  {
    v5 = 0x68535641446C6163;
    v4 = 0xED0000676E697261;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E6F697461636F6CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B4330774()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6967617373656DLL;
  if (*v0 != 1)
    v1 = 0x68535641446C6163;
  if (*v0)
    return v1;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t TTRPrivacyChecker.checkAndPromptNotificationAccess(needsPresentationOfWarmingSheet:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 72) = a1;
  sub_1B4906F50();
  *(_QWORD *)(v4 + 40) = sub_1B4906F44();
  *(_QWORD *)(v4 + 48) = sub_1B4906EFC();
  *(_QWORD *)(v4 + 56) = v5;
  return swift_task_switch();
}

uint64_t sub_1B4330854()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 32))();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_1B43308C0;
  return sub_1B433093C(*(_BYTE *)(v0 + 72), v1 & 1, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B43308C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B433090C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B433093C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 24) = a3;
  *(_BYTE *)(v5 + 105) = a2;
  *(_BYTE *)(v5 + 104) = a1;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B433099C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  if (qword_1EF097C88 != -1)
    swift_once();
  v1 = sub_1B49058F4();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DFA0);
  v2 = sub_1B49058E8();
  v3 = sub_1B49073A0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker: [Notification] checking Notification Access", v4, 2u);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }
  v5 = v0[4];
  v6 = v0[3];

  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v6, v5);
  v9 = v8;
  v0[9] = v7;
  ObjectType = swift_getObjectType();
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v9 + 24) + *(_QWORD *)(v9 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  v0[10] = v11;
  *v11 = v0;
  v11[1] = sub_1B4330AE0;
  return v13(ObjectType, v9);
}

uint64_t sub_1B4330AE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1B4330B44()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = sub_1B49058E8();
  v2 = sub_1B49073A0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = 0xEE0064656E696D72;
    v7 = 0x6574654420746F4ELL;
    switch(v3)
    {
      case 0:
        break;
      case 1:
        v6 = 0xE600000000000000;
        v7 = 0x6465696E6544;
        break;
      case 2:
        v6 = 0xEA00000000006465;
        v7 = 0x7A69726F68747541;
        break;
      case 3:
        v6 = 0xEB000000006C616ELL;
        v7 = 0x6F697369766F7250;
        break;
      case 4:
        v6 = 0xE90000000000006CLL;
        v7 = 0x6172656D65687045;
        break;
      default:
        v6 = 0xE700000000000000;
        v7 = 0x6E776F6E6B6E55;
        break;
    }
    *(_QWORD *)(v0 + 16) = sub_1B41EF7C8(v7, v6, &v17);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v1, v2, "PrivacyChecker: [Notification] current system authorization: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v5, -1, -1);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }

  v8 = *(_QWORD *)(v0 + 88);
  if ((unint64_t)(v8 - 2) < 3)
  {
    v9 = 0;
LABEL_21:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
  if (v8 == 1)
  {
    v9 = 1;
    goto LABEL_21;
  }
  if (v8)
  {
    v12 = sub_1B49058E8();
    v13 = sub_1B4907394();
    if (os_log_type_enabled(v12, v13))
    {
      v9 = 2;
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1B41C2000, v12, v13, "PrivacyChecker: [Notification] unknown notification authorization status", v14, 2u);
      MEMORY[0x1B5E3D7E0](v14, -1, -1);

    }
    else
    {

      v9 = 2;
    }
    goto LABEL_21;
  }
  v10 = *(unsigned __int8 *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  if (v10 == 2)
    v11 = sub_1B4332DBC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  else
    v11 = *(_BYTE *)(v0 + 104) & 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v15;
  *v15 = v0;
  v15[1] = sub_1B4330E84;
  return sub_1B433306C(v11 & 1, *(_BYTE *)(v0 + 105), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1B4330E84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t TTRPrivacyChecker.checkLocationAccess()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1B4330EF4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, _QWORD, _QWORD);
  uint64_t v19;

  if (qword_1EF097C88 != -1)
    swift_once();
  v1 = sub_1B49058F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DFA0);
  v2 = sub_1B49058E8();
  v3 = sub_1B4907370();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker: [Location] checking Location Access", v4, 2u);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 80))(v7, v8);
  *(_BYTE *)(v0 + 96) = v9 & 1;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v10 = sub_1B49058E8();
  v11 = sub_1B4907370();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    v19 = v13;
    if ((v9 & 1) != 0)
      v14 = 1702195828;
    else
      v14 = 0x65736C6166;
    if ((v9 & 1) != 0)
      v15 = 0xE400000000000000;
    else
      v15 = 0xE500000000000000;
    *(_QWORD *)(v0 + 56) = sub_1B41EF7C8(v14, v15, &v19);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v10, v11, "PrivacyChecker: [Location] hasLocationAccess: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v13, -1, -1);
    MEMORY[0x1B5E3D7E0](v12, -1, -1);
  }

  if ((v9 & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
  v18 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 72) + 64)
                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 72) + 64));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v17;
  *v17 = v0;
  v17[1] = sub_1B43311D0;
  return v18(1, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1B43311D0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 97) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B433122C()
{
  uint64_t v0;
  int v1;
  char v2;

  v1 = *(unsigned __int8 *)(v0 + 97);
  if (v1 != 2)
  {
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_5:
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 40))(1, *(_QWORD *)(v0 + 64));
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
    }
    v2 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      goto LABEL_5;
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
}

uint64_t TTRPrivacyChecker.checkContactsAccess(contactsFeature:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 32) = a2;
  *(_BYTE *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_1B43312E4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  char v24;
  uint64_t v25;
  char v26;
  _QWORD *v28;
  uint64_t (*v29)(uint64_t, _QWORD, _QWORD);
  uint64_t v30;

  if (qword_1EF097C88 != -1)
    swift_once();
  v1 = sub_1B49058F4();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DFA0);
  v2 = sub_1B49058E8();
  v3 = sub_1B4907370();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 80);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v30 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = 0xE900000000000067;
    v8 = 0x6E6967617373656DLL;
    if (v4 != 1)
    {
      v8 = 0x68535641446C6163;
      v7 = 0xED0000676E697261;
    }
    if (v4)
      v9 = v8;
    else
      v9 = 0x6E6F697461636F6CLL;
    if (v4)
      v10 = v7;
    else
      v10 = 0xE800000000000000;
    *(_QWORD *)(v0 + 24) = sub_1B41EF7C8(v9, v10, &v30);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker: [Contacts] checking Contacts Access with alertFeature: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v6, -1, -1);
    MEMORY[0x1B5E3D7E0](v5, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0);
  *(_QWORD *)(v0 + 56) = v11;
  v12 = sub_1B49058E8();
  v13 = sub_1B4907370();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v30 = v15;
    if (v11 == (id)3)
      v16 = 1702195828;
    else
      v16 = 0x65736C6166;
    if (v11 == (id)3)
      v17 = 0xE400000000000000;
    else
      v17 = 0xE500000000000000;
    *(_QWORD *)(v0 + 16) = sub_1B41EF7C8(v16, v17, &v30);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v12, v13, "PrivacyChecker: [Contacts] hasContactsAccess: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v15, -1, -1);
    MEMORY[0x1B5E3D7E0](v14, -1, -1);
  }

  if (v11 == (id)3)
    return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) == 3);
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(unsigned __int8 *)(v0 + 80);
  v20 = *(void (**)(uint64_t))(*(_QWORD *)(v0 + 40) + 24);
  *(_QWORD *)(v0 + 64) = v20;
  v20(v18);
  v22 = v21;
  if (v19)
  {
    ObjectType = swift_getObjectType();
    v24 = v19 == 1
        ? (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(ObjectType, v22)
        : (*(unint64_t (**)(uint64_t, uint64_t))(v22 + 56))(ObjectType, v22);
  }
  else
  {
    v25 = swift_getObjectType();
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v25, v22);
  }
  v26 = v24;
  swift_unknownObjectRelease();
  if ((v26 & 1) != 0)
    return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) == 3);
  v29 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 40) + 64)
                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 40) + 64));
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v28;
  *v28 = v0;
  v28[1] = sub_1B43316C8;
  return v29(2, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1B43316C8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 81) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4331724()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t ObjectType;
  char v6;

  v1 = *(unsigned __int8 *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(v0 + 64))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  v3 = v2;
  v4 = *(unsigned __int8 *)(v0 + 81);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24 * v1 + 16))(1, ObjectType, v3);
  swift_unknownObjectRelease();
  if (v4 != 2)
  {
    if ((*(_BYTE *)(v0 + 81) & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_5:
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 40))(2, *(_QWORD *)(v0 + 32));
      return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) == 3);
    }
    v6 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      goto LABEL_5;
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) == 3);
}

uint64_t sub_1B4331814(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 40) = v1;
  *(_BYTE *)(v2 + 120) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_QWORD *)(v2 + 56) = swift_task_alloc();
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_1B4906F50();
  *(_QWORD *)(v2 + 72) = sub_1B4906F44();
  *(_QWORD *)(v2 + 80) = sub_1B4906EFC();
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_1B43318C4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 120))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 40);
    swift_beginAccess();
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v2 + 72);
    v3 = *(_QWORD *)(v2 + 80);
    ObjectType = swift_getObjectType();
    v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
    swift_unknownObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v5;
    *v5 = v0;
    v5[1] = sub_1B43319B4;
    return v6(ObjectType, v3);
  }
}

uint64_t sub_1B43319B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1B4331A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  char v22;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release();
  v3 = *(_QWORD *)(v2 + 80);
  ObjectType = swift_getObjectType();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 56);
  swift_unknownObjectRetain();
  v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if ((unint64_t)(v1 - 2) < 3)
    goto LABEL_5;
  if (v1 != 1)
  {
    if (!v1)
    {
      v7 = *(_QWORD *)(v0 + 56);
      v6 = *(_QWORD *)(v0 + 64);
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
      v9 = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
      swift_unknownObjectRetain();
      v10(v9, v8);
      swift_unknownObjectRelease();
      v11 = sub_1B49037E8();
      v12 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v7, 1, v11) != 1;
      sub_1B4334DE0(v7);
      v13 = sub_1B4331FDC(v12, v6, 168, 0);
      sub_1B4334DE0(v6);
      v14 = v13 & 1;
      goto LABEL_9;
    }
LABEL_5:
    sub_1B4334DE0(*(_QWORD *)(v0 + 64));
    v14 = 0;
    goto LABEL_9;
  }
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 80);
  v18 = swift_getObjectType();
  v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
  swift_unknownObjectRetain();
  v19(v18, v17);
  swift_unknownObjectRelease();
  v20 = sub_1B49037E8();
  v21 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v16, 1, v20) != 1;
  sub_1B4334DE0(v16);
  v22 = sub_1B4331FDC(v21, v15, 4320, 0);
  sub_1B4334DE0(v15);
  if ((v22 & 1) != 0)
    v14 = 2;
  else
    v14 = 0;
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

uint64_t TTRPrivacyChecker.inlineRequestPresentationState(for:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 120) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  *(_QWORD *)(v4 + 40) = swift_task_alloc();
  *(_QWORD *)(v4 + 48) = swift_task_alloc();
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  sub_1B4906F50();
  *(_QWORD *)(v4 + 64) = sub_1B4906F44();
  *(_QWORD *)(v4 + 72) = sub_1B4906EFC();
  *(_QWORD *)(v4 + 80) = v5;
  return swift_task_switch();
}

uint64_t sub_1B4331CBC()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 120))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 24) + 16);
    *(_QWORD *)(v0 + 88) = v3;
    v4 = v3(v2);
    v6 = v5;
    *(_QWORD *)(v0 + 96) = v4;
    ObjectType = swift_getObjectType();
    v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 24) + *(_QWORD *)(v6 + 24));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_1B4331D90;
    return v9(ObjectType, v6);
  }
}

uint64_t sub_1B4331D90(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1B4331DF0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2(v4, v3);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 56))(ObjectType, v6);
  swift_unknownObjectRelease();
  if ((unint64_t)(v1 - 2) < 3)
    goto LABEL_5;
  if (v1 != 1)
  {
    if (!v1)
    {
      v9 = *(_QWORD *)(v0 + 48);
      v8 = *(_QWORD *)(v0 + 56);
      (*(void (**)(_QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
      v11 = v10;
      v12 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v12, v11);
      swift_unknownObjectRelease();
      v13 = sub_1B49037E8();
      v14 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v9, 1, v13) != 1;
      sub_1B4334DE0(v9);
      v15 = sub_1B4331FDC(v14, v8, 168, 0);
      sub_1B4334DE0(v8);
      v16 = v15 & 1;
      goto LABEL_9;
    }
LABEL_5:
    sub_1B4334DE0(*(_QWORD *)(v0 + 56));
    v16 = 0;
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 40);
  (*(void (**)(_QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  v20 = v19;
  v21 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
  swift_unknownObjectRelease();
  v22 = sub_1B49037E8();
  v23 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v18, 1, v22) != 1;
  sub_1B4334DE0(v18);
  v24 = sub_1B4331FDC(v23, v17, 4320, 0);
  sub_1B4334DE0(v17);
  if ((v24 & 1) != 0)
    v16 = 2;
  else
    v16 = 0;
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_1B4331FDC(char a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  char v34;
  BOOL v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a4;
  v46 = a3;
  v47 = a2;
  v5 = sub_1B4903AD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B490338C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B49037E8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v18);
  if ((a1 & 1) != 0)
  {
    v39 = v20;
    v40 = v12;
    v21 = (char *)&v38 - v19;
    v41 = v10;
    v42 = v9;
    v43 = v6;
    v44 = v5;
    sub_1B4335340(v47, (uint64_t)v15);
    v22 = v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1B4334DE0((uint64_t)v15);
      v23 = 1;
    }
    else
    {
      v24 = v21;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v22);
      _s15RemindersUICore22TTRCurrentTimeProviderC8calendar10Foundation8CalendarVvg_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6CB8);
      v25 = sub_1B4903AB8();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1B4911D70;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104))(v28 + v27, *MEMORY[0x1E0CB1140], v25);
      sub_1B4240450(v28);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v29 = v39;
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      v30 = v40;
      sub_1B49039C8();
      swift_bridgeObjectRelease();
      v31 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v31(v29, v22);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
      v32 = sub_1B49032A8();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
      v31((uint64_t)v24, v22);
      v36 = (v45 & 1) == 0 && v32 >= v46;
      v23 = v34 | v36;
    }
  }
  else
  {
    v23 = 0;
  }
  return v23 & 1;
}

Swift::Void __swiftcall TTRPrivacyChecker.dismissInlineRequest(for:)(RemindersUICore::TTRPrivacyType a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v4 = v1;
  v5 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 16))(v4, v3, v7);
    v11 = v10;
    ObjectType = swift_getObjectType();
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    v13 = sub_1B49037E8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 64))(v9, ObjectType, v11);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B43323B4(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;

  if (a1 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v2 = sub_1B49081B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
  {
LABEL_11:
    sub_1B433265C(v3);
    return swift_bridgeObjectRelease();
  }
  v9 = MEMORY[0x1E0DEE9D8];
  result = sub_1B4907F28();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1B5E3C268](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = objc_msgSend(v6, sel_capabilities);

      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    while (v2 != v5);
    v3 = v9;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v2;
  v5 = v1;
  if ((unint64_t)a1._rawValue >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v7 = sub_1B49081B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
  {
LABEL_11:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 120))(v8, v5, v4);
    swift_bridgeObjectRelease();
    return;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1B4907F28();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v13 = v3;
    v9 = 0;
    do
    {
      if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1B5E3C268](v9, a1._rawValue);
      else
        v10 = *((id *)a1._rawValue + v9 + 4);
      v11 = v10;
      ++v9;
      v12 = objc_msgSend(v10, sel_capabilities, v13);

      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    while (v7 != v9);
    v8 = v14;
    goto LABEL_11;
  }
  __break(1u);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;

  v3 = v2;
  v4 = v1;
  if ((unint64_t)a1._rawValue >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  for (; v6; v6 = sub_1B49081B0())
  {
    v11 = v4;
    v7 = 4;
    while (1)
    {
      v8 = ((unint64_t)a1._rawValue & 0xC000000000000001) != 0
         ? (id)MEMORY[0x1B5E3C268](v7 - 4, a1._rawValue)
         : *((id *)a1._rawValue + v7);
      v9 = v8;
      v4 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v10 = objc_msgSend(v8, sel_supportsDeletionByTTL);

      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v3 + 128))(v11, v3);
        return;
      }
      ++v7;
      if (v4 == v6)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

uint64_t sub_1B433265C(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  unsigned int v7;

  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  for (; v2; v2 = sub_1B49081B0())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E3C268](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_supportsDeletionByTTL);

      if (v7)
      {
        swift_bridgeObjectRelease();
        return sub_1B4332890();
      }
      if (v6 == v2)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_13:
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B4332890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v5 = *(_QWORD *)(v0 + 96);
  ObjectType = swift_getObjectType();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 80);
  swift_unknownObjectRetain();
  LOBYTE(v5) = v7(ObjectType, v5);
  result = swift_unknownObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_1EF097C88 != -1)
      swift_once();
    v9 = sub_1B49058F4();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF09DFA0);
    v10 = sub_1B49058E8();
    v11 = sub_1B4907370();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1B41C2000, v10, v11, "Did show reminder delete privacy warning", v12, 2u);
      MEMORY[0x1B5E3D7E0](v12, -1, -1);
    }

    v13 = *(_QWORD *)(v1 + 96);
    v14 = swift_getObjectType();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 88);
    swift_unknownObjectRetain();
    v15(1, v14, v13);
    swift_unknownObjectRelease();
    v16 = sub_1B4906F80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
    sub_1B4906F50();
    swift_retain();
    v17 = sub_1B4906F44();
    v18 = (_QWORD *)swift_allocObject();
    v19 = MEMORY[0x1E0DF06E8];
    v18[2] = v17;
    v18[3] = v19;
    v18[4] = v1;
    sub_1B4227FE0((uint64_t)v4, (uint64_t)&unk_1EF09E048, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v3 = v2;
  v4 = v1;
  v5 = v0;
  v6 = *(_QWORD *)(v0 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  ((void (*)())MEMORY[0x1E0C80A78])();
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(uint64_t, uint64_t, __n128))(v4 + 24);
  v13(v5, v4, v10);
  v15 = v14;
  ObjectType = swift_getObjectType();
  LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 80))(ObjectType, v15);
  swift_unknownObjectRelease();
  if ((v15 & 1) == 0)
  {
    if (qword_1EF097C88 != -1)
      swift_once();
    v17 = sub_1B49058F4();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EF09DFA0);
    v18 = sub_1B49058E8();
    v19 = sub_1B4907370();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      v21 = v20;
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1B41C2000, v18, v19, "Did show reminder delete privacy warning", v20, 2u);
      v22 = v21;
      v8 = v32;
      MEMORY[0x1B5E3D7E0](v22, -1, -1);
    }

    ((void (*)(uint64_t, uint64_t))v13)(v5, v4);
    v24 = v23;
    v25 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 88))(1, v25, v24);
    swift_unknownObjectRelease();
    v26 = sub_1B4906F80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
    sub_1B4906F50();
    v27 = sub_1B4906F44();
    v28 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v29 = (char *)swift_allocObject();
    v30 = MEMORY[0x1E0DF06E8];
    *((_QWORD *)v29 + 2) = v27;
    *((_QWORD *)v29 + 3) = v30;
    *((_QWORD *)v29 + 4) = v5;
    *((_QWORD *)v29 + 5) = v4;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v29[v28], v8, v5);
    sub_1B4227FE0((uint64_t)v12, (uint64_t)&unk_1EF09DFE8, (uint64_t)v29);
    swift_release();
  }
}

uint64_t sub_1B4332D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v6[2] = sub_1B4906F50();
  v6[3] = sub_1B4906F44();
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 64) + *(_QWORD *)(a6 + 64));
  v9 = (_QWORD *)swift_task_alloc();
  v6[4] = v9;
  *v9 = v6;
  v9[1] = sub_1B4227B6C;
  return v11(3, a5, a6);
}

BOOL sub_1B4332DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v26[-v9];
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v8);
  v12 = v11;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
  swift_unknownObjectRelease();
  v14 = sub_1B49037E8();
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14);
  if (qword_1EF097C88 != -1)
    swift_once();
  v16 = sub_1B49058F4();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EF09DFA0);
  sub_1B4335340((uint64_t)v10, (uint64_t)v6);
  v17 = sub_1B49058E8();
  v18 = sub_1B4907370();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v29 = v20;
    *(_DWORD *)v19 = 136315394;
    v21 = sub_1B4906EF0();
    v28 = sub_1B41EF7C8(v21, v22, &v29);
    v27 = v15;
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v23 = sub_1B4907AF0();
    v28 = sub_1B41EF7C8(v23, v24, &v29);
    v15 = v27;
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    sub_1B4334DE0((uint64_t)v6);
    _os_log_impl(&dword_1B41C2000, v17, v18, "PrivacyChecker: [Notification] shouldRequestPermission: %s, lastViewedNotificationsPermissionWarmingSheetDate: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v20, -1, -1);
    MEMORY[0x1B5E3D7E0](v19, -1, -1);
  }
  else
  {
    sub_1B4334DE0((uint64_t)v6);
  }

  sub_1B4334DE0((uint64_t)v10);
  return v15 == 1;
}

uint64_t sub_1B433306C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 24) = a3;
  *(_BYTE *)(v5 + 186) = a2;
  *(_BYTE *)(v5 + 185) = a1;
  v6 = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  *(_QWORD *)(v5 + 72) = swift_task_alloc();
  v7 = sub_1B49037E8();
  *(_QWORD *)(v5 + 80) = v7;
  *(_QWORD *)(v5 + 88) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = sub_1B4906F50();
  *(_QWORD *)(v5 + 112) = sub_1B4906F44();
  *(_QWORD *)(v5 + 120) = sub_1B4906EFC();
  *(_QWORD *)(v5 + 128) = v8;
  return swift_task_switch();
}

uint64_t sub_1B4333154()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD, uint64_t, _QWORD, _QWORD);
  __int128 v26;

  if (qword_1EF097C88 != -1)
    swift_once();
  v1 = sub_1B49058F4();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DFA0);
  v2 = sub_1B49058E8();
  v3 = sub_1B49073A0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker: [Notification] Requesting user authorization", v4, 2u);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }
  v5 = *(unsigned __int8 *)(v0 + 185);

  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_BYTE *)(v6 + 16) = 0;
  if (v5 == 1)
  {
    v7 = sub_1B49058E8();
    v8 = sub_1B49073A0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1B41C2000, v7, v8, "PrivacyChecker [Notifications] Presenting warming sheet", v9, 2u);
      MEMORY[0x1B5E3D7E0](v9, -1, -1);
    }
    v10 = *(_QWORD *)(v0 + 32);

    v25 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))(**(int **)(v10 + 48) + *(_QWORD *)(v10 + 48));
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_1B43334AC;
    return v25(0, 1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else if (*(_BYTE *)(v0 + 186) == 1)
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_1B4333C70;
    return sub_1B4333F8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else
  {
    v14 = v6;
    v16 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 40);
    v26 = *(_OWORD *)(v0 + 24);
    swift_release();
    v20 = sub_1B4906F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 1, 1, v20);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v17 + 16))(v16, v19, v26);
    swift_retain();
    v21 = sub_1B4906F44();
    v22 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v23 = swift_allocObject();
    v24 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v23 + 16) = v21;
    *(_QWORD *)(v23 + 24) = v24;
    *(_OWORD *)(v23 + 32) = v26;
    (*(void (**)(unint64_t, uint64_t, _QWORD))(v17 + 32))(v23 + v22, v16, v26);
    *(_QWORD *)(v23 + ((v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
    sub_1B4228000(v15, (uint64_t)&unk_1EF09E030, v23);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
}

uint64_t sub_1B43334AC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 187) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4333504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  char v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  _QWORD *v15;
  _QWORD *v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD, _QWORD);
  __int128 v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  sub_1B4333EC0(v6, v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v7 = sub_1B49058E8();
  v8 = sub_1B49073A0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_BYTE *)(v0 + 187);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v33 = v11;
    *(_BYTE *)(v0 + 184) = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E038);
    v12 = sub_1B4907AF0();
    *(_QWORD *)(v0 + 16) = sub_1B41EF7C8(v12, v13, &v33);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v7, v8, "PrivacyChecker: [Notification] Warming Sheet - user selected: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v11, -1, -1);
    MEMORY[0x1B5E3D7E0](v10, -1, -1);
  }

  if (((*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 32))() & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 144) + 16) = 1;
    v14 = *(unsigned __int8 *)(v0 + 187);
    if (v14 == 2)
    {
LABEL_5:
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v15;
      *v15 = v0;
      v15[1] = sub_1B4333BC8;
      return sub_1B4333D30(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    }
    if ((v14 & 1) != 0)
    {
      v18 = sub_1B4908390();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        goto LABEL_5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (*(_BYTE *)(v0 + 186) == 1)
    {
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v19;
      *v19 = v0;
      v19[1] = sub_1B4333C70;
      return sub_1B4333F8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 144);
      v22 = *(_QWORD *)(v0 + 64);
      v21 = *(_QWORD *)(v0 + 72);
      v23 = *(_QWORD *)(v0 + 48);
      v24 = *(_QWORD *)(v0 + 56);
      v25 = *(_QWORD *)(v0 + 40);
      v32 = *(_OWORD *)(v0 + 24);
      swift_release();
      v26 = sub_1B4906F80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v21, 1, 1, v26);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v23 + 16))(v22, v25, v32);
      swift_retain();
      v27 = sub_1B4906F44();
      v28 = (*(unsigned __int8 *)(v23 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v29 = swift_allocObject();
      v30 = MEMORY[0x1E0DF06E8];
      *(_QWORD *)(v29 + 16) = v27;
      *(_QWORD *)(v29 + 24) = v30;
      *(_OWORD *)(v29 + 32) = v32;
      (*(void (**)(unint64_t, uint64_t, _QWORD))(v23 + 32))(v29 + v28, v22, v32);
      *(_QWORD *)(v29 + ((v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
      sub_1B4228000(v21, (uint64_t)&unk_1EF09E030, v29);
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
    }
  }
  else
  {
    v31 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 32) + 56)
                                                          + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 56));
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v17;
    *v17 = v0;
    v17[1] = sub_1B4333924;
    return v31(1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
}

uint64_t sub_1B4333924()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4333970()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v1 = *(unsigned __int8 *)(v0 + 187);
  if (v1 == 2)
    goto LABEL_2;
  if ((v1 & 1) != 0)
  {
    v4 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
LABEL_2:
      v2 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v2;
      *v2 = v0;
      v2[1] = sub_1B4333BC8;
      return sub_1B4333D30(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v0 + 186) == 1)
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v5;
    *v5 = v0;
    v5[1] = sub_1B4333C70;
    return sub_1B4333F8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 40);
    v17 = *(_OWORD *)(v0 + 24);
    swift_release();
    v12 = sub_1B4906F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v9 + 16))(v8, v11, v17);
    swift_retain();
    v13 = sub_1B4906F44();
    v14 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = swift_allocObject();
    v16 = MEMORY[0x1E0DF06E8];
    *(_QWORD *)(v15 + 16) = v13;
    *(_QWORD *)(v15 + 24) = v16;
    *(_OWORD *)(v15 + 32) = v17;
    (*(void (**)(unint64_t, uint64_t, _QWORD))(v9 + 32))(v15 + v14, v8, v17);
    *(_QWORD *)(v15 + ((v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
    sub_1B4228000(v7, (uint64_t)&unk_1EF09E030, v15);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
}

uint64_t sub_1B4333BC8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4333C14()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
}

uint64_t sub_1B4333C70(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 188) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4333CC8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 188);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1B4333D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  sub_1B4906F50();
  v4[9] = sub_1B4906F44();
  v4[10] = sub_1B4906EFC();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t sub_1B4333DA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    v4 = (uint64_t (*)(uint64_t, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 64) + 56)
                                                         + *(_QWORD *)(*(_QWORD *)(v0 + 64) + 56));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v2;
    *v2 = v0;
    v2[1] = sub_1B4333E44;
    return v4(1, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B4333E44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B4333E90()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B4333EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v6);
  v10 = v9;
  ObjectType = swift_getObjectType();
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  v12 = sub_1B49037E8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 40))(v8, ObjectType, v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B4333F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  sub_1B4906F50();
  v4[12] = sub_1B4906F44();
  v4[13] = sub_1B4906EFC();
  v4[14] = v5;
  return swift_task_switch();
}

uint64_t sub_1B4333FFC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_1EF097C88 != -1)
    swift_once();
  v1 = sub_1B49058F4();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)qword_1EF09DFA0);
  v2 = sub_1B49058E8();
  v3 = sub_1B49073A0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker [Notifications] Presenting system TCC", v4, 2u);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }
  v6 = v0[10];
  v5 = v0[11];

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  v0[16] = v7;
  v8 = v7(v6, v5);
  v10 = v9;
  v0[17] = v8;
  ObjectType = swift_getObjectType();
  v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 88) + *(_QWORD *)(v10 + 88));
  v12 = (_QWORD *)swift_task_alloc();
  v0[18] = v12;
  *v12 = v0;
  v12[1] = sub_1B4334144;
  return v14(ObjectType, v10);
}

uint64_t sub_1B4334144(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_unknownObjectRelease();
    *(_QWORD *)(v4 + 160) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1B43341C0()
{
  uint64_t v0;
  char v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  uint64_t v14;

  v1 = sub_1B4744F60(*(_QWORD *)(v0 + 160));
  v2 = sub_1B49058E8();
  v3 = sub_1B49073A0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v14 = v5;
    if ((v1 & 1) != 0)
      v6 = 1702195828;
    else
      v6 = 0x65736C6166;
    if ((v1 & 1) != 0)
      v7 = 0xE400000000000000;
    else
      v7 = 0xE500000000000000;
    *(_QWORD *)(v0 + 56) = sub_1B41EF7C8(v6, v7, &v14);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v2, v3, "PrivacyChecker: [Notification] requestAuthorization grantedAccess: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v5, -1, -1);
    MEMORY[0x1B5E3D7E0](v4, -1, -1);
  }

  if ((v1 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 128))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    v10 = v9;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 80))(ObjectType, v10);
    swift_unknownObjectRelease();
    v8 = 1;
  }
  *(_BYTE *)(v0 + 176) = v8;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v12;
  *v12 = v0;
  v12[1] = sub_1B4334398;
  return sub_1B4333D30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1B4334398()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B43343E4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 176));
}

uint64_t sub_1B4334418()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 152);
  swift_unknownObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_1B49058E8();
  v5 = sub_1B4907388();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_1B490842C();
    *(_QWORD *)(v0 + 48) = sub_1B41EF7C8(v9, v10, &v14);
    sub_1B4907B68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B41C2000, v4, v5, "PrivacyChecker: [Notification] requestAuthorization error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v8, -1, -1);
    MEMORY[0x1B5E3D7E0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 152);

  }
  *(_BYTE *)(v0 + 176) = 2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v12;
  *v12 = v0;
  v12[1] = sub_1B4334398;
  return sub_1B4333D30(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1B4334600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v12;

  v7[2] = a1;
  v7[3] = sub_1B4906F50();
  v7[4] = sub_1B4906F44();
  v12 = (_QWORD *)swift_task_alloc();
  v7[5] = v12;
  *v12 = v7;
  v12[1] = sub_1B4334690;
  return sub_1B4333F8C(a4, a5, a6, a7);
}

uint64_t sub_1B4334690(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  sub_1B4906EFC();
  return swift_task_switch();
}

uint64_t sub_1B4334708()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_BYTE **)(v0 + 16);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1B4334744()
{
  void *v0;

  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForLocation);
}

id sub_1B4334764(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForLocation_, a1 & 1);
}

id (*sub_1B4334778(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForLocation);
  return sub_1B43347B8;
}

id sub_1B43347B8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForLocation_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B43347D0()
{
  void *v0;

  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForMessaging);
}

id sub_1B43347F0(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForMessaging_, a1 & 1);
}

id (*sub_1B4334804(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForMessaging);
  return sub_1B4334844;
}

id sub_1B4334844(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForMessaging_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B433485C()
{
  void *v0;

  return objc_msgSend(v0, sel_hasViewedContactsAccessAlertForCalDAVSharing);
}

id sub_1B433487C(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasViewedContactsAccessAlertForCalDAVSharing_, a1 & 1);
}

id (*sub_1B4334890(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasViewedContactsAccessAlertForCalDAVSharing);
  return sub_1B43348D0;
}

id sub_1B43348D0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasViewedContactsAccessAlertForCalDAVSharing_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1B43348E8()
{
  void *v0;

  return objc_msgSend(v0, sel_didShowReminderDeletePrivacyWarning);
}

id sub_1B4334908(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setDidShowReminderDeletePrivacyWarning_, a1 & 1);
}

id (*sub_1B433491C(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_didShowReminderDeletePrivacyWarning);
  return sub_1B433495C;
}

id sub_1B433495C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setDidShowReminderDeletePrivacyWarning_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1B4334974(char a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (*v5)(char, char);

  v1[2] = sub_1B4906F50();
  v1[3] = sub_1B4906F44();
  v5 = (uint64_t (*)(char, char))((char *)&dword_1EF0A36F0 + dword_1EF0A36F0);
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_1B4227B6C;
  return v5(a1, 0);
}

uint64_t sub_1B4334A00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF0A36F8 + dword_1EF0A36F8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B4335548;
  return v3();
}

uint64_t sub_1B4334A5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF0A4A48 + dword_1EF0A4A48);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B426E810;
  return v5(a1);
}

uint64_t sub_1B4334AC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF09E058 + dword_1EF09E058);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B426E810;
  return v5(a1);
}

void sub_1B4334B2C(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;

  v2 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v2)
  {
    v6 = *v1;
    swift_beginAccess();
    v7 = *(_QWORD *)(v6 + 80);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    v9 = sub_1B49037E8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 64))(v5, ObjectType, v7);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B4334C0C(unint64_t a1)
{
  return sub_1B43323B4(a1);
}

uint64_t sub_1B4334C2C(unint64_t a1)
{
  return sub_1B433265C(a1);
}

uint64_t sub_1B4334C4C()
{
  return sub_1B4332890();
}

uint64_t sub_1B4334C6C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24 * a1 + 8))(a3, a4) & 1;
}

uint64_t sub_1B4334CA8(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24 * a1 + 16))(1, a3, a4);
}

uint64_t sub_1B4334CE4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = sub_1B4906F50();
  v0[3] = sub_1B4906F44();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_1B422864C;
  return TTRIPrivacyChecker.showPrivacyAlert(type:)(3);
}

uint64_t _s15RemindersUICore14TTRPrivacyTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1B4908234();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t _s15RemindersUICore29TTRContactsAccessAlertFeatureO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1B4908234();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B4334DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B4334E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B4334E8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v7 = v1[2];
  v8 = v1[3];
  v9 = (uint64_t)v1 + ((v6 + 48) & ~v6);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1B4229F98;
  return sub_1B4332D28(a1, v7, v8, v9, v4, v5);
}

unint64_t sub_1B4334F20()
{
  unint64_t result;

  result = qword_1EF09DFF0;
  if (!qword_1EF09DFF0)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRInlineRequestPresentationState, &type metadata for TTRInlineRequestPresentationState);
    atomic_store(result, (unint64_t *)&qword_1EF09DFF0);
  }
  return result;
}

unint64_t sub_1B4334F68()
{
  unint64_t result;

  result = qword_1EF09DFF8;
  if (!qword_1EF09DFF8)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRPrivacyType, &type metadata for TTRPrivacyType);
    atomic_store(result, (unint64_t *)&qword_1EF09DFF8);
  }
  return result;
}

unint64_t sub_1B4334FB0()
{
  unint64_t result;

  result = qword_1EF09E000;
  if (!qword_1EF09E000)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRPrivacyAlertResponse, &type metadata for TTRPrivacyAlertResponse);
    atomic_store(result, (unint64_t *)&qword_1EF09E000);
  }
  return result;
}

unint64_t sub_1B4334FF8()
{
  unint64_t result;

  result = qword_1EF09E008;
  if (!qword_1EF09E008)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRContactsAccessAlertFeature, &type metadata for TTRContactsAccessAlertFeature);
    atomic_store(result, &qword_1EF09E008);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRInlineRequestPresentationState()
{
  return &type metadata for TTRInlineRequestPresentationState;
}

uint64_t storeEnumTagSinglePayload for TTRPrivacyType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B433509C + 4 * byte_1B4917DFA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B43350D0 + 4 * byte_1B4917DF5[v4]))();
}

uint64_t sub_1B43350D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43350D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B43350E0);
  return result;
}

uint64_t sub_1B43350EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B43350F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B43350F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4335100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRPrivacyType()
{
  return &type metadata for TTRPrivacyType;
}

uint64_t storeEnumTagSinglePayload for TTRPrivacyAlertResponse(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B4335168 + 4 * byte_1B4917E04[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B433519C + 4 * byte_1B4917DFF[v4]))();
}

uint64_t sub_1B433519C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43351A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B43351ACLL);
  return result;
}

uint64_t sub_1B43351B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B43351C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B43351C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43351CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRPrivacyAlertResponse()
{
  return &type metadata for TTRPrivacyAlertResponse;
}

ValueMetadata *type metadata accessor for TTRContactsAccessAlertFeature()
{
  return &type metadata for TTRContactsAccessAlertFeature;
}

uint64_t sub_1B43351F8()
{
  return swift_deallocObject();
}

uint64_t sub_1B4335208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B4335290(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v7;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1B4229B34;
  return sub_1B4334600(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_1B4335340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B4335388()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B43353B4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B4229F98;
  return ((uint64_t (__cdecl *)())((char *)&dword_1EF09E040 + dword_1EF09E040))();
}

uint64_t _s15RemindersUICore33TTRInlineRequestPresentationStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B4335480 + 4 * byte_1B4917E0E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B43354B4 + 4 * byte_1B4917E09[v4]))();
}

uint64_t sub_1B43354B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43354BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B43354C4);
  return result;
}

uint64_t sub_1B43354D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B43354D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B43354DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43354E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRPrivacyCheckerNotificationAccess()
{
  return &type metadata for TTRPrivacyCheckerNotificationAccess;
}

unint64_t sub_1B4335504()
{
  unint64_t result;

  result = qword_1EF09E078;
  if (!qword_1EF09E078)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918204, &type metadata for TTRPrivacyCheckerNotificationAccess);
    atomic_store(result, (unint64_t *)&qword_1EF09E078);
  }
  return result;
}

id TTRICurrentTextInputModeObserver.currentTextInputMode.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInputModeController);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_currentInputMode);

  return v2;
}

uint64_t TTRICurrentTextInputModeObserver.currentTextInputModePublisher.getter()
{
  return swift_retain();
}

_QWORD *TTRICurrentTextInputModeObserver.__allocating_init()()
{
  _QWORD *v0;

  v0 = (_QWORD *)swift_allocObject();
  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E1660);
  swift_allocObject();
  v0[4] = sub_1B4905E64();
  sub_1B43356C4();
  v0[2] = sub_1B4905F6C();
  return v0;
}

_QWORD *TTRICurrentTextInputModeObserver.init()()
{
  _QWORD *v0;

  v0[3] = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E1660);
  swift_allocObject();
  v0[4] = sub_1B4905E64();
  sub_1B43356C4();
  v0[2] = sub_1B4905F6C();
  return v0;
}

unint64_t sub_1B43356C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4E1658;
  if (!qword_1ED4E1658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED4E1660);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4E1658);
  }
  return result;
}

uint64_t TTRICurrentTextInputModeObserver.deinit()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.stopObserving()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_release();
}

uint64_t TTRICurrentTextInputModeObserver.__deallocating_deinit()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.startObserving()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (!*(_QWORD *)(v0 + 24))
  {
    v1 = v0;
    v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v3 = *MEMORY[0x1E0DC5528];
    v4 = objc_msgSend((id)objc_opt_self(), sel_mainQueue, (unsigned __int128)0, (unsigned __int128)0);
    v5 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    v6 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)(v3, (uint64_t)&v7, (uint64_t)v4, (uint64_t)sub_1B4335980, v5);

    swift_release();
    sub_1B4314F88((uint64_t)&v7);
    swift_release();
    *(_QWORD *)(v1 + 24) = v6;
    swift_release();
  }
}

uint64_t sub_1B43358A4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B43358C8()
{
  id v0;
  void *v1;
  id v2;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInputModeController);
    if (v0)
    {
      v1 = v0;
      v2 = objc_msgSend(v0, sel_currentInputMode);

    }
    else
    {
      v2 = 0;
    }
    sub_1B4905E58();
    swift_release();

  }
}

void sub_1B4335980()
{
  sub_1B43358C8();
}

uint64_t type metadata accessor for TTRICurrentTextInputModeObserver()
{
  return objc_opt_self();
}

uint64_t sub_1B43359A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09E080);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09E080);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void NSDirectionalEdgeInsets.resolved(for:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1B49058F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 1)
  {
    v7 = v4;
    if (qword_1EF097C90 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EF09E080);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v9);
    sub_1B48204B4((uint64_t)"unknown layout direction", 24, 2);
    __break(1u);
  }
}

void _sSo23NSDirectionalEdgeInsetsV15RemindersUICoreE12forInsetting8toBecome15layoutDirectionABSo6CGRectV_AHSo021UIUserInterfaceLayoutK0VtcfC_0(unint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double MinX;
  uint64_t v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat MaxY;
  CGFloat v29;
  CGFloat MinY;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v26 = a9;
  v18 = sub_1B49058F4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31.origin.x = a6;
  v31.origin.y = a7;
  v31.size.width = a8;
  v31.size.height = a9;
  MinY = CGRectGetMinY(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  v29 = CGRectGetMinY(v32);
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  MaxY = CGRectGetMaxY(v33);
  v34.origin.x = a6;
  v34.origin.y = a7;
  v34.size.width = a8;
  v34.size.height = a9;
  v27 = CGRectGetMaxY(v34);
  v35.origin.x = a6;
  v35.origin.y = a7;
  v35.size.width = a8;
  v35.size.height = a9;
  MinX = CGRectGetMinX(v35);
  v36.origin.x = a2;
  v36.origin.y = a3;
  v36.size.width = a4;
  v36.size.height = a5;
  v25 = MinX - CGRectGetMinX(v36);
  v37.origin.x = a2;
  v37.origin.y = a3;
  v37.size.width = a4;
  v37.size.height = a5;
  CGRectGetMaxX(v37);
  v38.origin.x = a6;
  v38.origin.y = a7;
  v38.size.width = a8;
  v38.size.height = v26;
  CGRectGetMaxX(v38);
  if (a1 > 1)
  {
    if (qword_1EF097C90 != -1)
      swift_once();
    v23 = __swift_project_value_buffer(v18, (uint64_t)qword_1EF09E080);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v23, v18);
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
    sub_1B41E292C(v24);
    sub_1B48204B4((uint64_t)"unknown layout direction", 24, 2);
    __break(1u);
  }
}

id sub_1B4335D88(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, void *a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id result;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v11 = v10;
  v35 = a3;
  v34 = a2;
  v33 = a1;
  v37 = sub_1B49047F0();
  v17 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a7 >> 62))
  {
    v20 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v36 = a8;
    if (v20)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
    return sub_1B43372A8(v33, v34, v35, a4, a5, a6, v23, 0, v36, a9, a10);
  }
  v20 = sub_1B49081B0();
  v36 = a8;
  if (!v20)
    goto LABEL_13;
LABEL_3:
  v32 = a4;
  v38 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_1B41FE6F8(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v29 = a5;
    v30 = a6;
    v31 = v11;
    v22 = 0;
    v23 = v38;
    do
    {
      if ((a7 & 0xC000000000000001) != 0)
        v24 = (id)MEMORY[0x1B5E3C268](v22, a7);
      else
        v24 = *(id *)(a7 + 8 * v22 + 32);
      v25 = v24;
      v26 = objc_msgSend(v24, sel_remObjectID, v29, v30, v31);
      sub_1B49072F8();

      objc_msgSend(v25, sel_isCompleted);
      sub_1B49047CC();

      v38 = v23;
      v28 = *(_QWORD *)(v23 + 16);
      v27 = *(_QWORD *)(v23 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1B41FE6F8(v27 > 1, v28 + 1, 1);
        v23 = v38;
      }
      ++v22;
      *(_QWORD *)(v23 + 16) = v28 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v23+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v28, v19, v37);
    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    a6 = v30;
    a5 = v29;
    a4 = v32;
    return sub_1B43372A8(v33, v34, v35, a4, a5, a6, v23, 0, v36, a9, a10);
  }
  __break(1u);
  return result;
}

id sub_1B4335FE0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, void *a9, void *a10, void *a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id result;
  uint64_t v26;
  uint64_t i;
  unint64_t v28;
  unint64_t v29;
  uint64_t j;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v12 = v11;
  v40 = a3;
  v41 = a4;
  v39 = a2;
  v38 = a1;
  v17 = sub_1B49047F0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v34 - v22;
  if (!(a7 >> 62))
  {
    v24 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v42 = a5;
    if (v24)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9D8];
    return sub_1B43372A8(v38, v39, v40, v41, v42, a6, v26, a8, a9, a10, a11);
  }
  v24 = sub_1B49081B0();
  v42 = a5;
  if (!v24)
    goto LABEL_16;
LABEL_3:
  v37 = a6;
  v43 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_1B41FE6F8(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    v35 = a8;
    v36 = v12;
    v26 = v43;
    if ((a7 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v24; ++i)
      {
        MEMORY[0x1B5E3C268](i, a7);
        sub_1B49072F8();
        sub_1B49047CC();
        swift_unknownObjectRelease();
        v43 = v26;
        v29 = *(_QWORD *)(v26 + 16);
        v28 = *(_QWORD *)(v26 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1B41FE6F8(v28 > 1, v29 + 1, 1);
          v26 = v43;
        }
        *(_QWORD *)(v26 + 16) = v29 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v29, v23, v17);
      }
    }
    else
    {
      for (j = 0; j != v24; ++j)
      {
        v31 = *(id *)(a7 + 8 * j + 32);
        sub_1B49072F8();
        sub_1B49047CC();

        v43 = v26;
        v33 = *(_QWORD *)(v26 + 16);
        v32 = *(_QWORD *)(v26 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1B41FE6F8(v32 > 1, v33 + 1, 1);
          v26 = v43;
        }
        *(_QWORD *)(v26 + 16) = v33 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v26+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v33, v21, v17);
      }
    }
    swift_bridgeObjectRelease();
    a8 = v35;
    a6 = v37;
    return sub_1B43372A8(v38, v39, v40, v41, v42, a6, v26, a8, a9, a10, a11);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B43362A0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  char *v63;
  void *v64;
  id v65;
  uint64_t result;
  _QWORD v67[4];
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void **v79;
  uint64_t v80;
  void **v81;
  unint64_t v82;
  _QWORD *v83;

  v72 = a1;
  v73 = a5;
  v67[2] = a3;
  v67[3] = a4;
  v71 = a2;
  v9 = sub_1B49037E8();
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  MEMORY[0x1E0C80A78](v9);
  v68 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A388);
  v11 = MEMORY[0x1E0C80A78](v80);
  v78 = (uint64_t)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v79 = (void **)((char *)v67 - v14);
  MEMORY[0x1E0C80A78](v13);
  v81 = (void **)((char *)v67 - v16);
  v17 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v83 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v18 = a7[2];
  if (v18)
  {
    v19 = *(unsigned __int8 *)(v15 + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = (uint64_t)a7 + v20;
    v22 = *(_QWORD *)(v15 + 72);
    v77 = v20;
    v75 = v19 | 7;
    v76 = v22 + v20;
    v67[0] = a7;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v74 = xmmword_1B4911D70;
    while (1)
    {
      v23 = a6;
      v24 = v81;
      sub_1B41EA51C(v21, (uint64_t)v81, &qword_1EF09A388);
      v25 = *(int *)(v80 + 48);
      v26 = (char *)v79 + v25;
      v27 = (char *)v24 + v25;
      v28 = *v24;
      *v79 = *v24;
      v29 = sub_1B49047F0();
      v30 = *(_QWORD *)(v29 - 8);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v26, v27, v29);
      v31 = *(void (**)(char *, uint64_t))(v30 + 8);
      v32 = v28;
      v31(v26, v29);
      v34 = sub_1B41ED0D0((uint64_t)v32);
      v35 = v17[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        break;
      v38 = v33;
      if (v17[3] < v37)
      {
        sub_1B4276D10(v37, 1);
        v17 = v83;
        v39 = sub_1B41ED0D0((uint64_t)v32);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_25;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {

        v41 = v17[7];
        sub_1B41DF5E4((uint64_t)v81, v78, &qword_1EF09A388);
        v42 = *(_QWORD *)(v41 + 8 * v34);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v41 + 8 * v34) = v42;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v42 = sub_1B42908FC(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
          *(_QWORD *)(v41 + 8 * v34) = v42;
        }
        v45 = *(_QWORD *)(v42 + 16);
        v44 = *(_QWORD *)(v42 + 24);
        if (v45 >= v44 >> 1)
        {
          v42 = sub_1B42908FC(v44 > 1, v45 + 1, 1, v42);
          *(_QWORD *)(v41 + 8 * v34) = v42;
        }
        a6 = v23;
        *(_QWORD *)(v42 + 16) = v45 + 1;
        sub_1B41DF5E4(v78, v42 + v77 + v45 * v22, &qword_1EF09A388);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A380);
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v74;
        sub_1B41DF5E4((uint64_t)v81, v46 + v77, &qword_1EF09A388);
        v17[(v34 >> 6) + 8] |= 1 << v34;
        v47 = 8 * v34;
        *(_QWORD *)(v17[6] + v47) = v32;
        *(_QWORD *)(v17[7] + v47) = v46;
        v48 = v17[2];
        v49 = __OFADD__(v48, 1);
        v50 = v48 + 1;
        if (v49)
          goto LABEL_24;
        v17[2] = v50;
        a6 = v23;
      }
      v21 += v22;
      if (!--v18)
      {
        a7 = (_QWORD *)v67[0];
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
    result = sub_1B4908420();
    __break(1u);
  }
  else
  {
LABEL_17:
    v51 = sub_1B4339104((uint64_t)v17);
    swift_release();
    v83 = a7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E0B0);
    sub_1B4904070();
    sub_1B433A158();
    sub_1B4217994();
    v52 = sub_1B4906CBC();
    swift_bridgeObjectRelease();
    v83 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v82 = sub_1B41E3090(MEMORY[0x1E0DEE9D8]);
    v53 = v73;
    v54 = *(_QWORD *)(v73 + 16);
    if (v54)
    {
      v55 = *(_QWORD *)(sub_1B49047F0() - 8);
      v56 = v53 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      v57 = *(_QWORD *)(v55 + 72);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v58 = v72;
      do
      {
        sub_1B4338478(v56, a6, v52, &v83, (uint64_t)v51, (uint64_t *)&v82);
        v56 += v57;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58 = v72;
    }
    swift_bridgeObjectRelease();
    swift_release();
    v59 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v60 = (void *)sub_1B4906A34();
    swift_bridgeObjectRelease();
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v61 = (void *)sub_1B4906DA0();
    swift_bridgeObjectRelease();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE40);
    sub_1B41DF544();
    v62 = (void *)sub_1B490680C();
    swift_bridgeObjectRelease();
    v63 = v68;
    _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
    v64 = (void *)sub_1B4903788();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v70);
    v65 = objc_msgSend(v59, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v58, (__int16)v71, v60, v61, v62, 0, v64);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v65;
  }
  return result;
}

uint64_t sub_1B43368B4(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t result;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  void *v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t i;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  unint64_t v118;

  v91 = a6;
  v99 = a5;
  v93 = a4;
  v92 = a3;
  v97 = a2;
  v96 = sub_1B49037E8();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E0A0);
  MEMORY[0x1E0C80A78](v10);
  v106 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B49047F0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v114 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v90 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v90 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A378);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v108 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v111 = (uint64_t)&v90 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E0A8);
  v26 = MEMORY[0x1E0C80A78](a7);
  v107 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v90 - v29;
  v31 = MEMORY[0x1E0DEE9E8];
  v118 = MEMORY[0x1E0DEE9E8];
  v32 = *(_QWORD *)(v28 + 16);
  v100 = v28;
  v101 = (char *)&v90 - v29;
  v115 = v13;
  v102 = v18;
  v103 = v22;
  v109 = v21;
  v110 = v32;
  v98 = a1;
  if (v32)
  {
    v105 = v28 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v104 = *(_QWORD *)(v22 + 72);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v33 = 0;
    v34 = v111;
    v35 = v108;
    do
    {
      v112 = v33;
      sub_1B41EA51C(v105 + v104 * v33, v34, &qword_1EF09A378);
      v36 = v109;
      v37 = *(int *)(v109 + 48);
      v38 = *(int *)(v109 + 64);
      v39 = v115;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
      v40(v35, v34, v12);
      *(_QWORD *)&v35[v37] = *(_QWORD *)(v34 + v37);
      *(_QWORD *)&v35[v38] = *(_QWORD *)(v34 + v38);
      v41 = v38;
      v113 = (void *)sub_1B49047D8();
      v42 = *(void (**)(char *, uint64_t))(v39 + 8);
      v42(v35, v12);
      sub_1B42A87A4(&v117, v113);

      v43 = *(int *)(v36 + 48);
      v44 = *(int *)(v36 + 64);
      v40(v35, v34, v12);
      *(_QWORD *)&v35[v43] = *(_QWORD *)(v34 + v37);
      v45 = *(_QWORD *)(v34 + v41);
      *(_QWORD *)&v35[v44] = v45;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v42(v35, v12);
      v46 = *(_QWORD *)(v45 + 16);
      if (v46)
      {
        v47 = v45 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
        v48 = *(_QWORD *)(v115 + 72);
        do
        {
          v40(v20, v47, v12);
          v49 = (void *)sub_1B49047D8();
          sub_1B42A87A4(&v117, v49);

          v42(v20, v12);
          v47 += v48;
          --v46;
        }
        while (v46);
      }
      swift_bridgeObjectRelease();
      v32 = v110;
      v34 = v111;
      v33 = v112 + 1;
      sub_1B41EA560(v111, &qword_1EF09A378);
    }
    while (v33 != v32);
    swift_bridgeObjectRelease();
    v31 = v118;
    v30 = v101;
    v18 = v102;
    v21 = v109;
  }
  v50 = (uint64_t)v107;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v51 = sub_1B433981C(v99, v31);
  v105 = 0;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  v53 = 0;
  v118 = v51;
  v54 = v103;
  if (v32)
    goto LABEL_23;
LABEL_26:
  v73 = 1;
  for (i = v32; ; i = v53 + 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v50, v73, 1, v21);
    sub_1B41DF5E4(v50, (uint64_t)v30, &qword_1EF09E0A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v30, 1, v21) == 1)
    {
      swift_bridgeObjectRelease();
      v117 = (id)MEMORY[0x1E0DEE9D8];
      v116 = sub_1B41E3090(MEMORY[0x1E0DEE9D8]);
      v75 = *(_QWORD *)(v118 + 16);
      if (v75)
      {
        v76 = v115;
        v77 = v118 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v78 = *(_QWORD *)(v76 + 72);
        v79 = v91;
        do
        {
          sub_1B4338BDC(v77, v79, &v117, &v116);
          v77 += v78;
          --v75;
        }
        while (v75);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v80 = v96;
      v81 = v95;
      v82 = v94;
      v83 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v84 = (void *)sub_1B4906A34();
      swift_bridgeObjectRelease();
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v85 = (void *)sub_1B4906DA0();
      swift_bridgeObjectRelease();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE40);
      sub_1B41DF544();
      v86 = (void *)sub_1B490680C();
      swift_bridgeObjectRelease();
      _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
      v87 = (void *)sub_1B4903788();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
      v88 = v98;
      v89 = objc_msgSend(v83, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v98, (__int16)v97, v84, v85, v86, 0, v87);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v89;
    }
    v113 = *(void **)&v30[*(int *)(v21 + 48)];
    v55 = *(_QWORD *)&v30[*(int *)(v21 + 64)];
    v56 = v115;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v18, v30, v12);
    v57 = (char *)v118;
    v58 = *(_QWORD *)(v118 + 16);
    v111 = i;
    v112 = v55;
    if (v58)
    {
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
      v59 = &v57[(*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80)];
      v108 = v57;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v60 = 0;
      v61 = *(_QWORD *)(v56 + 72);
      v62 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      while (1)
      {
        v63 = v114;
        v62(v114, v59, v12);
        v64 = (void *)sub_1B49047D8();
        v65 = sub_1B4907844();

        (*(void (**)(char *, uint64_t))(v115 + 8))(v63, v12);
        if ((v65 & 1) != 0)
          break;
        ++v60;
        v59 += v61;
        if (v58 == v60)
        {
          swift_bridgeObjectRelease();
          v66 = v118;
          v67 = *(_QWORD *)(v118 + 16);
          goto LABEL_19;
        }
      }
      result = swift_bridgeObjectRelease();
      v67 = v60 + 1;
      if (__OFADD__(v60, 1))
        goto LABEL_38;
      v66 = v118;
LABEL_19:
      v56 = v115;
      v18 = v102;
      v54 = v103;
      v21 = v109;
      v30 = v101;
    }
    else
    {
      v67 = 0;
      v66 = v118;
    }
    sub_1B49047D8();
    sub_1B49047A8();
    result = sub_1B49047CC();
    if (*(_QWORD *)(v66 + 16) < v67)
      break;
    if (v67 < 0)
      goto LABEL_35;
    v68 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
    v69 = v56;
    v70 = (uint64_t)v106;
    v71 = v114;
    v68(v106, v114, v12);
    sub_1B48E66EC(v67, v67, v70);

    v72 = *(void (**)(char *, uint64_t))(v69 + 8);
    v72(v71, v12);
    result = ((uint64_t (*)(char *, uint64_t))v72)(v18, v12);
    v50 = (uint64_t)v107;
    v32 = v110;
    v53 = v111;
    if (v111 == v110)
      goto LABEL_26;
LABEL_23:
    if ((v53 & 0x8000000000000000) != 0)
      goto LABEL_36;
    if (v53 >= *(_QWORD *)(v100 + 16))
      goto LABEL_37;
    sub_1B41EA51C(v100+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v53, v50, &qword_1EF09A378);
    v73 = 0;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t REMManualOrdering.ChangeReason.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B43371B4 + 4 * byte_1B4918274[a1]))(0xD000000000000013, 0x80000001B493ECF0);
}

uint64_t sub_1B43371B4()
{
  return 0x6874695765766F6DLL;
}

uint64_t sub_1B43371D8()
{
  return 0x694C6F5465766F6DLL;
}

uint64_t sub_1B43371F4(uint64_t a1)
{
  return a1 + 10;
}

uint64_t sub_1B433720C()
{
  return 0x754F746E65646E69;
}

void sub_1B4337230(char *a1)
{
  sub_1B432E774(*a1);
}

void sub_1B433723C()
{
  char *v0;

  sub_1B4654DE0(*v0);
}

void sub_1B4337244(uint64_t a1)
{
  char *v1;

  sub_1B48292B4(a1, *v1);
}

void sub_1B433724C(uint64_t a1)
{
  char *v1;

  sub_1B4829D20(a1, *v1);
}

uint64_t sub_1B4337254@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSo17REMManualOrderingC15RemindersUICoreE12ChangeReasonO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1B4337280@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = REMManualOrdering.ChangeReason.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_1B43372A8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, void *a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  unint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  char *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char v66;
  unint64_t v67;
  uint64_t v68;

  v55 = a4;
  v60 = a1;
  v61 = a8;
  v53[1] = a3;
  v59 = a2;
  v14 = (uint64_t)a10;
  v15 = sub_1B49037E8();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1B49047F0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a7 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  v64 = a6;
  v62 = a5;
  if (v21)
  {
    v65 = a10;
    v68 = MEMORY[0x1E0DEE9D8];
    sub_1B4907F28();
    v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v63 = a7;
    v24 = a7 + v23;
    v25 = *(_QWORD *)(v18 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    do
    {
      v26(v20, v24, v17);
      sub_1B49047D8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
      v24 += v25;
      --v21;
    }
    while (v21);
    v27 = v68;
    a6 = v64;
    v14 = (uint64_t)v65;
    a5 = v62;
    a7 = v63;
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  v65 = a11;
  v28 = a9;
  if (v27 >> 62)
  {
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v29 = sub_1B490815C();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B490839C();
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
    v29 = v27;
  }
  swift_bridgeObjectRelease();
  v54 = sub_1B420EEF4(v29);
  swift_bridgeObjectRelease();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v30 = sub_1B4339BC8(a7, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = v22;
  v67 = sub_1B41E3090(v22);
  v66 = 0;
  if (v14 < 0)
  {
    sub_1B4216830(a9, v14);
    v32 = v65;
    sub_1B4216ADC(a9, v14);

  }
  else if (v14 == 2 && !a9)
  {
    sub_1B433A12C(0, v14, v65);
    v31 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B4232AC8(v31);
    v66 = 1;
  }
  v63 = v30;
  v33 = *(_QWORD *)(a5 + 16);
  if (v33)
  {
    v34 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v35 = *(_QWORD *)(v18 + 72);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v36 = v64;
    v37 = v65;
    v38 = v63;
    v39 = v54;
    do
    {
      sub_1B4337808(v34, &v66, a9, v14, v37, &v68, v38, v36, v39, (uint64_t *)&v67);
      v34 += v35;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v28 = a9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14 < 0)
  {
    sub_1B4216830(v28, v14);
    v40 = v65;
    v41 = v65;
    sub_1B4216ADC(v28, v14);
    swift_bridgeObjectRelease();

  }
  else
  {
    v40 = v65;
    if (v14 == 2 && v28 == (void *)1)
    {
      sub_1B4216830((id)1, 2u);
      sub_1B4232AC8(v63);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v42 = v14;
  v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v44 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v45 = (void *)sub_1B4906DA0();
  swift_bridgeObjectRelease();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4ECE40);
  sub_1B41DF544();
  v46 = (void *)sub_1B490680C();
  swift_bridgeObjectRelease();
  v47 = v56;
  _s15RemindersUICore22TTRCurrentTimeProviderC3now10Foundation4DateVyF_0();
  v48 = (void *)sub_1B4903788();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
  v50 = v60;
  v49 = v61;
  v51 = objc_msgSend(v43, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v60, (__int16)v59, v44, v45, v46, v61, v48);
  sub_1B433A100(v28, v42, v40);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_1B4337808(uint64_t a1, _BYTE *a2, void *a3, uint64_t a4, void *a5, _QWORD *a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v21;
  void *v22;
  char v23;
  unint64_t v24;
  id v25;
  id v26;
  char v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  char v32;
  void *v33;
  char v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char v42;
  unint64_t v43;
  id v44;
  void *v45;
  char v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _BYTE *v54;
  void *v55;
  char v56;
  unint64_t v57;
  char v58;
  void *v59;
  void *v60;
  char v61;
  _QWORD *v62;
  void *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  char v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  char v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t i;
  uint64_t v87;
  id v88;
  char v89;
  void *v90;
  char v91;
  unint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  void *v98;
  char isUniquelyReferenced_nonNull_native;
  void *v100;
  unsigned __int8 v101;
  uint64_t v102;
  _BYTE v104[12];
  int v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void *v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  void (*v126)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  unint64_t v132;

  v118 = a7;
  v119 = a8;
  v129 = a9;
  v130 = a6;
  v128 = sub_1B49047F0();
  v15 = *(_QWORD *)(v128 - 8);
  v16 = MEMORY[0x1E0C80A78](v128);
  v127 = &v104[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v19 = &v104[-v18];
  v20 = *a2;
  v111 = a1;
  if ((v20 & 1) == 0)
  {
    if (a4 < 0)
    {
      sub_1B4216830(a3, a4);
      v25 = a5;
      sub_1B4216ADC(a3, a4);

    }
    else if (!(_BYTE)a4)
    {
      v21 = v15;
      sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
      sub_1B4216830(a3, 0);
      v22 = (void *)sub_1B49047D8();
      v23 = sub_1B4907844();

      if ((v23 & 1) != 0)
      {
        v24 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B4232AC8(v24);
        sub_1B433A100(a3, a4, a5);
        *a2 = 1;
      }
      else
      {
        sub_1B433A100(a3, a4, a5);
      }
      a1 = v111;
      v15 = v21;
    }
  }
  v26 = a5;
  v27 = sub_1B49047A8();
  v28 = v128;
  v126 = *(void (**)(_QWORD, _QWORD, _QWORD))(v15 + 16);
  v126(v19, a1, v128);
  v123 = v15;
  if ((v27 & 1) != 0)
  {
    v29 = a3;
    v30 = (void *)sub_1B49047D8();
    v31 = v15;
    v32 = sub_1B424E0B4(v30, v119);

    v110 = *(_QWORD **)(v31 + 8);
    ((void (*)(_BYTE *, uint64_t))v110)(v19, v28);
    if ((v32 & 1) == 0)
      goto LABEL_17;
  }
  else
  {
    v29 = a3;
    v110 = *(_QWORD **)(v15 + 8);
    ((void (*)(_BYTE *, uint64_t))v110)(v19, v28);
  }
  v33 = (void *)sub_1B49047D8();
  v34 = sub_1B424E0B4(v33, v129);

  if ((v34 & 1) == 0)
  {
    sub_1B49047D8();
    v35 = v130;
    MEMORY[0x1B5E3B128]();
    if (*(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B4906DF4();
    sub_1B4906E54();
    sub_1B4906DC4();
  }
LABEL_17:
  v36 = *a2;
  v37 = MEMORY[0x1E0DEE9D8];
  v38 = v29;
  v122 = a2;
  if ((v36 & 1) != 0)
  {
    v39 = v128;
    if ((a4 & 0x8000000000000000) == 0)
    {
LABEL_33:
      v38 = 0;
      v132 = v37;
      a4 = 255;
      v47 = 1;
      goto LABEL_34;
    }
  }
  else
  {
    v39 = v128;
    if ((a4 & 0x8000000000000000) == 0)
    {
      if (a4 == 1)
      {
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
        sub_1B4216830(v38, 1u);
        v40 = v38;
        v41 = (void *)sub_1B49047D8();
        v42 = sub_1B4907844();

        if ((v42 & 1) != 0)
        {
          v43 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
          sub_1B4232AC8(v43);
          sub_1B433A100(v40, a4, v26);
          a2 = v122;
          *v122 = 1;
        }
        else
        {
          sub_1B433A100(v40, a4, v26);
          a2 = v122;
        }
        v39 = v128;
      }
      goto LABEL_33;
    }
    sub_1B4216830(v38, a4);
    v26 = v26;
    sub_1B4216ADC(v38, a4);

  }
  sub_1B4216830(v38, a4);
  v44 = v26;
  v45 = (void *)sub_1B49047D8();
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
  v46 = sub_1B4907844();

  if ((v46 & 1) == 0)
  {
    sub_1B4216ADC(v38, a4);
    goto LABEL_33;
  }
  v132 = v37;
  if ((_BYTE)a4 == 0xFF)
  {
    v47 = 1;
    a4 = 255;
  }
  else
  {
    v47 = 0;
    if (a4 == 2 && !v38)
    {
      v48 = v118;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      a4 = 2;
      sub_1B4217BBC(0, 2u);
      sub_1B4232AC8(v48);
      v47 = 0;
    }
  }
LABEL_34:
  v49 = sub_1B49047E4();
  if (v49)
  {
    v105 = v47;
    v106 = v49;
    v125 = *(_QWORD *)(v49 + 16);
    if (v125)
    {
      v50 = 0;
      v124 = v106 + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
      v123 = *(_QWORD *)(v123 + 72);
      v51 = v119 & 0xFFFFFFFFFFFFFF8;
      if (v119 < 0)
        v51 = v119;
      v112 = v51;
      v115 = v119 & 0xC000000000000001;
      v116 = v119 + 56;
      v52 = v129 & 0xFFFFFFFFFFFFFF8;
      if (v129 < 0)
        v52 = v129;
      v114 = v52;
      v120 = v129 & 0xC000000000000001;
      v121 = v129 + 56;
      v109 = v110;
      v108 = v110;
      v107 = v110;
      v130 = v110;
      v113 = a4;
      v117 = v38;
      do
      {
        v53 = v124 + v123 * v50;
        v54 = v127;
        if (!(_BYTE)a4 && !*a2)
        {
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
          sub_1B4216830(v38, 0);
          v55 = (void *)sub_1B49047D8();
          v56 = sub_1B4907844();

          if ((v56 & 1) != 0)
          {
            v57 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B4232AC8(v57);
            sub_1B4217BD0(v38, 0);
            a2 = v122;
            *v122 = 1;
          }
          else
          {
            sub_1B4217BD0(v38, 0);
            a2 = v122;
          }
        }
        v58 = sub_1B49047A8();
        v126(v54, v53, v39);
        if ((v58 & 1) != 0)
        {
          v59 = (void *)sub_1B49047D8();
          v60 = v59;
          if (v115)
          {
            v61 = sub_1B4907D84();

            ((void (*)(_BYTE *, uint64_t))v130)(v54, v39);
            if ((v61 & 1) == 0)
              goto LABEL_78;
            goto LABEL_54;
          }
          v71 = v119;
          if (!*(_QWORD *)(v119 + 16))
          {

            v39 = v128;
            v84 = v110;
            ((void (*)(_BYTE *, uint64_t))v110)(v54, v128);
            v109 = v84;
            v108 = v84;
            v107 = v84;
            v130 = v84;
            goto LABEL_78;
          }
          v72 = sub_1B4907838();
          v73 = -1 << *(_BYTE *)(v71 + 32);
          v74 = v72 & ~v73;
          if (((*(_QWORD *)(v116 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
          {

            v39 = v128;
            v93 = v110;
            ((void (*)(_BYTE *, uint64_t))v110)(v127, v128);
            v109 = v93;
            v108 = v93;
            v107 = v93;
            v130 = v93;
            LOBYTE(a4) = v113;
            goto LABEL_78;
          }
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
          v75 = *(id *)(*(_QWORD *)(v71 + 48) + 8 * v74);
          v76 = sub_1B4907844();

          v77 = v110;
          v78 = v110;
          if ((v76 & 1) == 0)
          {
            v79 = ~v73;
            v80 = (v74 + 1) & v79;
            if (((*(_QWORD *)(v116 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
            {

              v39 = v128;
              v83 = v109;
              ((void (*)(_BYTE *, uint64_t))v109)(v127, v128);
              v108 = v83;
              v107 = v83;
LABEL_85:
              v130 = v83;
LABEL_86:
              LOBYTE(a4) = v113;
              v38 = v117;
              a2 = v122;
              goto LABEL_78;
            }
            v39 = v128;
            while (1)
            {
              v81 = *(id *)(*(_QWORD *)(v119 + 48) + 8 * v80);
              v82 = sub_1B4907844();

              if ((v82 & 1) != 0)
                break;
              v80 = (v80 + 1) & v79;
              if (((*(_QWORD *)(v116 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
              {

                v83 = v107;
                ((void (*)(_BYTE *, uint64_t))v107)(v127, v39);
                goto LABEL_85;
              }
            }
            v78 = v108;
            v77 = v109;
          }
          v94 = v78;

          v62 = v94;
          v109 = v77;
          v108 = v94;
          v107 = v94;
          LOBYTE(a4) = v113;
          v38 = v117;
          a2 = v122;
          v54 = v127;
          v39 = v128;
        }
        else
        {
          v62 = v130;
        }
        v130 = v62;
        ((void (*)(_BYTE *, uint64_t))v62)(v54, v39);
LABEL_54:
        v63 = (void *)sub_1B49047D8();
        if (v120)
        {
          v64 = sub_1B4907D84();

          if ((v64 & 1) == 0)
            goto LABEL_75;
        }
        else
        {
          if (!*(_QWORD *)(v129 + 16))
            goto LABEL_74;
          v65 = v129;
          v66 = sub_1B4907838();
          v67 = -1 << *(_BYTE *)(v65 + 32);
          v68 = v66 & ~v67;
          if (((*(_QWORD *)(v121 + ((v68 >> 3) & 0xFFFFFFFFFFFFF8)) >> v68) & 1) == 0)
            goto LABEL_74;
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
          v69 = *(id *)(*(_QWORD *)(v129 + 48) + 8 * v68);
          v70 = sub_1B4907844();

          if ((v70 & 1) == 0)
          {
            v85 = ~v67;
            for (i = v68 + 1; ; i = v87 + 1)
            {
              v87 = i & v85;
              if (((*(_QWORD *)(v121 + (((i & v85) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v85)) & 1) == 0)
                break;
              v88 = *(id *)(*(_QWORD *)(v129 + 48) + 8 * v87);
              v89 = sub_1B4907844();

              v39 = v128;
              if ((v89 & 1) != 0)
              {

                goto LABEL_86;
              }
            }
LABEL_74:

            LOBYTE(a4) = v113;
            a2 = v122;
            v39 = v128;
LABEL_75:
            sub_1B49047D8();
            MEMORY[0x1B5E3B128]();
            if (*(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B4906DF4();
            sub_1B4906E54();
            sub_1B4906DC4();
            v38 = v117;
            goto LABEL_78;
          }

          LOBYTE(a4) = v113;
          v38 = v117;
          a2 = v122;
          v39 = v128;
        }
LABEL_78:
        if (a4 == 1 && !*a2)
        {
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
          sub_1B4216830(v38, 1u);
          v90 = (void *)sub_1B49047D8();
          v91 = sub_1B4907844();

          if ((v91 & 1) != 0)
          {
            v92 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
            sub_1B4232AC8(v92);
            sub_1B4217BD0(v38, 1u);
            *a2 = 1;
          }
          else
          {
            sub_1B4217BD0(v38, 1u);
          }
        }
        ++v50;
      }
      while (v50 != v125);
    }
    swift_bridgeObjectRelease();
    LOBYTE(v47) = v105;
  }
  if ((v47 & 1) == 0 && a4 == 2 && v38 == (void *)1)
  {
    v95 = v118;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B4217BBC((id)1, 2u);
    sub_1B4232AC8(v95);
  }
  v96 = v132;
  if (v132 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v102 = sub_1B49081B0();
    swift_bridgeObjectRelease();
    if (v102)
      goto LABEL_96;
LABEL_99:
    v100 = v38;
    v101 = a4;
    goto LABEL_100;
  }
  if (!*(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_99;
LABEL_96:
  v97 = a4;
  v98 = (void *)sub_1B49047D8();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v131 = *a10;
  *a10 = 0x8000000000000000;
  sub_1B41F16CC(v96, v98, isUniquelyReferenced_nonNull_native);
  *a10 = v131;

  swift_bridgeObjectRelease();
  v100 = v38;
  v101 = v97;
LABEL_100:
  sub_1B4217BD0(v100, v101);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B43383A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A388);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(int *)(v5 + 48);
  v9 = (char *)v7 + v8;
  v10 = (char *)a1 + v8;
  *v7 = *a1;
  v11 = sub_1B49047F0();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  *a2 = sub_1B49047D8();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v11);
}

uint64_t sub_1B4338478(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, unint64_t, uint64_t);
  void *v18;
  char v19;
  char *v20;
  void *v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void *v33;
  void *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  void *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  char v44;
  uint64_t v45;
  unint64_t i;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  char v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  unint64_t v59;
  id v60;
  char v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t *v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, uint64_t);
  void (*v86)(char *, uint64_t);
  unint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, unint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  unint64_t v105;

  v81 = a6;
  v83 = a5;
  v102 = a3;
  v10 = sub_1B49047F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v80 - v14;
  v16 = sub_1B49047A8();
  v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v11 + 16);
  v89 = a1;
  v97 = (void (*)(char *, unint64_t, uint64_t))v17;
  v17(v15, a1, v10);
  v98 = a2;
  if ((v16 & 1) != 0)
  {
    v18 = (void *)sub_1B49047D8();
    v19 = sub_1B424E0B4(v18, a2);

    v88 = *(void (**)(char *, uint64_t))(v11 + 8);
    v88(v15, v10);
    v20 = v95;
    if ((v19 & 1) == 0)
      goto LABEL_9;
  }
  else
  {
    v88 = *(void (**)(char *, uint64_t))(v11 + 8);
    v88(v15, v10);
    v20 = v95;
  }
  v21 = (void *)sub_1B49047D8();
  v22 = sub_1B424E310(v21, v102);

  if ((v22 & 1) == 0)
  {
    sub_1B49047D8();
    MEMORY[0x1B5E3B128]();
    if (*(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B4906DF4();
    sub_1B4906E54();
    sub_1B4906DC4();
  }
LABEL_9:
  v105 = MEMORY[0x1E0DEE9D8];
  v23 = sub_1B49047E4();
  if (v23)
  {
    v80 = v6;
    v82 = v23;
    v24 = v97;
    v101 = *(_QWORD *)(v23 + 16);
    if (v101)
    {
      v25 = 0;
      v26 = *(_QWORD *)(v11 + 72);
      v27 = v82 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v28 = v98 & 0xFFFFFFFFFFFFFF8;
      if (v98 < 0)
        v28 = v98;
      v90 = v28;
      v91 = v27;
      v96 = v98 + 56;
      v29 = v102 & 0xC000000000000001;
      v30 = v102 & 0xFFFFFFFFFFFFFF8;
      if (v102 < 0)
        v30 = v102;
      v93 = v30;
      v94 = v98 & 0xC000000000000001;
      v99 = v102 + 56;
      v100 = v26;
      v85 = v88;
      v86 = v88;
      v84 = v88;
      v103 = v88;
      v92 = v10;
      v87 = v102 & 0xC000000000000001;
      do
      {
        v31 = v27 + v100 * v25;
        v32 = sub_1B49047A8();
        v24(v20, v31, v10);
        if ((v32 & 1) != 0)
        {
          v33 = (void *)sub_1B49047D8();
          v34 = v33;
          if (v94)
          {
            v35 = sub_1B4907D84();

            v103(v20, v10);
            if ((v35 & 1) == 0)
              goto LABEL_17;
            goto LABEL_24;
          }
          v50 = v98;
          if (!*(_QWORD *)(v98 + 16))
          {

            v63 = v20;
LABEL_47:
            v64 = v88;
            v88(v63, v10);
            v85 = v64;
            v86 = v64;
            v84 = v64;
            v103 = v64;
            v24 = v97;
            goto LABEL_17;
          }
          v51 = sub_1B4907838();
          v52 = -1 << *(_BYTE *)(v50 + 32);
          v53 = v51 & ~v52;
          if (((*(_QWORD *)(v96 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
          {

            v20 = v95;
            v63 = v95;
            v10 = v92;
            goto LABEL_47;
          }
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
          v54 = *(id *)(*(_QWORD *)(v50 + 48) + 8 * v53);
          v55 = sub_1B4907844();

          v56 = v88;
          v57 = v88;
          if ((v55 & 1) == 0)
          {
            v58 = ~v52;
            v59 = (v53 + 1) & v58;
            if (((*(_QWORD *)(v96 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
            {

              v20 = v95;
              v10 = v92;
              v62 = (void (*)(_QWORD, _QWORD))v86;
              v86(v95, v92);
              v84 = (void (*)(char *, uint64_t))v62;
              v85 = (void (*)(char *, uint64_t))v62;
LABEL_49:
              v103 = (void (*)(char *, uint64_t))v62;
              v24 = v97;
              v27 = v91;
              goto LABEL_17;
            }
            while (1)
            {
              v60 = *(id *)(*(_QWORD *)(v98 + 48) + 8 * v59);
              v61 = sub_1B4907844();

              if ((v61 & 1) != 0)
                break;
              v59 = (v59 + 1) & v58;
              if (((*(_QWORD *)(v96 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
              {

                v20 = v95;
                v10 = v92;
                v62 = (void (*)(_QWORD, _QWORD))v84;
                v84(v95, v92);
                goto LABEL_49;
              }
            }
            v57 = v85;
            v56 = v86;
          }
          v65 = (void (*)(_QWORD, _QWORD))v57;

          v36 = (void (*)(char *, uint64_t))v65;
          v85 = (void (*)(char *, uint64_t))v65;
          v86 = v56;
          v84 = (void (*)(char *, uint64_t))v65;
          v27 = v91;
          v10 = v92;
          v20 = v95;
          v24 = v97;
        }
        else
        {
          v36 = v103;
        }
        v103 = v36;
        v36(v20, v10);
LABEL_24:
        v37 = (void *)sub_1B49047D8();
        if (v29)
        {
          v38 = sub_1B4907D84();

          if ((v38 & 1) == 0)
            goto LABEL_35;
        }
        else
        {
          if (!*(_QWORD *)(v102 + 16))
            goto LABEL_34;
          v39 = v102;
          v40 = sub_1B4907838();
          v41 = -1 << *(_BYTE *)(v39 + 32);
          v42 = v40 & ~v41;
          if (((*(_QWORD *)(v99 + ((v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
            goto LABEL_34;
          sub_1B4904070();
          v43 = *(id *)(*(_QWORD *)(v102 + 48) + 8 * v42);
          v44 = sub_1B4907844();

          if ((v44 & 1) == 0)
          {
            v45 = ~v41;
            for (i = v42 + 1; ; i = v47 + 1)
            {
              v47 = i & v45;
              if (((*(_QWORD *)(v99 + (((i & v45) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v45)) & 1) == 0)
                break;
              v48 = *(id *)(*(_QWORD *)(v102 + 48) + 8 * v47);
              v49 = sub_1B4907844();

              if ((v49 & 1) != 0)
                goto LABEL_16;
            }
LABEL_34:

            v27 = v91;
            v10 = v92;
            v20 = v95;
            v24 = v97;
            v29 = v87;
LABEL_35:
            sub_1B49047D8();
            MEMORY[0x1B5E3B128]();
            if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1B4906DF4();
            sub_1B4906E54();
            sub_1B4906DC4();
            goto LABEL_17;
          }
LABEL_16:

          v27 = v91;
          v10 = v92;
          v20 = v95;
          v24 = v97;
          v29 = v87;
        }
LABEL_17:
        ++v25;
      }
      while (v25 != v101);
    }
    swift_bridgeObjectRelease();
  }
  v66 = sub_1B49047D8();
  v67 = (void *)v66;
  v68 = v83;
  if (*(_QWORD *)(v83 + 16) && (v69 = sub_1B41ED0D0(v66), (v70 & 1) != 0))
  {
    v71 = *(_QWORD *)(*(_QWORD *)(v68 + 56) + 8 * v69);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();

    v72 = v98;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v73 = sub_1B4339BC8(v71, v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B4232AC8(v73);
  }
  else
  {

  }
  v74 = v105;
  if (v105 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v79 = sub_1B49081B0();
    swift_bridgeObjectRelease();
    if (!v79)
      return swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_59:
    v75 = (void *)sub_1B49047D8();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v76 = v81;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v104 = *v76;
    *v76 = 0x8000000000000000;
    sub_1B41F16CC(v74, v75, isUniquelyReferenced_nonNull_native);
    *v76 = v104;

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B4338BDC(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  void *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, unint64_t, uint64_t);
  unint64_t v27;
  char v28;
  void *v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  id v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v48[2];
  _QWORD *v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v8 = sub_1B49047F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v48 - v13;
  v15 = sub_1B49047A8();
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v53(v14, a1, v8);
  v59 = a2;
  v54 = v8;
  if ((v15 & 1) != 0)
  {
    v16 = (void *)sub_1B49047D8();
    v17 = sub_1B424E0B4(v16, a2);

    v55 = *(void (**)(char *, uint64_t))(v9 + 8);
    v55(v14, v8);
    if ((v17 & 1) == 0)
      goto LABEL_8;
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t))(v9 + 8);
    v55(v14, v8);
  }
  sub_1B49047D8();
  MEMORY[0x1B5E3B128]();
  if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B4906DF4();
  sub_1B4906E54();
  sub_1B4906DC4();
LABEL_8:
  v18 = MEMORY[0x1E0DEE9D8];
  v64 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1B49047E4();
  if (v19)
  {
    v62 = *(_QWORD *)(v19 + 16);
    if (v62)
    {
      v48[1] = a1;
      v49 = a4;
      v20 = 0;
      v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v48[0] = v19;
      v61 = v19 + v21;
      v60 = *(_QWORD *)(v9 + 72);
      v22 = v59;
      v23 = v59 & 0xFFFFFFFFFFFFFF8;
      if (v59 < 0)
        v23 = v59;
      v56 = v23;
      v57 = v59 & 0xC000000000000001;
      v58 = v59 + 56;
      v24 = v54;
      v25 = v55;
      v51 = v55;
      v52 = v55;
      v50 = v55;
      v26 = (void (*)(char *, unint64_t, uint64_t))v53;
      while (1)
      {
        v27 = v61 + v60 * v20;
        v28 = sub_1B49047A8();
        v26(v12, v27, v24);
        if ((v28 & 1) == 0)
          goto LABEL_32;
        v29 = (void *)sub_1B49047D8();
        v30 = v29;
        if (v57)
        {
          v31 = sub_1B4907D84();

          v25(v12, v24);
          if ((v31 & 1) != 0)
            goto LABEL_33;
        }
        else if (*(_QWORD *)(v22 + 16))
        {
          v32 = sub_1B4907838();
          v33 = -1 << *(_BYTE *)(v22 + 32);
          v34 = v32 & ~v33;
          if (((*(_QWORD *)(v58 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
          {
            sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
            v35 = *(id *)(*(_QWORD *)(v22 + 48) + 8 * v34);
            v36 = sub_1B4907844();

            v37 = v55;
            v25 = v55;
            if ((v36 & 1) != 0)
              goto LABEL_31;
            v38 = ~v33;
            v39 = (v34 + 1) & v38;
            if (((*(_QWORD *)(v58 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
            {
              v22 = v59;
              while (1)
              {
                v40 = *(id *)(*(_QWORD *)(v22 + 48) + 8 * v39);
                v41 = sub_1B4907844();

                if ((v41 & 1) != 0)
                  break;
                v39 = (v39 + 1) & v38;
                v22 = v59;
                if (((*(_QWORD *)(v58 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
                {

                  v24 = v54;
                  v25 = v50;
                  v50(v12, v54);
                  goto LABEL_29;
                }
              }
              v25 = v51;
              v37 = v52;
LABEL_31:
              v42 = v37;

              v51 = v25;
              v52 = v42;
              v50 = v25;
              v22 = v59;
              v26 = (void (*)(char *, unint64_t, uint64_t))v53;
              v24 = v54;
LABEL_32:
              v25(v12, v24);
LABEL_33:
              v43 = sub_1B49047D8();
              MEMORY[0x1B5E3B128](v43);
              if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1B4906DF4();
              sub_1B4906E54();
              sub_1B4906DC4();
              goto LABEL_14;
            }

            v24 = v54;
            v25 = v52;
            v52(v12, v54);
            v50 = v25;
            v51 = v25;
            v22 = v59;
          }
          else
          {

            v24 = v54;
            v25 = v55;
            v55(v12, v54);
            v51 = v25;
            v52 = v25;
            v50 = v25;
          }
LABEL_29:
          v26 = (void (*)(char *, unint64_t, uint64_t))v53;
        }
        else
        {

          v25 = v55;
          v55(v12, v24);
          v51 = v25;
          v52 = v25;
          v50 = v25;
        }
LABEL_14:
        if (++v20 == v62)
        {
          swift_bridgeObjectRelease();
          v18 = v64;
          a4 = v49;
          if (v64 >> 62)
            goto LABEL_37;
LABEL_41:
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_42;
          return swift_bridgeObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (!(v18 >> 62))
    goto LABEL_41;
LABEL_37:
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v44 = sub_1B49081B0();
  swift_bridgeObjectRelease();
  if (v44)
  {
LABEL_42:
    v45 = (void *)sub_1B49047D8();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v63 = *a4;
    *a4 = 0x8000000000000000;
    sub_1B41F16CC(v18, v45, isUniquelyReferenced_nonNull_native);
    *a4 = v63;

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B4339104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *result;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09A388);
  v44 = *(_QWORD *)(v57 - 8);
  v2 = MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - v4;
  v6 = sub_1B49047F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E0C0);
  result = (_QWORD *)sub_1B49081D4();
  v11 = result;
  v12 = 0;
  v48 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v45 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v46 = (unint64_t)(v14 + 63) >> 6;
  v47 = (char *)(result + 8);
  v55 = v9;
  v43 = result;
  if ((v15 & v13) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v17 | (v12 << 6); ; i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    v54 = i;
    v22 = *(_QWORD *)(v48 + 56);
    v23 = *(void **)(*(_QWORD *)(v48 + 48) + 8 * i);
    v53 = 8 * i;
    v24 = *(_QWORD *)(v22 + 8 * i);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v51 = v16;
      v52 = v12;
      v59 = MEMORY[0x1E0DEE9D8];
      v50 = v23;
      v26 = v24;
      v27 = v23;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B41FE6F8(0, v25, 0);
      v28 = *(unsigned __int8 *)(v44 + 80);
      v49 = v26;
      v29 = v26 + ((v28 + 32) & ~v28);
      v58 = *(_QWORD *)(v44 + 72);
      do
      {
        sub_1B41EA51C(v29, (uint64_t)v5, &qword_1EF09A388);
        v30 = *(int *)(v57 + 48);
        v31 = &v56[v30];
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v56[v30], &v5[v30], v6);
        v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v32(v9, v31, v6);
        sub_1B41EA560((uint64_t)v5, &qword_1EF09A388);
        v33 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B41FE6F8(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v59;
        }
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_1B41FE6F8(v34 > 1, v35 + 1, 1);
          v33 = v59;
        }
        *(_QWORD *)(v33 + 16) = v35 + 1;
        v36 = v33
            + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
            + *(_QWORD *)(v7 + 72) * v35;
        v9 = v55;
        v32((char *)v36, v55, v6);
        v59 = v33;
        v29 += v58;
        --v25;
      }
      while (v25);
      result = (_QWORD *)swift_bridgeObjectRelease();
      v11 = v43;
      v16 = v51;
      v12 = v52;
      v37 = v50;
    }
    else
    {
      v37 = v23;
      result = v23;
      v33 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v47[(v54 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v54;
    v38 = v53;
    *(_QWORD *)(v11[6] + v53) = v37;
    *(_QWORD *)(v11[7] + v38) = v33;
    v39 = v11[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v11[2] = v41;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_33;
    if (v19 >= v46)
      return v11;
    v20 = *(_QWORD *)(v45 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v46)
        return v11;
      v20 = *(_QWORD *)(v45 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v46)
          return v11;
        v20 = *(_QWORD *)(v45 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_18:
    v16 = (v20 - 1) & v20;
  }
  v21 = v19 + 3;
  if (v21 >= v46)
    return v11;
  v20 = *(_QWORD *)(v45 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v46)
      return v11;
    v20 = *(_QWORD *)(v45 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1B433951C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = sub_1B49047F0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - v9;
  result = MEMORY[0x1E0DEE9D8];
  v42 = MEMORY[0x1E0DEE9D8];
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v30 = v2;
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v14 = *(_QWORD *)(v6 + 72);
    v40 = a2;
    v41 = v14;
    v31 = v6;
    v32 = v13;
    v36 = a1 + v13;
    v15 = a2 & 0xFFFFFFFFFFFFFF8;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v35 = a2 & 0xC000000000000001;
    if (a2 < 0)
      v15 = a2;
    v33 = v15;
    v38 = a2 + 56;
    while (1)
    {
      v34(v10, v36 + v41 * v12, v5);
      v16 = (void *)sub_1B49047D8();
      if (v35)
      {
        v17 = sub_1B4907D84();

        if ((v17 & 1) == 0)
          goto LABEL_19;
      }
      else
      {
        if (!*(_QWORD *)(a2 + 16))
          goto LABEL_18;
        v18 = sub_1B4907838();
        v19 = -1 << *(_BYTE *)(a2 + 32);
        v20 = v18 & ~v19;
        if (((*(_QWORD *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          goto LABEL_18;
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
        v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
        v22 = sub_1B4907844();

        if ((v22 & 1) == 0)
        {
          v23 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v23;
            if (((*(_QWORD *)(v38 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            v24 = *(id *)(*(_QWORD *)(v40 + 48) + 8 * v20);
            v25 = sub_1B4907844();

            if ((v25 & 1) != 0)
              goto LABEL_5;
          }
LABEL_18:

          v6 = v31;
LABEL_19:
          v26 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v26(v39, v10, v5);
          v27 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B41FE6F8(0, *(_QWORD *)(v27 + 16) + 1, 1);
            v27 = v42;
          }
          v29 = *(_QWORD *)(v27 + 16);
          v28 = *(_QWORD *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_1B41FE6F8(v28 > 1, v29 + 1, 1);
            v27 = v42;
          }
          *(_QWORD *)(v27 + 16) = v29 + 1;
          v26((char *)(v27 + v32 + v29 * v41), v39, v5);
          v42 = v27;
          a2 = v40;
          goto LABEL_7;
        }
LABEL_5:

        a2 = v40;
        v6 = v31;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
LABEL_7:
      if (++v12 == v37)
        return v42;
    }
  }
  return result;
}

unint64_t sub_1B433981C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v3 = v2;
  v6 = sub_1B49047F0();
  v7 = MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v36 - v10;
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v36 - v12;
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
    return MEMORY[0x1E0DEE9D8];
  v38 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v39 = v11;
  v45 = a1 + v38;
  v44 = a2 & 0xC000000000000001;
  v50 = *(_QWORD *)(v11 + 72);
  v13 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v13 = a2;
  v42 = v13;
  v47 = a2 + 56;
  v36 = a1;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v14 = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  v48 = a2;
  v37 = v6;
  do
  {
    v16 = (void *)sub_1B49047D8();
    if (v44)
    {
      v17 = sub_1B4907D84();

      if ((v17 & 1) != 0)
        goto LABEL_6;
    }
    else
    {
      v18 = *(_QWORD *)(a2 + 16);
      v43 = v3;
      if (v18)
      {
        v19 = sub_1B4907838();
        v20 = -1 << *(_BYTE *)(a2 + 32);
        v21 = a2;
        v22 = v19 & ~v20;
        if (((*(_QWORD *)(v47 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
        {
          sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
          v23 = *(id *)(*(_QWORD *)(v21 + 48) + 8 * v22);
          v24 = sub_1B4907844();

          if ((v24 & 1) != 0)
          {
LABEL_5:

            v3 = v43;
            a2 = v48;
            v6 = v37;
            goto LABEL_6;
          }
          v25 = ~v20;
          while (1)
          {
            v22 = (v22 + 1) & v25;
            if (((*(_QWORD *)(v47 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
              break;
            v26 = *(id *)(*(_QWORD *)(v48 + 48) + 8 * v22);
            v27 = sub_1B4907844();

            if ((v27 & 1) != 0)
              goto LABEL_5;
          }
        }
      }

      v3 = v43;
      a2 = v48;
      v6 = v37;
    }
    v28 = sub_1B49047E4();
    if (v28)
    {
      v29 = v28;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B433951C(v29, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1B49047D8();
    sub_1B49047A8();
    v30 = v41;
    sub_1B49047CC();
    v31 = v40;
    v32 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v32(v40, v30, v6);
    v32(v49, v31, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1B4290A1C(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    v34 = *(_QWORD *)(v15 + 16);
    v33 = *(_QWORD *)(v15 + 24);
    if (v34 >= v33 >> 1)
      v15 = sub_1B4290A1C(v33 > 1, v34 + 1, 1, v15);
    *(_QWORD *)(v15 + 16) = v34 + 1;
    v32((char *)(v15 + v38 + v34 * v50), v49, v6);
LABEL_6:
    ++v14;
  }
  while (v14 != v46);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B4339BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  char v18;
  unint64_t v19;
  id v20;
  char v21;
  unint64_t v22;
  id v23;
  char v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v27 = sub_1B49047F0();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v35 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v25[1] = a1;
    v25[2] = v2;
    v34 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v10 = *(_QWORD *)(v5 + 72);
    v31 = a2 & 0xC000000000000001;
    v11 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v11 = a2;
    v28 = v11;
    v32 = a2 + 56;
    v33 = v10;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v12 = 0;
    v13 = v27;
    v30 = a2;
    v26 = v9;
    while (1)
    {
      v14 = v34 + v33 * v12;
      v15 = sub_1B49047A8();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v13);
      if ((v15 & 1) == 0)
        goto LABEL_15;
      v16 = (void *)sub_1B49047D8();
      v17 = v16;
      if (v31)
      {
        v18 = sub_1B4907D84();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
        if ((v18 & 1) != 0)
          goto LABEL_16;
      }
      else if (*(_QWORD *)(a2 + 16))
      {
        v19 = sub_1B4907838() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(v32 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        {

          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
LABEL_25:
          v9 = v26;
          goto LABEL_6;
        }
        v29 = -1 << *(_BYTE *)(a2 + 32);
        sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECEB0);
        v20 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v19);
        v21 = sub_1B4907844();

        if ((v21 & 1) != 0)
          goto LABEL_14;
        v29 = ~v29;
        v22 = (v19 + 1) & v29;
        if (((*(_QWORD *)(v32 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
        {
          a2 = v30;
          while (1)
          {
            v23 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v22);
            v24 = sub_1B4907844();

            if ((v24 & 1) != 0)
              break;
            a2 = v30;
            v22 = (v22 + 1) & v29;
            if (((*(_QWORD *)(v32 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            {

              v13 = v27;
              (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v27);
              goto LABEL_25;
            }
          }
LABEL_14:

          a2 = v30;
          v9 = v26;
          v13 = v27;
LABEL_15:
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
LABEL_16:
          sub_1B49047D8();
          MEMORY[0x1B5E3B128]();
          if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B4906DF4();
          sub_1B4906E54();
          sub_1B4906DC4();
          goto LABEL_6;
        }

        v13 = v27;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v27);
        a2 = v30;
        v9 = v26;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
      }
LABEL_6:
      if (++v12 == v9)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  return result;
}

uint64_t _sSo17REMManualOrderingC15RemindersUICoreE12ChangeReasonO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1B4908234();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_1B4339F60()
{
  unint64_t result;

  result = qword_1EF09E098;
  if (!qword_1EF09E098)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for REMManualOrdering.ChangeReason, &type metadata for REMManualOrdering.ChangeReason);
    atomic_store(result, (unint64_t *)&qword_1EF09E098);
  }
  return result;
}

uint64_t _s12ChangeReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12ChangeReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B433A080 + 4 * byte_1B491827E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B433A0B4 + 4 * byte_1B4918279[v4]))();
}

uint64_t sub_1B433A0B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B433A0BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B433A0C4);
  return result;
}

uint64_t sub_1B433A0D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B433A0D8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B433A0DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B433A0E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMManualOrdering.ChangeReason()
{
  return &type metadata for REMManualOrdering.ChangeReason;
}

void sub_1B433A100(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    sub_1B4216ADC(a1, a2);

  }
  else
  {
    sub_1B4216ADC(a1, a2);
  }
}

id sub_1B433A12C(void *a1, uint64_t a2, void *a3)
{
  if ((a2 & 0x8000000000000000) == 0)
    return sub_1B4216830(a1, a2);
  sub_1B4216830(a1, a2);
  return a3;
}

unint64_t sub_1B433A158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF09E0B8;
  if (!qword_1EF09E0B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E0B0);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF09E0B8);
  }
  return result;
}

uint64_t TTRUserActivityMetadata.name.getter(uint64_t a1, uint64_t a2)
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a2;
}

uint64_t static TTRUserActivityMetadata.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
  if ((sub_1B4907844() & 1) != 0)
  {
    if (a3)
    {
      if (a6 && (a2 == a5 && a3 == a6 || (sub_1B4908390() & 1) != 0))
        return 1;
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B433A290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
  if ((sub_1B4907844() & 1) != 0)
  {
    if (v3)
    {
      if (v5 && (v2 == v4 && v3 == v5 || (sub_1B4908390() & 1) != 0))
        return 1;
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t TTRUserActivityMetadataInterator.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE218);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  sub_1B4907520();
  sub_1B4903ECC();
  sub_1B4903EC0();
  swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 16) = sub_1B4904658();
  swift_release();
  return v0;
}

uint64_t TTRUserActivityMetadataInterator.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE218);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  sub_1B4907520();
  sub_1B4903ECC();
  sub_1B4903EC0();
  swift_allocObject();
  swift_weakInit();
  *(_QWORD *)(v0 + 16) = sub_1B4904658();
  swift_release();
  return v0;
}

uint64_t sub_1B433A4F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B433A518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  char v12;
  _BYTE *v13;

  v3 = *(double *)(a1 + 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = (uint64_t)sub_1B433ABC8(v3);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    result = swift_release();
    v12 = v10 & 1;
  }
  else
  {
    sub_1B433AD24();
    result = swift_allocError();
    v4 = result;
    v6 = 0;
    v8 = 0;
    *v13 = 0;
    v12 = 1;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = v12;
  return result;
}

uint64_t sub_1B433A5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B433A518(a1, a2);
}

void *TTRUserActivityMetadataInterator.metadata(for:viewScale:)(void *result)
{
  uint64_t v1;
  id v2;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = result;
    swift_retain();
    sub_1B4904640();

    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *TTRUserActivityMetadataInterator.syncMetadata(for:viewScale:)(void *result)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = result;
    swift_retain();
    sub_1B4904634();

    swift_release();
    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B433A6C4(void *a1)
{
  id v2;

  sub_1B4908498();
  v2 = a1;
  sub_1B4907850();

  sub_1B49084C8();
  return sub_1B49084D4();
}

uint64_t sub_1B433A730()
{
  void **v0;

  return sub_1B433A6C4(*v0);
}

uint64_t sub_1B433A73C()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1B4907850();

  return sub_1B49084C8();
}

uint64_t sub_1B433A788()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1B4908498();
  v2 = v1;
  sub_1B4907850();

  sub_1B49084C8();
  return sub_1B49084D4();
}

id sub_1B433A7E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  return v2;
}

uint64_t sub_1B433A7FC(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a2 + 8);
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ED030);
  return sub_1B4907844() & (v2 == v3);
}

uint64_t TTRUserActivityMetadataInterator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t TTRUserActivityMetadataInterator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1B433A8A4(void *result)
{
  uint64_t v1;
  id v2;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = result;
    swift_retain();
    sub_1B4904640();

    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1B433A90C(void *result)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = result;
    swift_retain();
    sub_1B4904634();

    swift_release();
    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for TTRRemindersListViewModel.AppLink(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s15RemindersUICore25TTRRemindersListViewModelC7AppLinkVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListViewModel.AppLink(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRRemindersListViewModel.AppLink(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadata()
{
  return &type metadata for TTRUserActivityMetadata;
}

uint64_t type metadata accessor for TTRUserActivityMetadataInterator()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRUserActivityMetadataInterator.OperationParams(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRUserActivityMetadataInterator.OperationParams(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TTRUserActivityMetadataInterator.OperationParams(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadataInterator.OperationParams()
{
  return &type metadata for TTRUserActivityMetadataInterator.OperationParams;
}

uint64_t sub_1B433AB70()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B433AB84()
{
  unint64_t result;

  result = qword_1ED4EDC60;
  if (!qword_1ED4EDC60)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918414, &type metadata for TTRUserActivityMetadataInterator.OperationParams);
    atomic_store(result, (unint64_t *)&qword_1ED4EDC60);
  }
  return result;
}

id sub_1B433ABC8(double a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;

  v2 = sub_1B4904628();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E0D85800], v2, v4);
  v7 = sub_1B4907424();
  if (v7)
  {
    v8 = (void *)v7;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_scale_orientation_, v7, 0, a1);
  }
  else
  {
    sub_1B41DF50C(0, &qword_1EF09E0D0);
    v8 = (void *)sub_1B4907418();
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_scale_orientation_, v8, 0, a1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

unint64_t sub_1B433AD24()
{
  unint64_t result;

  result = qword_1EF09E0C8;
  if (!qword_1EF09E0C8)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918540, &type metadata for TTRUserActivityMetadataInterator.MetadataFetchingError);
    atomic_store(result, (unint64_t *)&qword_1EF09E0C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRUserActivityMetadataInterator.MetadataFetchingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B433ADB4 + 4 * byte_1B4918345[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B433ADE8 + 4 * asc_1B4918340[v4]))();
}

uint64_t sub_1B433ADE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B433ADF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B433ADF8);
  return result;
}

uint64_t sub_1B433AE04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B433AE0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B433AE10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B433AE18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRUserActivityMetadataInterator.MetadataFetchingError()
{
  return &type metadata for TTRUserActivityMetadataInterator.MetadataFetchingError;
}

unint64_t sub_1B433AE38()
{
  unint64_t result;

  result = qword_1ED4EDC58;
  if (!qword_1ED4EDC58)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918474, &type metadata for TTRUserActivityMetadataInterator.OperationParams);
    atomic_store(result, (unint64_t *)&qword_1ED4EDC58);
  }
  return result;
}

unint64_t sub_1B433AE80()
{
  unint64_t result;

  result = qword_1EF09E0D8;
  if (!qword_1EF09E0D8)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918518, &type metadata for TTRUserActivityMetadataInterator.MetadataFetchingError);
    atomic_store(result, (unint64_t *)&qword_1EF09E0D8);
  }
  return result;
}

uint64_t TTRRemindersListInteractorSectionsCapability.__allocating_init(committer:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1B4217B90(a1, v2 + 32);
  return v2;
}

id TTRRemindersListInteractorSectionsCapabilityTarget.objectID.getter(void *a1)
{
  return objc_msgSend(a1, sel_objectID);
}

uint64_t TTRRemindersListInteractorSectionsCapability.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1B5E3D8DC](v0 + 16);
}

uint64_t TTRRemindersListInteractorSectionsCapability.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRRemindersListInteractorSectionsCapability.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E3D8DC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B42A6A2C;
}

uint64_t TTRRemindersListInteractorSectionsCapability.init(committer:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1B4217B90(a1, v1 + 32);
  return v1;
}

void *TTRRemindersListInteractorSectionsCapability.addNewSection(displayName:to:sectionID:)(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *result;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *i;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  void *v57;
  _QWORD *v58;
  void *v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  __int128 aBlock;
  __int128 v69;
  uint64_t (*v70)(uint64_t);
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  void *v75;

  v75 = 0;
  if (!a4)
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v5 + 16))
    {
      v12 = *(_QWORD *)(v5 + 24);
      ObjectType = swift_getObjectType();
      v14 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 8);
      v15 = a3;
      v14(&aBlock, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v12);
      swift_unknownObjectRelease();
    }
    else
    {
      v70 = 0;
      aBlock = 0u;
      v69 = 0u;
      v36 = a3;
    }
    v37 = a5;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B46F87E8(a3, (uint64_t)&aBlock, 0, 0, (uint64_t)a5, a1, a2, &v75);

    swift_bridgeObjectRelease();
    sub_1B41F5470((uint64_t)&aBlock);

    return v75;
  }
  if (a4 == 1)
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v5 + 16))
    {
      v8 = *(_QWORD *)(v5 + 24);
      v9 = swift_getObjectType();
      v10 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 8);
      v11 = a3;
      v10(&v72, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v9, v8);
      swift_unknownObjectRelease();
    }
    else
    {
      v74 = 0;
      v72 = 0u;
      v73 = 0u;
      v20 = a3;
    }
    v21 = a5;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v22 = objc_msgSend(a3, sel_store);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B49131A0;
    *(_QWORD *)(v23 + 32) = a3;
    *(_QWORD *)&aBlock = v23;
    sub_1B4906DC4();
    v24 = aBlock;
    v25 = objc_allocWithZone(MEMORY[0x1E0D84650]);
    v26 = a3;
    v27 = objc_msgSend(v25, sel_initWithStore_, v22);
    objc_msgSend(v27, sel_setSaveIsNoopIfNoChangedKeys_, 1);
    if ((unint64_t)aBlock >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      result = (void *)sub_1B49081B0();
      v28 = (uint64_t)result;
      if (result)
        goto LABEL_12;
    }
    else
    {
      v28 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (void *)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v28)
      {
LABEL_12:
        v64 = v26;
        if (v28 >= 1)
        {
          v30 = 0;
          do
          {
            if ((v24 & 0xC000000000000001) != 0)
              v31 = (id)MEMORY[0x1B5E3C268](v30, v24);
            else
              v31 = *(id *)(v24 + 8 * v30 + 32);
            v32 = v31;
            ++v30;
            sub_1B41F48B0((uint64_t)&v72, (uint64_t)&aBlock);
            v33 = objc_msgSend(v27, sel_updateSmartList_, v32);

            type metadata accessor for TTRSmartListEditor();
            v34 = swift_allocObject();
            *(_QWORD *)(v34 + 16) = v33;
            sub_1B41F4990((uint64_t)&aBlock, v34 + 24);
            *(_BYTE *)(v34 + 64) = 0;
            v35 = TTRSmartListEditor.addNewSection(with:displayName:)((uint64_t)a5);
            swift_release();

          }
          while (v28 != v30);
          swift_bridgeObjectRelease();
          v75 = 0;
          v26 = v64;
          goto LABEL_39;
        }
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_39:
    sub_1B41F47C8();
    v57 = (void *)sub_1B4907520();
    v58 = (_QWORD *)swift_allocObject();
    v58[3] = 0;
    v58[4] = 0;
    v58[2] = v24;
    v70 = sub_1B433D828;
    v71 = v58;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v69 = sub_1B424F0EC;
    *((_QWORD *)&v69 + 1) = &block_descriptor_6_1;
    v59 = _Block_copy(&aBlock);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    objc_msgSend(v27, sel_saveWithQueue_completion_, v57, v59);
    _Block_release(v59);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B41F5470((uint64_t)&v72);
    return v75;
  }
  swift_beginAccess();
  if (MEMORY[0x1B5E3D8DC](v5 + 16))
  {
    v16 = *(_QWORD *)(v5 + 24);
    v17 = swift_getObjectType();
    v18 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v16 + 8);
    v19 = a3;
    v18(&v72, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v17, v16);
    swift_unknownObjectRelease();
  }
  else
  {
    v74 = 0;
    v72 = 0u;
    v73 = 0u;
    v38 = a3;
  }
  v39 = a5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v40 = objc_msgSend(a3, sel_store);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1B49131A0;
  *(_QWORD *)(v41 + 32) = a3;
  *(_QWORD *)&aBlock = v41;
  sub_1B4906DC4();
  v42 = aBlock;
  v43 = objc_allocWithZone(MEMORY[0x1E0D84650]);
  v44 = a3;
  v45 = objc_msgSend(v43, sel_initWithStore_, v40);
  objc_msgSend(v45, sel_setSaveIsNoopIfNoChangedKeys_, 1);
  if ((unint64_t)aBlock >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    result = (void *)sub_1B49081B0();
    v46 = (uint64_t)result;
    if (result)
      goto LABEL_24;
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  v46 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (void *)_s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (!v46)
    goto LABEL_41;
LABEL_24:
  v63 = v44;
  v65 = v40;
  v47 = v46 - 1;
  if (v46 < 1)
    goto LABEL_45;
  v48 = 0;
  for (i = 0; ; i = v51)
  {
    v52 = (v42 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1B5E3C268](v48, v42)
        : *(id *)(v42 + 8 * v48 + 32);
    v53 = v52;
    sub_1B41F48B0((uint64_t)&v72, (uint64_t)&aBlock);
    v54 = objc_msgSend(v45, sel_updateTemplate_, v53);

    type metadata accessor for TTRTemplateEditor();
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + 16) = v54;
    sub_1B41F4990((uint64_t)&aBlock, v55 + 24);
    *(_BYTE *)(v55 + 64) = 0;
    v56 = TTRTemplateEditor.addNewSection(with:displayName:)((uint64_t)a5);
    if (!v56)
      break;
    v50 = v56;
    v51 = objc_msgSend(v56, sel_objectID);
    swift_release();

    if (v47 == v48)
    {
      swift_bridgeObjectRelease();
      v75 = v51;
      goto LABEL_36;
    }
LABEL_27:
    ++v48;
  }
  swift_release();

  if (v47 != v48)
  {
    v51 = 0;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v75 = 0;
LABEL_36:
  v40 = v65;
  v44 = v63;
LABEL_42:
  sub_1B41F47C8();
  v60 = (void *)sub_1B4907520();
  v61 = (_QWORD *)swift_allocObject();
  v61[3] = 0;
  v61[4] = 0;
  v61[2] = v42;
  v70 = sub_1B433D828;
  v71 = v61;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v69 = sub_1B424F0EC;
  *((_QWORD *)&v69 + 1) = &block_descriptor_16;
  v62 = _Block_copy(&aBlock);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_release();
  objc_msgSend(v45, sel_saveWithQueue_completion_, v60, v62);
  _Block_release(v62);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B41F5470((uint64_t)&v72);
  return v75;
}

void TTRRemindersListInteractorSectionsCapability.delete(_:option:)(void *a1, unsigned __int8 a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;
  int v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  void *v46;
  _QWORD *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  void *v56;
  _BYTE v57[16];
  id v58;
  __int128 v59;
  uint64_t v60;
  _UNKNOWN **v61;
  _BYTE v62[40];
  unint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, void *);
  void *v66;
  uint64_t (*v67)(uint64_t);
  _QWORD *v68;
  _BYTE v69[40];
  _QWORD v70[8];

  swift_beginAccess();
  if (!MEMORY[0x1B5E3D8DC](v3 + 16))
  {
    memset(v70, 0, 40);
    v9 = a2;
    if (a2)
      goto LABEL_3;
LABEL_7:
    if (a3)
    {
      v21 = a1;
      v22 = a3;
      v23 = objc_msgSend(v21, sel_list);
      sub_1B41F48B0((uint64_t)v70, (uint64_t)&v63);
      sub_1B41F48B0((uint64_t)&v63, (uint64_t)v69);
      v24 = v22;
      v25 = v23;
      v26 = objc_msgSend(v24, sel_updateList_, v25);
      sub_1B41F48B0((uint64_t)v69, (uint64_t)v62);
      if (qword_1ED4ED780 != -1)
        swift_once();
      v27 = (id)static TTRUserDefaults.appUserDefaults;

      sub_1B41F5470((uint64_t)v69);
      type metadata accessor for TTRListEditor();
      v28 = swift_allocObject();
      v60 = type metadata accessor for TTRUserDefaults();
      v61 = &protocol witness table for TTRUserDefaults;
      *(_QWORD *)&v59 = v27;
      *(_BYTE *)(v28 + 64) = 0;
      *(_QWORD *)(v28 + 16) = v26;
      sub_1B41F4990((uint64_t)v62, v28 + 24);
      swift_beginAccess();
      *(_BYTE *)(v28 + 64) = 0;
      sub_1B4217B90(&v59, v28 + 72);
      sub_1B41F5470((uint64_t)&v63);

      TTRListEditor.deleteSection(_:)(v21);
      swift_release();

      goto LABEL_13;
    }
    v49 = a1;
    v50 = objc_msgSend(v49, sel_list);
    v51 = (void *)MEMORY[0x1E0C80A78](v50);
    v58 = v49;
    sub_1B46F695C(v51, (uint64_t)v70, 0, 0, (void (*)(uint64_t))sub_1B433D884);

    sub_1B41F5470((uint64_t)v70);
    return;
  }
  v7 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v70, v3, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v7);
  swift_unknownObjectRelease();
  v9 = a2;
  if (!a2)
    goto LABEL_7;
LABEL_3:
  if (v9 == 1)
  {
    if (a3)
    {
      v10 = a1;
      v11 = a3;
      v12 = objc_msgSend(v10, sel_smartList);
      sub_1B41F48B0((uint64_t)v70, (uint64_t)&v63);
      sub_1B41F48B0((uint64_t)&v63, (uint64_t)v69);
      v13 = objc_msgSend(v11, sel_updateSmartList_, v12);
      type metadata accessor for TTRSmartListEditor();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v13;
      sub_1B41F4990((uint64_t)v69, v14 + 24);
      *(_BYTE *)(v14 + 64) = 0;
      sub_1B41F5470((uint64_t)&v63);

      v15 = objc_msgSend(*(id *)(v14 + 16), sel_saveRequest);
      v16 = objc_msgSend(v15, sel_updateSmartListSection_, v10);

      objc_msgSend(v16, sel_removeFromSmartList);
      v17 = objc_msgSend(v10, sel_objectID);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v17;
      v19 = v17;
      v20 = sub_1B44F9FB4();
      sub_1B4235FD0(v20, (uint64_t)sub_1B433D870, v18);

      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
LABEL_13:
      sub_1B41F5470((uint64_t)v70);
      return;
    }
    v39 = a1;
    v40 = objc_msgSend(v39, sel_smartList);
    v58 = v39;
    v41 = objc_msgSend((id)MEMORY[0x1E0C80A78](v40), sel_store);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B49131A0;
    *(_QWORD *)(v42 + 32) = v40;
    v63 = v42;
    sub_1B4906DC4();
    v43 = v63;
    v44 = v40;
    v45 = (void *)sub_1B46F6CD0(v63, (uint64_t)v41, 0, (uint64_t)v70, 0, (void (*)(uint64_t))sub_1B433D878, (uint64_t)v57);
    sub_1B41F47C8();
    v46 = (void *)sub_1B4907520();
    v47 = (_QWORD *)swift_allocObject();
    v47[3] = 0;
    v47[4] = 0;
    v47[2] = v43;
    v67 = sub_1B433D990;
    v68 = v47;
    v63 = MEMORY[0x1E0C809B0];
    v64 = 1107296256;
    v48 = &block_descriptor_26;
  }
  else
  {
    if (a3)
    {
      v29 = a1;
      v30 = a3;
      v31 = objc_msgSend(v29, sel_parentTemplate);
      sub_1B41F48B0((uint64_t)v70, (uint64_t)&v63);
      sub_1B41F48B0((uint64_t)&v63, (uint64_t)v69);
      v32 = objc_msgSend(v30, sel_updateTemplate_, v31);
      type metadata accessor for TTRTemplateEditor();
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = v32;
      sub_1B41F4990((uint64_t)v69, v33 + 24);
      *(_BYTE *)(v33 + 64) = 0;
      sub_1B41F5470((uint64_t)&v63);

      v34 = objc_msgSend(*(id *)(v33 + 16), sel_saveRequest);
      v35 = objc_msgSend(v34, sel_updateTemplateSection_, v29);

      objc_msgSend(v35, sel_removeFromParentTemplate);
      v36 = objc_msgSend(v29, sel_objectID);
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = v36;
      v38 = v36;
      sub_1B41F4DC0((uint64_t)sub_1B433D838, v37);

      swift_release();
      swift_release();

      goto LABEL_13;
    }
    v39 = a1;
    v52 = objc_msgSend(v39, sel_parentTemplate);
    v58 = v39;
    v41 = objc_msgSend((id)MEMORY[0x1E0C80A78](v52), sel_store);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1B49131A0;
    *(_QWORD *)(v53 + 32) = v52;
    v63 = v53;
    sub_1B4906DC4();
    v54 = v63;
    v44 = v52;
    v45 = (void *)sub_1B46F6D00(v63, (uint64_t)v41, 0, (uint64_t)v70, 0, sub_1B433D840, (uint64_t)v57);
    sub_1B41F47C8();
    v46 = (void *)sub_1B4907520();
    v55 = (_QWORD *)swift_allocObject();
    v55[3] = 0;
    v55[4] = 0;
    v55[2] = v54;
    v67 = sub_1B433D990;
    v68 = v55;
    v63 = MEMORY[0x1E0C809B0];
    v64 = 1107296256;
    v48 = &block_descriptor_16_0;
  }
  v65 = sub_1B424F0EC;
  v66 = v48;
  v56 = _Block_copy(&v63);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_release();
  objc_msgSend(v45, sel_saveWithQueue_completion_, v46, v56);
  _Block_release(v56);

  swift_bridgeObjectRelease();
  sub_1B41F5470((uint64_t)v70);

}

uint64_t sub_1B433C06C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_saveRequest);
  v4 = objc_msgSend(v3, sel_updateSmartListSection_, a2);

  objc_msgSend(v4, sel_removeFromSmartList);
  v5 = objc_msgSend(a2, sel_objectID);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = v5;
  v8 = sub_1B44F9FB4();
  sub_1B4235FD0(v8, (uint64_t)sub_1B433D988, v6);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1B433C154(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_saveRequest);
  v4 = objc_msgSend(v3, sel_updateTemplateSection_, a2);

  objc_msgSend(v4, sel_removeFromParentTemplate);
  v5 = objc_msgSend(a2, sel_objectID);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = v5;
  sub_1B41F4DC0((uint64_t)sub_1B433D98C, v6);
  swift_release();

}

void TTRRemindersListInteractorSectionsCapability.addReminders(with:toExistingSection:in:initialSectionIDByReminderID:option:)(Swift::OpaquePointer a1, void *a2, void *a3, char a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  unsigned __int8 v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  void *v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  void *v91;
  _BYTE v92[16];
  void *rawValue;
  void *v94;
  uint64_t v95;
  void *v96;
  void (*ObjectType)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  void (*v98)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  __int128 v99;
  uint64_t v100;
  _UNKNOWN **v101;
  _BYTE v102[40];
  __int128 aBlock;
  __int128 v104;
  uint64_t (*v105)(uint64_t);
  _QWORD *v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a6)
      {
        swift_beginAccess();
        if (MEMORY[0x1B5E3D8DC](v6 + 16))
        {
          v12 = *(_QWORD *)(v6 + 24);
          ObjectType = (void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))swift_getObjectType();
          v98 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))(v12 + 8);
          v13 = a5;
          v14 = a3;
          v15 = a2;
          v16 = a6;
          v17 = v14;
          a5 = v13;
          v18 = v16;
          a2 = v15;
          v98(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v12);
          swift_unknownObjectRelease();
        }
        else
        {
          v105 = 0;
          aBlock = 0u;
          v104 = 0u;
          v50 = a3;
          v51 = a6;
          v52 = v50;
          v53 = v51;
        }
        sub_1B41F48B0((uint64_t)&aBlock, (uint64_t)&v107);
        v54 = a3;
        v55 = objc_msgSend(a6, sel_updateSmartList_, v54);

        type metadata accessor for TTRSmartListEditor();
        v56 = swift_allocObject();
        *(_QWORD *)(v56 + 16) = v55;
        sub_1B41F4990((uint64_t)&v107, v56 + 24);
        *(_BYTE *)(v56 + 64) = 0;
        sub_1B41F5470((uint64_t)&aBlock);

        v57 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v58 = sub_1B420EEF4(v57);
        swift_bridgeObjectRelease();
        TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v58, a2, a5);
LABEL_29:

        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      swift_beginAccess();
      if (MEMORY[0x1B5E3D8DC](v6 + 16))
      {
        v35 = *(_QWORD *)(v6 + 24);
        v36 = swift_getObjectType();
        v37 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v35 + 8);
        v38 = a3;
        v37(&v107, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v36, v35);
        v39 = (id)swift_unknownObjectRelease();
      }
      else
      {
        v109 = 0;
        v107 = 0u;
        v108 = 0u;
        v39 = a3;
      }
      rawValue = a1._rawValue;
      v94 = a2;
      v95 = a5;
      v80 = objc_msgSend(a3, sel_store, MEMORY[0x1E0C80A78](v39).n128_f64[0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
      v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_1B49131A0;
      *(_QWORD *)(v81 + 32) = a3;
      *(_QWORD *)&aBlock = v81;
      sub_1B4906DC4();
      v82 = aBlock;
      v83 = a3;
      v84 = (void *)sub_1B46F6CD0(aBlock, (uint64_t)v80, 0, (uint64_t)&v107, 0, (void (*)(uint64_t))sub_1B433D8D4, (uint64_t)v92);
      sub_1B41F47C8();
      v85 = (void *)sub_1B4907520();
      v86 = (_QWORD *)swift_allocObject();
      v86[3] = 0;
      v86[4] = 0;
      v86[2] = v82;
      v105 = sub_1B433D990;
      v106 = v86;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v87 = &block_descriptor_40_0;
    }
    else
    {
      if (a6)
      {
        swift_beginAccess();
        if (MEMORY[0x1B5E3D8DC](v6 + 16))
        {
          v28 = *(_QWORD *)(v6 + 24);
          ObjectType = (void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))swift_getObjectType();
          v98 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))(v28 + 8);
          v29 = a5;
          v30 = a3;
          v31 = a2;
          v32 = a6;
          v33 = v30;
          a5 = v29;
          v34 = v32;
          a2 = v31;
          v98(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v28);
          swift_unknownObjectRelease();
        }
        else
        {
          v105 = 0;
          aBlock = 0u;
          v104 = 0u;
          v72 = a3;
          v73 = a6;
          v74 = v72;
          v75 = v73;
        }
        sub_1B41F48B0((uint64_t)&aBlock, (uint64_t)&v107);
        v54 = a3;
        v76 = objc_msgSend(a6, sel_updateTemplate_, v54);

        type metadata accessor for TTRTemplateEditor();
        v77 = swift_allocObject();
        *(_QWORD *)(v77 + 16) = v76;
        sub_1B41F4990((uint64_t)&v107, v77 + 24);
        *(_BYTE *)(v77 + 64) = 0;
        sub_1B41F5470((uint64_t)&aBlock);

        v78 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v79 = sub_1B420EEF4(v78);
        swift_bridgeObjectRelease();
        TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v79, a2, a5);
        goto LABEL_29;
      }
      swift_beginAccess();
      if (MEMORY[0x1B5E3D8DC](v6 + 16))
      {
        v45 = *(_QWORD *)(v6 + 24);
        v46 = swift_getObjectType();
        v47 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v45 + 8);
        v48 = a3;
        v47(&v107, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v46, v45);
        v49 = (id)swift_unknownObjectRelease();
      }
      else
      {
        v109 = 0;
        v107 = 0u;
        v108 = 0u;
        v49 = a3;
      }
      rawValue = a1._rawValue;
      v94 = a2;
      v95 = a5;
      v80 = objc_msgSend(a3, sel_store, MEMORY[0x1E0C80A78](v49).n128_f64[0]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = xmmword_1B49131A0;
      *(_QWORD *)(v88 + 32) = a3;
      *(_QWORD *)&aBlock = v88;
      sub_1B4906DC4();
      v89 = aBlock;
      v83 = a3;
      v84 = (void *)sub_1B46F6D00(aBlock, (uint64_t)v80, 0, (uint64_t)&v107, 0, (void (*)(uint64_t))sub_1B433D8AC, (uint64_t)v92);
      sub_1B41F47C8();
      v85 = (void *)sub_1B4907520();
      v90 = (_QWORD *)swift_allocObject();
      v90[3] = 0;
      v90[4] = 0;
      v90[2] = v89;
      v105 = sub_1B433D990;
      v106 = v90;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v87 = &block_descriptor_33_1;
    }
    *(_QWORD *)&v104 = sub_1B424F0EC;
    *((_QWORD *)&v104 + 1) = v87;
    v91 = _Block_copy(&aBlock);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_release();
    objc_msgSend(v84, sel_saveWithQueue_completion_, v85, v91);
    _Block_release(v91);

    swift_bridgeObjectRelease();
    sub_1B41F5470((uint64_t)&v107);

  }
  else if (a6)
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v6 + 16))
    {
      v19 = *(_QWORD *)(v6 + 24);
      v98 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))a1._rawValue;
      v20 = a5;
      v21 = swift_getObjectType();
      ObjectType = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v19 + 8);
      v22 = a2;
      v23 = a3;
      v24 = a6;
      v25 = v23;
      a2 = v22;
      v26 = v24;
      v27 = v21;
      a5 = v20;
      a1._rawValue = v98;
      ObjectType(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v27, v19);
      swift_unknownObjectRelease();
    }
    else
    {
      v105 = 0;
      aBlock = 0u;
      v104 = 0u;
      v59 = a3;
      v60 = a6;
      v61 = v59;
      v62 = v60;
    }
    sub_1B41F48B0((uint64_t)&aBlock, (uint64_t)&v107);
    v63 = a3;
    v64 = objc_msgSend(a6, sel_updateList_, v63);
    sub_1B41F48B0((uint64_t)&v107, (uint64_t)v102);
    if (qword_1ED4ED780 != -1)
      swift_once();
    v65 = (id)static TTRUserDefaults.appUserDefaults;

    sub_1B41F5470((uint64_t)&v107);
    type metadata accessor for TTRListEditor();
    v66 = swift_allocObject();
    v100 = type metadata accessor for TTRUserDefaults();
    v101 = &protocol witness table for TTRUserDefaults;
    *(_QWORD *)&v99 = v65;
    *(_BYTE *)(v66 + 64) = 0;
    *(_QWORD *)(v66 + 16) = v64;
    sub_1B41F4990((uint64_t)v102, v66 + 24);
    swift_beginAccess();
    *(_BYTE *)(v66 + 64) = 0;
    sub_1B4217B90(&v99, v66 + 72);
    sub_1B41F5470((uint64_t)&aBlock);

    v67 = _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v68 = sub_1B420EEF4(v67);
    swift_bridgeObjectRelease();
    TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v68, a2, a5);
    swift_bridgeObjectRelease();
    v69 = objc_msgSend(v63, sel_groceryContext);
    if (v69)
    {
      v70 = v69;
      v71 = objc_msgSend(v69, sel_shouldCategorizeGroceryItems);

      if ((v71 & 1) != 0)
        TTRListEditor.categorizeGroceryItems(withReminderIDs:)(a1);
    }

    swift_release();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v6 + 16))
    {
      v40 = *(_QWORD *)(v6 + 24);
      v41 = swift_getObjectType();
      v42 = *(void (**)(__int128 *__return_ptr, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v40 + 8);
      v43 = a3;
      v42(&aBlock, v6, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v41, v40);
      v44 = (id)swift_unknownObjectRelease();
    }
    else
    {
      v105 = 0;
      aBlock = 0u;
      v104 = 0u;
      v44 = a3;
    }
    MEMORY[0x1E0C80A78](v44);
    rawValue = a1._rawValue;
    v94 = a2;
    v95 = a5;
    v96 = a3;
    sub_1B46F695C(a3, (uint64_t)&aBlock, 0, 0, sub_1B433D8FC);
    sub_1B41F5470((uint64_t)&aBlock);

  }
}

uint64_t _s15RemindersUICore44TTRRemindersListInteractorSectionsCapabilityC3add_17toExistingSection2in07initialK14IDByReminderID6optionySaySo11REMReminderCG_AA010TTRSectionP0OAA0cdefG6TargetOSDySo09REMObjectP0CAMGSgAA16TTREditingOptionOtF_0(unint64_t a1, void *a2, void *a3, char a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  void *v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  Swift::OpaquePointer v19;
  void *v20;

  if (a1 >> 62)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v12 = sub_1B49081B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v13 = (void *)MEMORY[0x1E0DEE9D8];
  if (!v12)
  {
LABEL_11:
    v19._rawValue = v13;
    TTRRemindersListInteractorSectionsCapability.addReminders(with:toExistingSection:in:initialSectionIDByReminderID:option:)(v19, a2, a3, a4, a5, a6);
    return swift_bridgeObjectRelease();
  }
  v20 = (void *)MEMORY[0x1E0DEE9D8];
  result = sub_1B4907F28();
  if ((v12 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x1B5E3C268](v15, a1);
      else
        v16 = *(id *)(a1 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      v18 = objc_msgSend(v16, sel_objectID);

      sub_1B4907F04();
      sub_1B4907F34();
      sub_1B4907F40();
      sub_1B4907F10();
    }
    while (v12 != v15);
    v13 = v20;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void TTRRemindersListInteractorSectionsCapability.updateOrderingOfSections(withSectionIDsOrdering:in:initialSectionIDsOrdering:option:)(Swift::OpaquePointer a1, void *a2, char a3, void *a4, void *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  void (*v13)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t);
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t);
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *rawValue;
  void *v80;
  void *v81;
  __int128 v82;
  uint64_t v83;
  _UNKNOWN **v84;
  _BYTE v85[40];
  _BYTE v86[40];
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  Swift::OpaquePointer_optional v90;
  Swift::OpaquePointer_optional v91;
  Swift::OpaquePointer_optional v92;

  if (a3)
  {
    if (a3 == 1)
    {
      if (a5)
      {
        swift_beginAccess();
        if (MEMORY[0x1B5E3D8DC](v5 + 2))
        {
          v10 = v5[3];
          ObjectType = swift_getObjectType();
          rawValue = a1._rawValue;
          v12 = a4;
          v13 = *(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v10 + 8);
          v14 = a2;
          v15 = a5;
          v16 = v14;
          v17 = v15;
          v13(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, ObjectType, v10);
          a4 = v12;
          a1._rawValue = rawValue;
          swift_unknownObjectRelease();
        }
        else
        {
          v89 = 0;
          v87 = 0u;
          v88 = 0u;
          v53 = a2;
          v54 = a5;
          v55 = v53;
          v56 = v54;
        }
        sub_1B41F48B0((uint64_t)&v87, (uint64_t)v86);
        v57 = a2;
        v58 = objc_msgSend(a5, sel_updateSmartList_, v57);

        type metadata accessor for TTRSmartListEditor();
        v59 = swift_allocObject();
        *(_QWORD *)(v59 + 16) = v58;
        sub_1B41F4990((uint64_t)v86, v59 + 24);
        *(_BYTE *)(v59 + 64) = 0;
        sub_1B41F5470((uint64_t)&v87);

        v90.value._rawValue = a4;
        TTRSmartListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v90);
LABEL_26:

LABEL_27:
        swift_release();

        return;
      }
      v34 = v5[8];
      __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1B49131A0;
      *(_QWORD *)(v35 + 32) = a2;
      *(_QWORD *)&v87 = v35;
      sub_1B4906DC4();
      v36 = v87;
      v37 = a2;
      v38 = objc_msgSend(v37, sel_store);
      swift_beginAccess();
      if (MEMORY[0x1B5E3D8DC](v5 + 2))
      {
        v39 = v5[3];
        v40 = swift_getObjectType();
        (*(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v39 + 8))(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v40, v39);
        swift_unknownObjectRelease();
      }
      else
      {
        v89 = 0;
        v87 = 0u;
        v88 = 0u;
      }
      v73 = type metadata accessor for TTRSmartListEditor();
      v76 = MEMORY[0x1E0C80A78](v73);
      (*(void (**)(uint64_t, uint64_t, id, __int128 *, uint64_t (*)(uint64_t)))(v34 + 8))(v76, v36, v38, &v87, sub_1B433D914);
    }
    else
    {
      if (a5)
      {
        swift_beginAccess();
        if (MEMORY[0x1B5E3D8DC](v5 + 2))
        {
          v26 = v5[3];
          v27 = swift_getObjectType();
          v81 = a1._rawValue;
          v28 = a4;
          v29 = *(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v26 + 8);
          v30 = a2;
          v31 = a5;
          v32 = v30;
          v33 = v31;
          v29(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v27, v26);
          a4 = v28;
          a1._rawValue = v81;
          swift_unknownObjectRelease();
        }
        else
        {
          v89 = 0;
          v87 = 0u;
          v88 = 0u;
          v67 = a2;
          v68 = a5;
          v69 = v67;
          v70 = v68;
        }
        sub_1B41F48B0((uint64_t)&v87, (uint64_t)v86);
        v57 = a2;
        v71 = objc_msgSend(a5, sel_updateTemplate_, v57);

        type metadata accessor for TTRTemplateEditor();
        v72 = swift_allocObject();
        *(_QWORD *)(v72 + 16) = v71;
        sub_1B41F4990((uint64_t)v86, v72 + 24);
        *(_BYTE *)(v72 + 64) = 0;
        sub_1B41F5470((uint64_t)&v87);

        v92.value._rawValue = a4;
        TTRTemplateEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v92);
        goto LABEL_26;
      }
      v48 = v5[8];
      __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1B49131A0;
      *(_QWORD *)(v49 + 32) = a2;
      *(_QWORD *)&v87 = v49;
      sub_1B4906DC4();
      v50 = v87;
      v37 = a2;
      v38 = objc_msgSend(v37, sel_store);
      swift_beginAccess();
      if (MEMORY[0x1B5E3D8DC](v5 + 2))
      {
        v51 = v5[3];
        v52 = swift_getObjectType();
        (*(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v51 + 8))(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v52, v51);
        swift_unknownObjectRelease();
      }
      else
      {
        v89 = 0;
        v87 = 0u;
        v88 = 0u;
      }
      v75 = type metadata accessor for TTRTemplateEditor();
      v78 = MEMORY[0x1E0C80A78](v75);
      (*(void (**)(uint64_t, uint64_t, id, __int128 *, uint64_t (*)(uint64_t)))(v48 + 8))(v78, v50, v38, &v87, sub_1B433D908);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    if (a5)
    {
      swift_beginAccess();
      if (MEMORY[0x1B5E3D8DC](v5 + 2))
      {
        v18 = v5[3];
        v19 = swift_getObjectType();
        v80 = a1._rawValue;
        v20 = a4;
        v21 = *(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v18 + 8);
        v22 = a2;
        v23 = a5;
        v24 = v22;
        v25 = v23;
        v21(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v19, v18);
        a4 = v20;
        a1._rawValue = v80;
        swift_unknownObjectRelease();
      }
      else
      {
        v89 = 0;
        v87 = 0u;
        v88 = 0u;
        v60 = a2;
        v61 = a5;
        v62 = v60;
        v63 = v61;
      }
      sub_1B41F48B0((uint64_t)&v87, (uint64_t)v86);
      v57 = a2;
      v64 = objc_msgSend(a5, sel_updateList_, v57);
      sub_1B41F48B0((uint64_t)v86, (uint64_t)v85);
      if (qword_1ED4ED780 != -1)
        swift_once();
      v65 = (id)static TTRUserDefaults.appUserDefaults;

      sub_1B41F5470((uint64_t)v86);
      type metadata accessor for TTRListEditor();
      v66 = swift_allocObject();
      v84 = &protocol witness table for TTRUserDefaults;
      v83 = type metadata accessor for TTRUserDefaults();
      *(_QWORD *)&v82 = v65;
      *(_BYTE *)(v66 + 64) = 0;
      *(_QWORD *)(v66 + 16) = v64;
      sub_1B41F4990((uint64_t)v85, v66 + 24);
      swift_beginAccess();
      *(_BYTE *)(v66 + 64) = 0;
      sub_1B4217B90(&v82, v66 + 72);
      sub_1B41F5470((uint64_t)&v87);

      v91.value._rawValue = a4;
      TTRListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:)(a1, v91);

      goto LABEL_27;
    }
    v41 = v5[8];
    __swift_project_boxed_opaque_existential_1(v5 + 4, v5[7]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B49131A0;
    *(_QWORD *)(v42 + 32) = a2;
    *(_QWORD *)&v87 = v42;
    sub_1B4906DC4();
    v43 = v87;
    v44 = a2;
    v45 = objc_msgSend(v44, sel_store);
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v5 + 2))
    {
      v46 = v5[3];
      v47 = swift_getObjectType();
      (*(void (**)(__int128 *__return_ptr, _QWORD *, _UNKNOWN **, uint64_t, uint64_t))(v46 + 8))(&v87, v5, &protocol witness table for TTRRemindersListInteractorSectionsCapability, v47, v46);
      swift_unknownObjectRelease();
    }
    else
    {
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    v74 = type metadata accessor for TTRListEditor();
    v77 = MEMORY[0x1E0C80A78](v74);
    (*(void (**)(uint64_t, uint64_t, id, __int128 *, uint64_t (*)(uint64_t)))(v41 + 8))(v77, v43, v45, &v87, sub_1B433D920);

    swift_bridgeObjectRelease();
  }
  sub_1B41F5470((uint64_t)&v87);
}

void sub_1B433D6A4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v9 = sub_1B420EEF4(a2);
  swift_bridgeObjectRelease();
  TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)(v9, a3, a4);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a5, sel_groceryContext);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_shouldCategorizeGroceryItems);

    if (v12)
      TTRListEditor.categorizeGroceryItems(withReminderIDs:)((Swift::OpaquePointer)a2);
  }
}

uint64_t sub_1B433D754(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v9 = sub_1B420EEF4(a2);
  swift_bridgeObjectRelease();
  a5(v9, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t TTRRemindersListInteractorSectionsCapability.deinit()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t TTRRemindersListInteractorSectionsCapability.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B433D828(uint64_t a1)
{
  _QWORD *v1;

  return sub_1B42753A4(a1, v1[2], v1[3], v1[4]);
}

void sub_1B433D838(uint64_t a1)
{
  uint64_t v1;

  sub_1B4666E98(a1, *(void **)(v1 + 16));
}

void sub_1B433D840(uint64_t a1)
{
  uint64_t v1;

  sub_1B433C154(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B433D84C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B433D870(uint64_t a1)
{
  uint64_t v1;

  return sub_1B44FBFE4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B433D878(uint64_t a1)
{
  uint64_t v1;

  return sub_1B433C06C(a1, *(void **)(v1 + 16));
}

void sub_1B433D884()
{
  uint64_t v0;

  TTRListEditor.deleteSection(_:)(*(void **)(v0 + 16));
}

uint64_t sub_1B433D8AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1B433D754(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(uint64_t, uint64_t, uint64_t))TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:));
}

uint64_t sub_1B433D8D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B433D754(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (void (*)(uint64_t, uint64_t, uint64_t))TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:));
}

void sub_1B433D8FC(uint64_t a1)
{
  uint64_t v1;

  sub_1B433D6A4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1B433D908(uint64_t a1)
{
  return sub_1B433D92C(a1, (uint64_t (*)(_QWORD, _QWORD))TTRTemplateEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B433D914(uint64_t a1)
{
  return sub_1B433D92C(a1, (uint64_t (*)(_QWORD, _QWORD))TTRSmartListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B433D920(uint64_t a1)
{
  return sub_1B433D92C(a1, (uint64_t (*)(_QWORD, _QWORD))TTRListEditor.updateOrderingOfSections(withSectionIDsOrdering:initialSectionIDsOrdering:));
}

uint64_t sub_1B433D92C(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

ValueMetadata *type metadata accessor for TTRRemindersListInteractorSectionsCapabilityTarget()
{
  return &type metadata for TTRRemindersListInteractorSectionsCapabilityTarget;
}

uint64_t type metadata accessor for TTRRemindersListInteractorSectionsCapability()
{
  return objc_opt_self();
}

uint64_t sub_1B433D9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t TTRTipContentView.tip.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TTRTipContentView.assetColor.getter()
{
  return swift_retain();
}

uint64_t TTRTipContentView.init(tip:assetColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for TTRTipContentView(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for TTRTipContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TTRTipContentView);
}

uint64_t TTRTipContentView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];

  v25 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 24);
  v3 = sub_1B4905CB4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E188);
  v4 = sub_1B49061C4();
  sub_1B49063D4();
  v5 = sub_1B49061C4();
  v31[0] = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CE9370], v3);
  v31[1] = sub_1B433DCCC();
  v6 = MEMORY[0x1E0CD9C20];
  v30[0] = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v4, v31);
  v30[1] = sub_1B433DD18();
  MEMORY[0x1B5E3D6D8](v6, v5, v30);
  v7 = sub_1B4906680();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = sub_1B49061C4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v22 - v16;
  v26 = v2;
  v27 = v23;
  v28 = v24;
  sub_1B490635C();
  sub_1B4906674();
  sub_1B49063EC();
  v18 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDFCC0], v7);
  sub_1B4906518();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v29[0] = v18;
  v29[1] = MEMORY[0x1E0CD9758];
  MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v11, v29);
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v17, v14, v11);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  v19(v25, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v20)(v17, v11);
}

unint64_t sub_1B433DCCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF09E190;
  if (!qword_1EF09E190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E188);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF09E190);
  }
  return result;
}

unint64_t sub_1B433DD18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF09E198[0];
  if (!qword_1EF09E198[0])
  {
    v1 = sub_1B49063D4();
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDCFB8], v1);
    atomic_store(result, qword_1EF09E198);
  }
  return result;
}

uint64_t sub_1B433DD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[2];
  _QWORD v42[3];

  v35 = a3;
  v36 = a1;
  v40 = a4;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B4905CB4();
  v38 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E188);
  v11 = sub_1B49061C4();
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - v12;
  sub_1B49063D4();
  v14 = sub_1B49061C4();
  v37 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v22 = v36;
  v21(v7, v36, a2, v18);
  v23 = v35;
  sub_1B4905CC0();
  v42[2] = *(_QWORD *)(v22 + *(int *)(type metadata accessor for TTRTipContentView(0, a2, v23, v24) + 36));
  v25 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CE9370], v8);
  sub_1B490650C();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  v26 = sub_1B433DCCC();
  v42[0] = v25;
  v42[1] = v26;
  v27 = MEMORY[0x1E0CD9C20];
  v28 = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v11, v42);
  sub_1B4906500();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  v29 = sub_1B433DD18();
  v41[0] = v28;
  v41[1] = v29;
  MEMORY[0x1B5E3D6D8](v27, v14, v41);
  v30 = v37;
  v31 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v31(v20, v16, v14);
  v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32(v16, v14);
  v31(v40, v20, v14);
  return ((uint64_t (*)(char *, uint64_t))v32)(v20, v14);
}

uint64_t sub_1B433E018@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1B433DD60(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1B433E024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B433E05C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B433E0D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B433E180(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1B433E1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_1B433E220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B433E28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B433E2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1B433E34C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B433E3C8 + 4 * byte_1B49186A0[v10]))();
  }
}

void sub_1B433E454(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1B433E548()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B433E5CCLL);
}

void sub_1B433E550(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B433E558);
  JUMPOUT(0x1B433E5CCLL);
}

void sub_1B433E5A0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B433E5CCLL);
}

void sub_1B433E5A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B433E5CCLL);
}

uint64_t sub_1B433E5B0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1B433E5BCLL);
    *(_QWORD *)((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = a2;
LABEL_6:
    JUMPOUT(0x1B433E5CCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_1B433E5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[2];
  _QWORD v9[2];

  v0 = sub_1B4905CB4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E188);
  v1 = sub_1B49061C4();
  sub_1B49063D4();
  v2 = sub_1B49061C4();
  v9[0] = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CE9370], v0);
  v9[1] = sub_1B433DCCC();
  v3 = MEMORY[0x1E0CD9C20];
  v8[0] = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v9);
  v8[1] = sub_1B433DD18();
  MEMORY[0x1B5E3D6D8](v3, v2, v8);
  v4 = sub_1B4906680();
  v5 = sub_1B49061C4();
  v7[0] = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDFCC0], v4);
  v7[1] = MEMORY[0x1E0CD9758];
  return MEMORY[0x1B5E3D6D8](v3, v5, v7);
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.resultsPublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF098A10);
  sub_1B433E750();
  return sub_1B4905F6C();
}

unint64_t sub_1B433E750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF09E220;
  if (!qword_1EF09E220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF098A10);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1EF09E220);
  }
  return result;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF098A10);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1B4905E64();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.init()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF098A10);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1B4905E64();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.search(title:listScope:)()
{
  uint64_t v0;

  return sub_1B433E85C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1B433E85C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.syncHandleAutoCompleteReminders(_:for:imagesByReminderObjectID:reminderAndList:)()
{
  return 0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t TTRReminderTitleAttributesNoOpInteractor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1B433E8C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF098A10);
  sub_1B433E750();
  return sub_1B4905F6C();
}

uint64_t sub_1B433E914()
{
  return 0;
}

uint64_t type metadata accessor for TTRReminderTitleAttributesNoOpInteractor()
{
  return objc_opt_self();
}

uint64_t sub_1B433E948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1ED4E9688);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4E9688);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t TTRAppDelegateUtils.TriggerSyncReason.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 0x7669746341707061;
  v3 = 0x7463616544707061;
  if (a2 != 2)
    v3 = a1;
  if (a2 != 1)
    v2 = v3;
  if (a2)
    v4 = v2;
  else
    v4 = 0x636E75614C707061;
  sub_1B433EA7C(a1, a2);
  return v4;
}

uint64_t sub_1B433EA7C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return result;
}

uint64_t sub_1B433EA90()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[1];
  v2 = 0x7669746341707061;
  v3 = 0x7463616544707061;
  if (v1 != 2)
    v3 = *v0;
  if (v1 != 1)
    v2 = v3;
  if (v1)
    v4 = v2;
  else
    v4 = 0x636E75614C707061;
  sub_1B433EA7C(*v0, v1);
  return v4;
}

void static TTRAppDelegateUtils.triggerSync(store:reason:)(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t aBlock[6];

  if (a3)
  {
    if (qword_1ED4E96A8 != -1)
      swift_once();
    v6 = sub_1B49058F4();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED4E9688);
    sub_1B433EA7C(a2, a3);
    sub_1B433EA7C(a2, a3);
    v7 = sub_1B49058E8();
    v8 = sub_1B49073A0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      aBlock[0] = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = 0xEF6E6F6974617669;
      v12 = 0x7463616544707061;
      if (a3 != 2)
      {
        v12 = a2;
        v11 = a3;
      }
      if (a3 == 1)
        v13 = 0x7669746341707061;
      else
        v13 = v12;
      if (a3 == 1)
        v14 = 0xED00006E6F697461;
      else
        v14 = v11;
      sub_1B433EA7C(a2, a3);
      sub_1B41EF7C8(v13, v14, aBlock);
      sub_1B4907B68();
      swift_bridgeObjectRelease();
      sub_1B433F4A8(a2, a3);
      sub_1B433F4A8(a2, a3);
      _os_log_impl(&dword_1B41C2000, v7, v8, "AppDelegate: trigger throttled sync {reason: %s}", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v10, -1, -1);
      MEMORY[0x1B5E3D7E0](v9, -1, -1);
    }
    else
    {
      sub_1B433F4A8(a2, a3);
      sub_1B433F4A8(a2, a3);
    }

    v24 = *MEMORY[0x1E0D84A88];
    aBlock[4] = (uint64_t)sub_1B433EFF4;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B424F0EC;
    aBlock[3] = (uint64_t)&block_descriptor_17;
    v25 = _Block_copy(aBlock);
    objc_msgSend(a1, sel_triggerThrottledSyncWithReason_discretionary_completion_, v24, 0, v25);
    _Block_release(v25);
  }
  else
  {
    if (qword_1ED4E96A8 != -1)
      swift_once();
    v15 = sub_1B49058F4();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED4E9688);
    v16 = sub_1B49058E8();
    v17 = sub_1B49073A0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)v18 = 136315138;
      sub_1B41EF7C8(0x636E75614C707061, 0xEB00000000646568, aBlock);
      sub_1B4907B68();
      _os_log_impl(&dword_1B41C2000, v16, v17, "AppDelegate: trigger account update and sync {reason: %s}", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v19, -1, -1);
      MEMORY[0x1B5E3D7E0](v18, -1, -1);
    }

    v20 = objc_msgSend(a1, sel_nonUserInteractiveStore);
    if (qword_1ED4E96D0 != -1)
      swift_once();
    v21 = sub_1B490674C();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED4E96B0);
    sub_1B41F47C8();
    v23 = (void *)sub_1B4907520();
    sub_1B433F4BC(v22, (uint64_t)v23, v20);

  }
}

uint64_t sub_1B433EF94()
{
  uint64_t v0;

  v0 = sub_1B490674C();
  __swift_allocate_value_buffer(v0, qword_1ED4E96B0);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED4E96B0) = 2;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

void sub_1B433EFF4(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (a1)
  {
    v2 = a1;
    if (qword_1ED4E96A8 != -1)
      swift_once();
    v3 = sub_1B49058F4();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED4E9688);
    v4 = a1;
    v5 = a1;
    oslog = sub_1B49058E8();
    v6 = sub_1B4907388();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v13 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE420);
      v10 = sub_1B4906A94();
      sub_1B41EF7C8(v10, v11, &v13);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, oslog, v6, "AppDelegate: sync failed {error: %s}", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v8, -1, -1);
      MEMORY[0x1B5E3D7E0](v7, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1B433F1E8(void *a1)
{
  void *v2;
  _QWORD v3[6];

  v3[4] = sub_1B433F270;
  v3[5] = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 1107296256;
  v3[2] = sub_1B433F438;
  v3[3] = &block_descriptor_6_2;
  v2 = _Block_copy(v3);
  objc_msgSend(a1, sel_updateAccountsAndSync_completion_, 1, v2);
  _Block_release(v2);
}

void sub_1B433F270(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (a3)
  {
    if (qword_1ED4E96A8 != -1)
      swift_once();
    v4 = sub_1B49058F4();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED4E9688);
    v5 = a3;
    v6 = a3;
    oslog = sub_1B49058E8();
    v7 = sub_1B4907388();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13 = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = sub_1B4907B08();
      sub_1B41EF7C8(v10, v11, &v13);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, oslog, v7, "Unable to update cloud accounts %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v9, -1, -1);
      MEMORY[0x1B5E3D7E0](v8, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1B433F438(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

uint64_t sub_1B433F4A8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B433F4BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v27 = a1;
  v28 = a3;
  v32 = a2;
  v3 = sub_1B4906758();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B490677C();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B490674C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B4906794();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - v18;
  sub_1B4906788();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  sub_1B43BBA14((uint64_t)v12);
  MEMORY[0x1B5E3AB40](v16);
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  v21 = swift_allocObject();
  v22 = v28;
  *(_QWORD *)(v21 + 16) = v28;
  aBlock[4] = sub_1B433F9C4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B41F41EC;
  aBlock[3] = &block_descriptor_3_0;
  v23 = _Block_copy(aBlock);
  v24 = v22;
  sub_1B4906770();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1B41F4580();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE3D0);
  sub_1B41F45C8();
  sub_1B4907CC4();
  MEMORY[0x1B5E3B86C](v19, v8, v5, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  v20(v19, v13);
  return swift_release();
}

ValueMetadata *type metadata accessor for TTRAppDelegateUtils()
{
  return &type metadata for TTRAppDelegateUtils;
}

unint64_t destroy for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s15RemindersUICore19TTRAppDelegateUtilsO17TriggerSyncReasonOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return a1;
}

_QWORD *assignWithCopy for TTRAppDelegateUtils.TriggerSyncReason(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRAppDelegateUtils.TriggerSyncReason(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TTRAppDelegateUtils.TriggerSyncReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

_QWORD *sub_1B433F970(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRAppDelegateUtils.TriggerSyncReason()
{
  return &type metadata for TTRAppDelegateUtils.TriggerSyncReason;
}

uint64_t sub_1B433F9A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B433F9C4()
{
  uint64_t v0;

  sub_1B433F1E8(*(void **)(v0 + 16));
}

uint64_t sub_1B433F9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09E2D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09E2D0);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static TTRLocalizableStrings.showButtonTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.hideButtonTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.GroupDetail.includedListsCountText(withCount:)(uint64_t a1)
{
  return sub_1B4340744(a1);
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.cancelButtonTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.notificationAccessTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.contactsAccessTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.deleteReminderPrivacyWarningTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.deleteReminderPrivacyWarningMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingMessage.getter()
{
  if ((sub_1B4903E48() & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.singleItemTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)(uint64_t a1)
{
  return sub_1B4340744(a1);
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsSubtitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = a1;
  v6 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Common.imagesCountText(withCount:)(uint64_t a1)
{
  return sub_1B4340744(a1);
}

uint64_t sub_1B4340744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Common.recurrenceFormat.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.pinText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.unpinText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.pinListText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.unpinListText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.showListInfoText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteCompletedRemindersConfirmationText(withCount:isForGroceries:supportRecentlyDeletedList:)(uint64_t a1, char a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = a1;
  v7 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertTitleForDeletingSections(isDeletingMoreThanOneSection:currentLayout:)(char a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertMessageForDeletingSections(isDeletingMoreThanOneSection:hasCompletedReminders:currentLayout:)(char a1, char a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      if ((a2 & 1) != 0)
      {
        if (qword_1ED4EE550 != -1)
          swift_once();
      }
      else if (qword_1ED4EE550 != -1)
      {
        swift_once();
      }
    }
    else if ((a2 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
    }
    else if (qword_1ED4EE550 != -1)
    {
      swift_once();
    }
  }
  else if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.newSectionPlaceholder(listLayout:)(char a1)
{
  return sub_1B434ABDC(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.existingSectionPlaceholder(listLayout:)(char a1)
{
  return sub_1B434AD40(a1 & 1);
}

uint64_t static TTRLocalizableStrings.RemindersList.moveToSectionFormat()()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.delete.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.showDetails.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.flag.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.unflag.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.indent.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.outdent.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToTomorrow.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToThisWeekend.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.postponeToNextWeekend.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.setCustomDateAndTime.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.RemindersList.SwipeActions.move.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.allTagsText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.untagMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.removeTagMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.convertToTagMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v2 + 16) = xmmword_1B4911D70;
  v4 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;

  if (a2 <= 0)
    v5 = a3 > 0;
  else
    v5 = 2 * (a3 > 0);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B434AEB4((uint64_t)v41);
  sub_1B428B7F0(v41, (uint64_t)&v42);
  if (v45)
  {
    if (v45 == 1)
    {
      v6 = v42;
      v8 = v43;
      v7 = v44;
      if (v5)
      {
        if (v5 == 1)
        {
          if (qword_1ED4EE550 != -1)
            swift_once();
          sub_1B4903434();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
          v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B4911D80;
          v10 = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
          v11 = sub_1B41EA638();
          *(_OWORD *)(v9 + 32) = v6;
          *(_QWORD *)(v9 + 96) = v10;
          *(_QWORD *)(v9 + 104) = v11;
          *(_QWORD *)(v9 + 64) = v11;
          *(_QWORD *)(v9 + 72) = v8;
          v12 = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v9 + 80) = v7;
          v13 = MEMORY[0x1E0DEB490];
LABEL_21:
          *(_QWORD *)(v9 + 136) = v12;
          *(_QWORD *)(v9 + 144) = v13;
          *(_QWORD *)(v9 + 112) = a3;
          goto LABEL_42;
        }
        if (qword_1ED4EE550 != -1)
          swift_once();
        sub_1B4903434();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1B49136F0;
        v26 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
        v27 = sub_1B41EA638();
        *(_OWORD *)(v25 + 32) = v6;
        *(_QWORD *)(v25 + 96) = v26;
        *(_QWORD *)(v25 + 104) = v27;
        *(_QWORD *)(v25 + 64) = v27;
        *(_QWORD *)(v25 + 72) = v8;
        *(_QWORD *)(v25 + 80) = v7;
        v28 = MEMORY[0x1E0DEB418];
        v29 = MEMORY[0x1E0DEB490];
        goto LABEL_41;
      }
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1B4911D80;
      v21 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      v22 = sub_1B41EA638();
      *(_OWORD *)(v20 + 32) = v6;
      *(_QWORD *)(v20 + 96) = v21;
      *(_QWORD *)(v20 + 104) = v22;
      *(_QWORD *)(v20 + 64) = v22;
      *(_QWORD *)(v20 + 72) = v8;
      v23 = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v20 + 80) = v7;
      v24 = MEMORY[0x1E0DEB490];
    }
    else
    {
      v17 = v42;
      v18 = v43;
      if (v5)
      {
        if (v5 == 1)
        {
          if (qword_1ED4EE550 != -1)
            swift_once();
          sub_1B4903434();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
          v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B4911D80;
          *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
          v19 = sub_1B41EA638();
          *(_OWORD *)(v9 + 32) = v17;
          v12 = MEMORY[0x1E0DEB418];
          v13 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v9 + 96) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v9 + 104) = v13;
          *(_QWORD *)(v9 + 64) = v19;
          *(_QWORD *)(v9 + 72) = v18;
          goto LABEL_21;
        }
        if (qword_1ED4EE550 != -1)
          swift_once();
        sub_1B4903434();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1B49136F0;
        *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
        v38 = sub_1B41EA638();
        *(_OWORD *)(v25 + 32) = v17;
        v28 = MEMORY[0x1E0DEB418];
        v29 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v25 + 96) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v25 + 104) = v29;
        *(_QWORD *)(v25 + 64) = v38;
        *(_QWORD *)(v25 + 72) = v18;
LABEL_41:
        *(_QWORD *)(v25 + 136) = v28;
        *(_QWORD *)(v25 + 144) = v29;
        *(_QWORD *)(v25 + 112) = a2;
        *(_QWORD *)(v25 + 176) = v28;
        *(_QWORD *)(v25 + 184) = v29;
        *(_QWORD *)(v25 + 152) = a3;
        goto LABEL_42;
      }
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1B4911D80;
      *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
      v37 = sub_1B41EA638();
      *(_OWORD *)(v20 + 32) = v17;
      v23 = MEMORY[0x1E0DEB418];
      v24 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v20 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v20 + 104) = v24;
      *(_QWORD *)(v20 + 64) = v37;
      *(_QWORD *)(v20 + 72) = v18;
    }
    *(_QWORD *)(v20 + 136) = v23;
    *(_QWORD *)(v20 + 144) = v24;
    *(_QWORD *)(v20 + 112) = a2;
    goto LABEL_42;
  }
  v46 = v42;
  if (v5)
  {
    if (v5 == 1)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B4911DA0;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      v15 = sub_1B41EA638();
      *(_OWORD *)(v14 + 32) = v46;
      v16 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v14 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v14 + 104) = v16;
      *(_QWORD *)(v14 + 64) = v15;
      *(_QWORD *)(v14 + 72) = a3;
    }
    else
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B4911D80;
      *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
      v34 = sub_1B41EA638();
      *(_OWORD *)(v33 + 32) = v46;
      v35 = MEMORY[0x1E0DEB418];
      v36 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v33 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v33 + 104) = v36;
      *(_QWORD *)(v33 + 64) = v34;
      *(_QWORD *)(v33 + 72) = a2;
      *(_QWORD *)(v33 + 136) = v35;
      *(_QWORD *)(v33 + 144) = v36;
      *(_QWORD *)(v33 + 112) = a3;
    }
  }
  else
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1B4911DA0;
    *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
    v31 = sub_1B41EA638();
    *(_OWORD *)(v30 + 32) = v46;
    v32 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v30 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v30 + 104) = v32;
    *(_QWORD *)(v30 + 64) = v31;
    *(_QWORD *)(v30 + 72) = a2;
  }
LABEL_42:
  v39 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a3 <= 0)
    v6 = a4 > 0;
  else
    v6 = 2 * (a4 > 0);
  v7 = sub_1B4906AE8();
  v9 = v8;
  if (v6)
  {
    if (v6 == 1)
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1B4911DA0;
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      v11 = sub_1B41EA638();
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v9;
      v12 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v10 + 104) = v12;
      *(_QWORD *)(v10 + 64) = v11;
      *(_QWORD *)(v10 + 72) = a4;
    }
    else
    {
      if (qword_1ED4EE550 != -1)
        swift_once();
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1B4911D80;
      *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
      v17 = sub_1B41EA638();
      *(_QWORD *)(v16 + 32) = v7;
      *(_QWORD *)(v16 + 40) = v9;
      v18 = MEMORY[0x1E0DEB418];
      v19 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v16 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v16 + 104) = v19;
      *(_QWORD *)(v16 + 64) = v17;
      *(_QWORD *)(v16 + 72) = a3;
      *(_QWORD *)(v16 + 136) = v18;
      *(_QWORD *)(v16 + 144) = v19;
      *(_QWORD *)(v16 + 112) = a4;
    }
  }
  else
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1B4911DA0;
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v14 = sub_1B41EA638();
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v9;
    v15 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v13 + 96) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v13 + 104) = v15;
    *(_QWORD *)(v13 + 64) = v14;
    *(_QWORD *)(v13 + 72) = a3;
  }
  v20 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16) == 1 && (sub_1B4205F88(a1), v2))
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
    v10 = sub_1B4906AF4();
    v11 = v4;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B4906B78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v3 + 64) = sub_1B41EA638();
    *(_QWORD *)(v3 + 32) = v10;
    *(_QWORD *)(v3 + 40) = v11;
    v5 = sub_1B4906A70();
  }
  else
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1B4911D70;
    v7 = *(_QWORD *)(a1 + 16);
    v8 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v6 + 64) = v8;
    *(_QWORD *)(v6 + 32) = v7;
    v5 = sub_1B4906A40();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a5 < 1)
  {
    if (a6 > 0)
    {
      if (qword_1ED4EE550 == -1)
        goto LABEL_9;
      goto LABEL_10;
    }
  }
  else if (a6 > 0)
  {
    if (qword_1ED4EE550 == -1)
      goto LABEL_9;
    goto LABEL_10;
  }
  if (qword_1ED4EE550 != -1)
LABEL_10:
    swift_once();
LABEL_9:
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B4911DA0;
  v7 = sub_1B4906AE8();
  v9 = v8;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1B41EA638();
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  v12 = sub_1B4906AE8();
  *(_QWORD *)(v6 + 96) = v10;
  *(_QWORD *)(v6 + 104) = v11;
  *(_QWORD *)(v6 + 72) = v12;
  *(_QWORD *)(v6 + 80) = v13;
  v14 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)(uint64_t a1)
{
  if (a1 == 1)
  {
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_6;
  }
  if (qword_1ED4EE550 != -1)
LABEL_6:
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2[2] != 1)
  {
    if (a1 == 1)
    {
      if (qword_1ED4EE550 == -1)
        goto LABEL_11;
    }
    else if (qword_1ED4EE550 == -1)
    {
LABEL_11:
      sub_1B4903434();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1B4911D70;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
      sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
      v7 = sub_1B49069BC();
      v9 = v8;
      *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 + 64) = sub_1B41EA638();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v9;
      v5 = sub_1B4906A40();
      goto LABEL_12;
    }
    swift_once();
    goto LABEL_11;
  }
  if (a1 == 1)
  {
    if (qword_1ED4EE550 == -1)
      goto LABEL_9;
    goto LABEL_13;
  }
  if (qword_1ED4EE550 != -1)
LABEL_13:
    swift_once();
LABEL_9:
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1B41EA638();
  v4 = a2[5];
  *(_QWORD *)(v3 + 32) = a2[4];
  *(_QWORD *)(v3 + 40) = v4;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A40();
LABEL_12:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    if (a1 == 1)
    {
      if (qword_1ED4EE550 == -1)
        return sub_1B4903434();
    }
    else if (qword_1ED4EE550 == -1)
    {
      return sub_1B4903434();
    }
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    if (qword_1ED4EE550 == -1)
      return sub_1B4903434();
    goto LABEL_12;
  }
  if (qword_1ED4EE550 != -1)
LABEL_12:
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.savingDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.namePlaceholderText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.includeText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedReminders.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B49033EC();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B49033F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B4903410();
  MEMORY[0x1E0C80A78](v12);
  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v13 = swift_allocObject();
  v14 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v13 + 16) = xmmword_1B4911D70;
  v15 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a1;
  sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B42CA4BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAF040], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v7, *MEMORY[0x1E0CAF020], v21);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4903404();
  v16 = sub_1B49036D4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  v17 = sub_1B490761C();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t static TTRLocalizableStrings.Templates.templatesListTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.noTemplates.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.editTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateAlertTitle(templateName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateWithPublicLinkAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.shareTemplate.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.updateLink.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.manageLink.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.sendLink.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.stopSharing.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.shareTemplateViewTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.updateLinkViewTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.dateAndTimeLinkOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.dateAndTimeLinkOptionDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.tagsLinkOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.tagsLinkOptionDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.locationsLinkOption.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.locationsLinkOptionDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.showPreview.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.title.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTime.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeLocations.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTimeAndTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeDateTimeAndLocations.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeTagsAndLocations.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.includeThreeAttributes.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.templatePreview.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingErrorAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingRetryLaterErrorAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertStopSharingButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.copyIcloudLink.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.addListFromPublicTemplateButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertMessage.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotSupportedAlertTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCreating.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdating.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.othersColumnTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.addSectionActionText(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)(char a1)
{
  return sub_1B434A92C(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)(char a1)
{
  return sub_1B434AAA8(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.moveToSectionText(withSelectedRemindersCount:listLayout:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = a1;
  v6 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.moveToSectionText(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelectionText(withSelectedRemindersCount:listLayout:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1B4911D70;
  v5 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = a1;
  v6 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)(char a1)
{
  return sub_1B434A7F8(a1 & 1);
}

uint64_t static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

id static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id inserted;
  unint64_t v20;

  if (qword_1ED4EE550 != -1)
    swift_once();
  v0 = sub_1B4903434();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B4911D70;
  v4 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v5 = qword_1ED4EE268;
  v6 = v4;
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(inited + 40) = sub_1B46CBA1C(4);
  v7 = sub_1B41E3640(inited);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v8 + 32) = v6;
  v9 = v6;
  *(_QWORD *)(v8 + 40) = sub_1B46CBA1C(5);
  v10 = sub_1B41E3640(v8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B41F8AA4(v10);
  swift_bridgeObjectRelease();
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v12 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1B421E608();
  v13 = (void *)sub_1B490680C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithString_attributes_, v12, v13, 0x80000001B4950380);

  v15 = sub_1B41F8AA4(v7);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B49131A0;
  *(_QWORD *)(v16 + 32) = v14;
  v20 = v16;
  sub_1B4906DC4();
  v17 = v14;
  inserted = _sSo18NSAttributedStringC15RemindersUICoreE09formattedB06format0F10Attributes25attributedStringsToInsertABSS_SDySo0aB3KeyaypGSayABGtFZ_0(v0, v2, v15, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return inserted;
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertTitle(listLayout:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertMessage(name:listLayout:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;

  if ((a3 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1B41EA638();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v6 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t static TTRLocalizableStrings.Sections.restoreSectionNameAlertRestoreButton.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.TodayList.overdueSectionName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.TodayList.allDaySectionName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.TodayList.timedRemindersSectionName.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.TodayList.timedRemindersSectionDescription.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartLists.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.filteringTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.filteringTagsBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsSummary.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.whyTags.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsCreating.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.usingTagsBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsAdding.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsBrowser.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsTap.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.LearnMore.smartListsBody.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.sharedListSummaryForShareSheet.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter()
{
  if (qword_1ED4EE550 != -1)
    swift_once();
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Toolbar.moveItemsString(withCount:)(uint64_t a1)
{
  if (a1)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t static TTRLocalizableStrings.Toolbar.deleteItemsString(withCount:)(uint64_t a1)
{
  if (a1)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434A7F8(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434A92C(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434AAA8(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434ABDC(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434AD40(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
  }
  else if (qword_1ED4EE550 != -1)
  {
    swift_once();
  }
  return sub_1B4903434();
}

uint64_t sub_1B434AEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E2F0);
  sub_1B41E1C74(&qword_1EF09E2F8, &qword_1EF09E2F0, MEMORY[0x1E0DEB3D0]);
  v2 = sub_1B4904FF4();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 != 2)
  {
    v4 = v3 - 1;
    if (v3 == 1)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      v5 = sub_1B4906AE8();
      v7 = v6;
      result = swift_bridgeObjectRelease();
      v4 = 0;
      v9 = 0;
      v10 = 0;
    }
    else if (v3 < 3)
    {
      result = swift_bridgeObjectRelease();
      v5 = 0;
      v4 = 0;
      v9 = 0;
      v10 = 0;
      v7 = 0xE000000000000000;
    }
    else
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      v5 = sub_1B4906AE8();
      v7 = v13;
      result = swift_bridgeObjectRelease();
      v9 = 0;
      v10 = 2;
    }
    goto LABEL_9;
  }
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906AE8();
  v7 = v11;
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 16) >= 2uLL)
  {
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_bridgeObjectRelease();
    v4 = sub_1B4906AE8();
    v9 = v12;
    result = swift_bridgeObjectRelease();
    v10 = 1;
LABEL_9:
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO21linkCreatedStatusText4dateS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO21linkUpdatedStatusText4dateS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED4EE550 != -1)
    swift_once();
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1B41EA638();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v5 = sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

id _s15RemindersUICore21TTRLocalizableStringsO9TemplatesO31linkExpiresStatusAttributedText4date14baseAttributes07expiresjM0So18NSAttributedStringCSS_SDySo0oP3KeyaypGANtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t inited;
  id v15;
  id inserted;
  unint64_t v18;

  if (qword_1ED4EE550 != -1)
    swift_once();
  v6 = sub_1B4903434();
  v8 = v7;
  sub_1B4903434();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B4911D70;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1B41EA638();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4906A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1B421E608();
  v12 = (void *)sub_1B490680C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_initWithString_attributes_, v11, v12, 0x80000001B4951AC0);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E63F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B49131A0;
  *(_QWORD *)(inited + 32) = v13;
  v18 = inited;
  sub_1B4906DC4();
  v15 = v13;
  inserted = _sSo18NSAttributedStringC15RemindersUICoreE09formattedB06format0F10Attributes25attributedStringsToInsertABSS_SDySo0aB3KeyaypGSayABGtFZ_0(v6, v8, a3, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return inserted;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.GroupDetail()
{
  return &type metadata for TTRLocalizableStrings.GroupDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Templates()
{
  return &type metadata for TTRLocalizableStrings.Templates;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sections()
{
  return &type metadata for TTRLocalizableStrings.Sections;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.LearnMore()
{
  return &type metadata for TTRLocalizableStrings.LearnMore;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Toolbar()
{
  return &type metadata for TTRLocalizableStrings.Toolbar;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.PrivacyAlert()
{
  return &type metadata for TTRLocalizableStrings.PrivacyAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ReminderNoteEditingStyles()
{
  return &type metadata for TTRLocalizableStrings.ReminderNoteEditingStyles;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sharing()
{
  return &type metadata for TTRLocalizableStrings.Sharing;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.AutoCategorization()
{
  return &type metadata for TTRLocalizableStrings.AutoCategorization;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.RemindersList.SwipeActions()
{
  return &type metadata for TTRLocalizableStrings.RemindersList.SwipeActions;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert()
{
  return &type metadata for TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.Sharing.Notifications()
{
  return &type metadata for TTRLocalizableStrings.Sharing.Notifications;
}

uint64_t sub_1B434B6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 && a5 != 2)
  {
    if (a5 != 1)
      return result;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t _s25HashtagNamesStringVariantOwxx(uint64_t a1)
{
  return sub_1B434B710(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1B434B710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 && a5 != 2)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s25HashtagNamesStringVariantOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B434B6A8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s25HashtagNamesStringVariantOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B434B6A8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1B434B710(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s25HashtagNamesStringVariantOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1B434B710(v4, v6, v5, v7, v9);
  return a1;
}

ValueMetadata *_s25HashtagNamesStringVariantOMa()
{
  return &_s25HashtagNamesStringVariantON;
}

uint64_t sub_1B434B88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09E300);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09E300);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t TTRSpotlightReminderView.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TTRSpotlightReminderView.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t TTRSpotlightReminderView.hasAttachment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t TTRSpotlightReminderView.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRSpotlightReminderView.hashtags.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRSpotlightReminderView.locationType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTRSpotlightReminderView(0);
  return sub_1B41EA51C(v1 + *(int *)(v3 + 40), a1, &qword_1EF09E3B8);
}

uint64_t type metadata accessor for TTRSpotlightReminderView(uint64_t a1)
{
  return sub_1B4204D08(a1, (uint64_t *)&unk_1EF09E4E8);
}

uint64_t TTRSpotlightReminderView.reminderID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTRSpotlightReminderView(0);
  return sub_1B41EA51C(v1 + *(int *)(v3 + 44), a1, &qword_1ED4E9EF8);
}

void TTRSpotlightReminderView.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v25 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3C0);
  v10 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TTRSpotlightReminderView(0);
  MEMORY[0x1E0C80A78](v28);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = swift_getKeyPath();
  v14[8] = 0;
  v15 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1B434BEF0();
  sub_1B4908510();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    sub_1B434BF34(*(id *)v14, v14[8]);
  }
  else
  {
    v16 = (uint64_t)v6;
    sub_1B4903848();
    v36 = 6;
    sub_1B41E11F0(&qword_1EF09E3D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v17 = v26;
    sub_1B4908264();
    v18 = v28;
    sub_1B41DF5E4((uint64_t)v9, (uint64_t)&v14[*(int *)(v28 + 44)], &qword_1ED4E9EF8);
    sub_1B4904F7C();
    v35 = 5;
    sub_1B41E11F0(&qword_1EF09E3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86158], MEMORY[0x1E0D86170]);
    sub_1B4908264();
    sub_1B41DF5E4(v16, (uint64_t)&v14[*(int *)(v18 + 40)], &qword_1EF09E3B8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
    v34 = 4;
    sub_1B434C25C(&qword_1EF09E3E0, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1B4908264();
    *((_QWORD *)v14 + 6) = v29;
    v33 = 3;
    *((_QWORD *)v14 + 4) = sub_1B4908240();
    *((_QWORD *)v14 + 5) = v19;
    v32 = 2;
    v14[25] = sub_1B490824C() & 1;
    v31 = 1;
    v14[24] = sub_1B490824C() & 1;
    v30 = 0;
    v20 = sub_1B4908258();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v17);
    if ((v22 & 1) != 0)
      v23 = 0;
    else
      v23 = v20;
    *((_QWORD *)v14 + 2) = v23;
    sub_1B41F3210((uint64_t)v14, v25, type metadata accessor for TTRSpotlightReminderView);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    sub_1B41EA5FC((uint64_t)v14, type metadata accessor for TTRSpotlightReminderView);
  }
}

unint64_t sub_1B434BEF0()
{
  unint64_t result;

  result = qword_1EF09E3C8;
  if (!qword_1EF09E3C8)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918F60, &type metadata for TTRSpotlightReminderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E3C8);
  }
  return result;
}

void sub_1B434BF34(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t TTRSpotlightReminderView.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  __int128 v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B434BEF0();
  sub_1B490851C();
  LOBYTE(v12) = 0;
  sub_1B49082DC();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1B49082C4();
    LOBYTE(v12) = 2;
    sub_1B49082C4();
    v12 = *(_OWORD *)(v3 + 32);
    v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E16B0);
    sub_1B434C25C(&qword_1EF09E3F0, &qword_1ED4E16B0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1B49082E8();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 48);
    v11 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E62F8);
    sub_1B434C1D8();
    sub_1B49082E8();
    type metadata accessor for TTRSpotlightReminderView(0);
    LOBYTE(v12) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    sub_1B434C2B8();
    sub_1B49082E8();
    LOBYTE(v12) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    sub_1B434C334();
    sub_1B49082E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1B434C1D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF09E3F8;
  if (!qword_1EF09E3F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4E62F8);
    v2 = sub_1B434C25C(&qword_1EF09E400, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF09E3F8);
  }
  return result;
}

uint64_t sub_1B434C25C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1B5E3D6D8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B434C2B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF09E408;
  if (!qword_1EF09E408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E3B8);
    v2 = sub_1B41E11F0(&qword_1EF09E410, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86158], MEMORY[0x1E0D86168]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF09E408);
  }
  return result;
}

unint64_t sub_1B434C334()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF09E418;
  if (!qword_1EF09E418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED4E9EF8);
    v2 = sub_1B41E11F0(&qword_1EF0B1F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF09E418);
  }
  return result;
}

uint64_t TTRSpotlightReminderView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;

  v51 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  MEMORY[0x1E0C80A78](v14);
  v42 = (uint64_t)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(_QWORD *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 24);
  v48 = *(unsigned __int8 *)(v1 + 25);
  v49 = v16;
  v17 = *(_QWORD *)(v1 + 40);
  v47 = *(_QWORD *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 48);
  v19 = type metadata accessor for TTRSpotlightReminderView(0);
  v20 = v1 + *(int *)(v19 + 40);
  v43 = v13;
  sub_1B41EA51C(v20, (uint64_t)v13, &qword_1EF09E3B8);
  v21 = v1 + *(int *)(v19 + 44);
  v44 = v10;
  sub_1B41EA51C(v21, (uint64_t)v10, &qword_1ED4E9EF8);
  v22 = *(void **)v1;
  v23 = *(_BYTE *)(v1 + 8);
  v45 = v18;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v46 = v17;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B434F9C8(v22, v23);
  v24 = sub_1B434F7D4(v22, v23);
  sub_1B434BF34(v22, v23);
  v25 = objc_msgSend(v24, sel_displayName);

  if (v25)
  {
    v26 = sub_1B4906A64();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  sub_1B434F9C8(v22, v23);
  v29 = sub_1B434F7D4(v22, v23);
  sub_1B434BF34(v22, v23);
  v30 = objc_msgSend(v29, sel_completionDate);

  if (v30)
  {
    sub_1B49037B8();

    v31 = sub_1B49037E8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 0, 1, v31);
  }
  else
  {
    v32 = sub_1B49037E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
  }
  sub_1B434F9C8(v22, v23);
  v33 = sub_1B434F7D4(v22, v23);
  sub_1B434BF34(v22, v23);
  v34 = objc_msgSend(v33, sel_dueDate);

  if (v34)
  {
    sub_1B49037B8();

    v35 = sub_1B49037E8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 0, 1, v35);
  }
  else
  {
    v36 = sub_1B49037E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v4, 1, 1, v36);
  }
  sub_1B434F9C8(v22, v23);
  v37 = sub_1B434F7D4(v22, v23);
  sub_1B434BF34(v22, v23);
  v38 = objc_msgSend(v37, sel_allDay);

  v39 = v42;
  sub_1B434C7C0(v50, v49, v48, v47, v46, v45, (uint64_t)v43, (uint64_t)v44, v42, v26, v28, (uint64_t)v7, (uint64_t)v4, (uint64_t)v38);
  return sub_1B41EA59C(v39, v51, type metadata accessor for TTRSpotlightReminderView.ReminderView);
}

uint64_t type metadata accessor for TTRSpotlightReminderView.ReminderView(uint64_t a1)
{
  return sub_1B4204D08(a1, (uint64_t *)&unk_1EF09E708);
}

uint64_t sub_1B434C7C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;

  v42 = a6;
  v43 = a7;
  v48 = a13;
  v49 = a14;
  v46 = a8;
  v47 = a12;
  v44 = a10;
  v45 = a11;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v41 - v24;
  v26 = sub_1B4904244();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  sub_1B41EA51C((uint64_t)v25, (uint64_t)v22, &qword_1EF09E420);
  sub_1B4906620();
  sub_1B41EA560((uint64_t)v25, &qword_1EF09E420);
  v27 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v28 = v27[5];
  v50 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E9A0);
  sub_1B4906620();
  *(_OWORD *)(a9 + v28) = v51;
  v29 = v27[6];
  v50 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E9A8);
  sub_1B4906620();
  *(_OWORD *)(a9 + v29) = v51;
  *(_QWORD *)(a9 + v27[7]) = a1;
  *(_BYTE *)(a9 + v27[8]) = a2;
  *(_BYTE *)(a9 + v27[9]) = a3;
  v30 = (_QWORD *)(a9 + v27[10]);
  *v30 = a4;
  v30[1] = a5;
  v31 = v43;
  *(_QWORD *)(a9 + v27[11]) = v42;
  sub_1B41DF5E4(v31, a9 + v27[12], &qword_1EF09E3B8);
  sub_1B41DF5E4(v46, a9 + v27[13], &qword_1ED4E9EF8);
  v32 = (_QWORD *)(a9 + v27[14]);
  v33 = v45;
  *v32 = v44;
  v32[1] = v33;
  sub_1B41DF5E4(v47, a9 + v27[15], &qword_1ED4EE300);
  sub_1B41DF5E4(v48, a9 + v27[16], &qword_1ED4EE300);
  *(_QWORD *)(a9 + v27[17]) = v49;
  v34 = a9 + v27[18];
  *(_QWORD *)v34 = swift_getKeyPath();
  *(_BYTE *)(v34 + 8) = 0;
  v35 = a9 + v27[19];
  *(_QWORD *)v35 = swift_getKeyPath();
  *(_BYTE *)(v35 + 8) = 0;
  v36 = a9 + v27[20];
  *(_QWORD *)v36 = swift_getKeyPath();
  *(_BYTE *)(v36 + 8) = 0;
  v37 = a9 + v27[21];
  *(_QWORD *)v37 = swift_getKeyPath();
  *(_BYTE *)(v37 + 8) = 0;
  v38 = a9 + v27[22];
  *(_QWORD *)v38 = swift_getKeyPath();
  *(_BYTE *)(v38 + 8) = 0;
  v39 = a9 + v27[23];
  result = swift_getKeyPath();
  *(_QWORD *)v39 = result;
  *(_BYTE *)(v39 + 8) = 0;
  return result;
}

uint64_t sub_1B434CAA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B434CAD0
                                                            + 4 * asc_1B4918970[*v0]))(0x797469726F697270, 0xE800000000000000);
}

uint64_t sub_1B434CAD0()
{
  return 0x64656767616C66;
}

uint64_t sub_1B434CAE8()
{
  return 0x6361747441736168;
}

uint64_t sub_1B434CB0C()
{
  return 0x7365746F6ELL;
}

uint64_t sub_1B434CB20()
{
  return 0x7367617468736168;
}

uint64_t sub_1B434CB34()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B434CB54()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1B434CB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B435C378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B434CB94()
{
  return 0;
}

void sub_1B434CBA0(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1B434CBAC()
{
  sub_1B434BEF0();
  return sub_1B4908534();
}

uint64_t sub_1B434CBD4()
{
  sub_1B434BEF0();
  return sub_1B4908540();
}

uint64_t sub_1B434CBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v45 = sub_1B49061E8();
  MEMORY[0x1E0C80A78](v45);
  v3 = (double *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (double *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7D0);
  MEMORY[0x1E0C80A78](v44);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B49062F0();
  v13 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v14 = v1 + *(int *)(v13 + 72);
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_1B4355A88(*(_QWORD *)v14, v16);
  v17 = sub_1B434F9D4(v15, v16);
  sub_1B4355BB0(v15, v16);
  *(_QWORD *)v6 = v12;
  v6[1] = v17;
  *((_BYTE *)v6 + 16) = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7D8);
  v19 = v1;
  sub_1B434CF94(v1, (uint64_t)v6 + *(int *)(v18 + 44));
  v20 = sub_1B4906704();
  sub_1B434F5D8(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, (uint64_t)v9, 0.0, 1, INFINITY, 0, v20, v21, &qword_1EF09E7C0, &qword_1EF09E7C8);
  sub_1B41EA560((uint64_t)v6, &qword_1EF09E7C0);
  v22 = *(_QWORD *)v14;
  LOBYTE(v15) = *(_BYTE *)(v14 + 8);
  sub_1B4355A88(*(_QWORD *)v14, v15);
  sub_1B434F9D4(v22, v15);
  sub_1B4355BB0(v22, v15);
  LOBYTE(v22) = sub_1B49063EC();
  sub_1B4906140();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_1B41EA51C((uint64_t)v9, (uint64_t)v11, &qword_1EF09E7C8);
  v31 = &v11[*(int *)(v44 + 36)];
  *v31 = v22;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_1B41EA560((uint64_t)v9, &qword_1EF09E7C8);
  v32 = v19 + *(int *)(v13 + 92);
  v33 = *(_QWORD *)v32;
  LOBYTE(v22) = *(_BYTE *)(v32 + 8);
  sub_1B4355A88(*(_QWORD *)v32, v22);
  v34 = sub_1B434F9D4(v33, v22);
  sub_1B4355BB0(v33, v22);
  v35 = (char *)v3 + *(int *)(v45 + 20);
  v36 = *MEMORY[0x1E0CDB0C0];
  v37 = sub_1B4906338();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  *v3 = v34;
  v3[1] = v34;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E0);
  v39 = v46;
  v40 = v46 + *(int *)(v38 + 36);
  v41 = MEMORY[0x1E0CDA088];
  sub_1B41F3210((uint64_t)v3, v40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E8) + 36)) = 256;
  sub_1B41EA51C((uint64_t)v11, v39, &qword_1EF09E7D0);
  sub_1B41EA5FC((uint64_t)v3, (uint64_t (*)(_QWORD))v41);
  return sub_1B41EA560((uint64_t)v11, &qword_1EF09E7D0);
}

uint64_t sub_1B434CF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (**v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;

  v84 = a2;
  v70 = type metadata accessor for ImageAttachmentsView(0);
  MEMORY[0x1E0C80A78](v70);
  v72 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v71 = (uint64_t)&v70 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v6);
  v73 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)&v70 - v9;
  v10 = sub_1B49036D4();
  v76 = *(_QWORD *)(v10 - 8);
  v77 = v10;
  MEMORY[0x1E0C80A78](v10);
  v74 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7F0);
  MEMORY[0x1E0C80A78](v12);
  v83 = (uint64_t *)((char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v85 = (uint64_t)&v70 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7F8);
  MEMORY[0x1E0C80A78](v16);
  v82 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v70 - v19;
  MEMORY[0x1E0C80A78](v21);
  v80 = (char *)&v70 - v22;
  v23 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v81 = *(char **)(v23 - 8);
  v24 = v23;
  v79 = v23;
  v25 = *((_QWORD *)v81 + 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = type metadata accessor for ListBadge(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E800);
  MEMORY[0x1E0C80A78](v78);
  v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v70 - v32;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  sub_1B490662C();
  v34 = *(_OWORD *)(a1 + *(int *)(v24 + 20));
  v35 = a1;
  v86 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E808);
  sub_1B490662C();
  *(_QWORD *)&v28[*(int *)(v26 + 20)] = v87;
  sub_1B41F3210(a1, (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TTRSpotlightReminderView.ReminderView);
  v36 = (v81[80] + 16) & ~(unint64_t)v81[80];
  v37 = swift_allocObject();
  v38 = v37 + v36;
  v39 = (uint64_t)v80;
  sub_1B41EA59C((uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v38, type metadata accessor for TTRSpotlightReminderView.ReminderView);
  sub_1B41F3210((uint64_t)v28, (uint64_t)v30, type metadata accessor for ListBadge);
  v40 = (uint64_t (**)())&v30[*(int *)(v78 + 36)];
  *v40 = sub_1B435CA80;
  v40[1] = (uint64_t (*)())v37;
  v40[2] = 0;
  v40[3] = 0;
  sub_1B41EA5FC((uint64_t)v28, type metadata accessor for ListBadge);
  v81 = v30;
  v41 = (uint64_t)v33;
  sub_1B41DF5E4((uint64_t)v30, (uint64_t)v33, &qword_1EF09E800);
  *(_QWORD *)v20 = sub_1B4906368();
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E810);
  sub_1B434D9F4(v35, (uint64_t)&v20[*(int *)(v42 + 44)]);
  v43 = v39;
  sub_1B41DF5E4((uint64_t)v20, v39, &qword_1EF09E7F8);
  if (*(_BYTE *)(v35 + *(int *)(v79 + 36)) != 1)
    goto LABEL_10;
  v86 = *(_OWORD *)(v35 + *(int *)(v79 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E828);
  sub_1B490662C();
  v44 = v87;
  if (!v87)
    goto LABEL_10;
  if (!*(_QWORD *)(v87 + 16))
  {
    v45 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v75, 1, 1, v77);
    goto LABEL_9;
  }
  v45 = (uint64_t)v75;
  v46 = v76;
  v47 = v87 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  v49 = v77;
  v48(v75, v47, v77);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
  v50(v45, 0, 1, v49);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v49) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1B41EA560(v45, &qword_1ED4E9EC0);
LABEL_10:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E818);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v85, 1, 1, v61);
    v58 = (uint64_t)v83;
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v74, v45, v49);
  v51 = 1;
  if (*(_QWORD *)(v44 + 16) >= 2uLL)
  {
    v48(v73, v47 + *(_QWORD *)(v46 + 72), v49);
    v51 = 0;
  }
  swift_bridgeObjectRelease();
  v52 = (uint64_t)v73;
  v50((uint64_t)v73, v51, 1, v49);
  v53 = (uint64_t)v72;
  v54 = v74;
  v48(v72, (uint64_t)v74, v49);
  v55 = v70;
  sub_1B41EA51C(v52, v53 + *(int *)(v70 + 20), &qword_1ED4E9EC0);
  v56 = (uint64_t *)(v53 + *(int *)(v55 + 24));
  *v56 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  swift_storeEnumTagMultiPayload();
  v57 = v71;
  sub_1B41EA59C(v53, v71, type metadata accessor for ImageAttachmentsView);
  sub_1B41F3210(v57, v53, type metadata accessor for ImageAttachmentsView);
  v58 = (uint64_t)v83;
  *v83 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E838);
  sub_1B41F3210(v53, v58 + *(int *)(v59 + 48), type metadata accessor for ImageAttachmentsView);
  sub_1B41EA5FC(v57, type metadata accessor for ImageAttachmentsView);
  sub_1B41EA560(v52, &qword_1ED4E9EC0);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v54, v49);
  sub_1B41EA5FC(v53, type metadata accessor for ImageAttachmentsView);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E818);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v58, 0, 1, v60);
  sub_1B41DF5E4(v58, v85, &qword_1EF09E7F0);
LABEL_11:
  v62 = v41;
  v63 = (uint64_t)v81;
  sub_1B41EA51C(v41, (uint64_t)v81, &qword_1EF09E800);
  v64 = v43;
  v65 = v82;
  sub_1B41EA51C(v43, v82, &qword_1EF09E7F8);
  v66 = v85;
  sub_1B41EA51C(v85, v58, &qword_1EF09E7F0);
  v67 = v84;
  sub_1B41EA51C(v63, v84, &qword_1EF09E800);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E820);
  sub_1B41EA51C(v65, v67 + *(int *)(v68 + 48), &qword_1EF09E7F8);
  sub_1B41EA51C(v58, v67 + *(int *)(v68 + 64), &qword_1EF09E7F0);
  sub_1B41EA560(v66, &qword_1EF09E7F0);
  sub_1B41EA560(v64, &qword_1EF09E7F8);
  sub_1B41EA560(v62, &qword_1EF09E800);
  sub_1B41EA560(v58, &qword_1EF09E7F0);
  sub_1B41EA560(v65, &qword_1EF09E7F8);
  return sub_1B41EA560(v63, &qword_1EF09E800);
}

uint64_t sub_1B434D748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v23[1] = v3;
  v25 = (uint64_t)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B4903848();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v23 - v15;
  sub_1B41EA51C(a1 + *(int *)(v2 + 52), (uint64_t)v9, &qword_1ED4E9EF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1B41EA560((uint64_t)v9, &qword_1ED4E9EF8);
  v23[0] = *(_QWORD *)(v11 + 32);
  ((void (*)(char *, char *, uint64_t))v23[0])(v16, v9, v10);
  sub_1B4906F5C();
  v18 = sub_1B4906F80();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 0, 1, v18);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v19 = v25;
  sub_1B41F3210(a1, v25, type metadata accessor for TTRSpotlightReminderView.ReminderView);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + *(unsigned __int8 *)(v24 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  ((void (*)(unint64_t, char *, uint64_t))v23[0])(v22 + v20, v13, v10);
  sub_1B41EA59C(v19, v22 + v21, type metadata accessor for TTRSpotlightReminderView.ReminderView);
  sub_1B4462DD8((uint64_t)v6, (uint64_t)&unk_1EF09E8C8, v22);
  swift_release();
  sub_1B41EA560((uint64_t)v6, &qword_1ED4E6310);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

uint64_t sub_1B434D9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *KeyPath;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;

  v98 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E840);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v86 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E848);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v86 - v13;
  MEMORY[0x1E0C80A78](v15);
  v100 = (uint64_t)&v86 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
  MEMORY[0x1E0C80A78](v17);
  v91 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v86 - v20;
  v22 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v86 - v29;
  v31 = (uint64_t *)(a1 + *(int *)(v22 + 40));
  v32 = v31[1];
  v99 = v5;
  v101 = v8;
  v102 = v11;
  KeyPath = v31;
  v95 = (uint64_t)v14;
  if (v32)
  {
    v33 = *v31 & 0xFFFFFFFFFFFFLL;
    if ((v32 & 0x2000000000000000) != 0)
      v34 = HIBYTE(v32) & 0xF;
    else
      v34 = v33;
    LODWORD(v94) = v34 != 0;
  }
  else
  {
    LODWORD(v94) = 0;
  }
  v35 = *(int *)(v22 + 60);
  v36 = (int *)v22;
  v37 = a1;
  v96 = a1 + v35;
  sub_1B41EA51C(a1 + v35, (uint64_t)&v86 - v29, &qword_1ED4EE300);
  v38 = sub_1B49037E8();
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48);
  v40 = v39(v30, 1, v38);
  v41 = (uint64_t)v30;
  v42 = v37;
  sub_1B41EA560(v41, &qword_1ED4EE300);
  sub_1B41F3210(v37, (uint64_t)v24, type metadata accessor for TTRSpotlightReminderView.ReminderView);
  if (v40 == 1)
  {
    sub_1B41EA51C((uint64_t)&v24[v36[16]], (uint64_t)v27, &qword_1ED4EE300);
    sub_1B41EA5FC((uint64_t)v24, type metadata accessor for TTRSpotlightReminderView.ReminderView);
    v43 = v39(v27, 1, v38) != 1;
    sub_1B41EA560((uint64_t)v27, &qword_1ED4EE300);
  }
  else
  {
    sub_1B41EA5FC((uint64_t)v24, type metadata accessor for TTRSpotlightReminderView.ReminderView);
    v43 = 1;
  }
  v44 = v100;
  v45 = (uint64_t)v101;
  v46 = v36;
  v47 = v95;
  v90 = v42 + v46[12];
  sub_1B41EA51C(v90, (uint64_t)v21, &qword_1EF09E3B8);
  v48 = sub_1B4904F7C();
  v89 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
  v49 = v89(v21, 1, v48);
  sub_1B41EA560((uint64_t)v21, &qword_1EF09E3B8);
  v50 = v46[11];
  v51 = *(_QWORD *)(v42 + v50);
  v86 = v49;
  v88 = v50;
  if (v51)
  {
    if (v43)
    {
      v52 = 1;
    }
    else
    {
      v53 = *(_QWORD *)(v51 + 16);
      v52 = v49 != 1 || v53 != 0;
    }
  }
  else
  {
    v52 = v49 != 1 || v43;
  }
  v55 = v94;
  *(_QWORD *)v47 = sub_1B49062E4();
  *(_QWORD *)(v47 + 8) = 0x4018000000000000;
  *(_BYTE *)(v47 + 16) = 0;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E850);
  sub_1B434E160(v55, v52, v42, v47 + *(int *)(v56 + 44));
  sub_1B41DF5E4(v47, v44, &qword_1EF09E848);
  v57 = KeyPath[1];
  v87 = v43;
  if (v57)
  {
    v58 = *KeyPath;
    v59 = HIBYTE(v57) & 0xF;
    if ((v57 & 0x2000000000000000) == 0)
      v59 = v58 & 0xFFFFFFFFFFFFLL;
    if (v59)
    {
      KeyPath = (uint64_t *)swift_getKeyPath();
      v60 = *(_BYTE *)(v42 + v46[21] + 8);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v61 = swift_retain();
      v95 = sub_1B434FB94(v61, v60, 0x726F6C6F43, 0xE500000000000000);
      swift_release();
      v62 = *(_BYTE *)(v42 + v46[22] + 8);
      v63 = swift_retain();
      v94 = sub_1B434FB94(v63, v62, 1953394502, 0xE400000000000000);
      swift_release();
      v92 = swift_getKeyPath();
      v64 = MEMORY[0x1E0DEE9D8];
      v93 = 1;
      goto LABEL_30;
    }
    v58 = 0;
    v57 = 0;
  }
  else
  {
    v58 = 0;
  }
  v64 = 0;
  KeyPath = 0;
  v92 = 0;
  v93 = 0;
  v94 = 0;
  v95 = 0;
LABEL_30:
  v65 = sub_1B434E974(v96, v42 + v46[16]);
  if (v66)
  {
    v67 = v65;
    v68 = v66;
    v69 = v91;
    sub_1B41EA51C(v90, v91, &qword_1EF09E3B8);
    if (v89((char *)v69, 1, v48) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1B41EA560(v69, &qword_1EF09E3B8);
    }
    else
    {
      sub_1B41EA560(v69, &qword_1EF09E3B8);
      v70 = *(_QWORD *)(v42 + v88);
      if (!v70 || !*(_QWORD *)(v70 + 16))
      {
        v83 = v86 != 1;
        *(_QWORD *)v45 = sub_1B49062E4();
        *(_QWORD *)(v45 + 8) = 0;
        *(_BYTE *)(v45 + 16) = 0;
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E868);
        sub_1B434EC2C(v67, v68, v42, v87, v83, (_QWORD *)(v45 + *(int *)(v84 + 44)));
        swift_bridgeObjectRelease();
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E858);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v45, 0, 1, v85);
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
    }
  }
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E858);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v45, 1, 1, v71);
LABEL_37:
  v72 = (uint64_t)v102;
  sub_1B41EA51C(v44, (uint64_t)v102, &qword_1EF09E848);
  v73 = (uint64_t)v99;
  sub_1B41EA51C(v45, (uint64_t)v99, &qword_1EF09E840);
  v74 = v98;
  sub_1B41EA51C(v72, v98, &qword_1EF09E848);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E860);
  v76 = (uint64_t *)(v74 + *(int *)(v75 + 48));
  *v76 = v58;
  v76[1] = v57;
  v76[2] = 0;
  v76[3] = v64;
  v78 = v92;
  v77 = v93;
  v76[4] = (uint64_t)KeyPath;
  v76[5] = v77;
  v79 = v57;
  v80 = v94;
  v81 = v95;
  v76[6] = 0;
  v76[7] = v81;
  v76[8] = v78;
  v76[9] = v80;
  sub_1B41EA51C(v73, v74 + *(int *)(v75 + 64), &qword_1EF09E840);
  sub_1B435CAD8(v58, v79, 0, v64);
  sub_1B41EA560((uint64_t)v101, &qword_1EF09E840);
  sub_1B41EA560(v100, &qword_1EF09E848);
  sub_1B41EA560(v73, &qword_1EF09E840);
  sub_1B435CB54(v58, v79, 0, v64);
  return sub_1B41EA560((uint64_t)v102, &qword_1EF09E848);
}

void sub_1B434E160(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t KeyPath;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;

  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E880);
  MEMORY[0x1E0C80A78](v68);
  v73 = (uint64_t *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1B49065FC();
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E888);
  MEMORY[0x1E0C80A78](v67);
  v74 = (uint64_t *)((char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E890);
  MEMORY[0x1E0C80A78](v69);
  v76 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E898);
  MEMORY[0x1E0C80A78](v75);
  v70 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v77 = (uint64_t)&v67 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8A0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)&v67 - v21;
  v22 = sub_1B49058F4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v27 = REMReminderPriorityLevelForPriority();
  if (v27 < 1)
  {
    v29 = 0;
    v28 = 0xE000000000000000;
    goto LABEL_9;
  }
  switch(v27)
  {
    case 1:
      v28 = 0xE100000000000000;
      v29 = 33;
      goto LABEL_9;
    case 3:
      v28 = 0xE300000000000000;
      v29 = 2171169;
LABEL_9:
      v86 = a1;
      v87 = a2;
      v88 = v29;
      v89 = v28;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B4906B78();
      swift_bridgeObjectRelease();
      sub_1B4906B78();
      swift_bridgeObjectRelease();
      v83 = v89;
      v84 = v88;
      KeyPath = swift_getKeyPath();
      v30 = *(_BYTE *)(a3 + v26[19] + 8);
      v31 = swift_retain();
      v82 = sub_1B434FB94(v31, v30, 0x726F6C6F43, 0xE500000000000000);
      swift_release();
      v80 = swift_getKeyPath();
      v32 = a3 + v26[20];
      v33 = *(_BYTE *)(v32 + 8);
      v34 = swift_retain();
      v79 = sub_1B434FB94(v34, v33, 1953394502, 0xE400000000000000);
      swift_release();
      v78 = swift_getKeyPath();
      if (*(_BYTE *)(a3 + v26[8]) == 1)
      {
        v35 = sub_1B49065CC();
        v36 = v11;
        v37 = v71;
        v38 = v72;
        (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v36, *MEMORY[0x1E0CDF7D0], v72);
        v39 = swift_getKeyPath();
        v40 = v73;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v73 + *(int *)(v68 + 28), v36, v38);
        *v40 = v39;
        v41 = v74;
        sub_1B41EA51C((uint64_t)v40, (uint64_t)v74 + *(int *)(v67 + 36), &qword_1EF09E880);
        *v41 = v35;
        swift_retain();
        sub_1B41EA560((uint64_t)v40, &qword_1EF09E880);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
        swift_release();
        v42 = sub_1B490656C();
        v43 = swift_getKeyPath();
        v44 = (uint64_t)v70;
        v45 = v76;
        sub_1B41EA51C((uint64_t)v41, v76, &qword_1EF09E888);
        v46 = (uint64_t *)(v45 + *(int *)(v69 + 36));
        *v46 = v43;
        v46[1] = v42;
        sub_1B41EA560((uint64_t)v41, &qword_1EF09E888);
        LOBYTE(v43) = *(_BYTE *)(v32 + 8);
        v47 = swift_retain();
        v48 = sub_1B434FB94(v47, v43, 1953394502, 0xE400000000000000);
        swift_release();
        v49 = swift_getKeyPath();
        sub_1B41EA51C(v45, v44, &qword_1EF09E890);
        v50 = (uint64_t *)(v44 + *(int *)(v75 + 36));
        *v50 = v49;
        v50[1] = v48;
        sub_1B41EA560(v45, &qword_1EF09E890);
        v51 = v77;
        sub_1B41DF5E4(v44, v77, &qword_1EF09E898);
        sub_1B41EA51C(v51, v44, &qword_1EF09E898);
        *(_QWORD *)v19 = 0;
        v19[8] = 1;
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8B8);
        sub_1B41EA51C(v44, (uint64_t)&v19[*(int *)(v52 + 48)], &qword_1EF09E898);
        sub_1B41EA560(v51, &qword_1EF09E898);
        sub_1B41EA560(v44, &qword_1EF09E898);
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8A8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v19, 0, 1, v53);
        v54 = v85;
        sub_1B41DF5E4((uint64_t)v19, v85, &qword_1EF09E8A0);
      }
      else
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8A8);
        v54 = v85;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v85, 1, 1, v55);
      }
      v56 = 2;
      if ((v86 & 1) == 0)
        v56 = 3;
      v57 = v56 - (v87 & 1);
      sub_1B41EA51C(v54, (uint64_t)v19, &qword_1EF09E8A0);
      v59 = v83;
      v58 = v84;
      *(_QWORD *)a4 = v84;
      *(_QWORD *)(a4 + 8) = v59;
      *(_BYTE *)(a4 + 16) = 0;
      v61 = KeyPath;
      v60 = v82;
      *(_QWORD *)(a4 + 24) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(a4 + 32) = v61;
      *(_QWORD *)(a4 + 40) = v57;
      *(_BYTE *)(a4 + 48) = 0;
      *(_QWORD *)(a4 + 56) = v80;
      *(_QWORD *)(a4 + 64) = v60;
      v62 = (uint64_t)v19;
      v63 = v79;
      *(_QWORD *)(a4 + 72) = v78;
      *(_QWORD *)(a4 + 80) = v63;
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8B0);
      sub_1B41EA51C(v62, a4 + *(int *)(v64 + 48), &qword_1EF09E8A0);
      sub_1B435CB44(v58, v59, 0);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B41EA560(v54, &qword_1EF09E8A0);
      sub_1B41EA560(v62, &qword_1EF09E8A0);
      sub_1B435CBC0(v58, v59, 0);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 2:
      v28 = 0xE200000000000000;
      v29 = 8481;
      goto LABEL_9;
  }
  if (qword_1EF098228 != -1)
    swift_once();
  v65 = __swift_project_value_buffer(v22, (uint64_t)qword_1EF0AB608);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v65, v22);
  v66 = MEMORY[0x1E0DEE9D8];
  sub_1B41E292C(MEMORY[0x1E0DEE9D8]);
  sub_1B41E292C(v66);
  sub_1B48204B4((uint64_t)"unknown priority level", 22, 2);
  __break(1u);
}

uint64_t sub_1B434E974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_1B49037E8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - v16;
  sub_1B41EA51C(a1, (uint64_t)v10, &qword_1ED4EE300);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    sub_1B41EA560((uint64_t)v10, &qword_1ED4EE300);
    sub_1B41EA51C(a2, (uint64_t)v7, &qword_1ED4EE300);
    if (v18(v7, 1, v11) == 1)
    {
      sub_1B41EA560((uint64_t)v7, &qword_1ED4EE300);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v7, v11);
      v27 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
      v28 = sub_1B4350370(*(void **)(v2 + *(int *)(v27 + 68)));
      v29 = (void *)sub_1B4903788();
      v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

      v31 = sub_1B4906A64();
      v33 = v32;

      v19 = _s15RemindersUICore21TTRLocalizableStringsO13SpotlightViewO3due10dateStringS2S_tFZ_0(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
    v21 = sub_1B4350370(*(void **)(v2 + *(int *)(v20 + 68)));
    v22 = (void *)sub_1B4903788();
    v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

    v24 = sub_1B4906A64();
    v26 = v25;

    v19 = _s15RemindersUICore21TTRLocalizableStringsO13SpotlightViewO9completed10dateStringS2S_tFZ_0(v24, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  return v19;
}

uint64_t sub_1B434EC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t KeyPath;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  LODWORD(v95) = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B4904F7C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v86 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E870);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  v103 = (char *)&v86 - v23;
  v106 = a2;
  v97 = v24;
  LODWORD(v93) = a5;
  v92 = a6;
  v94 = v17;
  if (a2)
  {
    v105 = a1;
    KeyPath = swift_getKeyPath();
    v25 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
    v26 = a3;
    v27 = *(_BYTE *)(a3 + *(int *)(v25 + 84) + 8);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v28 = swift_retain();
    v29 = v27;
    a3 = v26;
    v102 = sub_1B434FB94(v28, v29, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    v107 = swift_getKeyPath();
    v30 = *(_BYTE *)(v26 + *(int *)(v25 + 88) + 8);
    v31 = swift_retain();
    v101 = sub_1B434FB94(v31, v30, 1953394502, 0xE400000000000000);
    swift_release();
    v32 = swift_getKeyPath();
    v98 = 0x3FF0000000000000;
    v99 = v32;
    v100 = MEMORY[0x1E0DEE9D8];
    v96 = 1;
  }
  else
  {
    KeyPath = 0;
    v105 = 0;
    v99 = 0;
    v100 = 0;
    v96 = 0;
    v107 = 0;
    v101 = 0;
    v102 = 0;
    v98 = 0;
  }
  v33 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  sub_1B41EA51C(a3 + v33[12], (uint64_t)v13, &qword_1EF09E3B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1B41EA560((uint64_t)v13, &qword_1EF09E3B8);
    v34 = type metadata accessor for TTRSpotlightReminderView.ReminderView.LocationInfoView(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v103, 1, 1, v34);
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v35(v20, v13, v14);
    v36 = (uint64_t)v94;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v94, v20, v14);
    v37 = *(_BYTE *)(a3 + v33[22] + 8);
    v38 = swift_retain();
    v39 = sub_1B434FB94(v38, v37, 1953394502, 0xE400000000000000);
    swift_release();
    v40 = a3;
    v41 = *(_BYTE *)(a3 + v33[21] + 8);
    v42 = swift_retain();
    v43 = sub_1B434FB94(v42, v41, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v44 = (uint64_t)v103;
    v35(v103, (char *)v36, v14);
    v45 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView.LocationInfoView(0);
    *(_QWORD *)(v44 + v45[5]) = v39;
    *(_QWORD *)(v44 + v45[6]) = v43;
    a3 = v40;
    *(_BYTE *)(v44 + v45[7]) = v95 & 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v45 - 1) + 56))(v44, 0, 1, v45);
  }
  v46 = *(_QWORD *)(a3 + v33[11]);
  if (v46 && *(_QWORD *)(v46 + 16))
  {
    v94 = (char *)a3;
    v47 = sub_1B434F464(v95 & 1, v93 & 1);
    v49 = v47;
    v50 = v48;
    v51 = *(_QWORD *)(v46 + 16);
    v52 = MEMORY[0x1E0DEE9D8];
    if (v51)
    {
      v93 = v48;
      v95 = v47;
      v110 = MEMORY[0x1E0DEE9D8];
      sub_1B41FE678(0, v51, 0);
      v52 = v110;
      v53 = v46 + 40;
      v54 = v92;
      do
      {
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v108 = sub_1B4906AF4();
        v109 = v55;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B4906B78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v56 = v108;
        v57 = v109;
        v110 = v52;
        v59 = *(_QWORD *)(v52 + 16);
        v58 = *(_QWORD *)(v52 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_1B41FE678(v58 > 1, v59 + 1, 1);
          v52 = v110;
        }
        v53 += 16;
        *(_QWORD *)(v52 + 16) = v59 + 1;
        v60 = v52 + 16 * v59;
        *(_QWORD *)(v60 + 32) = v56;
        *(_QWORD *)(v60 + 40) = v57;
        --v51;
      }
      while (v51);
      v63 = v54;
      v49 = v95;
      v50 = v93;
    }
    else
    {
      v63 = v92;
    }
    v108 = v52;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
    sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
    sub_1B49069BC();
    swift_bridgeObjectRelease();
    v108 = v49;
    v109 = v50;
    sub_1B4906B78();
    swift_bridgeObjectRelease();
    v90 = v109;
    v91 = v108;
    v89 = swift_getKeyPath();
    v64 = (uint64_t)v94;
    v65 = v94[v33[21] + 8];
    v66 = swift_retain();
    v88 = sub_1B434FB94(v66, v65, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    v95 = swift_getKeyPath();
    v67 = *(_BYTE *)(v64 + v33[22] + 8);
    v68 = swift_retain();
    v87 = sub_1B434FB94(v68, v67, 1953394502, 0xE400000000000000);
    swift_release();
    v86 = swift_getKeyPath();
    v61 = MEMORY[0x1E0DEE9D8];
    v62 = 1;
  }
  else
  {
    v63 = v92;
    v90 = 0;
    v91 = 0;
    v61 = 0;
    v89 = 0;
    v62 = 0;
    v95 = 0;
    v88 = 0;
    v86 = 0;
    v87 = 0;
  }
  v93 = v62;
  v94 = (char *)v61;
  v69 = v97;
  sub_1B41EA51C((uint64_t)v103, v97, &qword_1EF09E870);
  v70 = v106;
  *v63 = v105;
  v63[1] = v70;
  v72 = v99;
  v71 = v100;
  v63[2] = 0;
  v63[3] = v71;
  v73 = v96;
  v63[4] = KeyPath;
  v63[5] = v73;
  v74 = v107;
  v63[6] = 0;
  v63[7] = v74;
  v75 = v101;
  v76 = v102;
  v63[8] = v102;
  v63[9] = v72;
  v101 = v75;
  v102 = v76;
  v77 = v98;
  v63[10] = v75;
  v63[11] = v77;
  v98 = v77;
  v99 = v72;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E878);
  sub_1B41EA51C(v69, (uint64_t)v63 + *(int *)(v78 + 48), &qword_1EF09E870);
  v79 = (_QWORD *)((char *)v63 + *(int *)(v78 + 64));
  v81 = v90;
  v80 = v91;
  *v79 = v91;
  v79[1] = v81;
  v79[2] = 0;
  v79[3] = v61;
  v79[4] = v89;
  v79[5] = v62;
  v82 = v95;
  v79[6] = 0;
  v79[7] = v82;
  v83 = v86;
  v79[8] = v88;
  v79[9] = v83;
  v79[10] = v87;
  sub_1B435CC90(v105, v106, 0, v100);
  v84 = (uint64_t)v94;
  sub_1B435CC90(v80, v81, 0, (uint64_t)v94);
  sub_1B41EA560((uint64_t)v103, &qword_1EF09E870);
  sub_1B435CD08(v80, v81, 0, v84);
  sub_1B41EA560(v97, &qword_1EF09E870);
  return sub_1B435CD08(v105, v106, 0, v100);
}

uint64_t sub_1B434F464(char a1, char a2)
{
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    v3 = sub_1B4903434();
LABEL_9:
    sub_1B4906B78();
    return v3;
  }
  if ((a1 & 1) != 0)
  {
    v3 = 32;
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    sub_1B4906B78();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return 0;
}

__n128 sub_1B434F5D8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1B4907394();
    v28 = (void *)sub_1B49063E0();
    sub_1B49058DC();

    v19 = a17;
  }
  sub_1B4906200();
  sub_1B41EA51C(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_1B434F7A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B434FD50(&qword_1EF09C438, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

id sub_1B434F7D4(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a1;
  v3 = sub_1B49062C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v16;
  swift_retain();
  v7 = sub_1B4907394();
  v8 = sub_1B49063E0();
  v9 = v7;
  if (os_log_type_enabled(v8, v7))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_1B41DF50C(0, (unint64_t *)&unk_1EF0B2090);
    v12 = sub_1B4908558();
    v17 = sub_1B41EF7C8(v12, v13, &v18);
    sub_1B4907B68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B41C2000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v11, -1, -1);
    MEMORY[0x1B5E3D7E0](v10, -1, -1);
  }

  sub_1B49062B4();
  swift_getAtKeyPath();
  sub_1B434BF34(v16, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v18;
}

id sub_1B434F9C8(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

double sub_1B434F9D4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_1B49062C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_1B4907394();
  v9 = sub_1B49063E0();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1B41EF7C8(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_1B4907B68();
    _os_log_impl(&dword_1B41C2000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v12, -1, -1);
    MEMORY[0x1B5E3D7E0](v11, -1, -1);
  }

  sub_1B49062B4();
  swift_getAtKeyPath();
  sub_1B4355BB0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1B434FB94(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_1B49062C0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v12 = sub_1B4907394();
    v13 = sub_1B49063E0();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v21 = a4;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = a3;
      v18 = v16;
      v23 = v16;
      *(_DWORD *)v15 = 136315138;
      v22 = sub_1B41EF7C8(v17, v21, &v23);
      sub_1B4907B68();
      _os_log_impl(&dword_1B41C2000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v18, -1, -1);
      MEMORY[0x1B5E3D7E0](v15, -1, -1);
    }

    sub_1B49062B4();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_1B434FD50@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_1B49062C0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B41EA51C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_1B4907394();
    v21 = sub_1B49063E0();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_1B41EF7C8(v28, v26, &v30);
      sub_1B4907B68();
      _os_log_impl(&dword_1B41C2000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v24, -1, -1);
      MEMORY[0x1B5E3D7E0](v23, -1, -1);
    }

    sub_1B49062B4();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1B434FF88@<X0>(uint64_t a1@<X8>)
{
  return sub_1B434FD50(&qword_1EF098A28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB2E0], 0xD000000000000013, 0x80000001B4951E10, a1);
}

uint64_t sub_1B434FFB4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1B49062C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_1B4907394();
  v9 = sub_1B49063E0();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1B41EF7C8(1819242306, 0xE400000000000000, &v15);
    sub_1B4907B68();
    _os_log_impl(&dword_1B41C2000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v12, -1, -1);
    MEMORY[0x1B5E3D7E0](v11, -1, -1);
  }

  sub_1B49062B4();
  swift_getAtKeyPath();
  sub_1B4355BB0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1B435016C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1B4904244();
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = MEMORY[0x1E0C80A78](v4).n128_u64[0];
  v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = objc_msgSend(a1, sel_badgeEmblem, v6);
  if (!v9)
  {
    v20 = sub_1B4906A64();
    v19 = (unsigned int *)MEMORY[0x1E0D85270];
    *a2 = v20;
    a2[1] = v21;
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(a2, *v19, v4);
  }
  v10 = v9;
  sub_1B4906A64();
  v11 = objc_allocWithZone(MEMORY[0x1E0D84528]);
  v12 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithRawValue_, v12);

  v14 = objc_msgSend(v13, sel_emoji);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1B4906A64();
    v18 = v17;

    v19 = (unsigned int *)MEMORY[0x1E0D85268];
    *a2 = v16;
    a2[1] = v18;
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(a2, *v19, v4);
  }
  v23 = objc_msgSend(v13, sel_emblem);
  if (!v23)
    v23 = (id)*MEMORY[0x1E0D847C0];
  v24 = sub_1B4906A64();
  v26 = v25;

  *v8 = v24;
  v8[1] = v26;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0D85270], v4);
  return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 32))(a2, v8, v4);
}

id sub_1B4350370(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  id v5;

  if (a1)
  {
    v2 = a1;
  }
  else
  {
    sub_1B41DF50C(0, &qword_1ED4E6358);
    v2 = (void *)sub_1B490782C();
  }
  v3 = a1;
  v4 = (uint64_t)objc_msgSend(v2, sel_integerValue);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v5, sel_setDoesRelativeDateFormatting_, 1);
  objc_msgSend(v5, sel_setDateStyle_, 1);
  objc_msgSend(v5, sel_setTimeStyle_, v4 < 1);
  return v5;
}

uint64_t sub_1B4350438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[11] = a4;
  v5[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v6 = sub_1B49036D4();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B435053C()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  uint64_t result;
  id v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  void *v70;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D846B0]), sel_init);
  *(_QWORD *)(v0 + 168) = v1;
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1B490380C();
  v4 = objc_msgSend(v2, sel_objectIDWithUUID_, v3);
  *(_QWORD *)(v0 + 176) = v4;

  *(_QWORD *)(v0 + 72) = 0;
  v5 = v0 + 72;
  v6 = objc_msgSend(v1, sel_fetchReminderWithObjectID_error_, v4, v0 + 72);
  *(_QWORD *)(v0 + 184) = v6;
  v7 = *(void **)(v0 + 72);
  v70 = v4;
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    v10 = objc_msgSend(v8, sel_attachmentContext);
    v69 = v8;
    if (!v10)
    {
      v18 = MEMORY[0x1E0DEE9D8];
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
        goto LABEL_52;
      goto LABEL_15;
    }
    v11 = v10;
    v12 = objc_msgSend(v10, sel_imageAttachments);

    sub_1B41DF50C(0, &qword_1EF09A440);
    v13 = sub_1B4906DAC();

    if (v13 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v63 = sub_1B49081B0();
      swift_bridgeObjectRelease();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v64 = sub_1B49081B0();
      result = swift_bridgeObjectRelease();
      if (v64 < 0)
      {
        __break(1u);
        return result;
      }
      if (v63 >= 2)
        v65 = 2;
      else
        v65 = v63;
      if (v63 >= 0)
        v14 = v65;
      else
        v14 = 2;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v66 = sub_1B49081B0();
      swift_bridgeObjectRelease();
      if (v66 < v14)
      {
        __break(1u);
        goto LABEL_51;
      }
    }
    else if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
    {
      v14 = 2;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if ((v13 & 0xC000000000000001) != 0 && v14)
    {
      v15 = 0;
      do
      {
        v16 = v15 + 1;
        sub_1B4907EBC();
        v15 = v16;
      }
      while (v14 != v16);
    }
    if (v13 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v18 = sub_1B49081BC();
      v19 = v22;
      v17 = v23;
      v25 = v24;
      swift_bridgeObjectRelease_n();
      v14 = v25 >> 1;
    }
    else
    {
      v17 = 0;
      v18 = v13 & 0xFFFFFFFFFFFFFF8;
      v19 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    while (1)
    {
      *(_QWORD *)(v0 + 192) = v18;
      v26 = v14 - v17;
      if (v14 == v17)
      {
        v27 = MEMORY[0x1E0DEE9D8];
        goto LABEL_33;
      }
      if (v14 > v17)
        break;
LABEL_51:
      __break(1u);
LABEL_52:
      v18 = (uint64_t)sub_1B4207FAC(MEMORY[0x1E0DEE9D8]);
LABEL_15:
      v17 = 0;
      v19 = v18 + 32;
      v14 = *(_QWORD *)(v18 + 16);
    }
    v67 = v1;
    v28 = *(_QWORD *)(v0 + 144);
    swift_unknownObjectRetain();
    v29 = (id *)(v19 + 8 * v17);
    v27 = MEMORY[0x1E0DEE9D8];
    do
    {
      v30 = *v29;
      v31 = objc_msgSend(v30, sel_fileURL);
      if (v31)
      {
        v32 = v31;
        sub_1B490368C();

        v33 = 0;
      }
      else
      {
        v33 = 1;
      }
      v35 = *(_QWORD *)(v0 + 128);
      v34 = *(_QWORD *)(v0 + 136);
      v36 = *(_QWORD *)(v0 + 120);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v36, v33, 1, v34);
      sub_1B41DF5E4(v36, v35, &qword_1ED4E9EC0);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v35, 1, v34) == 1)
      {
        sub_1B41EA560(*(_QWORD *)(v0 + 128), &qword_1ED4E9EC0);
      }
      else
      {
        v37 = *(_QWORD *)(v0 + 152);
        v38 = *(_QWORD *)(v0 + 160);
        v39 = *(_QWORD *)(v0 + 136);
        v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 32);
        v40(v38, *(_QWORD *)(v0 + 128), v39);
        v40(v37, v38, v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_1B4292140(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v42 = *(_QWORD *)(v27 + 16);
        v41 = *(_QWORD *)(v27 + 24);
        if (v42 >= v41 >> 1)
          v27 = sub_1B4292140(v41 > 1, v42 + 1, 1, v27);
        v43 = *(_QWORD *)(v0 + 152);
        v44 = *(_QWORD *)(v0 + 136);
        *(_QWORD *)(v27 + 16) = v42 + 1;
        v40(v27+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v42, v43, v44);
      }
      ++v29;
      --v26;
    }
    while (v26);
    swift_unknownObjectRelease();
    v1 = v67;
LABEL_33:
    v5 = v0 + 72;
    v45 = *(_QWORD *)(v0 + 96);
    v46 = type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
    *(_QWORD *)(v0 + 200) = v46;
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v45 + *(int *)(v46 + 24));
    *(_QWORD *)(v0 + 56) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E828);
    sub_1B4906638();
    v47 = objc_msgSend(v69, sel_list);
    v48 = objc_msgSend(v47, sel_objectID);
    *(_QWORD *)(v0 + 208) = v48;

    *(_QWORD *)(v0 + 64) = 0;
    v49 = objc_msgSend(v1, sel_fetchListWithObjectID_error_, v48, v0 + 64);
    *(_QWORD *)(v0 + 216) = v49;
    v50 = *(void **)(v0 + 64);
    if (v49)
    {
      sub_1B4906F50();
      v51 = v50;
      *(_QWORD *)(v0 + 224) = sub_1B4906F44();
      sub_1B4906EFC();
      return swift_task_switch();
    }
    v53 = v50;
    v21 = (void *)sub_1B4903560();

    swift_willThrow();
    swift_unknownObjectRelease();

  }
  else
  {
    v20 = v7;
    v21 = (void *)sub_1B4903560();

    swift_willThrow();
  }
  if (qword_1EF097CA0 != -1)
    swift_once();
  v54 = sub_1B49058F4();
  __swift_project_value_buffer(v54, (uint64_t)qword_1EF09E300);
  v55 = v21;
  v56 = v21;
  v57 = sub_1B49058E8();
  v58 = sub_1B4907388();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    v68 = v1;
    v60 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v59 = 138412290;
    v61 = v21;
    v62 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v5 - 24) = v62;
    sub_1B4907B68();
    *v60 = v62;

    _os_log_impl(&dword_1B41C2000, v57, v58, "TTRSpotligthReminderView onAppear error: %@", v59, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v60, -1, -1);
    MEMORY[0x1B5E3D7E0](v59, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B4350D2C()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;

  v1 = *(void **)(v0 + 216);
  v2 = *(uint64_t **)(v0 + 112);
  swift_release();
  sub_1B435016C(v1, v2);
  return swift_task_switch();
}

uint64_t sub_1B4350DB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v17;
  void *v18;
  void *v19;

  v1 = *(void **)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = sub_1B4904244();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  sub_1B41EA51C(v2, v3, &qword_1EF09E420);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  sub_1B4906638();
  sub_1B41EA560(v2, &qword_1EF09E420);
  v5 = objc_msgSend(v1, sel_color);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)sub_1B4907880();

  }
  else
  {
    v7 = 0;
  }
  v9 = *(void **)(v0 + 208);
  v8 = *(void **)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  v17 = *(void **)(v0 + 184);
  v18 = *(void **)(v0 + 176);
  v19 = *(void **)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 96);
  sub_1B4903F80();
  swift_allocObject();
  v12 = v7;
  v13 = sub_1B4903F74();
  v14 = (_QWORD *)(v11 + *(int *)(v10 + 20));
  v15 = v14[1];
  *(_QWORD *)(v0 + 16) = *v14;
  *(_QWORD *)(v0 + 24) = v15;
  *(_QWORD *)(v0 + 80) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E808);
  sub_1B4906638();

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B4350FE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;

  v2 = v1;
  v70 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E880);
  MEMORY[0x1E0C80A78](v3);
  v69 = (uint64_t *)((char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1B49065FC();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECA8);
  MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t *)((char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t)&v62 - v10;
  v11 = sub_1B4906320();
  MEMORY[0x1E0C80A78](v11);
  v12 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView.LocationInfoView(0);
  v13 = 0;
  v14 = 0;
  v77 = 0;
  v15 = 0;
  if (*(_BYTE *)(v1 + v12[7]) == 1)
  {
    v73 = v7;
    v74 = v3;
    sub_1B4906314();
    sub_1B4906308();
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    sub_1B49062FC();
    swift_bridgeObjectRelease();
    sub_1B4906308();
    sub_1B490632C();
    v16 = sub_1B49064A0();
    v18 = v17;
    v20 = v19 & 1;
    v21 = sub_1B4906488();
    v22 = v2;
    v24 = v23;
    v26 = v25 & 1;
    sub_1B435CBC0(v16, v18, v20);
    swift_bridgeObjectRelease();
    v13 = sub_1B4906494();
    v14 = v27;
    v15 = v28;
    v77 = v29 & 1;
    v30 = v24;
    v2 = v22;
    sub_1B435CBC0(v21, v30, v26);
    swift_bridgeObjectRelease();
    v7 = v73;
    v3 = v74;
  }
  v72 = v13;
  v73 = v14;
  v74 = v15;
  v63 = sub_1B49065CC();
  v65 = v12[6];
  v71 = *(_QWORD *)(v2 + v65);
  KeyPath = swift_getKeyPath();
  v64 = v12[5];
  v32 = *(_QWORD *)(v2 + v64);
  v33 = swift_getKeyPath();
  v35 = v66;
  v34 = v67;
  v36 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, *MEMORY[0x1E0CDF7D0], v68);
  v37 = v2;
  v38 = swift_getKeyPath();
  v39 = *(int *)(v3 + 28);
  v40 = v69;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v69 + v39, v35, v36);
  *v40 = v38;
  v41 = *(int *)(v7 + 36);
  v42 = v75;
  sub_1B41EA51C((uint64_t)v40, (uint64_t)v75 + v41, &qword_1EF09E880);
  *v42 = v63;
  v42[1] = KeyPath;
  v42[2] = v71;
  v42[3] = v33;
  v42[4] = v32;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B41EA560((uint64_t)v40, &qword_1EF09E880);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v43 = (uint64_t)v42;
  v44 = v76;
  sub_1B41DF5E4((uint64_t)v42, v76, &qword_1EF09ECA8);
  v45 = sub_1B435163C(v37);
  v68 = v46;
  v69 = (uint64_t *)v45;
  v67 = swift_getKeyPath();
  v71 = *(_QWORD *)(v37 + v65);
  v47 = swift_getKeyPath();
  v48 = *(_QWORD *)(v37 + v64);
  v49 = swift_getKeyPath();
  sub_1B41EA51C(v44, v43, &qword_1EF09ECA8);
  v50 = v70;
  v51 = v72;
  v52 = v73;
  *v70 = v72;
  v50[1] = v52;
  v53 = v74;
  v50[2] = v77;
  v50[3] = v53;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECB0);
  sub_1B41EA51C(v43, (uint64_t)v50 + *(int *)(v54 + 48), &qword_1EF09ECA8);
  v55 = (char *)v50 + *(int *)(v54 + 64);
  v57 = v68;
  v56 = (uint64_t)v69;
  *(_QWORD *)v55 = v69;
  *((_QWORD *)v55 + 1) = v57;
  v55[16] = 0;
  v58 = v67;
  *((_QWORD *)v55 + 3) = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v55 + 4) = v58;
  *((_QWORD *)v55 + 5) = 1;
  v55[48] = 0;
  v59 = v71;
  *((_QWORD *)v55 + 7) = v47;
  *((_QWORD *)v55 + 8) = v59;
  *((_QWORD *)v55 + 9) = v49;
  *((_QWORD *)v55 + 10) = v48;
  v60 = v51;
  LOBYTE(v51) = v77;
  sub_1B435FC98(v60, v52, v77, v53);
  sub_1B435CB44(v56, v57, 0);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  swift_retain_n();
  sub_1B41EA560(v76, &qword_1EF09ECA8);
  sub_1B435CBC0(v56, v57, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B41EA560((uint64_t)v75, &qword_1EF09ECA8);
  return sub_1B435FCC8(v72, v73, v51, v74);
}

uint64_t sub_1B435163C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v2 = sub_1B49055F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B49050FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B4904F7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == *MEMORY[0x1E0D86150])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    v16 = *(_QWORD *)v14;
    v17 = *((_QWORD *)v14 + 1);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECB8);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, &v14[*(int *)(v18 + 48)], v6);
    v19 = sub_1B49050F0();
    REMAlarmProximity.localizedLabelFormatString.getter(v19);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B4911D70;
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_1B41EA638();
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = v17;
    v21 = sub_1B4906A70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v21;
  }
  if (v15 == *MEMORY[0x1E0D86148])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
    v22 = sub_1B49050F0();
    REMAlarmVehicleTriggerEvent.localizedDescription.getter(v22);
    v21 = v23;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v21;
  }
  result = sub_1B4908384();
  __break(1u);
  return result;
}

double sub_1B435188C()
{
  return sub_1B43519A0((void (*)(void))sub_1B435DF4C);
}

uint64_t sub_1B43518A0()
{
  return sub_1B43518F0((void (*)(void))sub_1B435DF08);
}

uint64_t sub_1B43518B4()
{
  return sub_1B43518F0((void (*)(void))sub_1B435DEC4);
}

uint64_t sub_1B43518C8()
{
  return sub_1B43518F0((void (*)(void))sub_1B435DE80);
}

uint64_t sub_1B43518DC()
{
  return sub_1B43518F0((void (*)(void))sub_1B435DE3C);
}

uint64_t sub_1B43518F0(void (*a1)(void))
{
  uint64_t v2;

  a1();
  sub_1B49062CC();
  return v2;
}

uint64_t sub_1B4351930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  swift_retain();
  return sub_1B49062D8();
}

double sub_1B435198C()
{
  return sub_1B43519A0((void (*)(void))sub_1B435DDF8);
}

double sub_1B43519A0(void (*a1)(void))
{
  double v2;

  a1();
  sub_1B49062CC();
  return v2;
}

uint64_t sub_1B43519E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1B43519EC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1B43519F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_1B43519FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t sub_1B4351A28()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t sub_1B4351A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B41EA51C(v2 + *(int *)(a1 + 40), a2, &qword_1EF09E3B8);
}

uint64_t sub_1B4351A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B41EA51C(v2 + *(int *)(a1 + 44), a2, &qword_1ED4E9EF8);
}

void sub_1B4351A80(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  TTRSpotlightReminderView.init(from:)(a1, a2);
}

uint64_t sub_1B4351A94(_QWORD *a1)
{
  return TTRSpotlightReminderView.encode(to:)(a1);
}

uint64_t TTRSpotlightListView.badgeType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTRSpotlightListView(0) + 20);
  v4 = sub_1B4904244();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TTRSpotlightListView(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09E5A0);
}

uint64_t TTRSpotlightListView.color.getter()
{
  type metadata accessor for TTRSpotlightListView(0);
  return swift_retain();
}

uint64_t TTRSpotlightListView.listID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTRSpotlightListView(0);
  return sub_1B41EA51C(v1 + *(int *)(v3 + 28), a1, &qword_1ED4E9EF8);
}

void TTRSpotlightListView.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  id *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B4904244();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E428);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for TTRSpotlightListView(0);
  MEMORY[0x1E0C80A78](v41);
  v16 = (id *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v16 = (id)swift_getKeyPath();
  v39 = a1;
  v40 = v16;
  *((_BYTE *)v16 + 8) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B4352070();
  v17 = v42;
  sub_1B4908510();
  if (v17)
  {
    v19 = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
    sub_1B434BF34(*v19, *((_BYTE *)v19 + 8));
  }
  else
  {
    v42 = v12;
    v34 = v6;
    v35 = v8;
    sub_1B4903848();
    v46 = 2;
    sub_1B41E11F0(&qword_1EF09E3D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v18 = (uint64_t)v38;
    sub_1B4908264();
    v20 = (uint64_t)v40;
    v21 = v41;
    sub_1B41DF5E4(v18, (uint64_t)v40 + *(int *)(v41 + 28), &qword_1ED4E9EF8);
    sub_1B4903F80();
    v45 = 0;
    sub_1B41E11F0(&qword_1EF09E438, (uint64_t (*)(uint64_t))MEMORY[0x1E0D84EB0], MEMORY[0x1E0D84EC8]);
    sub_1B4908264();
    v33 = v14;
    v38 = (char *)v11;
    v22 = v43;
    v23 = (uint64_t)v39;
    if (v43)
    {
      v24 = v5;
      v25 = (uint64_t)v37;
      v26 = v42;
    }
    else
    {
      v24 = v5;
      v25 = (uint64_t)v37;
      v26 = v42;
      if (qword_1EF097CB8 != -1)
        swift_once();
      v22 = swift_retain();
    }
    *(_QWORD *)(v20 + *(int *)(v21 + 24)) = v22;
    v44 = 1;
    sub_1B41E11F0(&qword_1EF09E440, (uint64_t (*)(uint64_t))MEMORY[0x1E0D85278], MEMORY[0x1E0D85290]);
    sub_1B4908264();
    v27 = v34;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v25, 1, v24) == 1)
    {
      if (qword_1EF097CB0 != -1)
        swift_once();
      v28 = __swift_project_value_buffer(v24, (uint64_t)qword_1EF09E328);
      v29 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v35, v28, v24);
      (*(void (**)(char *, char *))(v26 + 8))(v33, v38);
      sub_1B41EA560(v25, &qword_1EF09E420);
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v20 + *(int *)(v21 + 20), v29, v24);
    }
    else
    {
      (*(void (**)(char *, char *))(v26 + 8))(v33, v38);
      v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
      v31 = v35;
      v30(v35, v25, v24);
      v30((char *)(v20 + *(int *)(v21 + 20)), (uint64_t)v31, v24);
    }
    sub_1B41F3210(v20, v36, type metadata accessor for TTRSpotlightListView);
    __swift_destroy_boxed_opaque_existential_0(v23);
    sub_1B41EA5FC(v20, type metadata accessor for TTRSpotlightListView);
  }
}

unint64_t sub_1B4352070()
{
  unint64_t result;

  result = qword_1EF09E430;
  if (!qword_1EF09E430)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918F10, &type metadata for TTRSpotlightListView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E430);
  }
  return result;
}

uint64_t TTRSpotlightListView.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E448);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B4352070();
  sub_1B490851C();
  v9 = type metadata accessor for TTRSpotlightListView(0);
  v13 = 1;
  sub_1B4904244();
  sub_1B41E11F0(&qword_1EF09E450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D85278], MEMORY[0x1E0D85288]);
  sub_1B49082E8();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 0;
    sub_1B4903F80();
    sub_1B41E11F0(&qword_1EF09E458, (uint64_t (*)(uint64_t))MEMORY[0x1E0D84EB0], MEMORY[0x1E0D84EC0]);
    sub_1B49082E8();
    v11[14] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    sub_1B434C334();
    sub_1B49082E8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t TTRSpotlightListView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TTRSpotlightListView.ListView(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for TTRSpotlightListView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1 + v13[5], v6);
  v14 = *(_QWORD *)(v1 + v13[6]);
  sub_1B41EA51C(v1 + v13[7], (uint64_t)v5, &qword_1ED4E9EF8);
  v15 = *(void **)v1;
  v16 = *(_BYTE *)(v1 + 8);
  swift_retain();
  sub_1B434F9C8(v15, v16);
  v17 = sub_1B434F7D4(v15, v16);
  sub_1B434BF34(v15, v16);
  v18 = objc_msgSend(v17, sel_displayName);

  if (v18)
  {
    v19 = sub_1B4906A64();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  sub_1B4352464((uint64_t)v9, v14, (uint64_t)v5, v19, v21, (uint64_t)v12);
  return sub_1B41EA59C((uint64_t)v12, a1, type metadata accessor for TTRSpotlightListView.ListView);
}

uint64_t sub_1B4352464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E16B0);
  sub_1B4906620();
  *(_OWORD *)a6 = v23;
  *(_QWORD *)(a6 + 16) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4DFE48);
  sub_1B4906620();
  *(_QWORD *)(a6 + 24) = v23;
  *(_BYTE *)(a6 + 32) = BYTE8(v23);
  *(_QWORD *)(a6 + 40) = v24;
  v12 = (int *)type metadata accessor for TTRSpotlightListView.ListView(0);
  v13 = a6 + v12[6];
  v14 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a1, v14);
  *(_QWORD *)(a6 + v12[7]) = a2;
  sub_1B41DF5E4(a3, a6 + v12[8], &qword_1ED4E9EF8);
  v15 = (_QWORD *)(a6 + v12[9]);
  *v15 = a4;
  v15[1] = a5;
  v16 = a6 + v12[10];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a6 + v12[11];
  *(_QWORD *)v17 = swift_getKeyPath();
  *(_BYTE *)(v17 + 8) = 0;
  v18 = a6 + v12[12];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_BYTE *)(v18 + 8) = 0;
  v19 = a6 + v12[13];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = a6 + v12[14];
  *(_QWORD *)v20 = swift_getKeyPath();
  *(_BYTE *)(v20 + 8) = 0;
  v21 = a6 + v12[15];
  result = swift_getKeyPath();
  *(_QWORD *)v21 = result;
  *(_BYTE *)(v21 + 8) = 0;
  return result;
}

uint64_t sub_1B435262C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7079546567646162;
  if (*v0 != 1)
    v1 = 0x44497473696CLL;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

uint64_t sub_1B4352684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B435C69C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B43526A8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1B43526B4()
{
  sub_1B4352070();
  return sub_1B4908534();
}

uint64_t sub_1B43526DC()
{
  sub_1B4352070();
  return sub_1B4908540();
}

uint64_t sub_1B4352704@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v45 = sub_1B49061E8();
  MEMORY[0x1E0C80A78](v45);
  v3 = (double *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (double *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8D8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8E0);
  MEMORY[0x1E0C80A78](v44);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B49062F0();
  v13 = type metadata accessor for TTRSpotlightListView.ListView(0);
  v14 = (char *)v1 + *(int *)(v13 + 40);
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_1B4355A88(*(_QWORD *)v14, v16);
  v17 = sub_1B434F9D4(v15, v16);
  sub_1B4355BB0(v15, v16);
  *(_QWORD *)v6 = v12;
  v6[1] = v17;
  *((_BYTE *)v6 + 16) = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8E8);
  v19 = v1;
  sub_1B4352A9C(v1, (uint64_t)v6 + *(int *)(v18 + 44));
  v20 = sub_1B4906704();
  sub_1B434F5D8(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, (uint64_t)v9, 0.0, 1, INFINITY, 0, v20, v21, &qword_1EF09E8D0, &qword_1EF09E8D8);
  sub_1B41EA560((uint64_t)v6, &qword_1EF09E8D0);
  v22 = *(_QWORD *)v14;
  LOBYTE(v15) = v14[8];
  sub_1B4355A88(*(_QWORD *)v14, v15);
  sub_1B434F9D4(v22, v15);
  sub_1B4355BB0(v22, v15);
  LOBYTE(v22) = sub_1B49063EC();
  sub_1B4906140();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_1B41EA51C((uint64_t)v9, (uint64_t)v11, &qword_1EF09E8D8);
  v31 = &v11[*(int *)(v44 + 36)];
  *v31 = v22;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_1B41EA560((uint64_t)v9, &qword_1EF09E8D8);
  v32 = (char *)v19 + *(int *)(v13 + 60);
  v33 = *(_QWORD *)v32;
  LOBYTE(v22) = v32[8];
  sub_1B4355A88(*(_QWORD *)v32, v22);
  v34 = sub_1B434F9D4(v33, v22);
  sub_1B4355BB0(v33, v22);
  v35 = (char *)v3 + *(int *)(v45 + 20);
  v36 = *MEMORY[0x1E0CDB0C0];
  v37 = sub_1B4906338();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  *v3 = v34;
  v3[1] = v34;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8F0);
  v39 = v46;
  v40 = v46 + *(int *)(v38 + 36);
  v41 = MEMORY[0x1E0CDA088];
  sub_1B41F3210((uint64_t)v3, v40, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E8) + 36)) = 256;
  sub_1B41EA51C((uint64_t)v11, v39, &qword_1EF09E8E0);
  sub_1B41EA5FC((uint64_t)v3, (uint64_t (*)(_QWORD))v41);
  return sub_1B41EA560((uint64_t)v11, &qword_1EF09E8E0);
}

uint64_t sub_1B4352A9C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BYTE v18[328];
  _BYTE v19[344];
  _QWORD v20[44];
  _QWORD v21[2];
  char v22;
  _BYTE v23[335];

  v4 = type metadata accessor for ListBadge(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v18[-v8 - 8];
  v10 = type metadata accessor for TTRSpotlightListView.ListView(0);
  v11 = (char *)a1 + *(int *)(v10 + 24);
  v12 = sub_1B4904244();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, char *, uint64_t))(v13 + 16))(v9, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  *(_QWORD *)&v9[*(int *)(v4 + 20)] = *(_QWORD *)((char *)a1 + *(int *)(v10 + 28));
  swift_retain();
  v14 = sub_1B4906368();
  sub_1B4352C88(a1, (uint64_t)v18);
  v19[336] = 1;
  memcpy(&v19[7], v18, 0x148uLL);
  sub_1B41F3210((uint64_t)v9, (uint64_t)v6, type metadata accessor for ListBadge);
  sub_1B41F3210((uint64_t)v6, a2, type metadata accessor for ListBadge);
  v15 = (void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E8F8) + 48));
  v20[0] = v14;
  v20[1] = 0;
  LOBYTE(v20[2]) = 1;
  memcpy((char *)&v20[2] + 1, v19, 0x14FuLL);
  memcpy(v15, v20, 0x160uLL);
  sub_1B435D134((uint64_t)v20);
  sub_1B41EA5FC((uint64_t)v9, type metadata accessor for ListBadge);
  v21[0] = v14;
  v21[1] = 0;
  v22 = 1;
  memcpy(v23, v19, sizeof(v23));
  sub_1B435D344((uint64_t)v21);
  return sub_1B41EA5FC((uint64_t)v6, type metadata accessor for ListBadge);
}

uint64_t sub_1B4352C88@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t KeyPath;
  unint64_t v56;
  uint64_t v57;
  _OWORD v58[11];
  char v59;
  _BYTE v60[184];
  char v61;
  __int128 v62;
  _OWORD v63[12];
  __int128 v64;
  __int128 v65;
  char v66;
  char v67;
  _QWORD v68[2];
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t (*v82)();
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v4 = type metadata accessor for TTRSpotlightListView.ListView(0);
  v49 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v4);
  v50 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)((char *)a1 + *(int *)(v6 + 36));
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    v56 = v8;
    v57 = v9;
  }
  else
  {
    v56 = 0xE000000000000000;
    v57 = 0;
  }
  KeyPath = swift_getKeyPath();
  v10 = *((_BYTE *)a1 + *(int *)(v4 + 44) + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11 = swift_retain();
  v54 = sub_1B434FB94(v11, v10, 0x726F6C6F43, 0xE500000000000000);
  swift_release();
  v51 = swift_getKeyPath();
  v12 = *((_BYTE *)a1 + *(int *)(v4 + 48) + 8);
  v13 = swift_retain();
  v53 = sub_1B434FB94(v13, v12, 1953394502, 0xE400000000000000);
  swift_release();
  v52 = swift_getKeyPath();
  v14 = sub_1B49062F0();
  sub_1B43530F4(a1, (uint64_t)v58);
  *(_OWORD *)&v60[135] = v58[8];
  *(_OWORD *)&v60[151] = v58[9];
  *(_OWORD *)&v60[167] = v58[10];
  *(_OWORD *)&v60[71] = v58[4];
  *(_OWORD *)&v60[87] = v58[5];
  *(_OWORD *)&v60[103] = v58[6];
  *(_OWORD *)&v60[119] = v58[7];
  *(_OWORD *)&v60[7] = v58[0];
  *(_OWORD *)&v60[23] = v58[1];
  *(_OWORD *)&v60[39] = v58[2];
  v61 = 0;
  v60[183] = v59;
  *(_OWORD *)&v60[55] = v58[3];
  v15 = (uint64_t)a1;
  v16 = v50;
  sub_1B41F3210(v15, v50, type metadata accessor for TTRSpotlightListView.ListView);
  v17 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v18 = swift_allocObject();
  sub_1B41EA59C(v16, v18 + v17, type metadata accessor for TTRSpotlightListView.ListView);
  v62 = (unint64_t)v14;
  v19 = v14;
  LOBYTE(v63[0]) = 0;
  v20 = *(_OWORD *)&v60[112];
  *(_OWORD *)((char *)&v63[8] + 1) = *(_OWORD *)&v60[128];
  v21 = *(_OWORD *)&v60[128];
  *(_OWORD *)((char *)&v63[9] + 1) = *(_OWORD *)&v60[144];
  v22 = *(_OWORD *)&v60[144];
  *(_OWORD *)((char *)&v63[10] + 1) = *(_OWORD *)&v60[160];
  v23 = *(_QWORD *)&v60[176];
  *(_QWORD *)((char *)&v63[11] + 1) = *(_QWORD *)&v60[176];
  v24 = *(_OWORD *)&v60[48];
  *(_OWORD *)((char *)&v63[4] + 1) = *(_OWORD *)&v60[64];
  v25 = *(_OWORD *)&v60[64];
  *(_OWORD *)((char *)&v63[5] + 1) = *(_OWORD *)&v60[80];
  v26 = *(_OWORD *)&v60[80];
  *(_OWORD *)((char *)&v63[6] + 1) = *(_OWORD *)&v60[96];
  v27 = *(_OWORD *)&v60[96];
  *(_OWORD *)((char *)&v63[7] + 1) = *(_OWORD *)&v60[112];
  v28 = *(_OWORD *)&v60[16];
  *(_OWORD *)((char *)v63 + 1) = *(_OWORD *)v60;
  v29 = *(_OWORD *)v60;
  *(_OWORD *)((char *)&v63[1] + 1) = *(_OWORD *)&v60[16];
  *(_OWORD *)((char *)&v63[2] + 1) = *(_OWORD *)&v60[32];
  v30 = *(_OWORD *)&v60[32];
  *(_OWORD *)((char *)&v63[3] + 1) = *(_OWORD *)&v60[48];
  *(_QWORD *)&v64 = sub_1B435D6B4;
  v31 = v18;
  *((_QWORD *)&v64 + 1) = v18;
  v32 = v63[9];
  v33 = v63[11];
  v34 = v64;
  *(_OWORD *)(a2 + 264) = v63[10];
  *(_OWORD *)(a2 + 280) = v33;
  v35 = v63[5];
  *(_OWORD *)(a2 + 200) = v63[6];
  v36 = v63[8];
  *(_OWORD *)(a2 + 216) = v63[7];
  *(_OWORD *)(a2 + 232) = v36;
  *(_OWORD *)(a2 + 248) = v32;
  v37 = v63[1];
  *(_OWORD *)(a2 + 136) = v63[2];
  v38 = v63[4];
  *(_OWORD *)(a2 + 152) = v63[3];
  *(_OWORD *)(a2 + 168) = v38;
  *(_OWORD *)(a2 + 184) = v35;
  v39 = v63[0];
  *(_OWORD *)(a2 + 88) = v62;
  *(_OWORD *)(a2 + 104) = v39;
  v65 = 0uLL;
  *(_OWORD *)(a2 + 120) = v37;
  v40 = v65;
  *(_OWORD *)(a2 + 296) = v34;
  *(_OWORD *)(a2 + 312) = v40;
  v73 = v24;
  v72 = v30;
  v71 = v28;
  v70 = v29;
  v77 = v20;
  v76 = v27;
  v67 = 0;
  v66 = 0;
  v42 = v56;
  v41 = v57;
  *(_QWORD *)a2 = v57;
  *(_QWORD *)(a2 + 8) = v42;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 40) = 2;
  v44 = v54;
  v43 = KeyPath;
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 32) = v43;
  *(_BYTE *)(a2 + 48) = 0;
  v45 = v52;
  *(_QWORD *)(a2 + 56) = v51;
  *(_QWORD *)(a2 + 64) = v44;
  v46 = v53;
  *(_QWORD *)(a2 + 72) = v45;
  *(_QWORD *)(a2 + 80) = v46;
  v68[0] = v19;
  v68[1] = 0;
  v69 = 0;
  v75 = v26;
  v74 = v25;
  v81 = v23;
  v80 = *(_OWORD *)&v60[160];
  v79 = v22;
  v78 = v21;
  v82 = sub_1B435D6B4;
  v83 = v31;
  v85 = 0;
  v84 = 0;
  sub_1B435CB44(v41, v42, 0);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B435D708((uint64_t)&v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B435CC90, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, char))sub_1B435D2AC, (void (*)(uint64_t, uint64_t))sub_1B41E1C64);
  sub_1B435D708((uint64_t)v68, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B435CD08, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, char))sub_1B435D4BC, (void (*)(uint64_t, uint64_t))sub_1B41E1CB4);
  sub_1B435CBC0(v41, v42, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B43530F4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v39 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E918);
  sub_1B490662C();
  if (v38)
  {
    *((_QWORD *)&v39 + 1) = v38;
    sub_1B4906B78();
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    sub_1B4906B78();
    swift_bridgeObjectRelease();
    sub_1B4906B78();
    v35 = v38;
    v36 = v37;
    KeyPath = swift_getKeyPath();
    v3 = type metadata accessor for TTRSpotlightListView.ListView(0);
    v4 = *((_BYTE *)a1 + *(int *)(v3 + 52) + 8);
    v5 = swift_retain();
    v33 = sub_1B434FB94(v5, v4, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    v32 = swift_getKeyPath();
    v6 = *((_BYTE *)a1 + *(int *)(v3 + 56) + 8);
    v7 = swift_retain();
    v31 = sub_1B434FB94(v7, v6, 1953394502, 0xE400000000000000);
    swift_release();
    v29 = swift_getKeyPath();
    v30 = MEMORY[0x1E0DEE9D8];
    v8 = 1;
  }
  else
  {
    v35 = 0;
    v36 = 0;
    v29 = 0;
    v30 = 0;
    v33 = 0;
    KeyPath = 0;
    v8 = 0;
    v31 = 0;
    v32 = 0;
  }
  *(_QWORD *)&v39 = *((_QWORD *)a1 + 3);
  BYTE8(v39) = *((_BYTE *)a1 + 32);
  v40 = *((_QWORD *)a1 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E910);
  sub_1B490662C();
  if (v38 == 1)
  {
    v9 = type metadata accessor for TTRSpotlightListView.ListView(0);
    v10 = *((_BYTE *)a1 + *(int *)(v9 + 52) + 8);
    v11 = swift_retain();
    sub_1B434FB94(v11, v10, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    v12 = sub_1B4906488();
    v14 = v13;
    v16 = v15;
    swift_release();
    v17 = *((_BYTE *)a1 + *(int *)(v9 + 56) + 8);
    v18 = swift_retain();
    sub_1B434FB94(v18, v17, 1953394502, 0xE400000000000000);
    swift_release();
    sub_1B4906494();
    swift_release();
    sub_1B435CBC0(v12, v14, v16 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED4EE550 != -1)
      swift_once();
    sub_1B4903434();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4EE410);
    v19 = swift_allocObject();
    v20 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v19 + 16) = xmmword_1B4911D70;
    v21 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v19 + 56) = v20;
    *(_QWORD *)(v19 + 64) = v21;
    *(_QWORD *)(v19 + 32) = v37;
    sub_1B4906A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v22 = type metadata accessor for TTRSpotlightListView.ListView(0);
    v23 = *((_BYTE *)a1 + *(int *)(v22 + 52) + 8);
    v24 = swift_retain();
    sub_1B434FB94(v24, v23, 0x726F6C6F43, 0xE500000000000000);
    swift_release();
    swift_getKeyPath();
    v25 = *((_BYTE *)a1 + *(int *)(v22 + 56) + 8);
    v26 = swift_retain();
    sub_1B434FB94(v26, v25, 1953394502, 0xE400000000000000);
    swift_release();
    swift_getKeyPath();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E920);
  sub_1B435DA4C();
  sub_1B490638C();
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v35;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v32;
  *(_QWORD *)(a2 + 64) = v33;
  *(_QWORD *)(a2 + 72) = v29;
  *(_QWORD *)(a2 + 80) = v31;
  *(_OWORD *)(a2 + 88) = v39;
  *(_QWORD *)(a2 + 104) = v40;
  *(_QWORD *)(a2 + 112) = v41;
  *(_QWORD *)(a2 + 120) = v42;
  *(_QWORD *)(a2 + 128) = v43;
  *(_QWORD *)(a2 + 136) = v44;
  *(_QWORD *)(a2 + 144) = v45;
  *(_QWORD *)(a2 + 152) = v46;
  *(_QWORD *)(a2 + 160) = v47;
  *(_QWORD *)(a2 + 168) = v48;
  *(_BYTE *)(a2 + 176) = v49;
  sub_1B435CC90(v36, v35, 0, v30);
  sub_1B435D2AC(v39, *((uint64_t *)&v39 + 1), v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
  sub_1B435D4BC(v39, *((uint64_t *)&v39 + 1), v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
  return sub_1B435CD08(v36, v35, 0, v30);
}

uint64_t sub_1B43537DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for TTRSpotlightListView.ListView(0);
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v23[1] = v3;
  v25 = (uint64_t)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B4903848();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v23 - v15;
  sub_1B41EA51C(a1 + *(int *)(v2 + 32), (uint64_t)v9, &qword_1ED4E9EF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1B41EA560((uint64_t)v9, &qword_1ED4E9EF8);
  v23[0] = *(_QWORD *)(v11 + 32);
  ((void (*)(char *, char *, uint64_t))v23[0])(v16, v9, v10);
  sub_1B4906F5C();
  v18 = sub_1B4906F80();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 0, 1, v18);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v19 = v25;
  sub_1B41F3210(a1, v25, type metadata accessor for TTRSpotlightListView.ListView);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + *(unsigned __int8 *)(v24 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  ((void (*)(unint64_t, char *, uint64_t))v23[0])(v22 + v20, v13, v10);
  sub_1B41EA59C(v19, v22 + v21, type metadata accessor for TTRSpotlightListView.ListView);
  sub_1B4462DD8((uint64_t)v6, (uint64_t)&unk_1EF09E908, v22);
  swift_release();
  sub_1B41EA560((uint64_t)v6, &qword_1ED4E6310);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

uint64_t sub_1B4353A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch();
}

uint64_t sub_1B4353AEC()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void **v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D846B0]), sel_init);
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1B490380C();
  v4 = objc_msgSend(v2, sel_objectIDWithUUID_, v3);

  *(_QWORD *)(v0 + 16) = 0;
  v5 = (void **)(v0 + 16);
  v6 = objc_msgSend(v1, sel_fetchListWithObjectID_error_, v4, v0 + 16);
  v7 = *(void **)(v0 + 16);
  if (v6)
  {
    v8 = v6;
    *v5 = 0;
    v9 = v7;
    v10 = objc_msgSend(v1, sel_fetchAccountsWithError_, v0 + 16);
    v11 = *v5;
    if (v10)
    {
      v12 = v10;
      sub_1B41DF50C(0, &qword_1EF099A78);
      v13 = sub_1B4906DAC();
      v14 = v11;

      if (v13 >> 62)
      {
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v15 = sub_1B49081B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v15 >= 2)
      {
        v16 = *(_QWORD *)(v0 + 64);
        v17 = objc_msgSend(v8, sel_account);
        v18 = objc_msgSend(v17, sel_name);

        v19 = sub_1B4906A64();
        v21 = v20;

        v22 = *(_QWORD *)(v16 + 16);
        *(_OWORD *)(v0 + 16) = *(_OWORD *)v16;
        *(_QWORD *)(v0 + 32) = v22;
        *(_QWORD *)(v0 + 40) = v19;
        *(_QWORD *)(v0 + 48) = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E918);
        sub_1B4906638();
      }
      *v5 = 0;
      v23 = objc_msgSend(v8, sel_fetchRemindersCountWithError_, v0 + 16);
      v11 = *v5;
      if (v23)
      {
        v24 = v23;
        v25 = *(_QWORD *)(v0 + 64);
        v26 = v11;
        v27 = sub_1B4907160();

        v28 = *(_BYTE *)(v25 + 32);
        v29 = *(_QWORD *)(v25 + 40);
        *(_QWORD *)(v0 + 16) = *(_QWORD *)(v25 + 24);
        *(_BYTE *)(v0 + 24) = v28;
        *(_QWORD *)(v0 + 32) = v29;
        *(_QWORD *)(v0 + 40) = v27;
        *(_BYTE *)(v0 + 48) = 0;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E910);
        sub_1B4906638();

        swift_release();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    v30 = v11;
    v31 = (void *)sub_1B4903560();

    swift_willThrow();
  }
  else
  {
    v32 = v7;
    v31 = (void *)sub_1B4903560();

    swift_willThrow();
  }
  if (qword_1EF097CA0 != -1)
    swift_once();
  v33 = sub_1B49058F4();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EF09E300);
  v34 = v31;
  v35 = v31;
  v36 = sub_1B49058E8();
  v37 = sub_1B4907388();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v38 = 138412290;
    v40 = v31;
    v41 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v41;
    sub_1B4907B68();
    *v39 = v41;

    _os_log_impl(&dword_1B41C2000, v36, v37, "TTRSpotlightListView onAppear error: %@", v38, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E6360);
    swift_arrayDestroy();
    MEMORY[0x1B5E3D7E0](v39, -1, -1);
    MEMORY[0x1B5E3D7E0](v38, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B4353F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1B4904244();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1B4353FD8()
{
  return swift_retain();
}

uint64_t sub_1B4353FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B41EA51C(v2 + *(int *)(a1 + 28), a2, &qword_1ED4E9EF8);
}

void sub_1B435400C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  TTRSpotlightListView.init(from:)(a1, a2);
}

uint64_t sub_1B4354020(_QWORD *a1)
{
  return TTRSpotlightListView.encode(to:)(a1);
}

int64x2_t sub_1B4354038()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404E000000000000uLL);
  xmmword_1EF09E318 = (__int128)result;
  return result;
}

uint64_t sub_1B4354050()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = sub_1B4904244();
  __swift_allocate_value_buffer(v0, qword_1EF09E328);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EF09E328);
  *v1 = sub_1B4906A64();
  v1[1] = v2;
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D85270], v0);
}

uint64_t sub_1B43540C4()
{
  uint64_t result;

  sub_1B4903F80();
  swift_allocObject();
  result = sub_1B4903F74();
  qword_1EF09E340 = result;
  return result;
}

uint64_t type metadata accessor for TTRSpotlightListView.ListView(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09E648);
}

uint64_t sub_1B4354118()
{
  return sub_1B41E11F0(&qword_1EF09E460, type metadata accessor for TTRSpotlightReminderView, (uint64_t)&protocol conformance descriptor for TTRSpotlightReminderView);
}

uint64_t sub_1B4354144()
{
  return sub_1B41E11F0(&qword_1EF09E468, type metadata accessor for TTRSpotlightReminderView, (uint64_t)&protocol conformance descriptor for TTRSpotlightReminderView);
}

uint64_t sub_1B4354170()
{
  return sub_1B41E11F0(&qword_1EF09E470, type metadata accessor for TTRSpotlightReminderView, (uint64_t)&protocol conformance descriptor for TTRSpotlightReminderView);
}

uint64_t sub_1B435419C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B43541AC()
{
  return sub_1B41E11F0(&qword_1EF09E478, type metadata accessor for TTRSpotlightListView, (uint64_t)&protocol conformance descriptor for TTRSpotlightListView);
}

uint64_t sub_1B43541D8()
{
  return sub_1B41E11F0(&qword_1EF09E480, type metadata accessor for TTRSpotlightListView, (uint64_t)&protocol conformance descriptor for TTRSpotlightListView);
}

uint64_t sub_1B4354204()
{
  return sub_1B41E11F0(&qword_1EF09E488, type metadata accessor for TTRSpotlightListView, (uint64_t)&protocol conformance descriptor for TTRSpotlightListView);
}

uint64_t sub_1B4354230()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for TTRSpotlightReminderView(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v17[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    sub_1B434F9C8(*a2, v8);
    *(_QWORD *)a1 = v7;
    a1[8] = v8;
    *((_QWORD *)a1 + 2) = a2[2];
    *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
    v9 = a2[5];
    *((_QWORD *)a1 + 4) = a2[4];
    *((_QWORD *)a1 + 5) = v9;
    v10 = *(int *)(a3 + 40);
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    *((_QWORD *)a1 + 6) = a2[6];
    v13 = sub_1B4904F7C();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v18 = *(int *)(a3 + 44);
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_1B4903848();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t destroy for TTRSpotlightReminderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_1B434BF34(*(id *)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1B4904F7C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 44);
  v8 = sub_1B4903848();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t initializeWithCopy for TTRSpotlightReminderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1B434F9C8(*(id *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(int *)(a3 + 40);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v12 = sub_1B4904F7C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = *(int *)(a3 + 44);
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_1B4903848();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t assignWithCopy for TTRSpotlightReminderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1B434F9C8(*(id *)a2, v7);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1B434BF34(v8, v9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 40);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1B4904F7C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(a3 + 44);
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = sub_1B4903848();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for TTRSpotlightReminderView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = v6;
  v10 = sub_1B4904F7C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 44);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1B4903848();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for TTRSpotlightReminderView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1B434BF34(v8, v9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v10 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 40);
  v12 = (void *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = sub_1B4904F7C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = *(int *)(a3 + 44);
  v21 = (void *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = sub_1B4903848();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSpotlightReminderView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4354C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 40);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TTRSpotlightReminderView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4354D40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 40) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1B4354DE4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B435F4D4(319, &qword_1EF09E4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86158], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1B435F4D4(319, qword_1EF09E500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *initializeBufferWithCopyOfBuffer for TTRSpotlightListView(char *a1, char **a2, int *a3)
{
  int v5;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v20[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    sub_1B434F9C8(*a2, v8);
    *(_QWORD *)a1 = v7;
    a1[8] = v8;
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1B4904244();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(char **)((char *)a2 + a3[6]);
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1B4903848();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_retain();
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for TTRSpotlightListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_1B434BF34(*(id *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1B4903848();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

uint64_t initializeWithCopy for TTRSpotlightListView(uint64_t a1, uint64_t a2, int *a3)
{
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1B434F9C8(*(id *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1B4903848();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_retain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for TTRSpotlightListView(uint64_t a1, uint64_t a2, int *a3)
{
  id v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1B434F9C8(*(id *)a2, v7);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1B434BF34(v8, v9);
  v10 = a3[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_1B4903848();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v12) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v12)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t initializeWithTake for TTRSpotlightListView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1B4903848();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithTake for TTRSpotlightListView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1B434BF34(v8, v9);
  v10 = a3[5];
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  swift_release();
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (char *)a2 + v14;
  v17 = sub_1B4903848();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v12) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v12)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSpotlightListView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43555CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSpotlightListView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4355680(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1B4904244();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1B4355724()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B4904244();
  if (v0 <= 0x3F)
  {
    sub_1B435F4D4(319, qword_1EF09E500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1B43557D8()
{
  return sub_1B41E11F0(&qword_1EF09E5E0, type metadata accessor for TTRSpotlightReminderView.ReminderView, (uint64_t)&unk_1B4918EC0);
}

uint64_t sub_1B4355804()
{
  return sub_1B41E11F0(qword_1EF09E5E8, type metadata accessor for TTRSpotlightListView.ListView, (uint64_t)&unk_1B4918E70);
}

_QWORD *sub_1B4355830(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a3[6];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)(a1 + 40) = a2[5];
    v12 = sub_1B4904244();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    v14 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1B4903848();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_retain();
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v22 = a3[9];
    v23 = a3[10];
    v24 = (_QWORD *)((char *)v4 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)v4 + v23;
    v28 = *(uint64_t *)((char *)a2 + v23);
    v29 = *((_BYTE *)a2 + v23 + 8);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B4355A88(v28, v29);
    *(_QWORD *)v27 = v28;
    v27[8] = v29;
    v30 = a3[11];
    v31 = a3[12];
    v32 = (char *)v4 + v30;
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = *v33;
    LOBYTE(v33) = *((_BYTE *)v33 + 8);
    *(_QWORD *)v32 = v34;
    v32[8] = (char)v33;
    v35 = (char *)v4 + v31;
    v36 = (uint64_t *)((char *)a2 + v31);
    v37 = *v36;
    LOBYTE(v36) = *((_BYTE *)v36 + 8);
    *(_QWORD *)v35 = v37;
    v35[8] = (char)v36;
    v38 = a3[13];
    v39 = a3[14];
    v40 = (char *)v4 + v38;
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = *v41;
    LOBYTE(v41) = *((_BYTE *)v41 + 8);
    *(_QWORD *)v40 = v42;
    v40[8] = (char)v41;
    v43 = (char *)v4 + v39;
    v44 = (uint64_t *)((char *)a2 + v39);
    v45 = *v44;
    LOBYTE(v44) = *((_BYTE *)v44 + 8);
    *(_QWORD *)v43 = v45;
    v43[8] = (char)v44;
    v46 = a3[15];
    v47 = (char *)v4 + v46;
    v48 = (uint64_t)a2 + v46;
    v49 = *(_QWORD *)v48;
    v50 = *(_BYTE *)(v48 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B4355A88(v49, v50);
    *(_QWORD *)v47 = v49;
    v47[8] = v50;
  }
  return v4;
}

uint64_t sub_1B4355A88(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1B4355A94(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + a2[6];
  v5 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = a1 + a2[8];
  v7 = sub_1B4903848();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  sub_1B4355BB0(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1B4355BB0(*(_QWORD *)(a1 + a2[15]), *(_BYTE *)(a1 + a2[15] + 8));
}

uint64_t sub_1B4355BB0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1B4355BBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = sub_1B4904244();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_1B4903848();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_retain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[9];
  v21 = a3[10];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a1 + v21;
  v26 = *(_QWORD *)(a2 + v21);
  v27 = *(_BYTE *)(a2 + v21 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B4355A88(v26, v27);
  *(_QWORD *)v25 = v26;
  *(_BYTE *)(v25 + 8) = v27;
  v28 = a3[11];
  v29 = a3[12];
  v30 = a1 + v28;
  v31 = (uint64_t *)(a2 + v28);
  v32 = *v31;
  LOBYTE(v31) = *((_BYTE *)v31 + 8);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = (_BYTE)v31;
  v33 = a1 + v29;
  v34 = (uint64_t *)(a2 + v29);
  v35 = *v34;
  LOBYTE(v34) = *((_BYTE *)v34 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = (_BYTE)v34;
  v36 = a3[13];
  v37 = a3[14];
  v38 = a1 + v36;
  v39 = (uint64_t *)(a2 + v36);
  v40 = *v39;
  LOBYTE(v39) = *((_BYTE *)v39 + 8);
  *(_QWORD *)v38 = v40;
  *(_BYTE *)(v38 + 8) = (_BYTE)v39;
  v41 = a1 + v37;
  v42 = (uint64_t *)(a2 + v37);
  v43 = *v42;
  LOBYTE(v42) = *((_BYTE *)v42 + 8);
  *(_QWORD *)v41 = v43;
  *(_BYTE *)(v41 + 8) = (_BYTE)v42;
  v44 = a3[15];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)v46;
  v48 = *(_BYTE *)(v46 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B4355A88(v47, v48);
  *(_QWORD *)v45 = v47;
  *(_BYTE *)(v45 + 8) = v48;
  return a1;
}

uint64_t sub_1B4355DE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1B4903848();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = *(_BYTE *)(v25 + 8);
  sub_1B4355A88(*(_QWORD *)v25, v27);
  v28 = *(_QWORD *)v24;
  v29 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v27;
  sub_1B4355BB0(v28, v29);
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = (_BYTE)v32;
  swift_retain();
  swift_release();
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = (uint64_t *)(a2 + v34);
  v37 = *v36;
  LOBYTE(v36) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = (_BYTE)v36;
  swift_retain();
  swift_release();
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = (uint64_t *)(a2 + v38);
  v41 = *v40;
  LOBYTE(v40) = *((_BYTE *)v40 + 8);
  *(_QWORD *)v39 = v41;
  *(_BYTE *)(v39 + 8) = (_BYTE)v40;
  swift_retain();
  swift_release();
  v42 = a3[14];
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  swift_retain();
  swift_release();
  v46 = a3[15];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_QWORD *)v48;
  v50 = *(_BYTE *)(v48 + 8);
  sub_1B4355A88(*(_QWORD *)v48, v50);
  v51 = *(_QWORD *)v47;
  v52 = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v47 = v49;
  *(_BYTE *)(v47 + 8) = v50;
  sub_1B4355BB0(v51, v52);
  return a1;
}

uint64_t sub_1B43560E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1B4903848();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = a3[11];
  v20 = a3[12];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v23 = a1 + v20;
  v24 = a2 + v20;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a3[13];
  v26 = a3[14];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = a3[15];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  return a1;
}

uint64_t sub_1B43562A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1B4903848();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  LOBYTE(v27) = *((_BYTE *)v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = (_BYTE)v27;
  sub_1B4355BB0(v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  LOBYTE(v33) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = (_BYTE)v33;
  swift_release();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = (uint64_t *)(a2 + v35);
  v38 = *v37;
  LOBYTE(v37) = *((_BYTE *)v37 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = (_BYTE)v37;
  swift_release();
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  LOBYTE(v41) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = (_BYTE)v41;
  swift_release();
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *v45;
  LOBYTE(v45) = *((_BYTE *)v45 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = (_BYTE)v45;
  swift_release();
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = (uint64_t *)(a2 + v47);
  v50 = *v49;
  LOBYTE(v49) = *((_BYTE *)v49 + 8);
  v51 = *(_QWORD *)v48;
  v52 = *(_BYTE *)(v48 + 8);
  *(_QWORD *)v48 = v50;
  *(_BYTE *)(v48 + 8) = (_BYTE)v49;
  sub_1B4355BB0(v51, v52);
  return a1;
}

uint64_t sub_1B4356530()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435653C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[7]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_1B43565E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43565F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1B4904244();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[8];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1B4356694()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B4904244();
  if (v0 <= 0x3F)
  {
    sub_1B435F4D4(319, qword_1EF09E500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for TTRSpotlightListView.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B43567B0 + 4 * byte_1B491897C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B43567E4 + 4 * byte_1B4918977[v4]))();
}

uint64_t sub_1B43567E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B43567EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B43567F4);
  return result;
}

uint64_t sub_1B4356800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B4356808);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B435680C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4356814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSpotlightListView.CodingKeys()
{
  return &type metadata for TTRSpotlightListView.CodingKeys;
}

uint64_t *sub_1B4356830(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  char v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  uint64_t v77;
  char *v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B4904244();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
    *(uint64_t *)((char *)a1 + *(int *)(v11 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 28));
    v12 = a3[5];
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v80 = v18[1];
    *v17 = *v18;
    v17[1] = v80;
    v19 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    __dst = (char *)a1 + v24;
    v78 = (char *)a2 + v24;
    v25 = sub_1B4904F7C();
    v77 = *(_QWORD *)(v25 - 8);
    v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v79(v78, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
      memcpy(__dst, v78, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(__dst, v78, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v25);
    }
    v27 = a3[13];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_1B4903848();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = a3[14];
    v34 = a3[15];
    v35 = (uint64_t *)((char *)a1 + v33);
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)a1 + v34;
    v39 = (char *)a2 + v34;
    v40 = sub_1B49037E8();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v42(v39, 1, v40))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v44 = a3[16];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    if (v42((char *)a2 + v44, 1, v40))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v46, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v40);
    }
    v48 = a3[17];
    v49 = a3[18];
    v50 = *(void **)((char *)a2 + v48);
    *(uint64_t *)((char *)a1 + v48) = (uint64_t)v50;
    v51 = (char *)a1 + v49;
    v52 = *(uint64_t *)((char *)a2 + v49);
    v53 = *((_BYTE *)a2 + v49 + 8);
    v54 = v50;
    sub_1B4355A88(v52, v53);
    *(_QWORD *)v51 = v52;
    v51[8] = v53;
    v55 = a3[19];
    v56 = a3[20];
    v57 = (char *)a1 + v55;
    v58 = (char *)a2 + v55;
    v59 = *(_QWORD *)v58;
    LOBYTE(v58) = v58[8];
    *(_QWORD *)v57 = v59;
    v57[8] = (char)v58;
    v60 = (char *)a1 + v56;
    v61 = (char *)a2 + v56;
    v62 = *(_QWORD *)v61;
    LOBYTE(v61) = v61[8];
    *(_QWORD *)v60 = v62;
    v60[8] = (char)v61;
    v63 = a3[21];
    v64 = a3[22];
    v65 = (char *)a1 + v63;
    v66 = (char *)a2 + v63;
    v67 = *(_QWORD *)v66;
    LOBYTE(v66) = v66[8];
    *(_QWORD *)v65 = v67;
    v65[8] = (char)v66;
    v68 = (char *)a1 + v64;
    v69 = (char *)a2 + v64;
    v70 = *(_QWORD *)v69;
    LOBYTE(v69) = v69[8];
    *(_QWORD *)v68 = v70;
    v68[8] = (char)v69;
    v71 = a3[23];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = *(_QWORD *)v73;
    v75 = v73[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B4355A88(v74, v75);
    *(_QWORD *)v72 = v74;
    v72[8] = v75;
  }
  return a1;
}

uint64_t sub_1B4356CE8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v4 = sub_1B4904244();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[12];
  v7 = sub_1B4904F7C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[13];
  v10 = sub_1B4903848();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  v12 = a1 + a2[15];
  v13 = sub_1B49037E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (!v15(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v16 = a1 + a2[16];
  if (!v15(v16, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);

  sub_1B4355BB0(*(_QWORD *)(a1 + a2[18]), *(_BYTE *)(a1 + a2[18] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1B4355BB0(*(_QWORD *)(a1 + a2[23]), *(_BYTE *)(a1 + a2[23] + 8));
}

char *sub_1B4356F10(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  char v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73;
  uint64_t v75;
  char *v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  char *__dst;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  *(_QWORD *)&a1[*(int *)(v9 + 28)] = *(_QWORD *)&a2[*(int *)(v9 + 28)];
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = &a1[v11];
  v16 = &a2[v11];
  v78 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v78;
  v17 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v17] = a2[v17];
  v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  __dst = &a1[v22];
  v76 = &a2[v22];
  v23 = sub_1B4904F7C();
  v75 = *(_QWORD *)(v23 - 8);
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v77(v76, 1, v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(__dst, v76, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(__dst, v76, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v23);
  }
  v25 = a3[13];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1B4903848();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v31 = a3[14];
  v32 = a3[15];
  v33 = &a1[v31];
  v34 = &a2[v31];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  v36 = &a1[v32];
  v37 = &a2[v32];
  v38 = sub_1B49037E8();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v40(v37, 1, v38))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v42 = a3[16];
  v43 = &a1[v42];
  v44 = &a2[v42];
  if (v40(&a2[v42], 1, v38))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v43, v44, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v43, 0, 1, v38);
  }
  v46 = a3[17];
  v47 = a3[18];
  v48 = *(void **)&a2[v46];
  *(_QWORD *)&a1[v46] = v48;
  v49 = &a1[v47];
  v50 = *(_QWORD *)&a2[v47];
  v51 = a2[v47 + 8];
  v52 = v48;
  sub_1B4355A88(v50, v51);
  *(_QWORD *)v49 = v50;
  v49[8] = v51;
  v53 = a3[19];
  v54 = a3[20];
  v55 = &a1[v53];
  v56 = &a2[v53];
  v57 = *(_QWORD *)v56;
  LOBYTE(v56) = v56[8];
  *(_QWORD *)v55 = v57;
  v55[8] = (char)v56;
  v58 = &a1[v54];
  v59 = &a2[v54];
  v60 = *(_QWORD *)v59;
  LOBYTE(v59) = v59[8];
  *(_QWORD *)v58 = v60;
  v58[8] = (char)v59;
  v61 = a3[21];
  v62 = a3[22];
  v63 = &a1[v61];
  v64 = &a2[v61];
  v65 = *(_QWORD *)v64;
  LOBYTE(v64) = v64[8];
  *(_QWORD *)v63 = v65;
  v63[8] = (char)v64;
  v66 = &a1[v62];
  v67 = &a2[v62];
  v68 = *(_QWORD *)v67;
  LOBYTE(v67) = v67[8];
  *(_QWORD *)v66 = v68;
  v66[8] = (char)v67;
  v69 = a3[23];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = *(_QWORD *)v71;
  v73 = v71[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B4355A88(v72, v73);
  *(_QWORD *)v70 = v72;
  v70[8] = v73;
  return a1;
}

char *sub_1B435739C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  *(_QWORD *)&a1[*(int *)(v12 + 28)] = *(_QWORD *)&a2[*(int *)(v12 + 28)];
  swift_retain();
  swift_release();
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_retain();
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_retain();
  swift_release();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  v19 = a3[10];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v22 = a3[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_1B4904F7C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_13:
  v31 = a3[13];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_1B4903848();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_18:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
LABEL_19:
  v40 = a3[14];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v43 = a3[15];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_1B49037E8();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_24:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v44, v45, v46);
LABEL_25:
  v52 = a3[16];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = v48(&a1[v52], 1, v46);
  v56 = v48(v54, 1, v46);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v53, v54, v46);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v46);
    goto LABEL_30;
  }
  if (v56)
  {
LABEL_30:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v53, v54, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v53, 0, 1, v46);
LABEL_31:
  v58 = a3[17];
  v59 = *(void **)&a1[v58];
  v60 = *(void **)&a2[v58];
  *(_QWORD *)&a1[v58] = v60;
  v61 = v60;

  v62 = a3[18];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = *(_QWORD *)v64;
  v66 = v64[8];
  sub_1B4355A88(*(_QWORD *)v64, v66);
  v67 = *(_QWORD *)v63;
  v68 = v63[8];
  *(_QWORD *)v63 = v65;
  v63[8] = v66;
  sub_1B4355BB0(v67, v68);
  v69 = a3[19];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = *(_QWORD *)v71;
  LOBYTE(v71) = v71[8];
  *(_QWORD *)v70 = v72;
  v70[8] = (char)v71;
  swift_retain();
  swift_release();
  v73 = a3[20];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(_QWORD *)v75;
  LOBYTE(v75) = v75[8];
  *(_QWORD *)v74 = v76;
  v74[8] = (char)v75;
  swift_retain();
  swift_release();
  v77 = a3[21];
  v78 = &a1[v77];
  v79 = &a2[v77];
  v80 = *(_QWORD *)v79;
  LOBYTE(v79) = v79[8];
  *(_QWORD *)v78 = v80;
  v78[8] = (char)v79;
  swift_retain();
  swift_release();
  v81 = a3[22];
  v82 = &a1[v81];
  v83 = &a2[v81];
  v84 = *(_QWORD *)v83;
  LOBYTE(v83) = v83[8];
  *(_QWORD *)v82 = v84;
  v82[8] = (char)v83;
  swift_retain();
  swift_release();
  v85 = a3[23];
  v86 = &a1[v85];
  v87 = &a2[v85];
  v88 = *(_QWORD *)v87;
  v89 = v87[8];
  sub_1B4355A88(*(_QWORD *)v87, v89);
  v90 = *(_QWORD *)v86;
  v91 = v86[8];
  *(_QWORD *)v86 = v88;
  v86[8] = v89;
  sub_1B4355BB0(v90, v91);
  return a1;
}

char *sub_1B4357A14(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  *(_QWORD *)&a1[*(int *)(v9 + 28)] = *(_QWORD *)&a2[*(int *)(v9 + 28)];
  v10 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  v12 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_1B4904F7C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[13];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_1B4903848();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1B49037E8();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = a3[16];
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v30(&a2[v32], 1, v28))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  v36 = a3[18];
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v37[8] = v38[8];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v39 = a3[19];
  v40 = a3[20];
  v41 = &a1[v39];
  v42 = &a2[v39];
  v41[8] = v42[8];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v43 = &a1[v40];
  v44 = &a2[v40];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  v45 = a3[21];
  v46 = a3[22];
  v47 = &a1[v45];
  v48 = &a2[v45];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  v49 = &a1[v46];
  v50 = &a2[v46];
  v51 = *(_QWORD *)v50;
  v49[8] = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = a3[23];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v53[8] = v54[8];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  return a1;
}

char *sub_1B4357DD4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  *(_QWORD *)&a1[*(int *)(v12 + 28)] = *(_QWORD *)&a2[*(int *)(v12 + 28)];
  swift_release();
  v13 = a3[5];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  swift_release();
  *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
  swift_release();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_release();
  v19 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v19] = a2[v19];
  v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1B4904F7C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_13:
  v34 = a3[13];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_1B4903848();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_18:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
LABEL_19:
  v43 = a3[14];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = a3[15];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_1B49037E8();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v51);
LABEL_24:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v49, v50, v51);
LABEL_25:
  v57 = a3[16];
  v58 = &a1[v57];
  v59 = &a2[v57];
  v60 = v53(&a1[v57], 1, v51);
  v61 = v53(v59, 1, v51);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v58, v59, v51);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v58, v51);
    goto LABEL_30;
  }
  if (v61)
  {
LABEL_30:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v58, v59, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v58, 0, 1, v51);
LABEL_31:
  v63 = a3[17];
  v64 = *(void **)&a1[v63];
  *(_QWORD *)&a1[v63] = *(_QWORD *)&a2[v63];

  v65 = a3[18];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v68 = *(_QWORD *)v67;
  LOBYTE(v67) = v67[8];
  v69 = *(_QWORD *)v66;
  v70 = v66[8];
  *(_QWORD *)v66 = v68;
  v66[8] = (char)v67;
  sub_1B4355BB0(v69, v70);
  v71 = a3[19];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *(_QWORD *)v73;
  LOBYTE(v73) = v73[8];
  *(_QWORD *)v72 = v74;
  v72[8] = (char)v73;
  swift_release();
  v75 = a3[20];
  v76 = &a1[v75];
  v77 = &a2[v75];
  v78 = *(_QWORD *)v77;
  LOBYTE(v77) = v77[8];
  *(_QWORD *)v76 = v78;
  v76[8] = (char)v77;
  swift_release();
  v79 = a3[21];
  v80 = &a1[v79];
  v81 = &a2[v79];
  v82 = *(_QWORD *)v81;
  LOBYTE(v81) = v81[8];
  *(_QWORD *)v80 = v82;
  v80[8] = (char)v81;
  swift_release();
  v83 = a3[22];
  v84 = &a1[v83];
  v85 = &a2[v83];
  v86 = *(_QWORD *)v85;
  LOBYTE(v85) = v85[8];
  *(_QWORD *)v84 = v86;
  v84[8] = (char)v85;
  swift_release();
  v87 = a3[23];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = *(_QWORD *)v89;
  LOBYTE(v89) = v89[8];
  v91 = *(_QWORD *)v88;
  v92 = v88[8];
  *(_QWORD *)v88 = v90;
  v88[8] = (char)v89;
  sub_1B4355BB0(v91, v92);
  return a1;
}

uint64_t sub_1B43583B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43583C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5]);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[12];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[13];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[15];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_1B43584D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43584DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5]) = a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E3B8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[12];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EF8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[15];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1B43585D8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1B435872C();
  if (v0 <= 0x3F)
  {
    sub_1B435F4D4(319, &qword_1EF09E4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D86158], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1B435F4D4(319, qword_1EF09E500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        sub_1B435F4D4(319, (unint64_t *)&qword_1ED4E9EE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1B435872C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF09E718[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E420);
    v0 = sub_1B4906644();
    if (!v1)
      atomic_store(v0, qword_1EF09E718);
  }
}

uint64_t storeEnumTagSinglePayload for TTRSpotlightReminderView.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1B43587D0 + 4 * byte_1B4918986[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1B4358804 + 4 * byte_1B4918981[v4]))();
}

uint64_t sub_1B4358804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B435880C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B4358814);
  return result;
}

uint64_t sub_1B4358820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B4358828);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1B435882C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4358834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRSpotlightReminderView.CodingKeys()
{
  return &type metadata for TTRSpotlightReminderView.CodingKeys;
}

unint64_t sub_1B4358854()
{
  unint64_t result;

  result = qword_1EF09E790;
  if (!qword_1EF09E790)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918D90, &type metadata for TTRSpotlightReminderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E790);
  }
  return result;
}

unint64_t sub_1B435889C()
{
  unint64_t result;

  result = qword_1EF09E798;
  if (!qword_1EF09E798)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918E48, &type metadata for TTRSpotlightListView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E798);
  }
  return result;
}

uint64_t sub_1B43588E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B43588F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B4358904()
{
  unint64_t result;

  result = qword_1EF09E7A0;
  if (!qword_1EF09E7A0)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918DB8, &type metadata for TTRSpotlightListView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E7A0);
  }
  return result;
}

unint64_t sub_1B435894C()
{
  unint64_t result;

  result = qword_1EF09E7A8;
  if (!qword_1EF09E7A8)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918DE0, &type metadata for TTRSpotlightListView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E7A8);
  }
  return result;
}

unint64_t sub_1B4358994()
{
  unint64_t result;

  result = qword_1EF09E7B0;
  if (!qword_1EF09E7B0)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918D00, &type metadata for TTRSpotlightReminderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E7B0);
  }
  return result;
}

unint64_t sub_1B43589DC()
{
  unint64_t result;

  result = qword_1EF09E7B8;
  if (!qword_1EF09E7B8)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4918D28, &type metadata for TTRSpotlightReminderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF09E7B8);
  }
  return result;
}

void sub_1B4358A20()
{
  qword_1EF09E348 = 0x4000000000000000;
}

uint64_t sub_1B4358A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t ObjCClassFromMetadata;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _OWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  unsigned __int8 v104;
  __int128 v105;

  v100 = a2;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECC8);
  MEMORY[0x1E0C80A78](v98);
  v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECD0);
  MEMORY[0x1E0C80A78](v99);
  v96 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E8);
  MEMORY[0x1E0C80A78](v88);
  v90 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1B49061E8();
  MEMORY[0x1E0C80A78](v86);
  v89 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1B49065E4();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v82 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1B49065D8();
  v9 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECD8);
  MEMORY[0x1E0C80A78](v85);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECE0);
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v87 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECE8);
  MEMORY[0x1E0C80A78](v15);
  v94 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v95 = (uint64_t)&v76 - v18;
  v19 = type metadata accessor for ListBadge.Core(0);
  MEMORY[0x1E0C80A78](v19);
  v92 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v97 = (uint64_t)&v76 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1B4904244();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v30;
  sub_1B41EA51C(a1, (uint64_t)v25, &qword_1EF09E420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v31) == 1)
  {
    sub_1B41EA560((uint64_t)v25, &qword_1EF09E420);
LABEL_11:
    v65 = sub_1B4906554();
    if (qword_1EF097CA8 != -1)
      swift_once();
    sub_1B4906710();
    sub_1B4906170();
    v66 = v101;
    v67 = v102;
    v68 = v103;
    v69 = v104;
    *(_QWORD *)v4 = v65;
    *((_WORD *)v4 + 4) = 256;
    *((_QWORD *)v4 + 2) = v66;
    v4[24] = v67;
    *((_QWORD *)v4 + 4) = v68;
    v4[40] = v69;
    *((_OWORD *)v4 + 3) = v105;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECF0);
    sub_1B41E1C74(&qword_1EF09ECF8, &qword_1EF09ECD0, MEMORY[0x1E0CE0680]);
    sub_1B435FD0C(&qword_1EF09ED00, &qword_1EF09ECF0, &qword_1EF09ED08, &qword_1EF09ED10);
    return sub_1B490638C();
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v25, v31);
  v32 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ListBadge(0) + 20));
  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v31);
    goto LABEL_11;
  }
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 16);
  v34 = v97;
  v79 = v29;
  v80 = v31;
  v33(v97, v29, v31);
  swift_retain();
  v78 = v32;
  *(_QWORD *)(v34 + *(int *)(v19 + 20)) = sub_1B4359490();
  type metadata accessor for RemindersUICoreBundleLookupObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v36 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v37 = (void *)sub_1B4906A34();
  v38 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v37, v36, 0);

  if (v38)
  {
    v77 = v38;
    sub_1B49065C0();
    v39 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CDF6F8], v81);
    sub_1B4906608();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v39);
    v40 = v83;
    v41 = v82;
    v42 = v84;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x1E0CDF718], v84);
    v43 = sub_1B49065F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
    if (qword_1EF097CD0 != -1)
      swift_once();
    sub_1B4906710();
    sub_1B4906170();
    v44 = v101;
    v45 = v102;
    v46 = v103;
    LODWORD(v84) = v104;
    v82 = (char *)*((_QWORD *)&v105 + 1);
    v83 = v105;
    v47 = v89;
    v48 = &v89[*(int *)(v86 + 20)];
    v49 = *MEMORY[0x1E0CDB0C0];
    v50 = sub_1B4906338();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
    __asm { FMOV            V0.2D, #4.5 }
    *v47 = _Q0;
    v56 = v90;
    sub_1B41F3210((uint64_t)v47, v90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_WORD *)(v56 + *(int *)(v88 + 36)) = 256;
    sub_1B41EA51C(v56, (uint64_t)&v13[*(int *)(v85 + 36)], &qword_1EF09E7E8);
    *(_QWORD *)v13 = v43;
    *((_QWORD *)v13 + 1) = v44;
    v13[16] = v45;
    *((_QWORD *)v13 + 3) = v46;
    v13[32] = v84;
    v57 = v82;
    *((_QWORD *)v13 + 5) = v83;
    *((_QWORD *)v13 + 6) = v57;
    swift_retain();
    sub_1B41EA560(v56, &qword_1EF09E7E8);
    sub_1B41EA5FC((uint64_t)v47, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    swift_release();
    if (qword_1EF097CD8 != -1)
      swift_once();
    v58 = qword_1EF09E360;

    v59 = v87;
    sub_1B41EA51C((uint64_t)v13, v87, &qword_1EF09ECD8);
    v60 = v93;
    v61 = (uint64_t *)(v59 + *(int *)(v93 + 36));
    *v61 = v58;
    v61[1] = v58;
    sub_1B41EA560((uint64_t)v13, &qword_1EF09ECD8);
    v62 = v59;
    v63 = v95;
    sub_1B41DF5E4(v62, v95, &qword_1EF09ECE0);
    v64 = 0;
  }
  else
  {
    v64 = 1;
    v63 = v95;
    v60 = v93;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v63, v64, 1, v60);
  v71 = v97;
  v72 = v92;
  sub_1B41F3210(v97, v92, type metadata accessor for ListBadge.Core);
  v73 = v94;
  sub_1B41EA51C(v63, v94, &qword_1EF09ECE8);
  v74 = v96;
  sub_1B41F3210(v72, v96, type metadata accessor for ListBadge.Core);
  v75 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09ED18);
  sub_1B41EA51C(v73, v74 + *(int *)(v75 + 48), &qword_1EF09ECE8);
  sub_1B41EA560(v73, &qword_1EF09ECE8);
  sub_1B41EA5FC(v72, type metadata accessor for ListBadge.Core);
  sub_1B41EA51C(v74, (uint64_t)v4, &qword_1EF09ECD0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECF0);
  sub_1B41E1C74(&qword_1EF09ECF8, &qword_1EF09ECD0, MEMORY[0x1E0CE0680]);
  sub_1B435FD0C(&qword_1EF09ED00, &qword_1EF09ECF0, &qword_1EF09ED08, &qword_1EF09ED10);
  sub_1B490638C();
  swift_release();
  sub_1B41EA560(v74, &qword_1EF09ECD0);
  sub_1B41EA560(v63, &qword_1EF09ECE8);
  sub_1B41EA5FC(v71, type metadata accessor for ListBadge.Core);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v79, v80);
}

uint64_t sub_1B4359490()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  char v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[6];
  _QWORD v39[6];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[8];
  uint64_t v47;

  v0 = (void *)sub_1B4903F68();
  if (!v0)
  {
    if (qword_1ED4EE548 != -1)
      swift_once();
    swift_beginAccess();
    v19 = (void *)static TTRListColors.defaultColor;
    v17 = *(_QWORD *)algn_1ED4F22C8;
    v12 = qword_1ED4F22D0;
    v18 = qword_1ED4F22D8;
    v16 = qword_1ED4F22E0;
    v15 = qword_1ED4F22E8;
    if ((byte_1ED4F22F0 & 1) == 0)
    {
      v37 = static TTRListColors.defaultColor;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      goto LABEL_11;
    }
    v2 = (id)static TTRListColors.defaultColor;
    goto LABEL_15;
  }
  v1 = v0;
  v2 = v0;
  v3 = objc_msgSend(v2, sel_ckSymbolicColorName);
  v4 = sub_1B4906A64();
  v6 = v5;

  v7 = objc_msgSend(v2, sel_daSymbolicColorName);
  v36 = sub_1B4906A64();
  v9 = v8;

  sub_1B4698FE8(v4, v6, v38);
  v10 = v38[0];
  v11 = v38[1];
  v12 = v38[2];
  v13 = v38[3];
  v14 = v38[4];
  v15 = v38[5];
  swift_bridgeObjectRelease();
  sub_1B41DF5E4((uint64_t)v38, (uint64_t)v46, &qword_1ED4EE2C8);
  if (!v47)
  {
    v19 = v1;
    sub_1B4698FE8(v36, v9, v39);
    swift_bridgeObjectRelease();
    sub_1B41DF5E4((uint64_t)v39, (uint64_t)&v40, &qword_1ED4EE2C8);
    v17 = v41;
    if (v41)
    {
      v37 = v40;
      v12 = v42;
      v18 = v43;
      v16 = v44;
      v15 = v45;

      goto LABEL_11;
    }

    v12 = 0;
    v18 = 0;
    v16 = 0;
    v15 = 0;
LABEL_15:
    v26 = 1;
    sub_1B41DF628(v19, v17, v12, v18, v16, v15, 1);
    objc_msgSend(v2, sel_red);
    v28 = v27;
    objc_msgSend(v2, sel_green);
    v30 = v29;
    objc_msgSend(v2, sel_blue);
    v32 = v31;
    objc_msgSend(v2, sel_alpha);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v28, v30, v32, v33);
    sub_1B41E9C98(v19, v17, v12, v18, v16, v15, 1);
    goto LABEL_16;
  }

  swift_bridgeObjectRelease();
  v37 = v10;
  v16 = v14;
  v17 = v11;
  v18 = v13;
LABEL_11:
  type metadata accessor for RemindersUICoreBundleLookupObject();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v22 = v21;
  v23 = (void *)sub_1B4906A34();
  swift_bridgeObjectRelease();
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v23, v22, 0);

  if (!v25)
    v25 = objc_msgSend(v24, sel_redColor);
  v26 = 0;
  v19 = (void *)v37;
LABEL_16:
  v34 = MEMORY[0x1B5E3A948](v25);
  sub_1B41E9C98(v19, v17, v12, v18, v16, v15, v26);
  return v34;
}

uint64_t sub_1B4359850()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EBE0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B490641C();
  v3 = *MEMORY[0x1E0CDD550];
  v4 = sub_1B4906410();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v2, v3, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  v6 = sub_1B4906428();
  result = sub_1B41EA560((uint64_t)v2, &qword_1EF09EBE0);
  qword_1EF09E350 = v6;
  return result;
}

void sub_1B4359938()
{
  qword_1EF09E358 = 0x4034000000000000;
}

double sub_1B4359948()
{
  double v0;
  double v1;
  double result;

  if (qword_1EF097CA8 != -1)
    swift_once();
  v0 = *(double *)&xmmword_1EF09E318;
  if (qword_1EF097CD0 != -1)
    swift_once();
  v1 = *(double *)&qword_1EF09E358;
  if (qword_1EF097CC0 != -1)
    swift_once();
  result = (v0 - v1) * 0.5 + *(double *)&qword_1EF09E348;
  *(double *)&qword_1EF09E360 = result;
  return result;
}

uint64_t sub_1B4359A08@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  int v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  char v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int16 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  char v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;

  v4 = sub_1B49065D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B4904244();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v13 == *MEMORY[0x1E0D85268])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
    if (qword_1EF097CC8 != -1)
      swift_once();
    v14 = a1;
    v15 = (char *)sub_1B4906494();
    v65 = v16;
    v66 = v15;
    v18 = v17;
    v63 = v19;
    swift_bridgeObjectRelease();
    v20 = v18 & 1;
    if (qword_1EF097CA8 != -1)
      swift_once();
    sub_1B4906710();
    sub_1B4906170();
    v21 = v84;
    v22 = v85;
    v23 = v86;
    v24 = v87;
    v25 = v88;
    v26 = v89;
    v27 = *(_QWORD *)&v14[*(int *)(type metadata accessor for ListBadge.Core(0) + 20)];
    swift_retain();
    v28 = sub_1B4906710();
    *(_QWORD *)&v67 = v27;
    *((_QWORD *)&v67 + 1) = v66;
    *(_QWORD *)&v68 = v65;
    *((_QWORD *)&v68 + 1) = v20;
    *(_QWORD *)&v69 = v63;
    *((_QWORD *)&v69 + 1) = v21;
    *(_QWORD *)&v70 = v22;
    *((_QWORD *)&v70 + 1) = v23;
    *(_QWORD *)&v71 = v24;
    *((_QWORD *)&v71 + 1) = v25;
    *(_QWORD *)&v72 = v26;
    *((_QWORD *)&v72 + 1) = v28;
    v73 = v29;
    v74 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EEA8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EEB0);
    sub_1B4360908();
    sub_1B43609D0();
    result = sub_1B490638C();
    v31 = v75;
    v32 = v76;
    v33 = v77;
    v34 = v78;
    v35 = v79;
    v36 = v80;
    v37 = v81;
    v38 = v82;
    v39 = v83;
LABEL_17:
    *(_OWORD *)a2 = v31;
    *(_OWORD *)(a2 + 16) = v32;
    *(_OWORD *)(a2 + 32) = v33;
    *(_OWORD *)(a2 + 48) = v34;
    *(_OWORD *)(a2 + 64) = v35;
    *(_OWORD *)(a2 + 80) = v36;
    *(_OWORD *)(a2 + 96) = v37;
    *(_BYTE *)(a2 + 112) = v38;
    *(_BYTE *)(a2 + 113) = v39;
    return result;
  }
  if (v13 == *MEMORY[0x1E0D85270])
  {
    v65 = v4;
    v66 = a1;
    (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
    v40 = (void *)sub_1B4906A34();
    v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84528]), sel_initWithEmblem_, v40);
    v42 = objc_msgSend(v41, sel_emblem);
    v64 = a2;
    if (v42)
    {
      v43 = v42;
      if (qword_1EF098020 != -1)
        swift_once();
      v44 = qword_1EF0A68C0;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v45 = sub_1B424DEF0((uint64_t)v43, v44);
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
        goto LABEL_14;

    }
    v43 = (id)*MEMORY[0x1E0D847C0];
LABEL_14:

    v46 = REMListBadgeEmblem.image.getter(v43);
    swift_bridgeObjectRelease();

    v47 = type metadata accessor for ListBadge.Core(0);
    v48 = qword_1EF097CA8;
    v49 = *(_QWORD *)&v66[*(int *)(v47 + 20)];
    swift_retain();
    if (v48 != -1)
      swift_once();
    v62 = *((_QWORD *)&xmmword_1EF09E318 + 1);
    v63 = xmmword_1EF09E318;
    v66 = (char *)v46;
    sub_1B49065C0();
    v50 = v65;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDF6F8], v65);
    v61 = sub_1B4906608();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v50);
    sub_1B4906710();
    sub_1B4906170();
    v65 = v84;
    v51 = v85;
    v52 = v86;
    v53 = v87;
    v54 = v88;
    v55 = v89;
    v56 = sub_1B4906560();
    KeyPath = swift_getKeyPath();
    v58 = sub_1B4906710();
    *(_QWORD *)&v67 = v49;
    *((_QWORD *)&v67 + 1) = v63;
    *(_QWORD *)&v68 = v62;
    *((_QWORD *)&v68 + 1) = v61;
    *(_QWORD *)&v69 = v65;
    *((_QWORD *)&v69 + 1) = v51;
    *(_QWORD *)&v70 = v52;
    *((_QWORD *)&v70 + 1) = v53;
    *(_QWORD *)&v71 = v54;
    *((_QWORD *)&v71 + 1) = v55;
    *(_QWORD *)&v72 = KeyPath;
    *((_QWORD *)&v72 + 1) = v56;
    *(_QWORD *)&v73 = v58;
    *((_QWORD *)&v73 + 1) = v59;
    LOBYTE(v74) = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EE80);
    sub_1B4360840();
    sub_1B43608C4();
    sub_1B490638C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v67 = v75;
    v68 = v76;
    v69 = v77;
    v70 = v78;
    v71 = v79;
    v72 = v80;
    v73 = v81;
    LOBYTE(v74) = v82;
    HIBYTE(v74) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EEA8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EEB0);
    sub_1B4360908();
    sub_1B43609D0();
    result = sub_1B490638C();
    v31 = v75;
    v32 = v76;
    v33 = v77;
    v34 = v78;
    v35 = v79;
    v36 = v80;
    v37 = v81;
    v38 = v82;
    v39 = v83;
    a2 = v64;
    goto LABEL_17;
  }
  result = sub_1B4908384();
  __break(1u);
  return result;
}

uint64_t sub_1B435A028@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return sub_1B4359A08(v1, a1);
}

double sub_1B435A030@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v3 = *v1;
  sub_1B4906470();
  swift_retain();
  sub_1B4906710();
  sub_1B4906170();
  *(_OWORD *)a1 = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v3;
  *(_WORD *)(a1 + 48) = 256;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  result = *(double *)&v11;
  *(_OWORD *)(a1 + 88) = v11;
  return result;
}

uint64_t sub_1B435A108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v51 = a1;
  v52 = a2;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EF60);
  MEMORY[0x1E0C80A78](v49);
  v50 = (uint64_t)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EF68);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B49061F4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B4906728();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v46 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EF70);
  MEMORY[0x1E0C80A78](v45);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B4906530();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EF78);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B4911DA0;
  v17 = *MEMORY[0x1E0CDF3E0];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v18(v15, v17, v12);
  *(_QWORD *)(v16 + 32) = sub_1B49065A8();
  v18(v15, v17, v12);
  *(_QWORD *)(v16 + 40) = sub_1B49065A8();
  *(_QWORD *)&v67 = v16;
  sub_1B4906DC4();
  MEMORY[0x1B5E3AA74](v67);
  sub_1B4906734();
  sub_1B4906740();
  sub_1B4906194();
  v44 = v53;
  v19 = v54;
  v20 = v55;
  v21 = v56;
  v22 = v57;
  if (qword_1EF097CA8 != -1)
    swift_once();
  sub_1B4906470();
  v23 = v58;
  v24 = v59;
  v25 = v60;
  v26 = v61;
  v27 = v62;
  v28 = v46;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v8 + 104))(v46, *MEMORY[0x1E0CE03A8], v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v28, v7);
  v29 = (uint64_t)&v11[*(int *)(v45 + 36)];
  v45 = v7;
  sub_1B41F3210((uint64_t)v6, v29, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA1C8]);
  *(_QWORD *)v11 = v23;
  *((_QWORD *)v11 + 1) = v24;
  *((_QWORD *)v11 + 2) = v25;
  *((_QWORD *)v11 + 3) = v26;
  v11[32] = v27;
  *((_QWORD *)v11 + 5) = v44;
  *((_QWORD *)v11 + 6) = v19;
  *((_QWORD *)v11 + 7) = v20;
  *((_QWORD *)v11 + 8) = v21;
  *((_QWORD *)v11 + 9) = v22;
  *((_WORD *)v11 + 40) = 256;
  sub_1B4360D2C(v23, v24, v25, v26, v27);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  sub_1B41EA5FC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA1C8]);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v28, v45);
  sub_1B4360D44(v23, v24, v25, v26, v27);
  swift_bridgeObjectRelease();
  sub_1B4906470();
  v46 = v63;
  v30 = v64;
  v31 = v65;
  LOBYTE(v24) = v66;
  v32 = v51;
  swift_retain();
  v33 = sub_1B4906710();
  v35 = v34;
  v36 = v50;
  sub_1B41EA51C((uint64_t)v11, v50, &qword_1EF09EF70);
  v37 = (uint64_t *)(v36 + *(int *)(v49 + 36));
  *v37 = v33;
  v37[1] = v35;
  v38 = (uint64_t)v47;
  sub_1B41EA51C(v36, (uint64_t)&v47[*(int *)(v48 + 36)], &qword_1EF09EF60);
  *(_OWORD *)v38 = v46;
  *(_QWORD *)(v38 + 16) = v30;
  *(_QWORD *)(v38 + 24) = v31;
  *(_BYTE *)(v38 + 32) = v24;
  *(_QWORD *)(v38 + 40) = v32;
  *(_WORD *)(v38 + 48) = 256;
  sub_1B41EA560(v36, &qword_1EF09EF60);
  sub_1B4906710();
  sub_1B4906170();
  v39 = v52;
  sub_1B41EA51C(v38, v52, &qword_1EF09EF68);
  v40 = (_OWORD *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EF80) + 36));
  v41 = v68;
  v42 = v69;
  *v40 = v67;
  v40[1] = v41;
  v40[2] = v42;
  sub_1B41EA560(v38, &qword_1EF09EF68);
  return sub_1B41EA560((uint64_t)v11, &qword_1EF09EF70);
}

uint64_t sub_1B435A678@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B435A108(*v1, a1);
}

uint64_t sub_1B435A680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = sub_1B4906710();
  a1[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECC0);
  return sub_1B4358A30(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_1B435A6C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  _OWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void);
  uint64_t v54;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  double v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void);
  __int128 v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  _QWORD *v85;
  _OWORD *v86;
  __int128 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(void);
  uint64_t v92;
  double v94;
  double *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  double *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  unsigned int v112;
  void (*v113)(char *, uint64_t);
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD, uint64_t, uint64_t);
  void (*v118)(char *, char *, uint64_t);
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  _OWORD *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;

  v142 = a1;
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EBF0);
  MEMORY[0x1E0C80A78](v140);
  v141 = (uint64_t)&v107 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EBF8);
  MEMORY[0x1E0C80A78](v130);
  v131 = (uint64_t)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for ImageAttachmentsView.CornerMask(0);
  MEMORY[0x1E0C80A78](v124);
  v125 = (_OWORD *)((char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v145 = sub_1B49061E8();
  MEMORY[0x1E0C80A78](v145);
  v137 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC00);
  v132 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v133 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC08);
  MEMORY[0x1E0C80A78](v144);
  v136 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC10);
  MEMORY[0x1E0C80A78](v146);
  v123 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v138 = (uint64_t)&v107 - v10;
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC18);
  MEMORY[0x1E0C80A78](v122);
  v134 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC20);
  MEMORY[0x1E0C80A78](v126);
  v128 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC28);
  MEMORY[0x1E0C80A78](v139);
  v127 = (uint64_t)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v129 = (uint64_t)&v107 - v15;
  v121 = sub_1B49061B8();
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v17 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v107 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  MEMORY[0x1E0C80A78](v21);
  v143 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v107 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v107 - v27;
  v29 = sub_1B49036D4();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for ImageAttachmentsView(0);
  v34 = v1;
  sub_1B41EA51C(v1 + *(int *)(v33 + 20), (uint64_t)v28, &qword_1ED4E9EC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_1B41EA560((uint64_t)v28, &qword_1ED4E9EC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v25, v1, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
    sub_1B41EA51C((uint64_t)v25, v143, &qword_1ED4E9EC0);
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = sub_1B435B714;
    v35[3] = 0;
    v35[4] = nullsub_1;
    v35[5] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC30);
    sub_1B435F904(&qword_1EF09EC38, &qword_1EF09EC30, (uint64_t (*)(void))sub_1B435F974, (uint64_t (*)(void))sub_1B435F9D8);
    v36 = v133;
    sub_1B490611C();
    sub_1B41EA560((uint64_t)v25, &qword_1ED4E9EC0);
    v37 = v36;
    if (qword_1EF097CE0 != -1)
      swift_once();
    sub_1B4906710();
    sub_1B4906170();
    v38 = v132;
    v39 = (uint64_t)v136;
    v40 = v135;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v136, v37, v135);
    v41 = (_OWORD *)(v39 + *(int *)(v144 + 36));
    v42 = v151;
    *v41 = v150;
    v41[1] = v42;
    v41[2] = v152;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v40);
    v43 = v137;
    v44 = &v137[*(int *)(v145 + 20)];
    v45 = *MEMORY[0x1E0CDB0C0];
    v46 = sub_1B4906338();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
    __asm { FMOV            V0.2D, #10.0 }
    *v43 = _Q0;
    v51 = (uint64_t)v123;
    v52 = (uint64_t)&v123[*(int *)(v146 + 36)];
    v53 = MEMORY[0x1E0CDA088];
    sub_1B41F3210((uint64_t)v43, v52, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_WORD *)(v52 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E8) + 36)) = 256;
    sub_1B41EA51C(v39, v51, &qword_1EF09EC08);
    sub_1B41EA5FC((uint64_t)v43, (uint64_t (*)(_QWORD))v53);
    sub_1B41EA560(v39, &qword_1EF09EC08);
    v54 = v138;
    sub_1B41DF5E4(v51, v138, &qword_1EF09EC10);
    sub_1B41EA51C(v54, v141, &qword_1EF09EC10);
    swift_storeEnumTagMultiPayload();
    sub_1B435F700(&qword_1EF09EC58, &qword_1EF09EC28, (uint64_t (*)(void))sub_1B435FA1C, MEMORY[0x1E0CD90E0]);
    sub_1B435FB24();
    sub_1B490638C();
    return sub_1B41EA560(v54, &qword_1EF09EC10);
  }
  else
  {
    v56 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v123 = v32;
    v56(v32, v28, v29);
    sub_1B434FD50(&qword_1EF09E830, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9AA8], 0x694474756F79614CLL, 0xEF6E6F6974636572, (uint64_t)v20);
    v57 = v120;
    v58 = v121;
    (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v17, *MEMORY[0x1E0CD9A98], v121);
    v119 = sub_1B49061AC();
    v59 = *(void (**)(char *, uint64_t))(v57 + 8);
    v59(v17, v58);
    v59(v20, v58);
    if (qword_1EF097CE0 != -1)
      swift_once();
    v121 = v34;
    v60 = *(double *)&xmmword_1EF09E368;
    v61 = v146;
    v62 = v143;
    if (qword_1EF097CE8 != -1)
      swift_once();
    v63 = v60 - *(double *)&xmmword_1EF09E378;
    v64 = -(v60 - *(double *)&xmmword_1EF09E378);
    v65 = *((double *)&xmmword_1EF09E368 + 1) - *((double *)&xmmword_1EF09E378 + 1);
    v118 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v118(v25, v123, v29);
    v117 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v117(v25, 0, 1, v29);
    sub_1B41EA51C((uint64_t)v25, v62, &qword_1ED4E9EC0);
    v66 = (_QWORD *)swift_allocObject();
    v66[2] = sub_1B435B714;
    v66[3] = 0;
    v66[4] = nullsub_1;
    v66[5] = 0;
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC30);
    v115 = sub_1B435F904(&qword_1EF09EC38, &qword_1EF09EC30, (uint64_t (*)(void))sub_1B435F974, (uint64_t (*)(void))sub_1B435F9D8);
    v120 = v30;
    v67 = v133;
    sub_1B490611C();
    sub_1B41EA560((uint64_t)v25, &qword_1ED4E9EC0);
    sub_1B4906710();
    sub_1B4906170();
    v68 = v132;
    v114 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
    v69 = v29;
    v70 = (uint64_t)v136;
    v71 = v135;
    v114(v136, v67, v135);
    v72 = (_OWORD *)(v70 + *(int *)(v144 + 36));
    v73 = v148;
    *v72 = v147;
    v72[1] = v73;
    v72[2] = v149;
    v113 = *(void (**)(char *, uint64_t))(v68 + 8);
    v113(v67, v71);
    v74 = v137;
    v75 = &v137[*(int *)(v145 + 20)];
    v112 = *MEMORY[0x1E0CDB0C0];
    v76 = v112;
    v111 = sub_1B4906338();
    v110 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 104);
    v110(v75, v76, v111);
    __asm { FMOV            V0.2D, #8.0 }
    v109 = _Q0;
    *(_OWORD *)v74 = _Q0;
    v78 = v138;
    v79 = v138 + *(int *)(v61 + 36);
    v80 = MEMORY[0x1E0CDA088];
    sub_1B41F3210((uint64_t)v74, v79, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E7E8);
    *(_WORD *)(v79 + *(int *)(v108 + 36)) = 256;
    sub_1B41EA51C(v70, v78, &qword_1EF09EC08);
    sub_1B41EA5FC((uint64_t)v74, (uint64_t (*)(_QWORD))v80);
    sub_1B41EA560(v70, &qword_1EF09EC08);
    v81 = xmmword_1EF09E378;
    v82 = (uint64_t)v125;
    *v125 = xmmword_1EF09E368;
    *(_OWORD *)(v82 + 16) = v81;
    *(_OWORD *)(v82 + 32) = xmmword_1B4919630;
    *(_QWORD *)(v82 + 48) = 0x4010000000000000;
    v83 = (uint64_t *)(v82 + *(int *)(v124 + 36));
    *v83 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
    swift_storeEnumTagMultiPayload();
    v84 = v134;
    sub_1B41F3210(v82, v134 + *(int *)(v122 + 36), type metadata accessor for ImageAttachmentsView.CornerMask);
    sub_1B41EA51C(v78, v84, &qword_1EF09EC10);
    sub_1B41EA5FC(v82, type metadata accessor for ImageAttachmentsView.CornerMask);
    sub_1B41EA560(v78, &qword_1EF09EC10);
    v118(v25, (char *)v121, v69);
    v132 = v69;
    v117(v25, 0, 1, v69);
    sub_1B41EA51C((uint64_t)v25, v143, &qword_1ED4E9EC0);
    v85 = (_QWORD *)swift_allocObject();
    v85[2] = sub_1B435B714;
    v85[3] = 0;
    v85[4] = nullsub_1;
    v85[5] = 0;
    sub_1B490611C();
    sub_1B41EA560((uint64_t)v25, &qword_1ED4E9EC0);
    sub_1B4906710();
    sub_1B4906170();
    v114((char *)v70, v67, v71);
    v86 = (_OWORD *)(v70 + *(int *)(v144 + 36));
    v87 = v151;
    *v86 = v150;
    v86[1] = v87;
    v86[2] = v152;
    v88 = v67;
    v89 = v146;
    v113(v88, v71);
    v110(&v74[*(int *)(v145 + 20)], v112, v111);
    *(_OWORD *)v74 = v109;
    v90 = v78 + *(int *)(v89 + 36);
    v91 = MEMORY[0x1E0CDA088];
    sub_1B41F3210((uint64_t)v74, v90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_WORD *)(v90 + *(int *)(v108 + 36)) = 256;
    sub_1B41EA51C(v70, v78, &qword_1EF09EC08);
    sub_1B41EA5FC((uint64_t)v74, (uint64_t (*)(_QWORD))v91);
    sub_1B41EA560(v70, &qword_1EF09EC08);
    v92 = v131;
    sub_1B41EA51C(v78, v131, &qword_1EF09EC10);
    _ZF = (v119 & 1) == 0;
    if ((v119 & 1) != 0)
      v94 = v63;
    else
      v94 = v64;
    v95 = (double *)(v92 + *(int *)(v130 + 36));
    *v95 = v94;
    v95[1] = v65;
    if (_ZF)
      v64 = 0.0;
    sub_1B41EA560(v78, &qword_1EF09EC10);
    v96 = sub_1B4906710();
    v98 = v97;
    v99 = (uint64_t)v128;
    v100 = (uint64_t)&v128[*(int *)(v126 + 36)];
    sub_1B41EA51C(v92, v100, &qword_1EF09EBF8);
    v101 = (uint64_t *)(v100 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF09ECA0) + 36));
    *v101 = v96;
    v101[1] = v98;
    v102 = v134;
    sub_1B41EA51C(v134, v99, &qword_1EF09EC18);
    sub_1B41EA560(v92, &qword_1EF09EBF8);
    sub_1B41EA560(v102, &qword_1EF09EC18);
    if (qword_1EF097CC0 != -1)
      swift_once();
    v103 = (*(double *)&qword_1EF09E348 - v65) * 0.5;
    v104 = v127;
    sub_1B41EA51C(v99, v127, &qword_1EF09EC20);
    v105 = (double *)(v104 + *(int *)(v139 + 36));
    *v105 = v64;
    v105[1] = v103;
    sub_1B41EA560(v99, &qword_1EF09EC20);
    v106 = v129;
    sub_1B41DF5E4(v104, v129, &qword_1EF09EC28);
    sub_1B41EA51C(v106, v141, &qword_1EF09EC28);
    swift_storeEnumTagMultiPayload();
    sub_1B435F700(&qword_1EF09EC58, &qword_1EF09EC28, (uint64_t (*)(void))sub_1B435FA1C, MEMORY[0x1E0CD90E0]);
    sub_1B435FB24();
    sub_1B490638C();
    sub_1B41EA560(v106, &qword_1EF09EC28);
    return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v123, v132);
  }
}

uint64_t sub_1B435B718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = sub_1B49065D8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, *MEMORY[0x1E0CDF6F8], v2, v4);
  v7 = sub_1B4906608();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 257;
  return result;
}

int64x2_t sub_1B435B7DC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404E000000000000uLL);
  xmmword_1EF09E368 = (__int128)result;
  return result;
}

int64x2_t sub_1B435B7F4()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_1EF09E378 = (__int128)result;
  return result;
}

double sub_1B435B80C@<D0>(uint64_t a1@<X8>)
{
  double *v1;
  double *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  int v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  double v37[3];
  uint64_t v38;
  int v39;
  __int16 v40;
  _BYTE v41[11];
  __int16 v42;
  _BYTE v43[11];
  __int16 v44;
  _BYTE v45[7];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  CGRect v58;

  v2 = v1;
  v4 = sub_1B4906338();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B49061B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  type metadata accessor for ImageAttachmentsView.CornerMask(0);
  sub_1B434FD50(&qword_1EF09E830, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9AA8], 0x694474756F79614CLL, 0xEF6E6F6974636572, (uint64_t)v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CD9A98], v8);
  LODWORD(v37[0]) = sub_1B49061AC();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v15(v14, v8);
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = v2[2];
  v58.size.height = v2[3];
  CGRectInset(v58, -(*v2 - v58.size.width), -(v2[1] - v58.size.height));
  sub_1B490647C();
  v36 = v46;
  v35 = v47;
  v34 = v48;
  v33 = v49;
  v38 = sub_1B4906548();
  v16 = *MEMORY[0x1E0CDB0C0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v17(v7, v16, v4);
  sub_1B4906464();
  v31 = v50;
  v19 = v51;
  v18 = v52;
  LOBYTE(v15) = v53;
  v32 = sub_1B4906560();
  v17(v7, v16, v4);
  sub_1B4906458();
  *(_OWORD *)v37 = v54;
  v20 = v55;
  v21 = v56;
  LOBYTE(v8) = v57;
  v22 = sub_1B4906548();
  v23 = sub_1B4906710();
  v25 = v24;
  v26 = sub_1B4906710();
  *(_OWORD *)a1 = v36;
  v27 = v34;
  *(_QWORD *)(a1 + 16) = v35;
  *(_QWORD *)(a1 + 24) = v27;
  *(_BYTE *)(a1 + 32) = v33;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v43;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v43[3];
  *(_QWORD *)(a1 + 40) = v38;
  *(_WORD *)(a1 + 48) = 256;
  *(_DWORD *)(a1 + 50) = *(_DWORD *)&v41[7];
  *(_WORD *)(a1 + 54) = v42;
  *(_OWORD *)(a1 + 56) = v31;
  *(_QWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 80) = v18;
  *(_BYTE *)(a1 + 88) = (_BYTE)v15;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v41[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v41;
  *(_QWORD *)(a1 + 96) = v32;
  *(_WORD *)(a1 + 104) = 256;
  *(_WORD *)(a1 + 110) = v40;
  *(_DWORD *)(a1 + 106) = v39;
  *(_QWORD *)(a1 + 112) = v23;
  *(_QWORD *)(a1 + 120) = v25;
  result = v37[0];
  *(_OWORD *)(a1 + 128) = *(_OWORD *)v37;
  *(_QWORD *)(a1 + 144) = v20;
  *(_QWORD *)(a1 + 152) = v21;
  *(_BYTE *)(a1 + 160) = v8;
  v29 = *(_DWORD *)v45;
  *(_DWORD *)(a1 + 164) = *(_DWORD *)&v45[3];
  *(_DWORD *)(a1 + 161) = v29;
  *(_QWORD *)(a1 + 168) = v22;
  *(_WORD *)(a1 + 176) = 256;
  *(_DWORD *)(a1 + 178) = *(_DWORD *)&v43[7];
  *(_WORD *)(a1 + 182) = v44;
  *(_QWORD *)(a1 + 184) = v26;
  *(_QWORD *)(a1 + 192) = v30;
  return result;
}

void sub_1B435BC18()
{
  qword_1EF09E388 = 0x402C000000000000;
}

double sub_1B435BC28@<D0>(_QWORD *a1@<X8>)
{
  return sub_1B435C0E0(&qword_1EF097CF0, (double *)&qword_1EF09E388, a1);
}

uint64_t sub_1B435BC44()
{
  sub_1B435F81C();
  return sub_1B4906188();
}

uint64_t sub_1B435BC94()
{
  uint64_t result;

  result = sub_1B4906584();
  qword_1EF09E390 = result;
  return result;
}

uint64_t sub_1B435BCB0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B435C070(&qword_1EF097CF8, &qword_1EF09E390, a1);
}

uint64_t sub_1B435BCCC()
{
  sub_1B435F8A4();
  return sub_1B4906188();
}

uint64_t sub_1B435BD1C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EBE0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B490644C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, *MEMORY[0x1E0CDD7A0], v3, v5);
  v8 = *MEMORY[0x1E0CDD550];
  v9 = sub_1B4906410();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  sub_1B490641C();
  v11 = sub_1B4906440();
  sub_1B41EA560((uint64_t)v2, &qword_1EF09EBE0);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_1EF09E398 = v11;
  return result;
}

uint64_t sub_1B435BE68@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B435C070(&qword_1EF097D00, &qword_1EF09E398, a1);
}

uint64_t sub_1B435BE84()
{
  sub_1B435F860();
  return sub_1B4906188();
}

uint64_t sub_1B435BED4()
{
  uint64_t result;

  result = sub_1B4906590();
  qword_1EF09E3A0 = result;
  return result;
}

uint64_t sub_1B435BEF0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B435C070(&qword_1EF097D08, &qword_1EF09E3A0, a1);
}

uint64_t sub_1B435BF0C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EBE0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B490644C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, *MEMORY[0x1E0CDD790], v3, v5);
  v8 = *MEMORY[0x1E0CDD550];
  v9 = sub_1B4906410();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  v11 = sub_1B4906440();
  sub_1B41EA560((uint64_t)v2, &qword_1EF09EBE0);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_1EF09E3A8 = v11;
  return result;
}

uint64_t sub_1B435C054@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B435C070(&qword_1EF097D10, &qword_1EF09E3A8, a1);
}

uint64_t sub_1B435C070@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_retain();
}

void sub_1B435C0B4()
{
  qword_1EF09E3B0 = 0x4034000000000000;
}

double sub_1B435C0C4@<D0>(_QWORD *a1@<X8>)
{
  return sub_1B435C0E0(&qword_1EF097D18, (double *)&qword_1EF09E3B0, a1);
}

double sub_1B435C0E0@<D0>(_QWORD *a1@<X2>, double *a2@<X3>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

uint64_t sub_1B435C124(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3, void (*a4)(void))
{
  uint64_t v7;

  if (sub_1B49061A0())
  {
    a2(&v7);
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC48);
    sub_1B435F974();
    sub_1B435F9D8();
    sub_1B490638C();
    swift_release_n();
    swift_release();
  }
  else
  {
    a4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EC48);
    sub_1B435F974();
    sub_1B435F9D8();
    sub_1B490638C();
  }
  return v7;
}

uint64_t sub_1B435C26C()
{
  return sub_1B4906224();
}

uint64_t sub_1B435C28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B435C2A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDF7E8], MEMORY[0x1E0CDA4B0]);
}

uint64_t sub_1B435C2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1B435C31C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1B490629C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B435C34C()
{
  return sub_1B49062A8();
}

uint64_t sub_1B435C378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656767616C66 && a2 == 0xE700000000000000 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7367617468736168 && a2 == 0xE800000000000000 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1B435C69C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546567646162 && a2 == 0xE900000000000065 || (sub_1B4908390() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44497473696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B4908390();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t type metadata accessor for ImageAttachmentsView(uint64_t a1)
{
  return sub_1B4204D08(a1, (uint64_t *)&unk_1EF09EA10);
}

uint64_t type metadata accessor for ListBadge(uint64_t a1)
{
  return sub_1B4204D08(a1, (uint64_t *)&unk_1EF09EB48);
}

uint64_t sub_1B435C814()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v1 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  v5 = sub_1B4904244();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v4 + v1[12];
  v8 = sub_1B4904F7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v4 + v1[13];
  v11 = sub_1B4903848();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  v13 = v4 + v1[15];
  v14 = sub_1B49037E8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v16(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v17 = v4 + v1[16];
  if (!v16(v17, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);

  sub_1B4355BB0(*(_QWORD *)(v4 + v1[18]), *(_BYTE *)(v4 + v1[18] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B4355BB0(*(_QWORD *)(v4 + v1[23]), *(_BYTE *)(v4 + v1[23] + 8));
  return swift_deallocObject();
}

uint64_t sub_1B435CA80()
{
  return sub_1B435D6C8(type metadata accessor for TTRSpotlightReminderView.ReminderView, sub_1B434D748);
}

uint64_t sub_1B435CA94()
{
  return sub_1B4906260();
}

uint64_t sub_1B435CAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B435C2A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9AA8], MEMORY[0x1E0CDA650]);
}

uint64_t sub_1B435CAD8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CB44(result, a2, a3 & 1);
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B435CB44(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t sub_1B435CB54(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CBC0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B435CBC0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1B435CBD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1B490629C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B435CC00()
{
  return sub_1B49062A8();
}

uint64_t sub_1B435CC2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B4906284();
  *a1 = result;
  return result;
}

uint64_t sub_1B435CC54()
{
  swift_retain();
  return sub_1B4906290();
}

uint64_t type metadata accessor for TTRSpotlightReminderView.ReminderView.LocationInfoView(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09EAB0);
}

uint64_t sub_1B435CC90(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CB44(result, a2, a3 & 1);
    swift_retain();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B435CD08(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CBC0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B435CD88()
{
  return sub_1B4906224();
}

uint64_t sub_1B435CDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B435C2A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDF7E8], MEMORY[0x1E0CDA4B0]);
}

uint64_t sub_1B435CDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v20)(unint64_t, uint64_t);

  v1 = sub_1B4903848();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for TTRSpotlightReminderView.ReminderView(0);
  v6 = (v3 + v4 + *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  swift_unknownObjectRelease();
  v20 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v20(v0 + v3, v1);
  v7 = v0 + v6;
  v8 = sub_1B4904244();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E6A8);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v7 + v5[12];
  v11 = sub_1B4904F7C();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = v7 + v5[13];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1))
    v20(v13, v1);
  swift_bridgeObjectRelease();
  v14 = v7 + v5[15];
  v15 = sub_1B49037E8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v18 = v7 + v5[16];
  if (!v17(v18, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);

  sub_1B4355BB0(*(_QWORD *)(v7 + v5[18]), *(_BYTE *)(v7 + v5[18] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B4355BB0(*(_QWORD *)(v7 + v5[23]), *(_BYTE *)(v7 + v5[23] + 8));
  return swift_deallocObject();
}

uint64_t sub_1B435D080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_1B4903848() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRSpotlightReminderView.ReminderView(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1B4229F98;
  return sub_1B4350438(a1, v9, v10, v11, v12);
}

uint64_t sub_1B435D134(uint64_t a1)
{
  uint64_t v2;
  char v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 160);
  v7 = *(_QWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 224);
  v15 = *(_QWORD *)(a1 + 248);
  v16 = *(_QWORD *)(a1 + 240);
  v13 = *(_QWORD *)(a1 + 264);
  v14 = *(_QWORD *)(a1 + 256);
  v11 = *(_QWORD *)(a1 + 280);
  v12 = *(_QWORD *)(a1 + 272);
  v5 = *(_OWORD *)(a1 + 288);
  v2 = *(_QWORD *)(a1 + 304);
  v3 = *(_BYTE *)(a1 + 312);
  v10 = *(_QWORD *)(a1 + 320);
  v19 = *(_QWORD *)(a1 + 336);
  sub_1B435CB44(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_retain();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B435CC90(v9, v8, v7, v6);
  sub_1B435D2AC(v18, v17, v16, v15, v14, v13, v12, v11, v5, *((uint64_t *)&v5 + 1), v2, v3);
  sub_1B41E1C64(v10);
  sub_1B41E1C64(v19);
  return a1;
}

uint64_t sub_1B435D2AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_1B435CB44(a1, a2, a3 & 1);
  if ((a12 & 1) != 0)
    return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_1B435D344(uint64_t a1)
{
  uint64_t v2;
  char v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 160);
  v7 = *(_QWORD *)(a1 + 152);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a1 + 224);
  v15 = *(_QWORD *)(a1 + 248);
  v16 = *(_QWORD *)(a1 + 240);
  v13 = *(_QWORD *)(a1 + 264);
  v14 = *(_QWORD *)(a1 + 256);
  v11 = *(_QWORD *)(a1 + 280);
  v12 = *(_QWORD *)(a1 + 272);
  v5 = *(_OWORD *)(a1 + 288);
  v2 = *(_QWORD *)(a1 + 304);
  v3 = *(_BYTE *)(a1 + 312);
  v10 = *(_QWORD *)(a1 + 320);
  v19 = *(_QWORD *)(a1 + 336);
  sub_1B435CBC0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1B435CD08(v9, v8, v7, v6);
  sub_1B435D4BC(v18, v17, v16, v15, v14, v13, v12, v11, v5, *((uint64_t *)&v5 + 1), v2, v3);
  sub_1B41E1CB4(v10);
  sub_1B41E1CB4(v19);
  return a1;
}

uint64_t sub_1B435D4BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_1B435CBC0(a1, a2, a3 & 1);
  if ((a12 & 1) != 0)
    return swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1B435D554()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for TTRSpotlightListView.ListView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = v3 + v1[6];
  v5 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = v3 + v1[8];
  v7 = sub_1B4903848();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  sub_1B4355BB0(*(_QWORD *)(v3 + v1[10]), *(_BYTE *)(v3 + v1[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B4355BB0(*(_QWORD *)(v3 + v1[15]), *(_BYTE *)(v3 + v1[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_1B435D6B4()
{
  return sub_1B435D6C8(type metadata accessor for TTRSpotlightListView.ListView, sub_1B43537DC);
}

uint64_t sub_1B435D6C8(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_1B435D708(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, char), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v10 = *(_QWORD *)(a1 + 152);
  v11 = *(_QWORD *)(a1 + 160);
  v16 = *(_OWORD *)(a1 + 176);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_BYTE *)(a1 + 200);
  v18 = *(_QWORD *)(a1 + 208);
  v19 = *(_QWORD *)(a1 + 168);
  v17 = *(_QWORD *)(a1 + 216);
  v20 = *(_QWORD *)(a1 + 232);
  v21 = *(_QWORD *)(a1 + 224);
  a2(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  v15 = v13;
  a3(v5, v6, v7, v8, v9, v10, v11, v19, v16, *((_QWORD *)&v16 + 1), v12, v15);
  a4(v18, v17);
  a4(v21, v20);
  return a1;
}

uint64_t sub_1B435D80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_1B4903848();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for TTRSpotlightListView.ListView(0);
  v6 = (v3 + v4 + *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  swift_unknownObjectRelease();
  v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v9 = v0 + v6 + v5[6];
  v10 = sub_1B4904244();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  v11 = v0 + v6 + v5[8];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1))
    v7(v11, v1);
  swift_bridgeObjectRelease();
  sub_1B4355BB0(*(_QWORD *)(v8 + v5[10]), *(_BYTE *)(v8 + v5[10] + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B4355BB0(*(_QWORD *)(v8 + v5[15]), *(_BYTE *)(v8 + v5[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_1B435D9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_1B4903848() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TTRSpotlightListView.ListView(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1B4229B34;
  v9[7] = v7;
  v9[8] = v8;
  return swift_task_switch();
}

unint64_t sub_1B435DA4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09E928;
  if (!qword_1EF09E928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E920);
    v2[0] = sub_1B435DAD0();
    v2[1] = sub_1B41E1C74(&qword_1EF09E960, &qword_1EF09E968, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09E928);
  }
  return result;
}

unint64_t sub_1B435DAD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09E930;
  if (!qword_1EF09E930)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E938);
    v2[0] = sub_1B435DB54();
    v2[1] = sub_1B41E1C74(&qword_1EF09C560, &qword_1EF09C568, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09E930);
  }
  return result;
}

unint64_t sub_1B435DB54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF09E940;
  if (!qword_1EF09E940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E948);
    v2 = sub_1B41E1C74(&qword_1EF09E950, &qword_1EF09E958, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF09E940);
  }
  return result;
}

double sub_1B435DBD8@<D0>(double *a1@<X8>)
{
  return keypath_get_41Tm((void (*)(void))sub_1B435DF4C, a1);
}

uint64_t sub_1B435DBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_42Tm(a1, a2, a3, a4, (void (*)(void))sub_1B435DF4C);
}

uint64_t sub_1B435DC00@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_45Tm((void (*)(void))sub_1B435DF08, a1);
}

uint64_t sub_1B435DC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B4351930(a1, a2, a3, a4, (void (*)(void))sub_1B435DF08);
}

uint64_t sub_1B435DC38@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_45Tm((void (*)(void))sub_1B435DEC4, a1);
}

uint64_t sub_1B435DC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B4351930(a1, a2, a3, a4, (void (*)(void))sub_1B435DEC4);
}

uint64_t sub_1B435DC70@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_45Tm((void (*)(void))sub_1B435DE80, a1);
}

uint64_t sub_1B435DC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B4351930(a1, a2, a3, a4, (void (*)(void))sub_1B435DE80);
}

uint64_t sub_1B435DCA8@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_45Tm((void (*)(void))sub_1B435DE3C, a1);
}

uint64_t keypath_get_45Tm@<X0>(void (*a1)(void)@<X3>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  a1();
  result = sub_1B49062CC();
  *a2 = v4;
  return result;
}

uint64_t sub_1B435DD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B4351930(a1, a2, a3, a4, (void (*)(void))sub_1B435DE3C);
}

double sub_1B435DD34@<D0>(double *a1@<X8>)
{
  return keypath_get_41Tm((void (*)(void))sub_1B435DDF8, a1);
}

double keypath_get_41Tm@<D0>(void (*a1)(void)@<X3>, double *a2@<X8>)
{
  double result;
  double v4;

  a1();
  sub_1B49062CC();
  result = v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1B435DD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_42Tm(a1, a2, a3, a4, (void (*)(void))sub_1B435DDF8);
}

uint64_t keypath_set_42Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_1B49062D8();
}

unint64_t sub_1B435DDF8()
{
  unint64_t result;

  result = qword_1EF09E970;
  if (!qword_1EF09E970)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4919454, &_s16ViewCornerRadiusON);
    atomic_store(result, (unint64_t *)&qword_1EF09E970);
  }
  return result;
}

unint64_t sub_1B435DE3C()
{
  unint64_t result;

  result = qword_1EF09E978;
  if (!qword_1EF09E978)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B491941C, &_s15SubtitleFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1EF09E978);
  }
  return result;
}

unint64_t sub_1B435DE80()
{
  unint64_t result;

  result = qword_1EF09E980;
  if (!qword_1EF09E980)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B49193E4, &_s16SubtitleColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1EF09E980);
  }
  return result;
}

unint64_t sub_1B435DEC4()
{
  unint64_t result;

  result = qword_1EF09E988;
  if (!qword_1EF09E988)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B49193AC, &_s12TitleFontKeyON);
    atomic_store(result, (unint64_t *)&qword_1EF09E988);
  }
  return result;
}

unint64_t sub_1B435DF08()
{
  unint64_t result;

  result = qword_1EF09E990;
  if (!qword_1EF09E990)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4919374, &_s13TitleColorKeyON);
    atomic_store(result, (unint64_t *)&qword_1EF09E990);
  }
  return result;
}

unint64_t sub_1B435DF4C()
{
  unint64_t result;

  result = qword_1EF09E998;
  if (!qword_1EF09E998)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B491933C, &_s10PaddingKeyON);
    atomic_store(result, (unint64_t *)&qword_1EF09E998);
  }
  return result;
}

ValueMetadata *_s10PaddingKeyOMa()
{
  return &_s10PaddingKeyON;
}

ValueMetadata *_s13TitleColorKeyOMa()
{
  return &_s13TitleColorKeyON;
}

ValueMetadata *_s12TitleFontKeyOMa()
{
  return &_s12TitleFontKeyON;
}

ValueMetadata *_s16SubtitleColorKeyOMa()
{
  return &_s16SubtitleColorKeyON;
}

ValueMetadata *_s15SubtitleFontKeyOMa()
{
  return &_s15SubtitleFontKeyON;
}

ValueMetadata *_s16ViewCornerRadiusOMa()
{
  return &_s16ViewCornerRadiusON;
}

char *sub_1B435DFF0(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B49036D4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = *(int *)(a3 + 24);
    v16 = &a1[v15];
    v17 = &a2[v15];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_1B49061B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B435E16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1B49036D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_1B49061B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

char *sub_1B435E240(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_1B49061B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1B435E390(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_7;
  }
  v8(v10, v11, v6);
  if (a1 == a2)
    return a1;
LABEL_8:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  sub_1B41EA560((uint64_t)&a1[v16], &qword_1EF09E830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_1B49061B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1B435E554(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_1B49061B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

char *sub_1B435E6A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      if (a1 == a2)
        return a1;
      goto LABEL_8;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_8;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_7;
  }
  v8(v10, v11, v6);
  if (a1 == a2)
    return a1;
LABEL_8:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  sub_1B41EA560((uint64_t)&a1[v16], &qword_1EF09E830);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_1B49061B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1B435E860()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435E86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E9B0);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1B435E90C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435E918(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1B49036D4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E9B0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1B435E9C0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1B49036D4();
  if (v0 <= 0x3F)
  {
    sub_1B435F4D4(319, (unint64_t *)&qword_1ED4E9EC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1B435F4D4(319, qword_1EF09EA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9AA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *sub_1B435EA90(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B4904F7C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)v4 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)v4 + v8) = *(_QWORD *)((char *)a2 + v8);
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B435EB34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B4904F7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_1B435EB84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B4904F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B435EC00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B4904F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1B435EC94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B4904F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1B435ED04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B4904F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1B435ED88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435ED94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_66Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D86158]);
}

uint64_t sub_1B435EDA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435EDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_67Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D86158]);
}

uint64_t sub_1B435EDB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B4904F7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B435EE38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B4904244();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1B435EF20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B4904244();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_release();
}

char *sub_1B435EF88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  return a1;
}

char *sub_1B435F048(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1B435F160(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1B435F21C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1B4904244();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_1B435F32C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435F338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1B435F3C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B435F3D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E420);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

void sub_1B435F44C()
{
  unint64_t v0;

  sub_1B435F4D4(319, qword_1EF09EB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D85278], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B435F4D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1B435F530()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EB88;
  if (!qword_1EF09EB88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E7E0);
    v2[0] = sub_1B435F700(&qword_1EF09EB90, &qword_1EF09E7D0, (uint64_t (*)(void))sub_1B435F5D4, MEMORY[0x1E0CD9758]);
    v2[1] = sub_1B41E1C74(&qword_1EF09EBA8, &qword_1EF09E7E8, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EB88);
  }
  return result;
}

unint64_t sub_1B435F5D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EB98;
  if (!qword_1EF09EB98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E7C8);
    v2[0] = sub_1B41E1C74(&qword_1EF09EBA0, &qword_1EF09E7C0, MEMORY[0x1E0CDFB10]);
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EB98);
  }
  return result;
}

unint64_t sub_1B435F65C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EBB0;
  if (!qword_1EF09EBB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E8F0);
    v2[0] = sub_1B435F700(&qword_1EF09EBB8, &qword_1EF09E8E0, (uint64_t (*)(void))sub_1B435F768, MEMORY[0x1E0CD9758]);
    v2[1] = sub_1B41E1C74(&qword_1EF09EBA8, &qword_1EF09E7E8, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EBB0);
  }
  return result;
}

uint64_t sub_1B435F700(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B435F768()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EBC0;
  if (!qword_1EF09EBC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09E8D8);
    v2[0] = sub_1B41E1C74(&qword_1EF09EBC8, &qword_1EF09E8D0, MEMORY[0x1E0CDFB10]);
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EBC0);
  }
  return result;
}

uint64_t sub_1B435F7EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B435F7FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B435F80C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B435F81C()
{
  unint64_t result;

  result = qword_1EF09EBD0;
  if (!qword_1EF09EBD0)
  {
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEF070], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EF09EBD0);
  }
  return result;
}

unint64_t sub_1B435F860()
{
  unint64_t result;

  result = qword_1EF09EBD8;
  if (!qword_1EF09EBD8)
  {
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDD850], MEMORY[0x1E0CDD840]);
    atomic_store(result, (unint64_t *)&qword_1EF09EBD8);
  }
  return result;
}

unint64_t sub_1B435F8A4()
{
  unint64_t result;

  result = qword_1EF09EBE8;
  if (!qword_1EF09EBE8)
  {
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDF5E8], MEMORY[0x1E0CDF5D0]);
    atomic_store(result, (unint64_t *)&qword_1EF09EBE8);
  }
  return result;
}

uint64_t type metadata accessor for ImageAttachmentsView.CornerMask(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09ED78);
}

uint64_t sub_1B435F904(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDB8A0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B435F974()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EC40;
  if (!qword_1EF09EC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EC48);
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CDB158];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EC40);
  }
  return result;
}

unint64_t sub_1B435F9D8()
{
  unint64_t result;

  result = qword_1EF09EC50;
  if (!qword_1EF09EC50)
  {
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CE0558], MEMORY[0x1E0CE0580]);
    atomic_store(result, (unint64_t *)&qword_1EF09EC50);
  }
  return result;
}

unint64_t sub_1B435FA1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EC60;
  if (!qword_1EF09EC60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EC20);
    v2[0] = sub_1B435FAA0();
    v2[1] = sub_1B41E1C74(&qword_1EF09EC98, &qword_1EF09ECA0, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EC60);
  }
  return result;
}

unint64_t sub_1B435FAA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EC68;
  if (!qword_1EF09EC68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EC18);
    v2[0] = sub_1B435FB24();
    v2[1] = sub_1B41E1C74(&qword_1EF09EC88, &qword_1EF09EC90, MEMORY[0x1E0CD8A38]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EC68);
  }
  return result;
}

unint64_t sub_1B435FB24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EC70;
  if (!qword_1EF09EC70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EC10);
    v2[0] = sub_1B435FBA8();
    v2[1] = sub_1B41E1C74(&qword_1EF09EBA8, &qword_1EF09E7E8, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EC70);
  }
  return result;
}

unint64_t sub_1B435FBA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EC78;
  if (!qword_1EF09EC78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EC08);
    v2[0] = sub_1B41E1C74(&qword_1EF09EC80, &qword_1EF09EC00, MEMORY[0x1E0CD8308]);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EC78);
  }
  return result;
}

uint64_t objectdestroy_73Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B435FC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  __int16 v6;
  char v7;

  result = sub_1B435C124(a1, *(void (**)(uint64_t *__return_ptr))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_WORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 18) = v7 & 1;
  return result;
}

uint64_t sub_1B435FC98(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CB44(result, a2, a3 & 1);
    return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return result;
}

uint64_t sub_1B435FCC8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B435CBC0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ListBadge.Core(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09EE18);
}

uint64_t sub_1B435FD0C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1B41E1C74(a3, a4, MEMORY[0x1E0CD8668]);
    v9[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1B435FD8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_QWORD *)(a1 + 48) = a2[6];
    v6 = *(int *)(a3 + 36);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1B49061B8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1B435FE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v3 = sub_1B49061B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1B435FEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 36);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1B49061B8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1B435FF90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 36);
    v5 = (_QWORD *)((char *)a1 + v4);
    v6 = (_QWORD *)((char *)a2 + v4);
    sub_1B41EA560((uint64_t)a1 + v4, &qword_1EF09E830);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B49061B8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B436007C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 36);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1B49061B8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1B4360134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v5 = *(int *)(a3 + 36);
    v6 = (void *)(a1 + v5);
    v7 = (const void *)(a2 + v5);
    sub_1B41EA560(a1 + v5, &qword_1EF09E830);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09E830);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_1B49061B8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B4360204()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4360210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 36);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E9B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1B4360254()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4360260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 36);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF09E9B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_1B43602A8()
{
  unint64_t v0;

  sub_1B435F4D4(319, qword_1EF09EA20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9AA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1B4360348(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1B4904244();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1B43603D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_1B4360414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_1B4360474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B43604E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1B436053C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B4904244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1B43605A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43605AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_66Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D85278]);
}

uint64_t __swift_get_extra_inhabitant_index_66Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_1B4360634()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4360640(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_67Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D85278]);
}

uint64_t __swift_store_extra_inhabitant_index_67Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1B43606C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B4904244();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1B436073C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EE50;
  if (!qword_1EF09EE50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EE58);
    v2[0] = sub_1B435F700(&qword_1EF09EC58, &qword_1EF09EC28, (uint64_t (*)(void))sub_1B435FA1C, MEMORY[0x1E0CD90E0]);
    v2[1] = sub_1B435FB24();
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EE50);
  }
  return result;
}

uint64_t sub_1B43607C8()
{
  return sub_1B41E1C74(&qword_1EF09EE60, &qword_1EF09EE68, MEMORY[0x1E0CE0680]);
}

uint64_t sub_1B43607F4()
{
  return sub_1B41E1C74(&qword_1EF09EE70, &qword_1EF09EE78, MEMORY[0x1E0CDFCF8]);
}

uint64_t sub_1B4360820()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B4360830()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B4360840()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EE88;
  if (!qword_1EF09EE88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EE80);
    v2[0] = sub_1B43608C4();
    v2[1] = sub_1B41E1C74(&qword_1EF09EE98, &qword_1EF09EEA0, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EE88);
  }
  return result;
}

unint64_t sub_1B43608C4()
{
  unint64_t result;

  result = qword_1EF09EE90;
  if (!qword_1EF09EE90)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B49195C8, &type metadata for ListBadge.IconBackground);
    atomic_store(result, (unint64_t *)&qword_1EF09EE90);
  }
  return result;
}

unint64_t sub_1B4360908()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EEB8;
  if (!qword_1EF09EEB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EEA8);
    v2[0] = sub_1B436098C();
    v2[1] = sub_1B41E1C74(&qword_1EF09EEC8, &qword_1EF09EED0, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EEB8);
  }
  return result;
}

unint64_t sub_1B436098C()
{
  unint64_t result;

  result = qword_1EF09EEC0;
  if (!qword_1EF09EEC0)
  {
    result = MEMORY[0x1B5E3D6D8](&unk_1B4919578, &type metadata for ListBadge.EmojiBackground);
    atomic_store(result, (unint64_t *)&qword_1EF09EEC0);
  }
  return result;
}

uint64_t sub_1B43609D0()
{
  return sub_1B435F904(&qword_1EF09EED8, &qword_1EF09EEB0, (uint64_t (*)(void))sub_1B4360840, (uint64_t (*)(void))sub_1B43608C4);
}

uint64_t initializeBufferWithCopyOfBuffer for ListBadge.IconBackground(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for ListBadge.IconBackground()
{
  return swift_release();
}

_QWORD *assignWithCopy for ListBadge.IconBackground(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ListBadge.IconBackground(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for ListBadge.IconBackground()
{
  return &type metadata for ListBadge.IconBackground;
}

ValueMetadata *type metadata accessor for ListBadge.EmojiBackground()
{
  return &type metadata for ListBadge.EmojiBackground;
}

uint64_t sub_1B4360AE0()
{
  return sub_1B435F700(&qword_1EF09EEE0, &qword_1EF09EEE8, sub_1B4360B14, MEMORY[0x1E0CDC4F0]);
}

uint64_t sub_1B4360B14()
{
  return sub_1B435F700(&qword_1EF09EEF0, &qword_1EF09EEF8, (uint64_t (*)(void))sub_1B4360B38, MEMORY[0x1E0CDC4A8]);
}

unint64_t sub_1B4360B38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EF00;
  if (!qword_1EF09EF00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EF08);
    v2[0] = sub_1B4360BE4(&qword_1EF09EF10, &qword_1EF09EF18, &qword_1EF09EF30, &qword_1EF09EF38);
    v2[1] = sub_1B41E1C74(&qword_1EF09EF30, &qword_1EF09EF38, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EF00);
  }
  return result;
}

uint64_t sub_1B4360BE4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1B41E1C74(&qword_1EF09EF20, &qword_1EF09EF28, MEMORY[0x1E0CD8668]);
    v9[1] = sub_1B41E1C74(a3, a4, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B4360C88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF09EF40;
  if (!qword_1EF09EF40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EF48);
    v2 = sub_1B435F904(&qword_1EF09EF50, &qword_1EF09EF58, (uint64_t (*)(void))sub_1B4360908, sub_1B43609D0);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EF40);
  }
  return result;
}

uint64_t sub_1B4360D0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B4360D1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B4360D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_retain();
  return result;
}

uint64_t sub_1B4360D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

uint64_t sub_1B4360D5C()
{
  return sub_1B435FD0C(&qword_1EF09EF88, &qword_1EF09EF90, &qword_1EF09EF20, &qword_1EF09EF28);
}

unint64_t sub_1B4360D94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF09EF98;
  if (!qword_1EF09EF98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF09EF80);
    v2[0] = sub_1B4360BE4(&qword_1EF09EFA0, &qword_1EF09EF68, &qword_1EF09EFA8, &qword_1EF09EF60);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF09EF98);
  }
  return result;
}

uint64_t sub_1B4360E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1B49058F4();
  __swift_allocate_value_buffer(v0, qword_1EF09EFB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF09EFB0);
  if (qword_1ED4EE460 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED4F2120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id TTRReminderLocationPickerLocalSearchResultItemProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *TTRReminderLocationPickerLocalSearchResultItemProvider.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  id v3;
  char *v4;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise] = 0;
  v2 = &v0[OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchText];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  *(_OWORD *)&v0[OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchLocation] = *MEMORY[0x1E0C9E500];
  v3 = objc_allocWithZone(MEMORY[0x1E0CC17F8]);
  v4 = v0;
  v5 = objc_msgSend(v3, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_localSearchCompleter] = v5;

  v12.receiver = v4;
  v12.super_class = ObjectType;
  v6 = (char *)objc_msgSendSuper2(&v12, sel_init);
  v7 = OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_localSearchCompleter;
  v8 = *(void **)&v6[OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_localSearchCompleter];
  v9 = v6;
  objc_msgSend(v8, sel_setDelegate_, v9);
  v10 = *(id *)&v6[v7];
  objc_msgSend(v10, sel_setResultTypes_, 3);

  return v9;
}

id TTRReminderLocationPickerLocalSearchResultItemProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t TTRReminderLocationPickerLocalSearchResultItemProvider.items(matching:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;
  double v16;
  double v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  double *v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  _QWORD v36[2];
  CLLocationCoordinate2D v37;
  CLLocationCoordinate2D v38;

  v7 = v6;
  v36[0] = a1;
  v11 = sub_1B49067A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B41DF50C(0, (unint64_t *)&qword_1ED4EE3F0);
  *v14 = sub_1B4907520();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v15 = sub_1B49067B8();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (a5 >> 2 != 0xFFFFFFFF || (a6 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  v16 = *MEMORY[0x1E0C9E500];
  v17 = *(double *)(MEMORY[0x1E0C9E500] + 8);
  v18 = (_QWORD *)(v7
                 + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchText);
  v19 = v36[0];
  v20 = *(_QWORD *)(v7
                  + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchText) == v36[0]
     && *(_QWORD *)(v7
                  + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchText
                  + 8) == a2;
  if (v20 || (sub_1B4908390() & 1) != 0)
  {
    v21 = *(double *)(v7
                    + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchLocation);
    v22 = *(double *)(v7
                    + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchLocation
                    + 8);
    v37.latitude = v21;
    v37.longitude = v22;
    if (CLLocationCoordinate2DIsValid(v37))
    {
      v38.latitude = v16;
      v38.longitude = v17;
      if (CLLocationCoordinate2DIsValid(v38)
        && hypot(v21 - v16, v22 - v17) < 0.001
        && *(_QWORD *)(v7
                     + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise))
      {
        swift_retain();
        v23 = sub_1B4903DF4();
        if (v23)
          goto LABEL_22;
        __break(1u);
      }
    }
  }
  v24 = OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_localSearchCompleter;
  objc_msgSend(*(id *)(v7+ OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_localSearchCompleter), sel_cancel, v36[0]);
  v25 = OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise;
  if (*(_QWORD *)(v7
                 + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise))
  {
    v26 = sub_1B4903DAC();
    sub_1B42DE0A4();
    v27 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0D84C80], v26);
    swift_retain();
    sub_1B4903DE8();

    swift_release();
  }
  *(_QWORD *)(v7 + v25) = 0;
  swift_release();
  *v18 = v19;
  v18[1] = a2;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v29 = (double *)(v7
                 + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentSearchLocation);
  *v29 = v16;
  v29[1] = v17;
  v30 = v18[1];
  v31 = *v18 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v30) & 0xF;
  if (!v31)
  {
    v36[1] = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EFF0);
    swift_allocObject();
    return sub_1B4905744();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09EFE8);
  swift_allocObject();
  *(_QWORD *)(v7 + v25) = sub_1B4903E0C();
  swift_retain();
  swift_release();
  v32 = *(id *)(v7 + v24);
  v33 = (void *)sub_1B4906A34();
  objc_msgSend(v32, sel_setQueryFragment_, v33);

  v23 = sub_1B4903DF4();
  if (!v23)
  {
LABEL_26:
    __break(1u);
    JUMPOUT(0x1B436149CLL);
  }
LABEL_22:
  v34 = v23;
  swift_release();
  return v34;
}

uint64_t sub_1B43614B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  return TTRReminderLocationPickerLocalSearchResultItemProvider.items(matching:location:)(a1, a2, a3, a4, a5, a6);
}

Swift::Void __swiftcall TTRReminderLocationPickerLocalSearchResultItemProvider.completerDidUpdateResults(_:)(MKLocalSearchCompleter a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise))
  {
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise) = 0;
    v2 = -[objc_class results](a1.super.isa, sel_results);
    sub_1B41DF50C(0, &qword_1EF09EFF8);
    v3 = sub_1B4906DAC();

    if (v3 >> 62)
    {
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v4 = sub_1B49081B0();
      if (v4)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        v5 = 0;
        v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v3 & 0xC000000000000001) != 0)
            v7 = (id)MEMORY[0x1B5E3C268](v5, v3);
          else
            v7 = *(id *)(v3 + 8 * v5 + 32);
          v8 = v7;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1B4292154(0, v6[2] + 1, 1, v6);
          v10 = v6[2];
          v9 = v6[3];
          if (v10 >= v9 >> 1)
            v6 = sub_1B4292154((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
          v6[2] = v10 + 1;
          v11 = &v6[7 * v10];
          v11[4] = v8;
          ++v5;
          *(_OWORD *)(v11 + 5) = 0u;
          *(_OWORD *)(v11 + 7) = 0u;
          v11[9] = 0;
          *((_BYTE *)v11 + 80) = 0x80;
        }
        while (v4 != v5);
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1B4903E00();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t TTRReminderLocationPickerLocalSearchResultItemProvider.completer(_:didFailWithError:)(uint64_t a1, uint64_t a2)
{
  return sub_1B436178C(a2);
}

void sub_1B4361770(void *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a3 >> 2 != 0xFFFFFFFF || (a4 & 0xF000000000000007) != 0)
    sub_1B41F3164(a1, a2, a3, a4);
}

uint64_t sub_1B436178C(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise))
  {
    v2 = (void *)result;
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC15RemindersUICore54TTRReminderLocationPickerLocalSearchResultItemProvider_currentFetchPromise) = 0;
    if (qword_1EF097D20 != -1)
      swift_once();
    v3 = sub_1B49058F4();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EF09EFB0);
    v4 = v2;
    v5 = v2;
    v6 = sub_1B49058E8();
    v7 = sub_1B4907388();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v12 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue();
      v10 = sub_1B490842C();
      sub_1B41EF7C8(v10, v11, &v12);
      sub_1B4907B68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B41C2000, v6, v7, "LocalSearchResultItemProvider got error from MKLocalSearchCompleter {error: %s}", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E3D7E0](v9, -1, -1);
      MEMORY[0x1B5E3D7E0](v8, -1, -1);
    }
    else
    {

    }
    sub_1B4903DE8();
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRReminderLocationPickerLocalSearchResultItem()
{
  return &type metadata for TTRReminderLocationPickerLocalSearchResultItem;
}

uint64_t type metadata accessor for TTRReminderLocationPickerLocalSearchResultItemProvider()
{
  return objc_opt_self();
}

uint64_t static TTRRemindersPrintingViewModel.ParentChildState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  char v2;

  v2 = a1 == 2;
  if (a2 != 2)
    v2 = 0;
  if (a1 != 2 && a2 != 2)
    v2 = ((a1 & 1) == 0) ^ a2;
  return v2 & 1;
}

uint64_t sub_1B43619E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.DisplayDate.string.getter(uint64_t a1)
{
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.DisplayDate.showsAsOverdue.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.ImageAttachment.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

double TTRRemindersPrintingViewModel.Reminder.ImageAttachment.imageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0
                   + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(0) + 20));
}

uint64_t type metadata accessor for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F250);
}

uint64_t TTRRemindersPrintingViewModel.Reminder.Assignment.avatarURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B41EA51C(v1, a1, &qword_1ED4E9EC0);
}

uint64_t TTRRemindersPrintingViewModel.Reminder.Assignment.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0) + 20));
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F2E0);
}

uint64_t TTRRemindersPrintingViewModel.Reminder.parentChildState.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.parentChildState.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.parentChildState.modify())()
{
  return nullsub_1;
}

id TTRRemindersPrintingViewModel.Reminder.listColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void TTRRemindersPrintingViewModel.Reminder.listColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.listColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.isCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TTRRemindersPrintingViewModel.Reminder.isCompleted.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.isCompleted.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.title.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.notes.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.hashtags.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.hashtags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.hashtags.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.displayDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.displayDate.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = a2;
  *(_BYTE *)(v3 + 88) = a3;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.displayDate.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.recurrenceDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.recurrenceDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.recurrenceDescription.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.assignment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  return sub_1B41EA51C(v1 + *(int *)(v3 + 48), a1, &qword_1EF099850);
}

uint64_t type metadata accessor for TTRRemindersPrintingViewModel.Reminder(uint64_t a1)
{
  return sub_1B4204D08(a1, (uint64_t *)&unk_1EF09F190);
}

uint64_t TTRRemindersPrintingViewModel.Reminder.assignment.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0) + 48);
  return sub_1B4361E7C(a1, v3);
}

uint64_t sub_1B4361E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.assignment.modify())(_QWORD)
{
  type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0) + 52));
}

uint64_t TTRRemindersPrintingViewModel.Reminder.flagged.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.flagged.modify())(_QWORD)
{
  type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.Reminder.imageAttachments.getter()
{
  type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRRemindersPrintingViewModel.Reminder.imageAttachments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0) + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.Reminder.imageAttachments.modify())(_QWORD)
{
  type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  return nullsub_1;
}

BOOL static TTRRemindersPrintingViewModel.ReminderColorSource.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TTRRemindersPrintingViewModel.ReminderColorSource.hash(into:)()
{
  return sub_1B49084A4();
}

uint64_t TTRRemindersPrintingViewModel.ReminderColorSource.hashValue.getter()
{
  sub_1B4908498();
  sub_1B49084A4();
  return sub_1B49084D4();
}

uint64_t TTRRemindersPrintingViewModel.listName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingViewModel.listName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.listName.modify())()
{
  return nullsub_1;
}

id TTRRemindersPrintingViewModel.listColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void TTRRemindersPrintingViewModel.listColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*TTRRemindersPrintingViewModel.listColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t TTRRemindersPrintingViewModel.count.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.count.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.items.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRRemindersPrintingViewModel.items.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.items.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.resourceDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel(0) + 32);
  v4 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TTRRemindersPrintingViewModel(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F0F0);
}

uint64_t TTRRemindersPrintingViewModel.resourceDirectory.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel(0) + 32);
  v4 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TTRRemindersPrintingViewModel.resourceDirectory.modify())(_QWORD)
{
  type metadata accessor for TTRRemindersPrintingViewModel(0);
  return nullsub_1;
}

uint64_t TTRRemindersPrintingViewModel.reminderColorSource.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel(0) + 36));
}

uint64_t TTRRemindersPrintingViewModel.reminderColorSource.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for TTRRemindersPrintingViewModel(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*TTRRemindersPrintingViewModel.reminderColorSource.modify())(_QWORD)
{
  type metadata accessor for TTRRemindersPrintingViewModel(0);
  return nullsub_1;
}

uint64_t TTRRemindersPrintingListTree.listName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingListTree.listName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TTRRemindersPrintingListTree.listName.modify())()
{
  return nullsub_1;
}

id TTRRemindersPrintingListTree.listColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void TTRRemindersPrintingListTree.listColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*TTRRemindersPrintingListTree.listColor.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingListTree.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t TTRRemindersPrintingListTree.count.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*TTRRemindersPrintingListTree.count.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingListTree.sections.getter()
{
  return _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
}

uint64_t TTRRemindersPrintingListTree.sections.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*TTRRemindersPrintingListTree.sections.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingListTree.reminderColorSource.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t TTRRemindersPrintingListTree.reminderColorSource.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result & 1;
  return result;
}

uint64_t (*TTRRemindersPrintingListTree.reminderColorSource.modify())()
{
  return nullsub_1;
}

uint64_t TTRRemindersPrintingHTMLResult.html.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v1;
}

uint64_t TTRRemindersPrintingHTMLResult.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B43624B8(type metadata accessor for TTRRemindersPrintingHTMLResult, a1);
}

uint64_t type metadata accessor for TTRRemindersPrintingHTMLResult(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F418);
}

uint64_t TTRRemindersPrintingHTMLResult.footerText.getter()
{
  return sub_1B4362510(type metadata accessor for TTRRemindersPrintingHTMLResult);
}

uint64_t TTRRemindersPrintingHTMLFileResult.htmlURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TTRRemindersPrintingHTMLFileResult(0) + 20);
  v4 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TTRRemindersPrintingHTMLFileResult(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F4B0);
}

uint64_t TTRRemindersPrintingHTMLFileResult.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B43624B8(type metadata accessor for TTRRemindersPrintingHTMLFileResult, a1);
}

uint64_t sub_1B43624B8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t TTRRemindersPrintingHTMLFileResult.footerText.getter()
{
  return sub_1B4362510(type metadata accessor for TTRRemindersPrintingHTMLFileResult);
}

uint64_t sub_1B4362510(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 28));
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return v2;
}

unint64_t sub_1B4362554()
{
  unint64_t result;

  result = qword_1EF09F090;
  if (!qword_1EF09F090)
  {
    result = MEMORY[0x1B5E3D6D8](&protocol conformance descriptor for TTRRemindersPrintingViewModel.ReminderColorSource, &type metadata for TTRRemindersPrintingViewModel.ReminderColorSource);
    atomic_store(result, (unint64_t *)&qword_1EF09F090);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v9 = (void *)a2[2];
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v10 = *(int *)(a3 + 32);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_QWORD *)(a1 + 40) = a2[5];
    v13 = sub_1B49036D4();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v15 = v9;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v14(v11, v12, v13);
    *((_BYTE *)v4 + *(int *)(a3 + 36)) = *((_BYTE *)a2 + *(int *)(a3 + 36));
  }
  return v4;
}

uint64_t destroy for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v8 = *(void **)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v12 = sub_1B49036D4();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v14 = v8;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v13(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithCopy for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t initializeWithTake for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for TTRRemindersPrintingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43629A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4362A2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B4362AA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B49036D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingViewModel.ParentChildState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B4362B90 + 4 * asc_1B4919720[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel.ParentChildState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B4362C48 + 4 * byte_1B491972A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B4362C7C + 4 * byte_1B4919725[v5]))();
}

uint64_t sub_1B4362C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4362C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B4362C8CLL);
  return result;
}

uint64_t sub_1B4362C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B4362CA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B4362CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4362CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersPrintingViewModel.ParentChildState()
{
  return &type metadata for TTRRemindersPrintingViewModel.ParentChildState;
}

_QWORD *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v6 = (void *)a2[1];
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v10;
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v11 = a2[13];
    v12 = a3[12];
    __dst = (char *)(a1 + v12);
    v13 = (char *)a2 + v12;
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v11;
    v14 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
    v28 = *(_QWORD *)(v14 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v15 = v6;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v29(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = sub_1B49036D4();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v13, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v21 = *(int *)(v14 + 20);
      v22 = &__dst[v21];
      v23 = &v13[v21];
      v24 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v25(__dst, 0, 1, v14);
    }
    v26 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *(_QWORD *)((char *)v4 + v26) = *(uint64_t *)((char *)a2 + v26);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return v4;
}

uint64_t destroy for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1B49036D4();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *__dst;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 104);
  v11 = a3[12];
  __dst = (char *)(a1 + v11);
  v12 = (char *)(a2 + v11);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v13 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  v26 = *(_QWORD *)(v13 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v14 = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  if (v27(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1B49036D4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v19 = *(int *)(v13 + 20);
    v20 = &__dst[v19];
    v21 = &v12[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v23(__dst, 0, 1, v13);
  }
  v24 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v9 = a3[12];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1B41EA5FC((uint64_t)v10, type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment);
      goto LABEL_7;
    }
    v21 = sub_1B49036D4();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v24 = v23(v10, 1, v21);
    v25 = v23(v11, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v10, v11, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
LABEL_16:
        v31 = *(int *)(v12 + 20);
        v32 = &v10[v31];
        v33 = &v11[v31];
        *(_QWORD *)v32 = *(_QWORD *)v33;
        *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v10, v11, v21);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_17;
  }
  v17 = sub_1B49036D4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v11, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  }
  v26 = *(int *)(v12 + 20);
  v27 = &v10[v26];
  v28 = &v11[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v29(v10, 0, 1, v12);
LABEL_17:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = a3[12];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v9 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1B49036D4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    *(_OWORD *)&v7[*(int *)(v9 + 20)] = *(_OWORD *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v15 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for TTRRemindersPrintingViewModel.Reminder(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[12];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1B41EA5FC((uint64_t)v13, type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment);
      goto LABEL_7;
    }
    v24 = sub_1B49036D4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v13, 1, v24);
    v28 = v26(v14, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v13, v14, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v24);
LABEL_16:
        v30 = *(int *)(v15 + 20);
        v31 = &v13[v30];
        v32 = &v14[v30];
        v34 = *(_QWORD *)v32;
        v33 = *((_QWORD *)v32 + 1);
        *(_QWORD *)v31 = v34;
        *((_QWORD *)v31 + 1) = v33;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v13, v14, v24);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_16;
  }
  if (v19)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  v20 = sub_1B49036D4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v13, v14, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
  }
  *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_17:
  v35 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4363998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4363A24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

void sub_1B4363A9C()
{
  unint64_t v0;

  sub_1B429685C(319, qword_1EF09F1A0, (void (*)(uint64_t))type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B4363B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListViewModel.ListNameData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TTRRemindersListViewModel.ListNameData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModel.ListNameData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModel.ListNameData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersPrintingViewModel.Reminder.DisplayDate()
{
  return &type metadata for TTRRemindersPrintingViewModel.Reminder.DisplayDate;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B49036D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TTRRemindersPrintingViewModel.Reminder.ImageAttachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder.ImageAttachment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4363F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder.ImageAttachment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4363F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B49036D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1B4363F98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B49036D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingViewModel.Reminder.Assignment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B49036D4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return a1;
}

uint64_t destroy for TTRRemindersPrintingViewModel.Reminder.Assignment(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1B49036D4();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for TTRRemindersPrintingViewModel.Reminder.Assignment(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

char *assignWithCopy for TTRRemindersPrintingViewModel.Reminder.Assignment(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for TTRRemindersPrintingViewModel.Reminder.Assignment(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for TTRRemindersPrintingViewModel.Reminder.Assignment(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1B49036D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder.Assignment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4364538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel.Reminder.Assignment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B43645C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1B4364648()
{
  unint64_t v0;

  sub_1B429685C(319, (unint64_t *)&qword_1ED4E9EC8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingViewModel.Item(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  void *v48;
  char *__dst;
  uint64_t v50;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v48 = (void *)*((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 1) = v48;
      a1[16] = a2[16];
      v19 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v19;
      v20 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v20;
      v21 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v21;
      v22 = *((_QWORD *)a2 + 10);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = v22;
      a1[88] = a2[88];
      v23 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = v23;
      v24 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
      v25 = *(int *)(v24 + 48);
      __dst = &a1[v25];
      v50 = v24;
      v26 = &a2[v25];
      v27 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
      v46 = *(_QWORD *)(v27 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      v28 = v48;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v47(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v37 = sub_1B49036D4();
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v26, 1, v37))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v26, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
        }
        v40 = *(int *)(v27 + 20);
        v41 = &__dst[v40];
        v42 = &v26[v40];
        v43 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v43;
        v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v44(__dst, 0, 1, v27);
      }
      a1[*(int *)(v50 + 52)] = a2[*(int *)(v50 + 52)];
      *(_QWORD *)&a1[*(int *)(v50 + 56)] = *(_QWORD *)&a2[*(int *)(v50 + 56)];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      goto LABEL_17;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v8;
      v9 = (void *)*((_QWORD *)a2 + 2);
      v10 = *((_QWORD *)a2 + 3);
      v11 = *((_QWORD *)a2 + 4);
      v12 = *((_QWORD *)a2 + 5);
      v13 = *((_QWORD *)a2 + 6);
      v14 = *((_QWORD *)a2 + 7);
      v15 = a2[64];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B41E9D64(v9, v10, v11, v12, v13, v14, v15);
      *((_QWORD *)a1 + 2) = v9;
      *((_QWORD *)a1 + 3) = v10;
      *((_QWORD *)a1 + 4) = v11;
      *((_QWORD *)a1 + 5) = v12;
      *((_QWORD *)a1 + 6) = v13;
      *((_QWORD *)a1 + 7) = v14;
      a1[64] = v15;
      *(_DWORD *)(a1 + 65) = *(_DWORD *)(a2 + 65);
      v16 = a2[120];
      if (v16 == 255)
      {
        v17 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v17;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        a1[120] = a2[120];
      }
      else
      {
        v30 = v16 & 1;
        v31 = (void *)*((_QWORD *)a2 + 9);
        v32 = *((_QWORD *)a2 + 10);
        v33 = *((_QWORD *)a2 + 11);
        v34 = *((_QWORD *)a2 + 12);
        v35 = *((_QWORD *)a2 + 13);
        v36 = *((_QWORD *)a2 + 14);
        sub_1B41DF628(v31, v32, v33, v34, v35, v36, v16 & 1);
        *((_QWORD *)a1 + 9) = v31;
        *((_QWORD *)a1 + 10) = v32;
        *((_QWORD *)a1 + 11) = v33;
        *((_QWORD *)a1 + 12) = v34;
        *((_QWORD *)a1 + 13) = v35;
        *((_QWORD *)a1 + 14) = v36;
        a1[120] = v30;
      }
      a1[121] = a2[121];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void destroy for TTRRemindersPrintingViewModel.Item(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0) + 48);
    v5 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = sub_1B49036D4();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    sub_1B41E9C70(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
    v3 = *(unsigned __int8 *)(a1 + 120);
    if (v3 != 255)
      sub_1B41E9C98(*(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v3 & 1);
  }
}

char *initializeWithCopy for TTRRemindersPrintingViewModel.Item(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  char *__dst;
  int *v47;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v17 = (void *)*((_QWORD *)a2 + 1);
    *((_QWORD *)a1 + 1) = v17;
    a1[16] = a2[16];
    v18 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 4) = v18;
    v19 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a1 + 6) = v19;
    v20 = *((_QWORD *)a2 + 8);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a1 + 8) = v20;
    v21 = *((_QWORD *)a2 + 10);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a1 + 10) = v21;
    a1[88] = a2[88];
    v22 = *((_QWORD *)a2 + 13);
    *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a1 + 13) = v22;
    v47 = (int *)type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
    v23 = v47[12];
    __dst = &a1[v23];
    v24 = &a2[v23];
    v25 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
    v44 = *(_QWORD *)(v25 - 8);
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    v26 = v17;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    if (v45(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v35 = sub_1B49036D4();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v24, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v24, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
      }
      v38 = *(int *)(v25 + 20);
      v39 = &__dst[v38];
      v40 = &v24[v38];
      v41 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = v41;
      v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v42(__dst, 0, 1, v25);
    }
    a1[v47[13]] = a2[v47[13]];
    *(_QWORD *)&a1[v47[14]] = *(_QWORD *)&a2[v47[14]];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = (void *)*((_QWORD *)a2 + 2);
    v9 = *((_QWORD *)a2 + 3);
    v10 = *((_QWORD *)a2 + 4);
    v11 = *((_QWORD *)a2 + 5);
    v12 = *((_QWORD *)a2 + 6);
    v13 = *((_QWORD *)a2 + 7);
    v14 = a2[64];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B41E9D64(v8, v9, v10, v11, v12, v13, v14);
    *((_QWORD *)a1 + 2) = v8;
    *((_QWORD *)a1 + 3) = v9;
    *((_QWORD *)a1 + 4) = v10;
    *((_QWORD *)a1 + 5) = v11;
    *((_QWORD *)a1 + 6) = v12;
    *((_QWORD *)a1 + 7) = v13;
    a1[64] = v14;
    *(_DWORD *)(a1 + 65) = *(_DWORD *)(a2 + 65);
    v15 = a2[120];
    if (v15 == 255)
    {
      v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      a1[120] = a2[120];
    }
    else
    {
      v28 = v15 & 1;
      v29 = (void *)*((_QWORD *)a2 + 9);
      v30 = *((_QWORD *)a2 + 10);
      v31 = *((_QWORD *)a2 + 11);
      v32 = *((_QWORD *)a2 + 12);
      v33 = *((_QWORD *)a2 + 13);
      v34 = *((_QWORD *)a2 + 14);
      sub_1B41DF628(v29, v30, v31, v32, v33, v34, v15 & 1);
      *((_QWORD *)a1 + 9) = v29;
      *((_QWORD *)a1 + 10) = v30;
      *((_QWORD *)a1 + 11) = v31;
      *((_QWORD *)a1 + 12) = v32;
      *((_QWORD *)a1 + 13) = v33;
      *((_QWORD *)a1 + 14) = v34;
      a1[120] = v28;
    }
    a1[121] = a2[121];
LABEL_15:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for TTRRemindersPrintingViewModel.Item(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *__dst;

  if (a1 != a2)
  {
    sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRemindersPrintingViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v18 = (void *)*((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 1) = v18;
      a1[16] = a2[16];
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      a1[88] = a2[88];
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      v41 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
      v19 = *(int *)(v41 + 48);
      __dst = &a1[v19];
      v20 = &a2[v19];
      v21 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
      v40 = *(_QWORD *)(v21 - 8);
      v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      v22 = v18;
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      if (v42(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v24 = v41;
      }
      else
      {
        v32 = sub_1B49036D4();
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v20, 1, v32))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v20, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
        }
        v24 = v41;
        v35 = *(int *)(v21 + 20);
        v36 = &__dst[v35];
        v37 = &v20[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
        v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        v38(__dst, 0, 1, v21);
      }
      a1[*(int *)(v24 + 52)] = a2[*(int *)(v24 + 52)];
      *(_QWORD *)&a1[*(int *)(v24 + 56)] = *(_QWORD *)&a2[*(int *)(v24 + 56)];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      v7 = (void *)*((_QWORD *)a2 + 2);
      v8 = *((_QWORD *)a2 + 3);
      v9 = *((_QWORD *)a2 + 4);
      v10 = *((_QWORD *)a2 + 5);
      v11 = *((_QWORD *)a2 + 6);
      v12 = *((_QWORD *)a2 + 7);
      v13 = a2[64];
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B41E9D64(v7, v8, v9, v10, v11, v12, v13);
      *((_QWORD *)a1 + 2) = v7;
      *((_QWORD *)a1 + 3) = v8;
      *((_QWORD *)a1 + 4) = v9;
      *((_QWORD *)a1 + 5) = v10;
      *((_QWORD *)a1 + 6) = v11;
      *((_QWORD *)a1 + 7) = v12;
      a1[64] = v13;
      a1[65] = a2[65];
      a1[66] = a2[66];
      a1[67] = a2[67];
      a1[68] = a2[68];
      v14 = a2[120];
      if (v14 == 255)
      {
        v15 = *(_OWORD *)(a2 + 72);
        v16 = *(_OWORD *)(a2 + 88);
        v17 = *(_OWORD *)(a2 + 104);
        a1[120] = a2[120];
        *(_OWORD *)(a1 + 88) = v16;
        *(_OWORD *)(a1 + 104) = v17;
        *(_OWORD *)(a1 + 72) = v15;
      }
      else
      {
        v25 = v14 & 1;
        v26 = (void *)*((_QWORD *)a2 + 9);
        v27 = *((_QWORD *)a2 + 10);
        v28 = *((_QWORD *)a2 + 11);
        v29 = *((_QWORD *)a2 + 12);
        v30 = *((_QWORD *)a2 + 13);
        v31 = *((_QWORD *)a2 + 14);
        sub_1B41DF628(v26, v27, v28, v29, v30, v31, v14 & 1);
        *((_QWORD *)a1 + 9) = v26;
        *((_QWORD *)a1 + 10) = v27;
        *((_QWORD *)a1 + 11) = v28;
        *((_QWORD *)a1 + 12) = v29;
        *((_QWORD *)a1 + 13) = v30;
        *((_QWORD *)a1 + 14) = v31;
        a1[120] = v25;
      }
      a1[121] = a2[121];
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for TTRRemindersPrintingViewModel.Item(uint64_t a1)
{
  return sub_1B4204D08(a1, qword_1EF09F388);
}

char *initializeWithTake for TTRRemindersPrintingViewModel.Item(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    a1[16] = a2[16];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    a1[88] = a2[88];
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    v6 = (int *)type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
    v7 = v6[12];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = sub_1B49036D4();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    a1[v6[13]] = a2[v6[13]];
    *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for TTRRemindersPrintingViewModel.Item(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1B41EA5FC((uint64_t)a1, type metadata accessor for TTRRemindersPrintingViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      a1[88] = a2[88];
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      v6 = (int *)type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
      v7 = v6[12];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = sub_1B49036D4();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E9EC0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
        }
        *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      a1[v6[13]] = a2[v6[13]];
      *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModel.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModel.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1B4365644()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B4365654()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TTRRemindersPrintingViewModel.Reminder(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingViewModel.ReminderColorSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B4365710 + 4 * byte_1B4919734[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B4365744 + 4 * byte_1B491972F[v4]))();
}

uint64_t sub_1B4365744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B436574C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B4365754);
  return result;
}

uint64_t sub_1B4365760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B4365768);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B436576C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B4365774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersPrintingViewModel.ReminderColorSource()
{
  return &type metadata for TTRRemindersPrintingViewModel.ReminderColorSource;
}

uint64_t destroy for TTRRemindersPrintingListTree(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRRemindersPrintingListTree(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v6 = v5;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersPrintingListTree(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for TTRRemindersPrintingListTree(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingListTree(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingListTree(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersPrintingListTree()
{
  return &type metadata for TTRRemindersPrintingListTree;
}

uint64_t destroy for TTRRemindersPrintingListTree.Section(uint64_t a1)
{
  int v2;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    sub_1B41E9C70(*(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
    v2 = *(unsigned __int8 *)(a1 + 120);
    if (v2 != 255)
      sub_1B41E9C98(*(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v2 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRRemindersPrintingListTree.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(void **)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    v10 = *(_QWORD *)(a2 + 56);
    v11 = *(_BYTE *)(a2 + 64);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B41E9D64(v5, v6, v7, v8, v9, v10, v11);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = v11;
    *(_DWORD *)(a1 + 65) = *(_DWORD *)(a2 + 65);
    v12 = *(unsigned __int8 *)(a2 + 120);
    if (v12 == 255)
    {
      v13 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v13;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
    }
    else
    {
      v17 = v12 & 1;
      v18 = *(void **)(a2 + 72);
      v19 = *(_QWORD *)(a2 + 80);
      v20 = *(_QWORD *)(a2 + 88);
      v21 = *(_QWORD *)(a2 + 96);
      v22 = *(_QWORD *)(a2 + 104);
      v23 = *(_QWORD *)(a2 + 112);
      sub_1B41DF628(v18, v19, v20, v21, v22, v23, v12 & 1);
      *(_QWORD *)(a1 + 72) = v18;
      *(_QWORD *)(a1 + 80) = v19;
      *(_QWORD *)(a1 + 88) = v20;
      *(_QWORD *)(a1 + 96) = v21;
      *(_QWORD *)(a1 + 104) = v22;
      *(_QWORD *)(a1 + 112) = v23;
      *(_BYTE *)(a1 + 120) = v17;
    }
    *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    v16 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v16;
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

uint64_t assignWithCopy for TTRRemindersPrintingListTree.Section(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  _OWORD *v19;
  __int128 *v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      swift_bridgeObjectRelease();
      v5 = (void *)*((_QWORD *)a2 + 2);
      v6 = *((_QWORD *)a2 + 3);
      v7 = *((_QWORD *)a2 + 4);
      v8 = *((_QWORD *)a2 + 5);
      v9 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
      v11 = *((_BYTE *)a2 + 64);
      sub_1B41E9D64(v5, v6, v7, v8, v9, v10, v11);
      v12 = *(void **)(a1 + 16);
      v13 = *(_QWORD *)(a1 + 24);
      v14 = *(_QWORD *)(a1 + 32);
      v15 = *(_QWORD *)(a1 + 40);
      v16 = *(_QWORD *)(a1 + 48);
      v17 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 16) = v5;
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v9;
      *(_QWORD *)(a1 + 56) = v10;
      v18 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v11;
      sub_1B41E9C70(v12, v13, v14, v15, v16, v17, v18);
      *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
      *(_BYTE *)(a1 + 66) = *((_BYTE *)a2 + 66);
      *(_BYTE *)(a1 + 67) = *((_BYTE *)a2 + 67);
      *(_BYTE *)(a1 + 68) = *((_BYTE *)a2 + 68);
      v19 = (_OWORD *)(a1 + 72);
      v20 = (__int128 *)((char *)a2 + 72);
      v21 = *((unsigned __int8 *)a2 + 120);
      if (*(unsigned __int8 *)(a1 + 120) != 255)
      {
        if (v21 == 255)
        {
          sub_1B4365E80(a1 + 72);
          v23 = *(__int128 *)((char *)a2 + 88);
          v22 = *(__int128 *)((char *)a2 + 104);
          v24 = *v20;
          *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
          *(_OWORD *)(a1 + 88) = v23;
          *(_OWORD *)(a1 + 104) = v22;
          *v19 = v24;
        }
        else
        {
          v57 = v21 & 1;
          v58 = (void *)*((_QWORD *)a2 + 9);
          v59 = *((_QWORD *)a2 + 10);
          v60 = *((_QWORD *)a2 + 11);
          v61 = *((_QWORD *)a2 + 12);
          v62 = *((_QWORD *)a2 + 13);
          v63 = *((_QWORD *)a2 + 14);
          sub_1B41DF628(v58, v59, v60, v61, v62, v63, v21 & 1);
          v64 = *(void **)(a1 + 72);
          v65 = *(_QWORD *)(a1 + 80);
          v66 = *(_QWORD *)(a1 + 88);
          v67 = *(_QWORD *)(a1 + 96);
          v68 = *(_QWORD *)(a1 + 104);
          v69 = *(_QWORD *)(a1 + 112);
          v70 = *(_BYTE *)(a1 + 120);
          *(_QWORD *)(a1 + 72) = v58;
          *(_QWORD *)(a1 + 80) = v59;
          *(_QWORD *)(a1 + 88) = v60;
          *(_QWORD *)(a1 + 96) = v61;
          *(_QWORD *)(a1 + 104) = v62;
          *(_QWORD *)(a1 + 112) = v63;
          *(_BYTE *)(a1 + 120) = v57;
          sub_1B41E9C98(v64, v65, v66, v67, v68, v69, v70);
        }
        goto LABEL_15;
      }
      if (v21 == 255)
      {
        v41 = *v20;
        v42 = *(__int128 *)((char *)a2 + 88);
        v43 = *(__int128 *)((char *)a2 + 104);
        *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
        *(_OWORD *)(a1 + 88) = v42;
        *(_OWORD *)(a1 + 104) = v43;
        *v19 = v41;
        goto LABEL_15;
      }
      goto LABEL_12;
    }
    sub_1B4365EB4(a1);
    v35 = a2[3];
    v37 = *a2;
    v36 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v35;
    *(_OWORD *)a1 = v37;
    *(_OWORD *)(a1 + 16) = v36;
    v39 = a2[5];
    v38 = a2[6];
    v40 = a2[4];
    *(_OWORD *)(a1 + 106) = *(__int128 *)((char *)a2 + 106);
    *(_OWORD *)(a1 + 80) = v39;
    *(_OWORD *)(a1 + 96) = v38;
    *(_OWORD *)(a1 + 64) = v40;
  }
  else
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v25 = (void *)*((_QWORD *)a2 + 2);
      v26 = *((_QWORD *)a2 + 3);
      v27 = *((_QWORD *)a2 + 4);
      v28 = *((_QWORD *)a2 + 5);
      v29 = *((_QWORD *)a2 + 6);
      v30 = *((_QWORD *)a2 + 7);
      v31 = *((_BYTE *)a2 + 64);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      sub_1B41E9D64(v25, v26, v27, v28, v29, v30, v31);
      *(_QWORD *)(a1 + 16) = v25;
      *(_QWORD *)(a1 + 24) = v26;
      *(_QWORD *)(a1 + 32) = v27;
      *(_QWORD *)(a1 + 40) = v28;
      *(_QWORD *)(a1 + 48) = v29;
      *(_QWORD *)(a1 + 56) = v30;
      *(_BYTE *)(a1 + 64) = v31;
      *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
      *(_BYTE *)(a1 + 66) = *((_BYTE *)a2 + 66);
      *(_BYTE *)(a1 + 67) = *((_BYTE *)a2 + 67);
      *(_BYTE *)(a1 + 68) = *((_BYTE *)a2 + 68);
      v21 = *((unsigned __int8 *)a2 + 120);
      if (v21 == 255)
      {
        v32 = *(__int128 *)((char *)a2 + 72);
        v33 = *(__int128 *)((char *)a2 + 88);
        v34 = *(__int128 *)((char *)a2 + 104);
        *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
        *(_OWORD *)(a1 + 88) = v33;
        *(_OWORD *)(a1 + 104) = v34;
        *(_OWORD *)(a1 + 72) = v32;
LABEL_15:
        *(_BYTE *)(a1 + 121) = *((_BYTE *)a2 + 121);
        goto LABEL_16;
      }
LABEL_12:
      v44 = v21 & 1;
      v45 = (void *)*((_QWORD *)a2 + 9);
      v46 = *((_QWORD *)a2 + 10);
      v47 = *((_QWORD *)a2 + 11);
      v48 = *((_QWORD *)a2 + 12);
      v49 = *((_QWORD *)a2 + 13);
      v50 = *((_QWORD *)a2 + 14);
      sub_1B41DF628(v45, v46, v47, v48, v49, v50, v21 & 1);
      *(_QWORD *)(a1 + 72) = v45;
      *(_QWORD *)(a1 + 80) = v46;
      *(_QWORD *)(a1 + 88) = v47;
      *(_QWORD *)(a1 + 96) = v48;
      *(_QWORD *)(a1 + 104) = v49;
      *(_QWORD *)(a1 + 112) = v50;
      *(_BYTE *)(a1 + 120) = v44;
      goto LABEL_15;
    }
    v51 = *a2;
    v52 = a2[1];
    v53 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v53;
    *(_OWORD *)a1 = v51;
    *(_OWORD *)(a1 + 16) = v52;
    v54 = a2[4];
    v55 = a2[5];
    v56 = a2[6];
    *(_OWORD *)(a1 + 106) = *(__int128 *)((char *)a2 + 106);
    *(_OWORD *)(a1 + 80) = v55;
    *(_OWORD *)(a1 + 96) = v56;
    *(_OWORD *)(a1 + 64) = v54;
  }
LABEL_16:
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B4365E80(uint64_t a1)
{
  destroy for TTRListColors.Color(a1);
  return a1;
}

uint64_t sub_1B4365EB4(uint64_t a1)
{
  destroy for TTRRemindersListViewModel.SectionHeaderTitle(a1);
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for TTRRemindersPrintingListTree.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_BYTE *)(a2 + 64);
      v6 = *(void **)(a1 + 16);
      v7 = *(_QWORD *)(a1 + 24);
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 40);
      v10 = *(_QWORD *)(a1 + 48);
      v11 = *(_QWORD *)(a1 + 56);
      v12 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      v13 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v5;
      sub_1B41E9C70(v6, v7, v8, v9, v10, v11, v13);
      *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
      *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
      *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
      v14 = *(unsigned __int8 *)(a1 + 120);
      if (v14 != 255)
      {
        v15 = *(unsigned __int8 *)(a2 + 120);
        if (v15 != 255)
        {
          v20 = *(void **)(a1 + 72);
          v21 = *(_QWORD *)(a1 + 80);
          v22 = *(_QWORD *)(a1 + 88);
          v23 = *(_QWORD *)(a1 + 96);
          v24 = *(_QWORD *)(a1 + 104);
          v25 = *(_QWORD *)(a1 + 112);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          *(_BYTE *)(a1 + 120) = v15 & 1;
          sub_1B41E9C98(v20, v21, v22, v23, v24, v25, v14 & 1);
          goto LABEL_10;
        }
        sub_1B4365E80(a1 + 72);
      }
      v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
LABEL_10:
      *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
      goto LABEL_11;
    }
    sub_1B4365EB4(a1);
  }
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
LABEL_11:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingListTree.Section(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingListTree.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 128) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersPrintingListTree.Section()
{
  return &type metadata for TTRRemindersPrintingListTree.Section;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingHTMLResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1B49036D4();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return v4;
}

uint64_t destroy for TTRRemindersPrintingHTMLResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B49036D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TTRRemindersPrintingHTMLResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1B49036D4();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v12(v9, v10, v11);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

_QWORD *assignWithCopy for TTRRemindersPrintingHTMLResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B49036D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for TTRRemindersPrintingHTMLResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B49036D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for TTRRemindersPrintingHTMLResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1B49036D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingHTMLResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B436650C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingHTMLResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4366594(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B4366608()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B49036D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for TTRRemindersPrintingHTMLFileResult(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1B49036D4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  }
  return v4;
}

uint64_t destroy for TTRRemindersPrintingHTMLFileResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B49036D4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for TTRRemindersPrintingHTMLFileResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B49036D4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  return a1;
}

char *assignWithCopy for TTRRemindersPrintingHTMLFileResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B49036D4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for TTRRemindersPrintingHTMLFileResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B49036D4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for TTRRemindersPrintingHTMLFileResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B49036D4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v16 = *v14;
  v15 = v14[1];
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersPrintingHTMLFileResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4366AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TTRRemindersPrintingHTMLFileResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B4366B28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1B49036D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B4366B9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B49036D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B4366C14@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t *v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  int *v42;
  id v43;
  id v44;
  void *v45;
  unint64_t v46;
  uint64_t (*v47)(char *, uint64_t, int *);
  int v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unsigned __int8 v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  id v78;
  void *v79;
  id v80;
  BOOL v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t result;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(char *, uint64_t, int *);
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  id v100;
  uint64_t v101;
  _QWORD v102[5];
  _QWORD v103[7];
  _QWORD v104[6];
  char v105;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
  MEMORY[0x1E0C80A78](v6);
  v101 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  v98 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v89 = (uint64_t *)((char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EE300);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4EB840);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v88 - v17;
  *(_QWORD *)&v20 = MEMORY[0x1E0C80A78](v19).n128_u64[0];
  v22 = (uint64_t *)((char *)&v88 - v21);
  v96 = v12;
  if (a2)
  {
    v100 = a2;
  }
  else
  {
    v23 = v15;
    v24 = objc_msgSend(a1, sel_list, v20);
    v104[3] = sub_1B41DF50C(0, &qword_1ED4ED018);
    v104[4] = &protocol witness table for REMList;
    v104[0] = v24;
    sub_1B4699128((uint64_t)v104, (uint64_t)v103);
    v25 = (void *)v103[0];
    sub_1B41EA560((uint64_t)v104, (uint64_t *)&unk_1ED4EE3B0);
    sub_1B41E9D28((uint64_t)v103, (uint64_t)v104);
    if ((v105 & 1) != 0)
    {
      v26 = (void *)v104[0];
      v27 = v25;
      objc_msgSend(v26, sel_red);
      v29 = v28;
      objc_msgSend(v26, sel_green);
      v31 = v30;
      objc_msgSend(v26, sel_blue);
      v33 = v32;
      objc_msgSend(v26, sel_alpha);
      v100 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v29, v31, v33, v34);
      sub_1B42176C0((uint64_t)v103);
      sub_1B42176C0((uint64_t)v103);
    }
    else
    {
      v99 = v8;
      v35 = v22;
      type metadata accessor for RemindersUICoreBundleLookupObject();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v37 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
      v38 = v37;
      v39 = (void *)sub_1B4906A34();
      swift_bridgeObjectRelease();
      v40 = (void *)objc_opt_self();
      v41 = objc_msgSend(v40, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v39, v38, 0);

      if (v41)
        v100 = v41;
      else
        v100 = objc_msgSend(v40, sel_redColor);
      sub_1B42176C0((uint64_t)v103);
      v22 = v35;
      v8 = v99;
    }
    v15 = v23;
  }
  v102[3] = sub_1B41DF50C(0, (unint64_t *)&unk_1ED4ECEE0);
  v102[4] = &protocol witness table for REMReminder;
  v102[0] = a1;
  v42 = a2;
  v43 = a1;
  static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)(v102, 0, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v102);
  v44 = objc_msgSend(v43, sel_recurrenceRules);
  if (v44)
  {
    v45 = v44;
    sub_1B41DF50C(0, (unint64_t *)&qword_1ED4ECF50);
    v46 = sub_1B4906DAC();

  }
  else
  {
    v46 = 0;
  }
  sub_1B41EA51C((uint64_t)v22, (uint64_t)v18, &qword_1ED4EB840);
  v47 = *(uint64_t (**)(char *, uint64_t, int *))(v98 + 48);
  v48 = v47(v18, 1, v8);
  v99 = v42;
  v94 = v47;
  if (v48 == 1)
  {
    sub_1B41EA560((uint64_t)v18, &qword_1ED4EB840);
    v49 = sub_1B49037E8();
    v50 = (uint64_t)v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v96, 1, 1, v49);
  }
  else
  {
    v51 = v8;
    v52 = sub_1B49037E8();
    v53 = v15;
    v54 = *(_QWORD *)(v52 - 8);
    v50 = (uint64_t)v96;
    (*(void (**)(void))(v54 + 16))();
    sub_1B41EA5FC((uint64_t)v18, type metadata accessor for TTRRemindersListViewModel.DisplayDate);
    v55 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56);
    v15 = v53;
    v56 = v52;
    v8 = v51;
    v55(v50, 0, 1, v56);
  }
  v97 = _s15RemindersUICore25TTRRemindersListViewModelC8ReminderV21recurrenceDescription4from11displayDateSSSgSaySo17REMRecurrenceRuleCGSg_10Foundation0L0VSgtFZ_0(v46, v50);
  v58 = v57;
  swift_bridgeObjectRelease();
  sub_1B41EA560(v50, &qword_1ED4EE300);
  v59 = objc_msgSend(v43, sel_parentReminder);

  v60 = objc_msgSend(v43, sel_isCompleted);
  v61 = objc_msgSend(v43, sel_titleAsString);
  if (v61)
  {
    v62 = v61;
    v63 = sub_1B4906A64();
    v95 = v64;

  }
  else
  {
    v63 = 0;
    v95 = 0xE000000000000000;
  }
  v65 = objc_msgSend(v43, sel_notesAsString);
  if (v65)
  {
    v66 = v65;
    v93 = sub_1B4906A64();
    v92 = v67;

  }
  else
  {
    v93 = 0;
    v92 = 0;
  }
  v68 = sub_1B4367464();
  v90 = v69;
  sub_1B41EA51C((uint64_t)v22, (uint64_t)v15, &qword_1ED4EB840);
  v70 = v94(v15, 1, v8);
  v98 = v58;
  v96 = (char *)v63;
  v91 = v68;
  if (v70 == 1)
  {
    v71 = v60;
    v72 = (uint64_t)v22;
    v73 = 0;
    v74 = 0;
    v75 = 0;
  }
  else
  {
    v72 = (uint64_t)v22;
    v76 = v89;
    sub_1B43677F4((uint64_t)v15, (uint64_t)v89);
    v71 = v60;
    if (v76[1])
    {
      v73 = *v76;
      v74 = v76[1];
    }
    else
    {
      v73 = 0;
      v74 = 0xE000000000000000;
    }
    v75 = *((_BYTE *)v76 + v8[7]);
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B41EA5FC((uint64_t)v76, type metadata accessor for TTRRemindersListViewModel.DisplayDate);
  }
  v77 = type metadata accessor for TTRRemindersPrintingViewModel.Reminder.Assignment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v101, 1, 1, v77);
  v78 = objc_msgSend(v43, sel_flaggedContext);
  if (v78)
  {
    v79 = v78;
    v80 = objc_msgSend(v78, sel_flagged);

    v81 = v80 != 0;
  }
  else
  {
    v81 = 0;
  }

  sub_1B41EA560(v72, &qword_1ED4EB840);
  *(_BYTE *)a3 = 2 * (v59 != 0);
  *(_QWORD *)(a3 + 8) = v100;
  *(_BYTE *)(a3 + 16) = v71;
  v82 = v95;
  *(_QWORD *)(a3 + 24) = v96;
  *(_QWORD *)(a3 + 32) = v82;
  v83 = v92;
  *(_QWORD *)(a3 + 40) = v93;
  *(_QWORD *)(a3 + 48) = v83;
  v84 = v90;
  *(_QWORD *)(a3 + 56) = v91;
  *(_QWORD *)(a3 + 64) = v84;
  *(_QWORD *)(a3 + 72) = v73;
  *(_QWORD *)(a3 + 80) = v74;
  *(_BYTE *)(a3 + 88) = v75;
  v85 = v98;
  *(_QWORD *)(a3 + 96) = v97;
  *(_QWORD *)(a3 + 104) = v85;
  v86 = (int *)type metadata accessor for TTRRemindersPrintingViewModel.Reminder(0);
  result = sub_1B43677AC(v101, a3 + v86[12]);
  *(_BYTE *)(a3 + v86[13]) = v81;
  *(_QWORD *)(a3 + v86[14]) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1B4367464()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;

  v1 = objc_msgSend(v0, sel_hashtags);
  sub_1B41DF50C(0, &qword_1ED4E16E8);
  sub_1B4367838();
  v2 = sub_1B49070AC();

  v3 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = sub_1B4907D48();
    if (v4)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    v32 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
    sub_1B4221ECC();
    v31 = sub_1B49069BC();
    swift_bridgeObjectRelease();
    return v31;
  }
  v4 = *(_QWORD *)(v2 + 16);
  if (!v4)
    goto LABEL_6;
LABEL_3:
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1B41FE678(0, v4 & ~(v4 >> 63), 0);
  if (v3)
  {
    result = sub_1B4907CF4();
    v7 = 1;
  }
  else
  {
    result = sub_1B442AE9C(v2);
    v7 = v9 & 1;
  }
  v34 = result;
  v35 = v6;
  v36 = v7;
  if ((v4 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        sub_1B442AB28(v34, v35, v36, v2);
        v19 = v18;
        v20 = sub_1B4906AF4();
        v22 = v21;
        v23 = objc_msgSend(v19, sel_name);
        sub_1B4906A64();

        v32 = v20;
        v33 = v22;
        _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
        sub_1B4906B78();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v24 = v32;
        v25 = v33;
        v26 = v37;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1B41FE678(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v37;
        }
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          result = sub_1B41FE678(v27 > 1, v28 + 1, 1);
          v26 = v37;
        }
        *(_QWORD *)(v26 + 16) = v28 + 1;
        v29 = v26 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v24;
        *(_QWORD *)(v29 + 40) = v25;
        if (v3)
          break;
        v10 = v34;
        v11 = v35;
        v12 = v36;
        v13 = sub_1B442AA2C(v34, v35, v36, v2);
        v15 = v14;
        v17 = v16;
        sub_1B4204E3C(v10, v11, v12);
        v34 = v13;
        v35 = v15;
        v36 = v17 & 1;
        if (!--v4)
          goto LABEL_20;
      }
      if ((v36 & 1) == 0)
        goto LABEL_23;
      if (sub_1B4907D0C())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF09F4F0);
      v30 = (void (*)(uint64_t *, _QWORD))sub_1B49070D0();
      sub_1B4907D9C();
      v30(&v32, 0);
      --v4;
    }
    while (v4);
LABEL_20:
    sub_1B4204E3C(v34, v35, v36);
    swift_bridgeObjectRelease();
    v8 = v37;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1B43677AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF099850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B43677F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TTRRemindersListViewModel.DisplayDate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B4367838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4E16F0;
  if (!qword_1ED4E16F0)
  {
    v1 = sub_1B41DF50C(255, &qword_1ED4E16E8);
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4E16F0);
  }
  return result;
}

uint64_t TTRBoardColumnItemLayoutAttributes.backgroundRoundedCorners.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t TTRBoardColumnItemLayoutAttributes.backgroundRoundedCorners.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*TTRBoardColumnItemLayoutAttributes.backgroundRoundedCorners.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id TTRBoardColumnItemLayoutAttributes.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id TTRBoardColumnItemLayoutAttributes.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners] = 15;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

void TTRBoardColumnItemLayoutAttributes.copy(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char v9[32];
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_copyWithZone_, a1);
  sub_1B4907C4C();
  swift_unknownObjectRelease();
  sub_1B41F335C(a2, (uint64_t)v9);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = &v2[OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners];
    swift_beginAccess();
    v6 = *(_QWORD *)v5;
    v7 = &v8[OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners];
    swift_beginAccess();
    *(_QWORD *)v7 = v6;

  }
}

BOOL TTRBoardColumnItemLayoutAttributes.isEqual(_:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v9;
  objc_super v10;
  _BYTE v11[24];
  uint64_t v12;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1B421E650(a1, (uint64_t)v11);
  if (v12)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10.receiver = v1;
      v10.super_class = ObjectType;
      if (objc_msgSendSuper2(&v10, sel_isEqual_))
      {
        v4 = &v1[OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners];
        swift_beginAccess();
        v5 = *(_QWORD *)v4;
        v6 = &v9[OBJC_IVAR____TtC15RemindersUICore34TTRBoardColumnItemLayoutAttributes_backgroundRoundedCorners];
        swift_beginAccess();
        v7 = *(_QWORD *)v6;

        return v5 == v7;
      }

    }
  }
  else
  {
    sub_1B4314F88((uint64_t)v11);
  }
  return 0;
}

id TTRBoardColumnItemLayoutAttributes.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TTRBoardColumnItemLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t TTRMainActorDeferredAction.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1B5E3D8DC](v0 + 16);
}

uint64_t TTRMainActorDeferredAction.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRMainActorDeferredAction.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1B5E3D8DC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B42A6A2C;
}

_QWORD *TTRMainActorDeferredAction.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = sub_1B4903D4C();
  MEMORY[0x1E0C80A78](v0);
  v1 = (_QWORD *)swift_allocObject();
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  v2 = MEMORY[0x1E0DEE9D8];
  sub_1B4368054();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9320);
  sub_1B41E1C74((unint64_t *)&qword_1ED4E9330, (uint64_t *)&unk_1ED4E9320, MEMORY[0x1E0DEAF38]);
  sub_1B4907CC4();
  sub_1B4903D64();
  swift_allocObject();
  v1[4] = sub_1B4903D58();
  v1[5] = v2;
  return v1;
}

_QWORD *TTRMainActorDeferredAction.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1B4903D4C();
  MEMORY[0x1E0C80A78](v1);
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  v2 = MEMORY[0x1E0DEE9D8];
  sub_1B4368054();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4E9320);
  sub_1B41E1C74((unint64_t *)&qword_1ED4E9330, (uint64_t *)&unk_1ED4E9320, MEMORY[0x1E0DEAF38]);
  sub_1B4907CC4();
  sub_1B4903D64();
  swift_allocObject();
  v0[4] = sub_1B4903D58();
  v0[5] = v2;
  return v0;
}

unint64_t sub_1B4368054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED4E8FC0;
  if (!qword_1ED4E8FC0)
  {
    v1 = sub_1B4903D4C();
    result = MEMORY[0x1B5E3D6D8](MEMORY[0x1E0D84C00], v1);
    atomic_store(result, (unint64_t *)&qword_1ED4E8FC0);
  }
  return result;
}

Swift::Void __swiftcall TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;

  v2 = v1;
  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E6310);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(v2 + 32);
  v13 = v2;
  v14 = countAndFlagsBits;
  v15 = object;
  sub_1B4903D64();
  swift_retain();
  sub_1B4905690();
  swift_release();
  if (v17 == 1)
  {
    v8 = sub_1B4906F80();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    sub_1B4906F50();
    swift_retain();
    v9 = sub_1B4906F44();
    v10 = (_QWORD *)swift_allocObject();
    v11 = MEMORY[0x1E0DF06E8];
    v10[2] = v9;
    v10[3] = v11;
    v10[4] = v2;
    sub_1B4227FE0((uint64_t)v7, (uint64_t)&unk_1EF09F530, (uint64_t)v10);
    swift_release();
  }
}

uint64_t sub_1B43681F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t result;

  v8 = (_QWORD *)(a1 + 40);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  swift_beginAccess();
  v10 = *(_QWORD **)(a1 + 40);
  _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 40) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1B4290474(0, v10[2] + 1, 1, v10);
    *v8 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1B4290474((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    *v8 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = a2;
  v14[5] = a3;
  result = swift_endAccess();
  *a4 = v9 == 0;
  return result;
}

uint64_t sub_1B4368300@<X0>(BOOL *a1@<X8>)
{
  uint64_t *v1;

  return sub_1B43681F0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B436830C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a4;
  sub_1B4906F50();
  *(_QWORD *)(v4 + 56) = sub_1B4906F44();
  sub_1B4906EFC();
  return swift_task_switch();
}

uint64_t sub_1B4368378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 32);
  sub_1B4903D64();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
  sub_1B4905690();
  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 48) + 16;
    swift_beginAccess();
    if (MEMORY[0x1B5E3D8DC](v3))
    {
      v4 = *(_QWORD *)(v0 + 48);
      v5 = *(_QWORD *)(v4 + 24);
      ObjectType = swift_getObjectType();
      *(_QWORD *)(v0 + 40) = v2;
      sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
      v7 = sub_1B49069BC();
      v9 = v8;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, v7, v9, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B43684E4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B4368510(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1B4229B34;
  return sub_1B436830C(a1, v4, v5, v6);
}

Swift::Void __swiftcall TTRMainActorDeferredAction.drain(reason:)(Swift::String reason)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  sub_1B4903D64();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
  sub_1B4905690();
  swift_release();
  if (*(_QWORD *)(v8 + 16) && (swift_beginAccess(), MEMORY[0x1B5E3D8DC](v1 + 16)))
  {
    v3 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
    v5 = sub_1B49069BC();
    v7 = v6;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, v5, v7, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t TTRMainActorDeferredAction.deinit()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TTRMainActorDeferredAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B41F4748(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRMainActorDeferredAction()
{
  return objc_opt_self();
}

uint64_t sub_1B436875C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 40) = MEMORY[0x1E0DEE9D8];
  return result;
}

RemindersUICore::TTRUndoNavigationEditingTarget __swiftcall TTRUndoNavigationEditingTarget.init(reminderIDs:)(Swift::OpaquePointer reminderIDs)
{
  uint64_t v1;

  v1 = sub_1B4369DE0((unint64_t)reminderIDs._rawValue, (unint64_t *)&unk_1ED4ECEE0, 0x1E0D845E0, &qword_1EF099A88);
  swift_bridgeObjectRelease();
  return (RemindersUICore::TTRUndoNavigationEditingTarget)v1;
}

RemindersUICore::TTRUndoNavigationEditingTarget __swiftcall TTRUndoNavigationEditingTarget.init(sectionIDs:)(Swift::OpaquePointer sectionIDs)
{
  uint64_t v1;

  v1 = sub_1B4369DE0((unint64_t)sectionIDs._rawValue, &qword_1EF09F738, 0x1E0D844A0, &qword_1EF09F740);
  swift_bridgeObjectRelease();
  return (RemindersUICore::TTRUndoNavigationEditingTarget)v1;
}

uint64_t static TTRUndoContext<>.basic(with:)(void *a1)
{
  uint64_t v2;
  id v3;

  if (a1)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    v2 = 0;
  }
  v3 = a1;
  return v2;
}

{
  uint64_t v2;
  id v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  return v2;
}

uint64_t TTRUndoNavigationEditingTarget.init(id:itemType:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED4E5658);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B4911D70;
  sub_1B41F335C(a1, v4 + 32);
  sub_1B41E99E0(a2, (_OWORD *)(v4 + 64));
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

uint64_t TTRUndoContext.registerUndo(forEditing:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  void *v8;
  void *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[4];
  _QWORD v15[8];

  (*(void (**)(_QWORD *__return_ptr))(a5 + 16))(v15);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  v8 = (void *)v7(a4, a5);
  v9 = (void *)v7(a4, a5);
  sub_1B4369FEC((uint64_t)v15, (uint64_t)v14);
  v10 = (_OWORD *)swift_allocObject();
  v11 = v14[1];
  v10[1] = v14[0];
  v10[2] = v11;
  v12 = v14[3];
  v10[3] = v14[2];
  v10[4] = v12;
  sub_1B41DF50C(0, &qword_1ED4ECEF0);
  sub_1B4907364();

  swift_release();
  return sub_1B436A064((uint64_t)v15);
}

{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_retain();
  TTRUndoContext.registerUndo(forEditing:action:)(a1, (uint64_t)sub_1B436A144, v10, a4, a5);
  return swift_release();
}

uint64_t TTRUndoContext.registerUndo(forEditing:byDraining:groupSavesInto:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1B43693B0(a1, a2, 1, a3, a4, a5);
}

uint64_t TTRUndoNavigationEditingTarget.ItemID.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B41F335C(v1, a1);
}

uint64_t TTRUndoNavigationEditingTarget.ItemID.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B41F335C(v1 + 32, a1);
}

_OWORD *TTRUndoNavigationEditingTarget.ItemID.init(id:itemType:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_1B41E99E0(a1, a3);
  return sub_1B41E99E0(a2, a3 + 2);
}

uint64_t TTRUndoNavigationEditingTarget.itemIDs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TTRUndoNavigationEditingTarget.itemIDs.modify())()
{
  return nullsub_1;
}

BOOL TTRUndoNavigationEditingTarget.isEmpty.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t TTRUndoNavigationEditingTarget.description.getter(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[8];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    _s15RemindersUICore21TTRProcessEnvironmentV24dictionaryRepresentationSDyS2SGvg_0();
    sub_1B41FE678(0, v1, 0);
    v4 = a1 + 32;
    v2 = v10;
    do
    {
      sub_1B428AA0C(v4, (uint64_t)v9);
      sub_1B4907FDC();
      sub_1B428AA48((uint64_t)v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B41FE678(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1B41FE678(v5 > 1, v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0;
      *(_QWORD *)(v7 + 40) = 0xE000000000000000;
      v4 += 64;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  v9[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED4ECE10);
  sub_1B41E1C74((unint64_t *)&qword_1ED4ECE20, (uint64_t *)&unk_1ED4ECE10, MEMORY[0x1E0DEAF20]);
  sub_1B49069BC();
  swift_bridgeObjectRelease();
  v9[0] = 91;
  v9[1] = 0xE100000000000000;
  sub_1B4906B78();
  swift_bridgeObjectRelease();
  sub_1B4906B78();
  return v9[0];
}

