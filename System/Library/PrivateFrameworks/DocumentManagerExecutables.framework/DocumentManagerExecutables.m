uint64_t *DOCLog.Enumeration.unsafeMutableAddressor()
{
  if (qword_2540A6C90 != -1)
    swift_once();
  return &static DOCLog.Enumeration;
}

void *FPItem.SharingStatusOptions.compact.unsafeMutableAddressor()
{
  return &static FPItem.SharingStatusOptions.compact;
}

uint64_t *NSUserDefaults.docUserDefaults.unsafeMutableAddressor()
{
  if (qword_2540A6DF8 != -1)
    swift_once();
  return &static NSUserDefaults.docUserDefaults;
}

uint64_t destroy for DOCItemSortDescriptor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_21EA4F520(id a1@<X1>, uint64_t a2@<X0>, _QWORD *a3@<X8>)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  os_log_type_t v34;
  _QWORD *v35;
  void *v36;

  v6 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v8 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  if (objc_msgSend(a1, sel_isDataSeparatedDomain))
    v9 = v8 == 0;
  else
    v9 = 1;
  if (v9)
  {
LABEL_14:
    if ((objc_msgSend(a1, sel_isDataSeparatedDomain, v35) & 1) == 0 && v6)
    {
      v19 = v5;
      v20 = v6;
      v21 = objc_msgSend(a1, sel_identifier);
      if (v5)
      {
        v22 = sub_21EB02B88();
        v24 = v23;
        if (v22 == sub_21EB02B88() && v24 == v25)
        {

          swift_bridgeObjectRelease_n();
LABEL_27:
          if (qword_255469BE8 != -1)
            swift_once();
          v31 = sub_21EB0263C();
          __swift_project_value_buffer(v31, (uint64_t)static Logger.Enumeration);
          v27 = sub_21EB02624();
          v32 = sub_21EB02ED0();
          if (!os_log_type_enabled(v27, v32))
          {
            v8 = v6;
            goto LABEL_39;
          }
          v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v29 = 0;
          _os_log_impl(&dword_21EA4C000, v27, v32, "DOCICloudRootNode: returning existing node for personal iCloud", v29, 2u);
          v8 = v6;
          goto LABEL_36;
        }
        v30 = sub_21EB034C4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          goto LABEL_27;
      }
      else
      {

        v20 = v21;
      }

    }
    if (qword_255469BE8 != -1)
      swift_once();
    v33 = sub_21EB0263C();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.Enumeration);
    v27 = sub_21EB02624();
    v34 = sub_21EB02ED0();
    if (!os_log_type_enabled(v27, v34))
    {
      v8 = 0;
      goto LABEL_39;
    }
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_21EA4C000, v27, v34, "DOCICloudRootNode: the requested node hasn't been created yet", v29, 2u);
    v8 = 0;
    goto LABEL_36;
  }
  v36 = v6;
  v10 = v7;
  v11 = v8;
  v12 = objc_msgSend(a1, sel_identifier);
  if (!v7)
  {

    v11 = v12;
LABEL_13:

    v6 = v36;
    goto LABEL_14;
  }
  v35 = a3;
  v13 = sub_21EB02B88();
  v15 = v14;
  if (v13 == sub_21EB02B88() && v15 == v16)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v18 = sub_21EB034C4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    goto LABEL_13;
LABEL_21:
  if (qword_255469BE8 != -1)
    swift_once();
  v26 = sub_21EB0263C();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.Enumeration);
  v27 = sub_21EB02624();
  v28 = sub_21EB02ED0();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_21EA4C000, v27, v28, "DOCICloudRootNode: returning existing node for DataSeparated iCloud", v29, 2u);
LABEL_36:
    MEMORY[0x2207B6A18](v29, -1, -1);
  }
LABEL_39:

  *a3 = v8;
}

uint64_t sub_21EA4F9C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _OWORD v33[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F20);
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v31 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_21EB01F10();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v31)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v32 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v31)
        goto LABEL_34;
      v19 = *(_QWORD *)(v32 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v31)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v32 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v31)
              goto LABEL_34;
            v19 = *(_QWORD *)(v32 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((a2 & 1) != 0)
    {
      sub_21EA5951C(v22, v33);
    }
    else
    {
      sub_21EA5A05C((uint64_t)v22, (uint64_t)v33);
      sub_21EB01F10();
    }
    sub_21EB031C4();
    result = sub_21EB02B1C();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_21EA5951C(v33, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v30 = 1 << *(_BYTE *)(v5 + 32);
  if (v30 >= 64)
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v30;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA4FCCC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40) + *(_QWORD *)(**(_QWORD **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_21EA4FD98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21EA5B7F8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21EA9C604();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_21EAC3ED8(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

id sub_21EA4FE64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;

  v5 = sub_21EB02A80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v10 = v9;
  LOBYTE(v9) = sub_21EB02AA4();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_bundleVersionCache);
    swift_beginAccess();
    v13 = *v12;
    if (*(_QWORD *)(*v12 + 16))
    {
      swift_bridgeObjectRetain();
      v14 = sub_21EA5B7F8(a1, a2);
      if ((v15 & 1) != 0)
      {
        v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * v14 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v16)
        {
          swift_endAccess();
          goto LABEL_19;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_endAccess();
    v17 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v18 = objc_msgSend(v17, sel_infoDictionary);

    if (v18)
    {
      v19 = sub_21EB02AD4();

      if (*(_QWORD *)(v19 + 16) && (v20 = sub_21EA5B7F8(0x656C646E75424643, 0xEF6E6F6973726556), (v21 & 1) != 0))
      {
        sub_21EA5A05C(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v27);
      }
      else
      {
        v27 = 0u;
        v28 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v28 + 1))
      {
        if (swift_dynamicCast())
        {
          v23 = v26[0];
          v22 = v26[1];
          goto LABEL_18;
        }
LABEL_17:
        v23 = 0;
        v22 = 0;
LABEL_18:
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26[0] = *v12;
        *v12 = 0x8000000000000000;
        sub_21EA5BD84(v23, v22, a1, a2, isUniquelyReferenced_nonNull_native);
        *v12 = v26[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        if (!v22)
          return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
LABEL_19:
        v25 = sub_21EB02B58();
        swift_bridgeObjectRelease();
        return (id)v25;
      }
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_21EA5B5B0((uint64_t)&v27);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id DOCNode.fpfs_syncFetchFPItem()()
{
  void *v0;
  id v1;
  void *v2;
  dispatch_semaphore_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  id v7;

  v1 = objc_msgSend(v0, sel_fpfs_fpItem);
  if (v1)
    return v1;
  v3 = dispatch_semaphore_create(0);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  sub_21EB01F10();
  v6 = v3;
  DOCNode.fpfs_fetchFPItem(completion:)((uint64_t)sub_21EA878A4, v5);
  swift_release();
  sub_21EB0302C();

  swift_beginAccess();
  v2 = *(void **)(v4 + 16);
  v7 = v2;
  swift_release();
  return v2;
}

Swift::Void __swiftcall DOCAssertionCollection.invalidateAll()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t j;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
    goto LABEL_45;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 0;
    v4 = v1 & 0xC000000000000001;
    v23 = v1 + 32;
    v24 = v1 & 0xFFFFFFFFFFFFFF8;
    v5 = MEMORY[0x24BEE4AF8];
    v22 = v1;
    v25 = v1 & 0xC000000000000001;
    v26 = v2;
    while (v4)
    {
      v6 = MEMORY[0x2207B5B3C](v3, v1);
      v7 = __OFADD__(v3++, 1);
      if (v7)
        goto LABEL_41;
LABEL_12:
      v8 = *(_BYTE *)(v6 + 32);
      *(_BYTE *)(v6 + 32) = 0;
      if ((v8 & 1) == 0)
      {
        swift_release();
        goto LABEL_5;
      }
      v9 = (unint64_t *)(v6 + 40);
      swift_beginAccess();
      v10 = *(_QWORD *)(v6 + 40);
      v27 = v5;
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = sub_21EB0341C();
        if (v11)
        {
LABEL_15:
          if (v11 < 1)
            goto LABEL_43;
          for (i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0)
            {
              v13 = MEMORY[0x2207B5B3C](i, v10);
            }
            else
            {
              v13 = *(_QWORD *)(v10 + 8 * i + 32);
              sub_21EB01F10();
            }
            v14 = MEMORY[0x2207B6ACC](v13 + 16);
            swift_unknownObjectRelease();
            if (v14)
            {
              sub_21EB03338();
              sub_21EB03368();
              sub_21EB03374();
              sub_21EB03344();
            }
            else
            {
              swift_release();
            }
          }
          swift_bridgeObjectRelease();
          v15 = v27;
          v1 = v22;
          v5 = MEMORY[0x24BEE4AF8];
          goto LABEL_27;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      v5 = MEMORY[0x24BEE4AF8];
      v15 = MEMORY[0x24BEE4AF8];
LABEL_27:
      *v9 = v15;
      swift_bridgeObjectRelease();
      v16 = *v9;
      *v9 = v5;
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_21EB0341C();
        swift_bridgeObjectRelease();
        if (!v17)
        {
LABEL_40:
          swift_release();
          swift_bridgeObjectRelease();
          v4 = v25;
          v2 = v26;
          goto LABEL_5;
        }
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v17)
          goto LABEL_40;
      }
      if (v17 < 1)
        goto LABEL_44;
      for (j = 0; j != v17; ++j)
      {
        if ((v16 & 0xC000000000000001) != 0)
        {
          v21 = MEMORY[0x2207B5B3C](j, v16);
        }
        else
        {
          v21 = *(_QWORD *)(v16 + 8 * j + 32);
          sub_21EB01F10();
        }
        if (MEMORY[0x2207B6ACC](v21 + 16))
        {
          v19 = *(_QWORD *)(v21 + 24);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v6, ObjectType, v19);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      v4 = v25;
      v2 = v26;
      v5 = MEMORY[0x24BEE4AF8];
LABEL_5:
      if (v3 == v2)
        goto LABEL_46;
    }
    if (v3 >= *(_QWORD *)(v24 + 16))
      goto LABEL_42;
    v6 = *(_QWORD *)(v23 + 8 * v3);
    sub_21EB01F10();
    v7 = __OFADD__(v3++, 1);
    if (!v7)
      goto LABEL_12;
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    v2 = sub_21EB0341C();
  }
LABEL_46:
  swift_bridgeObjectRelease();
}

uint64_t sub_21EA50764(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F00);
  v36 = a2;
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_21EB01F10();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_21EB035A8();
    sub_21EB02BDC();
    result = sub_21EB035E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

id _s26DocumentManagerExecutables18DOCColumnViewSpecsC23specWithBrowsingContext15traitCollection17columnBrowserSizeACSgSo07UITraitL0C_So6CGSizeVtFZ_0(void *a1, double a2, double a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  double *v11;
  id v12;
  objc_super v14;

  if ((objc_msgSend(a1, sel_enclosedInUIPDocumentLanding) & 1) != 0
    || !DOCUsePadIdiomForTraits()
    || objc_msgSend(a1, sel_horizontalSizeClass) != (id)2)
  {
    return 0;
  }
  v6 = a1;
  sub_21EA52E08(v6);
  v8 = v7;
  v9 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = (double *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *v11 = a2;
  v11[1] = a3;
  *(_QWORD *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v8;
  v14.receiver = v10;
  v14.super_class = v9;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

uint64_t static UTType.doc_identifiers(forContentTypes:)()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  sub_21EB025DC();
  v1 = (void *)sub_21EB02CE4();
  v2 = objc_msgSend(v0, sel_doc_identifiersForContentTypes_, v1);

  v3 = sub_21EB02CF0();
  return v3;
}

void DOCItemGroupingBehavior.localizedName.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_21EA50C04()
{
  DOCItemSortMode.DisplayableMode.localizedName.getter(0);
}

id sub_21EA50C3C()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v1 = result;
    v2 = sub_21EB02168();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id *static DOCICloudRootNode.iCloudRootNode(for:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id *result;
  id v6;
  id v7;
  id *v8;

  v1 = (void *)a1;
  if (qword_2540A69F8 != -1)
    a1 = swift_once();
  v2 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v2);
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(qword_2540A6A18);
  sub_21EB02F6C();

  result = v8;
  if (!v8)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_shared);
    objc_msgSend(v6, sel_startIfNeeded);

    v7 = objc_allocWithZone((Class)type metadata accessor for DOCICloudRootNode());
    return sub_21EAFCDB0(v1);
  }
  return result;
}

void *sub_21EA50E1C()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20[3];
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  if (sub_21EB02BE8() >= 1)
  {
    v21 = 46;
    v22 = 0xE100000000000000;
    sub_21EB02C0C();
  }
  sub_21EB032E4();
  v2 = sub_21EB035F0();
  v4 = v3;
  swift_bridgeObjectRelease();
  v21 = v2;
  v22 = v4;
  sub_21EB02C0C();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  v6 = v2;
  v5 = v4;
  if (qword_2540A6BB0 != -1)
    swift_once();
  swift_beginAccess();
  if ((sub_21EA5DFD0(v6, v4, off_2540A6BA0) & 1) != 0)
  {
    if (qword_255469B70 != -1)
      swift_once();
    v7 = sub_21EB0263C();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.DocumentManager);
    swift_bridgeObjectRetain();
    v1 = sub_21EB02624();
    v8 = sub_21EB02EF4();
    if (os_log_type_enabled(v1, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v20[0] = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_21EA591E4(v6, v5, v20);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v1, v8, "ERROR: Associated storage key (%s) already exists, choose different uniqueSuffix!", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v10, -1, -1);
      MEMORY[0x2207B6A18](v9, -1, -1);

LABEL_17:
      v18 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v17 = (void *)sub_21EB02B58();
      objc_msgSend(v18, sel_initWithDomain_code_userInfo_, v17, -1, 0);

      swift_willThrow();
      return v17;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  swift_beginAccess();
  v11 = off_2540A6BA0;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  off_2540A6BA0 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_21EA5C430(0, v11[2] + 1, 1, v11);
    off_2540A6BA0 = v11;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    v11 = sub_21EA5C430((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    off_2540A6BA0 = v11;
  }
  v11[2] = v14 + 1;
  v15 = &v11[2 * v14];
  v15[4] = v6;
  v15[5] = v5;
  swift_endAccess();
  v16 = sub_21EB02BB8();
  swift_bridgeObjectRelease();
  v17 = strdup((const char *)(v16 + 32));
  swift_release();
  if (!v17)
  {
    __break(1u);
    goto LABEL_16;
  }
  return v17;
}

uint64_t sub_21EA511EC(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v13[4];
  uint64_t v14;

  swift_beginAccess();
  v5 = *(void **)(a3 + 32);
  v7 = *(void **)(a3 + 40);
  v6 = *(void **)(a3 + 48);
  v13[0] = *(id *)(a3 + 24);
  v13[1] = v5;
  v13[2] = v7;
  v13[3] = v6;
  v8 = v6;
  v9 = v13[0];
  v10 = v5;
  v11 = v7;
  a1(&v14, v13);

  return v14;
}

id DOCTypeToFocusController.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusInputBuffer];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusTimeout] = 0;
  v2 = OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_typeToFocusInputView;
  v3 = objc_allocWithZone(MEMORY[0x24BEBDB00]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_eventHadModifierKey] = 0;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for DOCTypeToFocusController();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_21EA51494()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unsigned __int8 v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  char *v27;
  char *v28;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21EB025DC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)&v27 - v10;
  if (qword_2540A6840 != -1)
    swift_once();
  v11 = (id)qword_2540A6830;
  v12 = (void *)sub_21EB02B58();
  v13 = objc_msgSend(v11, sel_objectForKey_, v12);

  if (!v13)
  {
    swift_bridgeObjectRetain();
    sub_21EB025E8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_21EA59E08((uint64_t)v2, (uint64_t *)&unk_2540A6540);
    }
    else
    {
      v15 = v27;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v27, v2, v3);
      sub_21EB02564();
      v16 = sub_21EB025AC();
      v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v9, v3);
      v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
      v19 = v28;
      v18(v28, v15, v3);
      if ((v16 & 1) != 0)
      {
        sub_21EB025A0();
        v20 = sub_21EB025AC();
        v17(v9, v3);
        v17(v19, v3);
        v17(v15, v3);
        v14 = v20 ^ 1;
LABEL_11:
        v21 = (void *)qword_2540A6830;
        v22 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
        v23 = v21;
        v24 = objc_msgSend(v22, sel_initWithBool_, v14 & 1);
        v25 = (void *)sub_21EB02B58();
        objc_msgSend(v23, sel_setObject_forKey_, v24, v25);

        return v14 & 1;
      }
      v17(v19, v3);
      v17(v15, v3);
    }
    v14 = 0;
    goto LABEL_11;
  }
  v14 = objc_msgSend(v13, sel_BOOLValue);

  return v14 & 1;
}

uint64_t sub_21EA51790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t aBlock;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void *v20;
  void (*v21)();
  uint64_t v22;

  v1 = sub_21EB02A20();
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02A5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain), sel_isDataSeparatedDomain))
  {
    if (qword_2540A6A10 != -1)
      swift_once();
    v14 = qword_2540A6A00;
    v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = sub_21EAFECA4;
    v22 = v8;
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v9 = &block_descriptor_4;
  }
  else
  {
    if (qword_2540A6A10 != -1)
      swift_once();
    v14 = qword_2540A6A00;
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = sub_21EA6145C;
    v22 = v10;
    aBlock = MEMORY[0x24BDAC760];
    v18 = 1107296256;
    v9 = &block_descriptor_27;
  }
  v19 = sub_21EA5EAB0;
  v20 = v9;
  v11 = _Block_copy(&aBlock);
  sub_21EB01F10();
  sub_21EB02A44();
  v16 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v7, v3, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return swift_release();
}

void sub_21EA51A58()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (**v16)(id);
  void (*v17)(id);
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer);
    if (v3)
    {
      v31 = MEMORY[0x24BEE4AF8];
      v4 = v2;
      v5 = v3;
      MEMORY[0x2207B5500]();
      if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21EB02D20();
      sub_21EB02D5C();
      sub_21EB02D08();
      v6 = v5;
      MEMORY[0x2207B5500]();
      if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21EB02D20();
      sub_21EB02D5C();
      sub_21EB02D08();
      v7 = objc_allocWithZone(MEMORY[0x24BE2BEA0]);
      sub_21EA579D4(0, (unint64_t *)&unk_2540A6EA0);
      v8 = (void *)sub_21EB02CE4();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v7, sel_initWithFINodes_, v8);

      v10 = (id *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_deferredCreationNode);
      swift_beginAccess();
      v11 = *v10;
      *v10 = v9;

      if (qword_255469BE8 != -1)
        swift_once();
      v12 = sub_21EB0263C();
      __swift_project_value_buffer(v12, (uint64_t)static Logger.Enumeration);
      v13 = sub_21EB02624();
      v14 = sub_21EB02F00();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_21EA4C000, v13, v14, "DOCICloudRootNode: compound node created", v15, 2u);
        MEMORY[0x2207B6A18](v15, -1, -1);
      }

      v16 = (void (**)(id))(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_observerBlock);
      swift_beginAccess();
      v17 = *v16;
      if (*v16)
      {
        sub_21EB01F10();
        v18 = sub_21EB02624();
        v19 = sub_21EB02F00();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_21EA4C000, v18, v19, "DOCICloudRootNode: calling observer block to start observing", v20, 2u);
          MEMORY[0x2207B6A18](v20, -1, -1);
        }

        v21 = *v10;
        v22 = *v10;
        v17(v21);

        sub_21EA5CA7C((uint64_t)v17);
      }
      else
      {

      }
      return;
    }
  }
  else
  {
    if (qword_255469BE8 != -1)
      swift_once();
    v23 = sub_21EB0263C();
    __swift_project_value_buffer(v23, (uint64_t)static Logger.Enumeration);
    v24 = sub_21EB02624();
    v25 = sub_21EB02EF4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21EA4C000, v24, v25, "iCloudContainer is nil. This should never happen at this stage.", v26, 2u);
      MEMORY[0x2207B6A18](v26, -1, -1);
    }

  }
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer))
  {
    if (qword_255469BE8 != -1)
      swift_once();
    v27 = sub_21EB0263C();
    __swift_project_value_buffer(v27, (uint64_t)static Logger.Enumeration);
    v28 = sub_21EB02624();
    v29 = sub_21EB02EF4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_21EA4C000, v28, v29, "AppLibrariesContainer is nil. This should never happen at this stage.", v30, 2u);
      MEMORY[0x2207B6A18](v30, -1, -1);
    }

  }
  sub_21EAFEC3C();
  swift_allocError();
  swift_willThrow();
}

unint64_t sub_21EA51F30(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_21EB0344C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = a4(v18);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_21EA5951C(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

char *DOCThreadSafeState.init(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  unint64_t v12;
  unint64_t v13;

  v11[0] = a1;
  v2 = *(_QWORD *)v1;
  v3 = sub_21EB02F48();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_21EB02F30();
  MEMORY[0x24BDAC7A8](v8);
  sub_21EA5D1AC();
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_21EB032E4();
  swift_bridgeObjectRelease();
  v12 = 0xD000000000000012;
  v13 = 0x800000021EB0B280;
  v9 = *(_QWORD *)(v2 + 80);
  v11[1] = v9;
  swift_getMetatypeMetadata();
  sub_21EB02BA0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB02F24();
  sub_21EB02A44();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5750], v3);
  *((_QWORD *)v1 + 2) = sub_21EB02F84();
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], v11[0], v9);
  return v1;
}

uint64_t _sSo14NSNotificationC26DocumentManagerExecutablesE23SubscriptionsControllerC10invalidateyySSF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_21EA5B7F8(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v9, sel_removeObserver_, v8);
      swift_unknownObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  sub_21EA4FD98(a1, a2);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void sub_21EA52368(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v31[11];
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v2 = sub_21EB02A20();
  v3 = *(_QWORD *)(v2 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02A5C();
  v34 = *(_QWORD *)(v6 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v33 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB029FC();
  v31[8] = *(_QWORD *)(v8 - 8);
  v31[9] = v8;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v32 = sub_21EB02A74();
  v31[7] = *(_QWORD *)(v32 - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v31[6] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v31[10] = (char *)v31 - v11;
  v12 = sub_21EB02618();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x2207B6ACC](a1 + 16);
  if (v16)
  {
    v17 = (char *)v16;
    v31[4] = v2;
    if (qword_255469BE8 != -1)
      swift_once();
    v31[1] = v6;
    v31[2] = v5;
    v18 = sub_21EB0263C();
    v31[5] = __swift_project_value_buffer(v18, (uint64_t)static Logger.Enumeration);
    v19 = sub_21EB02624();
    v20 = sub_21EB02F00();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_21EA4C000, v19, v20, "DOCICloudRootNode: building containers...", v21, 2u);
      MEMORY[0x2207B6A18](v21, -1, -1);
    }
    v31[3] = v3;

    sub_21EB03008();
    if (qword_2540A6C50 != -1)
      swift_once();
    sub_21EB0260C();
    sub_21EB02600();
    v22 = *(void (**)(char *, uint64_t))(v13 + 8);
    v22(v15, v12);
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_iCloudDefaultContainer);
    v25 = *(void **)&v17[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer];
    *(_QWORD *)&v17[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer] = v24;

    v26 = objc_msgSend(v23, sel_iCloudLibrariesContainer);
    v27 = *(void **)&v17[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer];
    *(_QWORD *)&v17[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_appLibrariesContainer] = v26;

    sub_21EB02FFC();
    sub_21EB0260C();
    sub_21EB02600();
    v22(v15, v12);
    sub_21EA51A58();
    v28 = sub_21EB02624();
    v29 = sub_21EB02F00();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_21EA4C000, v28, v29, "DOCICloudRootNode: finished building containers...", v30, 2u);
      MEMORY[0x2207B6A18](v30, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t Dictionary<>.doc_firstKey(forValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v24 = a7;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = sub_21EB030F8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - v16;
  v37 = a2;
  v32 = a3;
  v33 = a4;
  v34 = a5;
  v35 = a6;
  v36 = a1;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  v28 = a6;
  v29 = sub_21EA55570;
  v30 = &v31;
  v18 = sub_21EB02AF8();
  MEMORY[0x2207B694C](MEMORY[0x24BEE04D8], v18);
  sub_21EB02C9C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v17, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v24, 1, 1, a3);
  }
  else
  {
    v20 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    v21 = *(_QWORD *)(a3 - 8);
    v22 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v24, v17, a3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, a3);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(v20, a4);
  }
}

uint64_t DOCThreadSafeState.withExclusiveAccess<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = sub_21EB02A20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(id *)(v3 + 16);
  sub_21EB02A14();
  v14 = a3;
  v15 = a1;
  v16 = a2;
  v17 = v3;
  sub_21EB02F60();

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_21EA52E08(void *a1)
{
  void *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  id v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  double v30;
  CGRect v32;
  CGRect v33;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v32.origin.x = v5;
  v32.origin.y = v7;
  v32.size.width = v9;
  v32.size.height = v11;
  v12 = CGRectGetWidth(v32) * 0.5;
  v13 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v13, sel_bounds);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v33.origin.x = v15;
  v33.origin.y = v17;
  v33.size.width = v19;
  v33.size.height = v21;
  v22 = CGRectGetHeight(v33) * 0.6;
  if (v12 > v22)
    v23 = v12;
  else
    v23 = v22;
  v24 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  if ((sub_21EB03044() & 1) != 0)
  {
    v25 = sub_21EB03050();

    if ((v25 & 1) != 0)
      v26 = 2;
    else
      v26 = 1;
  }
  else
  {

    v26 = 0;
  }
  v27 = sub_21EA5EFB4(v26);
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    for (i = 0; v28 != i; ++i)
    {
      if (*(_BYTE *)(v27 + i + 32))
      {
        if (*(_BYTE *)(v27 + i + 32) == 1)
          v30 = 400.0;
        else
          v30 = 480.0;
        if (v30 < v23)
          return swift_bridgeObjectRelease();
      }
      else if (v23 > 320.0)
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

id sub_21EA53058(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  id v4;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer))
    v4 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer), *a3);
  else
    v4 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain), *a4);
  return v4;
}

uint64_t static UTType.doc_contentTypes(forIdentifiers:)()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_21EB02CE4();
  v2 = objc_msgSend(v0, sel_doc_contentTypesForIdentifiers_, v1);

  sub_21EB025DC();
  v3 = sub_21EB02CF0();

  return v3;
}

uint64_t sub_21EA53124()
{
  uint64_t v0;

  return sub_21EA53140(*(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_21EA53140(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v9 + *(_QWORD *)(v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::String __swiftcall DOCLocalizedDictionaryString(_:comment:)(Swift::String _, Swift::String comment)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String result;

  v2 = (id)_DocumentManagerBundle();
  if (v2)
  {
    v4 = v2;
    v5 = sub_21EB02168();
    v7 = v6;

    v2 = (id)v5;
    v3 = v7;
  }
  else
  {
    __break(1u);
  }
  result._object = v3;
  result._countAndFlagsBits = (uint64_t)v2;
  return result;
}

uint64_t _sSo26DOCUserInterfaceStateStoreC26DocumentManagerExecutablesE016groupingBehaviorC10Identifier3forSSSo017DOCDocumentSourceJ0aSg_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;

  if (!a1)
    goto LABEL_13;
  v2 = sub_21EB02B88();
  v4 = v3;
  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    v17 = a1;
    goto LABEL_15;
  }
  v7 = sub_21EB034C4();
  v8 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_16;
  v9 = sub_21EB02B88();
  v11 = v10;
  if (v9 == sub_21EB02B88() && v11 == v12)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  v14 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {

LABEL_13:
    v15 = qword_25546C9B0;
    v16 = unk_25546C9B8;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
LABEL_16:
  v15 = sub_21EB02B88();
  v16 = v18;

LABEL_17:
  if (qword_255469BC8 != -1)
    swift_once();
  v19 = sub_21EB0263C();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.StateStore);
  v20 = a1;
  swift_bridgeObjectRetain_n();
  v21 = v20;
  v22 = sub_21EB02624();
  v23 = sub_21EB02EDC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_DWORD *)v24 = 136315650;
    sub_21EA591E4(0xD000000000000025, 0x800000021EB16030, &v30);
    sub_21EB03134();
    *(_WORD *)(v24 + 12) = 2080;
    v26 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C9C0);
    v27 = sub_21EB02BA0();
    sub_21EA591E4(v27, v28, &v30);
    sub_21EB03134();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_21EA591E4(v15, v16, &v30);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21EA4C000, v22, v23, "%s in identifier: %s out identifier: %s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v25, -1, -1);
    MEMORY[0x2207B6A18](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v15;
}

uint64_t DOCAssertionCollection.hasValidAssertions.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_19;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  v2 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x2207B5B3C](i, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * i + 32);
        sub_21EB01F10();
      }
      if (*(_BYTE *)(v5 + 32) == 1)
      {
        sub_21EB03338();
        sub_21EB03368();
        sub_21EB03374();
        sub_21EB03344();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v6 = v8;
    if (v8 < 0)
      goto LABEL_19;
LABEL_16:
    if ((v6 & 0x4000000000000000) == 0)
    {
      v7 = *(_QWORD *)(v6 + 16);
LABEL_18:
      swift_release();
      return v7 != 0;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    v7 = sub_21EB0341C();
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA53854(void *a1, uint64_t a2, unint64_t a3)
{
  NSObject *v5;
  id v6;
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  NSObject *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[2];
  __int128 v46;
  __int128 v47;

  if (!a1)
  {
    if (qword_255469BC8 != -1)
      swift_once();
    v8 = sub_21EB0263C();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.StateStore);
    v5 = sub_21EB02624();
    v9 = sub_21EB02EDC();
    if (os_log_type_enabled(v5, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_QWORD *)&v46 = v11;
      *(_DWORD *)v10 = 136315138;
      *(_QWORD *)&v45[0] = sub_21EA591E4(0xD00000000000001BLL, 0x800000021EB16010, (uint64_t *)&v46);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v5, v9, "%s state store was nil", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v11, -1, -1);
      MEMORY[0x2207B6A18](v10, -1, -1);
    }
    goto LABEL_28;
  }
  v5 = a1;
  v6 = -[NSObject groupingBehaviors](v5, sel_groupingBehaviors);
  *(_QWORD *)&v45[0] = a2;
  *((_QWORD *)&v45[0] + 1) = a3;
  swift_bridgeObjectRetain_n();
  v7 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_21EB0350C());
  swift_unknownObjectRelease();

  if (v7)
  {
    sub_21EB031B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v45, 0, sizeof(v45));
  }
  sub_21EA5B638((uint64_t)v45, (uint64_t)&v46);
  if (!*((_QWORD *)&v47 + 1))
    goto LABEL_22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546C9D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_23:
    if (qword_255469BC8 != -1)
      swift_once();
    v21 = sub_21EB0263C();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.StateStore);
    v22 = sub_21EB02624();
    v23 = sub_21EB02EDC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_QWORD *)&v46 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)&v45[0] = sub_21EA591E4(0xD00000000000001BLL, 0x800000021EB16010, (uint64_t *)&v46);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v22, v23, "%s groupingBehaviors in state store was nil or couldn't be converted to NSNumber", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v25, -1, -1);
      MEMORY[0x2207B6A18](v24, -1, -1);

      return 8;
    }

LABEL_28:
    return 8;
  }
  swift_bridgeObjectRelease();
  v12 = sub_21EB02B88();
  if (*(_QWORD *)(v44 + 16) && (v14 = sub_21EA5B7F8(v12, v13), (v15 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v44 + 56) + 32 * v14, (uint64_t)&v46);
  }
  else
  {
    v46 = 0u;
    v47 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v47 + 1))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_21EA5B5B0((uint64_t)&v46);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_15;
  v16 = LOBYTE(v45[0]);
  v17 = sub_21EB02B88();
  if (*(_QWORD *)(v44 + 16) && (v19 = sub_21EA5B7F8(v17, v18), (v20 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v44 + 56) + 32 * v19, (uint64_t)&v46);
  }
  else
  {
    v46 = 0u;
    v47 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v47 + 1))
  {
    sub_21EA5B5B0((uint64_t)&v46);
    goto LABEL_42;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_42:
    v26 = 7;
    goto LABEL_43;
  }
  v28 = _s26DocumentManagerExecutables15DOCItemSortModeO8rawValueACSgSS_tcfC_0();
  if (v16)
    v29 = v28;
  else
    v29 = 8;
  if (v28 == 7)
    v26 = 7;
  else
    v26 = v29;
LABEL_43:
  if (qword_255469BC8 != -1)
    swift_once();
  v30 = sub_21EB0263C();
  __swift_project_value_buffer(v30, (uint64_t)static Logger.StateStore);
  v31 = v5;
  swift_bridgeObjectRetain_n();
  v32 = v31;
  v33 = sub_21EB02624();
  v34 = sub_21EB02EDC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    *(_QWORD *)&v46 = v43;
    *(_DWORD *)v35 = 136315906;
    *(_QWORD *)&v45[0] = sub_21EA591E4(0xD00000000000001BLL, 0x800000021EB16010, (uint64_t *)&v46);
    sub_21EB03134();
    *(_WORD *)(v35 + 12) = 2080;
    LOBYTE(v45[0]) = v26;
    __swift_instantiateConcreteTypeFromMangledName(qword_2540A6BB8);
    v36 = sub_21EB02BA0();
    *(_QWORD *)&v45[0] = sub_21EA591E4(v36, v37, (uint64_t *)&v46);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v45[0] = sub_21EA591E4(a2, a3, (uint64_t *)&v46);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 32) = 2080;
    v38 = v32;
    v39 = -[NSObject description](v38, sel_description);
    v40 = sub_21EB02B88();
    v42 = v41;

    *(_QWORD *)&v45[0] = sub_21EA591E4(v40, v42, (uint64_t *)&v46);
    sub_21EB03134();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v33, v34, "%s fetched value: %s for identifier: %s from state store: %s", (uint8_t *)v35, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v43, -1, -1);
    MEMORY[0x2207B6A18](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v26;
}

UIFont __swiftcall UIFont.doc_withFeatureMonospacedDigits()()
{
  void *v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F58);
  inited = swift_initStackObject();
  v2 = MEMORY[0x24BEE1768];
  v3 = (void *)*MEMORY[0x24BEBE1B8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBE1B8];
  *(_QWORD *)(inited + 40) = 6;
  v4 = (void **)MEMORY[0x24BEBE1A8];
  *(_OWORD *)(inited + 16) = xmmword_21EB07140;
  v5 = *v4;
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 80) = 0;
  v6 = v3;
  v7 = v5;
  v8 = sub_21EA5E7F0(inited);
  v9 = objc_msgSend(v0, sel_fontDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F60);
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_21EB08F10;
  v11 = (void *)*MEMORY[0x24BEBB548];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x24BEBB548];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F38);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v10 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6D28);
  *(_QWORD *)(v10 + 40) = v12;
  v13 = v11;
  sub_21EA5E7D4(v10);
  type metadata accessor for AttributeName(0);
  sub_21EA5CFC0();
  v14 = (void *)sub_21EB02AC8();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v9, sel_fontDescriptorByAddingAttributes_, v14);

  v16 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v15, 0.0);
  return (UIFont)v16;
}

uint64_t sub_21EA541BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_21EB035A8();
  sub_21EB02BDC();
  v5 = sub_21EB035E4();
  return a3(a1, a2, v5);
}

uint64_t Array<A>.contains(node:)()
{
  uint64_t v0;

  v0 = sub_21EB02D98();
  MEMORY[0x2207B694C](MEMORY[0x24BEE12C8], v0);
  return sub_21EB02CC0() & 1;
}

void NSMutableAttributedString.append(_:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v4 = a1;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithString_, v5);

  objc_msgSend(v1, sel_appendAttributedString_, v6);
}

id sub_21EA54368(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer), *a3);
}

Swift::Bool __swiftcall UTType.doc_conformsToAny(inContentTypes:)(Swift::OpaquePointer inContentTypes)
{
  void *v1;
  void *v2;
  unsigned __int8 v3;

  v1 = (void *)sub_21EB024E0();
  sub_21EB025DC();
  v2 = (void *)sub_21EB02CE4();
  v3 = objc_msgSend(v1, sel_doc_conformsToAnyInContentTypes_, v2);

  return v3;
}

id DOCLocalizedMetadataStringForUnavailablePropertyValue()
{
  void *v0;
  void *v1;

  _DocumentManagerBundle();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "localizedStringForKey:value:table:", CFSTR("Metadata Value Missing Indicator [--]"), CFSTR("--"), CFSTR("Localizable"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

uint64_t static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void **p_vtable;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedStore);
  v7 = objc_msgSend(v6, sel_interfaceStateForConfiguration_, a1);

  v8 = _sSo26DOCUserInterfaceStateStoreC26DocumentManagerExecutablesE016groupingBehaviorC10Identifier3forSSSo017DOCDocumentSourceJ0aSg_tFZ_0(a2);
  v10 = v9;
  v46 = v8;
  v11 = sub_21EA53854(v7, v8, v9);
  p_vtable = _TtC26DocumentManagerExecutables24DOCCreateFolderOperation.vtable;
  if (v11 == 8)
  {
    if (qword_255469BC8 != -1)
      swift_once();
    v13 = sub_21EB0263C();
    __swift_project_value_buffer(v13, (uint64_t)static Logger.StateStore);
    v14 = sub_21EB02624();
    v15 = sub_21EB02EE8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v48 = v17;
      *(_DWORD *)v16 = 136315394;
      sub_21EA591E4(0xD000000000000049, 0x800000021EB15F80, &v48);
      sub_21EB03134();
      *(_WORD *)(v16 + 12) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(qword_2540A6BB8);
      v18 = sub_21EB02BA0();
      sub_21EA591E4(v18, v19, &v48);
      sub_21EB03134();
      p_vtable = (void **)(_TtC26DocumentManagerExecutables24DOCCreateFolderOperation + 24);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v14, v15, "%s fetched value: %s could not be converted to DOCItemGroupingBehavior", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v17, -1, -1);
      MEMORY[0x2207B6A18](v16, -1, -1);
    }

  }
  else
  {
    v20 = v11;
    if (qword_255469BC8 != -1)
      swift_once();
    v21 = sub_21EB0263C();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.StateStore);
    v22 = v7;
    v23 = sub_21EB02624();
    v24 = sub_21EB02EDC();
    if (os_log_type_enabled(v23, v24))
    {
      v45 = a2;
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v48 = v26;
      *(_DWORD *)v25 = 136315650;
      sub_21EA591E4(0xD000000000000049, 0x800000021EB15F80, &v48);
      sub_21EB03134();
      *(_WORD *)(v25 + 12) = 2080;
      v27 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C9C8);
      v28 = sub_21EB02BA0();
      sub_21EA591E4(v28, v29, &v48);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(qword_2540A6BB8);
      v30 = sub_21EB02BA0();
      sub_21EA591E4(v30, v31, &v48);
      p_vtable = (void **)(_TtC26DocumentManagerExecutables24DOCCreateFolderOperation + 24);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v23, v24, "%s couldn't fetch state: %s and grouping value: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v26, -1, -1);
      v32 = v25;
      a2 = v45;
      MEMORY[0x2207B6A18](v32, -1, -1);

    }
    else
    {

    }
    a3 = v20;
  }
  if (p_vtable[377] != (void *)-1)
    swift_once();
  v33 = sub_21EB0263C();
  __swift_project_value_buffer(v33, (uint64_t)static Logger.StateStore);
  v34 = a2;
  swift_bridgeObjectRetain();
  v35 = sub_21EB02624();
  v36 = sub_21EB02EDC();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v48 = v44;
    *(_DWORD *)v37 = 136315906;
    sub_21EA591E4(0xD000000000000049, 0x800000021EB15F80, &v48);
    sub_21EB03134();
    *(_WORD *)(v37 + 12) = 2080;
    v47 = v7;
    v38 = sub_21EB02BA0();
    sub_21EA591E4(v38, v39, &v48);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_21EA591E4(v46, v10, &v48);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 32) = 2080;
    v40 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C9C0);
    v41 = sub_21EB02BA0();
    sub_21EA591E4(v41, v42, &v48);
    a3 = a3;
    sub_21EB03134();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v35, v36, "%s fetched: %s for state identifier: %s derived from sourceIdentifier: %s", (uint8_t *)v37, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v44, -1, -1);
    MEMORY[0x2207B6A18](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a3;
}

id static FPItem.createDocumentSentinelItem()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v0 = sub_21EB025DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v5 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  _s26DocumentManagerExecutables14FISentinelNodeC11contentType07UniformG11Identifiers6UTTypeVvg_0();
  v6 = objc_allocWithZone(MEMORY[0x24BDC82D8]);
  v7 = (void *)sub_21EB02B58();
  v8 = (void *)sub_21EB024E0();
  v9 = objc_msgSend(v6, sel_initWithProviderDomainID_itemIdentifier_parentItemIdentifier_filename_contentType_, v4, v5, 0, v7, v8);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

void DOCThreadSafeState.withSharedAccess<A>(_:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 16);
  sub_21EB02F6C();

}

uint64_t NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD *);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[3];
  _QWORD *v39;
  uint64_t (*v40)(uint64_t);
  _QWORD *v41;

  v6 = v5;
  v36 = a5;
  v34 = *v5;
  v11 = sub_21EB02B88();
  v13 = v12;
  _sSo14NSNotificationC26DocumentManagerExecutablesE23SubscriptionsControllerC10invalidateyySSF_0(v11, v12);
  v35 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_21EA5B5F0(a2, (uint64_t)aBlock);
  v14 = v39;
  if (v39)
  {
    v15 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v39);
    v33 = a4;
    v16 = a1;
    v17 = a3;
    v18 = v11;
    v19 = *(v14 - 1);
    MEMORY[0x24BDAC7A8](v15);
    v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v21);
    v22 = sub_21EB034B8();
    v23 = *(void (**)(char *, _QWORD *))(v19 + 8);
    v11 = v18;
    a3 = v17;
    a1 = v16;
    v23(v21, v14);
    a4 = v33;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }
  else
  {
    v22 = 0;
  }
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = *(_QWORD *)(v34 + 80);
  v25[3] = v24;
  v26 = v36;
  v25[4] = a4;
  v25[5] = v26;
  v40 = sub_21EABDF78;
  v41 = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EABD9B0;
  v39 = &block_descriptor_17;
  v27 = _Block_copy(aBlock);
  sub_21EB01F10();
  swift_release();
  v28 = v35;
  v29 = objc_msgSend(v35, sel_addObserverForName_object_queue_usingBlock_, a1, v22, a3, v27);
  _Block_release(v27);

  swift_unknownObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37 = v6[3];
  v6[3] = 0x8000000000000000;
  sub_21EA5BACC((uint64_t)v29, v11, v13, isUniquelyReferenced_nonNull_native);
  v6[3] = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_unknownObjectRelease();
  return v11;
}

void DOCItemSortMode.DisplayableMode.compatibleSortModes.getter()
{
  __asm { BR              X8; loc_21EA550FC }
}

uint64_t DOCItemSortDescriptor.ascending.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;

  if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2207B5B3C](0, a2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(a2 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v6, sel_ascending);

    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall DOCNode.localizedChildItemCountDescription()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String result;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    swift_unknownObjectRetain();
    if (!objc_msgSend(v2, sel_isFolder)
      || objc_msgSend(v2, sel_nodePermissions_, 2048) != 2048)
    {
      v14 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
      v15 = sub_21EB02B88();
      v17 = v16;
      swift_unknownObjectRelease();

      v5 = (id)v15;
      v6 = v17;
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
  }
  v3 = objc_msgSend(v0, sel_childItemCount);
  if (!v3)
  {
LABEL_11:
    v18 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v19 = sub_21EB02B88();
    v21 = v20;

    v5 = (id)v19;
    v6 = v21;
    goto LABEL_13;
  }
  v4 = v3;
  if (((unint64_t)objc_msgSend(v3, sel_integerValue) & 0x8000000000000000) != 0)
  {

    goto LABEL_11;
  }
  v5 = (id)_DocumentManagerBundle();
  if (v5)
  {
    v7 = v5;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_21EB08F10;
    v9 = objc_msgSend(v4, sel_integerValue, 0x800000021EB0FFF0);
    v10 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v9;
    v11 = sub_21EB02B64();
    v13 = v12;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (id)v11;
    v6 = v13;
  }
  else
  {
    __break(1u);
  }
LABEL_13:
  result._object = v6;
  result._countAndFlagsBits = (uint64_t)v5;
  return result;
}

uint64_t sub_21EA55574()
{
  return sub_21EB02B34() & 1;
}

void DOCItemSortMode.DisplayableMode.localizedName.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21EA555D4()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = (id)_DocumentManagerBundle();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x21EA558ACLL);
  }
  v1 = v0;
  v2 = sub_21EB02168();

  return v2;
}

Swift::String __swiftcall DOCNode.displayName(withHiddenPathExtension:)(Swift::Bool withHiddenPathExtension)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String result;

  if ((objc_msgSend(v1, sel_isAppContainer) & 1) != 0
    || objc_msgSend(v1, sel_isFolder)
    && objc_msgSend(v1, sel_folderType) != (id)1
    && objc_msgSend(v1, sel_folderType))
  {
    v3 = objc_msgSend(v1, sel_displayName);
  }
  else
  {
    v4 = objc_msgSend(v1, sel_filename);
    if (!v4)
    {
      __break(1u);
      goto LABEL_10;
    }
    v6 = v4;
    v3 = objc_msgSend(v4, sel_fp_displayNameFromFilenameWithHiddenPathExtension_isFolder_, withHiddenPathExtension, objc_msgSend(v1, sel_isFolder));

  }
  v7 = sub_21EB02B88();
  v9 = v8;

  v4 = (id)v7;
  v5 = v9;
LABEL_10:
  result._object = v5;
  result._countAndFlagsBits = (uint64_t)v4;
  return result;
}

uint64_t sub_21EA559C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_21EB02B88();
  v2 = v1;
  if (v0 == sub_21EB02B88() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21EA55A50(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_21EB02B7C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21EA55ACC()
{
  uint64_t v0;

  sub_21EB02B88();
  sub_21EB035A8();
  sub_21EB02BDC();
  v0 = sub_21EB035E4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DOCNode.nodeDescription.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    swift_unknownObjectRetain();
    v3 = objc_msgSend(v2, sel_description);
    v4 = sub_21EB02B88();
    swift_unknownObjectRelease();
  }
  else
  {
    v3 = objc_msgSend(v0, sel_displayName);
    v4 = sub_21EB02B88();
  }

  return v4;
}

Swift::Bool __swiftcall DOCNode.isCreateDocumentSentinel()()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  objc_opt_self();
  v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    v1 = (void *)v0;
    swift_unknownObjectRetain();
    v2 = objc_msgSend(v1, sel_itemIdentifier);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v3 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v4 = sub_21EB02B88();
    v6 = v5;
    if (v4 == sub_21EB02B88() && v6 == v7)
      v9 = 1;
    else
      v9 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

  }
  else
  {
    type metadata accessor for FISentinelNode();
    v9 = swift_dynamicCastClass() != 0;
  }
  return v9 & 1;
}

uint64_t type metadata accessor for FISentinelNode()
{
  return objc_opt_self();
}

void _s26DocumentManagerExecutables21DOCItemSortDescriptorV4type10isReversedAcA0dE4ModeO_SbtcfC_0(char a1)
{
  uint64_t inited;
  id v3;
  void *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB07140;
  *(_QWORD *)(inited + 32) = 0x706E616D646E616DLL;
  v3 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v4 = (void *)sub_21EB02B58();
  objc_msgSend(v3, sel_initWithKey_ascending_, v4, 1);

  __asm { BR              X10 }
}

uint64_t sub_21EA55E28()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  char *v26;
  void *v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21EB0B2E0;
  v7 = objc_allocWithZone(*(Class *)(v0 + 1984));
  v8 = (void *)sub_21EB02B58();
  v9 = objc_msgSend(v7, *(SEL *)(v3 + 1000), v8, 0);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_allocWithZone(*(Class *)(v0 + 1984));
  v11 = (void *)sub_21EB02B58();
  v12 = objc_msgSend(v10, sel_initWithKey_ascending_selector_, v11, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_allocWithZone(*(Class *)(v0 + 1984));
  v14 = (void *)sub_21EB02B58();
  v15 = objc_msgSend(v13, sel_initWithKey_ascending_selector_, v14, 1, sel_localizedStandardCompare_);

  *(_QWORD *)(v6 + 48) = v15;
  *(_QWORD *)(v6 + 56) = v4;
  sub_21EB02D08();
  v16 = v6;
  v17 = v4;
  v18 = sub_21EAA94BC((char *)1, 3, 1, v5);
  *((_QWORD *)v18 + 2) = 3;
  *((_DWORD *)v18 + 10) = 1836016740;
  v19 = swift_bridgeObjectRetain();
  sub_21EA7DFEC(v19);
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return v2;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v2;
  }
  v20 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v20)
    goto LABEL_13;
LABEL_4:
  sub_21EB0335C();
  if (v20 < 0)
  {
    __break(1u);
    JUMPOUT(0x21EA5696CLL);
  }
  v26 = v18;
  v27 = v4;
  v21 = 0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x2207B5B3C](v21, v16);
    else
      v22 = *(id *)(v16 + 8 * v21 + 32);
    v23 = v22;
    ++v21;
    v24 = objc_msgSend(v22, sel_reversedSortDescriptor, v26);
    sub_21EB031B8();
    swift_unknownObjectRelease();
    sub_21EAF11F8();
    swift_dynamicCast();

    sub_21EB03338();
    sub_21EB03368();
    sub_21EB03374();
    sub_21EB03344();
  }
  while (v20 != v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v2;
}

Swift::String __swiftcall DOCNode.localizedSizeDescription()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;

  v1 = objc_msgSend(v0, sel_fileSize);
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_longLongValue) & 0x8000000000000000) != 0)
  {

LABEL_7:
    v3 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v4 = sub_21EB02B88();
    v6 = v7;
    goto LABEL_8;
  }
  if (qword_255469A58 != -1)
    swift_once();
  v3 = objc_msgSend((id)qword_25546A520, sel_stringFromByteCount_, sub_21EB03590());
  v4 = sub_21EB02B88();
  v6 = v5;

LABEL_8:
  v8 = v4;
  v9 = v6;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

id DOCNode.localizedSharingStatusDescription(type:options:)(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id result;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  void (*v43)(char *, char *, uint64_t);
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6518);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB021BC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v51 - v14;
  v16 = objc_msgSend(v3, sel_fpfs_fpItem);
  if (!v16)
    return 0;
  v51 = a2;
  v52 = v16;
  v17 = DOCNode.collaborationType.getter();
  if (v17 == 2)
  {
    v21 = DOCNode.documentAttributes.getter();
    if (v21)
    {
      v22 = v21;
      result = (id)_DocumentManagerBundle();
      if (!result)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v24 = result;
      sub_21EB02168();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_21EB08F10;
      v26 = objc_msgSend(v22, sel_sender);
      v27 = objc_msgSend(v26, sel_preferredFormattedName);

      v28 = sub_21EB02B88();
      v30 = v29;

      *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v25 + 64) = sub_21EA5EA3C();
      *(_QWORD *)(v25 + 32) = v28;
      *(_QWORD *)(v25 + 40) = v30;
      v20 = sub_21EB02B64();

      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else if (v17 != 3)
  {
    v18 = FPItem.collaborationStatus.getter();
    if (v19)
    {
      v20 = (uint64_t)v18;
LABEL_19:

      return (id)v20;
    }
  }
  if (!objc_msgSend(v3, sel_isShared))
  {

    return 0;
  }
  v31 = a1 & 1;
  v20 = sub_21EA886D4(v31);
  v33 = v32;
  if (!v31)
    goto LABEL_19;
  if (objc_msgSend(v3, sel_isSharedByCurrentUser))
  {
    if (v33)
      goto LABEL_19;
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v34 = result;
      v20 = sub_21EB02168();

      goto LABEL_19;
    }
    goto LABEL_30;
  }
  if (v33)
    goto LABEL_19;
  v35 = v52;
  v36 = objc_msgSend(v52, sel_preformattedOwnerName);
  if (v36)
  {
    v37 = v36;
    v38 = sub_21EB02B88();
    v40 = v39;

    v20 = (uint64_t)sub_21EA88AB4(v38, v40, v51);
LABEL_9:
    swift_bridgeObjectRelease();
    return (id)v20;
  }
  v41 = objc_msgSend(v3, sel_ownerNameComponents);
  if (v41)
  {
    v42 = v41;
    sub_21EB021B0();

    v43 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v43(v8, v13, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v43(v15, v8, v9);
      v44 = (void *)objc_opt_self();
      v45 = (void *)sub_21EB021A4();
      v46 = objc_msgSend(v44, sel_localizedStringFromPersonNameComponents_style_options_, v45, 0, 0);

      v47 = sub_21EB02B88();
      v49 = v48;

      v20 = (uint64_t)sub_21EA88AB4(v47, v49, v51);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return (id)v20;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_21EA59E08((uint64_t)v8, &qword_2540A6518);
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v50 = result;
    v20 = sub_21EB02168();

    return (id)v20;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t DOCNode.collaborationType.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = DOCNode.documentAttributes.getter();

  if (!v1)
  {
    v3 = objc_msgSend(v0, sel_fpfs_fpItem);
    if (v3)
    {
      v4 = v3;
      FPItem.collaborationStatus.getter();
      v6 = v5;
      swift_bridgeObjectRelease();
      if (v6)
      {
        v2 = objc_msgSend(v4, sel_doc_isCollaborationInvitation);

        return (uint64_t)v2;
      }

    }
    return 3;
  }
  return 2;
}

id DOCNode.documentAttributes.getter()
{
  id v0;
  unsigned int v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_returnToSender);
  v1 = objc_msgSend(v0, sel_isEnabled);

  if (!v1)
    return 0;
  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    objc_opt_self();
    v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      v10 = objc_msgSend(v9, sel_propertyAsNSObject_, 1869769063);
      if (v10)
      {
        v4 = v10;
        objc_opt_self();
        v8 = (id)swift_dynamicCastObjCClass();
        if (v8)
          return v8;
        goto LABEL_6;
      }
    }
    return 0;
  }
  v3 = (void *)v2;
  swift_unknownObjectRetain();
  v4 = objc_msgSend(v3, sel_originatorInfo);
  if (v4)
  {
    v5 = sub_21EB02324();
    v7 = v6;

    v4 = (id)sub_21EB02318();
    sub_21EA8DBD8(v5, v7);
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_documentAttributesFromData_, v4);
  swift_unknownObjectRelease();
LABEL_6:

  return v8;
}

id FPItem.collaborationStatus.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (qword_2540A6648 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)static DOCCollaborationHighlightManager.shared;
  v3 = sub_21EA574D8(v1);

  if (!v3)
    return 0;
  FPItem.collaborationSenderDisplayName.getter();
  v6 = v5;
  if (!v5)
  {

    return 0;
  }
  v7 = v4;
  if (objc_msgSend(v3, sel_highlightType)
    || (objc_msgSend(v1, sel_doc_isCollaborationInvitation) & 1) != 0)
  {
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v9 = result;
LABEL_9:
      sub_21EB02168();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_21EB08F10;
      *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v10 + 64) = sub_21EA5EA3C();
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v6;
      v11 = sub_21EB02B64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (id)v11;
    }
    __break(1u);
  }
  else
  {
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v9 = result;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

id sub_21EA574D8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v3 = sub_21EB02A20();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB02A5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_collaborationIdentifier);
  if (!v11)
  {
    if (qword_255469B70 != -1)
      swift_once();
    v24 = sub_21EB0263C();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.DocumentManager);
    v25 = a1;
    v26 = sub_21EB02624();
    v27 = sub_21EB02EDC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412290;
      aBlock[0] = v25;
      v30 = v25;
      sub_21EB03134();
      *v29 = v25;

      _os_log_impl(&dword_21EA4C000, v26, v27, "No collaboration identifier for item %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v29, -1, -1);
      MEMORY[0x2207B6A18](v28, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v12 = v11;
  v37 = v7;
  v38 = v4;
  v13 = sub_21EB02B88();
  v15 = v14;
  v16 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache], sel_objectForKey_, v12);

  if (!v16)
  {
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = a1;
    v31[3] = v1;
    v31[4] = v13;
    v31[5] = v15;
    aBlock[4] = sub_21EAA0470;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EAB0;
    aBlock[3] = &block_descriptor_26;
    v32 = _Block_copy(aBlock);
    v33 = a1;
    v34 = v1;
    sub_21EB02A44();
    v39 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v10, v6, v32);
    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v37);
    swift_release();
    return 0;
  }
  swift_bridgeObjectRelease();
  if (qword_255469B70 != -1)
    swift_once();
  v17 = sub_21EB0263C();
  __swift_project_value_buffer(v17, (uint64_t)static Logger.DocumentManager);
  v18 = a1;
  v19 = sub_21EB02624();
  v20 = sub_21EB02EDC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    aBlock[0] = v18;
    v23 = v18;
    sub_21EB03134();
    *v22 = v18;

    _os_log_impl(&dword_21EA4C000, v19, v20, "Got collaboration highlight from cache for %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v22, -1, -1);
    MEMORY[0x2207B6A18](v21, -1, -1);

  }
  else
  {

  }
  return v16;
}

uint64_t sub_21EA579D4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t FPItemID.identifierString.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_providerDomainID);
  v3 = sub_21EB02B88();

  sub_21EB02C0C();
  v4 = objc_msgSend(v1, sel_identifier);
  sub_21EB02B88();

  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t DOCNode.identifierKey.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_identifier);
  sub_21EB031B8();
  swift_unknownObjectRelease();
  return swift_dynamicCast();
}

uint64_t sub_21EA591E4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21EA592B4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21EA5A05C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21EA5A05C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_21EA592B4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21EB03140();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21EA5C62C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21EB0332C();
  if (!v8)
  {
    sub_21EB033BC();
    __break(1u);
LABEL_17:
    result = sub_21EB03458();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21EA5946C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21EA5951C((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_21EA5952C(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_21EA5B5B0(a1);
    sub_21EA59E44(a2, v7);
    swift_release();
    return sub_21EA5B5B0((uint64_t)v7);
  }
}

_OWORD *sub_21EA5951C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

_OWORD *sub_21EA5952C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21EA59F28(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_21EA5951C(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21EA9BD7C();
      goto LABEL_7;
    }
    sub_21EA4F9C0(v13, a3 & 1);
    v19 = sub_21EA59F28(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21EA5A270(v10, a2, a1, v16);
      return (_OWORD *)sub_21EB01F10();
    }
  }
  sub_21EB031C4();
  result = (_OWORD *)sub_21EB03530();
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)(UIUserInterfaceSizeClass horizontalSizeClass, Swift::Bool preferLastUsedDate)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  void *v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, char *, uint64_t);
  void *v41;
  char *v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, _QWORD, uint64_t);
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  void *v60;
  char *v61;
  char v62;
  UIUserInterfaceSizeClass v63;
  void *v64;
  char *v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  Swift::String_optional result;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  UIUserInterfaceSizeClass v79;
  char *v80;
  char *v81;

  v79 = horizontalSizeClass;
  v78 = sub_21EB02144();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v75 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21EB0242C();
  v77 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v80 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6530);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v74 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v72 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v72 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v72 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v72 - v19;
  v21 = sub_21EB02384();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v73 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v72 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v81 = (char *)&v72 - v28;
  if (preferLastUsedDate)
  {
    v29 = objc_msgSend(v2, sel_doc_lastUsedDate);
    if (v29)
    {
      v30 = v29;
      sub_21EB02360();

      v31 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      v31(v18, v27, v21);
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v32(v18, 0, 1, v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v18, 1, v21) != 1)
      {
        v31(v20, v18, v21);
        v32(v20, 0, 1, v21);
        goto LABEL_14;
      }
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v32(v18, 1, 1, v21);
    }
    v36 = objc_msgSend(v2, sel_modificationDate);
    if (v36)
    {
      v37 = v36;
      sub_21EB02360();

      v38 = 0;
    }
    else
    {
      v38 = 1;
    }
    v32(v15, v38, 1, v21);
    sub_21EA59D84((uint64_t)v15, (uint64_t)v20, (uint64_t *)&unk_2540A6530);
    sub_21EA59E08((uint64_t)v18, (uint64_t *)&unk_2540A6530);
  }
  else
  {
    v33 = objc_msgSend(v2, sel_modificationDate);
    if (v33)
    {
      v34 = v33;
      sub_21EB02360();

      v35 = 0;
    }
    else
    {
      v35 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v12, v35, 1, v21);
    sub_21EA59D84((uint64_t)v12, (uint64_t)v20, (uint64_t *)&unk_2540A6530);
  }
LABEL_14:
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v39(v20, 1, v21) == 1)
  {
LABEL_21:
    sub_21EA59E08((uint64_t)v20, (uint64_t *)&unk_2540A6530);
    v45 = 0;
    v47 = 0;
    goto LABEL_22;
  }
  v40 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v40(v81, v20, v21);
  if (v79 == UIUserInterfaceSizeClassRegular)
  {
    if (qword_2540A6EB0 != -1)
      swift_once();
    v41 = (void *)qword_2540A77E0;
    v42 = v81;
    v43 = (void *)sub_21EB02348();
    v44 = objc_msgSend(v41, sel_stringFromDate_, v43);

    v45 = sub_21EB02B88();
    v47 = v46;

    (*(void (**)(char *, uint64_t))(v22 + 8))(v42, v21);
    goto LABEL_22;
  }
  v72 = v40;
  v79 = v5;
  sub_21EB02414();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A558);
  v48 = sub_21EB02420();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(_QWORD *)(v49 + 72);
  v51 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_21EB07160;
  v53 = v52 + v51;
  v54 = *(void (**)(unint64_t, _QWORD, uint64_t))(v49 + 104);
  v54(v53, *MEMORY[0x24BDCF220], v48);
  v54(v53 + v50, *MEMORY[0x24BDCF250], v48);
  v54(v53 + 2 * v50, *MEMORY[0x24BDCF240], v48);
  v54(v53 + 3 * v50, *MEMORY[0x24BDCF228], v48);
  sub_21EA8DF90(v52);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_21EB02378();
  v55 = v75;
  v56 = v80;
  sub_21EB023FC();
  swift_bridgeObjectRelease();
  v57 = *(void (**)(char *, uint64_t))(v22 + 8);
  v58 = v56;
  v57(v27, v21);
  v20 = v74;
  sub_21EB02408();
  if (v39(v20, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v78);
    (*(void (**)(char *, UIUserInterfaceSizeClass))(v77 + 8))(v56, v79);
    v57(v81, v21);
    goto LABEL_21;
  }
  v61 = v73;
  v72(v73, v20, v21);
  v62 = sub_21EB02354();
  v63 = v79;
  if ((v62 & 1) != 0)
  {
    if (qword_255469A48 != -1)
      swift_once();
    v64 = (void *)qword_255474C90;
    v65 = v81;
    v66 = (void *)sub_21EB02348();
    v67 = objc_msgSend(v64, sel_stringFromDate_, v66);
  }
  else
  {
    if (qword_255469A50 != -1)
      swift_once();
    v68 = (void *)qword_255474C98;
    v65 = v81;
    v66 = (void *)sub_21EB02348();
    v67 = objc_msgSend(v68, sel_stringFromDate_, v66);
  }
  v69 = v67;

  v45 = sub_21EB02B88();
  v47 = v70;

  v57(v61, v21);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v78);
  (*(void (**)(char *, UIUserInterfaceSizeClass))(v77 + 8))(v58, v63);
  v57(v65, v21);
LABEL_22:
  v59 = v45;
  v60 = v47;
  result.value._object = v60;
  result.value._countAndFlagsBits = v59;
  return result;
}

uint64_t sub_21EA59D84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21EA59DC8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2207B694C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21EA59E08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_21EA59E44@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21EA59F28(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21EA9BD7C();
      v9 = v11;
    }
    swift_release();
    sub_21EA5951C((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_21EA5BEF8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_21EA59F28(uint64_t a1)
{
  uint64_t v2;

  sub_21EB031C4();
  v2 = sub_21EB02B1C();
  return sub_21EA59F94(a1, v2);
}

unint64_t sub_21EA59F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_21EB031C4();
    do
    {
      if ((sub_21EB02B34() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_21EA5A05C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_21EA5A098()
{
  return sub_21EA5A0B8();
}

id sub_21EA5A0B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  objc_super v8;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  v2 = qword_25546B380;
  v3 = v0;
  *(_QWORD *)((char *)v0 + v2) = sub_21EA5A138(MEMORY[0x24BEE4AF8]);

  v6 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage(0, *(_QWORD *)(v1 + 80), v4, v5);
  v8.receiver = v3;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, sel_init);
}

unint64_t sub_21EA5A138(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F20);
  v2 = sub_21EB0344C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v6, (uint64_t)&v13, &qword_25546AAC8);
    v7 = v13;
    result = sub_21EA59F28(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_21EA5951C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCAssociatedObjectStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCAssociatedObjectStorage);
}

_OWORD *sub_21EA5A270(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_21EA5951C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t == infix(_:_:)(unint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;

  v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
LABEL_3:
      if (v5 == *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
      return 0;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v10 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v5 != v10)
    return 0;
LABEL_4:
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v7 = result;
    if (!result)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (!v7)
      goto LABEL_39;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2207B5B3C](0, a1);
    if (!v6)
      goto LABEL_11;
LABEL_17:
    swift_bridgeObjectRetain();
    v9 = sub_21EB0341C();
    result = swift_bridgeObjectRelease();
    if (!v9)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return 1;
    }
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_46;
  result = swift_unknownObjectRetain();
  if (v6)
    goto LABEL_17;
LABEL_11:
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_38;
LABEL_18:
  v11 = 0;
  v15 = v7 - 1;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2207B5B3C](v11, a2);
    }
    else
    {
      if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_44;
      swift_unknownObjectRetain();
    }
    objc_opt_self();
    if (swift_dynamicCastObjCClass() && (objc_opt_self(), swift_dynamicCastObjCClass()))
    {
      v12 = (unint64_t *)&qword_2540A6EC0;
    }
    else
    {
      objc_opt_self();
      if (!swift_dynamicCastObjCClass() || (objc_opt_self(), !swift_dynamicCastObjCClass()))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return 0;
      }
      v12 = (unint64_t *)&unk_2540A6EA0;
    }
    sub_21EA579D4(0, v12);
    swift_unknownObjectRetain();
    v13 = sub_21EB0308C();
    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease_n();
    if ((v13 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v15 == v11)
      goto LABEL_39;
    v14 = v11 + 1;
    if ((a1 & 0xC000000000000001) == 0)
      break;
    result = MEMORY[0x2207B5B3C](v11 + 1, a1);
    if (__OFADD__(v14, 1))
      goto LABEL_43;
LABEL_37:
    if (v9 == ++v11)
      goto LABEL_38;
  }
  if (v14 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_45;
  result = swift_unknownObjectRetain();
  if (!__OFADD__(v14, 1))
    goto LABEL_37;
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_21EA5A6C4()
{
  return DOCNode.isEqualTo(node:)() & 1;
}

uint64_t DOCNode.isEqualTo(node:)()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v0 = (unint64_t *)&qword_2540A6EC0;
LABEL_7:
      sub_21EA579D4(0, v0);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v2 = sub_21EB0308C();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v2 & 1;
    }
    goto LABEL_8;
  }
  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  v2 = v1;
  if (v1)
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v0 = (unint64_t *)&unk_2540A6EA0;
      goto LABEL_7;
    }
LABEL_8:
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_21EB01F10();
}

id sub_21EA5ADF8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result;

  result = *(id *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (result)
    return objc_msgSend(result, *a3);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207B6934]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

id DOCLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF90];
  v1 = (void *)*MEMORY[0x24BE2DF90];
  if (!*MEMORY[0x24BE2DF90])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2207B68C8](a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207B6940](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

id DOCUILogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFF0];
  v1 = (void *)*MEMORY[0x24BE2DFF0];
  if (!*MEMORY[0x24BE2DFF0])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCTestsLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFE8];
  v1 = (void *)*MEMORY[0x24BE2DFE8];
  if (!*MEMORY[0x24BE2DFE8])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCStateStoreLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFE0];
  v1 = (void *)*MEMORY[0x24BE2DFE0];
  if (!*MEMORY[0x24BE2DFE0])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCSourceLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFD8];
  v1 = (void *)*MEMORY[0x24BE2DFD8];
  if (!*MEMORY[0x24BE2DFD8])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCRenameLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFB8];
  v1 = (void *)*MEMORY[0x24BE2DFB8];
  if (!*MEMORY[0x24BE2DFB8])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCEnumerationLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF80];
  v1 = (void *)*MEMORY[0x24BE2DF80];
  if (!*MEMORY[0x24BE2DF80])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCBrowserHistoryLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF68];
  v1 = (void *)*MEMORY[0x24BE2DF68];
  if (!*MEMORY[0x24BE2DF68])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCApplicationLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF60];
  v1 = (void *)*MEMORY[0x24BE2DF60];
  if (!*MEMORY[0x24BE2DF60])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCAppIntentsLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF58];
  v1 = (void *)*MEMORY[0x24BE2DF58];
  if (!*MEMORY[0x24BE2DF58])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t objectdestroy_23Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id DOCFileProviderSyncStateLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF88];
  v1 = (void *)*MEMORY[0x24BE2DF88];
  if (!*MEMORY[0x24BE2DF88])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

uint64_t DOCDocumentSourceIdentifierIsICloud(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = *MEMORY[0x24BE2DE10];
  v2 = a1;
  if ((objc_msgSend(v2, "hasPrefix:", v1) & 1) != 0
    || (objc_msgSend(v2, "hasPrefix:", *MEMORY[0x24BE2DE18]) & 1) != 0
    || (objc_msgSend(v2, "hasPrefix:", *MEMORY[0x24BE2DE20]) & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    v3 = objc_msgSend(v2, "hasPrefix:", *MEMORY[0x24BE2DE28]);
  }

  return v3;
}

id DOCAnalyticsLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF50];
  v1 = (void *)*MEMORY[0x24BE2DF50];
  if (!*MEMORY[0x24BE2DF50])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

uint64_t sub_21EA5B5B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21EA5B5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA5B638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA5B680(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21EA5BA68(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21EB032F0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21EB033BC();
      __break(1u);
LABEL_10:
      v2 = sub_21EB02C3C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21EB03458();
    __break(1u);
LABEL_14:
    result = sub_21EB033BC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_21EA5B7F8(uint64_t a1, uint64_t a2)
{
  return sub_21EA541BC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21EA5B804);
}

unint64_t sub_21EA5B804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21EB034C4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21EB034C4() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_21EA5B8E4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F48);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    type metadata accessor for FPProviderID(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

_QWORD *sub_21EA5BA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F68);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21EA5BACC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21EA5B7F8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_21EA9C604();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_21EA50764(v15, a4 & 1);
  v21 = sub_21EA5B7F8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21EB03530();
  __break(1u);
  return result;
}

void sub_21EA5BC28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21EA5B7F8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_21EA9C454();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_21EA9A1F8(v15, a4 & 1);
  v20 = sub_21EA5B7F8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_21EB03530();
  __break(1u);
}

uint64_t sub_21EA5BD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_21EA5B7F8(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_21EA9C2A0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_21EA5C0C4(v17, a5 & 1);
  v23 = sub_21EA5B7F8(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21EB03530();
  __break(1u);
  return result;
}

unint64_t sub_21EA5BEF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21EB031E8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      sub_21EB031C4();
      do
      {
        result = sub_21EB02B1C();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= (uint64_t)v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(a2 + 48);
            v14 = (_QWORD *)(v13 + 8 * v3);
            v15 = (_QWORD *)(v13 + 8 * v6);
            if (v3 != v6 || v14 >= v15 + 1)
              *v14 = *v15;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= (uint64_t)v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_21EA5C0C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAE8);
  v6 = a2;
  v7 = sub_21EB03440();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = sub_21EB01F10();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21EB035A8();
      sub_21EB02BDC();
      result = sub_21EB035E4();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_21EA5C3CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21EA5B8E4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21EA5C3E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21EA7D9DC(a1, a2, a3, *v3, &qword_25546A390);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21EA5C40C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21EA7D9DC(a1, a2, a3, *v3, &qword_2540A6F28);
  *v3 = (char *)result;
  return result;
}

_QWORD *sub_21EA5C430(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21EA5C53C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA5C53C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA5C62C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21EA5B680(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21EA7C398(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21EA7C398(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21EA5C6C0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_21EACD944();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_21EACEDF4();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_21EACF70C();
  }
  v9 = *v3;
  sub_21EB02B88();
  sub_21EB035A8();
  sub_21EB02BDC();
  v10 = sub_21EB035E4();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_21EB02B88();
  v14 = v13;
  if (v12 == sub_21EB02B88() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_21EB02B88();
      v21 = v20;
      if (v19 == sub_21EB02B88() && v21 == v22)
        goto LABEL_25;
      v24 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for FPProviderID(0);
  result = sub_21EB03524();
  __break(1u);
  return result;
}

uint64_t Optional.isEqualTo(node:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v17 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    v15 = a1 == 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v12, v3);
    if (a1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A538);
      swift_dynamicCast();
      v15 = DOCNode.isEqualTo(node:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      v15 = 0;
    }
  }
  return v15 & 1;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v16 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A538);
    swift_dynamicCast();
    v14 = DOCNode.isEqualTo(node:)();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  return v14 & 1;
}

uint64_t sub_21EA5CA7C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

id UIView.doc_tintColorIgnoringVibrancyContainer.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_tintColor);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_21EA5CABC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  return v1(1);
}

void static UIView.doc_performAnimatable(allowingAnimations:animationDuration:animations:completion:)(char a1, uint64_t (*a2)(), uint64_t a3, uint64_t (*a4)(), uint64_t a5, double a6)
{
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t (*v24)();
  uint64_t v25;

  if ((a1 & 1) != 0
    && (v11 = (void *)objc_opt_self(), (objc_msgSend(v11, sel_areAnimationsEnabled) & 1) != 0))
  {
    v24 = a2;
    v25 = a3;
    v12 = MEMORY[0x24BDAC760];
    v20 = MEMORY[0x24BDAC760];
    v21 = 1107296256;
    v22 = sub_21EA5EAB0;
    v23 = &block_descriptor_27;
    v13 = _Block_copy(&v20);
    sub_21EB01F10();
    swift_release();
    v24 = a4;
    v25 = a5;
    v20 = v12;
    v21 = 1107296256;
    v22 = sub_21EA955BC;
    v23 = &block_descriptor_30_0;
    v14 = _Block_copy(&v20);
    sub_21EB01F10();
    swift_release();
    objc_msgSend(v11, sel_animateWithDuration_animations_completion_, v13, v14, a6);
    _Block_release(v14);
    _Block_release(v13);
  }
  else
  {
    v15 = (void *)objc_opt_self();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a2;
    v16[3] = a3;
    v16[4] = a4;
    v16[5] = a5;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_21EA5CABC;
    *(_QWORD *)(v17 + 24) = v16;
    v24 = sub_21EA5EA84;
    v25 = v17;
    v20 = MEMORY[0x24BDAC760];
    v21 = 1107296256;
    v22 = sub_21EA5EADC;
    v23 = &block_descriptor_24;
    v18 = _Block_copy(&v20);
    sub_21EB01F10();
    sub_21EB01F10();
    sub_21EB01F10();
    swift_release();
    objc_msgSend(v15, sel_performWithoutAnimation_, v18);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

id UIView.addSubview<A>(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_addSubview_, *(_QWORD *)(a1 + 16));
}

id sub_21EA5CD54(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v5, sel_setDoesRelativeDateFormatting_, 1);
  objc_msgSend(v5, sel_setDateStyle_, 1);
  result = objc_msgSend(v5, sel_setTimeStyle_, a2);
  *a3 = v5;
  return result;
}

id sub_21EA5CDD4(uint64_t a1)
{
  return sub_21EA5CD54(a1, 0, &qword_255474C98);
}

id sub_21EA5CDE4()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 0);
  result = objc_msgSend(v0, sel_setTimeStyle_, 1);
  qword_255474C90 = (uint64_t)v0;
  return result;
}

void *sub_21EA5CE44()
{
  uint64_t v0;
  void *result;

  v0 = sub_21EB023A8();
  MEMORY[0x24BDAC7A8](v0);
  result = sub_21EA8D758(0xD000000000000010, 0x800000021EB101E0, (unint64_t *)&unk_2540A6EA0);
  qword_2540A6E90 = (uint64_t)result;
  return result;
}

uint64_t sub_21EA5CF74(uint64_t a1, uint64_t a2)
{
  return sub_21EA5D008(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_21EA5CF80()
{
  return sub_21EA59DC8(&qword_2540A6E78, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_21EB07724);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_2540A6E80);
}

unint64_t sub_21EA5CFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540A6E68;
  if (!qword_2540A6E68)
  {
    type metadata accessor for AttributeName(255);
    result = MEMORY[0x2207B694C](&unk_21EB07F30, v1);
    atomic_store(result, (unint64_t *)&qword_2540A6E68);
  }
  return result;
}

uint64_t sub_21EA5D008(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_21EB02B88();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21EA5D044()
{
  return sub_21EA59DC8(&qword_2540A6E50, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_21EB075CC);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_2540A6E58);
}

void sub_21EA5D084(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_21EA5D0C8()
{
  uint64_t result;

  result = sub_21EB02B58();
  static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange = result;
  return result;
}

uint64_t *NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.unsafeMutableAddressor()
{
  if (qword_2540A6E40 != -1)
    swift_once();
  return &static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange;
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.with(priority:)(UILayoutPriority priority)
{
  void *v1;
  id v3;

  objc_msgSend(v1, sel_setPriority_);
  return (NSLayoutConstraint)v3;
}

uint64_t sub_21EA5D16C()
{
  return sub_21EA59DC8((unint64_t *)&unk_2540A6E28, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_21EB078A0);
}

void type metadata accessor for FPProviderDomainID(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_2540A6E38);
}

unint64_t sub_21EA5D1AC()
{
  unint64_t result;

  result = qword_2540A6E20;
  if (!qword_2540A6E20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540A6E20);
  }
  return result;
}

id UIViewController.doc_shouldAllowAnimations.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  char v11;

  if (!objc_msgSend(v0, sel_doc_hasAppearedOrIsAppearing))
    goto LABEL_8;
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_window);

    if (v3)
    {

      if (objc_msgSend(v0, sel_doc_isAppearing))
      {
        v4 = objc_msgSend(v0, sel_navigationController);
        if (v4)
        {
          v5 = v4;
          v6 = objc_msgSend(v4, sel_topViewController);
          if (v6)
          {
            v7 = v6;
            sub_21EA579D4(0, &qword_2540A6E08);
            v8 = v0;
            v9 = v7;
            v10 = sub_21EB0308C();

            v11 = v10 ^ 1;
            return (id)(v11 & 1);
          }

        }
      }
      v11 = 1;
      return (id)(v11 & 1);
    }
LABEL_8:
    v11 = 0;
    return (id)(v11 & 1);
  }
  __break(1u);
  return result;
}

void sub_21EA5D3C0()
{
  id v0;
  void *v1;
  id v2;

  sub_21EB02B88();
  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  static NSUserDefaults.docUserDefaults = (uint64_t)v2;
}

uint64_t sub_21EA5D444()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NSNotification.SubscriptionsController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSNotification.SubscriptionsController);
}

uint64_t sub_21EA5D4A0()
{
  uint64_t v0;

  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 24) = sub_21EA5E80C(MEMORY[0x24BEE4AF8]);
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t NSNotification.SubscriptionsController.init(observee:)()
{
  uint64_t v0;

  v0 = sub_21EA5D4A0();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_21EA5D528()
{
  return sub_21EA59DC8(&qword_2540A6D68, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB085D0);
}

void type metadata accessor for FPProviderID(uint64_t a1)
{
  sub_21EA5D084(a1, qword_2540A6D70);
}

uint64_t sub_21EA5D568(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  void *v5;
  id v6;

  result = sub_21EA5DAF8(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = (void *)sub_21EA5D7DC(result, v3, 0, a1);
  v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_21EA5D5D4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x2207B5B3C](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_21EA5D6C0(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  if (a3 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x2207B5B3C](v7, a3);
      }
      else
      {
        v8 = *(_QWORD *)(a3 + 8 * v7 + 32);
        sub_21EB01F10();
      }
      v12 = v8;
      v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0)
        break;
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        v6 = sub_21EB0341C();
        swift_bridgeObjectRelease();
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v10 == v6)
          return 0;
      }
    }
  }
  return v7;
}

uint64_t sub_21EA5D7DC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21EA5D830(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for FPProviderID(0);
  sub_21EA59DC8((unint64_t *)&unk_2540A6D58, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB08640);
  result = sub_21EB02E28();
  v7 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_21EA5D8D0(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_21EA5D8D0(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_21EB02B88();
  sub_21EB035A8();
  swift_bridgeObjectRetain();
  sub_21EB02BDC();
  v7 = sub_21EB035E4();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_21EA5C6C0((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_21EB02B88();
  v12 = v11;
  if (v10 == sub_21EB02B88() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_21EB02B88();
        v19 = v18;
        if (v17 == sub_21EB02B88() && v19 == v20)
          goto LABEL_16;
        v22 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_21EA5DAF8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21EA5DB98(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Array<A>.displayableModes.getter(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_21EA5C40C(0, v2, 0);
    result = v9;
    v4 = (char *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21EA5C40C(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_BYTE *)(result + v8 + 32) = 0x5040302010000uLL >> (8 * v5);
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21EA5DCA8(uint64_t a1, uint64_t a2)
{
  return sub_21EA5DCB8(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for DOCAssertion);
}

uint64_t sub_21EA5DCB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a4;
    v7 = a3;
    v4 = a2;
    v6 = a1;
    v8 = *v5;
    if (!(*v5 >> 62))
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v19 < v4)
    goto LABEL_15;
LABEL_4:
  v10 = v4 - v6;
  if (__OFSUB__(v4, v6))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v6 - v4;
  if (__OFSUB__(0, v10))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v20 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v13 = v20 + v32;
    if (!__OFADD__(v20, v32))
      goto LABEL_8;
LABEL_20:
    __break(1u);
LABEL_21:
    v15 = 1;
    goto LABEL_22;
  }
  v8 = *v5;
  v32 = v6 - v4;
  v33 = v6;
  if (*v5 >> 62)
    goto LABEL_18;
  v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v10;
  if (__OFADD__(v12, v11))
    goto LABEL_20;
LABEL_8:
  v8 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v8;
  v15 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v16 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
      v17 = v7;
      v18 = v9;
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_22:
  v17 = v7;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v9;
  if (v21 <= v13)
    v21 = v13;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x2207B5B48](v15, v21, 1, v8);
  swift_bridgeObjectRelease();
  *v5 = v8;
  v16 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_27:
  v22 = (char *)(v16 + 32 + 8 * v33);
  v18(v17);
  swift_arrayDestroy();
  v23 = v32;
  if (!v32)
    return sub_21EB02D08();
  if (!(v8 >> 62))
  {
    v24 = *(_QWORD *)(v16 + 16);
    v25 = v24 - v4;
    if (!__OFSUB__(v24, v4))
      goto LABEL_30;
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  v30 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  v23 = v32;
  v25 = v30 - v4;
  if (__OFSUB__(v30, v4))
    goto LABEL_41;
LABEL_30:
  if ((v25 & 0x8000000000000000) == 0)
  {
    v26 = (char *)(v16 + 32 + 8 * v4);
    if (v33 != v4 || v22 >= &v26[8 * v25])
    {
      memmove(v22, v26, 8 * v25);
      v23 = v32;
    }
    if (!(v8 >> 62))
    {
      v27 = *(_QWORD *)(v16 + 16);
      v28 = v27 + v23;
      if (!__OFADD__(v27, v23))
      {
LABEL_36:
        *(_QWORD *)(v16 + 16) = v28;
        return sub_21EB02D08();
      }
      goto LABEL_44;
    }
LABEL_42:
    swift_bridgeObjectRetain();
    v31 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v28 = v31 + v32;
    if (!__OFADD__(v31, v32))
      goto LABEL_36;
LABEL_44:
    __break(1u);
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA5DFC0(uint64_t a1, uint64_t a2)
{
  return sub_21EA5DCB8(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for DOCAssertion.DOCWeakAssertionObserver);
}

uint64_t sub_21EA5DFD0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_21EB034C4();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_21EB034C4() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA5E094(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21EA5E0D8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_21EA5D5D4(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_54;
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v22 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (v9 != v22)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v6 + 5; ; ++i)
      {
        v11 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
          break;
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        if (*(_QWORD *)(v12 + 8 * i) != a2)
          goto LABEL_11;
LABEL_31:
        v9 = i - 3;
        if (__OFADD__(v11, 1))
          goto LABEL_46;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v18 = sub_21EB0341C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v18 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v18)
          return v6;
      }
      v19 = MEMORY[0x2207B5B3C](i - 4);
      swift_unknownObjectRelease();
      if (v19 == a2)
        goto LABEL_31;
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1))
          goto LABEL_47;
        goto LABEL_31;
      }
      v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v13 = MEMORY[0x2207B5B3C](v6, *a1);
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v14 = *(_QWORD *)(v9 + 8 * i);
          sub_21EB01F10();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v13 = *(_QWORD *)(v9 + 8 * v6 + 32);
        sub_21EB01F10();
        if ((v9 & 0xC000000000000001) == 0)
          goto LABEL_16;
      }
      v14 = MEMORY[0x2207B5B3C](i - 4, v9);
      v9 = *a1;
LABEL_19:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_21EAC020C(v9);
      }
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_21EB02D08();
      v9 = *a1;
      v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v16 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
        sub_21EAC020C(v9);
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_52;
      if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_21EB02D08();
      goto LABEL_30;
    }
    return v6;
  }
  v20 = *a1;
  if (!(v20 >> 62))
    return *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v23 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_21EA5E3F0(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v20;
  int v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v2;
  v7 = *v2;
  swift_bridgeObjectRetain();
  v8 = sub_21EA5D6C0(a1, a2, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_54;
    if (*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v26 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (v11 != v26)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v11 = v8 + 5;
      v28 = a2;
      while (1)
      {
        v12 = v11 - 4;
        v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v14 = MEMORY[0x2207B5B3C](v11 - 4);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          v14 = *(_QWORD *)(v13 + 8 * v11);
          sub_21EB01F10();
        }
        v29 = v14;
        v15 = a1(&v29);
        swift_release();
        if ((v15 & 1) == 0)
          break;
LABEL_32:
        v23 = v11 - 3;
        if (__OFADD__(v12, 1))
          goto LABEL_46;
        if (*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          v24 = sub_21EB0341C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v24 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v23 == v24)
          return v8;
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1))
          goto LABEL_47;
        goto LABEL_32;
      }
      v16 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        v17 = MEMORY[0x2207B5B3C](v8, *v4);
        v16 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v12 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v18 = *(_QWORD *)(v16 + 8 * v11);
          sub_21EB01F10();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v8 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v17 = *(_QWORD *)(v16 + 8 * v8 + 32);
        sub_21EB01F10();
        if ((v16 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v18 = MEMORY[0x2207B5B3C](v11 - 4, v16);
      v16 = *v4;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v16;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v16 & 0x8000000000000000) != 0
        || (v16 & 0x4000000000000000) != 0)
      {
        sub_21EAC020C(v16);
      }
      *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v18;
      swift_release();
      sub_21EB02D08();
      v20 = *v4;
      v21 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v20;
      if (!v21 || (v20 & 0x8000000000000000) != 0 || (v20 & 0x4000000000000000) != 0)
        sub_21EAC020C(v20);
      a2 = v28;
      if ((v12 & 0x8000000000000000) != 0)
        goto LABEL_52;
      if (v12 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v11) = v17;
      swift_release();
      sub_21EB02D08();
      goto LABEL_31;
    }
    return v8;
  }
  if (!(*v4 >> 62))
    return *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v27 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  return v27;
}

id sub_21EA5E750(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = sub_21EB01F10();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_21EA579D4(0, (unint64_t *)&unk_25546BFA0);
    v4 = (void *)sub_21EB02AC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

unint64_t sub_21EA5E7D4(uint64_t a1)
{
  return sub_21EA51F30(a1, &qword_2540A6F18, &qword_2540A6E88, (uint64_t (*)(uint64_t))sub_21EA5B7F4);
}

unint64_t sub_21EA5E7F0(uint64_t a1)
{
  return sub_21EA51F30(a1, &qword_2540A6F10, &qword_2540A6E60, (uint64_t (*)(uint64_t))sub_21EA5B7F4);
}

unint64_t sub_21EA5E80C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F00);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_21EA5B7F8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA5E924(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAB8);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_21EA5B7F8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA5EA3C()
{
  unint64_t result;

  result = qword_2540A6CF0;
  if (!qword_2540A6CF0)
  {
    result = MEMORY[0x2207B694C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540A6CF0);
  }
  return result;
}

uint64_t sub_21EA5EA88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_21EA5EAA8()
{
  uint64_t v0;

  return sub_21EA9523C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_21EA5EAB0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_21EB01F10();
  v1(v2);
  return swift_release();
}

uint64_t sub_21EA5EADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_21EA5EAFC()
{
  id result;

  result = DOCAnalyticsLogHandle();
  static DOCLog.Analytics = (uint64_t)result;
  return result;
}

id sub_21EA5EB20()
{
  id result;

  result = DOCSourceLogHandle();
  static DOCLog.Source = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Source.unsafeMutableAddressor()
{
  if (qword_2540A6CD0 != -1)
    swift_once();
  return &static DOCLog.Source;
}

id sub_21EA5EB84()
{
  id result;

  result = DOCRenameLogHandle();
  static DOCLog.Rename = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Rename.unsafeMutableAddressor()
{
  if (qword_255469B20 != -1)
    swift_once();
  return &static DOCLog.Rename;
}

id sub_21EA5EBE8()
{
  id result;

  result = DOCTestsLogHandle();
  static DOCLog.Tests = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Tests.unsafeMutableAddressor()
{
  if (qword_2540A6CC0 != -1)
    swift_once();
  return &static DOCLog.Tests;
}

id sub_21EA5EC4C()
{
  id result;

  result = DOCUILogHandle();
  static DOCLog.UI = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.UI.unsafeMutableAddressor()
{
  if (qword_2540A6CB8 != -1)
    swift_once();
  return &static DOCLog.UI;
}

id sub_21EA5ECB0()
{
  id result;

  result = DOCFileProviderSyncStateLogHandle();
  static DOCLog.FileProviderSyncState = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.FileProviderSyncState.unsafeMutableAddressor()
{
  if (qword_2540A6CA8 != -1)
    swift_once();
  return &static DOCLog.FileProviderSyncState;
}

id sub_21EA5ED14()
{
  id result;

  result = DOCBrowserHistoryLogHandle();
  static DOCLog.BrowserHistory = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.BrowserHistory.unsafeMutableAddressor()
{
  if (qword_2540A6C98 != -1)
    swift_once();
  return &static DOCLog.BrowserHistory;
}

id sub_21EA5ED78()
{
  id result;

  result = DOCEnumerationLogHandle();
  static DOCLog.Enumeration = (uint64_t)result;
  return result;
}

id sub_21EA5ED9C()
{
  id result;

  result = DOCApplicationLogHandle();
  static DOCLog.Application = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Application.unsafeMutableAddressor()
{
  if (qword_2540A6C80 != -1)
    swift_once();
  return &static DOCLog.Application;
}

id sub_21EA5EE00()
{
  id result;

  result = DOCStateStoreLogHandle();
  static DOCLog.StateStore = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.StateStore.unsafeMutableAddressor()
{
  if (qword_2540A6C70 != -1)
    swift_once();
  return &static DOCLog.StateStore;
}

id sub_21EA5EE64()
{
  id result;

  result = DOCAppIntentsLogHandle();
  static DOCLog.AppIntents = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.AppIntents.unsafeMutableAddressor()
{
  if (qword_2540A6C60 != -1)
    swift_once();
  return &static DOCLog.AppIntents;
}

uint64_t sub_21EA5EEC8()
{
  uint64_t result;

  sub_21EB030D4();
  MEMORY[0x24BDAC7A8]();
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
  sub_21EB030C8();
  result = sub_21EB030E0();
  updatePointsOfInterestHandler = result;
  return result;
}

uint64_t *updatePointsOfInterestHandler.unsafeMutableAddressor()
{
  if (qword_2540A6C50 != -1)
    swift_once();
  return &updatePointsOfInterestHandler;
}

ValueMetadata *type metadata accessor for DOCContentLayoutSizeCategory()
{
  return &type metadata for DOCContentLayoutSizeCategory;
}

uint64_t sub_21EA5EFB4(char a1)
{
  uint64_t result;
  _BYTE *v2;

  if (a1)
  {
    if (a1 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F30);
      result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_21EB07140;
      *(_BYTE *)(result + 32) = 1;
      v2 = (_BYTE *)(result + 33);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F30);
      result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_21EB09A00;
      *(_WORD *)(result + 32) = 258;
      v2 = (_BYTE *)(result + 34);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F30);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_21EB08F10;
    v2 = (_BYTE *)(result + 32);
  }
  *v2 = 0;
  return result;
}

uint64_t type metadata accessor for DOCButtonGestureRecognizer()
{
  return objc_opt_self();
}

id DOCButtonGestureRecognizer.init(target:action:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_numberOfTouchesRequired] = 1;
  v5 = v2;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21EB0341C())
    sub_21EA8EC60(MEMORY[0x24BEE4AF8]);
  else
    v6 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches] = v6;
  v7 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;

  sub_21EA5B5F0(a1, (uint64_t)v18);
  v8 = v19;
  if (v19)
  {
    v9 = __swift_project_boxed_opaque_existential_0(v18, v19);
    v10 = *(_QWORD *)(v8 - 8);
    MEMORY[0x24BDAC7A8](v9);
    v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    v13 = sub_21EB034B8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    v13 = 0;
  }
  v14 = (objc_class *)type metadata accessor for DOCButtonGestureRecognizer();
  v17.receiver = v5;
  v17.super_class = v14;
  v15 = objc_msgSendSuper2(&v17, sel_initWithTarget_action_, v13, a2);
  swift_unknownObjectRelease();
  sub_21EA5B5B0(a1);
  return v15;
}

uint64_t sub_21EA5F27C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21EA5F2C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  __int128 v12;
  __int128 v13;

  v5 = (uint64_t *)(v2 + qword_25546B380);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_21EB01F10();
    v8 = sub_21EA59F28(v7);
    if ((v9 & 1) != 0)
    {
      sub_21EA5A05C(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v12);
    }
    else
    {
      v12 = 0u;
      v13 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  v10 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v10 ^ 1u, 1, a1);
}

uint64_t sub_21EA5F3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v17[3];
  uint64_t v18;

  v6 = sub_21EB030F8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - v9 + 16;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_beginAccess();
    sub_21EA59E44(a2, v17);
    sub_21EA5B5B0((uint64_t)v17);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a3);
    v18 = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v13, a3);
    swift_beginAccess();
    sub_21EB01F10();
    sub_21EA5946C((uint64_t)v17, a2);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a3);
  }
}

uint64_t DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(uint64_t);

  v19 = a3;
  v20 = a2;
  v6 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v7 = sub_21EB030F8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - v12;
  sub_21EA5F2C0(v6, (uint64_t)&v19 - v12);
  v14 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a4, v13, v6);
  v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v16 = v15(v13, v7);
  v20(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a4, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v6);
  v17 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  sub_21EB01F10();
  sub_21EA5F3B0((uint64_t)v11, (uint64_t)a1, v17);
  swift_release();
  return v15(v11, v7);
}

id static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(void *a1, const void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  if (objc_getAssociatedObject(a1, a2))
  {
    sub_21EB031B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_21EA5B638((uint64_t)v13, (uint64_t)v14);
  if (!v15)
  {
    sub_21EA5B5B0((uint64_t)v14);
    v7 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage(0, *(_QWORD *)(v2 + 80), v9, v10);
    goto LABEL_8;
  }
  v7 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage(0, *(_QWORD *)(v2 + 80), v5, v6);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v8 = objc_msgSend(objc_allocWithZone(v7), sel_init);
    objc_setAssociatedObject(a1, a2, v8, (void *)1);
    return v8;
  }
  return (id)v12;
}

void *static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)()
{
  uint64_t v0;

  v0 = sub_21EB023A8();
  MEMORY[0x24BDAC7A8](v0);
  return sub_21EA50E1C();
}

uint64_t sub_21EA5F908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21EA5F94C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for DOCTypeToFocusController()
{
  return objc_opt_self();
}

uint64_t DOCTypeToFocusController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCTypeToFocusController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t getEnumTagSinglePayload for DOCItemGroupingBehavior(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    v7 = v6 >= 7;
    v8 = v6 - 7;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21EA5FA5C + 4 * byte_21EB0CDCA[v4]))();
  }
}

ValueMetadata *type metadata accessor for DOCItemGroupingBehavior()
{
  return &type metadata for DOCItemGroupingBehavior;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCAnalyticsActionEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  sub_21EB01F10();
  return v3;
}

uint64_t sub_21EA5FAF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EA5FB24(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21EA5FB58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21EA5FB84()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t (*sub_21EA5FBB0())()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];

  v1 = v0[1];
  v5 = *v0;
  v6[0] = v1;
  *(_QWORD *)((char *)v6 + 15) = *(_QWORD *)((char *)v0 + 31);
  v2 = swift_allocObject();
  v3 = v0[1];
  *(_OWORD *)(v2 + 16) = *v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 47) = *(_QWORD *)((char *)v0 + 31);
  sub_21EA5FB24((uint64_t)&v5);
  return sub_21EA60584;
}

uint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV9SortOrderO13configurationAESo16DOCConfigurationC_tcfC_0(void *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  __int128 v22;
  __int128 v23;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedStore);
  v3 = objc_msgSend(v2, sel_interfaceStateForConfiguration_, a1);

  if (!v3)
    goto LABEL_17;
  v4 = objc_msgSend(v3, sel_sortingMode);

  if (!v4)
    goto LABEL_17;
  v5 = sub_21EB02AD4();

  v6 = sub_21EB02B88();
  if (!*(_QWORD *)(v5 + 16) || (v8 = sub_21EA5B7F8(v6, v7), (v9 & 1) == 0))
  {
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_21EA5A05C(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_20;
  v10 = sub_21EB02B88();
  if (*(_QWORD *)(v5 + 16) && (v12 = sub_21EA5B7F8(v10, v11), (v13 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v5 + 56) + 32 * v12, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_11:

    swift_bridgeObjectRelease();
    sub_21EA5B5B0((uint64_t)&v22);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:

    swift_bridgeObjectRelease();
    return 0;
  }
  v14 = _s26DocumentManagerExecutables15DOCItemSortModeO8rawValueACSgSS_tcfC_0();
  if (v14 == 7)
  {
LABEL_17:

    return 0;
  }
  _s26DocumentManagerExecutables21DOCItemSortDescriptorV4type10isReversedAcA0dE4ModeO_SbtcfC_0(v14);
  v17 = v16;
  if (!(v16 >> 62))
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_23;
LABEL_29:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return 2;
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  if (!result)
    goto LABEL_29;
LABEL_23:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x2207B5B3C](0, v17);
LABEL_26:
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v20, sel_ascending);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v21 & 1) != 0)
      return 1;
    return 2;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v17 + 32);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV8SortModeO13configurationAESo16DOCConfigurationC_tcfC_0(void *a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  __int128 v12;
  __int128 v13;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedStore);
  v3 = objc_msgSend(v2, sel_interfaceStateForConfiguration_, a1);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_sortingMode);

    if (v4)
    {
      v5 = sub_21EB02AD4();

      v6 = sub_21EB02B88();
      if (*(_QWORD *)(v5 + 16) && (v8 = sub_21EA5B7F8(v6, v7), (v9 & 1) != 0))
      {
        sub_21EA5A05C(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)&v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v13 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v10 = _s26DocumentManagerExecutables15DOCItemSortModeO8rawValueACSgSS_tcfC_0();

            return 0x7060504030201uLL >> (8 * v10);
          }
          goto LABEL_8;
        }
      }
      else
      {
        v12 = 0u;
        v13 = 0u;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      sub_21EA5B5B0((uint64_t)&v12);
      return 0;
    }
  }
LABEL_8:

  return 0;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::Source __swiftcall DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(__C::DOCDocumentSourceIdentifier sourceIdentifier)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::Source v18;
  NSString v19;

  v2 = sub_21EB02B88();
  v4 = v3;
  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_18:

    return 1;
  }
  v8 = sub_21EB02B88();
  v10 = v9;
  if (v8 == sub_21EB02B88() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v13 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_21:

    return 2;
  }
  v14 = sub_21EB02B88();
  v16 = v15;
  v18 = DocumentManagerExecutables_DOCAnalyticsActionEvent_Source_tags;
  if (v14 != sub_21EB02B88() || v16 != v17)
  {
    if ((sub_21EB034C4() & 1) != 0)
      v18 = DocumentManagerExecutables_DOCAnalyticsActionEvent_Source_tags;
    else
      v18 = DocumentManagerExecutables_DOCAnalyticsActionEvent_Source_other;
  }
  v19 = sourceIdentifier._rawValue;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6ClientO13configuration16bundleIdentifierAESo16DOCConfigurationC_SSSgtcfC_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (objc_msgSend(a1, sel_isFilesApp))
  {

    swift_bridgeObjectRelease();
    return 1;
  }
  if (objc_msgSend(a1, sel_isPopover))
  {

    swift_bridgeObjectRelease();
    return 4;
  }
  if (objc_msgSend(a1, sel_isWidget))
  {

    swift_bridgeObjectRelease();
    return 6;
  }
  v7 = sub_21EB02B88();
  if (a3)
  {
    if (v7 == a2 && v8 == a3)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return 5;
    }
    v10 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      swift_bridgeObjectRelease();

      return 5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(a1, sel_forPickingDocuments) || objc_msgSend(a1, sel_forPickingFolders))
  {

    swift_bridgeObjectRelease();
    return 2;
  }
  v11 = sub_21EB02B88();
  if (a3)
  {
    if (v11 == a2 && v12 == a3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return 3;
    }
    v13 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v13 & 1) != 0)
      return 3;
  }
  else
  {
    swift_bridgeObjectRelease();

  }
  return 0;
}

unint64_t sub_21EA6044C()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A388);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB088C0;
  *(_QWORD *)(inited + 32) = 0x6E6F69746361;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = sub_21EB02E40();
  *(_QWORD *)(inited + 56) = 0x746E65696C63;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = sub_21EB02E40();
  *(_QWORD *)(inited + 80) = 0x72656469766F7270;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = sub_21EB02E40();
  *(_QWORD *)(inited + 104) = 0x656372756F73;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  *(_QWORD *)(inited + 120) = sub_21EB02E40();
  *(_QWORD *)(inited + 128) = 0x65646F4D77656976;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  *(_QWORD *)(inited + 144) = sub_21EB02E40();
  *(_QWORD *)(inited + 152) = 0x65646F4D74726F73;
  *(_QWORD *)(inited + 160) = 0xE800000000000000;
  *(_QWORD *)(inited + 168) = sub_21EB02E40();
  *(_QWORD *)(inited + 176) = 0x6564724F74726F73;
  *(_QWORD *)(inited + 184) = 0xE900000000000072;
  *(_QWORD *)(inited + 192) = sub_21EB02E40();
  return sub_21EA5E924(inited);
}

unint64_t sub_21EA60584()
{
  return sub_21EA6044C();
}

uint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO8sourceIDAESgSo27DOCDocumentSourceIdentifiera_tcfC_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  void *v15;
  int IsICloud;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v2 = sub_21EB02B88();
  v4 = v3;
  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_14:

    return 7;
  }
  v8 = sub_21EB02B88();
  v10 = v9;
  if (v8 == sub_21EB02B88() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v13 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_17:

    return 2;
  }
  sub_21EB02B88();
  v14 = a1;
  v15 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  IsICloud = DOCDocumentSourceIdentifierIsICloud(v15);

  if (IsICloud)
  {

    return 3;
  }
  else
  {
    v19 = sub_21EB02B88();
    v21 = v20;
    v17 = 8;
    if (v19 != sub_21EB02B88() || v21 != v22)
    {
      if ((sub_21EB034C4() & 1) != 0)
        v17 = 8;
      else
        v17 = 9;
    }
    v23 = v14;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v17;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider __swiftcall DOCAnalyticsActionEvent.FileProvider.init(items:)(Swift::OpaquePointer items)
{
  uint64_t v2;
  DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  if ((unint64_t)items._rawValue >> 62)
  {
    v2 = sub_21EB0341C();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v2 = *(_QWORD *)(((unint64_t)items._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v14 = MEMORY[0x24BEE4AF8];
  result = sub_21EA5C3CC(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  v4 = 0;
  v5 = v14;
  do
  {
    if (((unint64_t)items._rawValue & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x2207B5B3C](v4, items._rawValue);
    else
      v6 = *((id *)items._rawValue + v4 + 4);
    v7 = v6;
    v8 = objc_msgSend(v6, sel_providerID);

    v10 = *(_QWORD *)(v14 + 16);
    v9 = *(_QWORD *)(v14 + 24);
    if (v10 >= v9 >> 1)
      sub_21EA5C3CC(v9 > 1, v10 + 1, 1);
    ++v4;
    *(_QWORD *)(v14 + 16) = v10 + 1;
    *(_QWORD *)(v14 + 8 * v10 + 32) = v8;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
LABEL_14:
  v11 = sub_21EA5D830(v5);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = (void *)sub_21EA5D568(v11);
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (v12 == 1)
        return _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO10providerIDAESo010FPProviderJ0a_tcfC_0(v13);

    }
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO10providerIDAESo010FPProviderJ0a_tcfC_0(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  char v6;
  unsigned int v7;

  sub_21EB02B88();
  v2 = (void *)sub_21EB02B58();
  v3 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v4 = v2;
  if (DOCProviderDomainIDIsExternalDevice())
  {

    v5 = 5;
    a1 = v4;
LABEL_5:

    return v5;
  }
  v6 = DOCProviderDomainIDIsSharedServerDomainID();

  if ((v6 & 1) != 0)
  {
    v5 = 6;
    goto LABEL_5;
  }
  v7 = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO8sourceIDAESgSo27DOCDocumentSourceIdentifiera_tcfC_0(v3);

  if (v7 == 9)
    return 4;
  else
    return v7;
}

void DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(char a1@<W0>, void *a2@<X1>, char a3@<W2>, char a4@<W5>, char a5@<W6>, uint64_t a6@<X8>)
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v11 = objc_msgSend(v10, sel_bundleIdentifier);

  if (v11)
  {
    v12 = sub_21EB02B88();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v15 = a2;
  v16 = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6ClientO13configuration16bundleIdentifierAESo16DOCConfigurationC_SSSgtcfC_0(v15, v12, v14);
  v17 = v15;
  v18 = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV8SortModeO13configurationAESo16DOCConfigurationC_tcfC_0(v17);
  v19 = v17;
  v20 = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV9SortOrderO13configurationAESo16DOCConfigurationC_tcfC_0(v19);
  v21 = objc_msgSend(v19, sel_hostIdentifier);
  v22 = sub_21EB02B88();
  v24 = v23;

  *(_QWORD *)a6 = 0xD000000000000032;
  *(_QWORD *)(a6 + 8) = 0x800000021EB0E690;
  *(_QWORD *)(a6 + 16) = v22;
  *(_QWORD *)(a6 + 24) = v24;
  *(_BYTE *)(a6 + 32) = a1;
  *(_BYTE *)(a6 + 33) = v16;
  *(_BYTE *)(a6 + 34) = a3;
  *(_BYTE *)(a6 + 35) = a4;
  *(_BYTE *)(a6 + 36) = a5;
  *(_BYTE *)(a6 + 37) = v18;
  *(_BYTE *)(a6 + 38) = v20;
}

void sub_21EA60B84()
{
  off_2540A6BA0 = (_UNKNOWN *)MEMORY[0x24BEE4AF8];
}

uint64_t DOCAssertionCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCAssertionCollection()
{
  return objc_opt_self();
}

uint64_t sub_21EA60BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_21EA61AB4(v1, a1);
  swift_beginAccess();
  sub_21EB01F10();
  v3 = sub_21EA5E0D8((unint64_t *)(v1 + 16), a1);
  result = swift_release();
  v5 = *(_QWORD *)(v1 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_21EB0341C();
    result = swift_bridgeObjectRelease();
    if (v6 >= v3)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 >= v3)
    {
LABEL_3:
      sub_21EA5DCA8(v3, v6);
      v7 = swift_endAccess();
      return (*(uint64_t (**)(uint64_t))(v1 + 24))(v7);
    }
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DOCItemSortDescriptor()
{
  return &type metadata for DOCItemSortDescriptor;
}

uint64_t sub_21EA60CEC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

_QWORD *sub_21EA60D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  unint64_t v16;
  unint64_t v17;

  v13 = a3;
  v14 = a4;
  v12 = a2;
  v6 = sub_21EB02F48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB02A5C();
  MEMORY[0x24BDAC7A8]();
  sub_21EB02F30();
  MEMORY[0x24BDAC7A8]();
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_21EB032E4();
  swift_bridgeObjectRelease();
  v16 = 0xD000000000000012;
  v17 = 0x800000021EB15F00;
  v15 = &type metadata for DOCICloudRootNode.ThreadSafeRootNodes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A69E0);
  sub_21EB02BA0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB02F24();
  sub_21EB02A44();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5750], v6);
  v4[2] = sub_21EB02F84();
  v4[3] = a1;
  v10 = v13;
  v4[4] = v12;
  v4[5] = v10;
  v4[6] = v14;
  return v4;
}

uint64_t sub_21EA60F08()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCThreadSafeState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCThreadSafeState);
}

uint64_t sub_21EA60F94()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_21EA61008@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_21EA511EC(*(void (**)(uint64_t *__return_ptr, id *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_21EA61038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_21EA61054(*(void (**)(uint64_t *__return_ptr, id *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_21EA61054@<X0>(void (*a1)(uint64_t *__return_ptr, id *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_21EA511EC(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t type metadata accessor for DOCColumnViewSpecs()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DOCICloudRootNode()
{
  return objc_opt_self();
}

uint64_t sub_21EA6112C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t result;
  _QWORD v6[2];

  v0 = sub_21EB02F48();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB02F30();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8]();
  sub_21EB02A5C();
  MEMORY[0x24BDAC7A8]();
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  sub_21EB02A50();
  v6[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v4, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_21EB02F84();
  qword_2540A6A00 = result;
  return result;
}

_QWORD *sub_21EA612F8()
{
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6AA0);
  swift_allocObject();
  result = sub_21EA60D10(0, 0, 0, 0);
  off_2540A69E8 = result;
  return result;
}

uint64_t DOCICloudRootNode.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAFE1E0((uint64_t *)&unk_2540A6520, (SEL *)&selRef_fileURL, (void (*)(void))MEMORY[0x24BDCD9C0], MEMORY[0x24BDCDAC0], a1);
}

void sub_21EA6139C(uint64_t a1)
{
  uint64_t v1;

  sub_21EA613A4(a1, *(char **)(v1 + 16));
}

void sub_21EA613A4(uint64_t a1, char *a2)
{
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;

  v4 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain;
  if (objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_providerDomain], sel_isDataSeparatedDomain))
  {
    v5 = *(void **)(a1 + 16);
    v6 = a2;

    *(_QWORD *)(a1 + 16) = a2;
    v7 = objc_msgSend(*(id *)&a2[v4], sel_identifier);

    *(_QWORD *)(a1 + 24) = v7;
  }
  else
  {
    v8 = *(void **)a1;
    v9 = a2;

    *(_QWORD *)a1 = a2;
    v10 = objc_msgSend(*(id *)&a2[v4], sel_identifier);

    *(_QWORD *)(a1 + 8) = v10;
  }
}

void sub_21EA6145C()
{
  uint64_t v0;

  sub_21EA52368(v0);
}

uint64_t DOCICloudRootNode.displayName.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_iCloudContainer);
  if (v1)
    v2 = objc_msgSend(v1, sel_displayName);
  else
    v2 = (id)DOCLocalizedDisplayName();
  v3 = v2;
  v4 = sub_21EB02B88();

  return v4;
}

void sub_21EA61538(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_21EA4F520(*(id *)(v2 + 16), a1, a2);
}

void *DOCICloudRootNode.deferredCreationNode.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCICloudRootNode_deferredCreationNode);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for DOCICloudRootNode.ThreadSafeRootNodes()
{
  return &type metadata for DOCICloudRootNode.ThreadSafeRootNodes;
}

uint64_t sub_21EA6159C()
{
  uint64_t result;

  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
  result = sub_21EB030EC();
  updateLogHandler = result;
  return result;
}

uint64_t *updateLogHandler.unsafeMutableAddressor()
{
  if (qword_2540A69D8 != -1)
    swift_once();
  return &updateLogHandler;
}

uint64_t sub_21EA61654()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCViewDecorator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCViewDecorator);
}

id DOCViewDecorator.topAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_topAnchor);
}

id DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setTranslatesAutoresizingMaskIntoConstraints_, a1 & 1);
}

id DOCViewDecorator.trailingAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_trailingAnchor);
}

id DOCViewDecorator.leadingAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_leadingAnchor);
}

id DOCViewDecorator.centerYAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_centerYAnchor);
}

id DOCViewDecorator.centerXAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_centerXAnchor);
}

id DOCViewDecorator.heightAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_heightAnchor);
}

id DOCViewDecorator.bottomAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_bottomAnchor);
}

id DOCViewDecorator.widthAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_widthAnchor);
}

uint64_t type metadata accessor for DOCUSBFormatting()
{
  return objc_opt_self();
}

uint64_t sub_21EA61804()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DOCUSBFormatting();
  v0 = swift_allocObject();
  type metadata accessor for DOCOperationManager();
  swift_allocObject();
  result = sub_21EA63964();
  *(_QWORD *)(v0 + 16) = result;
  static DOCUSBFormatting.shared = v0;
  return result;
}

uint64_t *DOCUSBFormatting.shared.unsafeMutableAddressor()
{
  if (qword_2540A6848 != -1)
    swift_once();
  return &static DOCUSBFormatting.shared;
}

BOOL DOCUSBFormatting.hasOperations.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 > 0;
}

ValueMetadata *type metadata accessor for DOCItemSortMode()
{
  return &type metadata for DOCItemSortMode;
}

ValueMetadata *type metadata accessor for DOCItemSortMode.DisplayableMode()
{
  return &type metadata for DOCItemSortMode.DisplayableMode;
}

id sub_21EA61938()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
  qword_2540A6830 = (uint64_t)result;
  return result;
}

id sub_21EA619A4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FISentinelNode()), sel_init);
  static FISentinelNode.createSentinelNode = (uint64_t)result;
  return result;
}

uint64_t *FISentinelNode.createSentinelNode.unsafeMutableAddressor()
{
  if (qword_2540A6828 != -1)
    swift_once();
  return &static FISentinelNode.createSentinelNode;
}

uint64_t DOCAssertion.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) == 1)
    sub_21EAEEB64(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCAssertion()
{
  return objc_opt_self();
}

uint64_t sub_21EA61A70()
{
  uint64_t v0;

  sub_21EA60CEC(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCAssertion.DOCWeakAssertionObserver()
{
  return objc_opt_self();
}

uint64_t sub_21EA61AB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[6];
  uint64_t v16;

  v4 = (_QWORD *)(a2 + 40);
  swift_beginAccess();
  v5 = *(_QWORD *)(a2 + 40);
  v16 = MEMORY[0x24BEE4AF8];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
    goto LABEL_20;
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x2207B5B3C](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_21EB01F10();
    }
    v10 = MEMORY[0x2207B6ACC](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_21EB03338();
      sub_21EB03368();
      sub_21EB03374();
      sub_21EB03344();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v16;
LABEL_15:
  *v4 = v11;
  v12 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v12);
  v15[2] = a1;
  v15[3] = &off_24E32FBE8;
  swift_beginAccess();
  result = sub_21EA5E3F0(sub_21EA61CE4, (uint64_t)v15);
  v13 = result;
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_21EB0341C();
    result = swift_bridgeObjectRelease();
    if (v14 >= v13)
      goto LABEL_17;
  }
  else
  {
    v14 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14 >= result)
    {
LABEL_17:
      sub_21EA5DFC0(v13, v14);
      return swift_endAccess();
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_21EA61CE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  result = MEMORY[0x2207B6ACC](*a1 + 16);
  if (result)
  {
    v4 = result;
    swift_unknownObjectRelease();
    return v4 == v2;
  }
  return result;
}

uint64_t sub_21EA61D30(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)(a2 + 40);
  swift_beginAccess();
  v4 = *(_QWORD *)(a2 + 40);
  v13 = MEMORY[0x24BEE4AF8];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v5 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_14;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x2207B5B3C](i, v4);
    }
    else
    {
      v8 = *(_QWORD *)(v4 + 8 * i + 32);
      sub_21EB01F10();
    }
    v9 = MEMORY[0x2207B6ACC](v8 + 16);
    swift_unknownObjectRelease();
    if (v9)
    {
      sub_21EB03338();
      sub_21EB03368();
      sub_21EB03374();
      sub_21EB03344();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v10 = v13;
LABEL_15:
  *v3 = v10;
  swift_bridgeObjectRelease();
  type metadata accessor for DOCAssertion.DOCWeakAssertionObserver();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v11 + 24) = &off_24E32FBE8;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v12 = sub_21EB01F10();
  MEMORY[0x2207B5500](v12);
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_21EB02D20();
  sub_21EB02D5C();
  sub_21EB02D08();
  swift_endAccess();
  return swift_release();
}

uint64_t static DOCVibrancy.Style.stroke(_:)(int a1)
{
  return (a1 << 8);
}

uint64_t type metadata accessor for DOCRootNode()
{
  return objc_opt_self();
}

id *static DOCRootNode.rootNode(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unsigned int v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  unsigned int v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  unsigned int v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char **v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  char **v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  id v71;
  char *v72;
  char v73;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSObject *v78;
  _BOOL4 v79;
  char **v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint8_t *v99;
  id v100;
  objc_class *v101;
  char *v102;
  id v103;
  void *v104;
  os_log_type_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint8_t *v110;
  os_log_type_t v111;
  os_log_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  id v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  const char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint8_t *, uint64_t);
  uint8_t *v130;
  id v131;
  id v132;
  objc_class *v133;
  char *v134;
  void *v135;
  void (*v136)(uint64_t, char *);
  char *v137;
  void (*v138)(uint64_t, char *);
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  NSObject *v155;
  os_log_type_t v156;
  uint8_t *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  unint64_t v162;
  uint8_t *v163;
  objc_class *v164;
  char *v165;
  uint64_t v166;
  objc_class *v167;
  char *v168;
  id v169;
  char *v170;
  id v171;
  void *v172;
  id v173;
  id v174;
  objc_class *v175;
  char *v176;
  id v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint8_t *v181;
  os_log_t v182;
  int v183;
  int v184;
  char *v185;
  char *v186;
  uint64_t v187;
  __int128 v188;
  uint8_t *v189;
  id v190;
  objc_super v191;
  objc_super v192;
  objc_super v193;
  objc_super v194;
  objc_super v195;
  uint64_t v196;
  uint64_t v197[2];

  v2 = sub_21EB02300();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v179 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v179 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint8_t *)&v179 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v189 = (uint8_t *)&v179 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t)&v179 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v179 - v21;
  v23 = 0;
  if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) == 0)
    return (id *)v23;
  v24 = objc_msgSend(a1, sel_isiCloudDriveProvider);
  v190 = a1;
  if (v24)
  {
    v25 = objc_msgSend(a1, sel_isUsingFPFS);
    if ((_DWORD)v25)
    {
      if (qword_2540A69F8 != -1)
        v25 = (id)swift_once();
      v26 = MEMORY[0x24BDAC7A8](v25);
      *(&v179 - 2) = (uint64_t)a1;
      MEMORY[0x24BDAC7A8](v26);
      *(&v179 - 4) = (uint64_t)sub_21EA61538;
      *(&v179 - 3) = v27;
      *(&v179 - 2) = v28;
      v30 = v29;
      __swift_instantiateConcreteTypeFromMangledName(qword_2540A6A18);
      sub_21EB02F6C();

      v31 = v190;
      v23 = (char *)v197[0];
      if (!v197[0])
      {
        v32 = objc_msgSend((id)objc_opt_self(), sel_shared);
        objc_msgSend(v32, sel_startIfNeeded);

        v33 = objc_allocWithZone((Class)type metadata accessor for DOCICloudRootNode());
        return sub_21EAFCDB0(v31);
      }
      return (id *)v23;
    }
  }
  v187 = (uint64_t)v9;
  *(_QWORD *)&v188 = v12;
  v34 = (void *)objc_opt_self();
  v35 = objc_msgSend(v34, sel_dsEnumerationLocal);
  v36 = objc_msgSend(v35, sel_isEnabled);

  if (v36)
  {
    v185 = v6;
    v37 = v14;
    v38 = v2;
    v39 = objc_msgSend(v190, sel_providerID);
    v40 = sub_21EB02B88();
    v42 = v41;

    if (v40 == sub_21EB02B88() && v42 == v43)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v44 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v38;
    v14 = v37;
    v6 = v185;
    if ((v44 & 1) != 0)
    {
LABEL_13:
      v45 = (void *)objc_opt_self();
      v23 = (char *)objc_msgSend(v45, sel_currentSharedInstance);
      if (!v23)
      {
        v46 = v190;
        v47 = (id)DOCLocalizedDisplayName();
        if (!v47)
        {
          sub_21EB02B88();
          v47 = (id)sub_21EB02B58();
          swift_bridgeObjectRelease();
        }
        v23 = (char *)objc_msgSend(v45, sel_sharedInstanceWithDisplayName_domain_, v47, v46);

      }
      return (id *)v23;
    }
  }
  v48 = objc_msgSend(v34, sel_dsEnumerationUSB);
  v49 = objc_msgSend(v48, sel_isEnabled);

  if (v49)
  {
    v50 = objc_msgSend(v190, sel_providerID);
    v51 = sub_21EB02B88();
    v53 = v52;

    if (v51 == sub_21EB02B88() && v53 == v54)
    {
      swift_bridgeObjectRelease_n();
      v55 = v190;
      objc_msgSend(v190, sel_isUsingFPFS);
      LODWORD(v56) = 1;
LABEL_46:
      if (qword_255469BE8 != -1)
LABEL_87:
        swift_once();
      v75 = sub_21EB0263C();
      v76 = __swift_project_value_buffer(v75, (uint64_t)static Logger.Enumeration);
      v77 = v55;
      v185 = (char *)v76;
      v78 = sub_21EB02624();
      v184 = sub_21EB02EDC();
      v79 = os_log_type_enabled(v78, (os_log_type_t)v184);
      v80 = &selRef_strokeEnd;
      v183 = (int)v56;
      v186 = (char *)v2;
      if (v79)
      {
        v182 = v78;
        v81 = swift_slowAlloc();
        v180 = swift_slowAlloc();
        v197[0] = v180;
        *(_DWORD *)v81 = 136315394;
        v181 = (uint8_t *)(v81 + 4);
        v82 = objc_msgSend(v77, sel_identifier);
        v83 = sub_21EB02B88();
        v85 = v84;

        v86 = v186;
        v196 = sub_21EA591E4(v83, v85, v197);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        v181 = (uint8_t *)v81;
        *(_WORD *)(v81 + 12) = 2080;
        v87 = objc_msgSend(v77, sel_storageURLs);
        v88 = sub_21EB02CF0();

        if (*(_QWORD *)(v88 + 16))
        {
          (*(void (**)(char *, unint64_t, char *))(v3 + 16))(v22, v88 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v86);
          v89 = 0;
        }
        else
        {
          v89 = 1;
        }
        v105 = v184;
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v3 + 56))(v22, v89, 1, v86);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, char *))(v3 + 48))(v22, 1, v86) == 1)
        {
          sub_21EA7C4E4((uint64_t)v22);
          v106 = 0xE300000000000000;
          v107 = 4271950;
        }
        else
        {
          v108 = v86;
          v107 = sub_21EB02288();
          v106 = v109;
          (*(void (**)(char *, char *))(v3 + 8))(v22, v108);
        }
        v110 = v181;
        v196 = sub_21EA591E4(v107, v106, v197);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        v111 = v105;
        v112 = v182;
        _os_log_impl(&dword_21EA4C000, v182, v111, "Creating DOCRootNode from FPFS domain '%s' first storageURL: '%s'", v110, 0x16u);
        v113 = v180;
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v113, -1, -1);
        MEMORY[0x2207B6A18](v110, -1, -1);

        v2 = (uint64_t)v186;
        v80 = &selRef_strokeEnd;
      }
      else
      {

      }
      v114 = objc_msgSend(v77, v80[282]);
      v115 = sub_21EB02CF0();

      if (*(_QWORD *)(v115 + 16))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v20, v115 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v2);
        v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
        v116(v20, 0, 1, v2);
      }
      else
      {
        v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
        v116(v20, 1, 1, v2);
      }
      v117 = v188;
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v20, 1, v2) == 1)
      {
        sub_21EA7C4E4(v20);
        v118 = v77;
        v119 = sub_21EB02624();
        v120 = sub_21EB02EE8();
        if (!os_log_type_enabled(v119, v120))
          goto LABEL_78;
        v121 = (uint8_t *)swift_slowAlloc();
        v122 = swift_slowAlloc();
        v197[0] = v122;
        *(_DWORD *)v121 = 136315138;
        v123 = objc_msgSend(v118, sel_identifier);
        v124 = sub_21EB02B88();
        v126 = v125;

        v196 = sub_21EA591E4(v124, v126, v197);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        v127 = "Could not create rootNode becuase storageURLs.first is nil for providerDomain '%s'";
LABEL_68:
        _os_log_impl(&dword_21EA4C000, v119, v120, v127, v121, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v122, -1, -1);
        MEMORY[0x2207B6A18](v121, -1, -1);

        return 0;
      }
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v3 + 32))(v14, v20, v2);
      v128 = v2;
      v129 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v3 + 16);
      v129(v117, v14, v128);
      sub_21EA579D4(0, (unint64_t *)&unk_2540A6EA0);
      v130 = v189;
      v129((uint64_t)v189, (uint8_t *)v117, v128);
      v116((uint64_t)v130, 0, 1, v128);
      v131 = v77;
      v20 = v117;
      v132 = static FINode.docNode(from:)((uint64_t)v130);
      sub_21EA7C4E4((uint64_t)v130);
      if (v132)
      {
        v133 = (objc_class *)type metadata accessor for DOCRootNode();
        v134 = (char *)objc_allocWithZone(v133);
        *(_QWORD *)&v134[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
        v191.receiver = v134;
        v191.super_class = v133;
        v23 = (char *)objc_msgSendSuper2(&v191, sel_initWithSubject_, v132);

        v135 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
        *(_QWORD *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v131;

        v136 = *(void (**)(uint64_t, char *))(v3 + 8);
        v137 = v186;
        v136(v20, v186);
        v136((uint64_t)v14, v137);
        return (id *)v23;
      }

      v138 = *(void (**)(uint64_t, char *))(v3 + 8);
      v22 = v186;
      v138(v20, v186);
      if ((v183 & 1) != 0)
      {
        v139 = v187;
        v189 = v14;
        v129(v187, v14, (uint64_t)v22);
        v140 = sub_21EB02624();
        v141 = sub_21EB02F00();
        if (os_log_type_enabled(v140, v141))
        {
          v142 = swift_slowAlloc();
          v190 = v138;
          v143 = v139;
          v144 = (uint8_t *)v142;
          v145 = swift_slowAlloc();
          v197[0] = v145;
          *(_DWORD *)v144 = 136315138;
          sub_21EA7C524();
          v146 = sub_21EB03488();
          v196 = sub_21EA591E4(v146, v147, v197);
          sub_21EB03134();
          swift_bridgeObjectRelease();
          v148 = v143;
          v138 = (void (*)(uint64_t, char *))v190;
          ((void (*)(uint64_t, char *))v190)(v148, v22);
          _os_log_impl(&dword_21EA4C000, v140, v141, "Could not create node for USB mounted at %s, creating encrypted volume node instead", v144, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2207B6A18](v145, -1, -1);
          MEMORY[0x2207B6A18](v144, -1, -1);
        }
        else
        {
          v138(v139, v22);
        }

        v164 = (objc_class *)type metadata accessor for DOCEncryptedVolumeNode();
        v165 = (char *)objc_allocWithZone(v164);
        v166 = OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_needsAuthNode;
        *(_QWORD *)&v165[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_needsAuthNode] = 0;
        *(_QWORD *)&v165[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain] = v131;
        v167 = (objc_class *)type metadata accessor for DOCNeedsAuthenticationNode();
        v168 = (char *)objc_allocWithZone(v167);
        *(_QWORD *)&v168[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCNeedsAuthenticationNode_domain] = v131;
        v194.receiver = v168;
        v194.super_class = v167;
        v169 = v131;
        v170 = v165;
        v171 = objc_msgSendSuper2(&v194, sel_init);
        v172 = *(void **)&v165[v166];
        *(_QWORD *)&v165[v166] = v171;
        v173 = v171;

        v193.receiver = v170;
        v193.super_class = v164;
        v174 = objc_msgSendSuper2(&v193, sel_initWithSubject_, v173);

        v175 = (objc_class *)type metadata accessor for DOCRootNode();
        v176 = (char *)objc_allocWithZone(v175);
        *(_QWORD *)&v176[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
        v192.receiver = v176;
        v192.super_class = v175;
        v177 = v169;
        v23 = (char *)objc_msgSendSuper2(&v192, sel_initWithSubject_, v174);

        v178 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
        *(_QWORD *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v177;

        v138((uint64_t)v189, v22);
        return (id *)v23;
      }
      v129((uint64_t)v6, v14, (uint64_t)v22);
      v155 = sub_21EB02624();
      v156 = sub_21EB02F00();
      v2 = v156;
      if (os_log_type_enabled(v155, v156))
      {
        v157 = (uint8_t *)swift_slowAlloc();
        v158 = swift_slowAlloc();
        v189 = v14;
        v159 = v158;
        v197[0] = v158;
        v160 = v6;
        *(_DWORD *)v157 = 136315138;
        v6 = (char *)(v157 + 12);
        v20 = (uint64_t)(v157 + 4);
        sub_21EA7C524();
        v161 = sub_21EB03488();
        v196 = sub_21EA591E4(v161, v162, v197);
        sub_21EB03134();
        swift_bridgeObjectRelease();
        v138((uint64_t)v160, v22);
        _os_log_impl(&dword_21EA4C000, v155, (os_log_type_t)v2, "Could not create rootNode for FPFS %s, going to fallback to safeDomainNode", v157, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v159, -1, -1);
        MEMORY[0x2207B6A18](v157, -1, -1);

        v163 = v189;
      }
      else
      {

        v138((uint64_t)v6, v22);
        v163 = v14;
      }
      v138((uint64_t)v163, v22);
      v55 = v190;
      goto LABEL_25;
    }
    LODWORD(v56) = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v56) = 0;
  }
  v55 = v190;
  if ((objc_msgSend(v190, sel_isUsingFPFS) & 1) != 0 || (v56 & 1) != 0)
    goto LABEL_46;
LABEL_25:
  v3 = objc_opt_self();
  v57 = 0;
  v56 = &selRef_strokeEnd;
  *(_QWORD *)&v58 = 136315394;
  v188 = v58;
  v187 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v57)
    {
      if (qword_255469BE8 != -1)
        swift_once();
      v59 = sub_21EB0263C();
      __swift_project_value_buffer(v59, (uint64_t)static Logger.Enumeration);
      v60 = v55;
      v61 = sub_21EB02624();
      v62 = sub_21EB02EDC();
      v20 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        v6 = (char *)swift_slowAlloc();
        v189 = (uint8_t *)swift_slowAlloc();
        v197[0] = (uint64_t)v189;
        *(_DWORD *)v6 = v188;
        v22 = (char *)objc_msgSend(v60, sel_identifier);
        v63 = v56;
        v64 = v3;
        v65 = sub_21EB02B88();
        v67 = v66;

        v68 = v65;
        v3 = v64;
        v56 = v63;
        *(_QWORD *)(v6 + 4) = sub_21EA591E4(v68, v67, v197);

        v55 = v190;
        swift_bridgeObjectRelease();
        *((_WORD *)v6 + 6) = 2048;
        *(_QWORD *)(v6 + 14) = v57;
        _os_log_impl(&dword_21EA4C000, v61, (os_log_type_t)v20, "Retrying because we did not find FINode for FPv2 domain '%s': %ld", (uint8_t *)v6, 0x16u);
        v2 = (uint64_t)v189;
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v2, -1, -1);
        MEMORY[0x2207B6A18](v6, -1, -1);

      }
      else
      {

      }
      objc_msgSend((id)objc_opt_self(), sel_sleepForTimeInterval_, 0.001);
    }
    v14 = (uint8_t *)objc_msgSend((id)v3, v56[292]);
    v69 = (char *)-[uint8_t iteratorWithOptions:](v14, sel_iteratorWithOptions_, 262148);
    if (v69)
      break;

    if (v57 == 1000)
      goto LABEL_74;
LABEL_43:
    if (__OFADD__(v57++, 1))
    {
      __break(1u);
      goto LABEL_87;
    }
  }
  v6 = v69;
  v70 = objc_msgSend(v69, sel_first);
  if (v70)
  {
    v71 = v70;
    while (1)
    {
      v20 = (uint64_t)v71;
      v72 = (char *)objc_msgSend((id)v20, sel_fpDomain);
      if (v72)
      {
        v22 = v72;
        sub_21EA579D4(0, &qword_25546A2B8);
        v2 = (uint64_t)v55;
        v73 = sub_21EB0308C();

        if ((v73 & 1) != 0)
          break;
      }
      v71 = objc_msgSend((id)swift_unknownObjectRetain(), sel_next);
      swift_unknownObjectRelease();

      if (!v71)
        goto LABEL_40;
    }
    if (qword_255469BE8 != -1)
      swift_once();
    v90 = sub_21EB0263C();
    __swift_project_value_buffer(v90, (uint64_t)static Logger.Enumeration);
    v91 = (id)v2;
    v92 = sub_21EB02624();
    v93 = sub_21EB02EDC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v190 = (id)swift_slowAlloc();
      v197[0] = (uint64_t)v190;
      v189 = v94;
      *(_DWORD *)v94 = 136315138;
      *(_QWORD *)&v188 = v94 + 4;
      v95 = objc_msgSend(v91, sel_identifier);
      v96 = sub_21EB02B88();
      v98 = v97;

      v196 = sub_21EA591E4(v96, v98, v197);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      v99 = v189;
      _os_log_impl(&dword_21EA4C000, v92, v93, "Found FINode for FPv2 domain '%s'", v189, 0xCu);
      v100 = v190;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v100, -1, -1);
      MEMORY[0x2207B6A18](v99, -1, -1);

    }
    else
    {

    }
    v101 = (objc_class *)type metadata accessor for DOCRootNode();
    v102 = (char *)objc_allocWithZone(v101);
    *(_QWORD *)&v102[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
    v195.receiver = v102;
    v195.super_class = v101;
    v103 = v91;
    v23 = (char *)objc_msgSendSuper2(&v195, sel_initWithSubject_, v20);

    v104 = *(void **)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
    *(_QWORD *)&v23[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = v103;

    swift_unknownObjectRelease();
    return (id *)v23;
  }
LABEL_40:

  swift_unknownObjectRelease();
  if (v57 != 1000)
    goto LABEL_43;
LABEL_74:
  if (qword_255469BE8 != -1)
    swift_once();
  v149 = sub_21EB0263C();
  __swift_project_value_buffer(v149, (uint64_t)static Logger.Enumeration);
  v118 = v55;
  v119 = sub_21EB02624();
  v120 = sub_21EB02EDC();
  if (os_log_type_enabled(v119, v120))
  {
    v121 = (uint8_t *)swift_slowAlloc();
    v122 = swift_slowAlloc();
    v197[0] = v122;
    *(_DWORD *)v121 = 136315138;
    v150 = objc_msgSend(v118, sel_identifier);
    v151 = sub_21EB02B88();
    v153 = v152;

    v196 = sub_21EA591E4(v151, v153, v197);
    sub_21EB03134();

    swift_bridgeObjectRelease();
    v127 = "Did not find FINode for FPv2 domain '%s'";
    goto LABEL_68;
  }
LABEL_78:

  return 0;
}

uint64_t type metadata accessor for DOCUnicode()
{
  return objc_opt_self();
}

uint64_t DOCUnicode.rawValue.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id sub_21EA63518()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 10911970;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.horizontalEllipsis = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.horizontalEllipsis.unsafeMutableAddressor()
{
  if (qword_2540A6658 != -1)
    swift_once();
  return &static DOCUnicode.horizontalEllipsis;
}

id sub_21EA635BC()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 41154;
  *((_QWORD *)v2 + 1) = 0xA200000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.nonBreakingSpace = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.nonBreakingSpace.unsafeMutableAddressor()
{
  if (qword_255469A80 != -1)
    swift_once();
  return &static DOCUnicode.nonBreakingSpace;
}

uint64_t type metadata accessor for DOCCollaborationHighlightManager()
{
  return objc_opt_self();
}

char *sub_21EA6369C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v1 = sub_21EB02F48();
  v16 = *(_QWORD *)(v1 - 8);
  v17 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02F30();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter;
  v8 = objc_allocWithZone(MEMORY[0x24BDE9768]);
  v9 = v0;
  *(_QWORD *)&v0[v7] = objc_msgSend(v8, sel_init);
  v10 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), (SEL)&selRef_currentDevice);
  v11 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_fetchQueue;
  sub_21EA5D1AC();
  sub_21EB02A50();
  v19 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v3, *MEMORY[0x24BEE5750], v17);
  *(_QWORD *)&v9[v11] = sub_21EB02F84();
  *(_QWORD *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_pendingIdentifiersToNotify] = MEMORY[0x24BEE4B08];

  v12 = (objc_class *)type metadata accessor for DOCCollaborationHighlightManager();
  v18.receiver = v9;
  v18.super_class = v12;
  v13 = (char *)objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter], sel_setDelegate_, v13);
  return v13;
}

id sub_21EA63918()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCCollaborationHighlightManager()), sel_init);
  static DOCCollaborationHighlightManager.shared = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for DOCOperationManager()
{
  return objc_opt_self();
}

uint64_t sub_21EA63964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_21EB02F30();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v1);
  v3 = sub_21EB02F48();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v7);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  sub_21EB02A50();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5758], v3);
  v8 = MEMORY[0x24BEE4AF8];
  v10[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v2, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  *(_QWORD *)(v0 + 16) = sub_21EB02F84();
  *(_QWORD *)(v0 + 24) = v8;
  return v0;
}

uint64_t type metadata accessor for DOCAnalyticsManager()
{
  return objc_opt_self();
}

id sub_21EA63B74()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  objc_class *ObjectType;
  objc_super v17;
  uint64_t v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v15 = sub_21EB02F48();
  v1 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02F30();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_bundleVersionCache] = MEMORY[0x24BEE4B00];
  v14 = OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue;
  v13[1] = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v7 = v0;
  sub_21EB02A38();
  v18 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v15);
  *(_QWORD *)&v0[v14] = sub_21EB02F84();

  v17.receiver = v7;
  v17.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v17, sel_init);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v10, sel_tagsDidChangeWithNotification_, CFSTR("DOCTagEditorTagsDidChangeNotification"), 0);

  return v10;
}

void sub_21EA63E00()
{
  uint64_t v0;

  sub_21EA63EDC((_QWORD *)(v0 + 16));
}

uint64_t sub_21EA63E0C()
{
  uint64_t v0;

  return sub_21EA63E18((_QWORD *)(v0 + 16), *(void **)(v0 + 56));
}

uint64_t sub_21EA63E18(_QWORD *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  v5 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v6 = v5();
  swift_release();
  if (a2 && v6)
  {
    v7 = a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_21EA5BC28((uint64_t)v7, 0x6556656C646E7562, 0xED00006E6F697372, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_21EA63EDC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __int128 aBlock;
  id (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (v5)
  {
    v6 = sub_21EA4FE64(v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  sub_21EA5F908((uint64_t)a1, (uint64_t)&aBlock);
  v7 = swift_allocObject();
  sub_21EA5F94C(&aBlock, v7 + 16);
  *(_QWORD *)(v7 + 56) = v6;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11 = v6;
  v10(v8, v9);
  v12 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v32 = sub_21EA63E0C;
  v33 = v7;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v30 = sub_21EA5E750;
  v31 = &block_descriptor_6_3;
  v13 = _Block_copy(&aBlock);
  sub_21EB01F10();
  swift_release();
  v14 = AnalyticsSendEventLazy();
  _Block_release(v13);

  if (qword_255469BD0 != -1)
    swift_once();
  v15 = sub_21EB0263C();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)a1, (uint64_t)&aBlock);
  v16 = sub_21EB02624();
  v17 = sub_21EB02EDC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v27 = v11;
    v28 = v26;
    *(_DWORD *)v18 = 136315650;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, &v28);
    sub_21EB03134();
    *(_WORD *)(v18 + 12) = 2080;
    v19 = v14;
    v20 = v31;
    v21 = v32;
    __swift_project_boxed_opaque_existential_0(&aBlock, (uint64_t)v31);
    v22 = (*((uint64_t (**)(void *, uint64_t (*)()))v21 + 1))(v20, v21);
    sub_21EA591E4(v22, v23, &v28);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
    *(_WORD *)(v18 + 22) = 2080;
    if (v19)
      v24 = 0x6564656563637573;
    else
      v24 = 0x64656C696166;
    if (v19)
      v25 = 0xE900000000000064;
    else
      v25 = 0xE600000000000000;
    sub_21EA591E4(v24, v25, &v28);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v16, v17, "%s: Tracking event %s %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v26, -1, -1);
    MEMORY[0x2207B6A18](v18, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

    __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  }

}

uint64_t sub_21EA642A0()
{
  uint64_t v0;

  return sub_21EA642AC(*(char **)(v0 + 16), v0 + 24);
}

uint64_t sub_21EA642AC(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  _QWORD v17[3];
  _QWORD aBlock[6];
  __int128 v19[2];

  v4 = sub_21EB02A20();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB02A5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables19DOCAnalyticsManager_eventsQueue];
  sub_21EA5F908(a2, (uint64_t)v19);
  v13 = swift_allocObject();
  sub_21EA5F94C(v19, v13 + 16);
  *(_QWORD *)(v13 + 56) = a1;
  aBlock[4] = sub_21EA63E00;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_10;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  sub_21EB02A44();
  v17[2] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_21EA644B4(uint64_t a1, void *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[5];

  v24[3] = &type metadata for DOCAnalyticsActionEvent;
  v24[4] = &off_24E329318;
  v4 = swift_allocObject();
  v24[0] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 47) = *(_QWORD *)(a1 + 31);
  sub_21EA5FB24(a1);
  if (qword_255469BD0 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)v24, (uint64_t)aBlock);
  v7 = sub_21EB02624();
  v8 = sub_21EB02EDC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v10;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EA591E4(v12, v13, (uint64_t *)v23);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_21EA4C000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v10, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  v14 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_21EA5F908((uint64_t)v24, (uint64_t)v23);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_21EA5F94C(v23, v15 + 24);
  v21 = sub_21EA6429C;
  v22 = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v20 = &block_descriptor_50;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

id sub_21EA647C8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCAnalyticsManager()), sel_init);
  static DOCAnalyticsManager.shared = (uint64_t)result;
  return result;
}

uint64_t *DOCAnalyticsManager.shared.unsafeMutableAddressor()
{
  if (qword_2540A6550 != -1)
    swift_once();
  return &static DOCAnalyticsManager.shared;
}

Swift::Void __swiftcall DOCAnalyticsManager.sendActionEvent(_:)(DocumentManagerExecutables::DOCAnalyticsActionEvent *a1)
{
  void *v1;

  sub_21EA5FB24((uint64_t)a1);
  sub_21EA644B4((uint64_t)a1, v1);
  sub_21EA5FAF0((uint64_t)a1);
}

uint64_t sub_21EA64864(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate);
}

uint64_t UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469CB0, (uint64_t)static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate);
}

uint64_t sub_21EA648A4(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docOfficeOpenXMLMacroEnabledWordProcessing);
}

uint64_t UTType.docOfficeOpenXMLMacroEnabledWordProcessing.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469CA0, (uint64_t)static UTType.docOfficeOpenXMLMacroEnabledWordProcessing);
}

uint64_t sub_21EA648E4(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docOfficeOpenXMLWordProcessingTemplate);
}

uint64_t UTType.docOfficeOpenXMLWordProcessingTemplate.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469CA8, (uint64_t)static UTType.docOfficeOpenXMLWordProcessingTemplate);
}

uint64_t sub_21EA64924(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docMSOfficeWordProcessingTemplate);
}

uint64_t UTType.docMSOfficeWordProcessingTemplate.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469C88, (uint64_t)static UTType.docMSOfficeWordProcessingTemplate);
}

uint64_t sub_21EA64964(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docOfficeOpenXMLWordProcessing);
}

uint64_t UTType.docOfficeOpenXMLWordProcessing.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469C98, (uint64_t)static UTType.docOfficeOpenXMLWordProcessing);
}

uint64_t sub_21EA649A4(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docMSOfficeXMLWordProcessing);
}

uint64_t UTType.docMSOfficeXMLWordProcessing.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469C90, (uint64_t)static UTType.docMSOfficeXMLWordProcessing);
}

uint64_t sub_21EA649E4(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docMSOfficeWordProcessing);
}

uint64_t UTType.docMSOfficeWordProcessing.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469C80, (uint64_t)static UTType.docMSOfficeWordProcessing);
}

uint64_t sub_21EA64A24(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_21EB025DC();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t sub_21EA64A64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB025DC();
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_21EB025E8();
  v8 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  __break(1u);
  return result;
}

uint64_t sub_21EA64B40(uint64_t a1)
{
  return sub_21EA64A64(a1, static UTType.docWatchface);
}

uint64_t UTType.docWatchface.unsafeMutableAddressor()
{
  return sub_21EA64A24(&qword_255469C68, (uint64_t)static UTType.docWatchface);
}

uint64_t UTType.isFolderUTI.getter()
{
  char v0;

  sub_21EB0248C();
  v0 = sub_21EA51494();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

double CGFloat.init(_:roundedBy:inScale:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  int v11;
  double v12;
  double v14;
  double v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  double v18;

  v6 = sub_21EB03494();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 * a3;
  v18 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == *MEMORY[0x24BEE38D0])
  {
    v12 = round(v10);
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    return v12 / a3;
  }
  if (v11 == *MEMORY[0x24BEE38C8])
  {
    v12 = rint(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BEE38E0])
  {
    v12 = ceil(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BEE38E8])
  {
    v12 = floor(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BEE38B8])
  {
    v12 = trunc(v10);
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BEE38C0])
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v14 = ceil(v10);
    v15 = floor(v10);
    if (v10 < 0.0)
      v12 = v15;
    else
      v12 = v14;
  }
  else
  {
    sub_21EB02DF8();
    v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v16(a1, v6);
    v16((uint64_t)v9, v6);
    v12 = v18;
  }
  return v12 / a3;
}

uint64_t DOCVibrancyFeatureEnabled()
{
  return objc_msgSend(MEMORY[0x24BEBDB00], "swift_docVibrancyFeatureEnabled");
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

id OUTLINED_FUNCTION_2(id a1)
{
  return objc_retainAutorelease(a1);
}

DOCTagCheckableDotView *dotViewForColor(uint64_t a1, uint64_t a2)
{
  DOCTagCheckableDotView *v4;

  v4 = objc_alloc_init(DOCTagCheckableDotView);
  -[DOCTagCheckableDotView setTranslatesAutoresizingMaskIntoConstraints:](v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  -[DOCTagCheckableDotView setTagColor:](v4, "setTagColor:", a1);
  -[DOCTagCheckableDotView setChecked:](v4, "setChecked:", a2);
  return v4;
}

uint64_t DOCSpotlightGPSInfoFromCGImagePropertyDictionary(void *a1, double *a2, double *a3)
{
  id v5;
  void *v6;
  void *v7;
  CFComparisonResult v8;
  double v9;
  uint64_t v10;
  void *v11;
  void *v12;
  double valuePtr;
  double v15;
  void *value;

  v5 = a1;
  v6 = v5;
  if (!a3)
  {
    objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "BOOL DOCSpotlightGPSInfoFromCGImagePropertyDictionary(NSDictionary *__strong _Nonnull, double * _Nonnull, double * _Nonnull)");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("DOCLocalizedMetadataUtilities.m"), 17, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("oLongitude != NULL"));
LABEL_18:

LABEL_19:
    v10 = 0;
    goto LABEL_20;
  }
  if (!a2)
  {
    objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "BOOL DOCSpotlightGPSInfoFromCGImagePropertyDictionary(NSDictionary *__strong _Nonnull, double * _Nonnull, double * _Nonnull)");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("DOCLocalizedMetadataUtilities.m"), 20, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("oLatitude != NULL"));
    goto LABEL_18;
  }
  objc_msgSend(v5, "objectForKeyedSubscript:", *MEMORY[0x24BDD95D0]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
    goto LABEL_19;
  v15 = 0.0;
  value = 0;
  valuePtr = 0.0;
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x24BDD95D8], (const void **)&value))
    goto LABEL_19;
  CFNumberGetValue((CFNumberRef)value, kCFNumberDoubleType, &valuePtr);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x24BDD95E0], (const void **)&value)
    && CFStringCompare((CFStringRef)value, CFSTR("S"), 1uLL) == kCFCompareEqualTo
    && valuePtr > 0.0)
  {
    valuePtr = -valuePtr;
  }
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x24BDD95E8], (const void **)&value))
    goto LABEL_19;
  CFNumberGetValue((CFNumberRef)value, kCFNumberDoubleType, &v15);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)v7, (const void *)*MEMORY[0x24BDD95F0], (const void **)&value))
  {
    v8 = CFStringCompare((CFStringRef)value, CFSTR("W"), 1uLL);
    v9 = v15;
    if (v8 == kCFCompareEqualTo && v15 > 0.0)
    {
      v9 = -v15;
      v15 = -v15;
    }
  }
  else
  {
    v9 = v15;
  }
  *a3 = v9;
  *a2 = valuePtr;
  v10 = 1;
LABEL_20:

  return v10;
}

id DOCLocalizedMetadataStringForLatitude(double a1)
{
  return _DOCDisplayStringForLatLongValue(1, a1);
}

id _DOCDisplayStringForLatLongValue(int a1, double a2)
{
  void *v4;
  void *v5;
  const __CFString *v6;
  const __CFString *v7;
  void *v8;
  double v9;
  int v10;
  double v11;
  unsigned int v12;
  double v13;
  double v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;

  _DocumentManagerBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (a1)
  {
    if (a2 < 0.0)
    {
      v6 = CFSTR("Metadata GPSLatLon Component [South]");
      v7 = CFSTR("S");
    }
    else
    {
      v6 = CFSTR("Metadata GPSLatLon Component [North]");
      v7 = CFSTR("N");
    }
  }
  else if (a2 < 0.0)
  {
    v6 = CFSTR("Metadata GPSLatLon Component [West]");
    v7 = CFSTR("W");
  }
  else
  {
    v6 = CFSTR("Metadata GPSLatLon Component [East]");
    v7 = CFSTR("E");
  }
  objc_msgSend(v4, "localizedStringForKey:value:table:", v6, v7, CFSTR("Localizable"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = -a2;
  if (a2 >= 0.0)
    v9 = a2;
  v10 = (int)v9;
  v11 = (v9 - (double)(int)v9) * 60.0;
  v12 = (int)v11;
  v13 = ((double)(int)((v11 - (double)(int)v11) * 60.0 * 1000.0) + 0.5) / 1000.0;
  if (v13 == 60.0)
    v14 = 0.0;
  else
    v14 = v13;
  if (v13 == 60.0)
    v15 = v12 + 1;
  else
    v15 = v12;
  v16 = v12 == 59 && v13 == 60.0;
  v17 = (v16 + v10);
  _DocumentManagerBundle();
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Metadata GPSLatLon Format"), CFSTR("%1$d° %2$d′ %3$.3f″ %4$@"), CFSTR("Localizable"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", v19, v17, v15, *(_QWORD *)&v14, v8);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  return v20;
}

id DOCLocalizedMetadataStringForLongitude(double a1)
{
  return _DOCDisplayStringForLatLongValue(0, a1);
}

id DOCLocalizedMetadataStringForWidthByHeight(double a1, double a2)
{
  void *v4;
  void *v5;
  void *v6;

  _DocumentManagerBundle();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("%1$d × %2$d"), CFSTR("%1$d × %2$d"), CFSTR("Localizable"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDD17C8], "localizedStringWithFormat:", v5, (int)a1, (int)a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id DOCLocalizedMetadataStringInMMSSForDuration(double a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_opt_new();
  objc_msgSend(v2, "setUnitsStyle:", 0);
  objc_msgSend(v2, "setAllowedUnits:", 192);
  objc_msgSend(v2, "setZeroFormattingBehavior:", 0x10000);
  objc_msgSend(v2, "stringFromTimeInterval:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id DOCLocalizedMetadataStringForExposureProgramNumber(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[8];
  _QWORD v22[10];

  v22[8] = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v21[0] = &unk_24E33E728;
    _DocumentManagerBundle();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Manual]"), CFSTR("Manual"), CFSTR("Localizable"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v19;
    v21[1] = &unk_24E33E740;
    _DocumentManagerBundle();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Normal]"), CFSTR("Normal"), CFSTR("Localizable"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v22[1] = v17;
    v21[2] = &unk_24E33E758;
    _DocumentManagerBundle();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("Exposure Program [AperturePriority]"), CFSTR("Aperture priority"), CFSTR("Localizable"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2] = v15;
    v21[3] = &unk_24E33E770;
    _DocumentManagerBundle();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("Exposure Program [ShutterPriority]"), CFSTR("Shutter priority"), CFSTR("Localizable"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v22[3] = v13;
    v21[4] = &unk_24E33E788;
    _DocumentManagerBundle();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Creative]"), CFSTR("Creative"), CFSTR("Localizable"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v22[4] = v3;
    v21[5] = &unk_24E33E7A0;
    _DocumentManagerBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Action]"), CFSTR("Action"), CFSTR("Localizable"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v22[5] = v5;
    v21[6] = &unk_24E33E7B8;
    _DocumentManagerBundle();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Portrait]"), CFSTR("Portrait"), CFSTR("Localizable"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v22[6] = v7;
    v21[7] = &unk_24E33E7D0;
    _DocumentManagerBundle();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("Exposure Program [Landscape]"), CFSTR("Landscape"), CFSTR("Localizable"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v22[7] = v9;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v22, v21, 8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "objectForKeyedSubscript:", v1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

id DOCLocalizedMetadataStringForMeteringModeNumber(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[8];
  _QWORD v22[10];

  v22[8] = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v21[0] = &unk_24E33E7E8;
    _DocumentManagerBundle();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Unknown]"), CFSTR("Unknown"), CFSTR("Localizable"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v19;
    v21[1] = &unk_24E33E728;
    _DocumentManagerBundle();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Average]"), CFSTR("Average"), CFSTR("Localizable"));
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v22[1] = v17;
    v21[2] = &unk_24E33E740;
    _DocumentManagerBundle();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("Metering Mode [CenterWeightedAverage]"), CFSTR("Center-weighted average"), CFSTR("Localizable"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v22[2] = v15;
    v21[3] = &unk_24E33E758;
    _DocumentManagerBundle();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Spot]"), CFSTR("Spot"), CFSTR("Localizable"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v22[3] = v13;
    v21[4] = &unk_24E33E770;
    _DocumentManagerBundle();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("Metering Mode [MultiSpot]"), CFSTR("Multi-spot"), CFSTR("Localizable"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v22[4] = v3;
    v21[5] = &unk_24E33E788;
    _DocumentManagerBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Pattern]"), CFSTR("Pattern"), CFSTR("Localizable"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v22[5] = v5;
    v21[6] = &unk_24E33E7A0;
    _DocumentManagerBundle();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Partial]"), CFSTR("Partial"), CFSTR("Localizable"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v22[6] = v7;
    v21[7] = &unk_24E33E800;
    _DocumentManagerBundle();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("Metering Mode [Other]"), CFSTR("Other"), CFSTR("Localizable"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v22[7] = v9;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v22, v21, 8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "objectForKeyedSubscript:", v1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

id DOCLocalizedMetadataStringForWhiteBalanceModeNumber(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[2];
  _QWORD v10[3];

  v10[2] = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v9[0] = &unk_24E33E7E8;
    _DocumentManagerBundle();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("WhiteBalance Mode [Auto]"), CFSTR("Auto"), CFSTR("Localizable"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v9[1] = &unk_24E33E728;
    v10[0] = v3;
    _DocumentManagerBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("WhiteBalance Mode [Manual]"), CFSTR("Manual"), CFSTR("Localizable"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v10[1] = v5;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v10, v9, 2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v6, "objectForKeyedSubscript:", v1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id DOCLocalizedMetadataYesNoStringForBool(int a1)
{
  void *v2;
  void *v3;
  const __CFString *v4;
  const __CFString *v5;
  void *v6;

  _DocumentManagerBundle();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (a1)
  {
    v4 = CFSTR("Metadata Boolean Value [YES]");
    v5 = CFSTR("YES");
  }
  else
  {
    v4 = CFSTR("Metadata Boolean Value [NO]");
    v5 = CFSTR("NO");
  }
  objc_msgSend(v2, "localizedStringForKey:value:table:", v4, v5, CFSTR("Localizable"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_21EA6D644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_21EA6F940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_21EA6FEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_21EA70144(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_21EA70250(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_21EA703FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_21EA7059C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_21EA706B4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_21EA720E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double DOCDefaultTagDimension()
{
  void *v0;
  double v1;
  double v2;
  void *v3;

  +[DOCTagAppearance pickerList](DOCTagAppearance, "pickerList");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "dotSize");
  v2 = v1;

  +[DOCTagRenderer shared](DOCTagRenderer, "shared");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "differentiateWithShapes"))
    v2 = v2 + 6.0;

  return v2;
}

void sub_21EA740C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id location)
{
  id *v47;

  objc_destroyWeak(v47);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

NSString *sub_21EA7554C()
{
  NSString *result;

  result = (NSString *)sub_21EB02B58();
  DOCNotificationDidUpdateSmartFolders = result;
  return result;
}

NSNotificationName *DOCNotificationDidUpdateSmartFolders.unsafeMutableAddressor()
{
  if (qword_255469A30 != -1)
    swift_once();
  return &DOCNotificationDidUpdateSmartFolders;
}

uint64_t DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for DOCSmartFolderInputFile();
  v9 = (char *)a5 + *(int *)(v8 + 20);
  v10 = sub_21EB025DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a3, v10);
  v11 = (char *)a5 + *(int *)(v8 + 24);
  v12 = sub_21EB02384();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a4, v12);
}

uint64_t type metadata accessor for DOCSmartFolderInputFile()
{
  uint64_t result;

  result = qword_255469E60;
  if (!qword_255469E60)
    return swift_getSingletonMetadata();
  return result;
}

id DOCSmartFolderManager.database.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
}

uint64_t variable initialization expression of DOCSmartFolderManager.currentUserActivity()
{
  return 0;
}

void *DOCSmartFolderManager.currentUserActivity.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCSmartFolderManager.currentUserActivity.setter(void *a1)
{
  sub_21EA757A4(a1, &OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
}

uint64_t (*DOCSmartFolderManager.currentUserActivity.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t variable initialization expression of DOCSmartFolderManager.defaultSaveLocationItemId()
{
  return 0;
}

void *DOCSmartFolderManager.defaultSaveLocationItemId.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCSmartFolderManager.defaultSaveLocationItemId.setter(void *a1)
{
  sub_21EA757A4(a1, &OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId);
}

void sub_21EA757A4(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

}

uint64_t (*DOCSmartFolderManager.defaultSaveLocationItemId.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_21EA75834()
{
  objc_class *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  id result;
  objc_super v7;

  v0 = (objc_class *)type metadata accessor for DOCSmartFolderManager();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId] = 0;
  v2 = objc_allocWithZone(MEMORY[0x24BE2DDC0]);
  v3 = v1;
  v4 = objc_msgSend(v2, sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = v4;
  v5 = v4;
  objc_msgSend(v5, sel_open);

  v7.receiver = v3;
  v7.super_class = v0;
  result = objc_msgSendSuper2(&v7, sel_init);
  static DOCSmartFolderManager.sharedManager = (uint64_t)result;
  return result;
}

id DOCSmartFolderManager.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21EA7923C(a1);

  return v4;
}

uint64_t *DOCSmartFolderManager.sharedManager.unsafeMutableAddressor()
{
  if (qword_255469A38 != -1)
    swift_once();
  return &static DOCSmartFolderManager.sharedManager;
}

id static DOCSmartFolderManager.sharedManager.getter()
{
  if (qword_255469A38 != -1)
    swift_once();
  return (id)static DOCSmartFolderManager.sharedManager;
}

id DOCSmartFolderManager.init(_:)(void *a1)
{
  id v2;

  v2 = sub_21EA7923C(a1);

  return v2;
}

id DOCSmartFolderManager.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database], sel_close);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSmartFolderManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCSmartFolderManager.refreshSmartFolders()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  NSString *v5;
  void *v6;
  _OWORD v7[2];

  v0 = sub_21EB02138();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_255469A30 != -1)
    swift_once();
  memset(v7, 0, sizeof(v7));
  v5 = DOCNotificationDidUpdateSmartFolders;
  sub_21EB02120();
  v6 = (void *)sub_21EB02108();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_postNotification_, v6);

}

void DOCSmartFolderManager.register(savedFile:in:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  NSString *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 aBlock;
  __int128 v41;
  uint64_t (*v42)(void *);
  uint64_t v43;

  v5 = sub_21EB02138();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DOCSmartFolderInputFile();
  v38 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v38 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v10 = objc_msgSend(a2, sel_providerDomainID);
  v11 = DOCProviderDomainIDIsRemovable();

  if ((v11 & 1) == 0)
  {
    v35 = v6;
    v36 = v5;
    v12 = objc_allocWithZone(MEMORY[0x24BE2DDC8]);
    v13 = a2;
    v37 = v2;
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v16 = (void *)sub_21EB02348();
    v17 = objc_msgSend(v12, sel_initWithFolder_type_value_lastUsedDate_frecency_, v14, 0, v15, v16, 1.0);

    v18 = v14;
    sub_21EB0248C();
    v19 = objc_allocWithZone(MEMORY[0x24BE2DDC8]);
    v20 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v21 = (void *)sub_21EB02348();
    v22 = v19;
    v23 = v37;
    v24 = objc_msgSend(v22, sel_initWithFolder_type_value_lastUsedDate_frecency_, v18, 1, v20, v21, 1.0);

    v25 = v17;
    v26 = *(void **)(v23 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
    sub_21EA79330(a1, (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    v27 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v28 = swift_allocObject();
    sub_21EA79424((uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27);
    v42 = sub_21EA79468;
    v43 = v28;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v41 = sub_21EA760C4;
    *((_QWORD *)&v41 + 1) = &block_descriptor;
    v29 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v26, sel_registerFilenameHit_fileTypeHit_smartScoreBlock_, v25, v24, v29);
    _Block_release(v29);
    v30 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_255469A30 != -1)
      swift_once();
    aBlock = 0u;
    v41 = 0u;
    v31 = DOCNotificationDidUpdateSmartFolders;
    v32 = v39;
    sub_21EB02120();
    v33 = (void *)sub_21EB02108();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v36);
    objc_msgSend(v30, sel_postNotification_, v33);

    sub_21EA790F8(v18);
  }
}

uint64_t sub_21EA75F8C(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;

  v1 = objc_msgSend(a1, sel_value);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (sub_21EB02BE8() <= 3)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v5 = sub_21EAFAD50(4);
  v7 = v6;
  swift_bridgeObjectRelease();
  LOBYTE(v5) = sub_21EAED010(v5, v7);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
    return swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v2;
  v8._object = v4;
  String.doc_editDistance(from:)(v8);
  sub_21EB02BE8();
  sub_21EB02BE8();
  return swift_bridgeObjectRelease();
}

double sub_21EA760C4(uint64_t a1, void *a2)
{
  double (*v3)(void);
  id v4;
  double v5;

  v3 = *(double (**)(void))(a1 + 32);
  sub_21EB01F10();
  v4 = a2;
  v5 = v3();
  swift_release();

  return v5;
}

uint64_t DOCSmartFolderManager.suggestions(for:configuration:managedPermission:)(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;

  v4 = v3;
  v8 = DOCSmartFolderLogHandle();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21EB07140;
  v10 = *a1;
  v11 = a1[1];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  type metadata accessor for DOCSmartFolderInputFile();
  swift_bridgeObjectRetain();
  v12 = sub_21EB024E0();
  *(_QWORD *)(v9 + 96) = sub_21EA579D4(0, &qword_255469CD8);
  *(_QWORD *)(v9 + 104) = sub_21EA794D8();
  *(_QWORD *)(v9 + 72) = v12;
  sub_21EB025F4();

  swift_bridgeObjectRelease();
  v13 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database), sel_previousHits);
  sub_21EA579D4(0, (unint64_t *)&unk_255469CE8);
  v14 = sub_21EB02CF0();

  v15 = sub_21EA79530(v14, a2, a3);
  swift_bridgeObjectRelease();
  v18 = (void *)sub_21EB02B58();
  sub_21EA798EC(v15, (void (*)(id, uint64_t))sub_21EA798E0);
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEE4AF8];

  return v16;
}

void sub_21EA76348(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  _BYTE v31[16];
  uint64_t v32;
  _BYTE *v33;

  v10 = sub_21EB02384();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21EB02378();
  v32 = a4;
  v33 = v13;
  v14 = sub_21EA76A58((void (*)(double *__return_ptr, double *, id *))sub_21EA7A6B4, 0.0, (uint64_t)v31, a2);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if (!(a2 >> 62))
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  if (!sub_21EB0341C())
    goto LABEL_14;
LABEL_3:
  v5 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v16 = (id)MEMORY[0x2207B5B3C](0, a2);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  v16 = *(id *)(a2 + 32);
LABEL_6:
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v17, sel_folderItem);

  v19 = objc_msgSend(v18, sel_displayName);
  v20 = sub_21EB02B88();
  v22 = v21;

  v23 = DOCSmartFolderLogHandle();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_21EB07140;
  v25 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v24 + 64) = v25;
  *(double *)(v24 + 32) = v14;
  *(_QWORD *)(v24 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v24 + 104) = sub_21EA5EA3C();
  *(_QWORD *)(v24 + 72) = v20;
  *(_QWORD *)(v24 + 80) = v22;
  sub_21EB025F4();

  swift_bridgeObjectRelease();
  if (*(double *)(a5 + 16) < v14)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      v26 = (id)MEMORY[0x2207B5B3C](0, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = *(id *)(a2 + 32);
    }
    v27 = objc_msgSend(v26, sel_folderItem);

    if (v27)
    {
      v28 = *(void **)a5;
      *(_QWORD *)a5 = a1;
      v29 = a1;

      v30 = *(void **)(a5 + 8);
      *(_QWORD *)(a5 + 8) = v27;

      *(double *)(a5 + 16) = v14;
    }
  }
}

double sub_21EA76614@<D0>(double *a1@<X0>, id *a2@<X1>, double *a3@<X8>)
{
  double v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  double v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  double v38;
  double v39;
  double result;
  id v41;
  uint64_t v42;
  double *v43;
  _QWORD v44[4];

  v4 = *a1;
  v5 = *a2;
  v6 = objc_msgSend(*a2, sel_type);
  v43 = a3;
  if (v6 == (id)1)
  {
    type metadata accessor for DOCSmartFolderInputFile();
    v7 = sub_21EB0248C();
    v9 = v8;
    v10 = objc_msgSend(v5, sel_value);
    v11 = sub_21EB02B88();
    v13 = v12;

    if (v7 == v11 && v9 == v13)
    {
      swift_bridgeObjectRelease_n();
      v16 = 1.0;
    }
    else
    {
      v15 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        v16 = 1.0;
      else
        v16 = 0.0;
    }
  }
  else
  {
    if (v6)
    {
      v41 = objc_msgSend(v5, sel_type);
      type metadata accessor for DOCSmartFolderHitType(0);
      v44[3] = v42;
      v44[0] = v41;
      doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(v44);
    }
    v17 = objc_msgSend(v5, sel_value);
    v18 = sub_21EB02B88();
    v20 = v19;

    if (sub_21EB02BE8() > 3
      && (swift_bridgeObjectRetain(),
          v21 = sub_21EAFAD50(4),
          v23 = v22,
          swift_bridgeObjectRelease(),
          LOBYTE(v23) = sub_21EAED010(v21, v23),
          swift_bridgeObjectRelease(),
          (v23 & 1) != 0))
    {
      v24._countAndFlagsBits = v18;
      v24._object = v20;
      v25 = (double)String.doc_editDistance(from:)(v24);
      v26 = sub_21EB02BE8();
      v27 = sub_21EB02BE8();
      swift_bridgeObjectRelease();
      if (v27 <= v26)
        v28 = v26;
      else
        v28 = v27;
      v29 = ((double)v28 - v25) / (double)v28;
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = 0.0;
    }
    if (v29 <= 0.5)
      v16 = 0.0;
    else
      v16 = v29;
  }
  v30 = DOCSmartFolderLogHandle();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_21EB07140;
  v32 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v31 + 64) = v32;
  *(double *)(v31 + 32) = v16;
  v33 = objc_msgSend(v5, sel_value);
  v34 = sub_21EB02B88();
  v36 = v35;

  *(_QWORD *)(v31 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v31 + 104) = sub_21EA5EA3C();
  *(_QWORD *)(v31 + 72) = v34;
  *(_QWORD *)(v31 + 80) = v36;
  sub_21EB025F4();

  swift_bridgeObjectRelease();
  v37 = (void *)sub_21EB02348();
  objc_msgSend(v5, sel_frecencyScoreAtDate_, v37);
  v39 = v38;

  result = v4 + v16 * v39;
  *v43 = result;
  return result;
}

double sub_21EA76A58(void (*a1)(double *__return_ptr, double *, id *), double a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  double v14;
  id v15;
  double v16;

  if (a4 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_21EB0341C())
  {
    v9 = 4;
    while (1)
    {
      v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207B5B3C](v9 - 4, a4) : *(id *)(a4 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v15 = v10;
      a1(&v14, &v16, &v15);
      if (v4)
      {
        swift_bridgeObjectRelease();

        return a2;
      }

      a2 = v14;
      v16 = v14;
      ++v9;
      if (v12 == v8)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return a2;
}

Swift::Void __swiftcall DOCSmartFolderManager.makeHostedActivityCurrent()()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  objc_msgSend(*v1, sel_becomeCurrent);
}

id DOCSmartFolderManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCSmartFolderManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void *sub_21EA76C50()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_21EA76C9C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_21EA76CEC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_21EA76D30()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity);
  swift_beginAccess();
  return objc_msgSend(*v1, sel_becomeCurrent);
}

void DOCSmartFolderManager.register(event:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  NSString *v29;
  char *v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;

  v2 = sub_21EB02138();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = DOCSmartFolderLogHandle();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21EB07140;
  v6 = objc_msgSend(a1, sel_folderItem);
  v7 = objc_msgSend(v6, sel_displayName);

  v8 = sub_21EB02B88();
  v10 = v9;

  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_21EA5EA3C();
  *(_QWORD *)(v5 + 64) = v12;
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  v13 = objc_msgSend(a1, sel_appBundleIdentifier);
  v14 = sub_21EB02B88();
  v16 = v15;

  *(_QWORD *)(v5 + 96) = v11;
  *(_QWORD *)(v5 + 104) = v12;
  *(_QWORD *)(v5 + 72) = v14;
  *(_QWORD *)(v5 + 80) = v16;
  sub_21EB025F4();

  swift_bridgeObjectRelease();
  v17 = objc_msgSend(a1, sel_folderItem);
  LOBYTE(v4) = objc_msgSend(v17, sel_isRootItem);

  if ((v4 & 1) != 0)
    return;
  v18 = objc_msgSend(a1, (SEL)&selRef_tagDotView + 3);
  v19 = objc_msgSend(v18, sel_providerDomainID);

  LOBYTE(v18) = DOCProviderDomainIDIsRemovable();
  if ((v18 & 1) != 0)
    return;
  v20 = objc_msgSend(a1, (SEL)&selRef_tagDotView + 3);
  v21 = objc_msgSend(v20, sel_itemIdentifier);

  v22 = (_QWORD *)(v36 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId);
  swift_beginAccess();
  if (!*v22)
  {

LABEL_9:
    objc_msgSend(*(id *)(v36 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database), sel_registerEvent_, a1);
    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    if (qword_255469A30 != -1)
      swift_once();
    v37 = 0u;
    v38 = 0u;
    v29 = DOCNotificationDidUpdateSmartFolders;
    v30 = v33;
    sub_21EB02120();
    v31 = (void *)sub_21EB02108();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v35);
    objc_msgSend(v28, sel_postNotification_, v31);

    v32 = objc_msgSend(a1, (SEL)&selRef_tagDotView + 3);
    sub_21EA790F8(v32);

    return;
  }
  v23 = sub_21EB02B88();
  v25 = v24;
  if (v23 == sub_21EB02B88() && v25 == v26)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v27 = sub_21EB034C4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
    goto LABEL_9;
}

void DOCSmartFolderManager.delete(hotFolder:for:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  NSString *v22;
  void *v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v6 = sub_21EB02138();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = DOCSmartFolderLogHandle();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_21EB07140;
  v11 = objc_msgSend(a1, sel_displayName);
  v12 = sub_21EB02B88();
  v14 = v13;

  v15 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v16 = sub_21EA5EA3C();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  *(_QWORD *)(v10 + 96) = v15;
  *(_QWORD *)(v10 + 104) = v16;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = a2;
  *(_QWORD *)(v10 + 80) = a3;
  swift_bridgeObjectRetain();
  sub_21EB025F4();

  swift_bridgeObjectRelease();
  v17 = *(void **)(v24[1] + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database);
  v18 = objc_msgSend(a1, sel_itemIdentifier);
  sub_21EB02B88();

  v19 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_21EB02B58();
  objc_msgSend(v17, sel_deleteFolderWithIdentifier_appBundleIdentifier_, v19, v20);

  v21 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_255469A30 != -1)
    swift_once();
  v27 = 0u;
  v28 = 0u;
  v22 = DOCNotificationDidUpdateSmartFolders;
  sub_21EB02120();
  v23 = (void *)sub_21EB02108();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  objc_msgSend(v21, sel_postNotification_, v23);

}

uint64_t variable initialization expression of DOCEncryptedVolumeNode.needsAuthNode()
{
  return 0;
}

uint64_t variable initialization expression of DOCRootNode.domain()
{
  return 0;
}

unint64_t variable initialization expression of DOCAnalyticsActionEvent.name()
{
  return 0xD000000000000032;
}

uint64_t variable initialization expression of DOCAnalyticsActionEvent.bundleID()
{
  return 0;
}

uint64_t variable initialization expression of DOCOperation._isFinished()
{
  return 0;
}

uint64_t variable initialization expression of DOCOperation._isExecuting()
{
  return 0;
}

uint64_t variable initialization expression of DOCOperation.finishedBlock()
{
  return 0;
}

uint64_t variable initialization expression of DOCSystemAlert.notification()
{
  return 0;
}

uint64_t variable initialization expression of DOCSystemAlert.source()
{
  return 0;
}

uint64_t variable initialization expression of SetGroupingModeIntent._groupingMode()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v0 = sub_21EB0206C();
  v27 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D58);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB0224C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_21EB02258();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D68);
  sub_21EB02B40();
  sub_21EB023E4();
  v16 = *MEMORY[0x24BDCD328];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, v16, v8);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v17(v11, v16, v8);
  v18 = v23;
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  v29 = 0;
  v19 = sub_21EB01E8C();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x24BDB6090], v28);
  sub_21EA79A7C();
  return sub_21EB01ED4();
}

id variable initialization expression of DOCCollaborationHighlightManager.highlightCenter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE9768]), sel_init);
}

id variable initialization expression of DOCCollaborationHighlightManager.collaborationIdentifierToHighlightCache()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE40]), sel_init);
}

uint64_t variable initialization expression of DOCCollaborationHighlightManager.fetchQueue()
{
  return sub_21EA78060((void (*)(uint64_t))MEMORY[0x24BEE54D0], 0xD000000000000042, 0x800000021EB0E860);
}

uint64_t variable initialization expression of DOCCollaborationHighlightManager.coalescingTimer()
{
  return 0;
}

uint64_t variable initialization expression of DOCCollaborationHighlightManager.pendingIdentifiersToNotify()
{
  return MEMORY[0x24BEE4B08];
}

id variable initialization expression of DOCChainOperation.operationQueue()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
}

double variable initialization expression of DOCChainOperation.latestOperationResult@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t variable initialization expression of DOCChainOperation.latestOperationError()
{
  return 0;
}

uint64_t variable initialization expression of DOCChainOperation.mode()
{
  return 0;
}

uint64_t variable initialization expression of DOCChainableOperation.chainOperation()
{
  return 0;
}

uint64_t variable initialization expression of DOCUTIDescriptorCollector.currentQuery()
{
  return 0;
}

uint64_t variable initialization expression of DOCUTIDescriptorCollector.utiDescriptors()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t variable initialization expression of DOCUTIDescriptorCollector.completionQueue()
{
  return sub_21EA78060((void (*)(uint64_t))MEMORY[0x24BEE54C8], 0xD000000000000041, 0x800000021EB0E8B0);
}

uint64_t variable initialization expression of DOCUTIDescriptorCollector.gatheringQueue()
{
  return sub_21EA78060((void (*)(uint64_t))MEMORY[0x24BEE54C8], 0xD000000000000040, 0x800000021EB0E900);
}

uint64_t variable initialization expression of DOCAnalyticsManager.bundleVersionCache()
{
  return MEMORY[0x24BEE4B00];
}

uint64_t variable initialization expression of DOCAnalyticsManager.eventsQueue()
{
  return sub_21EA78060((void (*)(uint64_t))MEMORY[0x24BEE54C0], 0xD00000000000002ELL, 0x800000021EB0E950);
}

unint64_t variable initialization expression of DOCAnalyticsSidebarTagSelectedEvent.name()
{
  return 0xD000000000000036;
}

uint64_t variable initialization expression of DOCAnalyticsSidebarTagSelectedEvent.bundleID()
{
  return 0;
}

double variable initialization expression of DOCAPIRateLimiter.minimumSecondsBetweenCalls()
{
  return 1.0;
}

uint64_t variable initialization expression of DOCButtonGestureRecognizer.numberOfTouchesRequired()
{
  return 1;
}

void variable initialization expression of DOCButtonGestureRecognizer.activeTouches()
{
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_21EB0341C())
      sub_21EA8EC60(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t variable initialization expression of DOCButtonGestureRecognizer.startLocationInWindow()
{
  return 0;
}

unint64_t variable initialization expression of DOCAnalyticsConnectToServerShownEvent.name()
{
  return 0xD000000000000038;
}

uint64_t variable initialization expression of DOCAnalyticsConnectToServerShownEvent.bundleID()
{
  return 0;
}

uint64_t variable initialization expression of DOCUSBEraseOperation.operationState()
{
  return 0;
}

uint64_t variable initialization expression of DOCUSBEraseOperation.isFinished()
{
  return 0;
}

uint64_t variable initialization expression of DOCUSBEraseOperation.completionHandler()
{
  return 0;
}

uint64_t variable initialization expression of DOCUSBFormatting.operationManager()
{
  type metadata accessor for DOCOperationManager();
  swift_allocObject();
  return sub_21EA63964();
}

uint64_t variable initialization expression of DOCActionUIOperation.presentingViewController()
{
  return 0;
}

uint64_t variable initialization expression of NSNotification.SubscriptionsController.observee()
{
  return 0;
}

uint64_t variable initialization expression of NSNotification.SubscriptionsController.registeredObservers()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255469DE0);
  return sub_21EB02AE0();
}

uint64_t variable initialization expression of SetFilenameExtensionVisibilityIntent._operation()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v22[2];
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v0 = sub_21EB0206C();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v25 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D58);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)v22 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB0224C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_21EB02258();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v22[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255469DE8);
  sub_21EB02B40();
  sub_21EB023E4();
  v17 = *MEMORY[0x24BDCD328];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v18(v12, v17, v9);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v18(v12, v17, v9);
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v28 = 2;
  v19 = sub_21EB01E8C();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v23, 1, 1, v19);
  v20(v24, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x24BDB6090], v27);
  sub_21EA79B0C();
  return sub_21EB01ED4();
}

unint64_t variable initialization expression of DOCAssociatedObjectStorage._storage()
{
  return sub_21EA5A138(MEMORY[0x24BEE4AF8]);
}

uint64_t variable initialization expression of USBEraseViewModel._name()
{
  return 0;
}

uint64_t variable initialization expression of USBEraseViewModel._selectedFormat()
{
  return 3;
}

uint64_t variable initialization expression of USBEraseViewModel._encrypted()
{
  return 2;
}

uint64_t variable initialization expression of USBEraseViewModel._password()
{
  return 0;
}

uint64_t variable initialization expression of USBEraseViewModel._caseSensitive()
{
  return 2;
}

uint64_t variable initialization expression of USBEraseViewModel._showingFormats()
{
  return MEMORY[0x24BEE4AF8];
}

unint64_t variable initialization expression of USBEraseViewModel._showingOptions()
{
  return sub_21EA98548(MEMORY[0x24BEE4AF8]);
}

uint64_t variable initialization expression of USBEraseViewModel.originalName()
{
  return 0;
}

void variable initialization expression of USBEraseViewModel.supportedFormatsAndOptions()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255469DF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB07160;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = sub_21EA98548((uint64_t)&unk_24E3285E8);
  *(_BYTE *)(inited + 48) = 2;
  *(_QWORD *)(inited + 56) = sub_21EA98548((uint64_t)&unk_24E328610);
  *(_BYTE *)(inited + 64) = 1;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 72) = sub_21EA98548(MEMORY[0x24BEE4AF8]);
  *(_BYTE *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = sub_21EA98548(v1);
  sub_21EA98640(inited);
}

void *variable initialization expression of USBEraseViewModel.viableFormats()
{
  return &unk_24E328638;
}

void variable initialization expression of USBEraseViewModel.optionsForFormat()
{
  sub_21EA98640(MEMORY[0x24BEE4AF8]);
}

void variable initialization expression of USBEraseViewModel.followOnFormats()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255469E00);
  inited = swift_initStackObject();
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_24E328660;
  *(_BYTE *)(inited + 48) = 2;
  *(_QWORD *)(inited + 56) = &unk_24E328688;
  *(_BYTE *)(inited + 64) = 1;
  *(_OWORD *)(inited + 16) = xmmword_21EB07160;
  *(_QWORD *)(inited + 72) = &unk_24E3286B0;
  *(_BYTE *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = &unk_24E3286D8;
  sub_21EA9864C(inited);
}

unint64_t variable initialization expression of DOCAnalyticsItemTaggedEvent.name()
{
  return 0xD00000000000002ELL;
}

uint64_t variable initialization expression of DOCAnalyticsItemTaggedEvent.bundleID()
{
  return 0;
}

uint64_t variable initialization expression of DOCTagManager.serialQueue()
{
  return sub_21EA78060((void (*)(uint64_t))MEMORY[0x24BEE54C8], 0xD00000000000002CLL, 0x800000021EB0EC20);
}

uint64_t sub_21EA78060(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[0] = a3;
  v4 = sub_21EB02F48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB02F30();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  a1(v11);
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v9, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA79AC0();
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5750], v4);
  return sub_21EB02F84();
}

uint64_t variable initialization expression of DOCTagManager.setTagsOperationTimeout@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 30;
  v2 = *MEMORY[0x24BEE5420];
  v3 = sub_21EB029FC();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of DOCUSBStorageKitManager.prewarmStarted()
{
  return 0;
}

uint64_t variable initialization expression of DOCUSBStorageKitManager.prewarmComplete()
{
  return 0;
}

uint64_t variable initialization expression of DOCTagsCollectionViewData.tagsUnionCollection()
{
  return sub_21EAE0804(MEMORY[0x24BEE4AF8]);
}

uint64_t variable initialization expression of DOCTagsCollectionViewData.pendingExternalChange()
{
  return 0;
}

uint64_t variable initialization expression of DOCTagsCollectionViewData.delegate()
{
  return 0;
}

uint64_t variable initialization expression of DOCTagsCollectionViewDataChanges.deletions()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t variable initialization expression of DOCCreateFolderOperation.folderItem()
{
  return 0;
}

uint64_t variable initialization expression of DOCTextFieldRoundedBackgroundView.usePillShape()
{
  return 1;
}

uint64_t variable initialization expression of DOCTextFieldRoundedBackgroundView.$__lazy_storage_$_backgroundProvidingTextField()
{
  return 0;
}

uint64_t variable initialization expression of DOCTypeToFocusController.delegate()
{
  return 0;
}

uint64_t variable initialization expression of DOCTypeToFocusController.typeToFocusInputBuffer()
{
  return 0;
}

uint64_t variable initialization expression of DOCTypeToFocusController.typeToFocusTimeout()
{
  return 0;
}

id variable initialization expression of DOCTypeToFocusController.typeToFocusInputView()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
}

uint64_t variable initialization expression of DOCTypeToFocusController.eventHadModifierKey()
{
  return 0;
}

uint64_t variable initialization expression of DOCAssertion.valid()
{
  return 1;
}

uint64_t variable initialization expression of DOCAssertion.observers()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t variable initialization expression of DOCUSBRenaming.renameQueue()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_21EB02F30();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v0);
  v2 = sub_21EB02F48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v6);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  sub_21EB02A50();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v2);
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v1, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA79AC0();
  sub_21EB031DC();
  return sub_21EB02F84();
}

uint64_t variable initialization expression of DOCOpenLocationIntentActionResolver.isCancelled()
{
  return 0;
}

uint64_t variable initialization expression of DOCOpenLocationIntentActionResolver.locationIdentifier()
{
  return 0;
}

uint64_t variable initialization expression of DOCOpenLocationIntentActionResolver.semanticLocationResolutionHandler()
{
  return 0;
}

uint64_t variable initialization expression of DOCOpenLocationIntentActionResolver.tagLocationResolutionHandler()
{
  return 0;
}

uint64_t variable initialization expression of DOCOpenLocationIntentActionResolver.urlLocationResolutionHandler()
{
  return 0;
}

uint64_t variable initialization expression of DOCICloudRootNode.deferredCreationNode()
{
  return 0;
}

uint64_t variable initialization expression of DOCICloudRootNode.observerBlock()
{
  return 0;
}

uint64_t variable initialization expression of DOCICloudRootNode.iCloudContainer()
{
  return 0;
}

uint64_t variable initialization expression of DOCICloudRootNode.appLibrariesContainer()
{
  return 0;
}

uint64_t variable initialization expression of DOCAnalyticsAPIAbuseEvent.bundleID()
{
  return 0;
}

uint64_t sub_21EA7852C(uint64_t a1, uint64_t a2)
{
  return sub_21EA5D008(a1, a2, MEMORY[0x24BEE0CD8]);
}

void sub_21EA7853C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21EA78548()
{
  sub_21EB035A8();
  sub_21EB035CC();
  return sub_21EB035E4();
}

uint64_t sub_21EA7858C()
{
  return sub_21EB035CC();
}

uint64_t sub_21EA785B4()
{
  sub_21EB035A8();
  sub_21EB035CC();
  return sub_21EB035E4();
}

uint64_t sub_21EA785F4(uint64_t a1)
{
  MEMORY[0x2207B694C](&unk_21EB074F8, a1);
  return sub_21EB0245C();
}

uint64_t sub_21EA78630()
{
  MEMORY[0x2207B694C](&unk_21EB074F8);
  return sub_21EB02450();
}

uint64_t sub_21EA78678(uint64_t a1, uint64_t a2)
{
  sub_21EB035A8();
  MEMORY[0x2207B694C](&unk_21EB074F8, a2);
  sub_21EB02450();
  return sub_21EB035E4();
}

id sub_21EA786D0()
{
  id *v0;

  return *v0;
}

uint64_t sub_21EA786D8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_21EA786E0(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_21EA786F4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_21EA78704(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21EA78718(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_21EB02B70();
  *a2 = 0;
  return result;
}

uint64_t sub_21EA7878C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_21EB02B88();
  v2 = sub_21EB02B58();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_21EA787CC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_21EA787DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207B694C](&unk_21EB074F8, a3);
  return sub_21EB02444();
}

uint64_t sub_21EA78828()
{
  return sub_21EB02B88();
}

uint64_t sub_21EA78838()
{
  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  return sub_21EB02210();
}

uint64_t sub_21EA78878()
{
  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  return sub_21EB021E0();
}

uint64_t sub_21EA788B8(void *a1)
{
  id v2;

  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  v2 = a1;
  return sub_21EB021D4();
}

uint64_t sub_21EA7891C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_21EB03098();

  return v2;
}

uint64_t sub_21EA78950()
{
  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  return sub_21EB02204();
}

uint64_t sub_21EA789A0()
{
  sub_21EB035A8();
  sub_21EB02B28();
  return sub_21EB035E4();
}

void sub_21EA789FC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21EA78A08()
{
  sub_21EA59DC8(&qword_25546A088, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_21EB07CC0);
  sub_21EA59DC8(&qword_25546A090, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_21EB07C60);
  return sub_21EB03464();
}

uint64_t sub_21EA78A8C()
{
  sub_21EA59DC8(&qword_25546A0B8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_21EB078C8);
  sub_21EA59DC8((unint64_t *)&unk_25546A0C0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_21EB07870);
  return sub_21EB03464();
}

uint64_t sub_21EA78B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21EB02B88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21EA78B38()
{
  sub_21EA59DC8((unint64_t *)&unk_2540A6D58, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB08640);
  sub_21EA59DC8(&qword_25546A1C0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB085A0);
  return sub_21EB03464();
}

uint64_t sub_21EA78BBC()
{
  sub_21EA59DC8(&qword_25546A0A8, (uint64_t (*)(uint64_t))type metadata accessor for DOCDocumentSourceIdentifier, (uint64_t)&unk_21EB07A08);
  sub_21EA59DC8(&qword_25546A0B0, (uint64_t (*)(uint64_t))type metadata accessor for DOCDocumentSourceIdentifier, (uint64_t)&unk_21EB079B0);
  return sub_21EB03464();
}

uint64_t sub_21EA78C40()
{
  sub_21EA59DC8(&qword_25546A170, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB084FC);
  return sub_21EB03548();
}

uint64_t sub_21EA78C80()
{
  sub_21EA59DC8(&qword_25546A170, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB084FC);
  return sub_21EB0353C();
}

uint64_t sub_21EA78CC4()
{
  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  return sub_21EB021C8();
}

uint64_t sub_21EA78D04()
{
  sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
  return sub_21EB021EC();
}

uint64_t sub_21EA78D5C()
{
  sub_21EA59DC8(&qword_25546A0D8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_21EB075F8);
  sub_21EA59DC8(&qword_25546A0E0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_21EB07598);
  return sub_21EB03464();
}

uint64_t sub_21EA78DE0()
{
  sub_21EA59DC8((unint64_t *)&qword_2540A6E68, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_21EB07F30);
  sub_21EA59DC8(&qword_25546A0D0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_21EB076F0);
  return sub_21EB03464();
}

uint64_t sub_21EA78E64()
{
  sub_21EA59DC8((unint64_t *)&unk_25546BC20, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB08790);
  sub_21EA59DC8(&qword_25546A1E0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB08200);
  return sub_21EB03464();
}

uint64_t sub_21EA78EE8()
{
  sub_21EA59DC8(&qword_25546A078, (uint64_t (*)(uint64_t))type metadata accessor for DOCIntentLocationType, (uint64_t)&unk_21EB07EA8);
  sub_21EA59DC8(&qword_25546A080, (uint64_t (*)(uint64_t))type metadata accessor for DOCIntentLocationType, (uint64_t)&unk_21EB07E50);
  return sub_21EB03464();
}

uint64_t sub_21EA78F6C()
{
  sub_21EA59DC8(&qword_25546A098, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_21EB07B58);
  sub_21EA59DC8(&qword_25546A0A0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_21EB07AF8);
  return sub_21EB03464();
}

uint64_t sub_21EA78FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21EB02B58();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21EA79034()
{
  sub_21EA59DC8(&qword_25546A1C8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_21EB08374);
  sub_21EA59DC8((unint64_t *)&unk_25546A1D0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_21EB08314);
  return sub_21EB03464();
}

uint64_t sub_21EA790B8()
{
  sub_21EB02B88();
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EA790F8(void *a1)
{
  uint64_t v2;
  id v3;
  _QWORD *v4;
  void *v5;
  id v6;
  _QWORD v8[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = &protocol witness table for DOCSmartFolderManager;
  swift_unknownObjectWeakInit();
  sub_21EB01F10();
  v3 = objc_msgSend(a1, sel_itemID);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a1;
  v4[3] = sub_21EA7A704;
  v4[4] = v2;
  v8[4] = sub_21EA7A738;
  v8[5] = v4;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_21EA81D44;
  v8[3] = &block_descriptor_9;
  v5 = _Block_copy(v8);
  v6 = a1;
  sub_21EB01F10();
  sub_21EB01F10();
  swift_release();
  FPCrossDeviceItemIDForItemID();
  _Block_release(v5);
  swift_release_n();

  return swift_release();
}

id sub_21EA7923C(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_currentUserActivity] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_defaultSaveLocationItemId] = 0;
  if (a1)
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = a1;
    v3 = v1;
    v4 = a1;
  }
  else
  {
    v5 = objc_allocWithZone(MEMORY[0x24BE2DDC0]);
    v6 = v1;
    v4 = objc_msgSend(v5, sel_init);
    *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables21DOCSmartFolderManager_database] = v4;
  }
  v7 = a1;
  v8 = v4;
  objc_msgSend(v8, sel_open);

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCSmartFolderManager();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for DOCSmartFolderManager()
{
  return objc_opt_self();
}

uint64_t sub_21EA79330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCSmartFolderInputFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA79374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for DOCSmartFolderInputFile();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_21EB025DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 24);
  v7 = sub_21EB02384();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_21EA79424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCSmartFolderInputFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA79468(void *a1)
{
  type metadata accessor for DOCSmartFolderInputFile();
  return sub_21EA75F8C(a1);
}

id DOCSmartFolderLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFD0];
  v1 = (void *)*MEMORY[0x24BE2DFD0];
  if (!*MEMORY[0x24BE2DFD0])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

unint64_t sub_21EA794D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255469CE0;
  if (!qword_255469CE0)
  {
    v1 = sub_21EA579D4(255, &qword_255469CD8);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_255469CE0);
  }
  return result;
}

uint64_t sub_21EA79530(unint64_t a1, void *a2, void *a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char **v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  id v36;
  uint64_t result;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;

  v6 = (_QWORD *)sub_21EA980B4(MEMORY[0x24BEE4AF8]);
  if (a1 >> 62)
    goto LABEL_31;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  while (2)
  {
    if (v7 >= 1)
    {
      v8 = 0;
      v9 = a1 & 0xC000000000000001;
      v10 = &selRef_strokeEnd;
      v40 = v7;
      v41 = a2;
      v39 = a1 & 0xC000000000000001;
      v38 = a1;
      while (1)
      {
        v11 = v9 ? (id)MEMORY[0x2207B5B3C](v8, a1) : *(id *)(a1 + 8 * v8 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, v10[270]);
        if (objc_msgSend(a3, sel_canAppWithConfiguration_handleNode_, a2, v13))
          break;

LABEL_6:
        if (v7 == ++v8)
          goto LABEL_32;
      }
      v14 = objc_msgSend(v13, sel_itemIdentifier);
      a2 = v14;
      if (v6[2])
      {
        v15 = v14;
        v16 = sub_21EA5B7F4(v15);
        if ((v17 & 1) != 0)
        {
          v18 = *(_QWORD *)(v6[7] + 8 * v16);
          swift_bridgeObjectRetain();

          v19 = v15;
          v20 = v12;
          MEMORY[0x2207B5500]();
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21EB02D20();
          sub_21EB02D5C();
          sub_21EB02D08();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_21EA9B164(v18, v19, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
LABEL_28:
          v7 = v40;
          a2 = v41;
          v9 = v39;
          v10 = &selRef_strokeEnd;
          goto LABEL_6;
        }

      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_21EB07150;
      *(_QWORD *)(v22 + 32) = v12;
      v42 = v22;
      sub_21EB02D08();
      v23 = a2;
      v24 = v12;
      a1 = swift_isUniquelyReferenced_nonNull_native();
      v26 = sub_21EA5B7F4(v23);
      v27 = v6[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v7 = sub_21EB0341C();
        if (!v7)
          goto LABEL_32;
        continue;
      }
      a2 = v25;
      if (v6[3] >= v29)
      {
        if ((a1 & 1) == 0)
          sub_21EA9BBD4();
      }
      else
      {
        sub_21EA998AC(v29, a1);
        v30 = sub_21EA5B7F4(v23);
        if ((a2 & 1) != (v31 & 1))
          goto LABEL_34;
        v26 = v30;
      }
      if ((a2 & 1) != 0)
      {
        v32 = v6[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v32 + 8 * v26) = v42;
      }
      else
      {
        v6[(v26 >> 6) + 8] |= 1 << v26;
        *(_QWORD *)(v6[6] + 8 * v26) = v23;
        *(_QWORD *)(v6[7] + 8 * v26) = v42;
        v33 = v6[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_30;
        v6[2] = v35;
        v36 = v23;
      }

      swift_bridgeObjectRelease();
      a1 = v38;
      goto LABEL_28;
    }
    break;
  }
  __break(1u);
LABEL_34:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = sub_21EB03530();
  __break(1u);
  return result;
}

void sub_21EA798E0(void *a1, unint64_t a2)
{
  uint64_t *v2;

  sub_21EA76348(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_21EA798EC(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_23;
      v16 = *(_QWORD *)(v4 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_23;
        v16 = *(_QWORD *)(v4 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v8)
            goto LABEL_23;
          v16 = *(_QWORD *)(v4 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = 8 * v11;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v12);
    v14 = *(id *)(*(_QWORD *)(a1 + 48) + v12);
    swift_bridgeObjectRetain();
    a2(v14, v13);
    swift_bridgeObjectRelease();

  }
  v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v16 = *(_QWORD *)(v4 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_21EA79A7C()
{
  unint64_t result;

  result = qword_255469D70;
  if (!qword_255469D70)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_255469D70);
  }
  return result;
}

unint64_t sub_21EA79AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540A6D40[0];
  if (!qword_2540A6D40[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2540A6D30);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, qword_2540A6D40);
  }
  return result;
}

unint64_t sub_21EA79B0C()
{
  unint64_t result;

  result = qword_255469DF0;
  if (!qword_255469DF0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_255469DF0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCSmartFolderInputFile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_21EB01F10();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21EB025DC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_21EB02384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for DOCSmartFolderInputFile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21EB025DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_21EB02384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for DOCSmartFolderInputFile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21EB025DC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_21EB02384();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithCopy for DOCSmartFolderInputFile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21EB025DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21EB02384();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for DOCSmartFolderInputFile(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21EB025DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21EB02384();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *assignWithTake for DOCSmartFolderInputFile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21EB025DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_21EB02384();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSmartFolderInputFile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21EA79F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21EB025DC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_21EB02384();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DOCSmartFolderInputFile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21EA79FE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_21EB025DC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_21EB02384();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_21EA7A084()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21EB025DC();
  if (v1 <= 0x3F)
  {
    result = sub_21EB02384();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for DOCIntentLocationType(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F28);
}

void type metadata accessor for FINodeProperty(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F30);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F38);
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F40);
}

void type metadata accessor for CFUserNotification(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F48);
}

uint64_t sub_21EA7A188(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21EA7A1A8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F50);
}

void type metadata accessor for NSFileProviderItemIdentifier(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F58);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCDiskProperties.Size(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCDiskProperties.Size(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_21EA5D084(a1, (unint64_t *)&unk_255469F60);
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_2540A6E48);
}

void type metadata accessor for DOCDocumentSourceIdentifier(uint64_t a1)
{
  sub_21EA5D084(a1, (unint64_t *)&unk_255469F70);
}

void type metadata accessor for DOCDataOwnerState(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F80);
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F88);
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F90);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469F98);
}

void type metadata accessor for DOCUIPDocumentLandingMode(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469FA0);
}

void type metadata accessor for DOCTabSwitcherStyle(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469FA8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_255469FB0);
}

uint64_t sub_21EA7A318()
{
  return sub_21EA59DC8(&qword_255469FB8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21EB07F74);
}

uint64_t sub_21EA7A344()
{
  return sub_21EA59DC8(&qword_255469FC0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_21EB0755C);
}

uint64_t sub_21EA7A370()
{
  return sub_21EA59DC8((unint64_t *)&unk_255469FC8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_21EB07530);
}

uint64_t sub_21EA7A39C()
{
  return sub_21EA59DC8(&qword_255469FD8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_21EB076B4);
}

uint64_t sub_21EA7A3C8()
{
  return sub_21EA59DC8(&qword_255469FE0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_21EB07688);
}

uint64_t sub_21EA7A3F4()
{
  return sub_21EA59DC8(&qword_255469FE8, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_21EB07838);
}

uint64_t sub_21EA7A420()
{
  return sub_21EA59DC8((unint64_t *)&unk_255469FF0, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderDomainID, (uint64_t)&unk_21EB07810);
}

uint64_t sub_21EA7A44C()
{
  return sub_21EA59DC8(&qword_25546A000, (uint64_t (*)(uint64_t))type metadata accessor for DOCDocumentSourceIdentifier, (uint64_t)&unk_21EB07978);
}

uint64_t sub_21EA7A478()
{
  return sub_21EA59DC8(&qword_25546A008, (uint64_t (*)(uint64_t))type metadata accessor for DOCDocumentSourceIdentifier, (uint64_t)&unk_21EB07950);
}

uint64_t sub_21EA7A4A4()
{
  return sub_21EA59DC8(&qword_25546A010, (uint64_t (*)(uint64_t))type metadata accessor for DOCDocumentSourceIdentifier, (uint64_t)&unk_21EB079E0);
}

uint64_t sub_21EA7A4D0()
{
  return sub_21EA59DC8(&qword_25546A018, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_21EB07ABC);
}

uint64_t sub_21EA7A4FC()
{
  return sub_21EA59DC8(&qword_25546A020, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_21EB07A90);
}

uint64_t sub_21EA7A528()
{
  return sub_21EA59DC8(&qword_25546A028, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_21EB07B2C);
}

uint64_t sub_21EA7A554()
{
  return sub_21EA59DC8(&qword_25546A030, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_21EB07C24);
}

uint64_t sub_21EA7A580()
{
  return sub_21EA59DC8(&qword_25546A038, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_21EB07BF8);
}

uint64_t sub_21EA7A5AC()
{
  return sub_21EA59DC8(&qword_25546A040, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderItemIdentifier, (uint64_t)&unk_21EB07C94);
}

uint64_t sub_21EA7A5D8()
{
  return sub_21EA59DC8(&qword_25546A048, (uint64_t (*)(uint64_t))type metadata accessor for FINodeProperty, (uint64_t)&unk_21EB07D90);
}

uint64_t sub_21EA7A604()
{
  return sub_21EA59DC8(&qword_25546A050, (uint64_t (*)(uint64_t))type metadata accessor for DOCIntentLocationType, (uint64_t)&unk_21EB07E18);
}

uint64_t sub_21EA7A630()
{
  return sub_21EA59DC8(&qword_25546A058, (uint64_t (*)(uint64_t))type metadata accessor for DOCIntentLocationType, (uint64_t)&unk_21EB07DF0);
}

uint64_t sub_21EA7A65C()
{
  return sub_21EA59DC8((unint64_t *)&unk_25546A060, (uint64_t (*)(uint64_t))type metadata accessor for DOCIntentLocationType, (uint64_t)&unk_21EB07E80);
}

uint64_t sub_21EA7A688()
{
  return sub_21EA59DC8(&qword_25546A070, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21EB074CC);
}

double sub_21EA7A6B4@<D0>(double *a1@<X0>, id *a2@<X1>, double *a3@<X8>)
{
  return sub_21EA76614(a1, a2, a3);
}

void type metadata accessor for DOCSmartFolderHitType(uint64_t a1)
{
  sub_21EA5D084(a1, (unint64_t *)&unk_25546A0E8);
}

uint64_t sub_21EA7A6E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_21EA7A704(void *a1)
{
  uint64_t v1;

  sub_21EA7F63C(a1, v1);
}

uint64_t sub_21EA7A70C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_21EA7A738(void *a1, void *a2)
{
  uint64_t v2;

  sub_21EA7F824(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD))(v2 + 24));
}

void type metadata accessor for CSSearchQueryError(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A0F8);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A100);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A108);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A110);
}

void type metadata accessor for DisplayMode(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A118);
}

uint64_t sub_21EA7A7A8()
{
  return sub_21EA59DC8(&qword_25546A120, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB081C4);
}

uint64_t sub_21EA7A7D4()
{
  return sub_21EA59DC8(&qword_25546A128, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB08198);
}

uint64_t sub_21EA7A800()
{
  return sub_21EA59DC8(&qword_25546A130, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_21EB082D8);
}

uint64_t sub_21EA7A82C()
{
  return sub_21EA59DC8(&qword_25546A138, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_21EB082AC);
}

uint64_t sub_21EA7A858()
{
  return sub_21EA59DC8(&qword_25546A140, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_21EB08348);
}

uint64_t sub_21EA7A884()
{
  return sub_21EA59DC8(&qword_25546A148, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08414);
}

uint64_t sub_21EA7A8B0()
{
  return sub_21EA59DC8(&qword_25546A150, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08440);
}

uint64_t sub_21EA7A8DC()
{
  return sub_21EA59DC8(&qword_25546A158, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB08568);
}

uint64_t sub_21EA7A908()
{
  return sub_21EA59DC8((unint64_t *)&unk_25546A160, (uint64_t (*)(uint64_t))type metadata accessor for FPProviderID, (uint64_t)&unk_21EB08540);
}

uint64_t sub_21EA7A934()
{
  return sub_21EA59DC8(&qword_25546A170, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB084FC);
}

uint64_t sub_21EA7A960()
{
  return sub_21EA59DC8(&qword_25546A178, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB084C8);
}

uint64_t sub_21EA7A98C()
{
  return sub_21EA59DC8(&qword_25546A180, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08484);
}

uint64_t sub_21EA7A9B8()
{
  return sub_21EA59DC8(&qword_25546A188, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21EB08728);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_21EA5D084(a1, &qword_25546A1E8);
}

uint64_t sub_21EA7A9F8()
{
  return sub_21EA59DC8(&qword_25546A190, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21EB086EC);
}

unint64_t sub_21EA7AA28()
{
  unint64_t result;

  result = qword_25546A198;
  if (!qword_25546A198)
  {
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25546A198);
  }
  return result;
}

uint64_t sub_21EA7AA6C()
{
  return sub_21EA59DC8(&qword_25546A1A0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21EB08764);
}

uint64_t sub_21EA7AA98()
{
  return sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680);
}

uint64_t sub_21EA7AAC4()
{
  return sub_21EA59DC8((unint64_t *)&unk_25546A1B0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB08234);
}

void DOCChainableOperation.latestOperationResult()()
{
  swift_deletedMethodError();
  __break(1u);
}

id DOCEncryptedVolumeNode.domain.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  return *v1;
}

void DOCEncryptedVolumeNode.domain.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*DOCEncryptedVolumeNode.domain.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall DOCEncryptedVolumeNode.tryResolving()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (id *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEncryptedVolumeNode_domain];
  swift_beginAccess();
  v6 = objc_msgSend(*v5, sel_storageURLs);
  v7 = sub_21EB02300();
  v8 = sub_21EB02CF0();

  v9 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v4, v8 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v7);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, v10, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v7) == 1)
  {
    v11 = 0;
  }
  else
  {
    v11 = (void *)sub_21EB022B8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v7);
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_fiNodeFromURL_, v11);

  if (v12)
  {
    objc_msgSend(v1, sel_setSubjectNode_, v12);

  }
}

void DOCEncryptedVolumeNode.init(subject:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCEncryptedVolumeNode.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCEncryptedVolumeNode);
}

uint64_t type metadata accessor for DOCEncryptedVolumeNode()
{
  return objc_opt_self();
}

id sub_21EA7B02C()
{
  return sub_21EA7B5B4(type metadata accessor for DOCNeedsAuthenticationNode);
}

id FPProviderDomain.shouldUseDSEnumeration.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v8;
  int v9;
  id v10;
  id v11;
  id v12;
  id v14;
  int v15;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_9:
    v10 = objc_msgSend((id)objc_opt_self(), sel_dsEnumerationLocal);
    goto LABEL_10;
  }
  v8 = objc_msgSend(v0, sel_identifier);
  v9 = DOCProviderDomainIDIsExternalDevice();

  if (v9)
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_dsEnumerationUSB);
  }
  else
  {
    v14 = objc_msgSend(v0, sel_identifier);
    v15 = DOCProviderDomainIDIsSharedServerDomainID();

    if (v15)
    {
      v10 = objc_msgSend((id)objc_opt_self(), sel_dsEnumerationSMB);
    }
    else
    {
      if ((objc_msgSend(v0, sel_isUsingFPFS) & 1) != 0)
        return objc_msgSend(v0, sel_isUsingFPFS);
      v10 = objc_msgSend((id)objc_opt_self(), sel_dsEnumerationFPv2);
    }
  }
LABEL_10:
  v11 = v10;
  v12 = objc_msgSend(v11, sel_isEnabled);

  return v12;
}

char *DOCRootNode.__allocating_init(from:for:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_class *v10;
  char *v11;
  char *v12;
  void *v13;
  objc_super v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA579D4(0, (unint64_t *)&unk_2540A6EA0);
  v7 = sub_21EB02300();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = static FINode.docNode(from:)((uint64_t)v6);
  sub_21EA7C4E4((uint64_t)v6);
  if (v9)
  {
    v10 = (objc_class *)type metadata accessor for DOCRootNode();
    v11 = (char *)objc_allocWithZone(v10);
    *(_QWORD *)&v11[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
    v15.receiver = v11;
    v15.super_class = v10;
    v12 = (char *)objc_msgSendSuper2(&v15, sel_initWithSubject_, v9);

    v13 = *(void **)&v12[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
    *(_QWORD *)&v12[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;

  }
  else
  {

    v12 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v12;
}

char *DOCRootNode.__allocating_init(from:for:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  void *v7;
  objc_super v9;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
  v9.receiver = v5;
  v9.super_class = v2;
  v6 = (char *)objc_msgSendSuper2(&v9, sel_initWithSubject_, a1);

  v7 = *(void **)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;

  return v6;
}

char *DOCRootNode.init(from:for:)(void *a1, uint64_t a2)
{
  char *v2;
  char *v5;
  void *v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCRootNode();
  v5 = (char *)objc_msgSendSuper2(&v8, sel_initWithSubject_, a1);

  v6 = *(void **)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain];
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = a2;

  return v5;
}

id DOCRootNode.__allocating_init(subject:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithSubject_, a1);

  return v3;
}

void DOCRootNode.init(subject:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain] = 0;

  sub_21EB033C8();
  __break(1u);
}

uint64_t sub_21EA7B55C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(void))
{
  *(_QWORD *)(a1 + *a4) = 0;
  a5();
  swift_deallocPartialClassInstance();
  return 0;
}

id DOCRootNode.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCRootNode);
}

id sub_21EA7B5B4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t DOCRootNode.identifier.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_source);
  v2 = objc_msgSend(v1, sel_identifier);

  sub_21EB031B8();
  return swift_unknownObjectRelease();
}

void DOCRootNode.identifierKey.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_source);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_21EB031B8();
  swift_unknownObjectRelease();
  swift_dynamicCast();

}

id DOCRootNode.fpfs_fpItem.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_fpfs_fpItem);
}

id DOCRootNode.fileSize.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_fileSize);
}

void *DOCRootNode.fpDomain.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain);
  v2 = v1;
  return v1;
}

id DOCRootNode.providerDomainID.getter()
{
  return sub_21EA7B90C((SEL *)&selRef_identifier);
}

id sub_21EA7B874(char *a1, uint64_t a2, SEL *a3)
{
  id v3;
  char *v4;

  if (*(_QWORD *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain])
  {
    v3 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain], *a3);
  }
  else
  {
    v4 = a1;
    v3 = (id)sub_21EB02B58();

  }
  return v3;
}

id DOCRootNode.providerID.getter()
{
  return sub_21EA7B90C((SEL *)&selRef_providerID);
}

id sub_21EA7B90C(SEL *a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain))
    return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                 + OBJC_IVAR____TtC26DocumentManagerExecutables11DOCRootNode_domain), *a1));
  else
    return (id)sub_21EB02B58();
}

uint64_t DOCRootNode.doc_lastUsedDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA7BAF0((SEL *)&selRef_doc_lastUsedDate, a1);
}

id sub_21EA7B970(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6530);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = a1;
  v12 = objc_msgSend(v11, sel_source);
  v13 = objc_msgSend(v12, *a3);

  if (v13)
  {
    sub_21EB02360();

    v14 = sub_21EB02384();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    v14 = sub_21EB02384();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_21EA7C58C((uint64_t)v8, (uint64_t)v10);

  sub_21EB02384();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) != 1)
  {
    v16 = (void *)sub_21EB02348();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  return v16;
}

uint64_t DOCRootNode.dateForSortingByRecents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA7BAF0((SEL *)&selRef_dateForSortingByRecents, a1);
}

uint64_t sub_21EA7BAF0@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = objc_msgSend(v2, sel_source);
  v6 = objc_msgSend(v5, *a1);

  if (v6)
  {
    sub_21EB02360();

    v7 = sub_21EB02384();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  else
  {
    v7 = sub_21EB02384();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t DOCRootNode.filename.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_source);
  v2 = objc_msgSend(v1, sel_filename);

  v3 = sub_21EB02B88();
  return v3;
}

id DOCRootNode.isActionable.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isActionable);
}

id DOCRootNode.isReadable.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isReadable);
}

id DOCRootNode.isWritable.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isWritable);
}

id DOCRootNode.isPending.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isPending);
}

id DOCRootNode.isExternalDownloadPlaceholder.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isExternalDownloadPlaceholder);
}

id DOCRootNode.isCloudItem.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isCloudItem);
}

uint64_t DOCRootNode.isRootItem.getter()
{
  return 1;
}

id DOCRootNode.isDownloading.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isDownloading);
}

id DOCRootNode.isDownloaded.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isDownloaded);
}

id DOCRootNode.downloadingProgress.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_downloadingProgress);
}

id DOCRootNode.downloadingError.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_downloadingError);
}

id DOCRootNode.isUploading.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isUploading);
}

id sub_21EA7BDC8(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a1;
  v5 = objc_msgSend(v4, sel_source);
  v6 = objc_msgSend(v5, *a3);

  return v6;
}

id DOCRootNode.isUploaded.getter()
{
  return sub_21EA7BE30((SEL *)&selRef_isUploaded);
}

id sub_21EA7BE30(SEL *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_source);
  v4 = objc_msgSend(v3, *a1);

  return v4;
}

id DOCRootNode.uploadingProgress.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_uploadingProgress);
}

id sub_21EA7BEA0(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;
  void *v7;

  v4 = a1;
  v5 = objc_msgSend(v4, sel_source);
  v6 = objc_msgSend(v5, *a3);

  if (v6)
  {
    v7 = (void *)sub_21EB02228();

  }
  else
  {
    v7 = 0;
  }
  return v7;
}

id DOCRootNode.uploadingError.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_uploadingError);
}

id sub_21EA7BF38(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a1;
  v5 = objc_msgSend(v4, sel_source);
  v6 = objc_msgSend(v5, *a3);

  return v6;
}

id DOCRootNode.copyingProgress.getter()
{
  return sub_21EA7BFA8((SEL *)&selRef_copyingProgress);
}

id sub_21EA7BFA8(SEL *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_source);
  v4 = objc_msgSend(v3, *a1);

  return v4;
}

id DOCRootNode.localizedStandardTagsCompare(node:)(uint64_t a1)
{
  return sub_21EA7C020(a1, (SEL *)&selRef_localizedStandardTagsCompareNode_);
}

id DOCRootNode._doc_fileTypeCompare(node:)(uint64_t a1)
{
  return sub_21EA7C020(a1, (SEL *)&selRef__doc_fileTypeCompare_);
}

id sub_21EA7C020(uint64_t a1, SEL *a2)
{
  void *v2;
  id v5;
  id v6;

  v5 = objc_msgSend(v2, sel_source);
  v6 = objc_msgSend(v5, *a2, a1);

  return v6;
}

id sub_21EA7C088(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;
  id v8;
  id v9;

  swift_unknownObjectRetain();
  v7 = a1;
  v8 = objc_msgSend(v7, sel_source);
  v9 = objc_msgSend(v8, *a4, a3);
  swift_unknownObjectRelease();

  return v9;
}

uint64_t FPProviderDomain.isPOSIXCompatible.getter()
{
  void *v0;
  id v1;
  char v2;
  id v3;
  char v4;
  char v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((objc_msgSend(v0, sel_isUsingFPFS) & 1) != 0
    || (objc_msgSend(v0, sel_isiCloudDriveProvider) & 1) != 0
    || (v1 = objc_msgSend(v0, sel_identifier),
        v2 = DOCProviderDomainIDIsExternalDevice(),
        v1,
        (v2 & 1) != 0)
    || (v3 = objc_msgSend(v0, sel_identifier),
        v4 = DOCProviderDomainIDIsSharedServerDomainID(),
        v3,
        (v4 & 1) != 0))
  {
    v5 = 1;
  }
  else
  {
    v7 = objc_msgSend(v0, sel_identifier);
    v8 = sub_21EB02B88();
    v10 = v9;

    if (v8 == sub_21EB02B88() && v10 == v11)
      v5 = 1;
    else
      v5 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t FPProviderDomain.shouldUseDSCopyEngine.getter()
{
  void *v0;
  id v1;
  char v2;
  id v3;
  char v4;
  char v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((objc_msgSend(v0, sel_isUsingFPFS) & 1) != 0
    || (objc_msgSend(v0, sel_isiCloudDriveProvider) & 1) != 0
    || (v1 = objc_msgSend(v0, sel_identifier),
        v2 = DOCProviderDomainIDIsExternalDevice(),
        v1,
        (v2 & 1) != 0)
    || (v3 = objc_msgSend(v0, sel_identifier),
        v4 = DOCProviderDomainIDIsSharedServerDomainID(),
        v3,
        (v4 & 1) != 0))
  {
    v5 = 1;
  }
  else
  {
    v7 = objc_msgSend(v0, sel_identifier);
    v8 = sub_21EB02B88();
    v10 = v9;

    if (v8 == sub_21EB02B88() && v10 == v11)
      v5 = 1;
    else
      v5 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t FPProviderDomain.shouldResolveDSNodeAsFPv2.getter()
{
  void *v0;
  char v1;

  if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
    && (objc_msgSend(v0, sel_isUsingFPFS) & 1) == 0)
  {
    v1 = FPProviderDomain.isPOSIXCompatible.getter() ^ 1;
  }
  else
  {
    v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_21EA7C398(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F68);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA7C4E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21EA7C524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25546A2C8;
  if (!qword_25546A2C8)
  {
    v1 = sub_21EB02300();
    result = MEMORY[0x2207B694C](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_25546A2C8);
  }
  return result;
}

uint64_t type metadata accessor for DOCNeedsAuthenticationNode()
{
  return objc_opt_self();
}

uint64_t sub_21EA7C58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall SYDocumentAttributes.performReturnToDocumentRequest()()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3650]), sel_init);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3660]), sel_init);
  objc_msgSend(v2, sel_setDocumentAttributes_, v0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  v6[4] = sub_21EA7C70C;
  v6[5] = v3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_21EA7C734;
  v6[3] = &block_descriptor_0;
  v4 = _Block_copy(v6);
  v5 = v2;
  swift_release();
  objc_msgSend(v1, sel_performRequest_completion_, v5, v4);
  _Block_release(v4);

}

uint64_t sub_21EA7C6E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EA7C70C(char a1, void *a2)
{
  uint64_t v2;

  sub_21EA7CAB0(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef_documentAttributes, "Error while performing SYReturnToDocumentRequest with attributes %@: %s");
}

void sub_21EA7C734(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_21EB01F10();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void SYDocumentAttributes.performReplyToSenderRequest(with:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t aBlock[7];

  v2 = sub_21EB02300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x24BEB3640]);
  v7 = (void *)sub_21EB022B8();
  v8 = objc_msgSend(v6, sel_initWithFileURL_, v7);

  if (v8)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3650]), sel_init);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB3668]), sel_init);
    objc_msgSend(v10, sel_setDocument_, v8);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v10;
    aBlock[4] = (uint64_t)sub_21EA7CD44;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21EA7C734;
    aBlock[3] = (uint64_t)&block_descriptor_6;
    v12 = _Block_copy(aBlock);
    v13 = v10;
    swift_release();
    objc_msgSend(v9, sel_performRequest_completion_, v13, v12);
    _Block_release(v12);

  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v14 = sub_21EB0263C();
    __swift_project_value_buffer(v14, (uint64_t)static Logger.UI);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v15 = sub_21EB02624();
    v16 = sub_21EB02EE8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)v17 = 136315138;
      sub_21EA7C524();
      v19 = sub_21EB03488();
      aBlock[6] = sub_21EA591E4(v19, v20, aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl(&dword_21EA4C000, v15, v16, "Could not create SYDocument from URL %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v18, -1, -1);
      MEMORY[0x2207B6A18](v17, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

  }
}

void sub_21EA7CAB0(char a1, void *a2, void *a3, SEL *a4, const char *a5)
{
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *oslog;
  uint64_t v23;

  if ((a1 & 1) == 0)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v9 = sub_21EB0263C();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.UI);
    v10 = a3;
    v11 = a2;
    v12 = v10;
    v13 = a2;
    oslog = sub_21EB02624();
    v14 = sub_21EB02EE8();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v23 = v17;
      *(_DWORD *)v15 = 138412546;
      v18 = objc_msgSend(v12, *a4);
      sub_21EB03134();
      *v16 = v18;

      *(_WORD *)(v15 + 12) = 2080;
      v19 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A330);
      v20 = sub_21EB02BA0();
      sub_21EA591E4(v20, v21, &v23);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, oslog, v14, a5, (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v17, -1, -1);
      MEMORY[0x2207B6A18](v15, -1, -1);

    }
    else
    {

    }
  }
}

void sub_21EA7CD44(char a1, void *a2)
{
  uint64_t v2;

  sub_21EA7CAB0(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef_document, "Error while performing SYReturnToSenderRequest with document %@: %s");
}

double DOCColumnViewSpecs.columnWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth);
}

id DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  double *v10;
  id v11;
  objc_super v13;

  sub_21EA52E08(a1);
  v7 = v6;
  v8 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (double *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *v10 = a2;
  v10[1] = a3;
  *(_QWORD *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v7;
  v13.receiver = v9;
  v13.super_class = v8;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

BOOL static DOCColumnViewSpecs.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize)
      && *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8)
      && *(double *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth) == *(double *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth);
}

id DOCColumnViewSpecs.fullBrowserColumnWidthSpec.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  objc_super v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize + 8);
  v3 = (objc_class *)type metadata accessor for DOCColumnViewSpecs();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnBrowserSize];
  *(_QWORD *)v5 = v1;
  *((_QWORD *)v5 + 1) = v2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCColumnViewSpecs_columnWidth] = v1;
  v7.receiver = v4;
  v7.super_class = v3;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DOCColumnViewSpecs.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCColumnViewSpecs.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCColumnViewSpecs.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCColumnViewSpecs();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21EA7CFC4(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_21EA5DAF8(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_21EA7DF00(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

_QWORD *sub_21EA7D040(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_21EA7DDF4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_21EA7DE7C(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_21EA7D0C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_21EB02C60();
  else
    return 0;
}

uint64_t sub_21EA7D104(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_21EB03200();
    v5 = v4;
    v6 = sub_21EB03284();
    v8 = MEMORY[0x2207B5A40](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_21EA7ED84(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_21EA7DB24(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_21EA7ED84(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_21EA7DD6C(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void __swiftcall DOCAnalyticsActionEvent.init(actionType:client:provider:source:viewMode:sortingField:sortingOrder:bundleID:)(DocumentManagerExecutables::DOCAnalyticsActionEvent *__return_ptr retstr, DocumentManagerExecutables::DOCAnalyticsActionEvent::Action actionType, DocumentManagerExecutables::DOCAnalyticsActionEvent::Client client, DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider provider, DocumentManagerExecutables::DOCAnalyticsActionEvent::Source source, DocumentManagerExecutables::DOCAnalyticsActionEvent::ViewMode viewMode, DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode sortingField, DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder sortingOrder, Swift::String_optional bundleID)
{
  retstr->name._countAndFlagsBits = 0xD000000000000032;
  retstr->name._object = (void *)0x800000021EB0E690;
  retstr->bundleID = bundleID;
  retstr->actionType = actionType;
  retstr->client = client;
  retstr->provider = provider;
  retstr->source = source;
  retstr->viewMode = viewMode;
  retstr->sortMode = sortingField;
  retstr->sortOrder = sortingOrder;
}

uint64_t DOCAnalyticsActionEvent.Action.rawValue.getter(uint64_t result)
{
  return result;
}

BOOL sub_21EA7D26C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21EA7D284()
{
  return sub_21EB035B4();
}

unint64_t sub_21EA7D2B0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV0E0O8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_21EA7D2D8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

unint64_t sub_21EA7D2E8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6ClientO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_21EA7D314@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional __swiftcall DOCAnalyticsActionEvent.FileProvider.init(providerDomainID:)(__C::FPProviderDomainID providerDomainID)
{
  int v3;

  if (DOCProviderDomainIDIsExternalDevice())
  {

    return (DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional)5;
  }
  else
  {
    v3 = DOCProviderDomainIDIsSharedServerDomainID();

    if (v3)
      return (DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional)6;
    else
      return (DocumentManagerExecutables::DOCAnalyticsActionEvent::FileProvider_optional)9;
  }
}

unint64_t sub_21EA7D398@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6SourceO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_21EA7D3C8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s26DocumentManagerExecutables23DOCAnalyticsActionEventV8SortModeO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortMode __swiftcall DOCAnalyticsActionEvent.SortMode.init(itemSortMode:)(DocumentManagerExecutables::DOCItemSortMode itemSortMode)
{
  return itemSortMode + 1;
}

DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder_optional __swiftcall DOCAnalyticsActionEvent.SortOrder.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3)
    LOBYTE(rawValue) = 3;
  return (DocumentManagerExecutables::DOCAnalyticsActionEvent::SortOrder_optional)rawValue;
}

uint64_t sub_21EA7D408()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EA7D44C()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t *sub_21EA7D48C@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_21EA7D4A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21EA7D558(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21EA7D4C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21EA7D6C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21EA7D4DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21EA7D850(a1, a2, a3, (_QWORD *)*v3, &qword_25546A3B0, &qword_25546ACB0);
  *v3 = result;
  return result;
}

uint64_t sub_21EA7D508(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21EA7D9DC(a1, a2, a3, *v3, &qword_25546A380);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21EA7D52C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21EA7D850(a1, a2, a3, (_QWORD *)*v3, &qword_25546A3A0, (uint64_t *)&unk_25546BC40);
  *v3 = result;
  return result;
}

uint64_t sub_21EA7D558(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA7D6C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A3A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA7D844(char a1, int64_t a2, char a3, char *a4)
{
  return sub_21EA7D9DC(a1, a2, a3, a4, &qword_25546A3C0);
}

uint64_t sub_21EA7D850(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EA7D9DC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

void sub_21EA7DB24(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_21EB03224() == *(_DWORD *)(a4 + 36))
      {
        sub_21EB03230();
        sub_21EA7ED90();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_21EB03080();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_21EB0308C();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_21EB0308C();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2207B5A7C](a1, a2, v7);
  sub_21EA7ED90();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_21EA7DD6C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21EA7DDF4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_21EA7DE7C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id v7;
  id v8;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * a2);
    v6 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v6;
    v7 = v5;
    v8 = v6;
    return v7;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21EA7DF00(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_21EA7DF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_21EB02E28();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_21EACCCC4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_21EA7DFEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for FINodeProperty(0);
  sub_21EA59DC8(&qword_25546A3B8, (uint64_t (*)(uint64_t))type metadata accessor for FINodeProperty, (uint64_t)&unk_21EB07D50);
  result = sub_21EB02E28();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_21EACCBA8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV0E0O8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6ClientO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV12FileProviderO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 9)
    return 9;
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6SourceO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV8SortModeO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 8)
    return 8;
  return result;
}

unint64_t sub_21EA7E0D0()
{
  unint64_t result;

  result = qword_25546A348;
  if (!qword_25546A348)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.Action, &type metadata for DOCAnalyticsActionEvent.Action);
    atomic_store(result, (unint64_t *)&qword_25546A348);
  }
  return result;
}

unint64_t sub_21EA7E118()
{
  unint64_t result;

  result = qword_25546A350;
  if (!qword_25546A350)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.Client, &type metadata for DOCAnalyticsActionEvent.Client);
    atomic_store(result, (unint64_t *)&qword_25546A350);
  }
  return result;
}

unint64_t sub_21EA7E160()
{
  unint64_t result;

  result = qword_25546A358;
  if (!qword_25546A358)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.FileProvider, &type metadata for DOCAnalyticsActionEvent.FileProvider);
    atomic_store(result, (unint64_t *)&qword_25546A358);
  }
  return result;
}

unint64_t sub_21EA7E1A8()
{
  unint64_t result;

  result = qword_25546A360;
  if (!qword_25546A360)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.Source, &type metadata for DOCAnalyticsActionEvent.Source);
    atomic_store(result, (unint64_t *)&qword_25546A360);
  }
  return result;
}

unint64_t sub_21EA7E1F0()
{
  unint64_t result;

  result = qword_25546A368;
  if (!qword_25546A368)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.ViewMode, &type metadata for DOCAnalyticsActionEvent.ViewMode);
    atomic_store(result, (unint64_t *)&qword_25546A368);
  }
  return result;
}

unint64_t sub_21EA7E238()
{
  unint64_t result;

  result = qword_25546A370;
  if (!qword_25546A370)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.SortMode, &type metadata for DOCAnalyticsActionEvent.SortMode);
    atomic_store(result, (unint64_t *)&qword_25546A370);
  }
  return result;
}

unint64_t sub_21EA7E280()
{
  unint64_t result;

  result = qword_25546A378;
  if (!qword_25546A378)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsActionEvent.SortOrder, &type metadata for DOCAnalyticsActionEvent.SortOrder);
    atomic_store(result, (unint64_t *)&qword_25546A378);
  }
  return result;
}

uint64_t destroy for DOCAnalyticsActionEvent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  return a1;
}

__n128 __swift_memcpy39_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 31) = *(_QWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DOCAnalyticsActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 39))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 38) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 39) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 39) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent()
{
  return &type metadata for DOCAnalyticsActionEvent;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.Action(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21EA7E5E0 + 4 * byte_21EB088D5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21EA7E614 + 4 * byte_21EB088D0[v4]))();
}

uint64_t sub_21EA7E614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7E624);
  return result;
}

uint64_t sub_21EA7E630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7E638);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21EA7E63C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E650(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21EA7E65C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Action()
{
  return &type metadata for DOCAnalyticsActionEvent.Action;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.Client(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent.Client(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_21EA7E750 + 4 * byte_21EB088DF[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_21EA7E784 + 4 * byte_21EB088DA[v4]))();
}

uint64_t sub_21EA7E784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7E794);
  return result;
}

uint64_t sub_21EA7E7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7E7A8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_21EA7E7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Client()
{
  return &type metadata for DOCAnalyticsActionEvent.Client;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.FileProvider(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent.FileProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_21EA7E8AC + 4 * byte_21EB088E9[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_21EA7E8E0 + 4 * byte_21EB088E4[v4]))();
}

uint64_t sub_21EA7E8E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E8E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7E8F0);
  return result;
}

uint64_t sub_21EA7E8FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7E904);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_21EA7E908(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7E910(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.FileProvider()
{
  return &type metadata for DOCAnalyticsActionEvent.FileProvider;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.Source()
{
  return &type metadata for DOCAnalyticsActionEvent.Source;
}

uint64_t getEnumTagSinglePayload for DOCUserActivityIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s26DocumentManagerExecutables23DOCAnalyticsActionEventV6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EA7EA20 + 4 * byte_21EB088F3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EA7EA54 + 4 * byte_21EB088EE[v4]))();
}

uint64_t sub_21EA7EA54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7EA5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7EA64);
  return result;
}

uint64_t sub_21EA7EA70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7EA78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EA7EA7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7EA84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.ViewMode()
{
  return &type metadata for DOCAnalyticsActionEvent.ViewMode;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.SortMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent.SortMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_21EA7EB7C + 4 * byte_21EB088FD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_21EA7EBB0 + 4 * byte_21EB088F8[v4]))();
}

uint64_t sub_21EA7EBB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7EBB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7EBC0);
  return result;
}

uint64_t sub_21EA7EBCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7EBD4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_21EA7EBD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7EBE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.SortMode()
{
  return &type metadata for DOCAnalyticsActionEvent.SortMode;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsActionEvent.SortOrder(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsActionEvent.SortOrder(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EA7ECD8 + 4 * byte_21EB08907[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EA7ED0C + 4 * byte_21EB08902[v4]))();
}

uint64_t sub_21EA7ED0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7ED14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA7ED1CLL);
  return result;
}

uint64_t sub_21EA7ED28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA7ED30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EA7ED34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA7ED3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsActionEvent.SortOrder()
{
  return &type metadata for DOCAnalyticsActionEvent.SortOrder;
}

uint64_t sub_21EA7ED58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EA7ED84(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_21EA7ED90()
{
  unint64_t result;

  result = qword_25546A398;
  if (!qword_25546A398)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546A398);
  }
  return result;
}

id static FILocalStorageNode.sharedInstance(for:)(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_currentSharedInstance);
  if (v3)
    return v3;
  if (a1)
  {
    v5 = a1;
LABEL_7:
    v11 = a1;
    v12 = (id)DOCLocalizedDisplayName();
    if (!v12)
    {
      sub_21EB02B88();
      v12 = (id)sub_21EB02B58();
      swift_bridgeObjectRelease();
    }
    v4 = objc_msgSend(v2, sel_sharedInstanceWithDisplayName_domain_, v12, v5);

    return v4;
  }
  v6 = (void *)*MEMORY[0x24BE2DE60];
  v7 = (void *)objc_opt_self();
  v25[0] = 0;
  v8 = v6;
  v9 = objc_msgSend(v7, sel_providerDomainWithID_cachePolicy_error_, v8, 3, v25);
  if (v9)
  {
    v5 = v9;
    v10 = v25[0];

    goto LABEL_7;
  }
  v14 = v25[0];
  v15 = (void *)sub_21EB02234();

  swift_willThrow();
  if (qword_255469BE8 != -1)
    swift_once();
  v16 = sub_21EB0263C();
  __swift_project_value_buffer(v16, (uint64_t)static Logger.Enumeration);
  v17 = v15;
  v18 = v15;
  v19 = sub_21EB02624();
  v20 = sub_21EB02EE8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (void *)swift_slowAlloc();
    v25[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_getErrorValue();
    v23 = sub_21EB03554();
    sub_21EA591E4(v23, v24, (uint64_t *)v25);
    sub_21EB03134();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21EA4C000, v19, v20, "[FPFS] Unable to create local storage domain %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v22, -1, -1);
    MEMORY[0x2207B6A18](v21, -1, -1);

  }
  else
  {

  }
  return 0;
}

id static FINode.docNode(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  int v15;
  char v16;
  void *v17;
  id v18;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v20 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_shared);
  objc_msgSend(v11, sel_startIfNeeded);

  sub_21EA7F378(a1, (uint64_t)v10);
  v12 = sub_21EB02300();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_21EA7C4E4((uint64_t)v10);
    v15 = 0;
  }
  else
  {
    v16 = sub_21EB022E8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    v15 = v16 & 1;
  }
  sub_21EA7F378(a1, (uint64_t)v8);
  if (v14(v8, 1, v12) == 1)
  {
    v17 = 0;
  }
  else
  {
    v17 = (void *)sub_21EB022B8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v18 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fiNodeFromURL_, v17);

  if (v15)
  {
    sub_21EA7F378(a1, (uint64_t)v5);
    if (v14(v5, 1, v12) == 1)
    {
      sub_21EA7C4E4((uint64_t)v5);
    }
    else
    {
      sub_21EB022D0();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
  return v18;
}

void static FINode.startIfNeeded()()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_shared);
  objc_msgSend(v0, sel_startIfNeeded);

}

uint64_t sub_21EA7F378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::String *DOCUserActivityItemIdentifierKey.unsafeMutableAddressor()
{
  return &DOCUserActivityItemIdentifierKey;
}

Swift::String *DOCUserActivityFileProviderIdentifierKey.unsafeMutableAddressor()
{
  return &DOCUserActivityFileProviderIdentifierKey;
}

Swift::String *DOCUserActivityFileProviderDomainIdentifierKey.unsafeMutableAddressor()
{
  return &DOCUserActivityFileProviderDomainIdentifierKey;
}

Swift::String *DOCUserActivityCrossDeviceItemIdentifierKey.unsafeMutableAddressor()
{
  return &DOCUserActivityCrossDeviceItemIdentifierKey;
}

Swift::String *DOCUserActivityLocalizedFileNameKey.unsafeMutableAddressor()
{
  return &DOCUserActivityLocalizedFileNameKey;
}

Swift::String *DOCUserActivityLocalizedDomainNameKey.unsafeMutableAddressor()
{
  return &DOCUserActivityLocalizedDomainNameKey;
}

Swift::String *DOCUserActivityFPItemKey.unsafeMutableAddressor()
{
  return &DOCUserActivityFPItemKey;
}

Swift::String *DOCUserActivityLocationKey.unsafeMutableAddressor()
{
  return &DOCUserActivityLocationKey;
}

Swift::String *DOCUserActivityTagNameKey.unsafeMutableAddressor()
{
  return &DOCUserActivityTagNameKey;
}

Swift::String *DOCUserActivityQuickLookStateRestorationUserInfoKey.unsafeMutableAddressor()
{
  return &DOCUserActivityQuickLookStateRestorationUserInfoKey;
}

uint64_t static DOCUserActivityIdentifier.identifierSupportsRestoration(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x800000021EB0E360
    || (sub_21EB034C4() & 1) != 0
    || a1 == 0xD00000000000001DLL && a2 == 0x800000021EB0E390)
  {
    return 1;
  }
  else
  {
    return sub_21EB034C4();
  }
}

uint64_t DOCUserActivityIdentifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21EA7F534 + 4 * byte_21EB08DE0[a1]))(0xD000000000000020, 0x800000021EB0E360);
}

unint64_t sub_21EA7F534()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_21EA7F550()
{
  uint64_t v0;

  return v0 + 7;
}

void sub_21EA7F57C(char *a1)
{
  sub_21EAEF990(*a1);
}

void sub_21EA7F588()
{
  char *v0;

  sub_21EAF8610(*v0);
}

void sub_21EA7F590(uint64_t a1)
{
  char *v1;

  sub_21EAF32A4(a1, *v1);
}

void sub_21EA7F598(uint64_t a1)
{
  char *v1;

  sub_21EAF8BA4(a1, *v1);
}

uint64_t sub_21EA7F5A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables25DOCUserActivityIdentifierO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21EA7F5CC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = DOCUserActivityIdentifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static DOCUserActivityController.publishUserActivity(for:activityHosting:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_21EA833F0(a1, a2, v3, ObjectType, a3);
}

void sub_21EA7F63C(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v7[4] = sub_21EA83804;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_21EA5EAB0;
  v7[3] = &block_descriptor_28;
  v5 = _Block_copy(v7);
  v6 = a1;
  sub_21EB01F10();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

uint64_t sub_21EA7F6F0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(void *, uint64_t, uint64_t);
  id v9;

  v4 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2207B6ACC](v4);
  if (result)
  {
    v6 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
    v9 = a2;
    v8(a2, ObjectType, v6);
    (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t static DOCUserActivityController.userActivityFor(item:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  _QWORD *v8;
  void (*v9)(id, void (*)(void *, void *), _QWORD *);
  id v10;

  v7 = objc_msgSend(a1, sel_itemID);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v9 = *(void (**)(id, void (*)(void *, void *), _QWORD *))(v3 + 96);
  v10 = a1;
  sub_21EB01F10();
  v9(v7, sub_21EA7A738, v8);

  return swift_release();
}

void sub_21EA7F824(void *a1, void *a2, void *a3, void (*a4)(_QWORD))
{
  id v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  NSObject *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t inited;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  unint64_t v92;
  NSObject *log;
  _QWORD *v94;
  void *v95;
  id v96;
  void (*v97)(_QWORD);
  _QWORD *v98;
  void *v99;
  uint64_t v100;
  id v101;
  unint64_t v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  if (!a1)
  {
    if (a2)
    {
      type metadata accessor for CFError(0);
      sub_21EA59DC8(&qword_25546A420, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v11 = (void *)swift_allocError();
      *v12 = a2;
      v13 = qword_255469B70;
      v14 = a2;
      if (v13 != -1)
        swift_once();
      v15 = sub_21EB0263C();
      __swift_project_value_buffer(v15, (uint64_t)static Logger.DocumentManager);
      v16 = a3;
      v17 = v11;
      v18 = v16;
      v19 = v11;
      v20 = sub_21EB02624();
      v21 = sub_21EB02EE8();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v98 = (_QWORD *)swift_slowAlloc();
        v99 = (void *)swift_slowAlloc();
        v101 = v99;
        *(_DWORD *)v22 = 138412546;
        v23 = v11;
        v24 = _swift_stdlib_bridgeErrorToNSError();
        sub_21EB03134();
        *v98 = v24;

        *(_WORD *)(v22 + 12) = 2080;
        v25 = objc_msgSend(v18, sel_displayName);
        v26 = a4;
        v27 = sub_21EB02B88();
        v28 = v20;
        v30 = v29;

        v31 = v27;
        a4 = v26;
        sub_21EA591E4(v31, v30, (uint64_t *)&v101);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21EA4C000, v28, v21, "Failed to create cross device itemID %@ for item: %s", (uint8_t *)v22, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v98, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v99, -1, -1);
        MEMORY[0x2207B6A18](v22, -1, -1);

      }
      else
      {

      }
    }
    v40 = 0;
    goto LABEL_26;
  }
  v6 = a1;
  v7 = objc_msgSend(a3, sel_isFolder);
  v8 = (id)_DocumentManagerBundle();
  v9 = v8;
  v97 = a4;
  if ((v7 & 1) != 0)
  {
    if (!v8)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v92 = 0x800000021EB0FA30;
LABEL_12:
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_21EB08F10;
    v33 = objc_msgSend(a3, sel_displayName, v92);
    v34 = sub_21EB02B88();
    v36 = v35;

    v37 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v32 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v32 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = v36;
    sub_21EB02B94();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_isFolder);
    v38 = objc_allocWithZone(MEMORY[0x24BDC1598]);
    v39 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(v38, sel_initWithActivityType_, v39);

    v41 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setTitle_, v41);

    objc_msgSend(v40, sel_setEligibleForPrediction_, 1);
    objc_msgSend(v40, sel_setEligibleForSearch_, 1);
    objc_msgSend(v40, sel_setEligibleForPublicIndexing_, 0);
    objc_msgSend(v40, sel_setEligibleForHandoff_, 0);
    sub_21EA8DDF0((uint64_t)&unk_24E327FB0);
    swift_arrayDestroy();
    v42 = (void *)sub_21EB02E10();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setRequiredUserInfoKeys_, v42);

    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A438);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB07140;
    sub_21EB032A8();
    type metadata accessor for CFString(0);
    *(_QWORD *)(inited + 96) = v44;
    *(_QWORD *)(inited + 72) = v6;
    v102 = 0x800000021EB0F6C0;
    v96 = v6;
    sub_21EB032A8();
    v45 = objc_msgSend(a3, sel_displayName);
    v46 = sub_21EB02B88();
    v48 = v47;

    *(_QWORD *)(inited + 168) = v37;
    *(_QWORD *)(inited + 144) = v46;
    *(_QWORD *)(inited + 152) = v48;
    sub_21EA981BC(inited);
    v49 = (void *)sub_21EB02AC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_addUserInfoEntriesFromDictionary_, v49);

    v50 = (void *)objc_opt_self();
    v101 = 0;
    v51 = a3;
    v52 = objc_msgSend(v50, sel_providerDomainForItem_cachePolicy_error_, v51, 3, &v101);
    if (v52)
    {
      v53 = v52;
      v54 = v101;

      v55 = (id)DOCLocalizedDisplayName();
      v56 = sub_21EB02B88();
      v58 = v57;

      v59 = swift_initStackObject();
      *(_OWORD *)(v59 + 16) = xmmword_21EB08F10;
      v101 = (id)0xD000000000000025;
      v102 = 0x800000021EB0F6F0;
      sub_21EB032A8();
      *(_QWORD *)(v59 + 96) = v37;
      *(_QWORD *)(v59 + 72) = v56;
      *(_QWORD *)(v59 + 80) = v58;
      sub_21EA981BC(v59);
      v60 = (void *)sub_21EB02AC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v40, sel_addUserInfoEntriesFromDictionary_, v60);

    }
    else
    {
      v61 = v101;
      v62 = (void *)sub_21EB02234();

      swift_willThrow();
      if (qword_255469B70 != -1)
        swift_once();
      v63 = sub_21EB0263C();
      __swift_project_value_buffer(v63, (uint64_t)static Logger.DocumentManager);
      v64 = v51;
      v65 = v62;
      v66 = v64;
      v67 = v62;
      v68 = sub_21EB02624();
      v69 = sub_21EB02EE8();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        v94 = (_QWORD *)swift_slowAlloc();
        v95 = (void *)swift_slowAlloc();
        v101 = v95;
        *(_DWORD *)v70 = 136315394;
        v71 = objc_msgSend(v66, sel_displayName);
        v72 = sub_21EB02B88();
        log = v68;
        v74 = v73;

        sub_21EA591E4(v72, v74, (uint64_t *)&v101);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2112;
        v75 = v62;
        v100 = _swift_stdlib_bridgeErrorToNSError();
        sub_21EB03134();
        *v94 = v100;

        _os_log_impl(&dword_21EA4C000, log, v69, "Could not fetch provider domain for %s: %@", (uint8_t *)v70, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v94, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v95, -1, -1);
        MEMORY[0x2207B6A18](v70, -1, -1);

      }
      else
      {

      }
    }
    v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC2480]), sel_init);
    v77 = objc_msgSend(v51, sel_itemID);
    v78 = objc_msgSend(v77, sel_coreSpotlightIdentifier);

    if (!v78)
    {
      sub_21EB02B88();
      v78 = (id)sub_21EB02B58();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v76, sel_setRelatedUniqueIdentifier_, v78);

    v79 = objc_msgSend(v51, sel_providerID);
    sub_21EB02B88();

    v80 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    objc_msgSend(v76, sel_setBundleID_, v80);

    v81 = swift_initStackObject();
    *(_OWORD *)(v81 + 16) = xmmword_21EB08F10;
    v101 = (id)sub_21EB02B88();
    v102 = v82;
    swift_bridgeObjectRetain();
    v83 = MEMORY[0x24BEE0D00];
    sub_21EB032A8();
    v84 = (id)_DocumentManagerBundle();
    if (v84)
    {
      v85 = v84;
      v86 = objc_msgSend(v84, sel_bundleIdentifier);

      if (v86)
      {
        v87 = sub_21EB02B88();
        v89 = v88;
        swift_bridgeObjectRelease();

        *(_QWORD *)(v81 + 96) = v83;
        *(_QWORD *)(v81 + 72) = v87;
        *(_QWORD *)(v81 + 80) = v89;
        sub_21EA981BC(v81);
        v90 = (void *)sub_21EB02AC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v76, sel_addAttributesFromDictionary_, v90);

        v91 = v76;
        objc_msgSend(v40, sel_setContentAttributeSet_, v91);

        a4 = v97;
LABEL_26:
        a4(v40);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  if (v8)
  {
    v92 = 0x800000021EB0FA00;
    goto LABEL_12;
  }
LABEL_30:
  __break(1u);
}

void static DOCUserActivityController.fetchURLFrom(activity:completion:)(void *a1, void (*a2)(uint64_t, void *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void *, void (*)(void *, void *), uint64_t);
  id v51;
  uint64_t v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(uint64_t, void *);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, void *);
  uint64_t aBlock;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, void *);
  void *v80;
  void (*v81)(uint64_t, void *);
  uint64_t v82;
  __int128 v83;
  __int128 v84;

  v4 = v3;
  v75 = a3;
  v74 = sub_21EB020CC();
  v7 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_userInfo);
  if (!v11)
  {
    v83 = 0u;
    v84 = 0u;
LABEL_11:
    sub_21EA59E08((uint64_t)&v83, &qword_2540A6F88);
    v16 = 0;
    goto LABEL_12;
  }
  v12 = v11;
  v13 = sub_21EB02AD4();

  *(_QWORD *)&v83 = 0xD00000000000002BLL;
  *((_QWORD *)&v83 + 1) = 0x800000021EB0E400;
  sub_21EB032A8();
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_21EA821BC((uint64_t)&aBlock), (v15 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&v83);
  }
  else
  {
    v83 = 0u;
    v84 = 0u;
  }
  sub_21EA835D0((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v84 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    v16 = v78;
  else
    v16 = 0;
LABEL_12:
  v17 = objc_msgSend(a1, sel_userInfo);
  v76 = a2;
  if (!v17)
  {
    v83 = 0u;
    v84 = 0u;
LABEL_24:
    sub_21EA59E08((uint64_t)&v83, &qword_2540A6F88);
    v70 = 0;
    v24 = 0;
    goto LABEL_25;
  }
  v18 = v17;
  v19 = sub_21EB02AD4();

  *(_QWORD *)&v83 = 0xD000000000000020;
  *((_QWORD *)&v83 + 1) = 0x800000021EB0F630;
  sub_21EB032A8();
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_21EA821BC((uint64_t)&aBlock), (v21 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v83);
  }
  else
  {
    v83 = 0u;
    v84 = 0u;
  }
  sub_21EA835D0((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v84 + 1))
    goto LABEL_24;
  v22 = swift_dynamicCast();
  v23 = aBlock;
  if (!v22)
    v23 = 0;
  v70 = v23;
  if (v22)
    v24 = v78;
  else
    v24 = 0;
LABEL_25:
  v25 = objc_msgSend(a1, sel_userInfo);
  v72 = v7;
  if (!v25)
  {
    v83 = 0u;
    v84 = 0u;
LABEL_35:
    sub_21EA59E08((uint64_t)&v83, &qword_2540A6F88);
    v30 = 0;
    goto LABEL_36;
  }
  v26 = v25;
  v27 = sub_21EB02AD4();

  *(_QWORD *)&v83 = 0xD000000000000028;
  *((_QWORD *)&v83 + 1) = 0x800000021EB0F660;
  sub_21EB032A8();
  if (*(_QWORD *)(v27 + 16) && (v28 = sub_21EA821BC((uint64_t)&aBlock), (v29 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v83);
  }
  else
  {
    v83 = 0u;
    v84 = 0u;
  }
  sub_21EA835D0((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v84 + 1))
    goto LABEL_35;
  if (swift_dynamicCast())
    v30 = v78;
  else
    v30 = 0;
LABEL_36:
  v31 = objc_msgSend(a1, sel_userInfo);
  if (!v31)
  {
    v83 = 0u;
    v84 = 0u;
    goto LABEL_51;
  }
  v32 = v31;
  v33 = sub_21EB02AD4();

  *(_QWORD *)&v83 = 0xD00000000000002ELL;
  *((_QWORD *)&v83 + 1) = 0x800000021EB0F690;
  sub_21EB032A8();
  if (*(_QWORD *)(v33 + 16) && (v34 = sub_21EA821BC((uint64_t)&aBlock), (v35 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v33 + 56) + 32 * v34, (uint64_t)&v83);
  }
  else
  {
    v83 = 0u;
    v84 = 0u;
  }
  sub_21EA835D0((uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v84 + 1))
  {
LABEL_51:
    sub_21EA59E08((uint64_t)&v83, &qword_2540A6F88);
    v36 = 0;
    if (!v16)
      goto LABEL_46;
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v47 = swift_allocObject();
    v48 = v75;
    v49 = (uint64_t)v76;
    *(_QWORD *)(v47 + 16) = v76;
    *(_QWORD *)(v47 + 24) = v48;
    v50 = *(void (**)(void *, void (*)(void *, void *), uint64_t))(v4 + 104);
    v51 = v46;
    sub_21EA83588(v49);
    v50(v46, sub_21EA835C8, v47);

    swift_release();
    return;
  }
  if (swift_dynamicCast())
    v36 = v78;
  else
    v36 = 0;
  if (v16)
    goto LABEL_52;
LABEL_46:
  if (v24 && v30 && v36)
  {
    v37 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v38 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v39 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC82E8]), sel_initWithProviderID_domainIdentifier_itemIdentifier_, v37, v38, v39);

    v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v42 = swift_allocObject();
    v43 = v75;
    v44 = (uint64_t)v76;
    *(_QWORD *)(v42 + 16) = v76;
    *(_QWORD *)(v42 + 24) = v43;
    v81 = sub_21EA83580;
    v82 = v42;
    aBlock = MEMORY[0x24BDAC760];
    v78 = 1107296256;
    v79 = sub_21EA8159C;
    v80 = &block_descriptor_1;
    v45 = _Block_copy(&aBlock);
    sub_21EA83588(v44);
    swift_release();
    objc_msgSend(v41, sel_fetchURLForItemID_completionHandler_, v40, v45);
    _Block_release(v45);

    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_255469B70 != -1)
    swift_once();
  v52 = sub_21EB0263C();
  __swift_project_value_buffer(v52, (uint64_t)static Logger.DocumentManager);
  v53 = a1;
  v54 = sub_21EB02624();
  v55 = sub_21EB02EE8();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    aBlock = v57;
    *(_DWORD *)v56 = 136315138;
    v58 = objc_msgSend(v53, sel_description);
    v59 = sub_21EB02B88();
    v61 = v60;

    *(_QWORD *)&v83 = sub_21EA591E4(v59, v61, &aBlock);
    sub_21EB03134();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v54, v55, "User activity does not contain expected keys: %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v57, -1, -1);
    MEMORY[0x2207B6A18](v56, -1, -1);

    v62 = v76;
    if (!v76)
      return;
  }
  else
  {

    v62 = v76;
    if (!v76)
      return;
  }
  v63 = sub_21EB02300();
  v64 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v73, 1, 1, v63);
  LODWORD(aBlock) = 22;
  sub_21EA81F30(MEMORY[0x24BEE4AF8]);
  sub_21EA59DC8(&qword_25546A3C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  v65 = v71;
  v66 = v74;
  sub_21EB0221C();
  v67 = (void *)sub_21EB020C0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v65, v66);
  v68 = (void *)sub_21EB02228();

  v62(v64, v68);
  sub_21EA59E08(v64, (uint64_t *)&unk_2540A6520);
}

void sub_21EA80EC8(void *a1, void *a2, void (*a3)(char *, void *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (a2)
    {
      type metadata accessor for CFError(0);
      sub_21EA59DC8(&qword_25546A420, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v13 = (void *)swift_allocError();
      *v14 = a2;
      v15 = a2;
      v16 = (void *)sub_21EB02228();

    }
    else
    {
      v16 = 0;
    }
    if (qword_255469B70 != -1)
      swift_once();
    v17 = sub_21EB0263C();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.DocumentManager);
    v18 = v16;
    v19 = sub_21EB02624();
    v20 = sub_21EB02EE8();
    v21 = os_log_type_enabled(v19, v20);
    v29 = v16;
    if (v21)
    {
      v28[2] = a4;
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v30 = (uint64_t)v16;
      v31 = v23;
      *(_DWORD *)v22 = 136315138;
      v28[1] = v22 + 4;
      v24 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A418);
      v25 = sub_21EB02BA0();
      v30 = sub_21EA591E4(v25, v26, &v31);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v19, v20, "Can not fetch itemID: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v23, -1, -1);
      MEMORY[0x2207B6A18](v22, -1, -1);

      if (a3)
      {
LABEL_11:
        v27 = sub_21EB02300();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
        a3(v10, v29);

        goto LABEL_12;
      }
    }
    else
    {

      if (a3)
        goto LABEL_11;
    }

    return;
  }
  if (!a3)
    return;
  sub_21EB022DC();
  v11 = sub_21EB02300();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = a1;
  a3(v10, 0);

LABEL_12:
  sub_21EA59E08((uint64_t)v10, (uint64_t *)&unk_2540A6520);
}

void sub_21EA811E4(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;

  v33 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  v16 = sub_21EB02300();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA5E094(a1, (uint64_t)v15, (uint64_t *)&unk_2540A6520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_21EA59E08((uint64_t)v15, (uint64_t *)&unk_2540A6520);
    if (a2)
    {
      v20 = a2;
      if (qword_255469B70 != -1)
        swift_once();
      v21 = sub_21EB0263C();
      __swift_project_value_buffer(v21, (uint64_t)static Logger.DocumentManager);
      v22 = a2;
      v23 = a2;
      v24 = sub_21EB02624();
      v25 = sub_21EB02EE8();
      if (os_log_type_enabled(v24, v25))
      {
        v32 = a3;
        v26 = (uint8_t *)swift_slowAlloc();
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v26 = 138412290;
        v27 = a2;
        v28 = _swift_stdlib_bridgeErrorToNSError();
        v34 = v28;
        a3 = v32;
        sub_21EB03134();
        v29 = v31;
        *v31 = v28;

        _os_log_impl(&dword_21EA4C000, v24, v25, "Can not fetch URL for itemID %@", v26, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v29, -1, -1);
        MEMORY[0x2207B6A18](v26, -1, -1);

        if (!a3)
          return;
      }
      else
      {

        if (!a3)
          return;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, 1, 1, v16);
      v30 = (void *)sub_21EB02228();
    }
    else
    {
      if (!a3)
        return;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v10, 1, 1, v16);
      v30 = 0;
    }
    a3(v10, v30);

    sub_21EA59E08((uint64_t)v10, (uint64_t *)&unk_2540A6520);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  if (a3)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    a3(v13, 0);
    sub_21EA59E08((uint64_t)v13, (uint64_t *)&unk_2540A6520);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_21EA8159C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_21EB022DC();
    v10 = sub_21EB02300();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_21EB02300();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  sub_21EB01F10();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_21EA59E08((uint64_t)v8, (uint64_t *)&unk_2540A6520);
}

id static DOCUserActivityController.alertController(with:)(void *a1)
{
  id result;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v3 = result;
  sub_21EB02168();

  v4 = objc_msgSend(a1, sel_userInfo, 0x800000021EB0F7F0);
  if (!v4)
  {
    v38 = 0u;
    v39 = 0u;
LABEL_15:
    sub_21EA59E08((uint64_t)&v38, &qword_2540A6F88);
    v10 = 0;
    v11 = 0;
    goto LABEL_16;
  }
  v5 = v4;
  v6 = sub_21EB02AD4();

  *(_QWORD *)&v38 = 0xD000000000000023;
  *((_QWORD *)&v38 + 1) = 0x800000021EB0F6C0;
  sub_21EB032A8();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_21EA821BC((uint64_t)&v36), (v8 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  sub_21EA835D0((uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_15;
  v9 = swift_dynamicCast();
  if (v9)
    v10 = v36;
  else
    v10 = 0;
  if (v9)
    v11 = v37;
  else
    v11 = 0;
LABEL_16:
  v12 = objc_msgSend(a1, sel_userInfo);
  if (!v12)
  {
    v38 = 0u;
    v39 = 0u;
    goto LABEL_33;
  }
  v13 = v12;
  v14 = sub_21EB02AD4();

  sub_21EB032A8();
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_21EA821BC((uint64_t)&v36), (v16 & 1) != 0))
  {
    sub_21EA5A05C(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  sub_21EA835D0((uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_33:
    sub_21EA59E08((uint64_t)&v38, &qword_2540A6F88);
    if (v11)
      goto LABEL_34;
LABEL_37:
    swift_bridgeObjectRelease();
    result = (id)_DocumentManagerBundle();
    if (!result)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v27 = result;
    v35 = 0x800000021EB0F850;
    sub_21EB02168();

    goto LABEL_39;
  }
  v17 = MEMORY[0x24BEE0D00];
  v18 = swift_dynamicCast();
  if (v18)
    v19 = v36;
  else
    v19 = 0;
  if (v18)
    v20 = v37;
  else
    v20 = 0;
  if (!v11)
    goto LABEL_37;
  if (!v20)
  {
LABEL_34:
    result = (id)_DocumentManagerBundle();
    if (!result)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v24 = result;
    v25 = MEMORY[0x24BEE0D00];
    v35 = 0x800000021EB0F8C0;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_21EB08F10;
    *(_QWORD *)(v26 + 56) = v25;
    *(_QWORD *)(v26 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v26 + 32) = v10;
    *(_QWORD *)(v26 + 40) = v11;
    sub_21EB02B94();
    goto LABEL_36;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v21 = result;
    v35 = 0x800000021EB0F950;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v22 + 56) = v17;
    v23 = sub_21EA5EA3C();
    *(_QWORD *)(v22 + 32) = v10;
    *(_QWORD *)(v22 + 40) = v11;
    *(_QWORD *)(v22 + 96) = v17;
    *(_QWORD *)(v22 + 104) = v23;
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v22 + 72) = v19;
    *(_QWORD *)(v22 + 80) = v20;
    sub_21EB02B94();
LABEL_36:
    swift_bridgeObjectRelease();
LABEL_39:
    v28 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v28, v29, 1, v35);

    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v31 = result;
      sub_21EB02168();

      v32 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
      v33 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v32, 0, 0, 0xE200000000000000);

      v34 = v30;
      objc_msgSend(v34, sel_addAction_, v33);
      objc_msgSend(v34, sel_setPreferredAction_, v33);

      return v30;
    }
    goto LABEL_42;
  }
LABEL_45:
  __break(1u);
  return result;
}

void static DOCUserActivityController.crossDeviceItemIDForItemID(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21EA81D64(a1, a2, a3, (uint64_t)sub_21EA81D44, (uint64_t)&block_descriptor_9_0, (void (*)(uint64_t, void *))MEMORY[0x24BDC7DB8]);
}

void static DOCUserActivityController.itemURLForCrossDeviceItemID(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_21EA81D64(a1, a2, a3, (uint64_t)sub_21EA81D44, (uint64_t)&block_descriptor_12, MEMORY[0x24BDC8110]);
}

void sub_21EA81D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, void *))
{
  void *v8;
  _QWORD v9[6];

  if (a2)
  {
    v9[4] = a2;
    v9[5] = a3;
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 1107296256;
    v9[2] = a4;
    v9[3] = a5;
    v8 = _Block_copy(v9);
    sub_21EB01F10();
    swift_release();
  }
  else
  {
    v8 = 0;
  }
  a6(a1, v8);
  _Block_release(v8);
}

void sub_21EA81E00(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_21EB01F10();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id DOCUserActivityController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DOCUserActivityController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUserActivityController();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCUserActivityController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUserActivityController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21EA81F30(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A428);
  v2 = sub_21EB0344C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v6, (uint64_t)&v15, &qword_25546A430);
    v7 = v15;
    v8 = v16;
    result = sub_21EA541BC(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_21EA82078);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_21EA5951C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA82078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_21EB034C4() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_21EB034C4() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_21EB034C4() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_21EA821BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21EB03290();
  return sub_21EA82754(a1, v2);
}

unint64_t sub_21EA821EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21EB0359C();
  return sub_21EA82818(a1, v2);
}

unint64_t sub_21EA8221C(void *a1)
{
  id v2;
  uint64_t v3;

  sub_21EB035A8();
  sub_21EB035C0();
  if (a1)
  {
    type metadata accessor for CFString(0);
    sub_21EA59DC8(&qword_25546A410, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21EB074F8);
    v2 = a1;
    sub_21EB02450();

  }
  v3 = sub_21EB035E4();
  return sub_21EA828B4((uint64_t)a1, v3);
}

void sub_21EA822D8(char a1)
{
  sub_21EB035A8();
  __asm { BR              X10 }
}

uint64_t sub_21EA82328()
{
  uint64_t v0;
  uint64_t v1;

  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  v1 = sub_21EB035E4();
  return sub_21EA829BC(v0, v1);
}

unint64_t sub_21EA82398(uint64_t a1)
{
  uint64_t v2;

  sub_21EB02474();
  sub_21EA59DC8(&qword_25546A400, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6140], MEMORY[0x24BEE6148]);
  v2 = sub_21EB02B1C();
  return sub_21EA82B74(a1, v2);
}

unint64_t sub_21EA82404(uint64_t a1)
{
  uint64_t v2;

  sub_21EB02B88();
  sub_21EB035A8();
  sub_21EB02BDC();
  v2 = sub_21EB035E4();
  swift_bridgeObjectRelease();
  return sub_21EA82CB4(a1, v2);
}

void sub_21EA82490(char a1)
{
  sub_21EB035A8();
  __asm { BR              X10 }
}

uint64_t sub_21EA824E4()
{
  uint64_t v0;
  uint64_t v1;

  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  v1 = sub_21EB035E4();
  return sub_21EA82E28(v0, v1);
}

unint64_t sub_21EA82548(unsigned __int8 a1)
{
  uint64_t v2;

  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  v2 = sub_21EB035E4();
  return sub_21EA82FC8(a1, v2);
}

unint64_t sub_21EA82604(unsigned __int8 a1)
{
  uint64_t v2;

  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  v2 = sub_21EB035E4();
  return sub_21EA83178(a1, v2);
}

unint64_t sub_21EA826A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21EB03080();
  return sub_21EA832E8(a1, v2);
}

unint64_t sub_21EA826D4(uint64_t a1)
{
  uint64_t v2;

  sub_21EB02B88();
  sub_21EB035A8();
  sub_21EB02BDC();
  v2 = sub_21EB035E4();
  swift_bridgeObjectRelease();
  return sub_21EA82CB4(a1, v2);
}

unint64_t sub_21EA82754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_21EA83774(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2207B5AC4](v9, a1);
      sub_21EA835D0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21EA82818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21EA828B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    do
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0);
          sub_21EA59DC8(&qword_25546A410, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_21EB074F8);
          v10 = v9;
          v11 = sub_21EB02444();

          if ((v11 & 1) != 0)
            return v5;
        }
      }
      else if (!a1)
      {
        return v5;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_21EA829BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_21EA82B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_21EB02474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_21EA59DC8(&qword_25546A408, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6140], MEMORY[0x24BEE6150]);
      v14 = sub_21EB02B34();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_21EA82CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_21EB02B88();
    v8 = v7;
    if (v6 == sub_21EB02B88() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_21EB02B88();
          v15 = v14;
          if (v13 == sub_21EB02B88() && v15 == v16)
            break;
          v18 = sub_21EB034C4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_21EA82E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_21EA82FC8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x6574707972636E65;
          v8 = 0xE900000000000064;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0x736E655365736163;
          v8 = 0xED00006576697469;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE400000000000000;
            if (v7 != 1701736302)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0xE400000000000000;
        v7 = 1701736302;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x6574707972636E65;
      else
        v10 = 0x736E655365736163;
      if (v9 == 1)
        v11 = 0xE900000000000064;
      else
        v11 = 0xED00006576697469;
      if (v7 != v10)
        goto LABEL_19;
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      v12 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_21EA83178(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        v7 = 0xE400000000000000;
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v8 = 2003789939;
          v9 = a1;
          if (!a1)
            goto LABEL_14;
        }
        else
        {
          v8 = 1701079400;
          v9 = a1;
          if (!a1)
          {
LABEL_14:
            v11 = 0xE600000000000000;
            if (v8 != 0x656C67676F74)
              goto LABEL_16;
            goto LABEL_15;
          }
        }
      }
      else
      {
        v7 = 0xE600000000000000;
        v8 = 0x656C67676F74;
        v9 = a1;
        if (!a1)
          goto LABEL_14;
      }
      if (v9 == 1)
        v10 = 2003789939;
      else
        v10 = 1701079400;
      v11 = 0xE400000000000000;
      if (v8 != v10)
        goto LABEL_16;
LABEL_15:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_16:
      v12 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_21EA832E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_21EA83738();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_21EB0308C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_21EB0308C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_21EA833F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 24) = a5;
  swift_unknownObjectWeakInit();
  sub_21EB01F10();
  v8 = objc_msgSend(a1, sel_itemID);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = sub_21EA7A704;
  v9[4] = v7;
  v13[4] = sub_21EA8382C;
  v13[5] = v9;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_21EA81D44;
  v13[3] = &block_descriptor_22;
  v10 = _Block_copy(v13);
  v11 = a1;
  sub_21EB01F10();
  sub_21EB01F10();
  swift_release();
  FPCrossDeviceItemIDForItemID();
  _Block_release(v10);
  swift_release_n();

  return swift_release();
}

uint64_t _s26DocumentManagerExecutables25DOCUserActivityIdentifierO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void sub_21EA83580(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_21EA811E4(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_21EA83588(uint64_t result)
{
  if (result)
    return sub_21EB01F10();
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_21EA835C8(void *a1, void *a2)
{
  uint64_t v2;

  sub_21EA80EC8(a1, a2, *(void (**)(char *, void *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_21EA835D0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t type metadata accessor for DOCUserActivityController()
{
  return objc_opt_self();
}

unint64_t sub_21EA83628()
{
  unint64_t result;

  result = qword_25546A3D0;
  if (!qword_25546A3D0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCUserActivityIdentifier, &type metadata for DOCUserActivityIdentifier);
    atomic_store(result, (unint64_t *)&qword_25546A3D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCUserActivityIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EA836B8 + 4 * byte_21EB08E04[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EA836EC + 4 * byte_21EB08DFF[v4]))();
}

uint64_t sub_21EA836EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA836F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA836FCLL);
  return result;
}

uint64_t sub_21EA83708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA83710);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EA83714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8371C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCUserActivityIdentifier()
{
  return &type metadata for DOCUserActivityIdentifier;
}

unint64_t sub_21EA83738()
{
  unint64_t result;

  result = qword_25546C2F0;
  if (!qword_25546C2F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546C2F0);
  }
  return result;
}

uint64_t sub_21EA83774(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_21EA837B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EA837D8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21EA83804()
{
  uint64_t v0;

  return sub_21EA7F6F0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_21EA83830(uint64_t a1)
{
  return sub_21EA5CD54(a1, 1, &qword_2540A77E0);
}

Swift::Void __swiftcall FPItem.bumpLastOpenDate(delay:)(Swift::Double delay)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_21EB02384();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB02378();
  FPItem.setLastOpenDate(_:delay:)((uint64_t)v5, delay);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void FPItem.setLastOpenDate(_:delay:)(uint64_t a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;

  v5 = sub_21EB02A20();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB02A5C();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_21EB02A74();
  v42 = *(_QWORD *)(v44 - 8);
  v9 = MEMORY[0x24BDAC7A8](v44);
  v41 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)&v40 - v11;
  v12 = sub_21EB02384();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21EB07150;
  *(_QWORD *)(v16 + 32) = v2;
  aBlock = v16;
  sub_21EB02D08();
  v17 = objc_allocWithZone(MEMORY[0x24BDC8330]);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  v18 = v2;
  v19 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_21EB02348();
  v21 = objc_msgSend(v17, sel_initWithItems_date_, v19, v20);

  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v22 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v22, v15, v12);
  v55 = sub_21EA84360;
  v56 = v23;
  v24 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v52 = 1107296256;
  v53 = sub_21EA8423C;
  v54 = &block_descriptor_2;
  v25 = _Block_copy(&aBlock);
  v26 = v18;
  v27 = v21;
  swift_release();
  objc_msgSend(v27, sel_setActionCompletionBlock_, v25);
  _Block_release(v25);

  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v27;
  if (a2 == 0.0)
  {
    v29 = (void *)objc_opt_self();
    v30 = v27;
    v31 = objc_msgSend(v29, sel_defaultManager);
    objc_msgSend(v31, sel_scheduleAction_, v30);
    swift_release();

  }
  else
  {
    sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
    v40 = v27;
    v32 = (void *)sub_21EB02F54();
    v33 = v41;
    sub_21EB02A68();
    v34 = v43;
    MEMORY[0x2207B52C0](v33, a2);
    v42 = *(_QWORD *)(v42 + 8);
    v35 = v44;
    ((void (*)(char *, uint64_t))v42)(v33, v44);
    v55 = sub_21EA843C4;
    v56 = v28;
    aBlock = v24;
    v52 = 1107296256;
    v53 = sub_21EA5EAB0;
    v54 = &block_descriptor_6_0;
    v36 = _Block_copy(&aBlock);
    sub_21EB01F10();
    swift_release();
    v37 = v45;
    sub_21EB02A44();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA843CC();
    v38 = v48;
    v39 = v50;
    sub_21EB031DC();
    MEMORY[0x2207B5764](v34, v37, v38, v36);
    _Block_release(v36);

    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v47);
    ((void (*)(char *, uint64_t))v42)(v34, v35);
  }
}

void sub_21EA83DB8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  id v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  NSObject *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  _QWORD *v30;
  NSObject *v31;
  _QWORD *v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;

  v6 = sub_21EB02384();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = a1;
    if (qword_255469BA0 != -1)
      swift_once();
    v11 = sub_21EB0263C();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.Picker);
    v12 = a2;
    v13 = a1;
    v14 = v12;
    v15 = a1;
    v33 = sub_21EB02624();
    v16 = sub_21EB02EE8();
    if (os_log_type_enabled(v33, v16))
    {
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412546;
      v35 = v14;
      v19 = v14;
      sub_21EB03134();
      *v18 = v14;

      *(_WORD *)(v17 + 12) = 2112;
      v20 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v35 = v21;
      sub_21EB03134();
      v18[1] = v21;

      _os_log_impl(&dword_21EA4C000, v33, v16, "Failed to set Last Open date for item %@. Error: %@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v18, -1, -1);
      MEMORY[0x2207B6A18](v17, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_255469BA0 != -1)
      swift_once();
    v22 = sub_21EB0263C();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.Picker);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
    v23 = a2;
    v24 = sub_21EB02624();
    v25 = sub_21EB02ED0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v35 = v33;
      *(_DWORD *)v26 = 136315394;
      v27 = sub_21EB02330();
      v34 = sub_21EA591E4(v27, v28, (uint64_t *)&v35);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *(_WORD *)(v26 + 12) = 2112;
      v34 = (uint64_t)v23;
      v29 = v23;
      sub_21EB03134();
      v30 = v32;
      *v32 = v23;

      _os_log_impl(&dword_21EA4C000, v24, v25, "set Last Open date to '%s' for item %@.", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v30, -1, -1);
      v31 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v31, -1, -1);
      MEMORY[0x2207B6A18](v26, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    }
  }
}

void sub_21EA8423C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  sub_21EB01F10();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_21EA84290(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  objc_msgSend(v2, sel_scheduleAction_, a1);

}

uint64_t sub_21EA842EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21EB02384();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_21EA84360(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_21EB02384() - 8) + 80);
  sub_21EA83DB8(a1, *(void **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_21EA843A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EA843C4()
{
  uint64_t v0;

  sub_21EA84290(*(_QWORD *)(v0 + 16));
}

unint64_t sub_21EA843CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540A6D20;
  if (!qword_2540A6D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2540A6D10);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540A6D20);
  }
  return result;
}

id sub_21EA84418(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  if (objc_msgSend(v1, sel_isTrashed))
    v2 = (id)*MEMORY[0x24BDC8230];
  else
    v2 = objc_msgSend(v1, sel_parentItemIdentifier);
  v3 = v2;

  return v3;
}

id FPItem.effectiveParentItemIdentifier.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_isTrashed))
    return (id)*MEMORY[0x24BDC8230];
  else
    return objc_msgSend(v0, sel_parentItemIdentifier);
}

BOOL static FPItem.SharingStatusStringType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t FPItem.SharingStatusStringType.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t FPItem.SharingStatusStringType.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

BOOL sub_21EA84544(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static FPItem.SharingStatusOptions.compact.getter()
{
  return 1;
}

_QWORD *sub_21EA8456C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_21EA84578(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_21EA84580@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_21EA84594@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_21EA845A8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21EA845BC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_21EA845EC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_21EA84618@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_21EA8463C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_21EA84650(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_21EA84664(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_21EA84678@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21EA8468C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_21EA846A0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_21EA846B4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_21EA846C8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_21EA846D8()
{
  return sub_21EB031D0();
}

_QWORD *sub_21EA846F0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_21EA84704@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21EA96888();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t *FPItem.createDocumentSentinelItemIdentifier.unsafeMutableAddressor()
{
  return &static FPItem.createDocumentSentinelItemIdentifier;
}

uint64_t static FPItem.createDocumentSentinelItemIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static FPItem.createDocumentSentinelItemIdentifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static FPItem.createDocumentSentinelItemIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  static FPItem.createDocumentSentinelItemIdentifier = a1;
  qword_25546A448 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static FPItem.createDocumentSentinelItemIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Bool __swiftcall FPItem.doc_isCreateDocumentSentinel()()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v1 = objc_msgSend(v0, sel_itemIdentifier);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v3 = sub_21EB02B88();
  v5 = v4;
  if (v3 == sub_21EB02B88() && v5 == v6)
    v8 = 1;
  else
    v8 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8 & 1;
}

void URL.bumpLastOpenDate(delay:completionHandler:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = sub_21EB02300();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v12, v10, v7);
  *(double *)(v14 + v13) = a3;
  sub_21EA83588(a1);
  _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v3, (uint64_t)sub_21EA850D4, v14);
  swift_release();

}

void sub_21EA84A64(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[6];

  v51 = a4;
  v52 = a3;
  v10 = sub_21EB02384();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21EB02300();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v48 - v19;
  if (a2)
  {
    v50 = a1;
    v21 = a2;
    if (qword_255469BA0 != -1)
      swift_once();
    v22 = sub_21EB0263C();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.Picker);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, a5, v14);
    v23 = a2;
    v24 = a2;
    v25 = sub_21EB02624();
    v26 = sub_21EB02EE8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v48 = (_QWORD *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      aBlock[0] = v49;
      *(_DWORD *)v27 = 136315394;
      sub_21EA59DC8((unint64_t *)&qword_25546A2C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v28 = sub_21EB03488();
      v53 = sub_21EA591E4(v28, v29, aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      *(_WORD *)(v27 + 12) = 2112;
      v30 = a2;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      v53 = v31;
      sub_21EB03134();
      v32 = v48;
      *v48 = v31;

      _os_log_impl(&dword_21EA4C000, v25, v26, "Failed to retrieve item from url %s. Error: %@", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v32, -1, -1);
      v33 = v49;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v33, -1, -1);
      MEMORY[0x2207B6A18](v27, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    a1 = v50;
    v35 = v52;
    if (v52)
      goto LABEL_11;
  }
  else
  {
    if (a1)
    {
      v34 = a1;
      sub_21EB02378();
      FPItem.setLastOpenDate(_:delay:)((uint64_t)v13, a6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      v35 = v52;
      if (!v52)
        return;
      goto LABEL_11;
    }
    if (qword_255469BA0 != -1)
      swift_once();
    v40 = sub_21EB0263C();
    __swift_project_value_buffer(v40, (uint64_t)static Logger.Picker);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a5, v14);
    v41 = sub_21EB02624();
    v42 = sub_21EB02EE8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v50 = 0;
      v45 = v44;
      aBlock[0] = v44;
      *(_DWORD *)v43 = 136315138;
      sub_21EA59DC8((unint64_t *)&qword_25546A2C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v46 = sub_21EB03488();
      v53 = sub_21EA591E4(v46, v47, aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      _os_log_impl(&dword_21EA4C000, v41, v42, "Failed to retrieve item from url %s. With no error.", v43, 0xCu);
      swift_arrayDestroy();
      a1 = v50;
      MEMORY[0x2207B6A18](v45, -1, -1);
      MEMORY[0x2207B6A18](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }

    v35 = v52;
    if (v52)
    {
LABEL_11:
      v36 = (_QWORD *)swift_allocObject();
      v37 = v51;
      v36[2] = v35;
      v36[3] = v37;
      v36[4] = a1;
      aBlock[4] = (uint64_t)sub_21EA85444;
      aBlock[5] = (uint64_t)v36;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21EA5EAB0;
      aBlock[3] = (uint64_t)&block_descriptor_15;
      v38 = _Block_copy(aBlock);
      sub_21EA83588(v35);
      v39 = a1;
      sub_21EA83588(v35);
      swift_release();
      DOCRunInMainThread();
      _Block_release(v38);
      sub_21EA5CA7C(v35);
    }
  }
}

uint64_t sub_21EA8504C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 32) & ~v3), v1);
  return swift_deallocObject();
}

void sub_21EA850D4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_21EB02300() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_21EA84A64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(double *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_21EA8513C()
{
  unint64_t result;

  result = qword_25546A450;
  if (!qword_25546A450)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for FPItem.SharingStatusStringType, &type metadata for FPItem.SharingStatusStringType);
    atomic_store(result, (unint64_t *)&qword_25546A450);
  }
  return result;
}

unint64_t sub_21EA85184()
{
  unint64_t result;

  result = qword_25546A458;
  if (!qword_25546A458)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for FPItem.SharingStatusOptions, &type metadata for FPItem.SharingStatusOptions);
    atomic_store(result, (unint64_t *)&qword_25546A458);
  }
  return result;
}

unint64_t sub_21EA851CC()
{
  unint64_t result;

  result = qword_25546A460;
  if (!qword_25546A460)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for FPItem.SharingStatusOptions, &type metadata for FPItem.SharingStatusOptions);
    atomic_store(result, (unint64_t *)&qword_25546A460);
  }
  return result;
}

unint64_t sub_21EA85214()
{
  unint64_t result;

  result = qword_25546A468;
  if (!qword_25546A468)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for FPItem.SharingStatusOptions, &type metadata for FPItem.SharingStatusOptions);
    atomic_store(result, (unint64_t *)&qword_25546A468);
  }
  return result;
}

unint64_t sub_21EA8525C()
{
  unint64_t result;

  result = qword_25546A470;
  if (!qword_25546A470)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for FPItem.SharingStatusOptions, &type metadata for FPItem.SharingStatusOptions);
    atomic_store(result, (unint64_t *)&qword_25546A470);
  }
  return result;
}

uint64_t _s23SharingStatusStringTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23SharingStatusStringTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EA8537C + 4 * byte_21EB08F25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EA853B0 + 4 * byte_21EB08F20[v4]))();
}

uint64_t sub_21EA853B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA853B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA853C0);
  return result;
}

uint64_t sub_21EA853CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA853D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EA853D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA853E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21EA853EC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FPItem.SharingStatusStringType()
{
  return &type metadata for FPItem.SharingStatusStringType;
}

ValueMetadata *type metadata accessor for FPItem.SharingStatusOptions()
{
  return &type metadata for FPItem.SharingStatusOptions;
}

uint64_t sub_21EA85418()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21EA85444()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

BOOL static DOCAdjustmentDirection.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DOCAdjustmentDirection.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCAdjustmentDirection.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t SignedNumeric.advanced(amount:direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  _QWORD v14[3];

  v14[2] = a3;
  v14[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v14 - v10;
  swift_getAssociatedConformanceWitness();
  sub_21EB03500();
  sub_21EB034AC();
  sub_21EB02E4C();
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, a2);
  sub_21EB033E0();
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

unint64_t sub_21EA85698()
{
  unint64_t result;

  result = qword_25546A478;
  if (!qword_25546A478)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAdjustmentDirection, &type metadata for DOCAdjustmentDirection);
    atomic_store(result, (unint64_t *)&qword_25546A478);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCAdjustmentDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EA85728 + 4 * byte_21EB091A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EA8575C + 4 * asc_21EB091A0[v4]))();
}

uint64_t sub_21EA8575C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA85764(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA8576CLL);
  return result;
}

uint64_t sub_21EA85778(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA85780);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EA85784(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8578C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAdjustmentDirection()
{
  return &type metadata for DOCAdjustmentDirection;
}

uint64_t DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21EA857F0(a1, a2, a3, a4, (SEL *)&selRef_displayName, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21EA85884);
}

uint64_t type metadata accessor for DOCRenameOperation()
{
  return objc_opt_self();
}

uint64_t DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21EA857F0(a1, a2, a3, a4, (SEL *)&selRef_filename, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21EA859A4);
}

uint64_t sub_21EA857F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5, uint64_t (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v11 = objc_msgSend(a1, *a5);
  v12 = sub_21EB02B88();
  v14 = v13;

  v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
  return a6(a1, a2, a3, v12, v14, a4);
}

char *sub_21EA85884(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  objc_super v19;

  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item] = a1;
  v8 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v9 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName];
  *(_QWORD *)v10 = a4;
  *((_QWORD *)v10 + 1) = a5;
  v11 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager] = a6;
  v12 = a1;
  swift_bridgeObjectRetain();
  v13 = a6;
  v14 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for DOCRenameOperation();
  v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithItem_newDisplayName_, v12, v14);

  v16 = *(void **)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager];
  v17 = v15;
  objc_msgSend(v16, sel_registerUndoOperationForSender_, v17);

  return v17;
}

char *sub_21EA859A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  objc_super v19;

  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item] = a1;
  v8 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName];
  *(_QWORD *)v9 = a2;
  *((_QWORD *)v9 + 1) = a3;
  v10 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName];
  *(_QWORD *)v11 = a4;
  *((_QWORD *)v11 + 1) = a5;
  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager] = a6;
  v12 = a1;
  swift_bridgeObjectRetain();
  v13 = a6;
  v14 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for DOCRenameOperation();
  v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithItem_newFileName_, v12, v14);

  v16 = *(void **)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager];
  v17 = v15;
  objc_msgSend(v16, sel_registerUndoOperationForSender_, v17);

  return v17;
}

id DOCRenameOperation.actionNameForUndoing.getter()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v1 = result;
    v2 = sub_21EB02168();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *DOCRenameOperation.operationForRedoing()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName + 8);
  if (v1
    && (v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName + 8)) != 0)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName);
    v5 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
    v7 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_21EA85884(v5, v3, v1, v4, v2, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName + 8);
    if (v9
      && (v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName + 8)) != 0)
    {
      v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName);
      v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName);
      v13 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
      v14 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
      v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_21EA859A4(v13, v11, v9, v12, v10, v14);
    }
    else
    {
      return 0;
    }
  }
}

char *DOCRenameOperation.operationForUndoing()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName + 8);
  if (v1
    && (v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName + 8)) != 0)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newDisplayName);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldDisplayName);
    v5 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
    v7 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_21EA85884(v5, v4, v2, v3, v1, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName + 8);
    if (v9
      && (v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName + 8)) != 0)
    {
      v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_newFileName);
      v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_oldFileName);
      v13 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_item);
      v14 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager);
      v15 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_21EA859A4(v13, v12, v10, v11, v9, v14);
    }
    else
    {
      return 0;
    }
  }
}

Swift::Void __swiftcall DOCRenameOperation.registerUndo()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCRenameOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

id DOCRenameOperation.__allocating_init(item:newName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21EA86018(a1, a2, a3, (SEL *)&selRef_initWithItem_newName_);
}

void DOCRenameOperation.init(item:newName:)()
{
  sub_21EA860B0();
}

id DOCRenameOperation.__allocating_init(item:newFileName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21EA86018(a1, a2, a3, (SEL *)&selRef_initWithItem_newFileName_);
}

void DOCRenameOperation.init(item:newFileName:)()
{
  sub_21EA860B0();
}

id DOCRenameOperation.__allocating_init(item:newDisplayName:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_21EA86018(a1, a2, a3, (SEL *)&selRef_initWithItem_newDisplayName_);
}

id sub_21EA86018(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_class *v4;
  id v7;
  void *v8;
  id v9;

  v7 = objc_allocWithZone(v4);
  v8 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, *a4, a1, v8);

  return v9;
}

void DOCRenameOperation.init(item:newDisplayName:)()
{
  sub_21EA860B0();
}

void sub_21EA860B0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21EA860E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCRenameOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRenameOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s26DocumentManagerExecutables17DOCSplitViewStateV11descriptionSSvg_0()
{
  sub_21EB032E4();
  sub_21EB02C0C();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  return 0;
}

uint64_t sub_21EA863A4()
{
  return _s26DocumentManagerExecutables17DOCSplitViewStateV11descriptionSSvg_0();
}

uint64_t DOCSplitViewState.isCollapsed.getter(char a1)
{
  return a1 & 1;
}

uint64_t DOCSplitViewState.displayMode.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DOCSplitViewState.isSidebarShownInOverlay.getter(int a1, uint64_t a2)
{
  return (a2 == 3) & ~a1;
}

uint64_t DOCSplitViewState.isSidebarShownInline.getter(int a1, uint64_t a2)
{
  return (a2 == 2) & ~a1;
}

uint64_t DOCSplitViewState.isSidebarShown.getter(int a1, uint64_t a2)
{
  return ((a2 & 0xFFFFFFFFFFFFFFFELL) == 2) & ~a1;
}

id DOCSplitViewState.init(forSplitViewController:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_isCollapsed);
  objc_msgSend(a1, sel_displayMode);

  return v2;
}

uint64_t DOCSplitViewState.with(isCollapsed:)(char a1)
{
  return a1 & 1;
}

uint64_t DOCSplitViewState.with(displayMode:)(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t static DOCSplitViewState.isHideOverlayTransition(fromState:toState:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  char v4;

  v4 = a3 | (a4 != 3);
  if (a2 != 3)
    v4 = 0;
  if ((a1 & 1) != 0)
    v4 = 0;
  return v4 & 1;
}

BOOL static DOCSplitViewState.isShowOverlayTransition(fromState:toState:)(char a1, uint64_t a2, char a3, uint64_t a4)
{
  _BOOL8 result;

  if ((a1 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    return a4 == 3;
  }
  result = 0;
  if (a2 != 3 && (a3 & 1) == 0)
    return a4 == 3;
  return result;
}

uint64_t sub_21EA864B8()
{
  return sub_21EA864D0();
}

uint64_t sub_21EA864C4()
{
  return sub_21EA864D0();
}

uint64_t sub_21EA864D0()
{
  void *v0;
  id v1;
  uint64_t v2;

  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v1 = sub_21EAAE714(v0, (const void *)static UIViewController.associatedObjectStorageKey);
  swift_getKeyPath();
  v2 = sub_21EA87018();
  swift_release();

  return v2;
}

void sub_21EA8657C(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v4 = sub_21EAAE714(v3, (const void *)static UIViewController.associatedObjectStorageKey);
  swift_getKeyPath();
  v5 = sub_21EA87018();
  v7 = v6;
  swift_release();

  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_21EA86638(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t KeyPath;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v5 = sub_21EAAE714(v4, (const void *)static UIViewController.associatedObjectStorageKey);
  KeyPath = swift_getKeyPath();
  sub_21EA872B0(v2, v3, KeyPath);

  return swift_release();
}

void __swiftcall DOCSplitViewState.init()(DOCSplitViewState *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id DOCSplitViewState.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_OWORD *)(v0 + OBJC_IVAR___DOCSplitViewState__impl) = xmmword_21EB093C0;
  v2.super_class = (Class)DOCSplitViewState;
  return objc_msgSendSuper2(&v2, sel_init);
}

char *sub_21EA869E0(void *a1)
{
  id v1;
  char *v2;

  v1 = a1;
  v2 = UISplitViewController.doc_splitViewStateTransitionStart.getter();

  return v2;
}

char *UISplitViewController.doc_splitViewStateTransitionStart.getter()
{
  return sub_21EA86A70();
}

uint64_t sub_21EA86A1C(uint64_t result, uint64_t a2, char *a3)
{
  return sub_21EA86B5C(result, a2, a3);
}

void UISplitViewController.doc_splitViewStateTransitionStart.setter(char *a1)
{
  sub_21EA86C74(a1);
}

char *sub_21EA86A34(void *a1)
{
  id v1;
  char *v2;

  v1 = a1;
  v2 = UISplitViewController.doc_splitViewStateTransitionEnd.getter();

  return v2;
}

char *UISplitViewController.doc_splitViewStateTransitionEnd.getter()
{
  return sub_21EA86A70();
}

char *sub_21EA86A70()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t *v6;

  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v1 = sub_21EAAE714(v0, (const void *)static UIViewController.associatedObjectStorageKey);
  swift_getKeyPath();
  v2 = sub_21EA87018();
  v4 = v3;
  swift_release();

  result = 0;
  if (v2 != 2)
  {
    result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
    v6 = (uint64_t *)&result[OBJC_IVAR___DOCSplitViewState__impl];
    *v6 = v2;
    v6[1] = v4;
  }
  return result;
}

uint64_t sub_21EA86B50(uint64_t result, uint64_t a2, char *a3)
{
  return sub_21EA86B5C(result, a2, a3);
}

uint64_t sub_21EA86B5C(uint64_t result, uint64_t a2, char *a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t KeyPath;

  v4 = (void *)result;
  if (a3)
  {
    v5 = *(_QWORD *)&a3[OBJC_IVAR___DOCSplitViewState__impl];
    if (v5 == 2)
    {
      __break(1u);
      return result;
    }
    v6 = *(_QWORD *)&a3[OBJC_IVAR___DOCSplitViewState__impl + 8];
    v7 = a3;
  }
  else
  {
    v6 = 0;
    LOBYTE(v5) = 2;
  }
  v8 = qword_2540A6E00;
  v9 = v4;
  if (v8 != -1)
    swift_once();
  swift_beginAccess();
  v10 = sub_21EAAE714(v9, (const void *)static UIViewController.associatedObjectStorageKey);
  KeyPath = swift_getKeyPath();
  sub_21EA872B0(v5, v6, KeyPath);

  return swift_release();
}

void UISplitViewController.doc_splitViewStateTransitionEnd.setter(char *a1)
{
  sub_21EA86C74(a1);
}

void sub_21EA86C74(char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t KeyPath;

  if (a1)
  {
    v3 = *(_QWORD *)&a1[OBJC_IVAR___DOCSplitViewState__impl];
    if (v3 == 2)
    {
      __break(1u);
      return;
    }
    v4 = *(_QWORD *)&a1[OBJC_IVAR___DOCSplitViewState__impl + 8];
  }
  else
  {
    v4 = 0;
    LOBYTE(v3) = 2;
  }
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v5 = sub_21EAAE714(v1, (const void *)static UIViewController.associatedObjectStorageKey);
  KeyPath = swift_getKeyPath();
  sub_21EA872B0(v3, v4, KeyPath);

  swift_release();
}

char *sub_21EA86D60(void *a1)
{
  id v1;
  char *v2;

  v1 = a1;
  v2 = UISplitViewController.doc_splitViewState.getter();

  return v2;
}

char *UISplitViewController.doc_splitViewState.getter()
{
  void *v0;
  char *result;
  id v2;
  unsigned int v3;
  id v4;
  char *v5;

  result = (char *)objc_msgSend(v0, sel_doc_splitViewStateTransitionEnd);
  if (!result)
  {
    result = (char *)objc_msgSend(v0, sel_doc_splitViewStateTransitionStart);
    if (!result)
    {
      v2 = v0;
      v3 = objc_msgSend(v2, sel_isCollapsed);
      v4 = objc_msgSend(v2, sel_displayMode);

      result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
      v5 = &result[OBJC_IVAR___DOCSplitViewState__impl];
      *(_QWORD *)v5 = v3;
      *((_QWORD *)v5 + 1) = v4;
    }
  }
  return result;
}

void __swiftcall DOCSplitViewState._bridgeToObjectiveC()(DOCSplitViewState *__return_ptr retstr)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char *v5;
  char *v6;

  v3 = v2;
  v4 = v1;
  v5 = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
  v6 = &v5[OBJC_IVAR___DOCSplitViewState__impl];
  *(_QWORD *)v6 = v4 & 1;
  *((_QWORD *)v6 + 1) = v3;
}

__n128 static DOCSplitViewState._forceBridgeFromObjectiveC(_:result:)(uint64_t a1, __n128 *a2)
{
  __n128 result;

  result = *(__n128 *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  *a2 = result;
  return result;
}

uint64_t static DOCSplitViewState._conditionallyBridgeFromObjectiveC(_:result:)(uint64_t a1, _OWORD *a2)
{
  *a2 = *(_OWORD *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  return 1;
}

uint64_t static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)(uint64_t result)
{
  uint64_t v1;

  if (result)
  {
    v1 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
    if (v1 != 2)
      return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_21EA86EEC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char *result;
  char *v4;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  result = (char *)objc_msgSend(objc_allocWithZone((Class)DOCSplitViewState), sel_init);
  v4 = &result[OBJC_IVAR___DOCSplitViewState__impl];
  *(_QWORD *)v4 = v1;
  *((_QWORD *)v4 + 1) = v2;
  return result;
}

__n128 sub_21EA86F34(uint64_t a1, __n128 *a2)
{
  __n128 result;

  result = *(__n128 *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  *a2 = result;
  return result;
}

uint64_t sub_21EA86F48(uint64_t a1, _OWORD *a2)
{
  *a2 = *(_OWORD *)(a1 + OBJC_IVAR___DOCSplitViewState__impl);
  return 1;
}

uint64_t sub_21EA86F60@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (result)
  {
    v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
    if (v2 != 2)
    {
      v3 = *(_QWORD *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8);
      *(_BYTE *)a2 = v2 & 1;
      *(_QWORD *)(a2 + 8) = v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DOCSplitViewState.description.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + OBJC_IVAR___DOCSplitViewState__impl) != 2)
    return _s26DocumentManagerExecutables17DOCSplitViewStateV11descriptionSSvg_0();
  __break(1u);
  return result;
}

uint64_t sub_21EA87018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + qword_25546B380);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB01F10();
    v4 = sub_21EA59F28(v3);
    if ((v5 & 1) != 0)
    {
      sub_21EA5A05C(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      v7 = 0u;
      v8 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  if (swift_dynamicCast())
    return v9;
  else
    return 2;
}

uint64_t sub_21EA870F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + qword_25546B380);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB01F10();
    v4 = sub_21EA59F28(v3);
    if ((v5 & 1) != 0)
    {
      sub_21EA5A05C(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      v7 = 0u;
      v8 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  type metadata accessor for FINodeItemCountFetcher();
  if (swift_dynamicCast())
    return v9;
  else
    return 0;
}

uint64_t sub_21EA871D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + qword_25546B380);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB01F10();
    v4 = sub_21EA59F28(v3);
    if ((v5 & 1) != 0)
    {
      sub_21EA5A05C(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v7);
    }
    else
    {
      v7 = 0u;
      v8 = 0u;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A510);
  if (swift_dynamicCast())
    return v9;
  else
    return 0;
}

uint64_t sub_21EA872B0(char a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  ValueMetadata *v6;

  if (a1 == 2)
  {
    swift_beginAccess();
    sub_21EA59E44(a3, &v5);
    sub_21EA5B5B0((uint64_t)&v5);
  }
  else
  {
    LOBYTE(v5) = a1 & 1;
    v6 = &type metadata for DOCSplitViewState;
    *((_QWORD *)&v5 + 1) = a2;
    swift_beginAccess();
    sub_21EB01F10();
    sub_21EA5946C((uint64_t)&v5, a3);
  }
  return swift_endAccess();
}

void sub_21EA8736C(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_21EA8657C(a1, a2);
}

uint64_t sub_21EA87388(uint64_t *a1, void **a2)
{
  return sub_21EA86638(a1, a2);
}

void sub_21EA873A4(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_21EA8657C(a1, a2);
}

uint64_t sub_21EA873C0(uint64_t *a1, void **a2)
{
  return sub_21EA86638(a1, a2);
}

ValueMetadata *type metadata accessor for DOCSplitViewState()
{
  return &type metadata for DOCSplitViewState;
}

unint64_t type metadata accessor for DOCSplitViewState()
{
  unint64_t result;

  result = qword_25546A508;
  if (!qword_25546A508)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546A508);
  }
  return result;
}

uint64_t _s26DocumentManagerExecutables17DOCSplitViewStateV4ImplVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s26DocumentManagerExecutables17DOCSplitViewStateV4ImplVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSplitViewState.Impl()
{
  return &type metadata for DOCSplitViewState.Impl;
}

uint64_t sub_21EA874D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
  if (v2 == 2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___DOCSplitViewState__impl);
  if (v3 == 2)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v4 = 0;
  if ((v2 & 1) == 0 && *(_QWORD *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3)
    v4 = v3 | (*(_QWORD *)(a2 + OBJC_IVAR___DOCSplitViewState__impl + 8) != 3);
  return v4 & 1;
}

BOOL sub_21EA87530(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(unsigned __int8 *)(result + OBJC_IVAR___DOCSplitViewState__impl);
  if (v2 == 2)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___DOCSplitViewState__impl);
  if (v3 == 2)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if ((v2 & 1) != 0)
  {
    if ((v3 & 1) != 0)
      return 0;
  }
  else if (*(_QWORD *)(result + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3 || (v3 & 1) != 0)
  {
    return 0;
  }
  return *(_QWORD *)(a2 + OBJC_IVAR___DOCSplitViewState__impl + 8) == 3;
}

BOOL != infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return (== infix(_:_:)(a1, a2) & 1) == 0;
}

void *DOCNode.description.getter()
{
  void *v0;
  id v1;

  objc_opt_self();
  v0 = (void *)swift_dynamicCastObjCClass();
  if (v0 || (objc_opt_self(), (v0 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    swift_unknownObjectRetain();
    v1 = objc_msgSend(v0, sel_debugDescription);
    v0 = (void *)sub_21EB02B88();
    swift_unknownObjectRelease();

  }
  return v0;
}

id DOCNode.doc_isAppContainerRoot.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_fpfs_fpItem);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_doc_isAppContainerRoot);

  return v3;
}

uint64_t sub_21EA87820()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EA87844(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v5 = a1;

  return sub_21EB03038();
}

uint64_t sub_21EA878A4(void *a1)
{
  uint64_t v1;

  return sub_21EA87844(a1, *(_QWORD *)(v1 + 16));
}

void DOCNode.fpfs_fetchFPItem(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v7[4] = sub_21EA5EA88;
  v7[5] = v5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_21EA81D44;
  v7[3] = &block_descriptor_3;
  v6 = _Block_copy(v7);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v2, sel_fetchFPItem_, v6);
  _Block_release(v6);
}

uint64_t DOCNode.fpfs_fetchFPItem()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_21EA87980()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A548);
  *v2 = v0;
  v2[1] = sub_21EA87A30;
  return sub_21EB034E8();
}

uint64_t sub_21EA87A30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21EA87A9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21EA87AA8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21EA87ADC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7E0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_21EA8F950;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA81D44;
  aBlock[3] = &block_descriptor_176;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchFPItem_, v9);
  _Block_release(v9);
}

void sub_21EA87C0C(uint64_t a1)
{
  uint64_t v1;

  sub_21EA87ADC(a1, *(void **)(v1 + 24));
}

uint64_t sub_21EA87C14(void *a1, id a2)
{
  id v2;
  id v4;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7E0);
    return sub_21EB02DBC();
  }
  else
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7E0);
    return sub_21EB02DC8();
  }
}

uint64_t Array<A>.fpfs_syncFetchAvailableFPItems()(uint64_t a1, uint64_t a2)
{
  dispatch_semaphore_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = dispatch_semaphore_create(0);
  v9 = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = &v9;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = v4;
  Array<A>.fpfs_fetchAvailableFPItems(completion:)((void (*)(uint64_t))sub_21EA87DBC, v5, a1, a2);
  swift_release();
  sub_21EB0302C();
  result = swift_beginAccess();
  v8 = v9;
  if (v9)
  {

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21EA87D38(uint64_t a1, _QWORD *a2)
{
  swift_beginAccess();
  *a2 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return sub_21EB03038();
}

uint64_t sub_21EA87D98()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EA87DBC(uint64_t a1)
{
  uint64_t v1;

  return sub_21EA87D38(a1, *(_QWORD **)(v1 + 16));
}

uint64_t Array<A>.fpfs_fetchAvailableFPItems(completion:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = MEMORY[0x24BEE4AF8];
  v7 = dispatch_group_create();
  v8 = swift_bridgeObjectRetain();
  if (MEMORY[0x2207B55B4](v8, a4))
  {
    v9 = 4;
    do
    {
      v10 = v9 - 4;
      v11 = sub_21EB02D50();
      sub_21EB02D14();
      if ((v11 & 1) != 0)
      {
        swift_unknownObjectRetain();
        v12 = v9 - 3;
        if (__OFADD__(v10, 1))
          goto LABEL_9;
      }
      else
      {
        sub_21EB03308();
        v12 = v9 - 3;
        if (__OFADD__(v10, 1))
        {
LABEL_9:
          __break(1u);
          break;
        }
      }
      dispatch_group_enter(v7);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v6;
      *(_QWORD *)(v13 + 24) = v7;
      sub_21EB01F10();
      v14 = v7;
      DOCNode.fpfs_fetchFPItem(completion:)((uint64_t)sub_21EA8DB70, v13);
      swift_unknownObjectRelease();
      swift_release();
      ++v9;
    }
    while (v12 != MEMORY[0x2207B55B4](a3, a4));
  }
  swift_bridgeObjectRelease();
  sub_21EB02F18();
  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  a1(v15);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21EA87F7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21EA87FA0(void *a1, uint64_t a2, dispatch_group_t group)
{
  _QWORD *v5;
  id v6;

  if (a1)
  {
    v5 = (_QWORD *)(a2 + 16);
    swift_beginAccess();
    v6 = a1;
    MEMORY[0x2207B5500]();
    if (*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_21EB02D20();
    sub_21EB02D5C();
    sub_21EB02D08();
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

uint64_t Array<A>.fpfs_fetchAllFPItems(completion:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = MEMORY[0x24BEE4AF8];
  v20 = (_QWORD *)(v6 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A550);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  v8 = dispatch_group_create();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 0;
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2207B55B4](v10, a4))
    goto LABEL_10;
  v11 = 4;
  while (1)
  {
    v12 = v11 - 4;
    v13 = sub_21EB02D50();
    sub_21EB02D14();
    if ((v13 & 1) == 0)
      break;
    swift_unknownObjectRetain();
    v14 = v11 - 3;
    if (__OFADD__(v12, 1))
      goto LABEL_9;
LABEL_5:
    dispatch_group_enter(v8);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v9;
    v15[3] = v7;
    v15[4] = v6;
    v15[5] = v8;
    sub_21EB01F10();
    sub_21EB01F10();
    sub_21EB01F10();
    v16 = v8;
    DOCNode.fpfs_fetchFPItem(completion:)((uint64_t)sub_21EA8DBC4, (uint64_t)v15);
    swift_unknownObjectRelease();
    swift_release();
    ++v11;
    if (v14 == MEMORY[0x2207B55B4](a3, a4))
      goto LABEL_10;
  }
  sub_21EB03308();
  v14 = v11 - 3;
  if (!__OFADD__(v12, 1))
    goto LABEL_5;
LABEL_9:
  __break(1u);
LABEL_10:
  swift_bridgeObjectRelease();
  sub_21EB02F18();
  swift_beginAccess();
  if (*v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 == MEMORY[0x2207B5590](a3, a4))
  {
    v18 = swift_bridgeObjectRetain();
    a1(v18);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    a1(0);
    swift_release();
    swift_release();
  }

  return swift_release();
}

void sub_21EA882CC(void *a1, uint64_t a2, os_unfair_lock_s *a3, uint64_t a4, NSObject *a5)
{
  BOOL v10;
  os_unfair_lock_s *v11;
  id v12;
  id v13;

  v10 = a1 == 0;
  swift_beginAccess();
  *(_BYTE *)(a2 + 16) = v10;
  if (a1)
  {
    v11 = a3 + 4;
    v12 = a1;
    os_unfair_lock_lock(v11);
    swift_beginAccess();
    v13 = v12;
    MEMORY[0x2207B5500]();
    if (*(_QWORD *)((*(_QWORD *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_21EB02D20();
    sub_21EB02D5C();
    sub_21EB02D08();
    swift_endAccess();
    os_unfair_lock_unlock(v11);

  }
  dispatch_group_leave(a5);
}

uint64_t Array<A>.fpfs_syncFetchAllFPItems()(uint64_t a1, uint64_t a2)
{
  dispatch_semaphore_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v8;

  v4 = dispatch_semaphore_create(0);
  v8 = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = &v8;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = v4;
  Array<A>.fpfs_fetchAllFPItems(completion:)((void (*)(uint64_t))sub_21EA8DBD0, v5, a1, a2);
  swift_release();
  sub_21EB0302C();

  swift_beginAccess();
  return v8;
}

uint64_t sub_21EA88470(uint64_t a1, _QWORD *a2)
{
  swift_beginAccess();
  *a2 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_21EB03038();
}

BOOL static DOCNodeType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DOCNodeType.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCNodeType.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t DOCNode.isSharedServerNode.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_providerDomainID);
  v2 = DOCProviderDomainIDIsSharedServerDomainID();

  return v2;
}

BOOL DOCNode.nodeType.getter()
{
  objc_opt_self();
  return swift_dynamicCastObjCClass() != 0;
}

BOOL DOCNode.isFINode.getter()
{
  objc_opt_self();
  return swift_dynamicCastObjCClass() != 0;
}

BOOL DOCNode.isFPItem.getter()
{
  objc_opt_self();
  return swift_dynamicCastObjCClass() == 0;
}

uint64_t DOCNode.sourceIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_providerDomainID);
  sub_21EB02B88();

  v2 = sub_21EB02B58();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_21EA88688()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1490]), sel_init);
  result = objc_msgSend(v0, sel_setCountStyle_, 0);
  qword_25546A520 = (uint64_t)v0;
  return result;
}

uint64_t sub_21EA886D4(int a1)
{
  void *v1;
  id v3;
  id v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t j;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  int64_t v28;

  v3 = objc_msgSend(v1, sel_fpfs_fpItem);
  if (!v3)
    return (uint64_t)v3;
  v4 = objc_msgSend(v1, sel_itemDecorations);
  sub_21EA579D4(0, &qword_25546A7D8);
  v5 = sub_21EB02CF0();

  v6 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v4 = (id)v5;
    else
      v4 = (id)(v5 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v7 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v27 = v3;
    if (v7)
      goto LABEL_4;
LABEL_25:
    result = swift_bridgeObjectRelease();
    v4 = 0;
    v5 = MEMORY[0x24BEE4AF8];
    if ((a1 & 1) == 0)
      goto LABEL_42;
    goto LABEL_26;
  }
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v27 = v3;
  if (!v7)
    goto LABEL_25;
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  LODWORD(v25) = a1;
  for (i = 0; i != v7; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x2207B5B3C](i, v5);
    else
      v9 = *(id *)(v5 + 8 * i + 32);
    v10 = v9;
    v11 = objc_msgSend(v9, sel_type, v25);
    v12 = sub_21EB02B88();
    v14 = v13;
    if (v12 == sub_21EB02B88() && v14 == v15)
    {

      swift_bridgeObjectRelease_n();
LABEL_7:
      sub_21EB03338();
      sub_21EB03368();
      sub_21EB03374();
      sub_21EB03344();
      continue;
    }
    v17 = sub_21EB034C4();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_7;

  }
  result = swift_bridgeObjectRelease();
  v4 = 0;
  v5 = v28;
  v3 = v27;
  v6 = MEMORY[0x24BEE4AF8];
  if ((v25 & 1) == 0)
    goto LABEL_42;
LABEL_26:
  v28 = v6;
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v19 = *(_QWORD *)(v5 + 16);
    if (v19)
      goto LABEL_29;
LABEL_41:
    swift_release();
    v5 = MEMORY[0x24BEE4AF8];
    goto LABEL_42;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  v19 = sub_21EB0341C();
  result = swift_release();
  if (!v19)
    goto LABEL_41;
LABEL_29:
  v26 = v4;
  if (v19 < 1)
  {
    __break(1u);
  }
  else
  {
    for (j = 0; j != v19; ++j)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x2207B5B3C](j, v5);
      else
        v21 = *(id *)(v5 + 8 * j + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_decorationIdentifier, v26);
      sub_21EB02B88();

      LOBYTE(v23) = sub_21EAED1F8();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        sub_21EB03338();
        sub_21EB03368();
        sub_21EB03374();
        sub_21EB03344();
      }
      else
      {

      }
    }
    swift_release();
    v5 = v28;
    v3 = v27;
LABEL_42:
    v24 = v3;
    v3 = (id)sub_21EA8DC1C(0, 0, v5, (uint64_t)v24);
    swift_bridgeObjectRelease();

    return (uint64_t)v3;
  }
  return result;
}

id sub_21EA88AB4(uint64_t a1, uint64_t a2, char a3)
{
  id result;
  void *v6;
  uint64_t v7;

  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    return (id)a1;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v6 = result;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_21EB08F10;
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    a1 = sub_21EB02B64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)a1;
  }
  __break(1u);
  return result;
}

id sub_21EA88BFC()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id result;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  if (!objc_msgSend(v1, sel_isFolder)
    || objc_msgSend(v1, sel_nodePermissions_, 2048) != 2048)
  {
    v10 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v11 = sub_21EB02B88();

    return (id)v11;
  }

  v2 = objc_msgSend(v1, sel_childItemCount);
  if (!v2)
    goto LABEL_9;
  v3 = v2;
  if (((unint64_t)objc_msgSend(v2, sel_integerValue) & 0x8000000000000000) != 0)
  {

LABEL_9:
    v12 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v13 = sub_21EB02B88();

    return (id)v13;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v5 = result;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_21EB08F10;
    v7 = objc_msgSend(v3, sel_integerValue, 0x800000021EB0FFF0);
    v8 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v6 + 64) = v8;
    *(_QWORD *)(v6 + 32) = v7;
    v9 = sub_21EB02B64();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_21EA88DF8()
{
  void *v0;
  id v1;
  void *v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_childItemCount);
  if (!v1)
    goto LABEL_6;
  v2 = v1;
  if (((unint64_t)objc_msgSend(v1, sel_integerValue) & 0x8000000000000000) != 0)
  {

LABEL_6:
    v9 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
    v10 = sub_21EB02B88();

    return (id)v10;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v4 = result;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_21EB08F10;
    v6 = objc_msgSend(v2, sel_integerValue, 0x800000021EB0FFF0);
    v7 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v5 + 64) = v7;
    *(_QWORD *)(v5 + 32) = v6;
    v8 = sub_21EB02B64();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21EA88F8C()
{
  uint64_t result;

  result = sub_21EA8E2F8((uint64_t)&unk_24E327FE0);
  qword_25546A528 = result;
  return result;
}

BOOL sub_21EA88FB0(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_21EB035A8();
  sub_21EB035CC();
  v4 = sub_21EB035E4();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_21EA8909C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_21EB035A8();
    sub_21EB02BDC();
    v6 = sub_21EB035E4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_21EB034C4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_21EB034C4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_21EA891D0(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_21EB03278();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_21EB03080(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_21EB0308C();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_21EB0308C();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_21EA8932C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[6];
  uint64_t v12;
  uint64_t v13;

  v12 = 0;
  v13 = 0;
  v5 = *(NSObject **)(v2 + 16);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v12;
  v6[3] = a1;
  v6[4] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21EA8F894;
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = sub_21EA5EA80;
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_21EA5EADC;
  v11[3] = &block_descriptor_170;
  v8 = _Block_copy(v11);
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else if (v13)
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA89474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v4 = sub_21EB02A5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB02A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB02A14();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_21EA5EA88;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_139;
  v13 = _Block_copy(aBlock);
  sub_21EB01F10();
  sub_21EB02A44();
  MEMORY[0x2207B57A0](0, v7, v11, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_21EA895E8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_21EA8960C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21EA8961C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t (*v54)();
  _QWORD *v55;
  id v56;
  unint64_t v57;
  char v58;

  v46 = a2;
  v47 = a3;
  v5 = sub_21EB02A20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB02A5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21EB02A2C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return sub_21EA8932C((uint64_t)sub_21EA8F704, v3);
  v44 = v10;
  v45 = v9;
  v41 = v8;
  v42 = v6;
  v43 = v5;
  v58 = 1;
  v56 = 0;
  v57 = 0xE000000000000000;
  MEMORY[0x24BDAC7A8](v14);
  *(&v40 - 4) = (uint64_t)&v56;
  *(&v40 - 3) = v3;
  *(&v40 - 2) = (uint64_t)&v58;
  LOBYTE(v49) = v17;
  v19 = *(NSObject **)(v18 + 16);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = &v49;
  v20[3] = sub_21EA8F710;
  v20[4] = &v40 - 6;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_21EA8F768;
  *(_QWORD *)(v21 + 24) = v20;
  v54 = sub_21EA5EAA8;
  v55 = (_QWORD *)v21;
  aBlock = MEMORY[0x24BDAC760];
  v51 = 1107296256;
  v52 = sub_21EA5EADC;
  v53 = &block_descriptor_148;
  v22 = _Block_copy(&aBlock);
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v19, v22);
  _Block_release(v22);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((v49 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  swift_release();
  v26 = v44;
  v25 = v45;
  if (v58 == 1)
  {
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = (void *)objc_opt_self();
    sub_21EB01F10();
    if (objc_msgSend(v28, sel_isMainThread))
    {
      swift_release();
      sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BEE5480], v12);
      v40 = sub_21EB02F90();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = sub_21EA8F7D0;
      v29[3] = v27;
      v31 = v46;
      v30 = v47;
      v29[4] = v46;
      v29[5] = v30;
      v54 = sub_21EA8F80C;
      v55 = v29;
      aBlock = MEMORY[0x24BDAC760];
      v51 = 1107296256;
      v52 = sub_21EA5EAB0;
      v53 = &block_descriptor_157;
      v32 = _Block_copy(&aBlock);
      sub_21EB01F10();
      sub_21EA83588(v31);
      v33 = v48;
      sub_21EB02A44();
      v49 = MEMORY[0x24BEE4AF8];
      sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
      sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
      v34 = v41;
      v35 = v43;
      sub_21EB031DC();
      v36 = (void *)v40;
      MEMORY[0x2207B57A0](0, v33, v34, v32);
      _Block_release(v32);
      swift_release();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v33, v25);
      swift_release();
    }
    else
    {
      v37 = sub_21EA89AD8();
      v39 = v38;
      swift_release_n();
      v56 = v37;
      v57 = v39;
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v56;
}

id sub_21EA89AD8()
{
  uint64_t Strong;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v1 = Strong;
  v2 = *(id *)(Strong + 16);
  v3 = sub_21EA88BFC();
  v5 = v4;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v1;
  v6[3] = v3;
  v6[4] = v5;
  sub_21EB01F10();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  sub_21EA89474((uint64_t)sub_21EA8F844, (uint64_t)v6);
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_21EA89BC4(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1();
  v6 = v5;
  if (!a3)
    return swift_bridgeObjectRelease();
  v7 = v4;
  sub_21EB01F10();
  a3(v7, v6);
  swift_bridgeObjectRelease();
  return sub_21EA5CA7C((uint64_t)a3);
}

uint64_t sub_21EA89C3C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21EA89C70()
{
  return 0;
}

uint64_t sub_21EA89C78(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD v12[4];

  v3 = v1;
  objc_sync_enter(v3);
  if ((a1 & 1) != 0)
  {
    if (qword_2540A6E98 != -1)
      swift_once();
    v4 = sub_21EAAE720(v3, (const void *)qword_2540A6E90);
    KeyPath = swift_getKeyPath();
    v6 = sub_21EA870F4();
    if (v6)
    {
      v7 = v6;

    }
    else
    {
      v9 = type metadata accessor for FINodeItemCountFetcher();
      swift_allocObject();
      v10 = v3;
      v7 = sub_21EA8E438(v10);

      v12[3] = v9;
      v12[0] = v7;
      swift_beginAccess();
      swift_retain_n();
      sub_21EB01F10();
      sub_21EA5946C((uint64_t)v12, KeyPath);
      swift_endAccess();

      swift_release();
    }
    swift_release();
  }
  else
  {
    if (qword_2540A6E98 != -1)
      swift_once();
    v8 = sub_21EAAE720(v3, (const void *)qword_2540A6E90);
    swift_getKeyPath();
    v7 = sub_21EA870F4();
    swift_release();

  }
  objc_sync_exit(v3);

  return v7;
}

uint64_t DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = (void *)v7;
      swift_unknownObjectRetain();
      if (objc_msgSend(v8, sel_isFolder)
        && objc_msgSend(v8, sel_nodePermissions_, 2048) == 2048
        && sub_21EA89C78(a1 & 1))
      {
        v6 = sub_21EA8961C(a1 & 1, a2, a3);
        swift_release();
        goto LABEL_3;
      }
      swift_unknownObjectRelease();
    }
    return 0;
  }
  swift_unknownObjectRetain();
  v6 = (uint64_t)sub_21EA88DF8();
LABEL_3:
  swift_unknownObjectRelease();
  return v6;
}

uint64_t DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(uint64_t a1)
{
  int v1;
  uint64_t result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  if ((a1 & 0x100000000) != 0)
    goto LABEL_5;
  v1 = a1;
  if (qword_255469A60 != -1)
    swift_once();
  result = sub_21EA88FB0(v1, qword_25546A528);
  if ((result & 1) != 0)
  {
LABEL_5:
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (result)
    {
      v3 = (void *)result;
      swift_unknownObjectRetain_n();
      objc_sync_enter(v3);
      if (qword_2540A6E98 != -1)
        swift_once();
      v4 = sub_21EAAE720(v3, (const void *)qword_2540A6E90);
      swift_getKeyPath();
      v5 = sub_21EA870F4();
      swift_release();

      objc_sync_exit(v3);
      swift_unknownObjectRelease();
      if (v5)
      {
        v6 = swift_allocObject();
        *(_QWORD *)(v6 + 16) = v5;
        *(_BYTE *)(v6 + 24) = 1;
        sub_21EB01F10();
        sub_21EA89474((uint64_t)sub_21EA8E224, v6);
        swift_release();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t DOCNode.compareBySharedStatus(node:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  id v26;
  void *v27;
  int v28;
  char *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6518);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v56 - v8;
  v10 = sub_21EB021BC();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v56 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v56 - v18;
  if (objc_msgSend(v2, sel_isSharedByCurrentUser)
    && (objc_msgSend(a1, sel_isSharedByCurrentUser) & 1) != 0)
  {
    return 0;
  }
  if (objc_msgSend(v2, sel_isSharedByCurrentUser)
    && !objc_msgSend(a1, sel_isSharedByCurrentUser))
  {
    return -1;
  }
  if ((objc_msgSend(v2, sel_isSharedByCurrentUser) & 1) != 0
    || (objc_msgSend(a1, sel_isSharedByCurrentUser) & 1) == 0)
  {
    v21 = objc_msgSend(v2, sel_ownerNameComponents);
    if (v21)
    {
      v22 = v21;
      v56 = v14;
      v57 = v19;
      sub_21EB021B0();

      v23 = (void (*)(char *, char *, uint64_t))v11[4];
      v23(v9, v17, v10);
      v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
      v24(v9, 0, 1, v10);
      v25 = (uint64_t (*)(char *, uint64_t, uint64_t))v11[6];
      if (v25(v9, 1, v10) != 1)
      {
        v23(v57, v9, v10);
        v26 = objc_msgSend(a1, sel_ownerNameComponents);
        if (v26)
        {
          v27 = v26;
          sub_21EB021B0();

          v23(v7, v17, v10);
          v24(v7, 0, 1, v10);
          v28 = v25(v7, 1, v10);
          v29 = v57;
          if (v28 != 1)
          {
            v30 = v56;
            v23(v56, v7, v10);
            v31 = objc_msgSend((id)objc_opt_self(), sel_sharedDefaults);
            v32 = objc_msgSend(v31, sel_sortOrder);

            if (v32 == (id)2)
            {
              v41 = sub_21EB0218C();
              if (!v42)
                goto LABEL_29;
              v35 = v41;
              v36 = v42;
              v37 = sub_21EB0218C();
              if (!v38)
                goto LABEL_16;
            }
            else
            {
              if (v32 != (id)3)
                goto LABEL_29;
              v33 = sub_21EB02198();
              if (!v34)
                goto LABEL_29;
              v35 = v33;
              v36 = v34;
              v37 = sub_21EB02198();
              if (!v38)
              {
LABEL_16:
                swift_bridgeObjectRelease();
                goto LABEL_29;
              }
            }
            v60 = v35;
            v61 = v36;
            v58 = v37;
            v59 = v38;
            sub_21EA8E234();
            v20 = sub_21EB03188();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20)
            {
              v43 = (void (*)(char *, uint64_t))v11[1];
              v43(v30, v10);
              v43(v29, v10);
              return v20;
            }
LABEL_29:
            v44 = (void *)objc_opt_self();
            v45 = (void *)sub_21EB021A4();
            v46 = objc_msgSend(v44, sel_localizedStringFromPersonNameComponents_style_options_, v45, 0, 0);

            v47 = sub_21EB02B88();
            v49 = v48;

            v50 = (void *)sub_21EB021A4();
            v51 = objc_msgSend(v44, sel_localizedStringFromPersonNameComponents_style_options_, v50, 0, 0);

            v52 = sub_21EB02B88();
            v54 = v53;

            v60 = v47;
            v61 = v49;
            v58 = v52;
            v59 = v54;
            sub_21EA8E234();
            v20 = sub_21EB03188();
            v55 = (void (*)(char *, uint64_t))v11[1];
            v55(v30, v10);
            v55(v29, v10);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v20;
          }
        }
        else
        {
          v24(v7, 1, 1, v10);
          v29 = v57;
        }
        ((void (*)(char *, uint64_t))v11[1])(v29, v10);
        v39 = (uint64_t)v7;
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
    }
    v39 = (uint64_t)v9;
LABEL_22:
    sub_21EA59E08(v39, &qword_2540A6518);
    return 0;
  }
  return 1;
}

uint64_t DOCNode.typeToFocusItem.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _UNKNOWN **v5;
  uint64_t v6;
  uint64_t result;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = v2;
    v4 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
    v5 = &protocol witness table for FPItem;
LABEL_5:
    a1[3] = v4;
    a1[4] = (uint64_t)v5;
    *a1 = v3;
    return swift_unknownObjectRetain();
  }
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    v3 = v6;
    v4 = sub_21EA579D4(0, (unint64_t *)&unk_2540A6EA0);
    v5 = &protocol witness table for FINode;
    goto LABEL_5;
  }
  result = sub_21EB033C8();
  __break(1u);
  return result;
}

uint64_t sub_21EA8A6E0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_displayName);
  v2 = sub_21EB02B88();

  return v2;
}

uint64_t DOCFolderSize.physicalBytes.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t DOCNode.performFolderSizingIfSupported(handlerQueue:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  _QWORD *v38;

  v5 = v4;
  v27 = a4;
  v28 = a1;
  v8 = sub_21EB02A20();
  v30 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_21EB02A5C();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB02A2C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((DOCNode.isFolderSizingSupported.getter() & 1) != 0)
  {
    sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5480], v13);
    v26 = sub_21EB02F90();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v17 = (_QWORD *)swift_allocObject();
    v18 = v28;
    v17[2] = v27;
    v17[3] = v5;
    v17[4] = v18;
    v17[5] = a2;
    v17[6] = a3;
    v37 = sub_21EA8E2B0;
    v38 = v17;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_21EA5EAB0;
    v36 = &block_descriptor_42;
    v19 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    v20 = v18;
    sub_21EB01F10();
    sub_21EB02A44();
    v32 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    v21 = (void *)v26;
    MEMORY[0x2207B57A0](0, v12, v10, v19);
    _Block_release(v19);

  }
  else
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a2;
    *(_QWORD *)(v22 + 24) = a3;
    v37 = sub_21EA8E278;
    v38 = (_QWORD *)v22;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_21EA5EAB0;
    v36 = &block_descriptor_36;
    v23 = _Block_copy(&aBlock);
    sub_21EB01F10();
    sub_21EB02A44();
    v32 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v12, v10, v23);
    _Block_release(v23);
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v31);
  return swift_release();
}

uint64_t DOCNode.isFolderSizingSupported.getter()
{
  void *v0;
  void *v1;
  uint64_t result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned int v16;

  v1 = v0;
  result = (uint64_t)objc_msgSend(v0, sel_isFolder);
  if ((_DWORD)result)
  {
    result = (uint64_t)objc_msgSend(v0, sel_cachedDomain);
    if (result)
    {
      v3 = (void *)result;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0)
      {
LABEL_17:

        return 1;
      }
      v4 = objc_msgSend(v1, sel_providerID);
      v5 = sub_21EB02B88();
      v7 = v6;
      if (v5 == sub_21EB02B88() && v7 == v8)
        v10 = 1;
      else
        v10 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = sub_21EB02B88();
      v13 = v12;
      if (v11 == sub_21EB02B88() && v13 == v14)
        v15 = 1;
      else
        v15 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((objc_msgSend(v3, sel_isiCloudDriveProvider) & 1) != 0 || (v10 & 1) != 0)
      {

        goto LABEL_17;
      }
      if ((v15 & 1) != 0)
      {
        v16 = objc_msgSend(v1, sel_isRootItem);

        return v16 ^ 1;
      }
      else
      {

        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_21EA8ACA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  id v10;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v10 = a2;
  sub_21EB01F10();
  sub_21EA8B0F4((void (*)(uint64_t))sub_21EA8F454, (uint64_t)v9, a5);
  return swift_release();
}

uint64_t sub_21EA8AD28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;

  v8 = sub_21EB02A20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v15;
  if (a1)
  {
    v28[1] = a2;
    v29 = v9;
    v30 = v12;
    v16 = a1;
    v17 = objc_msgSend(v16, sel_propertyAsNumber_, 1819240307);
    v18 = v17;
    if (v17)
    {
      v19 = objc_msgSend(v17, sel_longLongValue);

    }
    else
    {
      v19 = 0;
    }
    v22 = objc_msgSend(v16, sel_propertyAsNumber_, 1885895027);
    v23 = v22;
    if (v22)
    {
      v24 = objc_msgSend(v22, sel_longLongValue);

    }
    else
    {
      v24 = 0;
    }
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a3;
    *(_QWORD *)(v25 + 24) = a4;
    *(_QWORD *)(v25 + 32) = v19;
    *(_BYTE *)(v25 + 40) = v18 == 0;
    *(_QWORD *)(v25 + 48) = v24;
    *(_BYTE *)(v25 + 56) = v23 == 0;
    v37 = sub_21EA8F6B8;
    v38 = v25;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_21EA5EAB0;
    v36 = &block_descriptor_133;
    v26 = _Block_copy(&aBlock);
    sub_21EB01F10();
    sub_21EB02A44();
    v32 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v14, v11, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
  }
  else
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a3;
    *(_QWORD *)(v20 + 24) = a4;
    v37 = sub_21EA8E278;
    v38 = v20;
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_21EA5EAB0;
    v36 = &block_descriptor_127;
    v21 = _Block_copy(&aBlock);
    sub_21EB01F10();
    sub_21EB02A44();
    v32 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v14, v11, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  }
  return swift_release();
}

void sub_21EA8B0F4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  uint64_t aBlock;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, void *);
  void *v23;
  void *v24;
  _QWORD *v25;

  v4 = v3;
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = v8;
    swift_unknownObjectRetain();
    a1(v9);
    swift_unknownObjectRelease();
    return;
  }
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    v11 = (void *)v10;
    swift_unknownObjectRetain();
    v12 = objc_msgSend(v11, sel_cachedDomain);
    if (v12)
    {
      v13 = v12;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
        && (objc_msgSend(v13, sel_isUsingFPFS) & 1) == 0
        && (FPProviderDomain.isPOSIXCompatible.getter() & 1) == 0)
      {
        v17 = (void *)objc_opt_self();
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = a3;
        v18[3] = v4;
        v18[4] = a1;
        v18[5] = a2;
        v24 = sub_21EA8F4B4;
        v25 = v18;
        aBlock = MEMORY[0x24BDAC760];
        v21 = 1107296256;
        v22 = (uint64_t (*)(uint64_t, uint64_t, void *))sub_21EA81D44;
        v23 = &block_descriptor_109;
        v19 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        v14 = v13;
        sub_21EB01F10();
        swift_release();
        objc_msgSend(v17, sel_fiNodeFromItem_inFPv2Domain_completion_, v11, v14, v19);
        _Block_release(v19);
        swift_unknownObjectRelease();

        goto LABEL_10;
      }

    }
    v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a3;
    v15[3] = v4;
    v15[4] = a1;
    v15[5] = a2;
    v24 = sub_21EA8F46C;
    v25 = v15;
    aBlock = MEMORY[0x24BDAC760];
    v21 = 1107296256;
    v22 = sub_21EA8159C;
    v23 = &block_descriptor_103;
    v16 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    sub_21EB01F10();
    swift_release();
    objc_msgSend(v14, sel_fetchURLForItem_completionHandler_, v11, v16);
    _Block_release(v16);
    swift_unknownObjectRelease();
LABEL_10:

    return;
  }
  sub_21EB032E4();
  sub_21EB02C0C();
  swift_getObjectType();
  sub_21EB035F0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB033C8();
  __break(1u);
}

uint64_t sub_21EA8B428(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v27 = a6;
  v28 = a4;
  v29 = a5;
  v26 = a2;
  v8 = sub_21EB02A20();
  v32 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21EB02A5C();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21EB02A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5480], v14);
  v18 = (void *)sub_21EB02F90();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v19 = (_QWORD *)swift_allocObject();
  v20 = v26;
  v19[2] = v27;
  v19[3] = a1;
  v19[4] = a3;
  v19[5] = v20;
  v21 = v29;
  v19[6] = v28;
  v19[7] = v21;
  aBlock[4] = sub_21EA8F4FC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_115;
  v22 = _Block_copy(aBlock);
  v23 = a1;
  swift_unknownObjectRetain();
  v24 = v20;
  sub_21EB01F10();
  sub_21EB02A44();
  v33 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v13, v10, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  return swift_release();
}

uint64_t sub_21EA8B6CC(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  os_log_type_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  if (!a1)
  {
    if (qword_255469BE8 != -1)
      swift_once();
    v8 = sub_21EB0263C();
    __swift_project_value_buffer(v8, (uint64_t)static Logger.Enumeration);
    swift_unknownObjectRetain();
    v9 = a3;
    swift_unknownObjectRetain();
    v10 = a3;
    v11 = sub_21EB02624();
    v12 = sub_21EB02ED0();
    if (os_log_type_enabled(v11, v12))
    {
      v21 = v12;
      v24 = v11;
      v13 = swift_slowAlloc();
      v22 = (_QWORD *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)v13 = 136315394;
      v14 = objc_msgSend(a2, sel_displayName);
      v15 = sub_21EB02B88();
      v17 = v16;

      sub_21EA591E4(v15, v17, v25);
      sub_21EB03134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      if (a3)
      {
        v18 = a3;
        v19 = _swift_stdlib_bridgeErrorToNSError();
        sub_21EB03134();
      }
      else
      {
        sub_21EB03134();
        v19 = 0;
      }
      v11 = v24;
      *v22 = v19;

      _os_log_impl(&dword_21EA4C000, v24, v21, "Can't fpfs_fetchFINode on a DOCNode that's not backed by an FINode (%s, error: %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v22, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v23, -1, -1);
      MEMORY[0x2207B6A18](v13, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();

    }
  }
  return a4(a1);
}

uint64_t sub_21EA8B9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v31 = a6;
  v32 = a3;
  v33 = a4;
  v34 = a5;
  v29 = a1;
  v6 = sub_21EB02A20();
  v37 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB02A5C();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21EB02A2C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BEE5480], v16);
  v30 = sub_21EB02F90();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_21EA7F378(v29, (uint64_t)v15);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v31;
  sub_21EA59D84((uint64_t)v15, v22 + v20, (uint64_t *)&unk_2540A6520);
  v23 = v33;
  *(_QWORD *)(v22 + v21) = v32;
  v24 = (_QWORD *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  v25 = v34;
  *v24 = v23;
  v24[1] = v25;
  aBlock[4] = sub_21EA8F5D4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_121;
  v26 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_21EB01F10();
  sub_21EB02A44();
  v38 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  v27 = (void *)v30;
  MEMORY[0x2207B57A0](0, v11, v8, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  return swift_release();
}

void sub_21EA8BCD8(uint64_t a1, void *a2, void (*a3)(_QWORD))
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD);
  uint64_t v20;

  sub_21EA579D4(0, (unint64_t *)&unk_2540A6EA0);
  v6 = static FINode.docNode(from:)(a1);
  if (!v6
    || (v7 = v6, v8 = objc_msgSend(v6, sel_presentationNode), v7, !v8))
  {
    if (qword_255469BE8 != -1)
      swift_once();
    v9 = sub_21EB0263C();
    __swift_project_value_buffer(v9, (uint64_t)static Logger.Enumeration);
    swift_unknownObjectRetain_n();
    v10 = sub_21EB02624();
    v11 = sub_21EB02ED0();
    if (os_log_type_enabled(v10, v11))
    {
      v19 = a3;
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = objc_msgSend(a2, sel_displayName);
      v15 = sub_21EB02B88();
      v17 = v16;

      v18 = v15;
      a3 = v19;
      sub_21EA591E4(v18, v17, &v20);
      sub_21EB03134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v10, v11, "Can't fpfs_fetchFINode on a DOCNode that's not backed by an FINode (%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v13, -1, -1);
      MEMORY[0x2207B6A18](v12, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v8 = 0;
  }
  a3(v8);

}

uint64_t DOCDiskProperties.format.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DOCDiskProperties.size.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t DOCDiskProperties.Size.freeSpace.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t DOCDiskProperties.Size.purgeableSpace.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t DOCDiskProperties.Size.totalSpace.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

unint64_t DOCDiskProperties.Size.usedSpace.getter(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  unint64_t result;

  v4 = a4 >= a1;
  result = a4 - a1;
  if (!v4)
    __break(1u);
  return result;
}

id DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id result;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void *v40;
  _QWORD *v41;

  v31 = a1;
  v6 = sub_21EB02A20();
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_21EB02A5C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21EB02A2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0)
    goto LABEL_5;
  v30 = a3;
  v15 = a2;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend(v3, sel_providerDomainID);
    v19 = sub_21EAB7804();

    a2 = v15;
    a3 = v30;
    if (v19)
    {
      sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5480], v11);
      v29 = sub_21EB02F90();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v20 = (_QWORD *)swift_allocObject();
      v21 = v31;
      v20[2] = v19;
      v20[3] = v21;
      v20[4] = a2;
      v20[5] = a3;
      v40 = sub_21EA8E6E8;
      v41 = v20;
      aBlock = MEMORY[0x24BDAC760];
      v37 = 1107296256;
      v38 = sub_21EA5EAB0;
      v39 = &block_descriptor_54;
      v22 = _Block_copy(&aBlock);
      v23 = v19;
      v24 = v21;
      sub_21EB01F10();
      sub_21EB02A44();
      v35 = MEMORY[0x24BEE4AF8];
      sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
      sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
      sub_21EB031DC();
      v25 = (void *)v29;
      MEMORY[0x2207B57A0](0, v10, v8, v22);
      _Block_release(v22);

LABEL_6:
      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v34);
      return (id)swift_release();
    }
LABEL_5:
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    *(_QWORD *)(v26 + 24) = a3;
    v40 = sub_21EA8E2C0;
    v41 = (_QWORD *)v26;
    aBlock = MEMORY[0x24BDAC760];
    v37 = 1107296256;
    v38 = sub_21EA5EAB0;
    v39 = &block_descriptor_48;
    v27 = _Block_copy(&aBlock);
    sub_21EB01F10();
    sub_21EB02A44();
    v35 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v10, v8, v27);
    _Block_release(v27);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t DOCNode.areDiskPropertiesSupported.getter()
{
  void *v0;
  id v1;
  unsigned int v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_usbDiskProperties);
  v2 = objc_msgSend(v1, sel_isEnabled);

  if (v2)
  {
    if (objc_msgSend(v0, sel_isRootItem))
    {
      v3 = objc_msgSend(v0, sel_providerID);
      v4 = sub_21EB02B88();
      v6 = v5;

      if (v4 == sub_21EB02B88() && v6 == v7)
        LOBYTE(v2) = 1;
      else
        LOBYTE(v2) = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v2) = 0;
    }
  }
  return v2 & 1;
}

void sub_21EA8C490(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a1;
  v8[4] = a3;
  v8[5] = a4;
  v12[4] = sub_21EA8F434;
  v12[5] = v8;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_21EA5EAB0;
  v12[3] = &block_descriptor_88;
  v9 = _Block_copy(v12);
  v10 = a2;
  v11 = a1;
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v11, sel_expireCacheWithOptions_completionBlock_, 2, v9);
  _Block_release(v9);
}

uint64_t sub_21EA8C570(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[0] = a1;
  v7 = sub_21EB02A20();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21EB02A5C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  aBlock[4] = sub_21EA8F444;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_94;
  v17 = _Block_copy(aBlock);
  v18 = a2;
  sub_21EB01F10();
  sub_21EB02A44();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, v8, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

id sub_21EA8C760(void *a1, void (*a2)(_QWORD *))
{
  id result;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  result = objc_msgSend(a1, sel_filesystem);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, sel_localizedName);

    v7 = sub_21EB02B88();
    v9 = v8;

    v10[0] = v7;
    v10[1] = v9;
    v10[2] = objc_msgSend(a1, sel_availableSpace);
    v10[3] = objc_msgSend(a1, sel_freeSpace);
    v10[4] = objc_msgSend(a1, sel_purgeableSpace);
    v10[5] = objc_msgSend(a1, sel_totalSpace);
    a2(v10);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void DOCNode.diskProperties.getter(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;

  if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0)
    goto LABEL_6;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(v1, sel_providerDomainID);
  v6 = sub_21EAB7804();

  if (!v6)
  {
LABEL_6:
    v10 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    goto LABEL_7;
  }
  v7 = objc_msgSend(v6, sel_filesystem);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_localizedName);

    v10 = sub_21EB02B88();
    v12 = v11;

    v13 = objc_msgSend(v6, sel_availableSpace);
    v14 = objc_msgSend(v6, sel_freeSpace);
    v15 = objc_msgSend(v6, sel_purgeableSpace);
    v16 = objc_msgSend(v6, sel_totalSpace);

LABEL_7:
    *a1 = v10;
    a1[1] = v12;
    a1[2] = (uint64_t)v13;
    a1[3] = (uint64_t)v14;
    a1[4] = (uint64_t)v15;
    a1[5] = (uint64_t)v16;
    return;
  }
LABEL_9:
  __break(1u);
}

void DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)(char a1, void (*a2)(char *), void (*a3)(char *), uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (**v36)(char *);
  void (*v37)(char *);
  void *v38;
  id v39;
  void *v40;
  id v41;
  _QWORD *v42;
  void (*v43)(char *);
  uint64_t v44;
  void *v45;
  id v46;
  void (*v47)(unint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *);
  void (*v51)(char *);
  uint64_t aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  void (*v56)(uint64_t, void *);
  _QWORD *v57;

  v48 = a4;
  v51 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - v11;
  v13 = sub_21EB02300();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v46 - v18;
  if ((a1 & 1) != 0
    || !objc_msgSend(v4, sel_isCloudItem)
    || objc_msgSend(v4, sel_isDownloaded))
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v51;
    *(_QWORD *)(v20 + 24) = a3;
    v49 = v20;
    v50 = a3;
    sub_21EB01F10();
    v21 = objc_msgSend(v4, sel_nodeURL);
    if (v21)
    {
      v22 = v21;
      v23 = v19;
      sub_21EB022DC();

      v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v24(v12, v17, v13);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v25(v12, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        v47 = (void (*)(unint64_t, char *, uint64_t))v24;
        v24(v23, v12, v13);
        LODWORD(v48) = sub_21EB022E8();
        v26 = (void *)objc_opt_self();
        v27 = (void *)sub_21EB022B8();
        v28 = objc_msgSend(v26, sel_readingIntentWithURL_options_, v27, 0);

        v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_21EB07150;
        *(_QWORD *)(v30 + 32) = v28;
        aBlock = v30;
        sub_21EB02D08();
        sub_21EA579D4(0, &qword_25546A568);
        v46 = v28;
        v31 = (void *)sub_21EB02CE4();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v23, v13);
        v33 = (*(unsigned __int8 *)(v14 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v34 = (v15 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
        v35 = swift_allocObject();
        *(_BYTE *)(v35 + 16) = v48 & 1;
        v47(v35 + v33, v17, v13);
        v36 = (void (**)(char *))(v35 + v34);
        v37 = v50;
        *v36 = v51;
        v36[1] = v37;
        v56 = (void (*)(uint64_t, void *))sub_21EA8E718;
        v57 = (_QWORD *)v35;
        aBlock = MEMORY[0x24BDAC760];
        v53 = 1107296256;
        v54 = sub_21EA8423C;
        v55 = &block_descriptor_69;
        v38 = _Block_copy(&aBlock);
        sub_21EB01F10();
        swift_release();
        objc_msgSend(v29, sel_coordinateAccessWithIntents_queue_byAccessor_, v31, v32, v38);
        _Block_release(v38);
        swift_release();

        (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
        return;
      }
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v25(v12, 1, 1, v13);
    }
    sub_21EA59E08((uint64_t)v12, (uint64_t *)&unk_2540A6520);
    v39 = DOCNode.fpfs_syncFetchFPItem()();
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v42 = (_QWORD *)swift_allocObject();
      v43 = v50;
      v42[2] = v51;
      v42[3] = v43;
      v44 = v49;
      v42[4] = sub_21EA8E6F4;
      v42[5] = v44;
      v56 = sub_21EA8E708;
      v57 = v42;
      aBlock = MEMORY[0x24BDAC760];
      v53 = 1107296256;
      v54 = sub_21EA8159C;
      v55 = &block_descriptor_63;
      v45 = _Block_copy(&aBlock);
      sub_21EB01F10();
      sub_21EB01F10();
      swift_release();
      objc_msgSend(v41, sel_fetchURLForItem_completionHandler_, v40, v45);
      _Block_release(v45);
      swift_release();

      return;
    }
    v25(v10, 1, 1, v13);
    v51(v10);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    v51(v10);
  }
  sub_21EA59E08((uint64_t)v10, (uint64_t *)&unk_2540A6520);
}

void sub_21EA8CF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v24 = a2;
  v25 = a3;
  v4 = sub_21EB02300();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_21EB022E8();
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_21EB022B8();
  v10 = objc_msgSend(v8, sel_readingIntentWithURL_options_, v9, 0);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21EB07150;
  *(_QWORD *)(v12 + 32) = v10;
  aBlock[0] = v12;
  sub_21EB02D08();
  sub_21EA579D4(0, &qword_25546A568);
  v13 = v10;
  v14 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v16 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = (v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = v23 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v16, v7, v4);
  v19 = (_QWORD *)(v18 + v17);
  v20 = v25;
  *v19 = v24;
  v19[1] = v20;
  aBlock[4] = sub_21EA8E718;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA8423C;
  aBlock[3] = &block_descriptor_82;
  v21 = _Block_copy(aBlock);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v11, sel_coordinateAccessWithIntents_queue_byAccessor_, v14, v15, v21);
  _Block_release(v21);

}

uint64_t sub_21EA8D1A4(uint64_t a1, char a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21EB02300();
  v12 = *(_QWORD *)(v11 - 8);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  a4(v10);
  result = sub_21EA59E08((uint64_t)v10, (uint64_t *)&unk_2540A6520);
  if ((a2 & 1) != 0)
    return sub_21EB022D0();
  return result;
}

void sub_21EA8D298(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v24 = a5;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA7F378(a1, (uint64_t)v14);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  sub_21EA59D84((uint64_t)v14, v18 + v15, (uint64_t *)&unk_2540A6520);
  *(_QWORD *)(v18 + v16) = a2;
  v19 = (_QWORD *)(v18 + v17);
  *v19 = a3;
  v19[1] = a4;
  v20 = (_QWORD *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v20 = v24;
  v20[1] = a6;
  aBlock[4] = sub_21EA8F2C4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_75;
  v21 = _Block_copy(aBlock);
  v22 = a2;
  sub_21EB01F10();
  sub_21EB01F10();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
}

uint64_t sub_21EA8D418(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, void (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  void (*v20)(char *);

  v20 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - v12;
  v14 = sub_21EB02300();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA7F378(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_21EA59E08((uint64_t)v13, (uint64_t *)&unk_2540A6520);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    a3(v11);
    return sub_21EA59E08((uint64_t)v11, (uint64_t *)&unk_2540A6520);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_5;
  }
  v20(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t DOCNode.syncErrorDescription.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_downloadingError);
  if (v1)
  {
    v2 = v1;
  }
  else
  {
    v3 = objc_msgSend(v0, sel_uploadingError);
    if (!v3)
      return 0;
    v2 = v3;
  }
  swift_getErrorValue();
  v4 = sub_21EB03554();

  return v4;
}

id DOCNode.shouldBeUploaded.getter()
{
  void *v0;

  if ((objc_msgSend(v0, sel_isUploaded) & 1) != 0
    || (objc_msgSend(v0, sel_isActionable) & 1) != 0
    || (objc_msgSend(v0, sel_isExternalDownloadPlaceholder) & 1) != 0)
  {
    return 0;
  }
  else
  {
    return objc_msgSend(v0, sel_isCloudItem);
  }
}

id DOCNode.representedLocation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = (void *)DOCNode.sourceIdentifier.getter();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2DDB0]), sel_initWithSourceIdentifier_node_, v1, v0);

  objc_msgSend(v2, sel_setIsFPV2_, 1);
  return v2;
}

void *sub_21EA8D734(uint64_t a1, uint64_t a2)
{
  return sub_21EA8D758(a1, a2, &qword_2540A6E08);
}

void *sub_21EA8D758(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23[3];
  uint64_t v24;
  unint64_t v25;

  v4 = v3;
  sub_21EA579D4(0, a3);
  if (sub_21EB02BE8() >= 1)
  {
    v24 = 46;
    v25 = 0xE100000000000000;
    sub_21EB02C0C();
  }
  sub_21EB032E4();
  v5 = sub_21EB035F0();
  v7 = v6;
  swift_bridgeObjectRelease();
  v24 = v5;
  v25 = v7;
  sub_21EB02C0C();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  v9 = v5;
  v8 = v7;
  if (qword_2540A6BB0 != -1)
    swift_once();
  swift_beginAccess();
  if ((sub_21EA5DFD0(v9, v7, off_2540A6BA0) & 1) != 0)
  {
    if (qword_255469B70 != -1)
      swift_once();
    v10 = sub_21EB0263C();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.DocumentManager);
    swift_bridgeObjectRetain();
    v4 = sub_21EB02624();
    v11 = sub_21EB02EF4();
    if (os_log_type_enabled(v4, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v23[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_21EA591E4(v9, v8, v23);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v4, v11, "ERROR: Associated storage key (%s) already exists, choose different uniqueSuffix!", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v13, -1, -1);
      MEMORY[0x2207B6A18](v12, -1, -1);

LABEL_17:
      v21 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v20 = (void *)sub_21EB02B58();
      objc_msgSend(v21, sel_initWithDomain_code_userInfo_, v20, -1, 0);

      swift_willThrow();
      return v20;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  swift_beginAccess();
  v14 = off_2540A6BA0;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  off_2540A6BA0 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_21EA5C430(0, v14[2] + 1, 1, v14);
    off_2540A6BA0 = v14;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    v14 = sub_21EA5C430((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    off_2540A6BA0 = v14;
  }
  v14[2] = v17 + 1;
  v18 = &v14[2 * v17];
  v18[4] = v9;
  v18[5] = v8;
  swift_endAccess();
  v19 = sub_21EB02BB8();
  swift_bridgeObjectRelease();
  v20 = strdup((const char *)(v19 + 32));
  swift_release();
  if (!v20)
  {
    __break(1u);
    goto LABEL_16;
  }
  return v20;
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_21EA8DB70(void *a1)
{
  uint64_t v1;

  sub_21EA87FA0(a1, *(_QWORD *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_21EA8DB78()
{
  return swift_deallocObject();
}

uint64_t sub_21EA8DB88()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21EA8DBC4(void *a1)
{
  uint64_t v1;

  sub_21EA882CC(a1, *(_QWORD *)(v1 + 16), *(os_unfair_lock_s **)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_21EA8DBD0(uint64_t a1)
{
  uint64_t v1;

  return sub_21EA88470(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_21EA8DBD8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_21EA8DC1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v21;
  unint64_t v23;
  id v24[2];

  v4 = a3;
  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_21EB0341C())
  {
    v23 = v4 & 0xC000000000000001;
    v8 = 4;
    v21 = v7;
    while (1)
    {
      v9 = v23 ? (id)MEMORY[0x2207B5B3C](v8 - 4, v4) : *(id *)(v4 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      if (a2)
      {

      }
      else
      {
        v12 = v4;
        v24[0] = 0;
        v13 = objc_msgSend(v9, sel_labelWithItem_error_, a4, v24);
        v14 = v24[0];
        if (v13)
        {
          v15 = v13;
          a1 = sub_21EB02B88();
          a2 = v16;
          v17 = v14;

        }
        else
        {
          v18 = v24[0];
          v19 = (void *)sub_21EB02234();

          swift_willThrow();
          a1 = 0;
          a2 = 0;
        }
        v4 = v12;
        v7 = v21;
      }
      ++v8;
      if (v11 == v7)
        goto LABEL_17;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EA8DDF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7F0);
    v3 = sub_21EB032D8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_21EB035A8();
      swift_bridgeObjectRetain();
      sub_21EB02BDC();
      result = sub_21EB035E4();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_21EB034C4(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_21EB034C4();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_21EA8DF90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_21EB02420();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A7C0);
    v10 = sub_21EB032D8();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_21EA59DC8(&qword_25546A7C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_21EB02B1C();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_21EA59DC8(&qword_25546A7D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_21EB02B34();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

void sub_21EA8E1F8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21EA8E200()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21EA8E224()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 48) = *(_BYTE *)(v0 + 24);
}

unint64_t sub_21EA8E234()
{
  unint64_t result;

  result = qword_25546A560;
  if (!qword_25546A560)
  {
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25546A560);
  }
  return result;
}

uint64_t sub_21EA8E27C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8E2B0()
{
  uint64_t v0;

  return sub_21EA8ACA4(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_21EA8E2C0()
{
  uint64_t v0;
  uint64_t (*v1)(_OWORD *);
  _OWORD v3[3];

  v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  memset(v3, 0, sizeof(v3));
  return v1(v3);
}

uint64_t sub_21EA8E2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A790);
    v3 = sub_21EB032D8();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_DWORD *)(v6 + 4 * v4);
      sub_21EB035A8();
      sub_21EB035CC();
      result = sub_21EB035E4();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_DWORD *)(v14 + 4 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_21EA8E438(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_21EB02F48();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21EB03068();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5980];
  MEMORY[0x24BDAC7A8](v17);
  v7 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = DOCLocalizedMetadataStringForUnavailablePropertyValue();
  v9 = sub_21EB02B88();
  v11 = v10;

  *(_QWORD *)(v2 + 32) = v9;
  *(_QWORD *)(v2 + 40) = v11;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 16) = a1;
  v21 = *(_QWORD *)v2;
  v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A798);
  v21 = sub_21EB02BA0();
  v22 = v13;
  sub_21EB02C0C();
  v14 = objc_msgSend(v12, sel_fileName);
  sub_21EB02B88();

  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  type metadata accessor for ReadWriteLock();
  v15 = swift_allocObject();
  sub_21EA579D4(0, &qword_25546A7A0);
  sub_21EB02A50();
  v21 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8(&qword_25546A7A8, v6, MEMORY[0x24BEE5990]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A7B0);
  sub_21EA5DB98(&qword_25546A7B8, &qword_25546A7B0);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v18, *MEMORY[0x24BEE5758], v20);
  *(_QWORD *)(v15 + 16) = sub_21EB03074();
  *(_QWORD *)(v2 + 24) = v15;
  return v2;
}

void sub_21EA8E6E8()
{
  uint64_t v0;

  sub_21EA8C490(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_21EA8E6F4(uint64_t a1)
{
  uint64_t v1;

  sub_21EA8CF30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21EA8E6FC()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_21EA8E708(uint64_t a1, void *a2)
{
  uint64_t *v2;

  sub_21EA8D298(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

unint64_t sub_21EA8E720()
{
  unint64_t result;

  result = qword_25546A570;
  if (!qword_25546A570)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCNodeType, &type metadata for DOCNodeType);
    atomic_store(result, (unint64_t *)&qword_25546A570);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCNodeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EA8E7B0 + 4 * byte_21EB093D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EA8E7E4 + 4 * byte_21EB093D0[v4]))();
}

uint64_t sub_21EA8E7E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8E7EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA8E7F4);
  return result;
}

uint64_t sub_21EA8E800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA8E808);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EA8E80C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8E814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeType()
{
  return &type metadata for DOCNodeType;
}

uint64_t type metadata accessor for ReadWriteLock()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ObjCSync()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FINodeItemCountFetcher()
{
  return objc_opt_self();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCFolderSize(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCFolderSize(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCFolderSize()
{
  return &type metadata for DOCFolderSize;
}

uint64_t destroy for DOCDiskProperties()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DOCDiskProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DOCDiskProperties(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCDiskProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCDiskProperties(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCDiskProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDiskProperties()
{
  return &type metadata for DOCDiskProperties;
}

ValueMetadata *type metadata accessor for DOCDiskProperties.Size()
{
  return &type metadata for DOCDiskProperties.Size;
}

uint64_t getEnumTagSinglePayload for DOCNodeCollaborationType(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_21EA8EB00 + 4 * byte_21EB093DA[v4]))();
}

uint64_t storeEnumTagSinglePayload for DOCNodeCollaborationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EA8EBAC + 4 * byte_21EB093E4[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EA8EBE0 + 4 * byte_21EB093DF[v5]))();
}

uint64_t sub_21EA8EBE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8EBE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA8EBF0);
  return result;
}

uint64_t sub_21EA8EBFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA8EC04);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EA8EC08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8EC10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA8EC1C(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_21EA8EC38(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeCollaborationType()
{
  return &type metadata for DOCNodeCollaborationType;
}

void sub_21EA8EC60(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546BFC0);
      v3 = sub_21EB032D8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x2207B5B3C](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_21EB03080();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_21EA579D4(0, (unint64_t *)&qword_25546A780);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_21EB0308C();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_21EB0308C();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_21EB03080();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_21EA579D4(0, (unint64_t *)&qword_25546A780);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_21EB0308C();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_21EB0308C();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_21EA8EFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A768);
    v3 = sub_21EB032D8();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_21EB02B88();
      sub_21EB035A8();
      v7 = v6;
      sub_21EB02BDC();
      v8 = sub_21EB035E4();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_21EB02B88();
        v17 = v16;
        if (v15 == sub_21EB02B88() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_21EB02B88();
          v24 = v23;
          if (v22 == sub_21EB02B88() && v24 == v25)
            goto LABEL_3;
          v27 = sub_21EB034C4();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_21EA8F1E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_21EB02300();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F2C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_21EA8D418(v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(char *))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(char *))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_65Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21EB02300();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_21EB02300() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_21EA8D1A4(a1, *(_BYTE *)(v1 + 16), v1 + v4, *(void (**)(char *))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_50Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F434()
{
  uint64_t v0;

  return sub_21EA8C570(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

id sub_21EA8F444()
{
  uint64_t v0;

  return sub_21EA8C760(*(void **)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24));
}

uint64_t sub_21EA8F454(void *a1)
{
  uint64_t *v1;

  return sub_21EA8AD28(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_21EA8F460()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_21EA8F46C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_21EA8B9C4(a1, a2, v2[3], v2[4], v2[5], v2[2]);
}

uint64_t sub_21EA8F478()
{
  return objectdestroy_59Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t objectdestroy_59Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F4B4(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_21EA8B428(a1, a2, v2[3], v2[4], v2[5], v2[2]);
}

uint64_t sub_21EA8F4C0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F4FC()
{
  uint64_t v0;

  return sub_21EA8B6CC(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48));
}

uint64_t sub_21EA8F50C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_21EB02300();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_21EA8F5D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_21EA8BCD8(v0 + v2, *(void **)(v0 + v3), *(void (**)(_QWORD))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_21EA8F638()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F65C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v0 + 16))(0, 0, 0, 256);
}

uint64_t sub_21EA8F694()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F6B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40) & 1, *(_QWORD *)(v0 + 48));
}

uint64_t sub_21EA8F704@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21EA8F710()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  v1 = (_QWORD *)v0[2];
  v2 = v0[3];
  v3 = (_BYTE *)v0[4];
  v4 = *(_QWORD *)(v2 + 40);
  *v1 = *(_QWORD *)(v2 + 32);
  v1[1] = v4;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v3 = *(_BYTE *)(v2 + 48);
  return result;
}

uint64_t sub_21EA8F758()
{
  return swift_deallocObject();
}

_QWORD *sub_21EA8F768()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = 0;
  return result;
}

uint64_t sub_21EA8F79C()
{
  return swift_deallocObject();
}

uint64_t sub_21EA8F7AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id sub_21EA8F7D0()
{
  return sub_21EA89AD8();
}

uint64_t sub_21EA8F7D8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA8F80C()
{
  uint64_t v0;

  return sub_21EA89BC4(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_21EA8F818()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EA8F844()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 32) = v0[3];
  *(_QWORD *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_21EA8F884()
{
  return swift_deallocObject();
}

uint64_t sub_21EA8F894()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v1 = *(_QWORD **)(v0 + 16);
  (*(void (**)(_QWORD *__return_ptr))(v0 + 24))(v5);
  v2 = v5[0];
  v3 = v5[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t sub_21EA8F8DC()
{
  return swift_deallocObject();
}

uint64_t sub_21EA8F8EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7E0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21EA8F950(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7E0);
  return sub_21EA87C14(a1, a2);
}

id UIView.enclosingTabSwitcherStyle.getter()
{
  return sub_21EA8FC9C((SEL *)&selRef_enclosingTabSwitcherStyle);
}

id UIView.enclosingDocumentLandingMode.getter()
{
  return sub_21EA8FC9C((SEL *)&selRef_enclosingDocumentLandingMode);
}

uint64_t UIView.enclosedInUIPDocumentLanding.getter()
{
  return sub_21EA8FAFC(&qword_2540A6EF0) & 1;
}

uint64_t sub_21EA8FAFC(unint64_t *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_21EA579D4(0, a1);
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8C0);
  if (!swift_dynamicCast())
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    sub_21EA91190((uint64_t)&v9);
    goto LABEL_5;
  }
  v3 = *((_QWORD *)&v10 + 1);
  v4 = v11;
  __swift_project_boxed_opaque_existential_0(&v9, *((uint64_t *)&v10 + 1));
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v9);
  LOBYTE(v3) = objc_msgSend(v5, sel_isInUIPDocumentLanding);

  if ((v3 & 1) == 0)
  {
LABEL_5:
    v7 = objc_msgSend(v2, sel_traitCollection);
    v6 = objc_msgSend(v7, sel_enclosedInUIPDocumentLanding);

    return (uint64_t)v6;
  }
  return 1;
}

id UIViewController.enclosingTabSwitcherStyle.getter()
{
  return sub_21EA8FC9C((SEL *)&selRef_enclosingTabSwitcherStyle);
}

id sub_21EA8FC34(void *a1, uint64_t a2, SEL *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a1;
  v5 = objc_msgSend(v4, sel_traitCollection);
  v6 = objc_msgSend(v5, *a3);

  return v6;
}

id UIViewController.enclosingDocumentLandingMode.getter()
{
  return sub_21EA8FC9C((SEL *)&selRef_enclosingDocumentLandingMode);
}

id sub_21EA8FC9C(SEL *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, *a1);

  return v4;
}

uint64_t UIViewController.enclosedInUIPDocumentLanding.getter()
{
  return sub_21EA8FAFC(&qword_2540A6E08) & 1;
}

double _sSo6UIViewC26DocumentManagerExecutablesE27enclosingUIPHorizontalInset12CoreGraphics7CGFloatVvg_0()
{
  void *v0;
  id v1;
  double v2;
  double v3;

  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_enclosingUIPHorizontalInset);
  v3 = v2;

  return v3;
}

uint64_t sub_21EA8FE08(void *a1)
{
  id v2;
  uint64_t v4;

  sub_21EA8FEF0();
  sub_21EA59DC8(&qword_25546A840, (uint64_t (*)(uint64_t))type metadata accessor for DOCTabSwitcherStyle, (uint64_t)&unk_21EB07FF0);
  v2 = a1;
  sub_21EB02FB4();

  return v4;
}

uint64_t UITraitCollection.enclosingTabSwitcherStyle.getter()
{
  uint64_t v1;

  sub_21EA8FEF0();
  sub_21EA59DC8(&qword_25546A840, (uint64_t (*)(uint64_t))type metadata accessor for DOCTabSwitcherStyle, (uint64_t)&unk_21EB07FF0);
  sub_21EB02FB4();
  return v1;
}

unint64_t sub_21EA8FEF0()
{
  unint64_t result;

  result = qword_25546A838;
  if (!qword_25546A838)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTabSwitcherStyleTrait, &type metadata for DOCTabSwitcherStyleTrait);
    atomic_store(result, (unint64_t *)&qword_25546A838);
  }
  return result;
}

uint64_t sub_21EA8FF34(void *a1)
{
  id v2;
  uint64_t v4;

  sub_21EA9001C();
  sub_21EA59DC8(&qword_25546A850, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_21EB07FB8);
  v2 = a1;
  sub_21EB02FB4();

  return v4;
}

uint64_t UITraitCollection.enclosingDocumentLandingMode.getter()
{
  uint64_t v1;

  sub_21EA9001C();
  sub_21EA59DC8(&qword_25546A850, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_21EB07FB8);
  sub_21EB02FB4();
  return v1;
}

unint64_t sub_21EA9001C()
{
  unint64_t result;

  result = qword_25546A848;
  if (!qword_25546A848)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCUIPDocumentLandingModeTrait, &type metadata for DOCUIPDocumentLandingModeTrait);
    atomic_store(result, (unint64_t *)&qword_25546A848);
  }
  return result;
}

BOOL sub_21EA90060(void *a1)
{
  return objc_msgSend(a1, sel_enclosingDocumentLandingMode) != (id)-1;
}

BOOL UITraitCollection.enclosedInUIPDocumentLanding.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_enclosingDocumentLandingMode) != (id)-1;
}

double sub_21EA900AC(void *a1)
{
  id v2;
  double v3;
  double v4;

  sub_21EA9110C();
  v2 = a1;
  sub_21EB02FA8();
  v4 = v3;

  return v4;
}

uint64_t UITraitCollection.enclosingUIPHorizontalInset.getter()
{
  sub_21EA9110C();
  return sub_21EB02FA8();
}

BOOL sub_21EA90128()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

BOOL static UITraitCollection.enclosingTabSwitcherCanBeFloating.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  return v1 == (id)1;
}

BOOL sub_21EA901D8(void *a1)
{
  id v1;
  id v2;
  id v3;
  _BOOL8 v4;
  unsigned __int8 v5;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_enclosingTabSwitcherStyle);
  v3 = objc_msgSend(v1, sel_horizontalSizeClass);
  if (v2 == (id)1)
  {
    v4 = v3 == (id)1;
    v5 = objc_msgSend(v1, sel_enclosedInUIPDocumentLanding);

    if ((v5 & 1) != 0)
      return v4;
  }
  else
  {

  }
  return 0;
}

BOOL UITraitCollection.contextPrefersVariableBlurBottomTabBar.getter()
{
  void *v0;
  id v1;
  id v2;
  _BOOL8 v3;

  v1 = objc_msgSend(v0, sel_enclosingTabSwitcherStyle);
  v2 = objc_msgSend(v0, sel_horizontalSizeClass);
  if (v1 != (id)1)
    return 0;
  v3 = v2 == (id)1;
  if ((objc_msgSend(v0, sel_enclosedInUIPDocumentLanding) & 1) == 0)
    return 0;
  return v3;
}

uint64_t sub_21EA902C4(void *a1)
{
  void *v2;
  id v3;
  unsigned int v4;

  v2 = (void *)objc_opt_self();
  v3 = a1;
  if (objc_msgSend(v2, sel_enclosingTabSwitcherCanBeFloating))
  {
    v4 = objc_msgSend(v3, sel_isPickerUI);

    return v4 ^ 1;
  }
  else
  {

    return 0;
  }
}

id DOCConfiguration.canHaveFloatingTabSwitcher.getter()
{
  void *v0;
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_enclosingTabSwitcherCanBeFloating);
  if ((_DWORD)result)
    return (id)(objc_msgSend(v0, sel_isPickerUI) ^ 1);
  return result;
}

id sub_21EA90374(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  UITraitCollection.descriptionOfDOCUIPTraits.getter();

  v2 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t UITraitCollection.descriptionOfDOCUIPTraits.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  sub_21EB032E4();
  sub_21EB02C0C();
  v1 = objc_msgSend(v0, sel_enclosingTabSwitcherStyle);
  if (!v1 || v1 == (id)2 || v1 == (id)1)
  {
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    sub_21EB02C0C();
    objc_msgSend(v0, sel_enclosingDocumentLandingMode);
    type metadata accessor for DOCUIPDocumentLandingMode(0);
    sub_21EB033B0();
    sub_21EB02C0C();
    objc_msgSend(v0, sel_enclosingUIPHorizontalInset);
    sub_21EB02DEC();
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for DOCTabSwitcherStyle(0);
    result = sub_21EB034F4();
    __break(1u);
  }
  return result;
}

uint64_t UIMutableTraits.enclosingTabSwitcherStyle.getter()
{
  uint64_t v1;

  sub_21EA8FEF0();
  sub_21EA59DC8(&qword_25546A840, (uint64_t (*)(uint64_t))type metadata accessor for DOCTabSwitcherStyle, (uint64_t)&unk_21EB07FF0);
  sub_21EB02660();
  return v1;
}

uint64_t UIMutableTraits.enclosingTabSwitcherStyle.setter()
{
  sub_21EA8FEF0();
  sub_21EA59DC8(&qword_25546A840, (uint64_t (*)(uint64_t))type metadata accessor for DOCTabSwitcherStyle, (uint64_t)&unk_21EB07FF0);
  return sub_21EB0266C();
}

uint64_t (*UIMutableTraits.enclosingTabSwitcherStyle.modify(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = UIMutableTraits.enclosingTabSwitcherStyle.getter();
  return sub_21EA906C0;
}

uint64_t sub_21EA906C0()
{
  return UIMutableTraits.enclosingTabSwitcherStyle.setter();
}

uint64_t UIMutableTraits.uipDocumentLandingMode.getter()
{
  uint64_t v1;

  sub_21EA9001C();
  sub_21EA59DC8(&qword_25546A850, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_21EB07FB8);
  sub_21EB02660();
  return v1;
}

uint64_t UIMutableTraits.uipDocumentLandingMode.setter()
{
  sub_21EA9001C();
  sub_21EA59DC8(&qword_25546A850, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_21EB07FB8);
  return sub_21EB0266C();
}

uint64_t (*UIMutableTraits.uipDocumentLandingMode.modify(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = UIMutableTraits.uipDocumentLandingMode.getter();
  return sub_21EA9081C;
}

uint64_t sub_21EA9081C()
{
  return UIMutableTraits.uipDocumentLandingMode.setter();
}

uint64_t UIMutableTraits.enclosingUIPHorizontalInset.getter()
{
  sub_21EA9110C();
  return sub_21EB02648();
}

uint64_t UIMutableTraits.enclosingUIPHorizontalInset.setter()
{
  sub_21EA9110C();
  return sub_21EB02654();
}

uint64_t (*UIMutableTraits.enclosingUIPHorizontalInset.modify(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v3;
  uint64_t v5;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  sub_21EA9110C();
  sub_21EB02648();
  *a1 = v5;
  return sub_21EA9093C;
}

uint64_t sub_21EA9093C()
{
  sub_21EA9110C();
  return sub_21EB02654();
}

uint64_t UITraitOverrides.enclosingTabSwitcherStyleIfSet.getter()
{
  uint64_t v1;

  sub_21EA8FEF0();
  if ((sub_21EB02690() & 1) == 0)
    return 0;
  sub_21EB0269C();
  sub_21EA59DC8(&qword_25546A840, (uint64_t (*)(uint64_t))type metadata accessor for DOCTabSwitcherStyle, (uint64_t)&unk_21EB07FF0);
  sub_21EB02660();
  return v1;
}

uint64_t UITraitOverrides.uipDocumentLandingModeIfSet.getter()
{
  sub_21EA9001C();
  while ((sub_21EB02690() & 1) != 0)
    ;
  return 0;
}

void *DOCTabSwitcherStyleTrait.name.unsafeMutableAddressor()
{
  return &static DOCTabSwitcherStyleTrait.name;
}

uint64_t static DOCTabSwitcherStyleTrait.name.getter()
{
  return sub_21EA90E80((uint64_t *)&static DOCTabSwitcherStyleTrait.name);
}

uint64_t static DOCTabSwitcherStyleTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_21EA90EE0(a1, a2, static DOCTabSwitcherStyleTrait.name, &static DOCTabSwitcherStyleTrait.name[1]);
}

uint64_t (*static DOCTabSwitcherStyleTrait.name.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static DOCTabSwitcherStyleTrait.defaultValue.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2DEE0]), sel_init);
  v1 = _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(v0, 0, 2, 0);

  return v1;
}

uint64_t static DOCTabSwitcherStyleTrait.defaultStyle(for:)(void *a1)
{
  return _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(a1, 0, 2, 0);
}

void sub_21EA90B68(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2DEE0]), sel_init);
  v3 = _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(v2, 0, 2, 0);

  *a1 = v3;
}

uint64_t sub_21EA90BC8(uint64_t a1, uint64_t a2)
{
  return sub_21EA910A4(a1, a2, static DOCTabSwitcherStyleTrait.name);
}

void *DOCUIPHorizontalInsetTrait.name.unsafeMutableAddressor()
{
  return &static DOCUIPHorizontalInsetTrait.name;
}

uint64_t static DOCUIPHorizontalInsetTrait.name.getter()
{
  return sub_21EA90E80((uint64_t *)&static DOCUIPHorizontalInsetTrait.name);
}

uint64_t static DOCUIPHorizontalInsetTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_21EA90EE0(a1, a2, static DOCUIPHorizontalInsetTrait.name, &static DOCUIPHorizontalInsetTrait.name[1]);
}

uint64_t (*static DOCUIPHorizontalInsetTrait.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_21EA90C50()
{
  static DOCUIPHorizontalInsetTrait.defaultValue = 0;
}

uint64_t *DOCUIPHorizontalInsetTrait.defaultValue.unsafeMutableAddressor()
{
  if (qword_255469A70 != -1)
    swift_once();
  return &static DOCUIPHorizontalInsetTrait.defaultValue;
}

double static DOCUIPHorizontalInsetTrait.defaultValue.getter()
{
  if (qword_255469A70 != -1)
    swift_once();
  swift_beginAccess();
  return *(double *)&static DOCUIPHorizontalInsetTrait.defaultValue;
}

uint64_t static DOCUIPHorizontalInsetTrait.defaultValue.setter(double a1)
{
  uint64_t result;

  if (qword_255469A70 != -1)
    swift_once();
  result = swift_beginAccess();
  static DOCUIPHorizontalInsetTrait.defaultValue = *(_QWORD *)&a1;
  return result;
}

uint64_t (*static DOCUIPHorizontalInsetTrait.defaultValue.modify())()
{
  if (qword_255469A70 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_21EA90DE4@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_255469A70 != -1)
    swift_once();
  swift_beginAccess();
  result = *(double *)&static DOCUIPHorizontalInsetTrait.defaultValue;
  *a1 = static DOCUIPHorizontalInsetTrait.defaultValue;
  return result;
}

uint64_t sub_21EA90E54(uint64_t a1, uint64_t a2)
{
  return sub_21EA910A4(a1, a2, static DOCUIPHorizontalInsetTrait.name);
}

void *DOCUIPDocumentLandingModeTrait.name.unsafeMutableAddressor()
{
  return &static DOCUIPDocumentLandingModeTrait.name;
}

uint64_t static DOCUIPDocumentLandingModeTrait.name.getter()
{
  return sub_21EA90E80((uint64_t *)&static DOCUIPDocumentLandingModeTrait.name);
}

uint64_t sub_21EA90E80(uint64_t *a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static DOCUIPDocumentLandingModeTrait.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_21EA90EE0(a1, a2, static DOCUIPDocumentLandingModeTrait.name, &static DOCUIPDocumentLandingModeTrait.name[1]);
}

uint64_t sub_21EA90EE0(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  swift_beginAccess();
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DOCUIPDocumentLandingModeTrait.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *DOCUIPDocumentLandingModeTrait.defaultValue.unsafeMutableAddressor()
{
  return &static DOCUIPDocumentLandingModeTrait.defaultValue;
}

uint64_t static DOCUIPDocumentLandingModeTrait.defaultValue.getter()
{
  swift_beginAccess();
  return static DOCUIPDocumentLandingModeTrait.defaultValue;
}

uint64_t static DOCUIPDocumentLandingModeTrait.defaultValue.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static DOCUIPDocumentLandingModeTrait.defaultValue = a1;
  return result;
}

uint64_t (*static DOCUIPDocumentLandingModeTrait.defaultValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21EA9104C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = static DOCUIPDocumentLandingModeTrait.defaultValue;
  return result;
}

uint64_t sub_21EA91094(uint64_t a1, uint64_t a2)
{
  return sub_21EA910A4(a1, a2, static DOCUIPDocumentLandingModeTrait.name);
}

uint64_t sub_21EA910A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  swift_beginAccess();
  v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

void *DOCUIPPrototyping.enhandedMajestyGridLayout.unsafeMutableAddressor()
{
  return &static DOCUIPPrototyping.enhandedMajestyGridLayout;
}

uint64_t static DOCUIPPrototyping.enhandedMajestyGridLayout.getter()
{
  return 0;
}

unint64_t sub_21EA9110C()
{
  unint64_t result;

  result = qword_25546A858;
  if (!qword_25546A858)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCUIPHorizontalInsetTrait, &type metadata for DOCUIPHorizontalInsetTrait);
    atomic_store(result, (unint64_t *)&qword_25546A858);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTabSwitcherStyleTrait()
{
  return &type metadata for DOCTabSwitcherStyleTrait;
}

ValueMetadata *type metadata accessor for DOCUIPHorizontalInsetTrait()
{
  return &type metadata for DOCUIPHorizontalInsetTrait;
}

ValueMetadata *type metadata accessor for DOCUIPDocumentLandingModeTrait()
{
  return &type metadata for DOCUIPDocumentLandingModeTrait;
}

ValueMetadata *type metadata accessor for DOCUIPPrototyping()
{
  return &type metadata for DOCUIPPrototyping;
}

uint64_t sub_21EA91190(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id DOCVisualEffectView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DOCVisualEffectView.init(coder:)()
{
  sub_21EB033C8();
  __break(1u);
}

id DOCVisualEffectView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEffect_, a1);

  return v3;
}

id DOCVisualEffectView.init(effect:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCVisualEffectView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithEffect_, a1);

  return v3;
}

uint64_t type metadata accessor for DOCVisualEffectView()
{
  return objc_opt_self();
}

id DOCVisualEffectView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCVisualEffectView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t UIBackgroundConfiguration.doc_configureWithStandardPlatter(cornerRadius:)(double a1)
{
  id v2;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  result = sub_21EB026E4();
  if (a1 > 0.0)
    return sub_21EB026D8();
  return result;
}

void UIView.doc_configureWithStandardPlatter(cornerRadius:)(double a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v3);

  if (a1 > 0.0)
    objc_msgSend(v1, sel__setCornerRadius_, a1);
}

Swift::Void __swiftcall UIView.doc_configureWithNoPlatter()()
{
  void *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

}

void static DOCFileRenamingSupport._renameDocument(atURL:newName:hostIdentifier:roleIdentifier:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD, id), uint64_t a9)
{
  uint64_t v17;
  id v18;
  BOOL v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38[6];
  char v39;

  v17 = qword_255469AE8;
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  v18 = a1;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  swift_beginAccess();
  sub_21EB01F10();
  v19 = sub_21EAAB8D4(0, a4, a5, a6, a7, a2, a3, (void (*)(_QWORD, _QWORD))a8, a9, v18, a4, a5);
  swift_release();
  if (v19)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v20 = sub_21EB0263C();
    __swift_project_value_buffer(v20, (uint64_t)static Logger.UI);
    v21 = sub_21EB02624();
    v22 = sub_21EB02EDC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = v18;
      v25 = swift_slowAlloc();
      v38[0] = v25;
      *(_DWORD *)v23 = 136315138;
      sub_21EA591E4(0xD000000000000048, 0x800000021EB10600, v38);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v21, v22, "%s function ran without rate-limiting.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v25, -1, -1);
      MEMORY[0x2207B6A18](v23, -1, -1);
      swift_bridgeObjectRelease();

      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_release();
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v26 = sub_21EB0263C();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.UI);
    v27 = sub_21EB02624();
    v28 = sub_21EB02EDC();
    v37 = v18;
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v38[0] = v30;
      *(_DWORD *)v29 = 136315138;
      sub_21EA591E4(0xD000000000000048, 0x800000021EB10600, v38);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v27, v28, "%s rename function is rate-limited. Returning error.", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v30, -1, -1);
      MEMORY[0x2207B6A18](v29, -1, -1);
    }

    v38[0] = 0xD000000000000032;
    v38[1] = 0x800000021EB105C0;
    v38[2] = 0;
    v38[3] = 0;
    v38[4] = a4;
    v38[5] = a5;
    v39 = 0;
    v31 = qword_2540A6550;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = (void *)static DOCAnalyticsManager.shared;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21EA9323C((uint64_t)v38, v32);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_21EB02B88();
    v33 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v34 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v33, sel_initWithDomain_code_userInfo_, v34, 3072, 0);

    v36 = v35;
    a8(0, v35);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();

  }
}

void sub_21EA91B4C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD);
  id v34[2];

  v31 = a6;
  v32 = a7;
  v33 = a3;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v11 = sub_21EB02300();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_21EB02B58();
  v34[0] = 0;
  v17 = objc_msgSend(v15, sel__validateFileName_error_, v16, v34);

  v18 = v34[0];
  if (v17)
  {
    v19 = (void *)objc_opt_self();
    v20 = v18;
    v21 = objc_msgSend(v19, sel_defaultManager);
    v22 = objc_msgSend(a5, sel_url);
    sub_21EB022DC();

    v23 = (_QWORD *)swift_allocObject();
    v25 = v32;
    v24 = v33;
    v23[2] = a5;
    v23[3] = v24;
    v23[4] = a4;
    v23[5] = a1;
    v26 = v31;
    v23[6] = a2;
    v23[7] = v26;
    v23[8] = v25;
    v27 = a5;
    sub_21EB01F10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0((uint64_t)v14, (uint64_t)sub_21EA94688, (uint64_t)v23);

    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v28 = v34[0];
    v29 = (void *)sub_21EB02234();

    swift_willThrow();
    v30 = v29;
    v33(0, v29);

  }
}

void sub_21EA91D74(void *a1, id a2, void *a3, void (*a4)(_QWORD, id), uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD, id), uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  _QWORD *v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  void (*v60)(_QWORD, id);
  id v61;
  _QWORD v62[2];
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD, id);
  uint64_t v67;
  uint64_t aBlock[7];

  v66 = a8;
  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v16 = sub_21EB02300();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v66 = a4;
    if (qword_255469B78 != -1)
      swift_once();
    v34 = sub_21EB0263C();
    __swift_project_value_buffer(v34, (uint64_t)static Logger.UI);
    v35 = a3;
    v36 = a2;
    v37 = v35;
    v38 = a2;
    v39 = sub_21EB02624();
    v40 = sub_21EB02EE8();
    if (os_log_type_enabled(v39, v40))
    {
      v65 = a5;
      v41 = swift_slowAlloc();
      v63 = (_QWORD *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      aBlock[0] = v64;
      *(_DWORD *)v41 = 136315394;
      v62[1] = v41 + 4;
      v42 = objc_msgSend(v37, sel_url);
      sub_21EB022DC();

      sub_21EA7C524();
      v43 = sub_21EB03488();
      v45 = v44;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      v67 = sub_21EA591E4(v43, v45, aBlock);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2112;
      if (a2)
      {
        v46 = a2;
        v47 = _swift_stdlib_bridgeErrorToNSError();
        v67 = v47;
        sub_21EB03134();
      }
      else
      {
        v67 = 0;
        sub_21EB03134();
        v47 = 0;
      }
      v58 = v63;
      *v63 = v47;

      _os_log_impl(&dword_21EA4C000, v39, v40, "[Rename] FPItemManager failed to fetch item from URL: %s with error: %@", (uint8_t *)v41, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v58, -1, -1);
      v59 = v64;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v59, -1, -1);
      MEMORY[0x2207B6A18](v41, -1, -1);

      if (!a2)
        goto LABEL_19;
    }
    else
    {

      if (!a2)
      {
LABEL_19:
        sub_21EB02B88();
        goto LABEL_20;
      }
    }
    a2 = (id)sub_21EB02228();
    v48 = objc_msgSend(a2, sel_domain);
    v49 = sub_21EB02B88();
    v51 = v50;

    v52 = sub_21EB02B88();
    if (v51)
    {
      if (v49 == v52 && v51 == v53)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v54 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0)
          goto LABEL_21;
      }
      if (!a2)
      {
        v66(0, 0);
        goto LABEL_24;
      }
      if (objc_msgSend(a2, sel_code) != (id)256)
      {
        v60 = v66;
        goto LABEL_22;
      }
      sub_21EB02B88();
      v55 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v56 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
      v57 = objc_msgSend(v55, sel_initWithDomain_code_userInfo_, v56, 4, 0);

      a2 = v57;
LABEL_21:
      v60 = v66;
      if (!a2)
      {
LABEL_23:
        v60(0, a2);
LABEL_24:

        goto LABEL_25;
      }
LABEL_22:
      v61 = a2;
      goto LABEL_23;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v20 = (void *)objc_opt_self();
  v21 = a1;
  swift_bridgeObjectRetain();
  v22 = objc_msgSend(v20, sel_shared);
  v23 = objc_msgSend(v21, sel_displayName);
  v24 = sub_21EB02B88();
  v25 = a5;
  v27 = v26;

  v28 = objc_allocWithZone((Class)type metadata accessor for DOCRenameOperation());
  v29 = sub_21EA85884(v21, a6, a7, v24, v27, v22);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = a4;
  v30[3] = v25;
  v30[4] = v66;
  v30[5] = a9;
  v30[6] = a6;
  v30[7] = a7;
  v30[8] = v21;
  aBlock[4] = (uint64_t)sub_21EA946C8;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21EA93070;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  v31 = _Block_copy(aBlock);
  v32 = v21;
  swift_bridgeObjectRetain();
  v33 = v29;
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v33, sel_setFinishedBlock_, v31);
  _Block_release(v31);

  a2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  objc_msgSend(a2, sel_scheduleAction_, v33);

LABEL_25:
}

void sub_21EA923F0(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t (*a5)(uint64_t a1, uint64_t a2), uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD);
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  id v49;
  unint64_t aBlock;
  unint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, void *);
  void *v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  char v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  if (!a2)
  {
    sub_21EA5E094(a1, (uint64_t)&aBlock, &qword_2540A6F88);
    if (v53)
    {
      sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v27 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = a3;
        *(_QWORD *)(v28 + 24) = a4;
        v54 = sub_21EA94758;
        v55 = v28;
        aBlock = MEMORY[0x24BDAC760];
        v51 = 1107296256;
        v52 = sub_21EA8159C;
        v53 = &block_descriptor_15_0;
        v29 = _Block_copy(&aBlock);
        sub_21EB01F10();
        swift_release();
        objc_msgSend(v27, sel_fetchURLForItem_completionHandler_, v49, v29);
        _Block_release(v29);

        return;
      }
    }
    else
    {
      sub_21EA59E08((uint64_t)&aBlock, &qword_2540A6F88);
    }
  }
  if (qword_255469B78 != -1)
    swift_once();
  v15 = sub_21EB0263C();
  __swift_project_value_buffer(v15, (uint64_t)static Logger.UI);
  v16 = a2;
  v17 = a2;
  v18 = sub_21EB02624();
  v19 = sub_21EB02EE8();
  if (os_log_type_enabled(v18, v19))
  {
    v46 = a5;
    v47 = a7;
    v20 = a4;
    v21 = a8;
    v22 = a3;
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138412290;
    if (a2)
    {
      v25 = a2;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v26;
      sub_21EB03134();
    }
    else
    {
      aBlock = 0;
      sub_21EB03134();
      v26 = 0;
    }
    *v24 = v26;

    _os_log_impl(&dword_21EA4C000, v18, v19, "[Rename] Rename API failed with error: %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v24, -1, -1);
    MEMORY[0x2207B6A18](v23, -1, -1);
    a3 = v22;
    a8 = v21;
    a4 = v20;
    a5 = v46;
    a7 = v47;

    if (!a2)
      goto LABEL_23;
  }
  else
  {

    if (!a2)
      goto LABEL_23;
  }
  aBlock = (unint64_t)a2;
  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8F8);
  sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    a3(0, a2);
    return;
  }
  if (objc_msgSend(v49, sel_code) != (id)-1001)
  {
    a3(0, a2);
    goto LABEL_26;
  }
  aBlock = 0xD000000000000032;
  v51 = 0x800000021EB105C0;
  v52 = 0;
  v53 = 0;
  v54 = a5;
  v55 = a6;
  v56 = 1;
  v31 = qword_2540A6550;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  v32 = (void *)static DOCAnalyticsManager.shared;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21EA9323C((uint64_t)&aBlock, v32);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v33 = (id)_DocumentManagerBundle();
  if (v33)
  {
    v34 = v33;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_21EB08F10;
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v35 + 32) = a7;
    *(_QWORD *)(v35 + 40) = a8;
    swift_bridgeObjectRetain();
    v36 = sub_21EB02B94();
    v38 = v37;
    swift_bridgeObjectRelease();
    if (qword_255469AB8 != -1)
      swift_once();
    swift_beginAccess();
    sub_21EB01F10();
    v39 = (id)_DocumentManagerBundle();
    if (v39)
    {
      v40 = v39;
      v41 = sub_21EB02168();
      v43 = v42;

      v44 = (_QWORD *)swift_allocObject();
      v44[2] = a9;
      v44[3] = a3;
      v44[4] = a4;
      sub_21EB01F10();
      v45 = a9;
      DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)(v36, v38, 0, 0xE000000000000000, v41, v43, 0, 0, (uint64_t)sub_21EA94724, (uint64_t)v44);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_26:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_21EA92ABC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD aBlock[6];

  sub_21EB02B88();
  v7 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v8 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithDomain_code_userInfo_, v8, 3072, 0);

  if (qword_255469B78 != -1)
    swift_once();
  v10 = sub_21EB0263C();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.UI);
  v11 = a2;
  v12 = sub_21EB02624();
  v13 = sub_21EB02EDC();
  if (os_log_type_enabled(v12, v13))
  {
    v20 = a3;
    v14 = (uint8_t *)swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    aBlock[0] = v11;
    v15 = v11;
    sub_21EB03134();
    *v19 = v11;

    a3 = v20;
    _os_log_impl(&dword_21EA4C000, v12, v13, "Rename: cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v19, -1, -1);
    MEMORY[0x2207B6A18](v14, -1, -1);

  }
  else
  {

  }
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = v9;
  aBlock[4] = sub_21EA9478C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_21;
  v17 = _Block_copy(aBlock);
  sub_21EB01F10();
  v18 = v9;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v17);

}

uint64_t sub_21EA92D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(id, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  id v17;
  id v18;
  _BYTE v19[16];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_21EB02300();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v19[-v14];
  sub_21EA5E094(a1, (uint64_t)v8, (uint64_t *)&unk_2540A6520);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21EA59E08((uint64_t)v8, (uint64_t *)&unk_2540A6520);
    return a3(0, a2);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_21EA579D4(0, &qword_25546A900);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
    v17 = sub_21EA92F54((uint64_t)v13, 0);
    v18 = v17;
    a3(v17, 0);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  }
}

id sub_21EA92F54(uint64_t a1, char a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_21EB022B8();
  v13[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_wrapperWithURL_readonly_error_, v4, a2 & 1, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_21EB02300();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_21EB02234();

    swift_willThrow();
    v11 = sub_21EB02300();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_21EA93070(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(__int128 *, void *);
  id v6;
  __int128 v8;
  __int128 v9;

  v5 = *(void (**)(__int128 *, void *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v9 + 1) = swift_getObjectType();
    *(_QWORD *)&v8 = a2;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_21EB01F10();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_21EA59E08((uint64_t)&v8, &qword_2540A6F88);
}

uint64_t sub_21EA93104(int a1, int a2, void *a3, int a4, int a5, uint64_t a6, void *aBlock)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v9 = _Block_copy(aBlock);
  v10 = sub_21EB02B88();
  v12 = v11;
  v13 = sub_21EB02B88();
  v15 = v14;
  if (a6)
  {
    v16 = sub_21EB02B88();
    a6 = v17;
  }
  else
  {
    v16 = 0;
  }
  _Block_copy(v9);
  v18 = a3;
  sub_21EA9415C(v18, v10, v12, v13, v15, v16, a6, (void (**)(_QWORD, _QWORD, _QWORD))v9);
  _Block_release(v9);
  _Block_release(v9);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_21EA931E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_21EB02228();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_21EA9323C(uint64_t a1, void *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[5];

  v24[3] = &type metadata for DOCAnalyticsAPIAbuseEvent;
  v24[4] = &off_24E330768;
  v4 = swift_allocObject();
  v24[0] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 64) = *(_BYTE *)(a1 + 48);
  sub_21EA9488C(a1);
  if (qword_255469BD0 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)v24, (uint64_t)aBlock);
  v7 = sub_21EB02624();
  v8 = sub_21EB02EDC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v10;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EA591E4(v12, v13, (uint64_t *)v23);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_21EA4C000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v10, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  v14 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_21EA5F908((uint64_t)v24, (uint64_t)v23);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_21EA5F94C(v23, v15 + 24);
  v21 = sub_21EA6429C;
  v22 = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v20 = &block_descriptor_70;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_21EA93558(__int128 *a1, void *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[5];
  _BYTE v25[16];
  __int128 v26;

  v24[3] = &type metadata for DOCAnalyticsItemTaggedEvent;
  v24[4] = &off_24E32EB58;
  v4 = swift_allocObject();
  v24[0] = v4;
  v26 = *a1;
  sub_21EA947C0((uint64_t)(a1 + 1), (uint64_t)v25);
  v5 = a1[1];
  *(_OWORD *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 48) = *((_BYTE *)a1 + 32);
  sub_21EA94808((uint64_t)&v26);
  sub_21EA94808((uint64_t)v25);
  if (qword_255469BD0 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)v24, (uint64_t)aBlock);
  v7 = sub_21EB02624();
  v8 = sub_21EB02EDC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v10;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EA591E4(v12, v13, (uint64_t *)v23);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_21EA4C000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v10, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  v14 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_21EA5F908((uint64_t)v24, (uint64_t)v23);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_21EA5F94C(v23, v15 + 24);
  v21 = sub_21EA6429C;
  v22 = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v20 = &block_descriptor_60;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_21EA9388C(__int128 *a1, void *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[5];
  _BYTE v25[16];
  __int128 v26;

  v24[3] = &type metadata for DOCAnalyticsSidebarTagSelectedEvent;
  v24[4] = &off_24E32C478;
  v4 = swift_allocObject();
  v24[0] = v4;
  v26 = *a1;
  sub_21EA947C0((uint64_t)(a1 + 1), (uint64_t)v25);
  v5 = a1[1];
  *(_OWORD *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 48) = *((_BYTE *)a1 + 32);
  sub_21EA94808((uint64_t)&v26);
  sub_21EA94808((uint64_t)v25);
  if (qword_255469BD0 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)v24, (uint64_t)aBlock);
  v7 = sub_21EB02624();
  v8 = sub_21EB02EDC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v10;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EA591E4(v12, v13, (uint64_t *)v23);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_21EA4C000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v10, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  v14 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_21EA5F908((uint64_t)v24, (uint64_t)v23);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_21EA5F94C(v23, v15 + 24);
  v21 = sub_21EA6429C;
  v22 = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v20 = &block_descriptor_40;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_21EA93BC0(__int128 *a1, void *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[3];
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[5];
  _BYTE v25[16];
  __int128 v26;

  v24[3] = &type metadata for DOCAnalyticsConnectToServerShownEvent;
  v24[4] = &off_24E32CE18;
  v4 = swift_allocObject();
  v24[0] = v4;
  v26 = *a1;
  sub_21EA947C0((uint64_t)(a1 + 1), (uint64_t)v25);
  v5 = a1[1];
  *(_OWORD *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 48) = *((_BYTE *)a1 + 32);
  sub_21EA94808((uint64_t)&v26);
  sub_21EA94808((uint64_t)v25);
  if (qword_255469BD0 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.Analytics);
  sub_21EA5F908((uint64_t)v24, (uint64_t)aBlock);
  v7 = sub_21EB02624();
  v8 = sub_21EB02EDC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_QWORD *)&v23[0] = v10;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0x6E657645646E6573, 0xED0000293A5F2874, (uint64_t *)v23);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v11 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v20);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EA591E4(v12, v13, (uint64_t *)v23);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    _os_log_impl(&dword_21EA4C000, v7, v8, "%s: Sending event %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v10, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }

  v14 = objc_msgSend((id)objc_opt_self(), sel_shared);
  sub_21EA5F908((uint64_t)v24, (uint64_t)v23);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  sub_21EA5F94C(v23, v15 + 24);
  v21 = sub_21EA642A0;
  v22 = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v20 = &block_descriptor_30;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_release();
  objc_msgSend(v14, sel_performAfterLaunchAlwaysAsync_block_, 0, v16);
  _Block_release(v16);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
}

uint64_t sub_21EA93EF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (**a6)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned int v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[2];

  v31 = a4;
  v32 = a5;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v33 = sub_21EB02300();
  v10 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a6;
  v14 = (void *)objc_opt_self();
  _Block_copy(a6);
  v15 = (void *)sub_21EB02B58();
  v34[0] = 0;
  v16 = objc_msgSend(v14, sel__validateFileName_error_, v15, v34);

  v17 = v34[0];
  if (v16)
  {
    v18 = (void *)objc_opt_self();
    v19 = v17;
    v20 = objc_msgSend(v18, sel_defaultManager);
    v21 = objc_msgSend(a3, sel_url);
    sub_21EB022DC();

    v22 = (_QWORD *)swift_allocObject();
    v22[2] = a3;
    v22[3] = sub_21EA9467C;
    v22[4] = v13;
    v22[5] = a1;
    v23 = v31;
    v24 = v32;
    v22[6] = a2;
    v22[7] = v23;
    v22[8] = v24;
    v25 = a3;
    sub_21EB01F10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0((uint64_t)v12, (uint64_t)sub_21EA94688, (uint64_t)v22);

    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
  }
  else
  {
    v26 = v34[0];
    v27 = (void *)sub_21EB02234();

    swift_willThrow();
    v28 = v27;
    v29 = (void *)sub_21EB02228();
    ((void (**)(_QWORD, _QWORD, void *))a6)[2](a6, 0, v29);

  }
  return swift_release();
}

void sub_21EA9415C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v16;
  id v17;
  BOOL v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36[6];
  char v37;

  swift_bridgeObjectRetain_n();
  _Block_copy(a8);
  v16 = qword_255469AE8;
  v17 = a1;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  swift_beginAccess();
  sub_21EB01F10();
  v18 = sub_21EAAB534(0, a4, a5, a6, a7, a2, a3, v17, a4, a5, a8);
  _Block_release(a8);
  swift_release();
  if (v18)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v19 = sub_21EB0263C();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.UI);
    v20 = sub_21EB02624();
    v21 = sub_21EB02EDC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v36[0] = v23;
      *(_DWORD *)v22 = 136315138;
      sub_21EA591E4(0xD000000000000048, 0x800000021EB10600, v36);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v20, v21, "%s function ran without rate-limiting.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v23, -1, -1);
      MEMORY[0x2207B6A18](v22, -1, -1);
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v24 = sub_21EB0263C();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.UI);
    v25 = sub_21EB02624();
    v26 = sub_21EB02EDC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v36[0] = v28;
      *(_DWORD *)v27 = 136315138;
      sub_21EA591E4(0xD000000000000048, 0x800000021EB10600, v36);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v25, v26, "%s rename function is rate-limited. Returning error.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v28, -1, -1);
      MEMORY[0x2207B6A18](v27, -1, -1);
    }

    v36[0] = 0xD000000000000032;
    v36[1] = 0x800000021EB105C0;
    v36[2] = 0;
    v36[3] = 0;
    v36[4] = a4;
    v36[5] = a5;
    v37 = 0;
    v29 = qword_2540A6550;
    swift_bridgeObjectRetain();
    if (v29 != -1)
      swift_once();
    v30 = (void *)static DOCAnalyticsManager.shared;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21EA9323C((uint64_t)v36, v30);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_21EB02B88();
    v31 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v32 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v31, sel_initWithDomain_code_userInfo_, v32, 3072, 0);

    v34 = v33;
    v35 = (void *)sub_21EB02228();
    ((void (**)(_QWORD, _QWORD, void *))a8)[2](a8, 0, v35);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21EA94658()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_21EA9467C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_21EA931E4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_21EA9468C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_21EA946C8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_21EA923F0(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_21EA946F8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_21EA94724(char a1)
{
  uint64_t v1;

  sub_21EA92ABC(a1 & 1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21EA94734()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA94758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21EA92D6C(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_21EA94760()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21EA9478C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, *(_QWORD *)(v0 + 32));
}

uint64_t sub_21EA947B8()
{
  return objectdestroy_23Tm();
}

uint64_t sub_21EA947C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EA94808(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21EA94834()
{
  return objectdestroy_23Tm();
}

uint64_t sub_21EA94840()
{
  return objectdestroy_23Tm();
}

uint64_t sub_21EA9484C()
{
  return objectdestroy_23Tm();
}

uint64_t sub_21EA94858()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EA9488C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21EA94918(void *a1, void *a2)
{
  uint64_t v2;

  sub_21EA91D74(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD, id))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(_QWORD, id))(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t DOCUnicode.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*DOCUnicode.rawValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DOCUnicode.__allocating_init(rawValue:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DOCUnicode.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DOCUnicode();
  return objc_msgSendSuper2(&v5, sel_init);
}

id DOCUnicode.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCUnicode.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCUnicode.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUnicode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21EA94B70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id result;
  objc_super v9;

  v3 = *a1;
  v4 = a1[1];
  v5 = (objc_class *)type metadata accessor for DOCUnicode();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v7 = v3;
  *((_QWORD *)v7 + 1) = v4;
  v9.receiver = v6;
  v9.super_class = v5;
  result = objc_msgSendSuper2(&v9, sel_init);
  *a2 = result;
  return result;
}

uint64_t sub_21EA94BD4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id static DOCUnicode.horizontalEllipsis.getter()
{
  return sub_21EA951AC(&qword_2540A6658, (id *)&static DOCUnicode.horizontalEllipsis);
}

id static DOCUnicode.nonBreakingSpace.getter()
{
  return sub_21EA951AC(&qword_255469A80, (id *)&static DOCUnicode.nonBreakingSpace);
}

id sub_21EA94D00()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 12565487;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.nonBreakingSpace_zeroWidth = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.nonBreakingSpace_zeroWidth.unsafeMutableAddressor()
{
  if (qword_255469A88 != -1)
    swift_once();
  return &static DOCUnicode.nonBreakingSpace_zeroWidth;
}

id static DOCUnicode.nonBreakingSpace_zeroWidth.getter()
{
  return sub_21EA951AC(&qword_255469A88, (id *)&static DOCUnicode.nonBreakingSpace_zeroWidth);
}

id sub_21EA94E58()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 10912226;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.bidiIsolateBeginLRI = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.bidiIsolateBeginLRI.unsafeMutableAddressor()
{
  if (qword_255469A90 != -1)
    swift_once();
  return &static DOCUnicode.bidiIsolateBeginLRI;
}

id static DOCUnicode.bidiIsolateBeginLRI.getter()
{
  return sub_21EA951AC(&qword_255469A90, (id *)&static DOCUnicode.bidiIsolateBeginLRI);
}

id sub_21EA94F34()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 10977762;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.bidiIsolateBeginRLI = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.bidiIsolateBeginRLI.unsafeMutableAddressor()
{
  if (qword_255469A98 != -1)
    swift_once();
  return &static DOCUnicode.bidiIsolateBeginRLI;
}

id static DOCUnicode.bidiIsolateBeginRLI.getter()
{
  return sub_21EA951AC(&qword_255469A98, (id *)&static DOCUnicode.bidiIsolateBeginRLI);
}

id sub_21EA95010()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 11043298;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.bidiIsolateBeginFSI = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.bidiIsolateBeginFSI.unsafeMutableAddressor()
{
  if (qword_255469AA0 != -1)
    swift_once();
  return &static DOCUnicode.bidiIsolateBeginFSI;
}

id static DOCUnicode.bidiIsolateBeginFSI.getter()
{
  return sub_21EA951AC(&qword_255469AA0, (id *)&static DOCUnicode.bidiIsolateBeginFSI);
}

id sub_21EA950EC()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for DOCUnicode();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue];
  *(_QWORD *)v2 = 11108834;
  *((_QWORD *)v2 + 1) = 0xA300000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  static DOCUnicode.bidiIsolateEnd = (uint64_t)result;
  return result;
}

uint64_t *DOCUnicode.bidiIsolateEnd.unsafeMutableAddressor()
{
  if (qword_255469AA8 != -1)
    swift_once();
  return &static DOCUnicode.bidiIsolateEnd;
}

id static DOCUnicode.bidiIsolateEnd.getter()
{
  return sub_21EA951AC(&qword_255469AA8, (id *)&static DOCUnicode.bidiIsolateEnd);
}

id sub_21EA951AC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id sub_21EA95200(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t sub_21EA9523C(uint64_t (*a1)(void))
{
  return a1();
}

double UIView.doc_pixelRounded(_:)(double a1)
{
  void *v1;
  double v3;

  objc_msgSend(v1, sel_contentScaleFactor);
  return round(v3 * a1) / v3;
}

uint64_t UIView.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  void *v3;
  id v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  if ((a1 & 1) != 0 && (v6 = objc_msgSend(v3, sel_window)) != 0)
  {

    return a2();
  }
  else
  {
    v8 = (void *)objc_opt_self();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a2;
    *(_QWORD *)(v9 + 24) = a3;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_21EA5EA84;
    *(_QWORD *)(v10 + 24) = v9;
    v12[4] = sub_21EA5EA88;
    v12[5] = v10;
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 1107296256;
    v12[2] = sub_21EA5EADC;
    v12[3] = &block_descriptor_5;
    v11 = _Block_copy(v12);
    sub_21EB01F10();
    swift_release();
    objc_msgSend(v8, sel_performWithoutAnimation_, v11);
    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v11 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t static UIView.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  if ((a1 & 1) != 0)
    return a2();
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_21EA5EA84;
  *(_QWORD *)(v8 + 24) = v7;
  v10[4] = sub_21EA5EA84;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21EA5EADC;
  v10[3] = &block_descriptor_14;
  v9 = _Block_copy(v10);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_21EA95540()
{
  return swift_deallocObject();
}

uint64_t sub_21EA95550()
{
  return swift_deallocObject();
}

uint64_t sub_21EA95560()
{
  return swift_deallocObject();
}

uint64_t sub_21EA95570()
{
  return swift_deallocObject();
}

uint64_t sub_21EA95580()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA955AC()
{
  return swift_deallocObject();
}

uint64_t sub_21EA955BC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_21EB01F10();
  v3(a2);
  return swift_release();
}

id UIView.doc_nearestAncestor<A>(ofType:)(uint64_t a1, uint64_t a2)
{
  return sub_21EA96294(a1, a2, (SEL *)&selRef_superview);
}

id UIView.doc_nearestAncestorNavBar.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;

  sub_21EA579D4(0, &qword_25546A910);
  result = objc_msgSend(v0, sel_superview);
  if (result)
  {
    v2 = result;
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    while (!objc_msgSend(v2, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      v4 = objc_msgSend(v2, sel_superview);

      v2 = v4;
      if (!v4)
        return 0;
    }
    objc_opt_self();
    return (id)swift_dynamicCastObjCClassUnconditional();
  }
  return result;
}

id UIView.doc_nearestAncestor(passingTest:)(uint64_t (*a1)(void))
{
  void *v1;
  id v3;
  id v4;
  id v5;
  char v6;

  v3 = objc_msgSend(v1, sel_superview);
  if (!v3)
    return 0;
  v4 = v3;
  while (1)
  {
    v5 = v4;
    v6 = a1();

    if ((v6 & 1) != 0)
      break;
    v4 = objc_msgSend(v5, sel_superview);

    if (!v4)
      return 0;
  }
  return v5;
}

BOOL UIView.doc_isRTL.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
}

id static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter()
{
  id v0;
  id v1;
  id v2;
  double v3;
  double v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend(v0, sel_widthAnchor);
  v2 = objc_msgSend(v1, sel_constraintGreaterThanOrEqualToConstant_, 0.0);

  objc_msgSend(v2, sel_setActive_, 1);
  LODWORD(v3) = 1144750080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  return v0;
}

Swift::Void __swiftcall UIView.doc_addAutoresizingSubview(_:insetBy:)(UIView *_, NSDirectionalEdgeInsets insetBy)
{
  void *v2;
  id v4;
  unint64_t v5;
  void *v6;
  id v7;

  objc_msgSend(v2, sel_addSubview_, _);
  -[UIView setTranslatesAutoresizingMaskIntoConstraints:](_, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = (id)DOCConstraintsToResizeWithSuperview();
  sub_21EA579D4(0, &qword_25546A918);
  v5 = sub_21EB02CF0();

  swift_bridgeObjectRetain();
  if (v5 >> 62)
  {
    sub_21EB033D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21EB034D0();
  }
  v6 = (void *)objc_opt_self();
  v7 = (id)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v7);
  swift_bridgeObjectRelease();

}

void Array<A>.doc_setActive(_:)(char a1)
{
  void *v2;
  char **v3;
  id v4;

  v2 = (void *)objc_opt_self();
  sub_21EA579D4(0, &qword_25546A918);
  sub_21EB033A4();
  v4 = (id)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v3 = &selRef_activateConstraints_;
  if ((a1 & 1) == 0)
    v3 = &selRef_deactivateConstraints_;
  objc_msgSend(v2, *v3, v4);

}

uint64_t UIView.doc_findSubtreeViews<A>(includingSelf:ofType:)(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[4];

  v4 = v3;
  v16 = sub_21EB02D38();
  if ((a1 & 1) != 0)
  {
    v7 = swift_dynamicCastUnknownClass();
    if (v7)
    {
      v17[0] = v7;
      sub_21EB02D98();
      v8 = v4;
      sub_21EB02D74();
    }
  }
  v9 = objc_msgSend(v4, sel_subviews);
  sub_21EA579D4(0, &qword_2540A6EF0);
  v10 = sub_21EB02CF0();

  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_6;
LABEL_13:
    swift_bridgeObjectRelease_n();
    return v16;
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  v11 = result;
  if (!result)
    goto LABEL_13;
LABEL_6:
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x2207B5B3C](v13, v10);
      else
        v14 = *(id *)(v10 + 8 * v13 + 32);
      v15 = v14;
      ++v13;
      v17[2] = a3;
      v17[3] = &v16;
      sub_21EA95C98(1, (uint64_t (*)(void *))sub_21EA965A4, (uint64_t)v17);

    }
    while (v11 != v13);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

BOOL sub_21EA95C28(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = swift_dynamicCastUnknownClass();
  if (v2)
  {
    sub_21EB02D98();
    v3 = a1;
    sub_21EB02D74();
  }
  return v2 == 0;
}

uint64_t sub_21EA95C98(char a1, uint64_t (*a2)(void *), uint64_t a3)
{
  void *v3;
  uint64_t result;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;

  if ((a1 & 1) == 0 || (result = a2(v3), (result & 1) != 0))
  {
    v7 = objc_msgSend(v3, sel_subviews);
    sub_21EA579D4(0, &qword_2540A6EF0);
    v8 = sub_21EB02CF0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_21EB0341C();
      v9 = result;
      if (result)
        goto LABEL_5;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_5:
        if (v9 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0)
            v11 = (id)MEMORY[0x2207B5B3C](i, v8);
          else
            v11 = *(id *)(v8 + 8 * i + 32);
          v12 = v11;
          sub_21EA95C98(1, a2, a3);

        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t UIView.doc_performOnSubtree(includingSelf:_:)(char a1, void (*a2)(void *), uint64_t a3)
{
  void *v3;

  return sub_21EA963C8(a1, v3, a2, a3);
}

id UIViewController.doc_performBlock(allowingAnimations:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  void *v3;
  id result;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[6];

  if ((a1 & 1) != 0 && objc_msgSend(v3, sel_doc_hasAppearedOrIsAppearing))
  {
    result = objc_msgSend(v3, sel_view);
    if (!result)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    v7 = result;
    v8 = objc_msgSend(result, sel_window);

    if (v8)
    {

      if (objc_msgSend(v3, sel_doc_isAppearing))
      {
        v9 = objc_msgSend(v3, sel_navigationController);
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v9, sel_topViewController);
          if (v11)
          {
            v12 = v11;
            sub_21EA579D4(0, &qword_2540A6E08);
            v13 = v3;
            v14 = v12;
            v15 = sub_21EB0308C();

            if ((v15 & 1) != 0)
              goto LABEL_9;
          }
          else
          {

          }
        }
      }
      return (id)a2();
    }
  }
LABEL_9:
  v16 = (void *)objc_opt_self();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_21EA5EA84;
  *(_QWORD *)(v18 + 24) = v17;
  v20[4] = sub_21EA5EA84;
  v20[5] = v18;
  v20[0] = MEMORY[0x24BDAC760];
  v20[1] = 1107296256;
  v20[2] = sub_21EA5EADC;
  v20[3] = &block_descriptor_41;
  v19 = _Block_copy(v20);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v16, sel_performWithoutAnimation_, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = (id)swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

void UIViewController.doc_dismiss(animated:includingPresented:completion:)(char a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];

  if ((a2 & 1) != 0 && (v8 = objc_msgSend(v4, sel_presentedViewController)) != 0)
  {
    v9 = v8;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v4;
    v11 = a1 & 1;
    *(_BYTE *)(v10 + 24) = v11;
    *(_QWORD *)(v10 + 32) = a3;
    *(_QWORD *)(v10 + 40) = a4;
    v12 = v4;
    sub_21EB01F10();
    UIViewController.doc_dismiss(animated:includingPresented:completion:)(v11, 1, sub_21EA96574, v10);

    swift_release();
  }
  else
  {
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a3;
    *(_QWORD *)(v13 + 24) = a4;
    v15[4] = sub_21EA5EA88;
    v15[5] = v13;
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 1107296256;
    v15[2] = sub_21EA5EAB0;
    v15[3] = &block_descriptor_47;
    v14 = _Block_copy(v15);
    sub_21EB01F10();
    swift_release();
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, a1 & 1, v14);
    _Block_release(v14);
  }
}

Swift::Void __swiftcall UIViewController.doc_dismissViewController()()
{
  UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, (uint64_t)nullsub_1, 0);
}

id UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  id v7;
  id v8;
  void *v9;

  v7 = sub_21EA96294(a1, a3, (SEL *)&selRef_parentViewController);
  if (!v7 && (a2 & 1) != 0)
  {
    v8 = objc_msgSend(v3, sel_presentingViewController);
    if (v8)
    {
      v9 = v8;
      v7 = sub_21EA96294(a1, a3, (SEL *)&selRef_parentViewController);

    }
    else
    {
      return 0;
    }
  }
  return v7;
}

id sub_21EA96294(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  id result;
  void *v6;
  uint64_t ObjCClassFromMetadata;
  id v8;

  result = objc_msgSend(v3, *a3);
  if (result)
  {
    v6 = result;
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    while ((objc_msgSend(v6, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
    {
      v8 = objc_msgSend(v6, *a3);

      v6 = v8;
      if (!v8)
        return 0;
    }
    return (id)swift_dynamicCastUnknownClassUnconditional();
  }
  return result;
}

uint64_t UIViewController.doc_findSubtreeViews<A>(includingSelf:loadViewIfNeed:ofType:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v5 = v4;
  v8 = objc_msgSend(v5, sel_viewIfLoaded);
  if (!v8)
    return sub_21EB02D38();
  v10 = v8;
  v11 = UIView.doc_findSubtreeViews<A>(includingSelf:ofType:)(a1 & 1, v9, a4);

  return v11;
}

uint64_t sub_21EA963C8(char a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t i;
  id v12;
  void *v13;

  if ((a1 & 1) != 0)
    a3(a2);
  v7 = objc_msgSend(a2, sel_subviews);
  sub_21EA579D4(0, &qword_2540A6EF0);
  v8 = sub_21EB02CF0();

  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_5;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  v9 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_5:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x2207B5B3C](i, v8);
      else
        v12 = *(id *)(v8 + 8 * i + 32);
      v13 = v12;
      sub_21EA963C8(1, v12, a3, a4);

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA96504()
{
  return swift_deallocObject();
}

uint64_t sub_21EA96514()
{
  return swift_deallocObject();
}

uint64_t sub_21EA96524()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA96548()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EA96574()
{
  uint64_t v0;

  return UIViewController.doc_dismiss(animated:includingPresented:completion:)(*(unsigned __int8 *)(v0 + 24), 0, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

BOOL sub_21EA965A4(void *a1)
{
  return sub_21EA95C28(a1);
}

void *DOCTraitChangeObservingOptions.triggerInitialObservance.unsafeMutableAddressor()
{
  return &static DOCTraitChangeObservingOptions.triggerInitialObservance;
}

uint64_t static DOCTraitChangeObservingOptions.triggerInitialObservance.getter()
{
  return 1;
}

uint64_t sub_21EA965F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_21EA9688C(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t UIView.doc_registerForTraitChanges<A>(_:options:handler:)(uint64_t a1, char a2, char a3, void (*a4)(uint64_t, _QWORD), uint64_t a5, uint64_t a6)
{
  return sub_21EA9669C(a1, a2, a3, a4, a5, a6, &qword_2540A6EF0, 0x24BEBDB00, MEMORY[0x24BEBCFC0]);
}

uint64_t UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)(uint64_t a1, char a2, char a3, void (*a4)(uint64_t, _QWORD), uint64_t a5, uint64_t a6)
{
  return sub_21EA9669C(a1, a2, a3, a4, a5, a6, &qword_2540A6E08, 0x24BEBDB08, MEMORY[0x24BEBCCB0]);
}

uint64_t sub_21EA9669C(uint64_t a1, char a2, char a3, void (*a4)(uint64_t, _QWORD), uint64_t a5, uint64_t a6, unint64_t *a7, uint64_t a8, uint64_t (*a9)(uint64_t, void (*)(uint64_t, _QWORD), uint64_t, uint64_t))
{
  void *v9;
  void *v10;
  id v15;
  uint64_t v17;

  v10 = v9;
  if ((a3 & 1) == 0 && (a2 & 1) != 0)
  {
    sub_21EA579D4(0, a7);
    v15 = v10;
    swift_dynamicCast();
    a4(v17, 0);
    swift_unknownObjectRelease();
  }
  return a9(a1, a4, a5, a6);
}

unint64_t sub_21EA9675C()
{
  unint64_t result;

  result = qword_25546A920;
  if (!qword_25546A920)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTraitChangeObservingOptions, &type metadata for DOCTraitChangeObservingOptions);
    atomic_store(result, (unint64_t *)&qword_25546A920);
  }
  return result;
}

unint64_t sub_21EA967A4()
{
  unint64_t result;

  result = qword_25546A928;
  if (!qword_25546A928)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTraitChangeObservingOptions, &type metadata for DOCTraitChangeObservingOptions);
    atomic_store(result, (unint64_t *)&qword_25546A928);
  }
  return result;
}

unint64_t sub_21EA967EC()
{
  unint64_t result;

  result = qword_25546A930;
  if (!qword_25546A930)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTraitChangeObservingOptions, &type metadata for DOCTraitChangeObservingOptions);
    atomic_store(result, (unint64_t *)&qword_25546A930);
  }
  return result;
}

unint64_t sub_21EA96834()
{
  unint64_t result;

  result = qword_25546A938;
  if (!qword_25546A938)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTraitChangeObservingOptions, &type metadata for DOCTraitChangeObservingOptions);
    atomic_store(result, (unint64_t *)&qword_25546A938);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTraitChangeObservingOptions()
{
  return &type metadata for DOCTraitChangeObservingOptions;
}

uint64_t sub_21EA9688C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t DOCOperation.finishedBlock.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  v2 = *v1;
  sub_21EA83588(*v1);
  return v2;
}

uint64_t DOCOperation.finishedBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_21EA5CA7C(v6);
}

uint64_t (*DOCOperation.finishedBlock.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DOCOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DOCOperation.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  _QWORD v18[4];
  char *v19;
  objc_super v20;
  uint64_t v21;

  v1 = sub_21EB02F48();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02F30();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v8);
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished] = 0;
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting] = 0;
  v9 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
  sub_21EA5D1AC();
  *v9 = 0;
  v9[1] = 0;
  v19 = v0;
  sub_21EB02A44();
  v21 = MEMORY[0x24BEE4AF8];
  v18[2] = sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v7, MEMORY[0x24BEE5698]);
  v18[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  v18[3] = sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  v10 = *MEMORY[0x24BEE5750];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v12 = v3;
  v11(v5, v10, v3);
  v13 = v5;
  v14 = sub_21EB02F84();
  v15 = v19;
  *(_QWORD *)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue] = v14;
  sub_21EB02A44();
  v21 = MEMORY[0x24BEE4AF8];
  sub_21EB031DC();
  v11(v13, v10, v12);
  *(_QWORD *)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue] = sub_21EB02F84();

  v16 = (objc_class *)type metadata accessor for DOCOperation();
  v20.receiver = v15;
  v20.super_class = v16;
  return objc_msgSendSuper2(&v20, sel_init);
}

uint64_t type metadata accessor for DOCOperation()
{
  return objc_opt_self();
}

Swift::Void __swiftcall DOCOperation.start()()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = sub_21EB02A20();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02A5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_21EA97114;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_6;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_21EB02A44();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, v2, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
}

id sub_21EA96EB8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v2 = sub_21EB02A20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02A5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isCancelled))
  {
    v14[0] = *(_QWORD *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a1;
    aBlock[4] = sub_21EA980AC;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EAB0;
    aBlock[3] = &block_descriptor_58;
    v11 = _Block_copy(aBlock);
    v12 = a1;
    sub_21EB02A44();
    v14[1] = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v9, v5, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (id)swift_release();
  }
  else
  {
    objc_msgSend(a1, sel_setExecuting_, 1);
    return objc_msgSend(a1, sel_main);
  }
}

uint64_t sub_21EA970F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_21EA97114()
{
  uint64_t v0;

  return sub_21EA96EB8(*(char **)(v0 + 16));
}

uint64_t DOCOperation.isAsynchronous.getter()
{
  return 1;
}

uint64_t DOCOperation.isFinished.getter()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  unsigned __int8 v10;

  v10 = 0;
  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_21EA974D0;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_21EA5EAA8;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EADC;
  aBlock[3] = &block_descriptor_9_1;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

void DOCOperation.isFinished.setter(char a1)
{
  char *v1;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  void *v9;
  _QWORD v10[6];

  v3 = (void *)sub_21EB02B58();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  v4 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + 24) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_21EA9751C;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_21EA5EA80;
  v10[5] = v6;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21EA5EADC;
  v10[3] = &block_descriptor_19;
  v7 = _Block_copy(v10);
  v8 = v1;
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = (void *)sub_21EB02B58();
    objc_msgSend(v8, sel_didChangeValueForKey_, v9);
    swift_release();

  }
}

uint64_t sub_21EA974AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EA974D0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished);
}

uint64_t sub_21EA974E8()
{
  return swift_deallocObject();
}

uint64_t sub_21EA974F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EA9751C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isFinished) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_21EA97534()
{
  return swift_deallocObject();
}

uint64_t DOCOperation.isExecuting.getter()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  unsigned __int8 v10;

  v10 = 0;
  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_21EA97898;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_21EA5EA80;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EADC;
  aBlock[3] = &block_descriptor_29;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

void DOCOperation.isExecuting.setter(char a1)
{
  char *v1;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  void *v9;
  _QWORD v10[6];

  v3 = (void *)sub_21EB02B58();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  v4 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_synchronizationQueue];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + 24) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_21EA978C0;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_21EA5EA80;
  v10[5] = v6;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21EA5EADC;
  v10[3] = &block_descriptor_39;
  v7 = _Block_copy(v10);
  v8 = v1;
  sub_21EB01F10();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = (void *)sub_21EB02B58();
    objc_msgSend(v8, sel_didChangeValueForKey_, v9);
    swift_release();

  }
}

void sub_21EA97898()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting);
}

uint64_t sub_21EA978B0()
{
  return swift_deallocObject();
}

void sub_21EA978C0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation__isExecuting) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_21EA978D8()
{
  return swift_deallocObject();
}

Swift::Void __swiftcall DOCOperation.cancel()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCOperation();
  objc_msgSendSuper2(&v1, sel_cancel);
  DOCOperation._finishIfCanceled()();
}

id DOCOperation._finishIfCanceled()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v1 = sub_21EB02A20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21EB02A5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, sel_isCancelled);
  if ((_DWORD)v9)
  {
    v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v0;
    aBlock[4] = sub_21EA98060;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EAB0;
    aBlock[3] = &block_descriptor_51;
    v11 = _Block_copy(aBlock);
    v16 = v2;
    v12 = v11;
    v13 = v0;
    sub_21EB02A44();
    v18 = MEMORY[0x24BEE4AF8];
    sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
    sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
    sub_21EB031DC();
    MEMORY[0x2207B57A0](0, v8, v4, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
  return v9;
}

uint64_t sub_21EA97B74(char *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t *v5;
  void (*v6)(_OWORD *, id);
  uint64_t v7;
  _OWORD v9[2];

  memset(v9, 0, sizeof(v9));
  sub_21EB02B88();
  v2 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v3 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, 3072, 0);

  if (!objc_msgSend(a1, sel_isFinished))
  {
    v5 = (uint64_t *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
    swift_beginAccess();
    v6 = (void (*)(_OWORD *, id))*v5;
    if (*v5)
    {
      sub_21EB01F10();
      v6(v9, v4);
      v7 = *v5;
      *v5 = 0;
      v5[1] = 0;
      sub_21EA5CA7C(v7);
      sub_21EA5CA7C((uint64_t)v6);
    }
    objc_msgSend(a1, sel_setExecuting_, 0);
    objc_msgSend(a1, sel_setFinished_, 1);
  }

  return sub_21EA5B5B0((uint64_t)v9);
}

uint64_t DOCOperation.completed(with:error:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];
  _BYTE v21[32];

  v5 = sub_21EB02A20();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21EB02A5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
  sub_21EA5B5F0(a1, (uint64_t)v21);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  sub_21EA5B638((uint64_t)v21, v14 + 24);
  *(_QWORD *)(v14 + 56) = a2;
  aBlock[4] = sub_21EA97FD4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_45;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  v17 = a2;
  sub_21EB02A44();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, v6, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

id sub_21EA97EC8(char *a1, uint64_t a2, uint64_t a3)
{
  id result;
  uint64_t *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  result = objc_msgSend(a1, sel_isFinished);
  if ((result & 1) == 0)
  {
    v7 = (uint64_t *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
    swift_beginAccess();
    v8 = (void (*)(uint64_t, uint64_t))*v7;
    if (*v7)
    {
      sub_21EB01F10();
      v8(a2, a3);
      v9 = *v7;
      *v7 = 0;
      v7[1] = 0;
      sub_21EA5CA7C(v9);
      sub_21EA5CA7C((uint64_t)v8);
    }
    objc_msgSend(a1, sel_setExecuting_, 0);
    return objc_msgSend(a1, sel_setFinished_, 1);
  }
  return result;
}

uint64_t sub_21EA97F98()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return swift_deallocObject();
}

id sub_21EA97FD4()
{
  uint64_t v0;

  return sub_21EA97EC8(*(char **)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 56));
}

id DOCOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21EA98060()
{
  uint64_t v0;

  return sub_21EA97B74(*(char **)(v0 + 16));
}

unint64_t sub_21EA980B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB20);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_21EA5B7F4(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA981BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAF0);
  v2 = sub_21EB0344C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v6, (uint64_t)v15, &qword_25546AAF8);
    result = sub_21EA821BC((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_21EA5951C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA982FC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB10);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = (void *)*(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    v8 = v5;
    swift_bridgeObjectRetain();
    result = sub_21EA8221C(v5);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    v11 = (_QWORD *)(v2[7] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA9840C(uint64_t a1)
{
  return sub_21EA98770(a1, &qword_25546AB00, &qword_25546AB08, (uint64_t (*)(_QWORD))sub_21EA822D8);
}

unint64_t sub_21EA98428(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAE0);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21EA5B7F8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA98548(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA8);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (char *)(a1 + 33);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    result = sub_21EA82548(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_BYTE *)(v2[7] + result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_21EA98640(uint64_t a1)
{
  sub_21EA98658(a1, &qword_25546AAB0);
}

void sub_21EA9864C(uint64_t a1)
{
  sub_21EA98658(a1, &qword_25546AAC0);
}

void sub_21EA98658(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(a2),
        v3 = (_QWORD *)sub_21EB0344C(),
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    sub_21EB01F10();
    v5 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v6 = *((_BYTE *)v5 - 8);
      v7 = *v5;
      swift_bridgeObjectRetain();
      sub_21EA82490(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      *(_BYTE *)(v3[6] + v8) = v6;
      *(_QWORD *)(v3[7] + 8 * v8) = v7;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      v5 += 2;
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_21EA98754(uint64_t a1)
{
  return sub_21EA98770(a1, &qword_25546AAD0, &qword_25546AAD8, (uint64_t (*)(_QWORD))sub_21EA82604);
}

unint64_t sub_21EA98770(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);

  v29 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_21EB0344C();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = &v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v28 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v17, (uint64_t)v10, a2);
    v19 = *v10;
    result = v29(*v10);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v12[6] + result) = v19;
    v23 = v12[7];
    v24 = sub_21EB02024();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v14, v24);
    v25 = v12[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_11;
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA98908(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A428);
  v2 = sub_21EB0344C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_21EB01F10();
  while (1)
  {
    sub_21EA5E094(v6, (uint64_t)&v15, &qword_25546A430);
    v7 = v15;
    v8 = v16;
    result = sub_21EA5B7F8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_21EA5951C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA98A3C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA0);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_21EA826A4((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21EA98B44(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F08);
  v2 = (_QWORD *)sub_21EB0344C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_21EB01F10();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_21EA826D4((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *DOCSystemAlert.shared.unsafeMutableAddressor()
{
  if (qword_255469AB8 != -1)
    swift_once();
  return &static DOCSystemAlert.shared;
}

void sub_21EA98C8C(void *a1, char a2)
{
  uint64_t v3;
  id v4;
  void (*v5)(_QWORD *);
  _QWORD v6[3];

  if (a1)
  {
    v3 = qword_255469AB0;
    v4 = a1;
    if (v3 != -1)
      swift_once();
    swift_beginAccess();
    v5 = (void (*)(_QWORD *))sub_21EAC3C9C((uint64_t)v4);
    swift_endAccess();
    if (v5)
    {
      v6[0] = a2 & 3;
      v5(v6);
      sub_21EA5CA7C((uint64_t)v5);
    }

  }
}

unint64_t sub_21EA98D44()
{
  unint64_t result;

  result = sub_21EA9CEAC(MEMORY[0x24BEE4AF8]);
  qword_25546A990 = result;
  return result;
}

BOOL static DOCSystemAlert.Response.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DOCSystemAlert.Response.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCSystemAlert.Response.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EA98DE0()
{
  uint64_t result;

  type metadata accessor for DOCSystemAlert();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  static DOCSystemAlert.shared = result;
  return result;
}

uint64_t static DOCSystemAlert.shared.getter()
{
  if (qword_255469AB8 != -1)
    swift_once();
  swift_beginAccess();
  return sub_21EB01F10();
}

uint64_t static DOCSystemAlert.shared.setter(uint64_t a1)
{
  if (qword_255469AB8 != -1)
    swift_once();
  swift_beginAccess();
  static DOCSystemAlert.shared = a1;
  return swift_release();
}

uint64_t (*static DOCSystemAlert.shared.modify())()
{
  if (qword_255469AB8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t inited;
  void *v22;
  void **v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  unint64_t v29;
  void *v30;
  id v31;
  char isUniquelyReferenced_nonNull_native;
  const __CFDictionary *v33;
  CFUserNotificationRef v34;
  Class isa;
  Class v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  __CFUserNotification *v41;
  CFRunLoopSourceRef RunLoopSource;
  Class v43;
  Class v44;
  __CFRunLoopSource *v45;
  __CFRunLoop *v46;
  __CFString *v47;
  uint64_t v48;
  _QWORD *v49;
  __CFRunLoop *v50;
  char v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void *v56;
  Class v57;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v61;
  SInt32 error;
  unint64_t v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  if (v10[2].isa)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v11 = sub_21EB0263C();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.UI);
    oslog = sub_21EB02624();
    v12 = sub_21EB02EDC();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21EA4C000, oslog, v12, "Error dialog is already visible. Don't show a second one.", v13, 2u);
      MEMORY[0x2207B6A18](v13, -1, -1);
    }

  }
  else
  {
    osloga = v10;
    error = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A998);
    inited = swift_initStackObject();
    v22 = (void *)*MEMORY[0x24BDBD6D8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBD6D8];
    *(_QWORD *)(inited + 40) = a1;
    v23 = (void **)MEMORY[0x24BDBD6E0];
    *(_OWORD *)(inited + 16) = xmmword_21EB09A00;
    v24 = *v23;
    *(_QWORD *)(inited + 48) = a2;
    *(_QWORD *)(inited + 56) = v24;
    *(_QWORD *)(inited + 64) = a3;
    *(_QWORD *)(inited + 72) = a4;
    v25 = (void *)*MEMORY[0x24BDBD6F8];
    *(_QWORD *)(inited + 80) = *MEMORY[0x24BDBD6F8];
    *(_QWORD *)(inited + 88) = a5;
    *(_QWORD *)(inited + 96) = a6;
    v26 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v22;
    v28 = v24;
    v29 = sub_21EA982FC(inited);
    if (a8)
    {
      v30 = (void *)*MEMORY[0x24BDBD6F0];
      v31 = (id)*MEMORY[0x24BDBD6F0];
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63 = v29;
      sub_21EA9B3F0(a7, a8, v30, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A9A0);
    sub_21EA997CC();
    v33 = (const __CFDictionary *)sub_21EB02AC8();
    swift_bridgeObjectRelease();
    v34 = CFUserNotificationCreate(0, 0.0, 3uLL, &error, v33);

    isa = osloga[2].isa;
    osloga[2].isa = v34;

    v36 = osloga[2].isa;
    if (v36 && !error)
    {
      v41 = v36;
      RunLoopSource = CFUserNotificationCreateRunLoopSource(0, v41, (CFUserNotificationCallBack)sub_21EA9958C, 0);
      v43 = osloga[3].isa;
      osloga[3].isa = RunLoopSource;

      v44 = osloga[3].isa;
      if (v44)
      {
        v45 = v44;
        v46 = CFRunLoopGetCurrent();
        v47 = (__CFString *)CFRunLoopCopyCurrentMode(v46);
        if (!v47)
          v47 = (__CFString *)(id)*MEMORY[0x24BDBD598];
        if (qword_255469AB0 != -1)
          swift_once();
        v48 = swift_allocObject();
        swift_weakInit();
        v49 = (_QWORD *)swift_allocObject();
        v49[2] = v48;
        v49[3] = a9;
        v49[4] = a10;
        v49[5] = v46;
        swift_beginAccess();
        sub_21EB01F10();
        sub_21EA83588(a9);
        v50 = v46;
        v51 = swift_isUniquelyReferenced_nonNull_native();
        v61 = qword_25546A990;
        qword_25546A990 = 0x8000000000000000;
        sub_21EA9B2B4((uint64_t)sub_21EA998A0, (uint64_t)v49, (uint64_t)v41, v51);
        qword_25546A990 = v61;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        CFRunLoopAddSource(v50, v45, v47);
        CFRunLoopRun();

      }
      else
      {
        if (qword_255469B78 != -1)
          swift_once();
        v52 = sub_21EB0263C();
        __swift_project_value_buffer(v52, (uint64_t)static Logger.UI);
        v53 = sub_21EB02624();
        v54 = sub_21EB02EE8();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v55 = 0;
          _os_log_impl(&dword_21EA4C000, v53, v54, "Could not create CFRunLoopSource.", v55, 2u);
          MEMORY[0x2207B6A18](v55, -1, -1);
          v56 = v41;
        }
        else
        {
          v56 = v53;
          v53 = v41;
        }

        v57 = osloga[2].isa;
        osloga[2].isa = 0;

      }
    }
    else
    {
      if (qword_255469B78 != -1)
        swift_once();
      v37 = sub_21EB0263C();
      __swift_project_value_buffer(v37, (uint64_t)static Logger.UI);
      v38 = sub_21EB02624();
      v39 = sub_21EB02EE8();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v40 = 67109120;
        swift_beginAccess();
        sub_21EB03134();
        _os_log_impl(&dword_21EA4C000, v38, v39, "Could not create CFUserNotification: %d", v40, 8u);
        MEMORY[0x2207B6A18](v40, -1, -1);
      }

    }
  }
}

void sub_21EA9958C(void *a1, char a2)
{
  id v4;

  v4 = a1;
  sub_21EA98C8C(a1, a2);

}

uint64_t sub_21EA995CC(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, __CFRunLoop *a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  __CFRunLoopSource *v10;
  void *v11;
  __CFUserNotification *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v7 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v10 = *(__CFRunLoopSource **)(result + 24);
    if (v10)
    {
      CFRunLoopSourceInvalidate(v10);
      v11 = *(void **)(v9 + 24);
      *(_QWORD *)(v9 + 24) = 0;

    }
    v12 = *(__CFUserNotification **)(v9 + 16);
    if (v12)
    {
      CFUserNotificationCancel(v12);
      v13 = *(void **)(v9 + 16);
      *(_QWORD *)(v9 + 16) = 0;

    }
    if (v7 == 1)
    {
      if (a3)
        a3(1);
    }
    else if (v7)
    {
      if (qword_255469B78 != -1)
        swift_once();
      v14 = sub_21EB0263C();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.UI);
      v15 = sub_21EB02624();
      v16 = sub_21EB02EE8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v17 = 134217984;
        sub_21EB03134();
        _os_log_impl(&dword_21EA4C000, v15, v16, "Unexpected response from validating notification: %lu", v17, 0xCu);
        MEMORY[0x2207B6A18](v17, -1, -1);
      }

    }
    else if (a3)
    {
      a3(0);
    }
    CFRunLoopStop(a5);
    return swift_release();
  }
  return result;
}

uint64_t DOCSystemAlert.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DOCSystemAlert.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

unint64_t sub_21EA997CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25546A9A8;
  if (!qword_25546A9A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546A9A0);
    v2 = sub_21EA9CE6C(&qword_255469FB8, (uint64_t)&unk_21EB07F74);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25546A9A8);
  }
  return result;
}

uint64_t sub_21EA99840()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EA99864()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_21EA998A0(uint64_t *a1)
{
  uint64_t v1;

  return sub_21EA995CC(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(__CFRunLoop **)(v1 + 40));
}

uint64_t sub_21EA998AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB20);
  v37 = a2;
  v6 = sub_21EB03440();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_21EB01F10();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v34;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        v32 = v30;
        swift_bridgeObjectRetain();
      }
      sub_21EB02B88();
      sub_21EB035A8();
      sub_21EB02BDC();
      v14 = sub_21EB035E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA99BC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB18);
  result = sub_21EB03440();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v30 = 1 << *(_BYTE *)(v5 + 32);
    v31 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_40;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        sub_21EB01F10();
      result = sub_21EB0359C();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_21EA99E78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB10);
  v39 = a2;
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_21EB01F10();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v37)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v38 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_35;
      v20 = *(_QWORD *)(v38 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_35:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v20 = *(_QWORD *)(v38 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_44;
            if (v13 >= v37)
              goto LABEL_35;
            v20 = *(_QWORD *)(v38 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v17);
    v24 = *v23;
    v25 = v23[1];
    if ((v39 & 1) == 0)
    {
      v26 = v22;
      swift_bridgeObjectRetain();
    }
    sub_21EB035A8();
    sub_21EB035C0();
    if (v22)
    {
      type metadata accessor for CFString(0);
      sub_21EA9CE6C(&qword_25546A410, (uint64_t)&unk_21EB074F8);
      v27 = v22;
      sub_21EB02450();

    }
    result = sub_21EB035E4();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v22;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v14);
    *v15 = v24;
    v15[1] = v25;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v19 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v19, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA9A1F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAB8);
  v38 = a2;
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_21EB01F10();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_21EB035A8();
    sub_21EB02BDC();
    result = sub_21EB035E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA9A504(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAB0);
  v6 = sub_21EB03440();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  sub_21EB01F10();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    if ((a2 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_21EB035A8();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x21EA9A848);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_21EA9A858(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA8);
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v32 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_21EB01F10();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_31;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v33;
          if ((v32 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
    sub_21EB035A8();
    sub_21EB02BDC();
    swift_bridgeObjectRelease();
    result = sub_21EB035E4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((v32 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA9AB94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA0);
  v6 = sub_21EB03440();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_21EB01F10();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_bridgeObjectRetain();
    }
    result = sub_21EB03080();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21EA9AE68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A428);
  v6 = sub_21EB03440();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_21EB01F10();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_21EA5951C(v24, v35);
      }
      else
      {
        sub_21EA5A05C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21EB035A8();
      sub_21EB02BDC();
      result = sub_21EB035E4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_21EA5951C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

id sub_21EA9B164(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_21EA5B7F4(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_21EA9BBD4();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_21EA998AC(v12, a3 & 1);
  v18 = sub_21EA5B7F4(a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = (id)sub_21EB03530();
  __break(1u);
  return result;
}

uint64_t sub_21EA9B2B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21EA821EC(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_21EA9BF44();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_21EA99BC8(result, a4 & 1);
  result = sub_21EA821EC(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21EB03530();
  __break(1u);
  return result;
}

id sub_21EA9B3F0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id result;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *v4;
  v11 = sub_21EA8221C(a3);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_21EA9C0EC();
LABEL_7:
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = (_QWORD *)(v17[7] + 16 * v11);
      result = (id)swift_bridgeObjectRelease();
      *v18 = a1;
      v18[1] = a2;
      return result;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_QWORD *)(v17[6] + 8 * v11) = a3;
    v22 = (_QWORD *)(v17[7] + 16 * v11);
    *v22 = a1;
    v22[1] = a2;
    v23 = v17[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v17[2] = v25;
      return a3;
    }
    goto LABEL_14;
  }
  sub_21EA99E78(v14, a4 & 1);
  v20 = sub_21EA8221C(a3);
  if ((v15 & 1) == (v21 & 1))
  {
    v11 = v20;
    v17 = (_QWORD *)*v5;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A9A0);
  result = (id)sub_21EB03530();
  __break(1u);
  return result;
}

unint64_t sub_21EA9B558()
{
  unint64_t result;

  result = qword_25546A9B0;
  if (!qword_25546A9B0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCSystemAlert.Response, &type metadata for DOCSystemAlert.Response);
    atomic_store(result, (unint64_t *)&qword_25546A9B0);
  }
  return result;
}

uint64_t type metadata accessor for DOCSystemAlert()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for DOCSystemAlert.Response(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EA9B608 + 4 * byte_21EB09A25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EA9B63C + 4 * byte_21EB09A20[v4]))();
}

uint64_t sub_21EA9B63C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA9B644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA9B64CLL);
  return result;
}

uint64_t sub_21EA9B658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA9B660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EA9B664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA9B66C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCSystemAlert.Response()
{
  return &type metadata for DOCSystemAlert.Response;
}

void sub_21EA9B688(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  sub_21EA82490(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_21EA9C7B8();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v17[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_21EA9A504(v14, a3 & 1);
  sub_21EA82490(a2);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_21EB03530();
  __break(1u);
}

uint64_t sub_21EA9B7BC(char a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_21EA82548(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_21EA9C958();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1 & 1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_21EA9A858(result, a3 & 1);
  result = sub_21EA82548(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21EB03530();
  __break(1u);
  return result;
}

id sub_21EA9B8EC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_21EA826A4((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_21EA9CAE0();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_21EA9AB94(v12, a3 & 1);
  v18 = sub_21EA826A4((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_21EA83738();
  result = (id)sub_21EB03530();
  __break(1u);
  return result;
}

_OWORD *sub_21EA9BA3C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21EA5B7F8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_21EA5951C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21EA9CC88();
      goto LABEL_7;
    }
    sub_21EA9AE68(v15, a4 & 1);
    v21 = sub_21EA5B7F8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21EA9BB6C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_21EB03530();
  __break(1u);
  return result;
}

_OWORD *sub_21EA9BB6C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_21EA5951C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_21EA9BBD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB20);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9BD7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F20);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_21EA5A05C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_21EA5951C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = (void *)sub_21EB01F10();
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9BF44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB18);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)sub_21EB01F10();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9C0EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB10);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v20;
    v22[1] = v21;
    v23 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9C2A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAE8);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21EA9C454()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAB8);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9C604()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F00);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9C7B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAB0);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9C958()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA8);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9CAE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAA0);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21EA9CC88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A428);
  v2 = *v0;
  v3 = sub_21EB03434();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_21EA5A05C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21EA5951C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21EA9CE6C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x2207B694C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21EA9CEAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _OWORD *v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB18);
  v3 = (_QWORD *)sub_21EB0344C();
  v4 = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  result = sub_21EA821EC(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    sub_21EB01F10();
    return (unint64_t)v3;
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    if (!--v1)
      goto LABEL_8;
    v11 = (_OWORD *)((char *)v7 + 24);
    v4 = *((_QWORD *)v7 - 1);
    v13 = *v7;
    sub_21EB01F10();
    result = sub_21EA821EC(v4);
    v7 = v11;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EA9CFB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21EB02258();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_21EB020A8();
  __swift_allocate_value_buffer(v5, static GroupingMode.typeDisplayRepresentation);
  __swift_project_value_buffer(v5, (uint64_t)static GroupingMode.typeDisplayRepresentation);
  sub_21EB02240();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_21EB0209C();
}

uint64_t GroupingMode.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_21EA9DC78(&qword_255469AC0, (uint64_t (*)(_QWORD))MEMORY[0x24BDB6200], (uint64_t)static GroupingMode.typeDisplayRepresentation);
}

uint64_t static GroupingMode.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255469AC0 != -1)
    swift_once();
  v2 = sub_21EB020A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static GroupingMode.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static GroupingMode.typeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_255469AC0 != -1)
    swift_once();
  v2 = sub_21EB020A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static GroupingMode.typeDisplayRepresentation);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static GroupingMode.typeDisplayRepresentation.modify())()
{
  uint64_t v0;

  if (qword_255469AC0 != -1)
    swift_once();
  v0 = sub_21EB020A8();
  __swift_project_value_buffer(v0, (uint64_t)static GroupingMode.typeDisplayRepresentation);
  swift_beginAccess();
  return j__swift_endAccess;
}

void *static GroupingMode.allCases.getter()
{
  return &unk_24E3280A8;
}

uint64_t GroupingMode.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21EA9D2E4 + 4 * byte_21EB09AE0[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_21EA9D2E4()
{
  return 1684957547;
}

uint64_t sub_21EA9D2F0()
{
  return 1702125924;
}

uint64_t sub_21EA9D2FC()
{
  return 1702521203;
}

uint64_t sub_21EA9D308()
{
  return 0x7942646572616873;
}

void sub_21EA9D320(char *a1)
{
  sub_21EAF02DC(*a1);
}

void sub_21EA9D32C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21EB035A8();
  __asm { BR              X9 }
}

uint64_t sub_21EA9D370()
{
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

void sub_21EA9D3D4()
{
  __asm { BR              X10 }
}

uint64_t sub_21EA9D408()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

void sub_21EA9D458()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21EB035A8();
  __asm { BR              X9 }
}

uint64_t sub_21EA9D498()
{
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EA9D4FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables12GroupingModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21EA9D528()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21EA9D550 + 4 * byte_21EB09AF4[*v0]))();
}

void sub_21EA9D550(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1684957547;
  a1[1] = v1;
}

void sub_21EA9D560(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1702125924;
  a1[1] = v1;
}

void sub_21EA9D570(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1702521203;
  a1[1] = v1;
}

void sub_21EA9D580(_QWORD *a1@<X8>)
{
  *a1 = 0x7942646572616873;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_21EA9D5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255469AC0 != -1)
    swift_once();
  v2 = sub_21EB020A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static GroupingMode.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_21EA9D638()
{
  sub_21EA79A7C();
  return sub_21EB01E44();
}

uint64_t sub_21EA9D674()
{
  sub_21EA9EE70();
  return sub_21EB02078();
}

void sub_21EA9D6AC(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E3280D0;
}

uint64_t *SetGroupingModeIntent.attributionBundleIdentifier.unsafeMutableAddressor()
{
  return &static SetGroupingModeIntent.attributionBundleIdentifier;
}

uint64_t static SetGroupingModeIntent.attributionBundleIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static SetGroupingModeIntent.attributionBundleIdentifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SetGroupingModeIntent.attributionBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  static SetGroupingModeIntent.attributionBundleIdentifier = a1;
  qword_25546AB30 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SetGroupingModeIntent.attributionBundleIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21EA9D7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21EB0224C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_21EB02258();
  __swift_allocate_value_buffer(v6, static SetGroupingModeIntent.title);
  __swift_project_value_buffer(v6, (uint64_t)static SetGroupingModeIntent.title);
  sub_21EB02B40();
  sub_21EB023E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCD328], v0);
  return sub_21EB02264();
}

uint64_t SetGroupingModeIntent.title.unsafeMutableAddressor()
{
  return sub_21EA9DC78(&qword_255469AC8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCD380], (uint64_t)static SetGroupingModeIntent.title);
}

uint64_t static SetGroupingModeIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA9DCE0(&qword_255469AC8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCD380], (uint64_t)static SetGroupingModeIntent.title, a1);
}

uint64_t sub_21EA9D990()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD v14[2];
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21EB0224C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v8);
  v15 = sub_21EB02258();
  v9 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v10 = sub_21EB01FF4();
  __swift_allocate_value_buffer(v10, static SetGroupingModeIntent.description);
  v14[1] = __swift_project_value_buffer(v10, (uint64_t)static SetGroupingModeIntent.description);
  sub_21EB02B40();
  sub_21EB023E4();
  v11 = *MEMORY[0x24BDCD328];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v12(v6, v11, v3);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v12(v6, v11, v3);
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v15);
  return sub_21EB02000();
}

uint64_t SetGroupingModeIntent.description.unsafeMutableAddressor()
{
  return sub_21EA9DC78(&qword_255469AD0, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SetGroupingModeIntent.description);
}

uint64_t sub_21EA9DC78(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;

  if (*a1 != -1)
    swift_once();
  v5 = a2(0);
  return __swift_project_value_buffer(v5, a3);
}

uint64_t static SetGroupingModeIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA9DCE0(&qword_255469AD0, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SetGroupingModeIntent.description, a1);
}

uint64_t sub_21EA9DCE0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t SetGroupingModeIntent.groupingMode.getter()
{
  unsigned __int8 v1;

  sub_21EB01EB0();
  return v1;
}

uint64_t SetGroupingModeIntent.groupingMode.setter()
{
  return sub_21EB01EBC();
}

void (*SetGroupingModeIntent.groupingMode.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_21EB01EA4();
  return sub_21EA9DDF4;
}

void sub_21EA9DDF4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t SetGroupingModeIntent.$groupingMode.getter()
{
  return sub_21EB01EC8();
}

void *SetGroupingModeIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static SetGroupingModeIntent.openAppWhenRun;
}

uint64_t static SetGroupingModeIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static SetGroupingModeIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB38);
  MEMORY[0x24BDAC7A8](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB40);
  MEMORY[0x24BDAC7A8](v1);
  sub_21EA9EBFC();
  sub_21EB02054();
  sub_21EB02048();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB50);
  sub_21EB0203C();
  swift_release();
  sub_21EB02048();
  sub_21EB02060();
  return sub_21EB02030();
}

uint64_t SetGroupingModeIntent.perform()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21EA9DFD8()
{
  uint64_t v0;

  sub_21EB01E98();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21EA9E00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255469AC8 != -1)
    swift_once();
  v2 = sub_21EB02258();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SetGroupingModeIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_21EA9E07C()
{
  return 1;
}

uint64_t sub_21EA9E094(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21EA9E0AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables21SetGroupingModeIntentVACycfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21EA9E0D0()
{
  sub_21EA9EBFC();
  return sub_21EB01E74();
}

unint64_t _s26DocumentManagerExecutables12GroupingModeO26caseDisplayRepresentationsSDyAC10AppIntents0G14RepresentationVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *);
  char *v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v46[2];
  char *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v55;
  unint64_t v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(char *);
  char *v63;
  uint64_t v64;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AC00);
  MEMORY[0x24BDAC7A8](v0);
  v63 = (char *)v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v2);
  v58 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_21EB0224C();
  v4 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_21EB02258();
  v11 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AC08);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AB00);
  v15 = *(_QWORD *)(v14 - 8);
  v57 = *(_BYTE **)(v15 + 72);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v50 = 4 * (_QWORD)v57;
  v17 = swift_allocObject();
  v51 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_21EB09EE0;
  v56 = v17 + v16;
  v18 = *(int *)(v14 + 48);
  v53 = v14;
  v49 = v17 + v16 + v18;
  *(_BYTE *)(v17 + v16) = 0;
  sub_21EB02B40();
  sub_21EB023E4();
  v55 = *MEMORY[0x24BDCD328];
  v62 = *(void (**)(char *))(v4 + 104);
  v19 = v61;
  v62(v6);
  v20 = v13;
  sub_21EB02264();
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v21 = v58;
  v22 = v64;
  v60(v58, 1, 1, v64);
  v59 = sub_21EB0200C();
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v54(v63, 1, 1, v59);
  v46[1] = v20;
  sub_21EB02018();
  v23 = v56;
  v24 = v57;
  v49 = (uint64_t)&v57[v56 + *(int *)(v14 + 48)];
  v57[v56] = 1;
  v52 = v10;
  sub_21EB02B40();
  sub_21EB023E4();
  v47 = v6;
  v25 = v55;
  ((void (*)(char *, _QWORD, uint64_t))v62)(v6, v55, v19);
  sub_21EB02264();
  v26 = v21;
  v27 = v60;
  v60(v26, 1, 1, v22);
  v28 = v54;
  v54(v63, 1, 1, v59);
  sub_21EB02018();
  v49 = 2 * (_QWORD)v24;
  v29 = (_BYTE *)(v23 + 2 * (_QWORD)v24);
  v30 = v53;
  v48 = &v29[*(int *)(v53 + 48)];
  *v29 = 2;
  sub_21EB02B40();
  sub_21EB023E4();
  v31 = v47;
  v32 = v25;
  v33 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v62)(v47, v32, v61);
  sub_21EB02264();
  v34 = v58;
  v27(v58, 1, 1, v64);
  v35 = v59;
  v28(v63, 1, 1, v59);
  sub_21EB02018();
  v36 = v56;
  v37 = &v57[v49 + v56];
  v57 = &v37[*(int *)(v30 + 48)];
  *v37 = 3;
  sub_21EB02B40();
  sub_21EB023E4();
  v38 = v31;
  v39 = v31;
  v40 = v55;
  v41 = v61;
  ((void (*)(char *, _QWORD, uint64_t))v33)(v39, v55, v61);
  sub_21EB02264();
  v60(v34, 1, 1, v64);
  v42 = v63;
  v43 = v35;
  v44 = v54;
  v54(v63, 1, 1, v43);
  sub_21EB02018();
  *(_BYTE *)(v36 + v50) = 4;
  sub_21EB02B40();
  sub_21EB023E4();
  ((void (*)(char *, uint64_t, uint64_t))v62)(v38, v40, v41);
  sub_21EB02264();
  v60(v34, 1, 1, v64);
  v44(v42, 1, 1, v59);
  sub_21EB02018();
  return sub_21EA9840C(v51);
}

uint64_t _s26DocumentManagerExecutables12GroupingModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t _s26DocumentManagerExecutables21SetGroupingModeIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v0 = sub_21EB0206C();
  v27 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v26 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D58);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB0224C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_21EB02258();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D68);
  sub_21EB02B40();
  sub_21EB023E4();
  v16 = *MEMORY[0x24BDCD328];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, v16, v8);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v17(v11, v16, v8);
  v18 = v23;
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  v29 = 0;
  v19 = sub_21EB01E8C();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v24, 1, 1, v19);
  v20(v25, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x24BDB6090], v28);
  sub_21EA79A7C();
  return sub_21EB01ED4();
}

unint64_t sub_21EA9EBFC()
{
  unint64_t result;

  result = qword_25546AB48;
  if (!qword_25546AB48)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetGroupingModeIntent, &type metadata for SetGroupingModeIntent);
    atomic_store(result, (unint64_t *)&qword_25546AB48);
  }
  return result;
}

uint64_t sub_21EA9EC40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21EB01EC8();
  *a1 = result;
  return result;
}

unint64_t sub_21EA9EC6C()
{
  unint64_t result;

  result = qword_25546AB60;
  if (!qword_25546AB60)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB60);
  }
  return result;
}

unint64_t sub_21EA9ECB4()
{
  unint64_t result;

  result = qword_25546AB68;
  if (!qword_25546AB68)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB68);
  }
  return result;
}

unint64_t sub_21EA9ECFC()
{
  unint64_t result;

  result = qword_25546AB70;
  if (!qword_25546AB70)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB70);
  }
  return result;
}

unint64_t sub_21EA9ED44()
{
  unint64_t result;

  result = qword_25546AB78;
  if (!qword_25546AB78)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB78);
  }
  return result;
}

uint64_t sub_21EA9ED88()
{
  return MEMORY[0x24BEE0D78];
}

unint64_t sub_21EA9ED98()
{
  unint64_t result;

  result = qword_25546AB80;
  if (!qword_25546AB80)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB80);
  }
  return result;
}

unint64_t sub_21EA9EDE0()
{
  unint64_t result;

  result = qword_25546AB88;
  if (!qword_25546AB88)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB88);
  }
  return result;
}

unint64_t sub_21EA9EE28()
{
  unint64_t result;

  result = qword_25546AB90;
  if (!qword_25546AB90)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB90);
  }
  return result;
}

unint64_t sub_21EA9EE70()
{
  unint64_t result;

  result = qword_25546AB98;
  if (!qword_25546AB98)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546AB98);
  }
  return result;
}

uint64_t sub_21EA9EEB4()
{
  sub_21EA79A7C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21EA9EEF8()
{
  unint64_t result;

  result = qword_25546ABA0;
  if (!qword_25546ABA0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546ABA0);
  }
  return result;
}

unint64_t sub_21EA9EF40()
{
  unint64_t result;

  result = qword_25546ABA8;
  if (!qword_25546ABA8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546ABA8);
  }
  return result;
}

unint64_t sub_21EA9EF88()
{
  unint64_t result;

  result = qword_25546ABB0;
  if (!qword_25546ABB0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for GroupingMode, &type metadata for GroupingMode);
    atomic_store(result, (unint64_t *)&qword_25546ABB0);
  }
  return result;
}

uint64_t sub_21EA9EFCC()
{
  return sub_21EA9F1DC(&qword_25546ABB8, &qword_25546ABC0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_21EA9EFFC()
{
  unint64_t result;

  result = qword_25546ABC8;
  if (!qword_25546ABC8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetGroupingModeIntent, &type metadata for SetGroupingModeIntent);
    atomic_store(result, (unint64_t *)&qword_25546ABC8);
  }
  return result;
}

unint64_t sub_21EA9F044()
{
  unint64_t result;

  result = qword_25546ABD0;
  if (!qword_25546ABD0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetGroupingModeIntent, &type metadata for SetGroupingModeIntent);
    atomic_store(result, (unint64_t *)&qword_25546ABD0);
  }
  return result;
}

uint64_t sub_21EA9F088()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21EA9F098()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t storeEnumTagSinglePayload for GroupingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21EA9F0F4 + 4 * byte_21EB09AFE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21EA9F128 + 4 * byte_21EB09AF9[v4]))();
}

uint64_t sub_21EA9F128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA9F130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EA9F138);
  return result;
}

uint64_t sub_21EA9F144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EA9F14CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21EA9F150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EA9F158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupingMode()
{
  return &type metadata for GroupingMode;
}

ValueMetadata *type metadata accessor for SetGroupingModeIntent()
{
  return &type metadata for SetGroupingModeIntent;
}

uint64_t sub_21EA9F184()
{
  return sub_21EA9F1DC(&qword_25546ABE0, &qword_25546ABE8, MEMORY[0x24BDB5F68]);
}

uint64_t sub_21EA9F1B0()
{
  return sub_21EA9F1DC(&qword_25546ABF0, &qword_25546ABF8, MEMORY[0x24BDB5E58]);
}

uint64_t sub_21EA9F1DC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207B694C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *DOCCollaborationHighlightManager.shared.unsafeMutableAddressor()
{
  if (qword_2540A6648 != -1)
    swift_once();
  return &static DOCCollaborationHighlightManager.shared;
}

id static DOCCollaborationHighlightManager.shared.getter()
{
  if (qword_2540A6648 != -1)
    swift_once();
  swift_beginAccess();
  return (id)static DOCCollaborationHighlightManager.shared;
}

void static DOCCollaborationHighlightManager.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_2540A6648 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)static DOCCollaborationHighlightManager.shared;
  static DOCCollaborationHighlightManager.shared = a1;

}

uint64_t (*static DOCCollaborationHighlightManager.shared.modify())()
{
  if (qword_2540A6648 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_21EA9F3A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  NSObject *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _QWORD *v40;
  id v41;
  void *v42;
  uint64_t inited;
  void *v44;
  _QWORD *v45;
  NSObject *v46;
  uint64_t v47;

  if (qword_255469B70 != -1)
    swift_once();
  v7 = sub_21EB0263C();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.DocumentManager);
  v8 = a1;
  v9 = sub_21EB02624();
  v10 = sub_21EB02EDC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v45 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v47 = a3;
    v12 = v8;
    sub_21EB03134();
    *v45 = v8;

    a3 = v47;
    _os_log_impl(&dword_21EA4C000, v9, v10, "No collaboration highlight in cache for %@, fetching...", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v45, -1, -1);
    MEMORY[0x2207B6A18](v11, -1, -1);

  }
  else
  {

  }
  v13 = *(void **)(a2
                 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_collaborationIdentifierToHighlightCache);
  v14 = (void *)sub_21EB02B58();
  v15 = objc_msgSend(v13, sel_objectForKey_, v14);

  if (v15)
  {
    v16 = v8;
    v17 = sub_21EB02624();
    v18 = sub_21EB02EDC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v16;
      sub_21EB03134();
      *v20 = v16;

      _os_log_impl(&dword_21EA4C000, v17, v18, "Highlight already in cache for %@, ignoring!", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v20, -1, -1);
      MEMORY[0x2207B6A18](v19, -1, -1);

      return;
    }

    goto LABEL_11;
  }
  v22 = *(void **)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_highlightCenter);
  v23 = (void *)sub_21EB02F9C();
  v24 = objc_msgSend(v22, sel_fetchAttributionsForHighlight_, v23);
  objc_opt_self();
  v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    v26 = v25;
    v27 = v24;
    v28 = v8;
    v29 = v27;
    v30 = v28;
    v46 = v29;
    v31 = sub_21EB02624();
    v32 = sub_21EB02EDC();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = 138412546;
      v44 = v23;
      v35 = v46;
      sub_21EB03134();
      *v34 = v26;

      *(_WORD *)(v33 + 12) = 2112;
      v36 = v30;
      sub_21EB03134();
      v34[1] = v30;

      v23 = v44;
      _os_log_impl(&dword_21EA4C000, v31, v32, "Successfully fetched highlight %@ for %@", (uint8_t *)v33, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v34, -1, -1);
      MEMORY[0x2207B6A18](v33, -1, -1);
    }
    else
    {

      v31 = v46;
    }

    v42 = (void *)sub_21EB02B58();
    objc_msgSend(v13, sel_setObject_forKey_, v26, v42);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    swift_bridgeObjectRetain();
    sub_21EA9FBFC(inited);

    swift_setDeallocating();
    swift_arrayDestroy();

  }
  else
  {

    v16 = v8;
    v37 = sub_21EB02624();
    v38 = sub_21EB02EE8();
    if (!os_log_type_enabled(v37, v38))
    {

LABEL_11:
      return;
    }
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v39 = 138412290;
    v41 = v16;
    sub_21EB03134();
    *v40 = v16;

    _os_log_impl(&dword_21EA4C000, v37, v38, "Could not get complete highlight for %@", v39, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v40, -1, -1);
    MEMORY[0x2207B6A18](v39, -1, -1);

  }
}

void sub_21EA9FBFC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  if (a1)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (uint64_t *)(a1 + 40);
      do
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain();
        sub_21EACCCC4(&v12, v7, v8);
        swift_bridgeObjectRelease();
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
  }
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v1;
  *(_QWORD *)(v9 + 24) = ObjectType;
  aBlock[4] = sub_21EAA047C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_20;
  v10 = _Block_copy(aBlock);
  v11 = v2;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v10);
}

void sub_21EA9FD3C(char *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  _QWORD v11[6];

  v4 = OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_coalescingTimer], sel_invalidate);
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v11[4] = sub_21EAA0434;
  v11[5] = v6;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_21EAA71A8;
  v11[3] = &block_descriptor_13;
  v7 = _Block_copy(v11);
  v8 = a1;
  swift_release();
  v9 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v7, 0.1);
  _Block_release(v7);
  v10 = *(void **)&a1[v4];
  *(_QWORD *)&a1[v4] = v9;

}

uint64_t sub_21EA9FE48(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = (uint64_t *)(a2
                 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCCollaborationHighlightManager_pendingIdentifiersToNotify);
  swift_beginAccess();
  if (*(_QWORD *)(*v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A438);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
    v18 = 0xD000000000000012;
    v19 = 0x800000021EB10E40;
    sub_21EB032A8();
    v5 = *v3;
    *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_25546ACB0);
    *(_QWORD *)(inited + 72) = v5;
    swift_bridgeObjectRetain();
    v6 = sub_21EA981BC(inited);
  }
  else
  {
    v6 = 0;
  }
  if (qword_255469B70 != -1)
    swift_once();
  v7 = sub_21EB0263C();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.DocumentManager);
  swift_bridgeObjectRetain_n();
  v8 = sub_21EB02624();
  v9 = sub_21EB02EDC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    v20 = v6;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546ACA0);
    v12 = sub_21EB02BA0();
    v20 = sub_21EA591E4(v12, v13, &v18);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v8, v9, "Sending highlights did change notification with userInfo=%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v11, -1, -1);
    MEMORY[0x2207B6A18](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_2540A6E40 != -1)
    swift_once();
  v15 = static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange;
  if (v6)
  {
    v16 = (void *)sub_21EB02AC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v14, sel_postNotificationName_object_userInfo_, v15, a2, v16, v18, v19);

  *v3 = MEMORY[0x24BEE4B08];
  return swift_bridgeObjectRelease();
}

void *DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.unsafeMutableAddressor()
{
  return &static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey;
}

id DOCCollaborationHighlightManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCollaborationHighlightManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCCollaborationHighlightManager.highlightCenterHighlightsDidChange(_:)(SWHighlightCenter a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  ObjectType = swift_getObjectType();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = ObjectType;
  v6[4] = sub_21EAA03D0;
  v6[5] = v3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_21EA5EAB0;
  v6[3] = &block_descriptor_7;
  v4 = _Block_copy(v6);
  v5 = v1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v4);
}

uint64_t sub_21EAA03AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAA03D0()
{
  uint64_t v0;

  sub_21EA9FD3C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.getter()
{
  if (qword_2540A6E40 != -1)
    swift_once();
  return (id)static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange;
}

unint64_t static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_21EAA0434(uint64_t a1)
{
  uint64_t v1;

  return sub_21EA9FE48(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21EAA043C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21EAA0470()
{
  uint64_t v0;

  sub_21EA9F3A4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

id NSLayoutAnchor.doc_constraint(equalTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_21EAA0590(a1, (SEL *)&selRef_constraintEqualToAnchor_constant_, a2, a3);
}

id sub_21EAA04B0(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a5;
  v9 = a1;
  v10 = NSLayoutAnchor.doc_constraint(equalTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

id NSLayoutAnchor.doc_constraint(greaterThanOrEqualTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_21EAA0590(a1, (SEL *)&selRef_constraintGreaterThanOrEqualToAnchor_constant_, a2, a3);
}

id sub_21EAA0520(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a5;
  v9 = a1;
  v10 = NSLayoutAnchor.doc_constraint(greaterThanOrEqualTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

id NSLayoutAnchor.doc_constraint(lessThanOrEqualTo:constant:priority:)(uint64_t a1, double a2, float a3)
{
  return sub_21EAA0590(a1, (SEL *)&selRef_constraintLessThanOrEqualToAnchor_constant_, a2, a3);
}

id sub_21EAA0590(uint64_t a1, SEL *a2, double a3, float a4)
{
  void *v4;
  id v6;
  double v7;

  v6 = objc_msgSend(v4, *a2, a1);
  *(float *)&v7 = a4;
  objc_msgSend(v6, sel_setPriority_, v7);
  return v6;
}

id sub_21EAA05E4(void *a1, double a2, float a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a5;
  v9 = a1;
  v10 = NSLayoutAnchor.doc_constraint(lessThanOrEqualTo:constant:priority:)((uint64_t)v8, a2, a3);

  return v10;
}

id NSLayoutDimension.doc_constraint(equalToConstant:priority:)(double a1, float a2)
{
  void *v2;
  id v4;
  double v5;

  v4 = objc_msgSend(v2, sel_constraintEqualToConstant_);
  *(float *)&v5 = a2;
  objc_msgSend(v4, sel_setPriority_, v5);
  return v4;
}

id sub_21EAA069C(void *a1, double a2, float a3)
{
  id v5;
  id v6;
  double v7;

  v5 = a1;
  v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, a2);
  *(float *)&v7 = a3;
  objc_msgSend(v6, sel_setPriority_, v7);

  return v6;
}

double NSDirectionalEdgeInsets.copyWith(top:leading:bottom:trailing:)(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    return *(double *)&a1;
  return result;
}

double _sSo23NSDirectionalEdgeInsetsV26DocumentManagerExecutablesE2by6addingA2B_tF_0(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

double UIEdgeInsets.by(scaling:)(double a1, double a2)
{
  return a1 * a2;
}

double UIEdgeInsets.horizontalInsetsOnly.getter()
{
  return 0.0;
}

NSDirectionalEdgeInsets __swiftcall UIEdgeInsets.asDirectionalEdgeInsets(RTL:)(Swift::Bool RTL)
{
  double v1;
  double v2;
  double v3;
  double v4;
  NSDirectionalEdgeInsets result;

  if (RTL)
    v3 = v2;
  else
    v3 = v1;
  if (RTL)
    v2 = v1;
  v4 = v3;
  result.trailing = v2;
  result.leading = v4;
  return result;
}

double CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)(char a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double v20;
  CGFloat v21;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  if ((a1 & 1) != 0)
  {
    v20 = CGRectGetMaxX(*(CGRect *)&a2) + a6;
  }
  else
  {
    v21 = CGRectGetMinX(*(CGRect *)&a2) - a6;
    v23.origin.x = a7;
    v23.origin.y = a8;
    v23.size.width = a9;
    v23.size.height = a10;
    v20 = v21 - CGRectGetWidth(v23);
  }
  v24.origin.x = a7;
  v24.origin.y = a8;
  v24.size.width = a9;
  v24.size.height = a10;
  CGRectGetMinY(v24);
  v25.origin.x = a7;
  v25.origin.y = a8;
  v25.size.width = a9;
  v25.size.height = a10;
  CGRectGetWidth(v25);
  v26.origin.x = a7;
  v26.origin.y = a8;
  v26.size.width = a9;
  v26.size.height = a10;
  CGRectGetHeight(v26);
  return v20;
}

double CGRect.byPositioning(trailingRelativeToRect:offset:isRTL:)(char a1, double a2, double a3, double a4, double a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  CGFloat v20;
  double v21;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  if ((a1 & 1) != 0)
  {
    v20 = CGRectGetMinX(*(CGRect *)&a2) - a6;
    v23.origin.x = a7;
    v23.origin.y = a8;
    v23.size.width = a9;
    v23.size.height = a10;
    v21 = v20 - CGRectGetWidth(v23);
  }
  else
  {
    v21 = CGRectGetMaxX(*(CGRect *)&a2) + a6;
  }
  v24.origin.x = a7;
  v24.origin.y = a8;
  v24.size.width = a9;
  v24.size.height = a10;
  CGRectGetMinY(v24);
  v25.origin.x = a7;
  v25.origin.y = a8;
  v25.size.width = a9;
  v25.size.height = a10;
  CGRectGetWidth(v25);
  v26.origin.x = a7;
  v26.origin.y = a8;
  v26.size.width = a9;
  v26.size.height = a10;
  CGRectGetHeight(v26);
  return v21;
}

CGRect __swiftcall CGRect.byCenteringVertically(relativeToRect:isRTL:)(CGRect relativeToRect, Swift::Bool isRTL)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  double v14;
  double v15;
  CGFloat MinX;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double MinY;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect result;

  v6 = v5;
  v7 = v4;
  v8 = v3;
  v9 = v2;
  height = relativeToRect.size.height;
  width = relativeToRect.size.width;
  y = relativeToRect.origin.y;
  x = relativeToRect.origin.x;
  MinY = CGRectGetMinY(relativeToRect);
  v23.origin.x = x;
  v23.origin.y = y;
  v23.size.width = width;
  v23.size.height = height;
  v14 = CGRectGetHeight(v23);
  v24.origin.x = v9;
  v24.origin.y = v8;
  v24.size.width = v7;
  v24.size.height = v6;
  v15 = MinY + (v14 - CGRectGetHeight(v24)) * 0.5;
  v25.origin.x = v9;
  v25.origin.y = v8;
  v25.size.width = v7;
  v25.size.height = v6;
  MinX = CGRectGetMinX(v25);
  v26.origin.x = v9;
  v26.origin.y = v8;
  v26.size.width = v7;
  v26.size.height = v6;
  v17 = CGRectGetWidth(v26);
  v27.origin.x = v9;
  v27.origin.y = v8;
  v27.size.width = v7;
  v27.size.height = v6;
  v18 = CGRectGetHeight(v27);
  v19 = MinX;
  v20 = v15;
  v21 = v17;
  result.size.height = v18;
  result.size.width = v21;
  result.origin.y = v20;
  result.origin.x = v19;
  return result;
}

uint64_t sub_21EAA0A3C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void **v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_21EB0335C();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v10 = (void *)MEMORY[0x2207B5B3C]();
          type metadata accessor for DOCOperation();
          v6 = v10;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546AD40);
          swift_dynamicCast();
          swift_unknownObjectRelease();
          sub_21EB03338();
          sub_21EB03368();
          sub_21EB03374();
          sub_21EB03344();
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v7 = (void **)(a1 + 32);
        type metadata accessor for DOCOperation();
        do
        {
          v8 = *v7++;
          v9 = v8;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546AD40);
          swift_dynamicCast();

          sub_21EB03338();
          sub_21EB03368();
          sub_21EB03374();
          sub_21EB03344();
          --v2;
        }
        while (v2);
      }
      return v11;
    }
  }
  return result;
}

BOOL static DOCChainOperation.DOCChainOperationMode.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t DOCChainOperation.DOCChainOperationMode.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCChainOperation.DOCChainOperationMode.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t DOCChainOperation.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCChainOperation.mode.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DOCChainOperation.mode.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *DOCChainOperation.__allocating_init(operations:)(unint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *result;
  uint64_t i;
  uint64_t j;
  char *v14;
  id v15;
  objc_super v16;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue;
  v5 = objc_allocWithZone(MEMORY[0x24BDD1710]);
  v6 = v3;
  *(_QWORD *)&v3[v4] = objc_msgSend(v5, sel_init);
  v7 = &v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = 0;
  v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations] = a1;
  swift_bridgeObjectRetain();

  v16.receiver = v6;
  v16.super_class = v1;
  v8 = (char *)objc_msgSendSuper2(&v16, sel_init);
  v9 = v8;
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v8;
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v15 = *(id *)&v9[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue];
    objc_msgSend(v15, sel_setMaxConcurrentOperationCount_, 1);

    return v9;
  }
  swift_bridgeObjectRetain();
  v14 = v9;
  v10 = sub_21EB0341C();
  result = (char *)swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
LABEL_3:
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v10; ++i)
      {
        MEMORY[0x2207B5B3C](i, a1);
        type metadata accessor for DOCChainableOperation();
        if (swift_dynamicCastClass())
          swift_unknownObjectWeakAssign();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      type metadata accessor for DOCChainableOperation();
      for (j = 0; j != v10; ++j)
      {
        if (swift_dynamicCastClass())
          swift_unknownObjectWeakAssign();
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

char *DOCChainOperation.init(operations:)(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *result;
  uint64_t i;
  uint64_t j;
  char *v13;
  id v14;
  objc_super v15;

  v3 = OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue;
  v4 = objc_allocWithZone(MEMORY[0x24BDD1710]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = 0;
  v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations] = a1;
  swift_bridgeObjectRetain();

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for DOCChainOperation();
  v7 = (char *)objc_msgSendSuper2(&v15, sel_init);
  v8 = v7;
  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v7;
    if (v9)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v14 = *(id *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue];
    objc_msgSend(v14, sel_setMaxConcurrentOperationCount_, 1);

    return v8;
  }
  swift_bridgeObjectRetain();
  v13 = v8;
  v9 = sub_21EB0341C();
  result = (char *)swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_14;
LABEL_3:
  if (v9 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v9; ++i)
      {
        MEMORY[0x2207B5B3C](i, a1);
        type metadata accessor for DOCChainableOperation();
        if (swift_dynamicCastClass())
          swift_unknownObjectWeakAssign();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      type metadata accessor for DOCChainableOperation();
      for (j = 0; j != v9; ++j)
      {
        if (swift_dynamicCastClass())
          swift_unknownObjectWeakAssign();
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCChainableOperation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DOCChainOperation()
{
  return objc_opt_self();
}

Swift::Void __swiftcall DOCChainOperation.main()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  void *v22;
  NSObject *v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operations);
  v3 = v2 >> 62;
  v39 = v2 >> 62;
  if (!(v2 >> 62))
  {
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    goto LABEL_62;
  }
LABEL_58:
  swift_bridgeObjectRetain_n();
  v4 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  v3 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v3 < 1)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  swift_bridgeObjectRetain();
  v36 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v36 < v4)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    sub_21EB02D20();
    goto LABEL_22;
  }
LABEL_73:
  v3 = v39;
LABEL_4:
  v45 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0 && v4 != 1)
  {
    type metadata accessor for DOCOperation();
    v6 = 1;
    do
    {
      v7 = v6 + 1;
      sub_21EB032FC();
      v6 = v7;
    }
    while (v4 != v7);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21EB03428();
    v3 = v9;
    v1 = v10;
    v4 = v11;
    swift_bridgeObjectRelease_n();
    if ((v4 & 1) != 0)
    {
LABEL_15:
      sub_21EB034DC();
      swift_unknownObjectRetain_n();
      v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        v13 = MEMORY[0x24BEE4AF8];
      }
      v14 = *(_QWORD *)(v13 + 16);
      swift_release();
      if (!__OFSUB__((unint64_t)v4 >> 1, v1))
      {
        if (v14 == ((unint64_t)v4 >> 1) - v1)
        {
          v12 = swift_dynamicCastClass();
          if (!v12)
          {
            swift_unknownObjectRelease();
            v12 = MEMORY[0x24BEE4AF8];
          }
          goto LABEL_21;
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
  }
  else
  {
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v1 = 1;
    v4 = (2 * v4) | 1;
    if ((v4 & 1) != 0)
      goto LABEL_15;
  }
  while (1)
  {
    v12 = sub_21EAA1DE4(v8, v3, v1, v4);
LABEL_21:
    swift_unknownObjectRelease();
    v15 = sub_21EAA0A3C(v12);
    swift_release();
    v46 = v15;
    v16 = swift_bridgeObjectRetain();
    MEMORY[0x2207B5500](v16);
    v3 = *(_QWORD *)(v15 + 16);
    if ((unint64_t)v3 >= *(_QWORD *)(v15 + 24) >> 1)
      goto LABEL_63;
LABEL_22:
    sub_21EB02D5C();
    sub_21EB02D08();
    v8 = v46;
    swift_bridgeObjectRelease();
    v43 = swift_allocObject();
    *(_BYTE *)(v43 + 16) = 0;
    v4 = v39;
    if (v39)
    {
      if ((v2 & 0x8000000000000000) != 0)
        v3 = v2;
      else
        v3 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v4 = v39;
      v17 = sub_21EB0341C();
      if (!v17)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4)
          goto LABEL_43;
        goto LABEL_47;
      }
    }
    else
    {
      v17 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v17)
        goto LABEL_42;
    }
    if (v45)
      break;
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = (char *)*(id *)(v2 + 32);
      goto LABEL_27;
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_unknownObjectRelease();
  }
  while (1)
  {
    v18 = (char *)MEMORY[0x2207B5B3C](0, v2);
LABEL_27:
    v19 = v18;
    v42 = *(_QWORD *)(v8 + 16);
    if (v42)
    {
      v20 = 0;
      v37 = v2 + 40;
      v38 = v2 & 0xFFFFFFFFFFFFFF8;
      v40 = v17 - 1;
      v41 = v2;
      while (v20 < *(_QWORD *)(v8 + 16))
      {
        v22 = *(void **)(v8 + 32 + 8 * v20);
        v23 = *(NSObject **)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue];
        v24 = v22;
        dispatch_suspend(v23);
        if (v22)
          objc_msgSend(v24, sel_addDependency_, v19);
        v25 = (uint64_t *)&v19[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_finishedBlock];
        swift_beginAccess();
        v26 = *v25;
        v1 = v25[1];
        v27 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v28 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v29 = (_QWORD *)swift_allocObject();
        v29[2] = v27;
        v29[3] = v43;
        v29[4] = v26;
        v29[5] = v1;
        v29[6] = v28;
        v30 = *v25;
        v17 = v25[1];
        *v25 = (uint64_t)sub_21EAA1FDC;
        v25[1] = (uint64_t)v29;
        sub_21EA83588(v26);
        sub_21EB01F10();
        sub_21EA5CA7C(v30);

        if (v40 == v20)
        {
          swift_bridgeObjectRelease();
          v2 = v41;
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        v31 = v20 + 1;
        if (v45)
        {
          v2 = v41;
          v21 = (char *)MEMORY[0x2207B5B3C](v31, v41);
        }
        else
        {
          v2 = v41;
          if (v31 >= *(_QWORD *)(v38 + 16))
            goto LABEL_57;
          v21 = (char *)*(id *)(v37 + 8 * v20);
        }
        v19 = v21;
        if (v42 == ++v20)
          goto LABEL_44;
      }
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_46:
    v4 = v39;
    if (v39)
    {
LABEL_43:
      swift_bridgeObjectRetain();
      v8 = sub_21EB0341C();
      goto LABEL_48;
    }
LABEL_47:
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_48:
    if (!v8)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_71;
    }
    if (v45)
      break;
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v32 = (char *)*(id *)(v2 + 32);
      goto LABEL_52;
    }
    __break(1u);
  }
  v32 = (char *)MEMORY[0x2207B5B3C](0, v2);
LABEL_52:
  v33 = v32;
  swift_bridgeObjectRelease();
  dispatch_resume(*(dispatch_object_t *)&v33[OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue]);

  v34 = *(void **)(v44 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue);
  if (v4)
  {
    sub_21EAA1FEC();
    swift_bridgeObjectRetain();
    sub_21EB033D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_21EB034D0();
    sub_21EAA1FEC();
  }
  sub_21EAA1FEC();
  v35 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_addOperations_waitUntilFinished_, v35, 0);
  swift_release();

}

void sub_21EAA1834(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  _BYTE v31[32];

  v12 = a3 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x2207B6ACC](v12);
  if (!v13)
    return;
  v14 = (char *)v13;
  v15 = (_BYTE *)(a4 + 16);
  v16 = a7 + 16;
  swift_beginAccess();
  if ((*v15 & 1) == 0)
  {
    sub_21EA5B5F0(a1, (uint64_t)v31);
    v17 = (uint64_t)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
    swift_beginAccess();
    sub_21EAA213C((uint64_t)v31, v17);
    swift_endAccess();
    v18 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError];
    *(_QWORD *)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError] = a2;
    v19 = a2;

    v20 = *(_QWORD *)(a1 + 24);
    v21 = &v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_mode];
    swift_beginAccess();
    if (*v21)
    {
      if (*v21 == 1 && v20 != 0)
      {
LABEL_10:
        swift_beginAccess();
        *v15 = 1;
        swift_beginAccess();
        v23 = MEMORY[0x2207B6ACC](v12);
        v24 = (void *)v23;
        if (v23)
        {
          v25 = *(id *)(v23 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_operationQueue);

          objc_msgSend(v25, sel_cancelAllOperations);
        }
      }
    }
    else if (!v20)
    {
      goto LABEL_10;
    }
  }
  if (a5)
  {
    sub_21EB01F10();
    a5(a1, a2);
    sub_21EA5CA7C((uint64_t)a5);
  }
  swift_beginAccess();
  v26 = MEMORY[0x2207B6ACC](v16);
  if (v26)
  {
    v27 = (void *)v26;
    dispatch_resume(*(dispatch_object_t *)(v26 + OBJC_IVAR____TtC26DocumentManagerExecutables12DOCOperation_callbackQueue));

  }
  else
  {
    v28 = (uint64_t)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult];
    swift_beginAccess();
    sub_21EA5B5F0(v28, (uint64_t)v31);
    v29 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError];
    v30 = v29;
    DOCOperation.completed(with:error:)((uint64_t)v31, v29);

    sub_21EA5B5B0((uint64_t)v31);
  }
}

id DOCChainOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCChainOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21EAA1B58()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_21EA5B5B0(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult);
}

id DOCChainOperation.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCChainOperation);
}

Swift::Void __swiftcall DOCChainableOperation.main()()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _OWORD v9[2];

  v1 = (char *)v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCChainableOperation_chainOperation;
  v2 = MEMORY[0x2207B6ACC]((char *)v0 + OBJC_IVAR____TtC26DocumentManagerExecutables21DOCChainableOperation_chainOperation);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = v2 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationResult;
    swift_beginAccess();
    sub_21EA5B5F0(v4, (uint64_t)v9);

  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  v5 = MEMORY[0x2207B6ACC](v1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(void **)(v5 + OBJC_IVAR____TtC26DocumentManagerExecutables17DOCChainOperation_latestOperationError);
    v8 = v7;

  }
  else
  {
    v7 = 0;
  }
  (*(void (**)(_OWORD *, void *))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))(v9, v7);

  sub_21EA5B5B0((uint64_t)v9);
}

id DOCChainableOperation.init()()
{
  void *v0;
  objc_super v2;

  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCChainableOperation();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_21EAA1DB8()
{
  return swift_unknownObjectWeakDestroy();
}

id DOCChainableOperation.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCChainableOperation);
}

uint64_t sub_21EAA1DE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        type metadata accessor for DOCOperation();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAA1F64()
{
  return swift_deallocObject();
}

uint64_t sub_21EAA1F74()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EAA1F98()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21EAA1FDC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_21EAA1834(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t, void *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

unint64_t sub_21EAA1FEC()
{
  unint64_t result;

  result = qword_25546C310;
  if (!qword_25546C310)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546C310);
  }
  return result;
}

unint64_t sub_21EAA202C()
{
  unint64_t result;

  result = qword_25546ACE8;
  if (!qword_25546ACE8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCChainOperation.DOCChainOperationMode, &type metadata for DOCChainOperation.DOCChainOperationMode);
    atomic_store(result, (unint64_t *)&qword_25546ACE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCChainOperation.DOCChainOperationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAA20BC + 4 * byte_21EB09F55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAA20F0 + 4 * asc_21EB09F50[v4]))();
}

uint64_t sub_21EAA20F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAA20F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAA2100);
  return result;
}

uint64_t sub_21EAA210C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAA2114);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAA2118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAA2120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCChainOperation.DOCChainOperationMode()
{
  return &type metadata for DOCChainOperation.DOCChainOperationMode;
}

uint64_t sub_21EAA213C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EAA2184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A3C0);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_21EAD127C(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_21EAA2258();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_21EAA2258()
{
  return swift_release();
}

char *DOCDeleteOperation.__allocating_init(items:originalOperation:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)(a1, a2, a3);
}

char *DOCDeleteOperation.init(items:originalOperation:undoManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  id v6;
  void *v7;
  char *v8;
  void *v9;
  char *v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager] = a3;
  sub_21EAA25DC();
  swift_bridgeObjectRetain();
  v6 = a3;
  swift_unknownObjectRetain();
  v7 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for DOCDeleteOperation();
  v8 = (char *)objc_msgSendSuper2(&v12, sel_initWithItems_, v7);

  v9 = *(void **)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager];
  v10 = v8;
  if (a2)
  {
    objc_msgSend(v9, sel_registerUndoOperationForSender_, v10);

    swift_unknownObjectRelease();
  }
  else
  {
    if (objc_msgSend(v9, sel_isUndoing))
      objc_msgSend(v9, sel_setShouldRemoveAllActions_, 1);
    else
      objc_msgSend(v9, sel_removeAllActions);

  }
  return v10;
}

uint64_t DOCDeleteOperation.actionNameForUndoing.getter()
{
  return 0;
}

char *DOCDeleteOperation.operationForRedoing()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v8 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation);
    v3 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager);
    v4 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
    swift_unknownObjectRetain();
    v5 = v3;
    v6 = swift_bridgeObjectRetain();
    return DOCDeleteOperation.init(items:originalOperation:undoManager:)(v6, v2, v5);
  }
  return 0;
}

id DOCDeleteOperation.operationForUndoing()()
{
  uint64_t v0;
  id result;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager), sel_setShouldRemoveAllActions_, 1);
  result = *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation);
  if (result)
    return objc_msgSend(result, sel_operationForRedoing);
  return result;
}

Swift::Void __swiftcall DOCDeleteOperation.registerUndo()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

unint64_t sub_21EAA25DC()
{
  unint64_t result;

  result = qword_2540A6EC0;
  if (!qword_2540A6EC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540A6EC0);
  }
  return result;
}

uint64_t type metadata accessor for DOCDeleteOperation()
{
  return objc_opt_self();
}

id DOCDeleteOperation.__allocating_init(items:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_21EAA25DC();
  v2 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithItems_, v2);

  return v3;
}

void DOCDeleteOperation.init(items:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCDeleteOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDeleteOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DOCUTIDescriptor.utis.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCUTIDescriptor.utis.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DOCUTIDescriptor.utis.modify())()
{
  return nullsub_1;
}

uint64_t DOCUTIDescriptor.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DOCUTIDescriptor.isFolder.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;

  v1 = sub_21EB025DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*v0 + 16) != 1)
  {
    v13 = 0;
    return v13 & 1;
  }
  result = sub_21EA7CFC4(*v0);
  if (v6)
  {
    v7 = result;
    v8 = v6;
    sub_21EB02564();
    v9 = sub_21EB0248C();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v7 == v9 && v8 == v11)
      v13 = 1;
    else
      v13 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13 & 1;
  }
  __break(1u);
  return result;
}

id sub_21EAA2904()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCUTIDescriptorCollector()), sel_init);
  static DOCUTIDescriptorCollector.shared = (uint64_t)result;
  return result;
}

uint64_t *DOCUTIDescriptorCollector.shared.unsafeMutableAddressor()
{
  if (qword_255469AD8 != -1)
    swift_once();
  return &static DOCUTIDescriptorCollector.shared;
}

id static DOCUTIDescriptorCollector.shared.getter()
{
  if (qword_255469AD8 != -1)
    swift_once();
  return (id)static DOCUTIDescriptorCollector.shared;
}

id sub_21EAA29B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  objc_class *v14;
  _QWORD v16[4];
  char *v17;
  uint64_t v18;
  char *v19;
  objc_super v20;
  uint64_t v21;

  v1 = sub_21EB02F48();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21EB02F30();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery] = 0;
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors] = MEMORY[0x24BEE4AF8];
  v9 = v8;
  v17 = v0;
  v18 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue;
  v16[3] = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v19 = v0;
  sub_21EB02A44();
  v21 = v9;
  v16[2] = sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v6, MEMORY[0x24BEE5698]);
  v16[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  v10 = *MEMORY[0x24BEE5750];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11(v4, v10, v1);
  *(_QWORD *)&v17[v18] = sub_21EB02F84();
  v18 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue;
  sub_21EB02A44();
  v21 = MEMORY[0x24BEE4AF8];
  sub_21EB031DC();
  v11(v4, v10, v1);
  v12 = sub_21EB02F84();
  v13 = v19;
  *(_QWORD *)&v19[v18] = v12;

  v14 = (objc_class *)type metadata accessor for DOCUTIDescriptorCollector();
  v20.receiver = v13;
  v20.super_class = v14;
  return objc_msgSendSuper2(&v20, sel_init);
}

uint64_t DOCUTIDescriptorCollector.filteredUTIs(matching:allowedContentTypes:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v11 = sub_21EB02A20();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_21EB02A5C();
  v14 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EAA32AC(a3);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_21EAA3574;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_8;
  v18 = _Block_copy(aBlock);
  v19 = v5;
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  sub_21EB02A44();
  v24 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v22);
  return swift_release();
}

uint64_t sub_21EAA2EA0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_21EB02A20();
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB02A5C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)&a1[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a1;
  v17[5] = a4;
  v17[6] = a5;
  aBlock[4] = sub_21EAA4C84;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_6_1;
  v18 = _Block_copy(aBlock);
  sub_21EB01F10();
  v19 = a1;
  swift_bridgeObjectRetain();
  sub_21EB02A44();
  v23 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

uint64_t sub_21EAA30B4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v9 = sub_21EB02A80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18[1] = a4;
  v18[2] = a5;
  sub_21EA8E234();
  sub_21EB03164();
  v13 = *(void **)(a3 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_21EB02AA4();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    swift_beginAccess();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_21EAA6560(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1(v17);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DOCUTIDescriptorCollector.cancelGathering()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery);
  if (v2)
  {
    v5 = v2;
    if ((objc_msgSend(v5, sel_isCancelled) & 1) != 0)
    {
      v3 = v5;
    }
    else
    {
      objc_msgSend(v5, sel_cancel);
      v4 = *(void **)(v0 + v1);
      *(_QWORD *)(v0 + v1) = 0;

      v3 = v4;
    }

  }
}

void sub_21EAA32AC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC2468]), sel_init);
  v4 = (void *)sub_21EB02CE4();
  objc_msgSend(v3, sel_setFetchAttributes_, v4);

  v5 = objc_allocWithZone(MEMORY[0x24BDC2460]);
  v6 = v3;
  v7 = (void *)sub_21EB02B58();
  v8 = objc_msgSend(v5, sel_initWithQueryString_queryContext_, v7, v6);

  LOBYTE(v6) = *(_QWORD *)(a1 + 16) == 0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = MEMORY[0x24BEE4B08];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = (_BYTE)v6;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = a1;
  v21 = sub_21EAA6888;
  v22 = v10;
  v11 = MEMORY[0x24BDAC760];
  v17 = MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_21EAA3B1C;
  v20 = &block_descriptor_15_1;
  v12 = _Block_copy(&v17);
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_setFoundItemsHandler_, v12);
  _Block_release(v12);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v9;
  v21 = sub_21EAA68E4;
  v22 = v14;
  v17 = v11;
  v18 = 1107296256;
  v19 = sub_21EA8423C;
  v20 = &block_descriptor_24_0;
  v15 = _Block_copy(&v17);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v8, sel_setCompletionHandler_, v15);
  _Block_release(v15);
  dispatch_suspend(*(dispatch_object_t *)(v1
                                        + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue));
  objc_msgSend(v8, sel_start);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_currentQuery) = v8;
  swift_release();

}

uint64_t sub_21EAA3540()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAA3574()
{
  return sub_21EAA4C90((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21EAA2EA0);
}

id static CSSearchQuery.withString(_:fetchedAttributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC2468]), sel_init);
  if (a3)
  {
    v5 = (void *)sub_21EB02CE4();
    objc_msgSend(v4, sel_setFetchAttributes_, v5);

  }
  v6 = objc_allocWithZone(MEMORY[0x24BDC2460]);
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_initWithQueryString_queryContext_, v8, v7);

  return v9;
}

uint64_t sub_21EAA365C(unint64_t a1, int a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  char *v45;
  unsigned __int8 v46;
  void *v47;
  void *v48;
  uint64_t v49;
  char *v50;
  int v51;
  char *v52;
  uint64_t *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v49 = a4;
  v51 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB025DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v49 - v16;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v17 = result;
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v54 = v15;
  v55 = v10;
  v52 = v8;
  v53 = a3;
  if (v17)
  {
    if (v17 < 1)
    {
      __break(1u);
      return result;
    }
    v19 = 0;
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x2207B5B3C](v19, a1);
      else
        v21 = *(id *)(a1 + 8 * v19 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_attributeSet, v49);
      v24 = objc_msgSend(v23, sel_contentType);

      if (v24)
      {
        v25 = sub_21EB02B88();
        v27 = v26;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_21EA5C430(0, v20[2] + 1, 1, v20);
        v29 = v20[2];
        v28 = v20[3];
        if (v29 >= v28 >> 1)
          v20 = sub_21EA5C430((_QWORD *)(v28 > 1), v29 + 1, 1, v20);
        v20[2] = v29 + 1;
        v30 = &v20[2 * v29];
        v30[4] = v25;
        v30[5] = v27;
      }
      else
      {

      }
      ++v19;
    }
    while (v17 != v19);
  }
  else
  {
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v31 = v20[2];
  if (v31)
  {
    v32 = v53 + 2;
    swift_bridgeObjectRetain();
    v53 = v32;
    swift_beginAccess();
    v33 = v20 + 5;
    v34 = (uint64_t)v52;
    v35 = v55;
    while (1)
    {
      v37 = *(v33 - 1);
      v36 = *v33;
      swift_bridgeObjectRetain();
      if ((sub_21EB02C54() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_21EB025E8();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v34, 1, v9) != 1)
        {
          v38 = v56;
          (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v56, v34, v9);
          v39 = v35;
          v40 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
          v41 = v54;
          v40(v54, v38, v9);
          if ((v51 & 1) != 0)
          {
            v42 = *(void (**)(char *, uint64_t))(v39 + 8);
            v42(v41, v9);
            goto LABEL_31;
          }
          v43 = *v53;
          swift_bridgeObjectRetain();
          v44 = sub_21EA8909C(v37, v36, v43);
          swift_bridgeObjectRelease();
          v45 = v50;
          v40(v50, v41, v9);
          if ((v44 & 1) != 0)
          {
            v46 = 0;
          }
          else
          {
            v47 = (void *)sub_21EB024E0();
            v48 = (void *)sub_21EB02CE4();
            v46 = objc_msgSend(v47, sel_doc_conformsToAnyInContentTypes_, v48);

          }
          v42 = *(void (**)(char *, uint64_t))(v55 + 8);
          v42(v45, v9);
          v42(v54, v9);
          if ((v46 & 1) != 0)
          {
LABEL_31:
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_21EACCCC4(&v57, v37, v36);
            swift_endAccess();
            v42(v56, v9);
            swift_bridgeObjectRelease();
          }
          else
          {
            v42(v56, v9);
          }
          swift_bridgeObjectRelease();
          v34 = (uint64_t)v52;
          v35 = v55;
          goto LABEL_22;
        }
        sub_21EAA6978(v34);
      }
      swift_bridgeObjectRelease();
LABEL_22:
      v33 += 2;
      if (!--v31)
        return swift_bridgeObjectRelease_n();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAA3B1C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_21EA579D4(0, &qword_25546ADE8);
  v2 = sub_21EB02CF0();
  sub_21EB01F10();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_21EAA3B88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22[2];
  void *v23;
  _QWORD aBlock[6];

  v6 = sub_21EB02A20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21EB02A5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = MEMORY[0x2207B6ACC](a2 + 16);
  if (v14)
  {
    v15 = (char *)v14;
    if (a1)
    {
      aBlock[0] = a1;
      v16 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8F8);
      type metadata accessor for CSSearchQueryError(0);
      if ((swift_dynamicCast() & 1) == 0
        || (v17 = v23,
            sub_21EA59DC8(&qword_25546A1A8, (uint64_t (*)(uint64_t))type metadata accessor for CSSearchQueryError, (uint64_t)&unk_21EB08680), sub_21EB021F8(), v17, aBlock[0] != -2003))
      {
        if (qword_2540A6CB8 != -1)
          swift_once();
        sub_21EB02EE8();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_21EB08F10;
        v19 = sub_21EB02228();
        *(_QWORD *)(v18 + 56) = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
        *(_QWORD *)(v18 + 64) = sub_21EAA6920();
        *(_QWORD *)(v18 + 32) = v19;
        sub_21EB025F4();
        swift_bridgeObjectRelease();
      }
      dispatch_resume(*(dispatch_object_t *)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue]);

    }
    else
    {
      v22[1] = *(id *)(v14 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_gatheringQueue);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v15;
      *(_QWORD *)(v20 + 24) = a3;
      aBlock[4] = sub_21EAA6918;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21EA5EAB0;
      aBlock[3] = &block_descriptor_30_1;
      v21 = _Block_copy(aBlock);
      v22[0] = v15;
      sub_21EB01F10();
      sub_21EB02A44();
      v23 = (void *)MEMORY[0x24BEE4AF8];
      sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
      sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
      sub_21EB031DC();
      MEMORY[0x2207B57A0](0, v13, v9, v21);
      _Block_release(v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      swift_release();
    }
  }
}

void sub_21EAA3F20(char *a1, uint64_t a2)
{
  void *v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v3 = a1;
  v4 = &a1[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v21 = v3;
    v24 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_21EA7D4DC(0, v6, 0);
    v8 = 32;
    v9 = v24;
    do
    {
      v10 = *(_QWORD *)(v5 + v8);
      v24 = v9;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
      {
        sub_21EA7D4DC(v11 > 1, v12 + 1, 1);
        v9 = v24;
      }
      *(_QWORD *)(v9 + 16) = v12 + 1;
      *(_QWORD *)(v9 + 8 * v12 + 32) = v10;
      v8 += 48;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v3 = v21;
    v7 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  v13 = (uint64_t *)(a2 + 16);
  v24 = v7;
  v14 = *(_QWORD *)(v9 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v14; ++i)
    {
      v16 = swift_bridgeObjectRetain();
      sub_21EACC240(v16);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v17 = sub_21EA7DF58(v24);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v18 = *v13;
  if (*(_QWORD *)(v17 + 16) <= *(_QWORD *)(*v13 + 16) >> 3)
  {
    v22 = *v13;
    swift_bridgeObjectRetain();
    sub_21EAB0DB8(v17);
    swift_bridgeObjectRelease();
    v19 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v19 = sub_21EAA4CA4(v17, v18);
    swift_bridgeObjectRelease();
  }
  v23 = 0;
  v20 = v3;
  sub_21EAA6208(v19, (uint64_t)v20, &v23);
  swift_bridgeObjectRelease();

  if (v23 == 1)
  {
    swift_beginAccess();
    sub_21EAA490C((_QWORD **)v4);
    swift_endAccess();
  }
  dispatch_resume(*(dispatch_object_t *)&v20[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_completionQueue]);
}

uint64_t sub_21EAA4180(uint64_t *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t inited;
  unint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;

  v76 = a2;
  v75 = a3;
  v4 = sub_21EB02474();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21EB025DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[1];
  v16 = *a1;
  swift_bridgeObjectRetain();
  sub_21EB025E8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_21EAA6978((uint64_t)v10);
LABEL_14:
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EE8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_21EB08F10;
    *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v34 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v34 + 32) = v16;
    *(_QWORD *)(v34 + 40) = v15;
    swift_bridgeObjectRetain();
    sub_21EB025F4();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17 = sub_21EB024EC();
  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_14;
  }
  v73 = v17;
  v74 = v18;
  v80 = (_QWORD *)v17;
  v81 = v18;
  v67 = sub_21EA8E234();
  v71 = sub_21EB03164();
  v72 = v19;
  v20 = sub_21EB02534();
  sub_21EB02468();
  v21 = *(_QWORD *)(v20 + 16);
  v68 = v14;
  v70 = v11;
  v69 = v12;
  if (v21 && (v22 = sub_21EA82398((uint64_t)v7), (v23 & 1) != 0))
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v25 = *(_QWORD *)(v24 + 16);
    v26 = v77;
    if (v25)
    {
      v66 = v16;
      v80 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_21EA7D4A4(0, v25, 0);
      v27 = v80;
      v65[1] = v24;
      v28 = v24 + 40;
      do
      {
        v29 = sub_21EB02BAC();
        v31 = v30;
        v80 = v27;
        v12 = v27[2];
        v32 = v27[3];
        if (v12 >= v32 >> 1)
        {
          sub_21EA7D4A4(v32 > 1, v12 + 1, 1);
          v27 = v80;
        }
        v28 += 16;
        v27[2] = v12 + 1;
        v33 = &v27[2 * v12];
        v33[4] = v29;
        v33[5] = v31;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      v26 = v77;
      v16 = v66;
    }
    else
    {
      swift_bridgeObjectRelease();
      v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v26 = v77;
  }
  v36 = (uint64_t *)(v76 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCUTIDescriptorCollector_utiDescriptors);
  swift_beginAccess();
  v37 = v72;
  v38 = v26;
  v39 = sub_21EAA6178(*v36, v71, v72);
  v41 = v40;
  v77 = v38;
  swift_bridgeObjectRelease();
  if ((v41 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (v39 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v39 < *(_QWORD *)(*v36 + 16))
    {
      v42 = v36;
      v43 = (_QWORD *)(*v36 + 48 * v39);
      v45 = v43[4];
      v44 = v43[5];
      v46 = (_BYTE *)v43[6];
      v47 = v43[7];
      v48 = v43[9];
      v74 = v43[8];
      v75 = v46;
      v82 = v45;
      v78 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21EACCCC4(v79, v16, v15);
      swift_bridgeObjectRelease();
      v49 = v27[2];
      if (v49)
      {
        swift_bridgeObjectRetain();
        v50 = v27 + 5;
        do
        {
          v51 = *(v50 - 1);
          v52 = *v50;
          swift_bridgeObjectRetain_n();
          sub_21EACCCC4(v79, v51, v52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v50 += 2;
          --v49;
        }
        while (v49);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v53 = v82;
      v54 = v78;
      swift_beginAccess();
      v55 = (_QWORD *)*v42;
      v56 = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      *v42 = (uint64_t)v55;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_21EAC01E4(v55);
        v55 = (_QWORD *)result;
        *v42 = result;
      }
      if (v39 >= v55[2])
      {
        __break(1u);
      }
      else
      {
        v57 = &v55[6 * v39];
        v57[4] = v53;
        v57[5] = v54;
        v57[6] = v75;
        v57[7] = v56;
        v57[8] = v74;
        v57[9] = v48;
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    }
    __break(1u);
    goto LABEL_35;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(inited + 40) = v15;
  swift_bridgeObjectRetain();
  v37 = sub_21EA7DF58(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v15 = sub_21EA7DF58((uint64_t)v27);
  swift_bridgeObjectRelease();
  v79[0] = v73;
  v79[1] = v74;
  v41 = sub_21EB03164();
  v12 = v59;
  swift_beginAccess();
  v27 = (_QWORD *)*v36;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v39 = (uint64_t)v36;
  *v36 = (uint64_t)v27;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_35:
    v27 = sub_21EAA95C8(0, v27[2] + 1, 1, v27);
    *(_QWORD *)v39 = v27;
  }
  v62 = v27[2];
  v61 = v27[3];
  if (v62 >= v61 >> 1)
  {
    v27 = sub_21EAA95C8((_QWORD *)(v61 > 1), v62 + 1, 1, v27);
    *(_QWORD *)v39 = v27;
  }
  v27[2] = v62 + 1;
  v63 = &v27[6 * v62];
  v63[4] = v37;
  v63[5] = v15;
  v64 = v74;
  v63[6] = v73;
  v63[7] = v64;
  v63[8] = v41;
  v63[9] = v12;
  swift_endAccess();
  result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v68, v70);
  *v75 = 1;
  return result;
}

uint64_t sub_21EAA490C(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21EAC01E4(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_21EAA510C(v5);
  *a1 = v2;
  return result;
}

id DOCUTIDescriptorCollector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUTIDescriptorCollector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DOCUTIDescriptorCollector()
{
  return objc_opt_self();
}

uint64_t destroy for DOCUTIDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DOCUTIDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DOCUTIDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCUTIDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCUTIDescriptor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCUTIDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUTIDescriptor()
{
  return &type metadata for DOCUTIDescriptor;
}

uint64_t sub_21EAA4C50()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAA4C84()
{
  return sub_21EAA4C90((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21EAA30B4);
}

uint64_t sub_21EAA4C90(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_21EAA4CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_21EAA2258();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_21EB035A8();
      swift_bridgeObjectRetain();
      sub_21EB02BDC();
      v19 = sub_21EB035E4();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_21EB034C4() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_21EB034C4() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_21EAA5E70((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_21EAA2258();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_21EAA5E70((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_21EAA2258();
      MEMORY[0x2207B6A18](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_21EAA510C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  _OWORD *v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *__dst;

  v3 = a1[1];
  result = sub_21EB0347C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_151;
    if (v3)
      return sub_21EAA5848(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_159;
  v113 = result;
  v110 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_117:
      v101 = v11;
      v112 = v8;
      if (v12 >= 2)
      {
        v102 = *v110;
        do
        {
          v103 = v12 - 2;
          if (v12 < 2)
            goto LABEL_146;
          if (!v102)
            goto LABEL_158;
          v104 = v101;
          v105 = *(_QWORD *)&v101[16 * v103 + 32];
          v106 = *(_QWORD *)&v101[16 * v12 + 24];
          sub_21EAA593C((char *)(v102 + 48 * v105), (char *)(v102 + 48 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 48 * v106, __dst);
          if (v1)
            break;
          if (v106 < v105)
            goto LABEL_147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v104 = sub_21EAA5E5C((uint64_t)v104);
          if (v103 >= *((_QWORD *)v104 + 2))
            goto LABEL_148;
          v107 = &v104[16 * v103 + 32];
          *(_QWORD *)v107 = v105;
          *((_QWORD *)v107 + 1) = v106;
          v108 = *((_QWORD *)v104 + 2);
          if (v12 > v108)
            goto LABEL_149;
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          v101 = v104;
          *((_QWORD *)v104 + 2) = v108 - 1;
          v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v112 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_21EB02D44();
    *(_QWORD *)(v7 + 16) = v6;
    v112 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v111 = *a1 + 24;
  v109 = *a1 + 40;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v114 = v3;
  v115 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      break;
    v14 = v10 + 48 * v9;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    v17 = v10 + 48 * v13;
    if (v15 == *(_QWORD *)(v17 + 16) && v16 == *(_QWORD *)(v17 + 24))
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_42;
      v19 = 0;
LABEL_25:
      v21 = (_QWORD *)(v111 + 48 * v20);
      do
      {
        v23 = v10 + 48 * v9;
        if (*(v21 - 1) == *(_QWORD *)(v23 + 16) && *v21 == *(_QWORD *)(v23 + 24))
        {
          if ((v19 & 1) != 0)
            goto LABEL_34;
        }
        else if (((v19 ^ sub_21EB034C4()) & 1) != 0)
        {
          goto LABEL_33;
        }
        v22 = v20 + 1;
        v21 += 6;
        v9 = v20;
        v20 = v22;
      }
      while (v22 < v3);
      v20 = v22;
      v9 = v22;
      if ((v19 & 1) == 0)
        break;
      goto LABEL_34;
    }
    v19 = sub_21EB034C4();
    v20 = v13 + 2;
    if (v13 + 2 < v3)
      goto LABEL_25;
LABEL_33:
    v9 = v20;
    if ((v19 & 1) == 0)
      break;
LABEL_34:
    if (v20 < v13)
      goto LABEL_154;
    if (v13 < v20)
    {
      v25 = 48 * v20;
      v26 = 48 * v13;
      v27 = v20;
      v28 = v13;
      do
      {
        if (v28 != --v27)
        {
          if (!v10)
            goto LABEL_157;
          v29 = (_OWORD *)(v10 + v26);
          v30 = v10 + v25;
          v31 = *(_QWORD *)(v10 + v26 + 32);
          v32 = *(_QWORD *)(v10 + v26 + 40);
          v34 = *(_OWORD *)(v10 + v26);
          v33 = *(_OWORD *)(v10 + v26 + 16);
          v36 = *(_OWORD *)(v10 + v25 - 32);
          v35 = *(_OWORD *)(v10 + v25 - 16);
          *v29 = *(_OWORD *)(v10 + v25 - 48);
          v29[1] = v36;
          v29[2] = v35;
          *(_OWORD *)(v30 - 48) = v34;
          *(_OWORD *)(v30 - 32) = v33;
          *(_QWORD *)(v30 - 16) = v31;
          *(_QWORD *)(v30 - 8) = v32;
        }
        ++v28;
        v25 -= 48;
        v26 += 48;
      }
      while (v28 < v27);
    }
LABEL_42:
    v9 = v20;
    if (v20 < v3)
      goto LABEL_46;
LABEL_66:
    if (v9 < v13)
      goto LABEL_145;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_21EAA5C18(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v52 = *((_QWORD *)v11 + 2);
    v51 = *((_QWORD *)v11 + 3);
    v12 = v52 + 1;
    if (v52 >= v51 >> 1)
      v11 = sub_21EAA5C18((char *)(v51 > 1), v52 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v53 = v11 + 32;
    v54 = &v11[16 * v52 + 32];
    *(_QWORD *)v54 = v13;
    *((_QWORD *)v54 + 1) = v9;
    if (v52)
    {
      v10 = v115;
      while (1)
      {
        v55 = v12 - 1;
        if (v12 >= 4)
        {
          v60 = &v53[16 * v12];
          v61 = *((_QWORD *)v60 - 8);
          v62 = *((_QWORD *)v60 - 7);
          v66 = __OFSUB__(v62, v61);
          v63 = v62 - v61;
          if (v66)
            goto LABEL_134;
          v65 = *((_QWORD *)v60 - 6);
          v64 = *((_QWORD *)v60 - 5);
          v66 = __OFSUB__(v64, v65);
          v58 = v64 - v65;
          v59 = v66;
          if (v66)
            goto LABEL_135;
          v67 = v12 - 2;
          v68 = &v53[16 * v12 - 32];
          v70 = *(_QWORD *)v68;
          v69 = *((_QWORD *)v68 + 1);
          v66 = __OFSUB__(v69, v70);
          v71 = v69 - v70;
          if (v66)
            goto LABEL_137;
          v66 = __OFADD__(v58, v71);
          v72 = v58 + v71;
          if (v66)
            goto LABEL_140;
          if (v72 >= v63)
          {
            v90 = &v53[16 * v55];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v66 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v66)
              goto LABEL_144;
            v83 = v58 < v93;
            goto LABEL_104;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v84 = *((_QWORD *)v11 + 4);
            v85 = *((_QWORD *)v11 + 5);
            v66 = __OFSUB__(v85, v84);
            v77 = v85 - v84;
            v78 = v66;
            goto LABEL_98;
          }
          v57 = *((_QWORD *)v11 + 4);
          v56 = *((_QWORD *)v11 + 5);
          v66 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          v59 = v66;
        }
        if ((v59 & 1) != 0)
          goto LABEL_136;
        v67 = v12 - 2;
        v73 = &v53[16 * v12 - 32];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v76 = __OFSUB__(v74, v75);
        v77 = v74 - v75;
        v78 = v76;
        if (v76)
          goto LABEL_139;
        v79 = &v53[16 * v55];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v66 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v66)
          goto LABEL_142;
        if (__OFADD__(v77, v82))
          goto LABEL_143;
        if (v77 + v82 >= v58)
        {
          v83 = v58 < v82;
LABEL_104:
          if (v83)
            v55 = v67;
          goto LABEL_106;
        }
LABEL_98:
        if ((v78 & 1) != 0)
          goto LABEL_138;
        v86 = &v53[16 * v55];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v66 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v66)
          goto LABEL_141;
        if (v89 < v77)
          goto LABEL_15;
LABEL_106:
        v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_156;
        v95 = v10;
        v96 = &v53[16 * v94];
        v97 = *(_QWORD *)v96;
        v98 = &v53[16 * v55];
        v99 = *((_QWORD *)v98 + 1);
        sub_21EAA593C((char *)(v95 + 48 * *(_QWORD *)v96), (char *)(v95 + 48 * *(_QWORD *)v98), v95 + 48 * v99, __dst);
        if (v1)
          goto LABEL_114;
        if (v99 < v97)
          goto LABEL_131;
        if (v55 > *((_QWORD *)v11 + 2))
          goto LABEL_132;
        *(_QWORD *)v96 = v97;
        *(_QWORD *)&v53[16 * v94 + 8] = v99;
        v100 = *((_QWORD *)v11 + 2);
        if (v55 >= v100)
          goto LABEL_133;
        v12 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((_QWORD *)v11 + 2) = v100 - 1;
        v83 = v100 > 2;
        v10 = v115;
        if (!v83)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v115;
LABEL_15:
    v3 = v114;
    if (v9 >= v114)
    {
      v8 = v112;
      goto LABEL_117;
    }
  }
  if (v9 >= v3)
    goto LABEL_66;
LABEL_46:
  if (__OFSUB__(v9, v13))
    goto LABEL_150;
  if (v9 - v13 >= v113)
    goto LABEL_66;
  if (__OFADD__(v13, v113))
    goto LABEL_152;
  if (v13 + v113 >= v3)
    v37 = v3;
  else
    v37 = v13 + v113;
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      v38 = v109 + 48 * v9;
      do
      {
        v39 = v10 + 48 * v9;
        v40 = *(_QWORD *)(v39 + 16);
        v41 = *(_QWORD *)(v39 + 24);
        v42 = v13;
        v43 = v38;
        do
        {
          v44 = v40 == *(_QWORD *)(v43 - 72) && v41 == *(_QWORD *)(v43 - 64);
          if (v44 || (sub_21EB034C4() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_155;
          v45 = (_OWORD *)(v43 - 40);
          v46 = (_OWORD *)(v43 - 88);
          v48 = *(_OWORD *)(v43 - 72);
          v47 = *(_OWORD *)(v43 - 56);
          *(_QWORD *)(v43 - 48) = *(_QWORD *)v43;
          v43 -= 48;
          v40 = *(_QWORD *)(v43 + 24);
          v41 = *(_QWORD *)(v43 + 32);
          v49 = *(_QWORD *)(v43 + 40);
          v50 = *(_OWORD *)(v43 + 8);
          *v45 = *v46;
          v45[1] = v48;
          v45[2] = v47;
          *(_OWORD *)(v43 - 40) = v50;
          *(_QWORD *)(v43 - 24) = v40;
          *(_QWORD *)(v43 - 16) = v41;
          *(_QWORD *)(v43 - 8) = v49;
          ++v42;
        }
        while (v9 != v42);
        ++v9;
        v38 += 48;
      }
      while (v9 != v37);
      v9 = v37;
    }
    goto LABEL_66;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  result = sub_21EB033BC();
  __break(1u);
  return result;
}

uint64_t sub_21EAA5848(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 48 * a3 + 40;
LABEL_5:
    v9 = v7 + 48 * v4;
    result = *(_QWORD *)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    v11 = v6;
    v12 = v8;
    while (1)
    {
      v13 = result == *(_QWORD *)(v12 - 72) && v10 == *(_QWORD *)(v12 - 64);
      if (v13 || (result = sub_21EB034C4(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 48;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v14 = (_OWORD *)(v12 - 40);
      v15 = (_OWORD *)(v12 - 88);
      v17 = *(_OWORD *)(v12 - 72);
      v16 = *(_OWORD *)(v12 - 56);
      *(_QWORD *)(v12 - 48) = *(_QWORD *)v12;
      v12 -= 48;
      result = *(_QWORD *)(v12 + 24);
      v10 = *(_QWORD *)(v12 + 32);
      v18 = *(_QWORD *)(v12 + 40);
      v19 = *(_OWORD *)(v12 + 8);
      *v14 = *v15;
      v14[1] = v17;
      v14[2] = v16;
      *(_OWORD *)(v12 - 40) = v19;
      *(_QWORD *)(v12 - 24) = result;
      *(_QWORD *)(v12 - 16) = v10;
      *(_QWORD *)(v12 - 8) = v18;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21EAA593C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  BOOL v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v29;
  const void *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v31 = __src;
  v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v19 = &v4[48 * v11];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        v20 = (char *)(a3 - 48);
        do
        {
          v21 = v20 + 48;
          v22 = *((_QWORD *)v19 - 4) == *((_QWORD *)v6 - 4) && *((_QWORD *)v19 - 3) == *((_QWORD *)v6 - 3);
          if (v22 || (sub_21EB034C4() & 1) == 0)
          {
            v29 = v19 - 48;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              v26 = *((_OWORD *)v19 - 3);
              v27 = *((_OWORD *)v19 - 1);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 2) = v27;
              *(_OWORD *)v20 = v26;
            }
            v23 = v6;
            v19 -= 48;
            if (v6 <= v7)
              break;
          }
          else
          {
            v23 = v6 - 48;
            if (v21 != v6 || v20 >= v6)
            {
              v24 = *(_OWORD *)v23;
              v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v20 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v20 + 2) = v25;
              *(_OWORD *)v20 = v24;
            }
            v31 = v6 - 48;
            if (v23 <= v7)
              break;
          }
          v20 -= 48;
          v6 = v23;
        }
        while (v19 > v4);
      }
LABEL_48:
      sub_21EAA5D10((void **)&v31, &v30, &v29);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = &v4[48 * v9];
    v29 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      v13 = v4;
      while (1)
      {
        v14 = *((_QWORD *)v6 + 2) == *((_QWORD *)v13 + 2) && *((_QWORD *)v6 + 3) == *((_QWORD *)v13 + 3);
        if (v14 || (sub_21EB034C4() & 1) == 0)
        {
          v4 = v13 + 48;
          v16 = v13;
          v15 = v6;
          if (v7 == v13)
          {
            v13 += 48;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v13 += 48;
          }
        }
        else
        {
          v15 = v6 + 48;
          v16 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_22;
        }
        v17 = *(_OWORD *)v16;
        v18 = *((_OWORD *)v16 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
        *((_OWORD *)v7 + 2) = v18;
        *(_OWORD *)v7 = v17;
LABEL_22:
        v7 += 48;
        if (v13 < v12)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v30 = v4;
        v31 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

char *sub_21EAA5C18(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546ADE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21EAA5D10(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_21EB03458();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_21EAA5DCC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_21EB03458();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

char *sub_21EAA5E5C(uint64_t a1)
{
  return sub_21EAA5C18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21EAA5E70(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                sub_21EB01F10();
                return sub_21EADF33C(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_21EB035A8();
        swift_bridgeObjectRetain();
        sub_21EB02BDC();
        v22 = sub_21EB035E4();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_21EB034C4() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_21EB034C4() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_21EAA6164(uint64_t a1)
{
  return sub_21EA7D844(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21EAA6178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a1 + 72); ; i += 6)
  {
    v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_21EB034C4() & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_21EAA6208(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22[2];

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_21EAA4180(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 2;
      if (v13 + 2 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 3;
      if (v13 + 3 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        v13 = v18;
        goto LABEL_15;
      }
      v21 = v13 + 4;
      if (v13 + 4 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17)
        break;
    }
LABEL_15:
    v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v21;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21EAA63BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v1 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v9 >= v5)
      goto LABEL_24;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_24;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_24;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_24;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
          {
            v11 = v9 + 4;
            if (v11 >= v5)
            {
LABEL_24:
              v12 = 0;
              goto LABEL_25;
            }
            v10 = *(_QWORD *)(v1 + 8 * v11);
            if (!v10)
            {
              while (1)
              {
                v7 = v11 + 1;
                if (__OFADD__(v11, 1))
                  goto LABEL_27;
                if (v7 >= v5)
                  goto LABEL_24;
                v10 = *(_QWORD *)(v1 + 8 * v7);
                ++v11;
                if (v10)
                  goto LABEL_22;
              }
            }
            v7 = v11;
          }
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    v8 = sub_21EAED1F8();
    result = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      v12 = 1;
LABEL_25:
      swift_release();
      return v12;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21EAA6560(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;

  v2 = v1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
  v23 = result + 32;
  v21 = *(_QWORD *)(result + 16);
  do
  {
    v20 = v5;
    if (v4 <= v3)
      v6 = v3;
    else
      v6 = v4;
    v22 = v6;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      v7 = v23 + 48 * v4;
      v29 = *(_OWORD *)v7;
      v8 = *(_QWORD *)(v7 + 24);
      v25 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 32);
      v10 = *(_QWORD *)(v7 + 40);
      v27 = v4 + 1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v8;
      swift_bridgeObjectRetain();
      v11 = sub_21EAED1F8();
      swift_bridgeObjectRelease();
      v24 = v9;
      if ((v11 & 1) != 0)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_21EAA63BC(*((uint64_t *)&v29 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
        break;
      v26 = v2;
      sub_21EA8E234();
      v13 = sub_21EB0314C();
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = v13 + 40;
        while (1)
        {
          swift_bridgeObjectRetain();
          v16 = sub_21EAED1F8();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
            break;
          v15 += 16;
          if (!--v14)
            goto LABEL_7;
        }
        swift_bridgeObjectRelease();
        v2 = v26;
        v3 = v21;
        break;
      }
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v3 = v21;
      v6 = v22;
      v2 = v26;
      ++v4;
      if (v27 == v21)
        return v20;
    }
    ++v4;
    v5 = v20;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_21EA7D4C0(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v5 = v20;
    }
    v18 = *(_QWORD *)(v5 + 16);
    v17 = *(_QWORD *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      result = sub_21EA7D4C0(v17 > 1, v18 + 1, 1);
      v5 = v20;
    }
    *(_QWORD *)(v5 + 16) = v18 + 1;
    v19 = v5 + 48 * v18;
    *(_OWORD *)(v19 + 32) = v29;
    *(_QWORD *)(v19 + 48) = v25;
    *(_QWORD *)(v19 + 56) = v28;
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 72) = v10;
  }
  while (v27 != v3);
  return v5;
}

uint64_t sub_21EAA6838()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAA685C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAA6888(unint64_t a1)
{
  uint64_t v1;

  return sub_21EAA365C(a1, *(unsigned __int8 *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21EAA6894()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EAA68B8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21EAA68E4(void *a1)
{
  uint64_t v1;

  sub_21EAA3B88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21EAA68EC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_21EAA6918()
{
  uint64_t v0;

  sub_21EAA3F20(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_21EAA6920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25546BC30;
  if (!qword_25546BC30)
  {
    v1 = sub_21EA579D4(255, (unint64_t *)&unk_25546C300);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_25546BC30);
  }
  return result;
}

uint64_t sub_21EAA6978(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v17;
  void *v18;
  id v19;
  _QWORD v20[6];

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a5;
  v17[9] = a6;
  v17[10] = a7;
  v20[4] = sub_21EAA70E4;
  v20[5] = v17;
  v20[0] = MEMORY[0x24BDAC760];
  v20[1] = 1107296256;
  v20[2] = sub_21EA5EAB0;
  v20[3] = &block_descriptor_9;
  v18 = _Block_copy(v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  v19 = a7;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

void sub_21EAA6AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void **v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t aBlock;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  _QWORD *v48;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = 0;
  }
  v12 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v11, v12, 1);

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (void **)(v14 + 16);
  v47 = sub_21EAA71A0;
  v48 = (_QWORD *)v14;
  aBlock = MEMORY[0x24BDAC760];
  v44 = 1107296256;
  v45 = sub_21EAA71A8;
  v46 = &block_descriptor_6_2;
  v16 = _Block_copy(&aBlock);
  sub_21EB01F10();
  swift_release();
  v42 = v13;
  objc_msgSend(v13, sel_addTextFieldWithConfigurationHandler_, v16);
  _Block_release(v16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v18 = (_QWORD *)(v17 + 16);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v17;
  v19[3] = a5;
  v19[4] = a6;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = sub_21EAA7314;
  v20[3] = v19;
  v20[4] = v14;
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  v21 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v47 = sub_21EAA73F0;
  v48 = v20;
  v22 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v44 = 1107296256;
  v45 = sub_21EAA71A8;
  v46 = &block_descriptor_18;
  v23 = _Block_copy(&aBlock);
  swift_release();
  v41 = (id)objc_opt_self();
  v24 = objc_msgSend(v41, sel_actionWithTitle_style_handler_, v21, 0, v23);
  _Block_release(v23);

  objc_msgSend(v24, sel_setEnabled_, 0);
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v26 = *MEMORY[0x24BEBE868];
  swift_beginAccess();
  v27 = *v15;
  v28 = (void *)objc_opt_self();
  v29 = v27;
  v30 = objc_msgSend(v28, sel_mainQueue);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v24;
  v47 = sub_21EAA74F0;
  v48 = (_QWORD *)v31;
  aBlock = v22;
  v44 = 1107296256;
  v45 = sub_21EABD9B0;
  v46 = &block_descriptor_24_1;
  v32 = _Block_copy(&aBlock);
  v33 = v24;
  swift_release();
  v34 = objc_msgSend(v25, sel_addObserverForName_object_queue_usingBlock_, v26, v29, v30, v32);
  _Block_release(v32);

  swift_beginAccess();
  *v18 = v34;
  swift_unknownObjectRelease();
  v35 = (id)_DocumentManagerBundle();
  if (v35)
  {
    v36 = v35;
    sub_21EB02168();

    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_21EAA7314;
    *(_QWORD *)(v37 + 24) = v19;
    sub_21EB01F10();
    v38 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v47 = sub_21EAA75CC;
    v48 = (_QWORD *)v37;
    aBlock = MEMORY[0x24BDAC760];
    v44 = 1107296256;
    v45 = sub_21EAA71A8;
    v46 = &block_descriptor_30_2;
    v39 = _Block_copy(&aBlock);
    swift_release();
    v40 = objc_msgSend(v41, sel_actionWithTitle_style_handler_, v38, 1, v39, 0xE600000000000000);
    _Block_release(v39);

    objc_msgSend(v42, sel_addAction_, v33);
    objc_msgSend(v42, sel_addAction_, v40);
    objc_msgSend(v42, sel_setPreferredAction_, v33);
    objc_msgSend(a9, sel_presentViewController_animated_completion_, v42, 1, 0);

    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21EAA70A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_21EAA70E4()
{
  uint64_t v0;

  sub_21EAA6AE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_21EAA7118()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_21EAA713C(void *a1, uint64_t a2)
{
  void *v3;

  objc_msgSend(a1, sel_setSecureTextEntry_, 1);
  swift_beginAccess();
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

id sub_21EAA71A0(void *a1)
{
  uint64_t v1;

  return sub_21EAA713C(a1, v1);
}

void sub_21EAA71A8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_21EB01F10();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_21EAA71F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAA721C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  void *v11;
  id v12;

  swift_beginAccess();
  v10 = *(_QWORD *)(a4 + 16);
  if (v10)
  {
    v11 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v12 = objc_msgSend(v11, sel_defaultCenter);
    objc_msgSend(v12, sel_removeObserver_, v10);
    swift_unknownObjectRelease();

  }
  return a5(a1, a2, a3);
}

uint64_t sub_21EAA72E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAA7314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_21EAA721C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

id sub_21EAA7320(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD), uint64_t a3, uint64_t a4)
{
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  result = *(id *)(a4 + 16);
  if (result)
  {
    result = objc_msgSend(result, sel_text);
    if (result)
    {
      v7 = result;
      v8 = sub_21EB02B88();
      v10 = v9;

      a2(v8, v10, 0);
      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21EAA73C4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_21EAA73F0(uint64_t a1)
{
  uint64_t v1;

  return sub_21EAA7320(a1, *(void (**)(uint64_t, uint64_t, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_21EAA73FC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  id v11;
  _BYTE v12[24];
  uint64_t v13;

  sub_21EB0212C();
  if (!v13)
  {
    sub_21EA5B5B0((uint64_t)v12);
    goto LABEL_9;
  }
  sub_21EAA75D4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return objc_msgSend(a2, sel_setEnabled_, v9);
  }
  v3 = objc_msgSend(v11, sel_text);
  if (!v3)
  {

    goto LABEL_9;
  }
  v4 = v3;
  v5 = sub_21EB02B88();
  v7 = v6;

  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  v9 = v8 != 0;
  return objc_msgSend(a2, sel_setEnabled_, v9);
}

id sub_21EAA74F0(uint64_t a1)
{
  uint64_t v1;

  return sub_21EAA73FC(a1, *(void **)(v1 + 16));
}

void sub_21EAA74F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, id))
{
  id v3;
  void *v4;
  id v5;

  sub_21EB02B88();
  v3 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v4 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithDomain_code_userInfo_, v4, 3072, 0);

  a2(0, 0, v5);
}

uint64_t sub_21EAA75A8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21EAA75CC(uint64_t a1)
{
  uint64_t v1;

  sub_21EAA74F8(a1, *(void (**)(_QWORD, _QWORD, id))(v1 + 16));
}

unint64_t sub_21EAA75D4()
{
  unint64_t result;

  result = qword_25546ADF0;
  if (!qword_25546ADF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546ADF0);
  }
  return result;
}

Swift::Void __swiftcall DOCAnalyticsManager.sendAPIAbuseEvent(_:)(DocumentManagerExecutables::DOCAnalyticsAPIAbuseEvent *a1)
{
  void *v1;

  sub_21EA9488C((uint64_t)a1);
  sub_21EA9323C((uint64_t)a1, v1);
  sub_21EAA783C((uint64_t)a1);
}

id static DOCAnalyticsManager.shared.getter()
{
  if (qword_2540A6550 != -1)
    swift_once();
  return (id)static DOCAnalyticsManager.shared;
}

id DOCAnalyticsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCAnalyticsManager.sendItemTaggedEvent(_:)(DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent *a1)
{
  sub_21EAA77D0((__int128 *)&a1->name._countAndFlagsBits, (void (*)(__int128 *, uint64_t))sub_21EA93558);
}

Swift::Void __swiftcall DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)(DocumentManagerExecutables::DOCAnalyticsSidebarTagSelectedEvent *a1)
{
  sub_21EAA77D0((__int128 *)&a1->name._countAndFlagsBits, (void (*)(__int128 *, uint64_t))sub_21EA9388C);
}

Swift::Void __swiftcall DOCAnalyticsManager.sendConnectToServerShownEvent(_:)(DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent *a1)
{
  sub_21EAA77D0((__int128 *)&a1->name._countAndFlagsBits, (void (*)(__int128 *, uint64_t))sub_21EA93BC0);
}

uint64_t sub_21EAA77D0(__int128 *a1, void (*a2)(__int128 *, uint64_t))
{
  uint64_t v2;
  _BYTE v6[16];
  __int128 v7;

  v7 = *a1;
  sub_21EA947C0((uint64_t)(a1 + 1), (uint64_t)v6);
  sub_21EA94808((uint64_t)&v7);
  sub_21EA94808((uint64_t)v6);
  a2(a1, v2);
  sub_21EAA7884((uint64_t)&v7);
  return sub_21EAA7884((uint64_t)v6);
}

uint64_t sub_21EAA783C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EAA7884(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21EAA78BC()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A388);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x800000021EB11460;
  *(_QWORD *)(inited + 48) = sub_21EB02DB0();
  return sub_21EA5E924(inited);
}

void __swiftcall DOCAnalyticsSidebarTagSelectedEvent.init(bundleID:isUserSelection:)(DocumentManagerExecutables::DOCAnalyticsSidebarTagSelectedEvent *__return_ptr retstr, Swift::String_optional bundleID, Swift::Bool isUserSelection)
{
  retstr->name._countAndFlagsBits = 0xD000000000000036;
  retstr->name._object = (void *)0x800000021EB0E980;
  retstr->bundleID = bundleID;
  retstr->isUserSelection = isUserSelection;
}

unint64_t (*sub_21EAA795C())()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v5;
  char v6;
  __int128 v7;
  _BYTE v8[16];

  v5 = v0[1];
  v6 = *((_BYTE *)v0 + 32);
  v1 = swift_allocObject();
  v2 = *v0;
  v3 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 48) = *((_BYTE *)v0 + 32);
  v7 = v2;
  sub_21EA947C0((uint64_t)&v5, (uint64_t)v8);
  sub_21EA94808((uint64_t)&v7);
  sub_21EA94808((uint64_t)v8);
  return sub_21EAA7BD0;
}

uint64_t initializeWithCopy for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCAnalyticsSidebarTagSelectedEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsSidebarTagSelectedEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsSidebarTagSelectedEvent()
{
  return &type metadata for DOCAnalyticsSidebarTagSelectedEvent;
}

uint64_t sub_21EAA7BA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21EAA7BD0()
{
  return sub_21EAA78BC();
}

uint64_t sub_21EAA7BD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_21EB01F1C();
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE50);
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE58);
  MEMORY[0x24BDAC7A8](v7);
  sub_21EAA8910();
  sub_21EB01FAC();
  sub_21EB01FA0();
  swift_getKeyPath();
  sub_21EAA89C8();
  v20[1] = a1;
  sub_21EB01F10();
  swift_release();
  sub_21EB01F94();
  swift_release();
  sub_21EB01FA0();
  sub_21EB01FB8();
  v23 = sub_21EB01F34();
  v20[0] = *(_QWORD *)(v4 + 8);
  v8 = v21;
  ((void (*)(char *, uint64_t))v20[0])(v6, v21);
  sub_21EB01FAC();
  sub_21EB01FA0();
  swift_getKeyPath();
  sub_21EB01F10();
  swift_release();
  sub_21EB01F94();
  swift_release();
  sub_21EB01FA0();
  sub_21EB01FB8();
  v22 = sub_21EB01F34();
  v9 = v8;
  v10 = v8;
  v11 = (void (*)(char *, uint64_t))v20[0];
  ((void (*)(char *, uint64_t))v20[0])(v6, v10);
  sub_21EB01FAC();
  sub_21EB01FA0();
  swift_getKeyPath();
  sub_21EB01F10();
  swift_release();
  sub_21EB01F94();
  swift_release();
  sub_21EB01FA0();
  v12 = v24;
  v13 = v25;
  v14 = v26;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x24BDB56D0], v26);
  sub_21EB01F88();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v14);
  sub_21EB01FA0();
  sub_21EB01FB8();
  v15 = sub_21EB01F34();
  v11(v6, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE60);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21EB09A00;
  v17 = v22;
  *(_QWORD *)(v16 + 32) = v23;
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = v15;
  v18 = sub_21EB01F28();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_21EAA8004(uint64_t a1)
{
  return sub_21EAA8440(a1, (uint64_t)&unk_21EB0A1F0, (void (*)(void))sub_21EAA89C8, (void (*)(uint64_t))sub_21EAA8910);
}

uint64_t sub_21EAA8028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_21EB01F4C();
  v1 = sub_21EB01F4C();
  v2 = sub_21EB01F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE10);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21EB09A00;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  v4 = sub_21EB01F40();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21EAA80CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a1;
  v1 = sub_21EB01F1C();
  v19 = *(_QWORD *)(v1 - 8);
  v20 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE30);
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE38);
  MEMORY[0x24BDAC7A8](v7);
  sub_21EA9EBFC();
  sub_21EB01FAC();
  sub_21EB01FA0();
  swift_getKeyPath();
  sub_21EA9EE28();
  sub_21EB01F10();
  swift_release();
  sub_21EB01F94();
  swift_release();
  sub_21EB01FA0();
  sub_21EB01FB8();
  v18 = sub_21EB01F34();
  v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8 = v17;
  v16(v6, v17);
  sub_21EB01FAC();
  sub_21EB01FA0();
  swift_getKeyPath();
  sub_21EB01F10();
  swift_release();
  sub_21EB01F94();
  swift_release();
  sub_21EB01FA0();
  v10 = v19;
  v9 = v20;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v3, *MEMORY[0x24BDB56D0], v20);
  sub_21EB01F88();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  sub_21EB01FA0();
  sub_21EB01FB8();
  v11 = sub_21EB01F34();
  v16(v6, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE40);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21EB07140;
  *(_QWORD *)(v12 + 32) = v18;
  *(_QWORD *)(v12 + 40) = v11;
  v13 = sub_21EB01F28();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21EAA841C(uint64_t a1)
{
  return sub_21EAA8440(a1, (uint64_t)&unk_21EB0A1C8, (void (*)(void))sub_21EA9EE28, (void (*)(uint64_t))sub_21EA9EBFC);
}

uint64_t sub_21EAA8440(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_21EB01F7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  sub_21EB01F10();
  v10 = swift_release();
  a4(v10);
  sub_21EB01F70();
  v11 = sub_21EB01F64();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE28);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v12 + 32) = v11;
  v13 = sub_21EB01F58();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21EAA8564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_21EB01F4C();
  v1 = sub_21EB01F4C();
  v2 = sub_21EB01F4C();
  v3 = sub_21EB01F4C();
  v4 = sub_21EB01F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE10);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21EB09EE0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  *(_QWORD *)(v5 + 64) = v4;
  v6 = sub_21EB01F40();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_21EAA8644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_21EB01F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE10);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_21EB01F40();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21EAA86CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21EB01F04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA9EBFC();
  sub_21EB01EF8();
  v4 = sub_21EB01EEC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE08);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = sub_21EB01EE0();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for DocumentAssistantIntentsProvider()
{
  return &type metadata for DocumentAssistantIntentsProvider;
}

uint64_t sub_21EAA87BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_21EB01FDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s26DocumentManagerExecutables36SetFilenameExtensionVisibilityIntentVACycfC_0();
  sub_21EAA8910();
  sub_21EB01FE8();
  v4 = sub_21EB01FD0();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  v11 = _s26DocumentManagerExecutables21SetGroupingModeIntentVACycfC_0();
  sub_21EA9EBFC();
  sub_21EB01FE8();
  v6 = sub_21EB01FD0();
  v5(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546AE20);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21EB07140;
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v6;
  v8 = sub_21EB01FC4();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_21EAA8910()
{
  unint64_t result;

  result = qword_25546AE18;
  if (!qword_25546AE18)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetFilenameExtensionVisibilityIntent, &type metadata for SetFilenameExtensionVisibilityIntent);
    atomic_store(result, (unint64_t *)&qword_25546AE18);
  }
  return result;
}

uint64_t sub_21EAA8954@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_21EB01EB0();
  *a1 = v3;
  return result;
}

uint64_t keypath_setTm()
{
  return sub_21EB01EBC();
}

unint64_t sub_21EAA89C8()
{
  unint64_t result;

  result = qword_25546AE48;
  if (!qword_25546AE48)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546AE48);
  }
  return result;
}

uint64_t DOCDocumentSourceIdentifier.isICloud.getter()
{
  void *v0;
  uint64_t IsICloud;

  sub_21EB02B88();
  v0 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  IsICloud = DOCDocumentSourceIdentifierIsICloud(v0);

  return IsICloud;
}

id static DOCDocumentSourceIdentifier.iCloudCurrent.getter()
{
  return sub_21EAA8A9C((uint64_t (*)(void))DOCDocumentSourceIdentifierICloud_Current);
}

id DOCDocumentSourceIdentifierICloud_Current()
{
  int v0;
  id *v1;

  v0 = FPIsCloudDocsWithFPFSEnabled();
  v1 = (id *)MEMORY[0x24BE2DE10];
  if (!v0)
    v1 = (id *)MEMORY[0x24BE2DE20];
  return *v1;
}

id static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter()
{
  return sub_21EAA8A9C((uint64_t (*)(void))DOCDocumentSourceIdentifierICloud_CurrentManaged);
}

id sub_21EAA8A9C(uint64_t (*a1)(void))
{
  id result;

  result = (id)a1();
  if (!result)
    __break(1u);
  return result;
}

id DOCDocumentSourceIdentifierICloud_CurrentManaged()
{
  int v0;
  id *v1;

  v0 = FPIsCloudDocsWithFPFSEnabled();
  v1 = (id *)MEMORY[0x24BE2DE18];
  if (!v0)
    v1 = (id *)MEMORY[0x24BE2DE28];
  return *v1;
}

uint64_t UIViewController.registerForTabSwitcherTraitChanges<A>(options:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(1, 0, a1, a2 & 1, a3, a4, a5);
}

uint64_t UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(char a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_21EAA8E5C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_24E32C5A0, (uint64_t)sub_21EAA8B8C, (uint64_t (*)(_QWORD *, uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t))UIViewController.doc_registerForTraitChanges<A>(_:options:handler:));
}

uint64_t UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(0, 1, a1, a2 & 1, a3, a4, a5);
}

uint64_t sub_21EAA8B68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t UIViewController.registerForTabSwitcherTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_21EAA904C(a1, a2, (uint64_t)&unk_24E32C5C8, (uint64_t)sub_21EA5EA88, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t UIViewController.registerForUIPDocumentLandingTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_21EAA8C98(a1, a2, (uint64_t)&unk_24E32C5F0, (uint64_t)sub_21EA5EA84, (void (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t sub_21EAA8C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))
{
  uint64_t ObjectType;
  _QWORD *v10;

  ObjectType = swift_getObjectType();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = ObjectType;
  sub_21EB01F10();
  a5(0, 1, 0, 1, a4, v10, ObjectType);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t UIView.registerForTabSwitcherTraitChanges<A>(options:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(1, 0, a1, a2 & 1, a3, a4, a5);
}

uint64_t UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(char a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_21EAA8E5C(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_24E32C618, (uint64_t)sub_21EAA8B8C, (uint64_t (*)(_QWORD *, uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t))UIView.doc_registerForTraitChanges<A>(_:options:handler:));
}

uint64_t sub_21EAA8E5C(char a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(_QWORD *, uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t))
{
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(_QWORD *, uint64_t, _QWORD, uint64_t, _QWORD *, uint64_t);
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  if ((a1 & 1) == 0)
  {
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v20 = a10;
    if ((a2 & 1) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v15 = sub_21EAA96EC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_21EAA96EC((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v18 = sub_21EA8FEF0();
  v15[2] = v17 + 1;
  v19 = &v15[2 * v17];
  v19[4] = &type metadata for DOCTabSwitcherStyleTrait;
  v19[5] = v18;
  v20 = a10;
  if ((a2 & 1) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_21EAA96EC(0, v15[2] + 1, 1, v15);
    v22 = v15[2];
    v21 = v15[3];
    if (v22 >= v21 >> 1)
      v15 = sub_21EAA96EC((_QWORD *)(v21 > 1), v22 + 1, 1, v15);
    v23 = sub_21EA9001C();
    v15[2] = v22 + 1;
    v24 = &v15[2 * v22];
    v24[4] = &type metadata for DOCUIPDocumentLandingModeTrait;
    v24[5] = v23;
  }
LABEL_12:
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a7;
  v25[3] = a5;
  v25[4] = a6;
  sub_21EB01F10();
  v26 = v20(v15, a3, a4 & 1, a9, v25, a7);
  swift_bridgeObjectRelease();
  swift_release();
  return v26;
}

uint64_t UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)(0, 1, a1, a2 & 1, a3, a4, a5);
}

uint64_t UIView.registerForTabSwitcherTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_21EAA904C(a1, a2, (uint64_t)&unk_24E32C640, (uint64_t)sub_21EA5EA84, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

uint64_t sub_21EAA904C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))
{
  uint64_t ObjectType;
  _QWORD *v10;

  ObjectType = swift_getObjectType();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = ObjectType;
  sub_21EB01F10();
  a5(1, 0, 0, 1, a4, v10, ObjectType);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t UIView.registerForUIPDocumentLandingTraitChanges(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_21EAA8C98(a1, a2, (uint64_t)&unk_24E32C668, (uint64_t)sub_21EA5EA84, (void (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD *, uint64_t))UIView.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:));
}

_QWORD *sub_21EAA92A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AED8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21EAA9A3C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21EAA93B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AEE0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21EAA9934(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_21EAA94BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AED0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_21EAA9C18(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21EAA95C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A3A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21EAA9B24(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21EAA96EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AEC8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21EAA9D00(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EAA97F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_21EAA9818()
{
  swift_release();
  return swift_deallocObject();
}

char *sub_21EAA983C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A380);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21EAA9DE8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EAA9934(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AEE8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

char *sub_21EAA9A3C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAA9B24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

char *sub_21EAA9C18(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21EB03458();
  __break(1u);
  return result;
}

char *sub_21EAA9D00(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21EB03458();
  __break(1u);
  return result;
}

char *sub_21EAA9DE8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAA9ECC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_21EAA9EF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t *DOCAPIRateLimiter.shared.unsafeMutableAddressor()
{
  if (qword_255469AE8 != -1)
    swift_once();
  return &static DOCAPIRateLimiter.shared;
}

BOOL static DOCAPIRateLimiterAPI.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DOCAPIRateLimiterAPI.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCAPIRateLimiterAPI.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EAA9FE4()
{
  uint64_t result;

  type metadata accessor for DOCAPIRateLimiter();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x3FF0000000000000;
  static DOCAPIRateLimiter.shared = result;
  return result;
}

uint64_t static DOCAPIRateLimiter.shared.getter()
{
  if (qword_255469AE8 != -1)
    swift_once();
  swift_beginAccess();
  return sub_21EB01F10();
}

uint64_t static DOCAPIRateLimiter.shared.setter(uint64_t a1)
{
  if (qword_255469AE8 != -1)
    swift_once();
  swift_beginAccess();
  static DOCAPIRateLimiter.shared = a1;
  return swift_release();
}

uint64_t (*static DOCAPIRateLimiter.shared.modify())()
{
  if (qword_255469AE8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  char v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  char v22;

  v21[0] = a2;
  v21[1] = a3;
  v21[2] = a4;
  v21[3] = a5;
  v22 = a1 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = COERCE_DOUBLE(sub_21EAAA4DC((uint64_t)v21)) > 1.0 && (v9 & 1) == 0;
  if (v10)
  {
    sub_21EAAAE08((uint64_t)v21);
    swift_bridgeObjectRelease();
    v11 = swift_bridgeObjectRelease();
    a6(v11);
  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v12 = sub_21EB0263C();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.UI);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v13 = sub_21EB02624();
    v14 = sub_21EB02EF4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v19;
      *(_DWORD *)v15 = 136315650;
      sub_21EA591E4(0xD00000000000004FLL, 0x800000021EB114C0, &v20);
      sub_21EB03134();
      *(_WORD *)(v15 + 12) = 2080;
      v16 = sub_21EB02B88();
      sub_21EA591E4(v16, v17, &v20);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_21EA591E4(a2, a3, &v20);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v13, v14, "%s call to %s by: %s was rate-limited", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v19, -1, -1);
      MEMORY[0x2207B6A18](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return v10;
}

void __swiftcall DOCAPIRateLimiter.defaults()(NSUserDefaults_optional *__return_ptr retstr)
{
  id v1;

  if (qword_2540A6DF8 != -1)
    swift_once();
  swift_beginAccess();
  v1 = (id)static NSUserDefaults.docUserDefaults;
}

uint64_t DOCAPIRateLimiter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DOCAPIRateLimiter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21EAAA4DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  NSObject *v48;
  uint64_t v49;
  os_log_type_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  id v68;
  char *v69;
  _OWORD v70[2];
  uint64_t v71[4];
  _BYTE v72[16];
  _QWORD v73[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6530);
  MEMORY[0x24BDAC7A8](v2);
  v69 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02384();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v60 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - v12;
  if (qword_2540A6DF8 != -1)
    swift_once();
  swift_beginAccess();
  v14 = (void *)static NSUserDefaults.docUserDefaults;
  if (static NSUserDefaults.docUserDefaults)
  {
    v66 = v8;
    v15 = objc_allocWithZone(MEMORY[0x24BE2DEE0]);
    v16 = v14;
    v17 = (char *)objc_msgSend(v15, sel_init);
    v18 = (void *)sub_21EB02B58();
    objc_msgSend(v17, sel_setHostIdentifier_, v18);

    sub_21EA59D84(a1 + 16, (uint64_t)v72, &qword_2540A6CF8);
    sub_21EA59D84((uint64_t)v72, (uint64_t)v73, &qword_2540A6CF8);
    if (v73[1])
      v19 = (void *)sub_21EB02B58();
    else
      v19 = 0;
    objc_msgSend(v17, sel_setRoleIdentifier_, v19);

    sub_21EB02B88();
    v26 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v16, sel_doc_roleSpecificKeyForKey_configuration_, v26, v17);

    v28 = v27;
    if (!v27)
    {
      sub_21EB02B88();
      v28 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
    }
    v68 = v28;
    v67 = (char *)sub_21EB02B88();
    v30 = v29;
    if (qword_255469B78 != -1)
      swift_once();
    v31 = sub_21EB0263C();
    v32 = __swift_project_value_buffer(v31, (uint64_t)static Logger.UI);
    swift_bridgeObjectRetain();
    v65 = v32;
    v33 = sub_21EB02624();
    v34 = sub_21EB02EDC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v61 = v4;
      v36 = v35;
      v37 = swift_slowAlloc();
      v64 = v13;
      v38 = v37;
      v71[0] = v37;
      *(_DWORD *)v36 = 136315394;
      v63 = v5;
      v62 = v14;
      *(_QWORD *)&v70[0] = sub_21EA591E4(0xD000000000000023, 0x800000021EB11590, v71);
      sub_21EB03134();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v70[0] = sub_21EA591E4((uint64_t)v67, v30, v71);
      v14 = v62;
      v5 = v63;
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v33, v34, "%s fetching last call to renameDocumentAtURL: timetstamp for key: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      v39 = v38;
      v13 = v64;
      MEMORY[0x2207B6A18](v39, -1, -1);
      v40 = v36;
      v4 = v61;
      MEMORY[0x2207B6A18](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v41 = v68;
    v42 = objc_msgSend(v16, sel_valueForKey_, v68);

    if (v42)
    {
      sub_21EB031B8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v70, 0, sizeof(v70));
    }
    v43 = v69;
    sub_21EA59D84((uint64_t)v70, (uint64_t)v71, &qword_2540A6F88);
    if (v71[3])
    {
      v44 = swift_dynamicCast();
      (*(void (**)(id, _QWORD, uint64_t, uint64_t))(v5 + 56))(v43, v44 ^ 1u, 1, v4);
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v5 + 48))(v43, 1, v4) != 1)
      {
        v68 = v16;
        v69 = v17;
        (*(void (**)(char *, id, uint64_t))(v5 + 32))(v13, v43, v4);
        sub_21EB0236C();
        sub_21EB0233C();
        v46 = v45;
        v47 = v66;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v66, v13, v4);
        v48 = sub_21EB02624();
        v49 = v5;
        v50 = sub_21EB02EDC();
        v51 = v11;
        if (os_log_type_enabled(v48, v50))
        {
          v52 = swift_slowAlloc();
          v63 = v49;
          v53 = v52;
          v54 = swift_slowAlloc();
          v64 = v13;
          v62 = v14;
          v55 = v54;
          v71[0] = v54;
          *(_DWORD *)v53 = 136315650;
          *(_QWORD *)&v70[0] = sub_21EA591E4(0xD000000000000023, 0x800000021EB11590, v71);
          sub_21EB03134();
          *(_WORD *)(v53 + 12) = 2080;
          sub_21EAAB88C();
          v67 = v11;
          v56 = sub_21EB03488();
          *(_QWORD *)&v70[0] = sub_21EA591E4(v56, v57, v71);
          sub_21EB03134();
          swift_bridgeObjectRelease();
          v58 = *(void (**)(char *, uint64_t))(v63 + 8);
          v58(v47, v4);
          *(_WORD *)(v53 + 22) = 2048;
          *(_QWORD *)&v70[0] = v46;
          sub_21EB03134();
          _os_log_impl(&dword_21EA4C000, v48, v50, "%s fetched date: %s time interval since now: %f", (uint8_t *)v53, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x2207B6A18](v55, -1, -1);
          MEMORY[0x2207B6A18](v53, -1, -1);

          v58(v67, v4);
          v59 = v64;
        }
        else
        {

          v58 = *(void (**)(char *, uint64_t))(v49 + 8);
          v58(v47, v4);
          v58(v51, v4);
          v59 = v13;
        }
        v58(v59, v4);
        return v46;
      }
    }
    else
    {
      sub_21EA59E08((uint64_t)v71, &qword_2540A6F88);
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v5 + 56))(v43, 1, 1, v4);
    }

    sub_21EA59E08((uint64_t)v43, (uint64_t *)&unk_2540A6530);
    return 0x4000000000000000;
  }
  if (qword_255469B78 != -1)
    swift_once();
  v20 = sub_21EB0263C();
  __swift_project_value_buffer(v20, (uint64_t)static Logger.UI);
  v21 = sub_21EB02624();
  v22 = sub_21EB02EE8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v71[0] = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)&v70[0] = sub_21EA591E4(0xD000000000000023, 0x800000021EB11590, v71);
    sub_21EB03134();
    _os_log_impl(&dword_21EA4C000, v21, v22, "%s unable to load user defaults", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v24, -1, -1);
    MEMORY[0x2207B6A18](v23, -1, -1);
  }

  return 0;
}

void sub_21EAAAE08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD v47[2];
  uint64_t v48[2];

  v2 = sub_21EB02384();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v38 - v7;
  if (qword_2540A6DF8 != -1)
    swift_once();
  swift_beginAccess();
  v9 = (void *)static NSUserDefaults.docUserDefaults;
  if (static NSUserDefaults.docUserDefaults)
  {
    v10 = objc_allocWithZone(MEMORY[0x24BE2DEE0]);
    v11 = v9;
    v12 = objc_msgSend(v10, sel_init);
    v13 = (void *)sub_21EB02B58();
    objc_msgSend(v12, sel_setHostIdentifier_, v13);

    sub_21EA59D84(a1 + 16, (uint64_t)v47, &qword_2540A6CF8);
    sub_21EA59D84((uint64_t)v47, (uint64_t)v48, &qword_2540A6CF8);
    if (v48[1])
      v14 = (void *)sub_21EB02B58();
    else
      v14 = 0;
    objc_msgSend(v12, sel_setRoleIdentifier_, v14);

    v46 = *(_BYTE *)(a1 + 32);
    sub_21EB02B88();
    v20 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v41 = v12;
    v21 = objc_msgSend(v11, sel_doc_roleSpecificKeyForKey_configuration_, v20, v12);

    v40 = sub_21EB02B88();
    v23 = v22;

    sub_21EB0236C();
    if (qword_255469B78 != -1)
      swift_once();
    v42 = v11;
    v24 = sub_21EB0263C();
    __swift_project_value_buffer(v24, (uint64_t)static Logger.UI);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    swift_bridgeObjectRetain();
    v25 = sub_21EB02624();
    v26 = sub_21EB02EDC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v43 = v2;
      v28 = v27;
      v39 = swift_slowAlloc();
      v45 = v39;
      *(_DWORD *)v28 = 136315650;
      v44 = sub_21EA591E4(0xD00000000000001CLL, 0x800000021EB11570, &v45);
      sub_21EB03134();
      *(_WORD *)(v28 + 12) = 2080;
      sub_21EAAB88C();
      v29 = sub_21EB03488();
      v44 = sub_21EA591E4(v29, v30, &v45);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v6, v43);
      *(_WORD *)(v28 + 22) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_21EA591E4(v40, v23, &v45);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v25, v26, "%s updating last call to renameDocumentAtURL: timetstamp to: %s for key: %s", (uint8_t *)v28, 0x20u);
      v32 = v39;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v32, -1, -1);
      v33 = v28;
      v2 = v43;
      MEMORY[0x2207B6A18](v33, -1, -1);

    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v6, v2);

      swift_bridgeObjectRelease_n();
    }
    v34 = (void *)sub_21EB02348();
    sub_21EB02B88();
    v35 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v37 = v41;
    v36 = v42;
    objc_msgSend(v42, sel_doc_setObject_forRoleKey_configuation_, v34, v35, v41);

    v31(v8, v2);
  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v15 = sub_21EB0263C();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.UI);
    v16 = sub_21EB02624();
    v17 = sub_21EB02EE8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v48[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v47[0] = sub_21EA591E4(0xD00000000000001CLL, 0x800000021EB11570, v48);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v16, v17, "%s unable to load docUserDefaults", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v19, -1, -1);
      MEMORY[0x2207B6A18](v18, -1, -1);
    }

  }
}

unint64_t sub_21EAAB404()
{
  unint64_t result;

  result = qword_25546AEF0;
  if (!qword_25546AEF0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAPIRateLimiterAPI, &type metadata for DOCAPIRateLimiterAPI);
    atomic_store(result, (unint64_t *)&qword_25546AEF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCAPIRateLimiterAPI(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EAAB494 + 4 * byte_21EB0A225[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EAAB4C8 + 4 * byte_21EB0A220[v4]))();
}

uint64_t sub_21EAAB4C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAAB4D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAAB4D8);
  return result;
}

uint64_t sub_21EAAB4E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAAB4ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EAAB4F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAAB4F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAPIRateLimiterAPI()
{
  return &type metadata for DOCAPIRateLimiterAPI;
}

uint64_t type metadata accessor for DOCAPIRateLimiter()
{
  return objc_opt_self();
}

BOOL sub_21EAAB534(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *aBlock)
{
  char v16;
  _BOOL8 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  os_log_type_t type;
  uint64_t v27;
  _QWORD v28[4];
  char v29;

  v28[0] = a2;
  v28[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  v29 = a1 & 1;
  _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = COERCE_DOUBLE(sub_21EAAA4DC((uint64_t)v28)) > 1.0 && (v16 & 1) == 0;
  if (v17)
  {
    sub_21EAAAE08((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _Block_copy(aBlock);
    sub_21EA93EF4(a6, a7, a8, a9, a10, (void (**)(_QWORD, _QWORD, _QWORD))aBlock);
    _Block_release(aBlock);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v18 = sub_21EB0263C();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.UI);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v19 = sub_21EB02624();
    v20 = sub_21EB02EF4();
    if (os_log_type_enabled(v19, v20))
    {
      type = v20;
      v21 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v21 = 136315650;
      sub_21EA591E4(0xD00000000000004FLL, 0x800000021EB114C0, &v27);
      sub_21EB03134();
      *(_WORD *)(v21 + 12) = 2080;
      v22 = sub_21EB02B88();
      sub_21EA591E4(v22, v23, &v27);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_21EA591E4(a2, a3, &v27);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v19, type, "%s call to %s by: %s was rate-limited", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v25, -1, -1);
      MEMORY[0x2207B6A18](v21, -1, -1);
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  _Block_release(aBlock);
  return v17;
}

unint64_t sub_21EAAB88C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25546AFC0;
  if (!qword_25546AFC0)
  {
    v1 = sub_21EB02384();
    result = MEMORY[0x2207B694C](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_25546AFC0);
  }
  return result;
}

BOOL sub_21EAAB8D4(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD, _QWORD), uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  char v17;
  _BOOL8 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  char v29;

  v28[0] = a2;
  v28[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  v29 = a1 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = COERCE_DOUBLE(sub_21EAAA4DC((uint64_t)v28)) > 1.0 && (v17 & 1) == 0;
  if (v18)
  {
    sub_21EAAAE08((uint64_t)v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21EA91B4C(a6, a7, a8, a9, a10, a11, a12);
  }
  else
  {
    if (qword_255469B78 != -1)
      swift_once();
    v19 = sub_21EB0263C();
    __swift_project_value_buffer(v19, (uint64_t)static Logger.UI);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v20 = sub_21EB02624();
    v21 = sub_21EB02EF4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v27 = v26;
      *(_DWORD *)v22 = 136315650;
      sub_21EA591E4(0xD00000000000004FLL, 0x800000021EB114C0, &v27);
      sub_21EB03134();
      *(_WORD *)(v22 + 12) = 2080;
      v23 = sub_21EB02B88();
      sub_21EA591E4(v23, v24, &v27);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      swift_bridgeObjectRetain();
      sub_21EA591E4(a2, a3, &v27);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v20, v21, "%s call to %s by: %s was rate-limited", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v26, -1, -1);
      MEMORY[0x2207B6A18](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return v18;
}

id DOCViewDecorator.embeddable.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id DOCViewDecorator.content.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t DOCViewDecorator.__allocating_init(contentWithoutWrapping:)(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a1;
  v3 = a1;
  return v2;
}

uint64_t DOCViewDecorator.init(contentWithoutWrapping:)(void *a1)
{
  uint64_t v1;
  id v2;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = a1;
  v2 = a1;
  return v1;
}

uint64_t DOCViewDecorator.__allocating_init(_:wrappedForVibrancy:)(void *a1)
{
  uint64_t v2;
  id v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a1;
  v3 = a1;
  return v2;
}

uint64_t DOCViewDecorator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DOCViewDecorator.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsDisplay()()
{
  sub_21EAABF80((SEL *)&selRef_setNeedsDisplay);
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsLayout()()
{
  sub_21EAABF80((SEL *)&selRef_setNeedsLayout);
}

Swift::Void __swiftcall DOCViewDecorator.setNeedsUpdateConstraints()()
{
  sub_21EAABF80((SEL *)&selRef_setNeedsUpdateConstraints);
}

Swift::Void __swiftcall DOCViewDecorator.layoutIfNeeded()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_layoutIfNeeded);
}

Swift::Void __swiftcall DOCViewDecorator.setContentHuggingPriority(_:for:)(UILayoutPriority _, UILayoutConstraintAxis a2)
{
  sub_21EAABD34(a2, (SEL *)&selRef_setContentHuggingPriority_forAxis_, _);
}

Swift::Void __swiftcall DOCViewDecorator.setContentCompressionResistancePriority(_:for:)(UILayoutPriority _, UILayoutConstraintAxis a2)
{
  sub_21EAABD34(a2, (SEL *)&selRef_setContentCompressionResistancePriority_forAxis_, _);
}

id sub_21EAABD34(uint64_t a1, SEL *a2, float a3)
{
  uint64_t v3;
  double v7;

  objc_msgSend(*(id *)(v3 + 16), *a2, a1);
  *(float *)&v7 = a3;
  return objc_msgSend(*(id *)(v3 + 24), *a2, a1, v7);
}

id DOCViewDecorator.layer.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_layer);
}

id DOCViewDecorator.isHidden.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isHidden);
}

id DOCViewDecorator.isHidden.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setHidden_, a1 & 1);
}

id (*DOCViewDecorator.isHidden.modify(uint64_t a1))(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 16), sel_isHidden);
  return sub_21EAABE24;
}

id sub_21EAABE24(unsigned __int8 *a1, uint64_t a2)
{
  return sub_21EAABF5C(a1, a2, (SEL *)&selRef_setHidden_);
}

id DOCViewDecorator.alpha.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_alpha);
}

id DOCViewDecorator.alpha.setter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_);
}

id (*DOCViewDecorator.alpha.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(v1 + 16), sel_alpha);
  *a1 = v3;
  return sub_21EAABE90;
}

id sub_21EAABE90(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 8) + 16), sel_setAlpha_, *(double *)a1);
}

id DOCViewDecorator.firstBaselineAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_firstBaselineAnchor);
}

id DOCViewDecorator.lastBaselineAnchor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_lastBaselineAnchor);
}

id DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_translatesAutoresizingMaskIntoConstraints);
}

id (*DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.modify(uint64_t a1))(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 16), sel_translatesAutoresizingMaskIntoConstraints);
  return sub_21EAABF50;
}

id sub_21EAABF50(unsigned __int8 *a1, uint64_t a2)
{
  return sub_21EAABF5C(a1, a2, (SEL *)&selRef_setTranslatesAutoresizingMaskIntoConstraints_);
}

id sub_21EAABF5C(unsigned __int8 *a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), *a3, a1[8]);
}

Swift::Void __swiftcall DOCViewDecorator.invalidateIntrinsicContentSize()()
{
  sub_21EAABF80((SEL *)&selRef_invalidateIntrinsicContentSize);
}

id sub_21EAABF80(SEL *a1)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + 16), *a1);
  return objc_msgSend(*(id *)(v1 + 24), *a1);
}

id DOCViewDecorator.tintColor.getter()
{
  uint64_t v0;
  id result;

  result = objc_msgSend(*(id *)(v0 + 24), sel_tintColor);
  if (!result)
    __break(1u);
  return result;
}

void DOCViewDecorator.tintColor.setter(void *a1)
{
  sub_21EAACDBC((uint64_t)a1);

}

void (*DOCViewDecorator.tintColor.modify(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = DOCViewDecorator.tintColor.getter();
  return sub_21EAAC038;
}

void sub_21EAAC038(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + 24);
  v4 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(id *)a1;
    objc_msgSend(v2, sel_setTintColor_, v3);

  }
  else
  {
    objc_msgSend(v2, sel_setTintColor_);
  }

}

id DOCViewDecorator<>.buttonType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_buttonType);
}

uint64_t (*DOCViewDecorator<>.configurationUpdateHandler.getter())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 24), sel_configurationUpdateHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_21EAACDF4;
  }
  return result;
}

void DOCViewDecorator<>.configurationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[6];

  v4 = *(void **)(v2 + 24);
  if (a1)
  {
    v8[4] = a1;
    v8[5] = a2;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_21EAA71A8;
    v8[3] = &block_descriptor_11;
    v5 = _Block_copy(v8);
    v6 = v4;
    sub_21EA83588(a1);
    swift_release();
  }
  else
  {
    v7 = v4;
    v5 = 0;
  }
  objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v5);
  sub_21EA5CA7C(a1);
  _Block_release(v5);

}

void (*DOCViewDecorator<>.configurationUpdateHandler.modify(uint64_t (**a1)()))(uint64_t *a1, char a2)
{
  uint64_t (*v1)();
  uint64_t (*v3)();

  a1[2] = v1;
  *a1 = DOCViewDecorator<>.configurationUpdateHandler.getter();
  a1[1] = v3;
  return sub_21EAAC220;
}

void sub_21EAAC220(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_21EA83588(*a1);
    DOCViewDecorator<>.configurationUpdateHandler.setter(v2, v3);
    sub_21EA5CA7C(v2);
  }
  else
  {
    DOCViewDecorator<>.configurationUpdateHandler.setter(*a1, v3);
  }
}

void DOCViewDecorator<>.configuration.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 24);
  sub_21EB030A4();

}

uint64_t DOCViewDecorator<>.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AFC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = *(void **)(v1 + 24);
  sub_21EAACE04(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v5;
  sub_21EB030B0();

  return sub_21EAACE4C(a1);
}

void (*DOCViewDecorator<>.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25546AFC8) - 8) + 64);
  a1[1] = malloc(v3);
  a1[2] = malloc(v3);
  DOCViewDecorator<>.configuration.getter();
  return sub_21EAAC3C0;
}

void sub_21EAAC3C0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_21EAACE04((uint64_t)v3, (uint64_t)v2);
    DOCViewDecorator<>.configuration.setter((uint64_t)v2);
    sub_21EAACE4C((uint64_t)v3);
  }
  else
  {
    DOCViewDecorator<>.configuration.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

id DOCViewDecorator<>.setNeedsUpdateConfiguration()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_setNeedsUpdateConfiguration);
}

id DOCViewDecorator<>.menu.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_menu);
}

void DOCViewDecorator<>.menu.setter(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + 24);
  objc_msgSend(v2, sel_setMenu_, a1);

}

void (*DOCViewDecorator<>.menu.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_menu);
  return sub_21EAAC4E4;
}

void sub_21EAAC4E4(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    DOCViewDecorator<>.menu.setter(v2);

  }
  else
  {
    DOCViewDecorator<>.menu.setter(*a1);
  }
}

id DOCViewDecorator<>.font.getter()
{
  return sub_21EAAC864((SEL *)&selRef_font);
}

void DOCViewDecorator<>.font.setter(void *a1)
{
  sub_21EAACE8C(a1);

}

void sub_21EAAC568(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  void (*v13)(_BYTE *, _QWORD);
  void (*v14)(_BYTE *);
  void *v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  _BYTE v20[32];
  id v21;
  id v22;

  v3 = v2;
  v5 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a1 + 8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v20[-v10];
  v21 = *(id *)(v2 + 24);
  v22 = v21;
  v12 = v21;
  v13 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  v14 = *(void (**)(_BYTE *))(v6 + 16);
  v14(v11);
  v13(v20, 0);

  if ((sub_21EB02B34() & 1) == 0)
  {
    ((void (*)(_BYTE *, uint64_t, uint64_t))v14)(v9, a2, v5);
    swift_setAtWritableKeyPath();
    v15 = *(void **)(v3 + 16);
    v16 = *(void **)(v3 + 24);
    sub_21EA579D4(0, &qword_2540A6EF0);
    v17 = v15;
    v18 = v16;
    v19 = sub_21EB0308C();

    if ((v19 & 1) == 0)
      objc_msgSend(v17, sel_invalidateIntrinsicContentSize);
  }
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);

}

void (*DOCViewDecorator<>.font.modify(id *a1))(void **a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = DOCViewDecorator<>.font.getter();
  return sub_21EAAC744;
}

void sub_21EAAC744(void **a1, char a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_21EAACE8C(v3);

  }
  else
  {
    sub_21EAACE8C(v2);
  }

}

id DOCViewDecorator<>.numberOfLines.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_numberOfLines);
}

uint64_t DOCViewDecorator<>.numberOfLines.setter(uint64_t a1)
{
  _QWORD *KeyPath;
  uint64_t v4;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v4 = a1;
  sub_21EAAC568(KeyPath, (uint64_t)&v4);
  return swift_release();
}

uint64_t (*DOCViewDecorator<>.numberOfLines.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_numberOfLines);
  return sub_21EAAC838;
}

uint64_t sub_21EAAC838(uint64_t *a1)
{
  return DOCViewDecorator<>.numberOfLines.setter(*a1);
}

id DOCViewDecorator<>.textColor.getter()
{
  return sub_21EAAC864((SEL *)&selRef_textColor);
}

id sub_21EAAC864(SEL *a1)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 24), *a1);
  if (!result)
    __break(1u);
  return result;
}

void DOCViewDecorator<>.textColor.setter(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + 24);
  objc_msgSend(v2, sel_setTextColor_, a1);

}

void (*DOCViewDecorator<>.textColor.modify(id *a1))(void **a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = DOCViewDecorator<>.textColor.getter();
  return sub_21EAAC910;
}

void sub_21EAAC910(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    DOCViewDecorator<>.textColor.setter(v3);

  }
  else
  {
    DOCViewDecorator<>.textColor.setter(v2);
  }
}

id DOCViewDecorator<>.attributedText.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_attributedText);
}

void DOCViewDecorator<>.attributedText.setter(void *a1)
{
  sub_21EAACF48((uint64_t)a1);

}

void (*DOCViewDecorator<>.attributedText.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_attributedText);
  return sub_21EAAC9F4;
}

void sub_21EAAC9F4(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_21EAACF48((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_21EAACF48(*a1);
    v3 = v4;
  }

}

uint64_t DOCViewDecorator<>.text.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_21EB02B88();

  return v3;
}

uint64_t DOCViewDecorator<>.text.setter(uint64_t a1, uint64_t a2)
{
  sub_21EAACFA4(a1, a2);
  return swift_bridgeObjectRelease();
}

void sub_21EAACAD4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, sel_text);
  if (v3)
  {
    v4 = v3;
    v5 = sub_21EB02B88();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_21EAACB38(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = sub_21EB02B58();
  else
    v3 = 0;
  v4 = (id)v3;
  objc_msgSend(v2, sel_setText_);

}

uint64_t (*DOCViewDecorator<>.text.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = DOCViewDecorator<>.text.getter();
  a1[1] = v3;
  return sub_21EAACBC8;
}

uint64_t sub_21EAACBC8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_21EAACFA4(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21EAACFA4(*a1, v2);
  }
  return swift_bridgeObjectRelease();
}

id DOCViewDecorator<>.textAlignment.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_textAlignment);
}

id DOCViewDecorator<>.textAlignment.setter(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 24), sel_setTextAlignment_, a1);
}

id (*DOCViewDecorator<>.textAlignment.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 24), sel_textAlignment);
  return sub_21EAACC88;
}

id sub_21EAACC88(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[1] + 24), sel_setTextAlignment_, *a1);
}

id DOCViewDecorator<>.adjustsFontForContentSizeCategory.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_adjustsFontForContentSizeCategory);
}

uint64_t DOCViewDecorator<>.adjustsFontForContentSizeCategory.setter(char a1)
{
  _QWORD *KeyPath;
  char v4;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v4 = a1;
  sub_21EAAC568(KeyPath, (uint64_t)&v4);
  return swift_release();
}

uint64_t (*DOCViewDecorator<>.adjustsFontForContentSizeCategory.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(*(id *)(v1 + 24), sel_adjustsFontForContentSizeCategory);
  return sub_21EAACD54;
}

uint64_t sub_21EAACD54(uint64_t a1)
{
  return DOCViewDecorator<>.adjustsFontForContentSizeCategory.setter(*(_BYTE *)(a1 + 8));
}

id UIStackView.addArrangedSubview<A>(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_addArrangedSubview_, *(_QWORD *)(a1 + 16));
}

id UIStackView.setCustomSpacing<A>(_:after:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setCustomSpacing_afterView_, *(_QWORD *)(a1 + 16));
}

uint64_t _s26DocumentManagerExecutables16DOCViewDecoratorC_18wrappedForVibrancyACyxGx_AA11DOCVibrancyV5StyleVSgtcfc_0(void *a1)
{
  uint64_t v1;
  id v2;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = a1;
  v2 = a1;
  return v1;
}

id sub_21EAACDBC(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 24), sel_setTintColor_, a1);
}

uint64_t sub_21EAACDD0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_21EAACDF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_21EAACE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EAACE4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AFC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21EAACE8C(void *a1)
{
  _QWORD *KeyPath;
  id v3;
  void *v5;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v5 = a1;
  sub_21EAAD1F0();
  v3 = a1;
  sub_21EAAC568(KeyPath, (uint64_t)&v5);

  return swift_release();
}

char *keypath_get_selector_numberOfLines()
{
  return sel_numberOfLines;
}

id sub_21EAACF04@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_numberOfLines);
  *a2 = result;
  return result;
}

id sub_21EAACF34(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfLines_, *a1);
}

uint64_t sub_21EAACF48(uint64_t a1)
{
  _QWORD *KeyPath;
  uint64_t v4;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v4 = a1;
  sub_21EAAD11C();
  sub_21EAAC568(KeyPath, (uint64_t)&v4);
  return swift_release();
}

uint64_t sub_21EAACFA4(uint64_t a1, uint64_t a2)
{
  _QWORD *KeyPath;
  _QWORD v6[2];

  KeyPath = (_QWORD *)swift_getKeyPath();
  v6[0] = a1;
  v6[1] = a2;
  sub_21EAAD068();
  sub_21EAAC568(KeyPath, (uint64_t)v6);
  return swift_release();
}

char *keypath_get_selector_adjustsFontForContentSizeCategory()
{
  return sel_adjustsFontForContentSizeCategory;
}

id sub_21EAAD010@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_adjustsFontForContentSizeCategory);
  *a2 = (_BYTE)result;
  return result;
}

id sub_21EAAD040(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAdjustsFontForContentSizeCategory_, *a1);
}

char *keypath_get_selector_text()
{
  return sel_text;
}

unint64_t sub_21EAAD068()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2540A6D00;
  if (!qword_2540A6D00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540A6CF8);
    v2 = MEMORY[0x24BEE0D28];
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2540A6D00);
  }
  return result;
}

char *keypath_get_selector_attributedText()
{
  return sel_attributedText;
}

id sub_21EAAD0D0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_attributedText);
  *a2 = result;
  return result;
}

id sub_21EAAD108(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAttributedText_, *a1);
}

unint64_t sub_21EAAD11C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25546AFD0;
  if (!qword_25546AFD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546AFD8);
    v2 = sub_21EAAD26C(&qword_25546AFE0, &qword_25546AFE8);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25546AFD0);
  }
  return result;
}

char *keypath_get_selector_font()
{
  return sel_font;
}

id sub_21EAAD1A4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_font);
  *a2 = result;
  return result;
}

id sub_21EAAD1DC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFont_, *a1);
}

unint64_t sub_21EAAD1F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2540A6EE0;
  if (!qword_2540A6EE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2540A6ED8);
    v2 = sub_21EAAD26C(&qword_2540A6EE8, &qword_2540A6ED0);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2540A6EE0);
  }
  return result;
}

uint64_t sub_21EAAD26C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_21EA579D4(255, a2);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5BE0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21EAAD2AC(unint64_t a1, _QWORD **a2)
{
  unint64_t v3;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_18;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (!__OFSUB__(v3--, 1))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x2207B5B3C](v3, a1);
LABEL_9:
        v6 = v5;
        v7 = objc_msgSend(v5, sel_displayName);
        v8 = sub_21EB02B88();
        v10 = v9;

        v11 = *a2;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v11 = sub_21EA5C430(0, v11[2] + 1, 1, v11);
          *a2 = v11;
        }
        v14 = v11[2];
        v13 = v11[3];
        if (v14 >= v13 >> 1)
        {
          v11 = sub_21EA5C430((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
          *a2 = v11;
        }
        v11[2] = v14 + 1;
        v15 = &v11[2 * v14];
        v15[4] = v8;
        v15[5] = v10;

        if (!v3)
          return swift_bridgeObjectRelease();
      }
      else
      {
        if ((v3 & 0x8000000000000000) != 0)
          goto LABEL_16;
        if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v5 = *(id *)(a1 + 32 + 8 * v3);
          goto LABEL_9;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        v3 = sub_21EB0341C();
        if (!v3)
          return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return swift_bridgeObjectRelease();
}

void sub_21EAAD444(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;

  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 1);
  v3 = (void *)sub_21EB02B58();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v4);
    v6 = objc_allocWithZone(MEMORY[0x24BDD1688]);
    v7 = (void *)sub_21EB02B58();
    v8 = objc_msgSend(v6, sel_initWithString_, v7);

    v9 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v5);
    objc_msgSend(v8, sel_appendAttributedString_, v9);

    v10 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v11 = (void *)sub_21EB02B58();
    v12 = objc_msgSend(v10, sel_initWithString_, v11);

    objc_msgSend(v8, sel_appendAttributedString_, v12);
    if (a1)
    {
      v13 = *MEMORY[0x24BEBB368];
      v14 = a1;
      objc_msgSend(v8, sel_addAttribute_value_range_, v13, v14, 0, objc_msgSend(v8, sel_length));

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21EAAD660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = qword_255469AA0;
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  v4 = (uint64_t *)(static DOCUnicode.bidiIsolateBeginFSI
                 + OBJC_IVAR____TtC26DocumentManagerExecutables10DOCUnicode_rawValue);
  swift_beginAccess();
  v9 = *v4;
  swift_bridgeObjectRetain();
  sub_21EB02C0C();
  if (qword_255469AA8 != -1)
    swift_once();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v9;
  v6 = v1 - 1;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_21EB02C0C();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21EB02C0C();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_21EB02C0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21EB02C0C();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v5;
}

void FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v28;
  _QWORD aBlock[6];

  v15 = (id)_DocumentManagerBundle();
  if (v15)
  {
    v16 = v15;
    v17 = sub_21EB02168();
    v19 = v18;

    __swift_instantiateConcreteTypeFromMangledName(&qword_25546AFF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
    *(_QWORD *)(inited + 32) = 0x68736172542ELL;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 48) = v17;
    *(_QWORD *)(inited + 56) = v19;
    swift_bridgeObjectRetain();
    v21 = sub_21EA98428(inited);
    if (a2)
    {
      sub_21EAADB6C(a2, a1, a4 & 1, v28, a6 & 1, v17, v19, v21, a3, a5, a7, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = (void *)objc_opt_self();
      v23 = swift_allocObject();
      *(_BYTE *)(v23 + 16) = a4 & 1;
      *(_QWORD *)(v23 + 24) = v28;
      *(_BYTE *)(v23 + 32) = a6 & 1;
      *(_QWORD *)(v23 + 40) = v17;
      *(_QWORD *)(v23 + 48) = v19;
      *(_QWORD *)(v23 + 56) = v21;
      *(_QWORD *)(v23 + 64) = a3;
      *(_QWORD *)(v23 + 72) = a5;
      *(_QWORD *)(v23 + 80) = a7;
      *(_QWORD *)(v23 + 88) = a8;
      *(_QWORD *)(v23 + 96) = a1;
      aBlock[4] = sub_21EAAE158;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21EA81E00;
      aBlock[3] = &block_descriptor_12;
      v24 = _Block_copy(aBlock);
      v25 = a5;
      sub_21EB01F10();
      swift_bridgeObjectRetain();
      v26 = v28;
      swift_release();
      objc_msgSend(v22, sel_fetchProviderDomainForItem_cachePolicy_completionHandler_, v26, 1, v24, 0x800000021EB11630);
      _Block_release(v24);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21EAADB6C(id a1, uint64_t a2, char a3, void *a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  char **v12;
  uint64_t v13;
  uint64_t v17;
  _QWORD *v20;
  id v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  id v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  _QWORD aBlock[6];
  unint64_t v53;
  _QWORD *v54;

  LOBYTE(v17) = a5;
  v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v53 = a2;
  v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((a3 & 1) != 0)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v24 = a2;
      else
        v24 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v45 = a4;
      if (sub_21EB0341C() < 0)
      {
        __break(1u);
        goto LABEL_40;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v21 = a4;
    }
    sub_21EAB6E7C(0, 0, (uint64_t)a4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v12 = &selRef_strokeEnd;
  if (!objc_msgSend(a4, sel_isTrashed) || (v17 & 1) != 0)
    goto LABEL_14;
  v22 = swift_bridgeObjectRetain();
  a1 = 0;
  sub_21EAAD2AC(v22, &v54);
  swift_bridgeObjectRelease();
  do
  {
    if (!objc_msgSend(a4, v12[374], v50) || (v17 & 1) == 0 || !v54[2])
      goto LABEL_34;
    v17 = v54[4];
    a4 = (void *)v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v54 = v20;
    sub_21EAB6CFC(0, 0, v17, (uint64_t)a4);
    if (v54[2])
      goto LABEL_32;
    __break(1u);
LABEL_14:
    if (a1)
    {
      a1 = a1;
      if ((DOCProviderDomainIsSharedServerDomain() & 1) == 0)
      {
        v51 = a6;
        v23 = (id)DOCLocalizedDisplayName();
        v24 = sub_21EB02B88();
        v13 = v25;

        v26 = sub_21EA5C430(0, 1, 1, MEMORY[0x24BEE4AF8]);
        a6 = v26[2];
        v27 = v26[3];
        v28 = a6 + 1;
        if (a6 >= v27 >> 1)
        {
LABEL_40:
          v50 = v28;
          v46 = sub_21EA5C430((_QWORD *)(v27 > 1), v28, 1, v26);
          v28 = v50;
          v26 = v46;
        }
        v26[2] = v28;
        v29 = &v26[2 * a6];
        v29[4] = v24;
        v29[5] = v13;
        v54 = v26;
        if (v53 >> 62)
        {
          swift_bridgeObjectRetain();
          v47 = sub_21EB0341C();
          swift_bridgeObjectRelease();
          v48 = v47 < 1;
          a6 = v51;
          if (!v48)
          {
            swift_bridgeObjectRetain();
            v49 = sub_21EB0341C();
            result = swift_bridgeObjectRelease();
            if (!v49)
            {
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
            goto LABEL_19;
          }
        }
        else
        {
          a6 = v51;
          if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_19:
            result = swift_isUniquelyReferenced_nonNull_bridgeObject();
            if (!(_DWORD)result || (v53 & 0x8000000000000000) != 0 || (v53 & 0x4000000000000000) != 0)
              sub_21EAC020C(v53);
            v31 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v31)
              goto LABEL_44;
            v32 = v31 - 1;
            v33 = *(void **)((v53 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 0x20);
            *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) = v32;
            sub_21EB02D08();

          }
        }
      }

    }
    v34 = swift_bridgeObjectRetain();
    a1 = 0;
    sub_21EAAD2AC(v34, &v54);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      objc_msgSend(a4, v12[374]);
      goto LABEL_34;
    }
  }
  while (v54[2] < 3uLL
       || (v54[6] != 0x736568736172542ELL || v54[7] != 0xE800000000000000) && (sub_21EB034C4() & 1) == 0);
  sub_21EAAE030(1uLL);
  swift_bridgeObjectRelease();
  sub_21EAAE030(1uLL);
  result = swift_bridgeObjectRelease();
  if (v54[2])
  {
LABEL_32:
    swift_bridgeObjectRetain();
    sub_21EAB6CFC(1, 1, a6, a7);
LABEL_34:
    swift_bridgeObjectRetain();
    v35 = swift_bridgeObjectRetain();
    sub_21EAAE19C(v35, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v36 = swift_bridgeObjectRetain();
    v37 = sub_21EAAE2CC(v36, a10);
    swift_bridgeObjectRelease();
    v38 = swift_bridgeObjectRetain();
    v39 = sub_21EAAD660(v38);
    v41 = v40;
    swift_bridgeObjectRelease();
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = a11;
    v42[3] = a12;
    v42[4] = v37;
    v42[5] = v39;
    v42[6] = v41;
    aBlock[4] = sub_21EAAE668;
    aBlock[5] = v42;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EAB0;
    aBlock[3] = &block_descriptor_6_4;
    v43 = _Block_copy(aBlock);
    sub_21EB01F10();
    v44 = v37;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v43);

    return swift_bridgeObjectRelease();
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_21EAAE030(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_21EAC01F8(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAAE10C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAAE158(void *a1)
{
  uint64_t v1;

  return sub_21EAADB6C(a1, *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_21EAAE19C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_21EA7D4A4(0, v2, 0);
    v3 = v18;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      if (v9)
      {
        swift_bridgeObjectRetain();
        v10 = sub_21EA5B7F8(v7, v8);
        v11 = v8;
        if ((v12 & 1) != 0)
        {
          v13 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v10);
          v7 = *v13;
          v11 = v13[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v8 = v11;
      }
      v15 = *(_QWORD *)(v18 + 16);
      v14 = *(_QWORD *)(v18 + 24);
      if (v15 >= v14 >> 1)
        sub_21EA7D4A4(v14 > 1, v15 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = v18 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v7;
      *(_QWORD *)(v16 + 40) = v8;
      --v2;
    }
    while (v2);
  }
  return v3;
}

id sub_21EAAE2CC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v17;
  void *v18;
  id v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v5 = qword_255469AA0;
    swift_bridgeObjectRetain();
    if (v5 != -1)
      swift_once();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21EB02C0C();
    if (qword_255469AA8 != -1)
      swift_once();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = objc_allocWithZone(MEMORY[0x24BDD1688]);
    v7 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithString_, v7);

    v9 = v2 - 1;
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = a1 + 56;
      do
      {
        swift_bridgeObjectRetain();
        sub_21EAAD444(a2);
        v12 = v11;
        objc_msgSend(v8, sel_appendAttributedString_, v11);

        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_21EB02C0C();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_21EB02C0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = objc_allocWithZone(MEMORY[0x24BDD1458]);
        v14 = (void *)sub_21EB02B58();
        swift_bridgeObjectRelease();
        v15 = objc_msgSend(v13, (SEL)&selRef_ghostRingView, v14);

        objc_msgSend(v8, sel_appendAttributedString_, v15);
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    return v8;
  }
  else
  {
    v17 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v18 = (void *)sub_21EB02B58();
    v19 = objc_msgSend(v17, sel_initWithString_, v18);

    return v19;
  }
}

uint64_t sub_21EAAE634()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAAE668()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

id UIViewController.associatedObjectStorage.getter()
{
  void *v0;

  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  return sub_21EAAE72C(v0, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
}

id sub_21EAAE714(void *a1, const void *a2)
{
  return sub_21EAAE72C(a1, a2, &qword_2540A6C40);
}

id sub_21EAAE720(void *a1, const void *a2)
{
  return sub_21EAAE72C(a1, a2, &qword_2540A6C48);
}

id sub_21EAAE72C(void *a1, const void *a2, uint64_t *a3)
{
  id v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  if (objc_getAssociatedObject(a1, a2))
  {
    sub_21EB031B8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_21EA5B638((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_21EA5B5B0((uint64_t)v10);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v6 = objc_msgSend(objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(a3)), sel_init);
    objc_setAssociatedObject(a1, a2, v6, (void *)1);
    return v6;
  }
  return (id)v8;
}

id UIView.doc_inWindowPerformingSnapshotting.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, sel_window);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_windowScene);

    if (v3)
    {
      v2 = objc_msgSend(v3, sel__isPerformingSystemSnapshot);

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t static UIView.doc_performAllowingAnimations(_:block:)(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  if ((a1 & 1) != 0)
    return a2();
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_21EA5EAA8;
  *(_QWORD *)(v8 + 24) = v7;
  v10[4] = sub_21EA5EAA8;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21EA5EADC;
  v10[3] = &block_descriptor_13;
  v9 = _Block_copy(v10);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

id UIViewController.doc_inWindowPerformingSnapshotting.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_viewIfLoaded);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_doc_inWindowPerformingSnapshotting);

  return v3;
}

void _sSo16UIViewControllerC26DocumentManagerExecutablesE024doc_removeFromParentViewB00G7SubviewyySo0A0CcSg_tF_0(void (*a1)(void))
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_parentViewController);

  if (v4)
  {
    objc_msgSend(v1, sel_willMoveToParentViewController_, 0);
    v5 = objc_msgSend(v1, sel_viewIfLoaded);
    v6 = objc_msgSend(v5, sel_superview);

    if (!v6)
    {
LABEL_12:
      objc_msgSend(v2, sel_removeFromParentViewController);
      return;
    }
    if (!a1)
    {
      v13 = objc_msgSend(v1, sel_view);
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, sel_removeFromSuperview);

        goto LABEL_12;
      }
      goto LABEL_18;
    }
    sub_21EB01F10();
    v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      v8 = v7;
      a1();

      sub_21EA5CA7C((uint64_t)a1);
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  v9 = objc_msgSend(v1, sel_viewIfLoaded);
  v10 = objc_msgSend(v9, sel_superview);

  if (v10)
  {
    if (!a1)
    {
      v15 = objc_msgSend(v1, sel_view);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, sel_removeFromSuperview);

        return;
      }
      goto LABEL_19;
    }
    sub_21EB01F10();
    v11 = objc_msgSend(v1, sel_view);
    if (v11)
    {
      v12 = v11;
      a1();

      sub_21EA5CA7C((uint64_t)a1);
      return;
    }
    goto LABEL_17;
  }
}

id UIViewController.doc_addChildViewController(_:addSubview:)(void *a1, void (*a2)(void))
{
  void *v2;
  void *v3;
  id result;
  void *v7;
  void *v8;
  void *v9;

  v3 = v2;
  objc_msgSend(v2, sel_addChildViewController_, a1);
  if (a2)
  {
    sub_21EB01F10();
    result = objc_msgSend(a1, sel_view);
    if (result)
    {
      v7 = result;
      a2();

      sub_21EA5CA7C((uint64_t)a2);
      return objc_msgSend(a1, sel_didMoveToParentViewController_, v3);
    }
    __break(1u);
    goto LABEL_9;
  }
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = result;
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(v8, sel_addSubview_, result);

    return objc_msgSend(a1, sel_didMoveToParentViewController_, v3);
  }
LABEL_10:
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIViewController.doc_addChildWithEqualAutoresizingFrame(_:)(UIViewController *a1)
{
  void *v1;
  UIView *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  UIView *v14;

  v3 = -[UIViewController view](a1, sel_view);
  if (v3)
  {
    v14 = v3;
    v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_bounds);
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v13 = v12;

      -[UIView setFrame:](v14, sel_setFrame_, v7, v9, v11, v13);
      -[UIView setAutoresizingMask:](v14, sel_setAutoresizingMask_, 18);
      objc_msgSend(v1, sel_doc_addChildViewController_addSubviewBlock_, a1, 0);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t UIViewController.doc_scheduleHandlerIfInLiveResize(_:)()
{
  void *v0;

  return 0;
}

uint64_t static UIViewController.__doc_perform(deferredTransitionsAndAnimationsDisabled:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v4 = objc_opt_self();
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_21EAAFE68;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_21EA5EA80;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_21EA5EADC;
  v9[3] = &block_descriptor_13_0;
  v7 = _Block_copy(v9);
  sub_21EB01F10();
  swift_release();
  objc_msgSend((id)v4, sel__performWithoutDeferringTransitions_, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v6 = objc_opt_self();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_21EAB01EC;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_21EA5EA80;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_21EA5EADC;
  v11[3] = &block_descriptor_24_2;
  v9 = _Block_copy(v11);
  sub_21EB01F10();
  swift_release();
  objc_msgSend((id)v6, sel__performWithoutDeferringTransitions_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_21EAAF4F4(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  if ((a1 & 1) != 0)
    return a2();
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_21EA5EA88;
  *(_QWORD *)(v8 + 24) = v7;
  v10[4] = sub_21EA5EA80;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21EA5EADC;
  v10[3] = &block_descriptor_76;
  v9 = _Block_copy(v10);
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_21EAAF638()
{
  void *v0;
  id v1;
  uint64_t v2;

  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v1 = sub_21EAAE72C(v0, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
  swift_getKeyPath();
  v2 = sub_21EA871D0();
  swift_release();

  return v2;
}

void sub_21EAAF6E4(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t (*v14)();
  uint64_t v15;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, a1, *MEMORY[0x24BEBEC08], 0);

  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v3 = sub_21EAAE72C(a1, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
  swift_getKeyPath();
  v4 = sub_21EA871D0();
  swift_release();

  if (v4)
    v5 = v4;
  else
    v5 = MEMORY[0x24BEE4AF8];
  v6 = sub_21EAAE72C(a1, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
  KeyPath = swift_getKeyPath();
  swift_beginAccess();
  sub_21EA59E44(KeyPath, &v11);
  sub_21EA5B5B0((uint64_t)&v11);
  swift_endAccess();

  swift_release();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = a1;
  v14 = sub_21EAAFF04;
  v15 = v8;
  *(_QWORD *)&v11 = MEMORY[0x24BDAC760];
  *((_QWORD *)&v11 + 1) = 1107296256;
  v12 = sub_21EA5EAB0;
  v13 = &block_descriptor_36_0;
  v9 = _Block_copy(&v11);
  v10 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
}

uint64_t sub_21EAAF8E4(uint64_t result, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v6 = *(_QWORD *)(v4 + 8 * i + 32);
      objc_msgSend(objc_retainAutorelease(a2), sel_performSelector_, v6);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21EAAFA1C(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;

  v3 = *a1;
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  v4 = sub_21EAAE72C(v3, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
  swift_getKeyPath();
  v5 = sub_21EA871D0();
  swift_release();

  *a2 = v5;
}

uint64_t sub_21EAAFAD0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t KeyPath;

  v2 = *a1;
  v3 = *a2;
  v4 = qword_2540A6E00;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  swift_beginAccess();
  v5 = sub_21EAAE72C(v3, (const void *)static UIViewController.associatedObjectStorageKey, &qword_2540A6C40);
  KeyPath = swift_getKeyPath();
  sub_21EAB0070(v2, KeyPath);

  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_21EAAFB94()
{
  uint64_t v0;
  void *result;

  v0 = sub_21EB023A8();
  MEMORY[0x24BDAC7A8](v0);
  result = sub_21EA8D734(0x656761726F7473, 0xE700000000000000);
  static UIViewController.associatedObjectStorageKey = (uint64_t)result;
  return result;
}

uint64_t *UIViewController.associatedObjectStorageKey.unsafeMutableAddressor()
{
  if (qword_2540A6E00 != -1)
    swift_once();
  return &static UIViewController.associatedObjectStorageKey;
}

uint64_t sub_21EAAFCE0()
{
  return swift_deallocObject();
}

uint64_t sub_21EAAFCF0()
{
  return swift_deallocObject();
}

uint64_t static UIViewController.associatedObjectStorageKey.getter()
{
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  return static UIViewController.associatedObjectStorageKey;
}

uint64_t static UIViewController.associatedObjectStorageKey.setter(uint64_t a1)
{
  uint64_t result;

  if (qword_2540A6E00 != -1)
    swift_once();
  result = swift_beginAccess();
  static UIViewController.associatedObjectStorageKey = a1;
  return result;
}

uint64_t (*static UIViewController.associatedObjectStorageKey.modify())()
{
  if (qword_2540A6E00 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationStyle withPreferredStyle)
{
  void *v1;

  objc_msgSend(v1, sel_setModalPresentationStyle_, withPreferredStyle);
}

uint64_t sub_21EAAFE58()
{
  return swift_deallocObject();
}

uint64_t sub_21EAAFE68()
{
  uint64_t v0;

  return sub_21EAAF4F4(*(_BYTE *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_21EAAFE74()
{
  return swift_deallocObject();
}

uint64_t sub_21EAAFE84()
{
  return swift_deallocObject();
}

uint64_t sub_21EAAFE94()
{
  return swift_deallocObject();
}

uint64_t sub_21EAAFEA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAAFEC8()
{
  uint64_t v0;

  sub_21EAAF6E4(*(void **)(v0 + 16));
}

uint64_t sub_21EAAFED8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_21EAAFF04()
{
  uint64_t v0;

  return sub_21EAAF8E4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_21EAAFF0C(char a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  _QWORD aBlock[6];

  v7[2] = a2;
  if ((a1 & 1) != 0)
    return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
  v3 = objc_opt_self();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_21EAA9EFC;
  *(_QWORD *)(v4 + 24) = v7;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_21EA5EA80;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_21EA5EA80;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EADC;
  aBlock[3] = &block_descriptor_66;
  v6 = _Block_copy(aBlock);
  sub_21EB01F10();
  swift_release();
  objc_msgSend((id)v3, sel_performWithoutAnimation_, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_21EAB0070(uint64_t a1, uint64_t a2)
{
  __int128 v5;
  uint64_t v6;

  if (a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A510);
    *(_QWORD *)&v5 = a1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21EB01F10();
    sub_21EA5946C((uint64_t)&v5, a2);
  }
  else
  {
    swift_beginAccess();
    sub_21EA59E44(a2, &v5);
    sub_21EA5B5B0((uint64_t)&v5);
  }
  return swift_endAccess();
}

uint64_t sub_21EAB0134()
{
  return swift_deallocObject();
}

uint64_t sub_21EAB0144()
{
  return swift_deallocObject();
}

uint64_t sub_21EAB0154()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_21EAB0178()
{
  return swift_deallocObject();
}

uint64_t sub_21EAB0188()
{
  return swift_deallocObject();
}

uint64_t sub_21EAB0198()
{
  return swift_deallocObject();
}

uint64_t sub_21EAB01A8()
{
  return swift_deallocObject();
}

id DOCButtonGestureRecognizer.touchesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  void **v4;
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v4 = (void **)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches];
  swift_beginAccess();
  v5 = *v4;
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  sub_21EAB0340(v6, v5);
  *v4 = v7;
  swift_bridgeObjectRelease();
  sub_21EAB05BC();
  sub_21EAB05F8();
  v8 = (void *)sub_21EB02E10();
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v16, sel_touchesBegan_withEvent_, v8, a2);

  objc_msgSend(v2, sel_locationInView_, 0);
  v9 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(_QWORD *)v9 = v10;
  *((_QWORD *)v9 + 1) = v11;
  v9[16] = 0;
  v12 = (unint64_t)*v4;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = sub_21EB0323C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)(v12 + 16);
  }
  if (v13 <= 1)
    v14 = 1;
  else
    v14 = 4;
  return objc_msgSend(v2, sel_setState_, v14);
}

void sub_21EAB0340(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_21EB0320C();
    sub_21EAB05BC();
    sub_21EAB05F8();
    sub_21EB02E34();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9)
        goto LABEL_32;
      v15 = v17[(_QWORD)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9)
          goto LABEL_32;
        v15 = v17[(_QWORD)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9)
            goto LABEL_32;
          v15 = v17[(_QWORD)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9)
              goto LABEL_32;
            v15 = v17[(_QWORD)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(_QWORD)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_21EAA2258();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((_QWORD)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_21EACCE70(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_21EB0326C())
      {
        sub_21EAB05BC();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_21EAB05BC()
{
  unint64_t result;

  result = qword_25546A780;
  if (!qword_25546A780)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546A780);
  }
  return result;
}

unint64_t sub_21EAB05F8()
{
  unint64_t result;
  unint64_t v1;

  result = qword_25546B060;
  if (!qword_25546B060)
  {
    v1 = sub_21EAB05BC();
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25546B060);
  }
  return result;
}

id DOCButtonGestureRecognizer.touchesMoved(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  _BOOL4 v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  objc_super v26;
  CGPoint v27;
  CGRect v28;

  sub_21EAB05BC();
  sub_21EAB05F8();
  v4 = (void *)sub_21EB02E10();
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v26, sel_touchesMoved_withEvent_, v4, a2);

  v5 = objc_msgSend(v2, sel_view);
  if (!v5)
    goto LABEL_7;
  v6 = v5;
  objc_msgSend(v5, sel_bounds);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  objc_msgSend(v2, sel_locationInView_, v6);
  v27.x = v15;
  v27.y = v16;
  v28.origin.x = v8;
  v28.origin.y = v10;
  v28.size.width = v12;
  v28.size.height = v14;
  v17 = CGRectContainsPoint(v28, v27);

  if (!v17)
    goto LABEL_7;
  v18 = (double *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  if ((v2[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow + 16] & 1) != 0)
    goto LABEL_7;
  v19 = *v18;
  objc_msgSend(v2, sel_locationInView_, 0);
  v21 = vabdd_f64(v20, v19);
  objc_msgSend(v2, sel_locationInView_, 0);
  if (v21 <= 15.0
    && ((_BYTE)v18[2] & 1) == 0
    && (v22 = v18[1],
        objc_msgSend(v2, sel_locationInView_, 0),
        objc_msgSend(v2, sel_locationInView_, 0),
        vabdd_f64(v23, v22) <= 15.0))
  {
    v24 = 2;
  }
  else
  {
LABEL_7:
    v24 = 4;
  }
  return objc_msgSend(v2, sel_setState_, v24);
}

id DOCButtonGestureRecognizer.touchesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  BOOL v19;
  uint64_t v20;
  objc_super v22;
  CGPoint v23;
  CGRect v24;

  v3 = v2;
  swift_beginAccess();
  sub_21EAB0F4C(a1);
  swift_endAccess();
  sub_21EAB05BC();
  sub_21EAB05F8();
  v6 = (void *)sub_21EB02E10();
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v22, sel_touchesEnded_withEvent_, v6, a2);

  v7 = objc_msgSend(v3, sel_view);
  if (!v7)
    goto LABEL_4;
  v8 = v7;
  objc_msgSend(v7, sel_bounds);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  objc_msgSend(v3, sel_locationInView_, v8);
  v23.x = v17;
  v23.y = v18;
  v24.origin.x = v10;
  v24.origin.y = v12;
  v24.size.width = v14;
  v24.size.height = v16;
  v19 = CGRectContainsPoint(v24, v23);

  if (v19)
    v20 = 3;
  else
LABEL_4:
    v20 = 4;
  return objc_msgSend(v3, sel_setState_, v20);
}

uint64_t sub_21EAB0954(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_21EAB05BC();
  sub_21EAB05F8();
  v8 = sub_21EB02E1C();
  v9 = a4;
  v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease();
}

id DOCButtonGestureRecognizer.touchesCancelled(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  objc_super v8;

  v3 = v2;
  swift_beginAccess();
  sub_21EAB0F4C(a1);
  swift_endAccess();
  sub_21EAB05BC();
  sub_21EAB05F8();
  v6 = (void *)sub_21EB02E10();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v8, sel_touchesCancelled_withEvent_, v6, a2);

  return objc_msgSend(v3, sel_setState_, 4);
}

Swift::Void __swiftcall DOCButtonGestureRecognizer.reset()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_super v5;

  v1 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_startLocationInWindow];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21EB0341C())
  {
    sub_21EA8EC60(MEMORY[0x24BEE4AF8]);
    v2 = v4;
  }
  else
  {
    v2 = MEMORY[0x24BEE4B08];
  }
  v3 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables26DOCButtonGestureRecognizer_activeTouches];
  swift_beginAccess();
  *(_QWORD *)v3 = v2;
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  objc_msgSendSuper2(&v5, sel_reset);
}

id DOCButtonGestureRecognizer.__allocating_init(target:action:)(_QWORD *a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v4 = a1[3];
  if (v4)
  {
    v6 = __swift_project_boxed_opaque_existential_0(a1, a1[3]);
    v7 = *(_QWORD *)(v4 - 8);
    MEMORY[0x24BDAC7A8](v6);
    v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    v10 = sub_21EB034B8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

id DOCButtonGestureRecognizer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCButtonGestureRecognizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21EAB0DB8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_21EADEDC8(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_21EAB0F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_21EB0323C())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_21EB0320C();
      sub_21EAB05BC();
      sub_21EAB05F8();
      sub_21EB02E34();
      a1 = v20;
      v18 = v21;
      v3 = v22;
      v4 = v23;
      v5 = v24;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v5)
      {
        v10 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v4 << 6);
        v12 = v4;
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9)
          goto LABEL_36;
        v15 = *(_QWORD *)(v18 + 8 * v14);
        v12 = v4 + 1;
        if (!v15)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v9)
            goto LABEL_36;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v9)
              goto LABEL_36;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v9)
                goto LABEL_36;
              v15 = *(_QWORD *)(v18 + 8 * v12);
              if (!v15)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v9)
                  goto LABEL_36;
                v15 = *(_QWORD *)(v18 + 8 * v12);
                if (!v15)
                {
                  v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    v15 = *(_QWORD *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_21EAA2258();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_36;
      while (1)
      {
        v17 = (void *)sub_21EADEF54(v13);

        v4 = v12;
        v5 = v10;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_21EB0326C())
        {
          sub_21EAB05BC();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v13 = v19;
          swift_unknownObjectRelease();
          v12 = v4;
          v10 = v5;
          if (v19)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
}

unint64_t sub_21EAB120C()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A388);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
  *(_QWORD *)(inited + 32) = 0x6E696769726FLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = sub_21EB02E40();
  return sub_21EA5E924(inited);
}

void __swiftcall DOCAnalyticsConnectToServerShownEvent.init(bundleID:origin:)(DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent *__return_ptr retstr, Swift::String_optional bundleID, DocumentManagerExecutables::DOCAnalyticsConnectToServerShownEvent::Origin origin)
{
  retstr->name._countAndFlagsBits = 0xD000000000000038;
  retstr->name._object = (void *)0x800000021EB0E9C0;
  retstr->bundleID = bundleID;
  retstr->origin = origin;
}

unint64_t (*sub_21EAB12A4())()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v5;
  char v6;
  __int128 v7;
  _BYTE v8[16];

  v5 = v0[1];
  v6 = *((_BYTE *)v0 + 32);
  v1 = swift_allocObject();
  v2 = *v0;
  v3 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 48) = *((_BYTE *)v0 + 32);
  v7 = v2;
  sub_21EA947C0((uint64_t)&v5, (uint64_t)v8);
  sub_21EA94808((uint64_t)&v7);
  sub_21EA94808((uint64_t)v8);
  return sub_21EAB1494;
}

uint64_t DOCAnalyticsConnectToServerShownEvent.Origin.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_21EAB1348()
{
  unint64_t result;

  result = qword_25546B078;
  if (!qword_25546B078)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsConnectToServerShownEvent.Origin, &type metadata for DOCAnalyticsConnectToServerShownEvent.Origin);
    atomic_store(result, (unint64_t *)&qword_25546B078);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsConnectToServerShownEvent()
{
  return &type metadata for DOCAnalyticsConnectToServerShownEvent;
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsConnectToServerShownEvent.Origin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EAB13E8 + 4 * byte_21EB0A4B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EAB141C + 4 * asc_21EB0A4B0[v4]))();
}

uint64_t sub_21EAB141C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAB1424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAB142CLL);
  return result;
}

uint64_t sub_21EAB1438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAB1440);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EAB1444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAB144C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin()
{
  return &type metadata for DOCAnalyticsConnectToServerShownEvent.Origin;
}

uint64_t sub_21EAB1468()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21EAB1494()
{
  return sub_21EAB120C();
}

Swift::String *DOCUSBFormattingErrorDomain.unsafeMutableAddressor()
{
  return &DOCUSBFormattingErrorDomain;
}

BOOL DOCUSBFormattingErrorCode.init(rawValue:)(uint64_t a1)
{
  return a1 != 1;
}

uint64_t DOCUSBFormattingErrorCode.rawValue.getter()
{
  return 1;
}

uint64_t sub_21EAB14BC()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EAB14FC()
{
  return sub_21EB035B4();
}

uint64_t sub_21EAB1520()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

_QWORD *sub_21EAB155C@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_21EAB1570(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21EAB157C(void **a1, uint64_t a2, unint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  char **p_name;
  char **v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;

  v5 = *a1;
  if (qword_255469B78 != -1)
    swift_once();
  v6 = sub_21EB0263C();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.UI);
  swift_bridgeObjectRetain_n();
  v7 = v5;
  v8 = sub_21EB02624();
  v9 = sub_21EB02EDC();
  p_name = &OBJC_PROTOCOL___DOCViewAndControllerCommonExtensions.name;
  v11 = &selRef_strokeEnd;
  if (os_log_type_enabled(v8, v9))
  {
    v12 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v12 = 136315650;
    sub_21EA591E4(0x6F6974617265706FLL, 0xEF293A726F66286ELL, &v28);
    sub_21EB03134();
    type = v9;
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_21EA591E4(a2, a3, &v28);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    v13 = objc_msgSend(*(id *)((char *)v7 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source), sel_identifier);
    v14 = sub_21EB02B88();
    v15 = a2;
    v17 = v16;

    v18 = v14;
    v11 = &selRef_strokeEnd;
    sub_21EA591E4(v18, v17, &v28);
    sub_21EB03134();

    a2 = v15;
    p_name = (char **)(&OBJC_PROTOCOL___DOCViewAndControllerCommonExtensions + 8);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v8, type, "%s identifer=%s source identifier=%s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v27, -1, -1);
    MEMORY[0x2207B6A18](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v19 = objc_msgSend(*(id *)&p_name[16][(_QWORD)v7], v11[294]);
  v20 = sub_21EB02B88();
  v22 = v21;

  if (v20 == a2 && v22 == a3)
    v24 = 1;
  else
    v24 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t sub_21EAB1890(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v3 = sub_21EB02A20();
  v15[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB02A5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = a1;
  MEMORY[0x2207B5500]();
  if (*(_QWORD *)((*(_QWORD *)(v1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_21EB02D20();
  sub_21EB02D5C();
  sub_21EB02D08();
  swift_endAccess();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  aBlock[4] = sub_21EAB9988;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_36_1;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  sub_21EB02A44();
  v15[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v15[0] + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_21EAB1ADC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_21EAB1B08()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id result;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_volumeName);
  if (v1)
  {
    v2 = v1;
    v3 = sub_21EB02B88();
LABEL_5:
    v5 = v3;

    return (id)v5;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v2 = result;
    v3 = sub_21EB02168();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_21EAB1BE0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  char v12;
  id v13;
  id result;
  void *v15;
  void *v16;

  v1 = objc_msgSend(v0, sel_filesystemType);
  if (!v1)
  {
    sub_21EB02B88();
    goto LABEL_15;
  }
  v2 = v1;
  v3 = sub_21EB02B88();
  v5 = v4;

  v6 = sub_21EB02B88();
  if (!v5)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_21EB02B88();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6 == v3 && v5 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v9 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    result = objc_msgSend(v0, sel_filesystem);
    if (result)
      goto LABEL_22;
    __break(1u);
    goto LABEL_25;
  }
  if (sub_21EB02B88() == v3 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v12 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return 0;
LABEL_21:
  result = objc_msgSend(v0, sel_filesystem);
  if (result)
  {
LABEL_22:
    v15 = result;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithName_filesystem_, v16, v15);

    return v13;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t DOCUSBEraseOperation.State.init(rawValue:)(unint64_t a1)
{
  return sub_21EAB7FE0(a1);
}

uint64_t sub_21EAB1E3C()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EAB1E80()
{
  return sub_21EB035B4();
}

uint64_t sub_21EAB1EA8()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

unint64_t sub_21EAB1EE8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21EAB7FE0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id DOCUSBEraseOperation.source.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
}

uint64_t DOCUSBEraseOperation.operationState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_operationState;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t DOCUSBEraseOperation.operationState.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_operationState);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t DOCUSBEraseOperation.isFinished.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCUSBEraseOperation.isFinished.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DOCUSBEraseOperation.isFinished.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DOCUSBEraseOperation.description.getter()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  v1 = v0;
  sub_21EB032E4();
  sub_21EB02C0C();
  v2 = *(id *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  v3 = objc_msgSend(v2, sel_description);
  sub_21EB02B88();

  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
  sub_21EB02BA0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  swift_beginAccess();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  objc_msgSend(v1, sel_operationState);
  sub_21EB033B0();
  return 0;
}

uint64_t DOCUSBEraseOperation.identifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source), sel_identifier);
  v2 = sub_21EB02B88();

  return v2;
}

id static DOCUSBEraseOperation.disk(forDomain:)()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    v1 = result;
    v2 = sub_21EAB7804();

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static DOCUSBEraseOperation.disk(forSource:)(void *a1)
{
  id v1;
  void *v2;
  id result;
  void *v4;
  id v5;

  v1 = objc_msgSend(a1, sel_identifier);
  sub_21EB02B88();

  v2 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    v4 = result;
    v5 = sub_21EAB7804();

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_21EAB24C4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t inited;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  char *v32;
  id v33;
  void (*v34)(_QWORD, id);
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  unsigned int v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  id v70;
  void *v71;
  char *v72;
  id v73;
  void (*v74)(_QWORD, void *);
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  id aBlock;
  unint64_t v80;
  void (*v81)(uint64_t, void *, void *);
  void *v82;
  void (*v83)(void *, void *);
  uint64_t v84;
  uint64_t v85[11];

  v85[9] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  v2 = objc_msgSend(v1, sel_identifier);
  sub_21EB02B88();

  v3 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  v5 = v0;
  v6 = objc_msgSend(v1, sel_identifier);
  sub_21EB02B88();

  v7 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (!v8)
    __break(1u);
  v9 = v8;
  v10 = sub_21EAB7804();

  if (v10)
  {
    v78 = v4;
    if (qword_255469BA8 != -1)
      swift_once();
    v11 = sub_21EB0263C();
    __swift_project_value_buffer(v11, (uint64_t)static Logger.Rename);
    v12 = v10;
    v13 = sub_21EB02624();
    v14 = sub_21EB02EDC();
    v77 = v5;
    if (os_log_type_enabled(v13, v14))
    {
      v76 = v3;
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v85[0] = v75;
      *(_DWORD *)v15 = 138412802;
      v17 = v12;
      sub_21EB03134();
      *v16 = v10;

      *(_WORD *)(v15 + 12) = 2080;
      v18 = objc_msgSend(v17, sel_filesystem);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546B0F8);
      v19 = sub_21EB02BA0();
      aBlock = (id)sub_21EA591E4(v19, v20, v85);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      v21 = objc_msgSend(v17, sel_filesystemType);
      if (v21)
      {
        v22 = v21;
        sub_21EB02B88();
        v24 = v23;

      }
      else
      {
        v24 = 0;
      }
      v80 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
      v35 = sub_21EB02BA0();
      aBlock = (id)sub_21EA591E4(v35, v36, v85);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v13, v14, "[Erase] disk: %@ filesystem: %s filesystemType: %s", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v75, -1, -1);
      MEMORY[0x2207B6A18](v15, -1, -1);

      v3 = v76;
    }
    else
    {

    }
    v37 = (id)_DocumentManagerBundle();
    v38 = v78;
    if (v37)
    {
      v39 = v37;
      sub_21EB02168();

      v40 = *(void **)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem];
      if (v40)
      {
        v41 = v40;
        v42 = objc_msgSend(v41, sel_isEncrypted, 0x800000021EB11A80);
        v43 = *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName + 8];
        if (v42)
        {
          if (v43)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          v44 = (void *)sub_21EB02B58();
          swift_bridgeObjectRelease();
          v45 = (void *)sub_21EB02B58();
          swift_bridgeObjectRelease();
          v46 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithName_password_filesystem_, v44, v45, v41);

          v38 = v78;
        }
        else
        {
          if (v43)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          v45 = (void *)sub_21EB02B58();
          swift_bridgeObjectRelease();
          v46 = objc_msgSend((id)objc_opt_self(), sel_descriptorWithName_filesystem_, v45, v41);
        }

      }
      else
      {
        swift_bridgeObjectRelease();
        sub_21EAB1B08();
        v46 = sub_21EAB1BE0();
        swift_bridgeObjectRelease();
        if (!v46)
        {

          swift_release();
          return;
        }
      }
      v47 = v46;
      v48 = (void *)objc_opt_self();
      aBlock = 0;
      v49 = v12;
      v50 = v47;
      v51 = objc_msgSend(v48, sel_eraseVolumeWithChildDisk_descriptor_error_, v49, v50, &aBlock);
      if (v51)
      {
        v52 = v51;
        v53 = aBlock;

        v54 = objc_msgSend((id)objc_opt_self(), sel_forceUnmount);
        v55 = objc_msgSend(v54, sel_isEnabled);

        v56 = sub_21EB02624();
        v57 = sub_21EB02EDC();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = swift_slowAlloc();
          *(_DWORD *)v58 = 67109376;
          LODWORD(aBlock) = (_DWORD)v55;
          sub_21EB03134();
          *(_WORD *)(v58 + 8) = 1024;
          LODWORD(aBlock) = (_DWORD)v55;
          sub_21EB03134();
          _os_log_impl(&dword_21EA4C000, v56, v57, "[Erase] Force unmount is enabled=%{BOOL}d, setting SKEraseVolume.forceUnmount to %{BOOL}d", (uint8_t *)v58, 0xEu);
          MEMORY[0x2207B6A18](v58, -1, -1);
        }

        objc_msgSend(v52, sel_setForceUnmount_, v55);
        v83 = sub_21EAB9910;
        v84 = v38;
        aBlock = (id)MEMORY[0x24BDAC760];
        v80 = 1107296256;
        v81 = sub_21EA81E00;
        v82 = &block_descriptor_14;
        v59 = _Block_copy(&aBlock);
        sub_21EB01F10();
        swift_release();
        v60 = objc_msgSend(v52, sel_eraseProgressReportingWithCompletionBlock_, v59);

        swift_release();
        _Block_release(v59);

      }
      else
      {
        v61 = v3;
        v62 = aBlock;
        v63 = (void *)sub_21EB02234();

        swift_willThrow();
        v64 = v63;
        v65 = v63;
        v66 = sub_21EB02624();
        v67 = sub_21EB02EE8();
        if (os_log_type_enabled(v66, v67))
        {
          v68 = (uint8_t *)swift_slowAlloc();
          v69 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v68 = 138412290;
          v70 = v63;
          v71 = (void *)_swift_stdlib_bridgeErrorToNSError();
          aBlock = v71;
          sub_21EB03134();
          *v69 = v71;

          _os_log_impl(&dword_21EA4C000, v66, v67, "[Erase] failed error: %@", v68, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
          swift_arrayDestroy();
          MEMORY[0x2207B6A18](v69, -1, -1);
          MEMORY[0x2207B6A18](v68, -1, -1);
        }
        else
        {

        }
        v72 = &v77[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
        swift_beginAccess();
        *v72 = 1;
        v73 = v63;
        objc_msgSend(v77, sel_setOperationState_, 2);
        v74 = *(void (**)(_QWORD, void *))&v77[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
        if (v74)
        {
          sub_21EB01F10();
          v74(0, v63);
          sub_21EA5CA7C((uint64_t)v74);
        }

        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546AFF0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
    *(_QWORD *)(inited + 32) = sub_21EB02B88();
    *(_QWORD *)(inited + 40) = v26;
    aBlock = 0;
    v80 = 0xE000000000000000;
    sub_21EB032E4();
    sub_21EB02C0C();
    v85[0] = (uint64_t)v3;
    type metadata accessor for FPProviderDomainID(0);
    sub_21EB033B0();
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0xE000000000000000;
    v27 = sub_21EA98428(inited);
    sub_21EAF1234(v27);
    swift_bridgeObjectRelease();
    v28 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v29 = (void *)sub_21EB02B58();
    v30 = (void *)sub_21EB02AC8();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v28, sel_initWithDomain_code_userInfo_, v29, 1, v30);

    v32 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *v32 = 1;
    v33 = v31;
    objc_msgSend(v5, sel_setOperationState_, 2);
    v34 = *(void (**)(_QWORD, id))&v5[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v34)
    {
      sub_21EB01F10();
      v34(0, v33);
      sub_21EA5CA7C((uint64_t)v34);
    }

    swift_release();
  }
}

void sub_21EAB30F4(void *a1, void *a2, char *a3)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  id v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(_QWORD, void *);
  uint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t v57;
  id v58;
  os_log_type_t v59;
  uint64_t aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;

  if (a1)
  {
    v58 = a1;
    objc_msgSend(a3, sel_setOperationState_, 1);
    v4 = *(void **)&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem];
    if (!v4)
    {
LABEL_20:

      return;
    }
    v5 = v4;
    if ((objc_msgSend(v5, sel_isEncrypted) & 1) != 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
      if (v6)
      {
        v7 = v6;
        v8 = swift_allocObject();
        *(_QWORD *)(v8 + 16) = a3;
        v64 = sub_21EAB994C;
        v65 = v8;
        aBlock = MEMORY[0x24BDAC760];
        v61 = 1107296256;
        v62 = sub_21EAB434C;
        v63 = &block_descriptor_24_3;
        v9 = _Block_copy(&aBlock);
        v10 = a3;
        swift_release();
        objc_msgSend(v7, sel_providerDomainsCompletionHandler_, v9);

        _Block_release(v9);
        return;
      }

      goto LABEL_20;
    }
    if (qword_255469BA8 != -1)
      swift_once();
    v22 = sub_21EB0263C();
    __swift_project_value_buffer(v22, (uint64_t)static Logger.Rename);
    v23 = v58;
    v24 = a3;
    v25 = v23;
    v26 = v24;
    v27 = sub_21EB02624();
    v28 = sub_21EB02EDC();
    if (os_log_type_enabled(v27, v28))
    {
      v59 = v28;
      v29 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v66 = v57;
      *(_DWORD *)v29 = 136315906;
      v30 = v25;
      v31 = objc_msgSend(v30, sel_description);
      v32 = sub_21EB02B88();
      v34 = v33;

      aBlock = sub_21EA591E4(v32, v34, &v66);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v35 = objc_msgSend(v30, sel_mountPoint);
      if (v35)
      {
        v36 = v35;
        sub_21EB02B88();
        v38 = v37;

      }
      else
      {
        v38 = 0;
      }
      v61 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
      v41 = sub_21EB02BA0();
      aBlock = sub_21EA591E4(v41, v42, &v66);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2080;
      v43 = objc_msgSend(v30, sel_volumeUUID);
      if (v43)
      {
        v44 = v43;
        sub_21EB02B88();
        v46 = v45;

      }
      else
      {
        v46 = 0;
      }
      v61 = v46;
      v47 = sub_21EB02BA0();
      aBlock = sub_21EA591E4(v47, v48, &v66);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 32) = 2080;
      v49 = objc_msgSend(*(id *)&v26[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      v50 = sub_21EB02B88();
      v52 = v51;

      aBlock = sub_21EA591E4(v50, v52, &v66);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v27, v59, "[Erase] success! New disk %s mountpoint=%s volumeUUID=%s  old source identifier=%s", (uint8_t *)v29, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v57, -1, -1);
      MEMORY[0x2207B6A18](v29, -1, -1);

    }
    else
    {

    }
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v26;
    *(_QWORD *)(v53 + 24) = v25;
    v64 = sub_21EAB9944;
    v65 = v53;
    aBlock = MEMORY[0x24BDAC760];
    v61 = 1107296256;
    v62 = sub_21EA8423C;
    v63 = &block_descriptor_18_0;
    v54 = _Block_copy(&aBlock);
    v55 = v25;
    v56 = v26;
    swift_release();
    objc_msgSend(v55, sel_mountWithCompletionBlock_, v54);
    _Block_release(v54);

  }
  else
  {
    if (qword_255469BA8 != -1)
      swift_once();
    v12 = sub_21EB0263C();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.Rename);
    v13 = a2;
    v14 = a2;
    v15 = sub_21EB02624();
    v16 = sub_21EB02EE8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      aBlock = v18;
      *(_DWORD *)v17 = 136315138;
      v66 = (uint64_t)a2;
      v19 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A330);
      v20 = sub_21EB02BA0();
      v66 = sub_21EA591E4(v20, v21, &aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v15, v16, "[Erase] failed with error: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v18, -1, -1);
      MEMORY[0x2207B6A18](v17, -1, -1);
    }
    else
    {

    }
    v39 = &a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *v39 = 1;
    objc_msgSend(a3, sel_setOperationState_, 2);
    v40 = *(void (**)(_QWORD, void *))&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v40)
    {
      sub_21EB01F10();
      v40(0, a2);
      sub_21EA5CA7C((uint64_t)v40);
    }
  }
}

void sub_21EAB3888(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint8_t *buf;
  uint64_t v36;
  os_log_type_t typea;
  NSObject *type;
  uint64_t aBlock[7];

  if (!a2)
    return;
  v5 = sub_21EAB3C8C(a2);
  if (!v5)
    return;
  v6 = v5;
  v7 = a3;
  v8 = sub_21EAB83BC(v6, v7);
  swift_bridgeObjectRelease();

  v9 = sub_21EA7D040(v8);
  if (v9)
  {
    v11 = v9;
    v12 = v10;
    v13 = *(_QWORD *)(v8 + 16);
    swift_release();
    if (v13 == 1)
    {
      v14 = qword_255469BA8;
      v15 = v12;
      if (v14 != -1)
        swift_once();
      v16 = sub_21EB0263C();
      __swift_project_value_buffer(v16, (uint64_t)static Logger.Rename);
      v17 = v15;
      v18 = sub_21EB02624();
      v19 = sub_21EB02EDC();
      if (os_log_type_enabled(v18, v19))
      {
        typea = v19;
        v20 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        aBlock[0] = v36;
        *(_DWORD *)v20 = 136315138;
        buf = v20;
        v21 = v17;
        v22 = objc_msgSend(v21, sel_description);
        v23 = sub_21EB02B88();
        v25 = v24;

        sub_21EA591E4(v23, v25, aBlock);
        sub_21EB03134();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21EA4C000, v18, typea, "new encrypted volume %s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v36, -1, -1);
        MEMORY[0x2207B6A18](buf, -1, -1);

      }
      else
      {

      }
      v29 = (void *)objc_opt_self();
      v30 = (void *)sub_21EB02B58();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = a1;
      *(_QWORD *)(v31 + 24) = v7;
      aBlock[4] = (uint64_t)sub_21EAB9980;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21EA8423C;
      aBlock[3] = (uint64_t)&block_descriptor_30_4;
      v32 = _Block_copy(aBlock);
      v33 = v7;
      v34 = a1;
      swift_release();
      objc_msgSend(v29, sel_unlockDomain_withPassword_saveToKeychain_completionHandler_, v17, v30, 0, v32);
      _Block_release(v32);

      return;
    }

  }
  else
  {
    swift_release();
  }
  if (qword_255469BA8 != -1)
    swift_once();
  v26 = sub_21EB0263C();
  __swift_project_value_buffer(v26, (uint64_t)static Logger.Rename);
  type = sub_21EB02624();
  v27 = sub_21EB02EE8();
  if (os_log_type_enabled(type, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_21EA4C000, type, v27, "[Erase] encrypted volume: unlock failed, unable to find an FPDomain matching our new volume)", v28, 2u);
    MEMORY[0x2207B6A18](v28, -1, -1);
  }

}

uint64_t sub_21EAB3C8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *v27;
  int64_t v28;
  uint64_t v29;
  _BYTE v30[72];
  void *v31;
  _OWORD v32[2];
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  uint64_t v37;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546B100);
    v2 = sub_21EB0344C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = sub_21EB01F10();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = (v5 - 1) & v5;
      v12 = __clz(__rbit64(v5)) | (v8 << 6);
      v13 = v8;
      goto LABEL_28;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v28)
      goto LABEL_42;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v13 = v8 + 1;
    if (!v15)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_42;
      v15 = *(_QWORD *)(v29 + 8 * v13);
      if (!v15)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_42;
        v15 = *(_QWORD *)(v29 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_42;
          v15 = *(_QWORD *)(v29 + 8 * v13);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v11 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_28:
    sub_21EA83774(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v35);
    sub_21EA5A05C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v36 + 8);
    v33[0] = v36[0];
    v33[1] = v36[1];
    v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_21EA83774((uint64_t)v32, (uint64_t)v30);
    type metadata accessor for FPProviderDomainID(0);
    if (!swift_dynamicCast())
    {
      v31 = 0;
      sub_21EA59E08((uint64_t)v32, &qword_25546B108);
      goto LABEL_41;
    }
    v17 = v31;
    sub_21EA5A05C((uint64_t)v33 + 8, (uint64_t)v30);
    sub_21EA59E08((uint64_t)v32, &qword_25546B108);
    sub_21EA579D4(0, &qword_25546A2B8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v31 = 0;

LABEL_41:
      v27 = v31;
      swift_release();

      sub_21EAA2258();
      swift_release();
      return 0;
    }
    v18 = v31;
    sub_21EB02B88();
    sub_21EB035A8();
    sub_21EB02BDC();
    v19 = sub_21EB035E4();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = 8 * v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + v10) = v17;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + v10) = v18;
    ++*(_QWORD *)(v2 + 16);
    v8 = v13;
    v5 = v11;
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_42:
    swift_release();
    sub_21EAA2258();
    return v2;
  }
  v15 = *(_QWORD *)(v29 + 8 * v16);
  if (v15)
  {
    v13 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v28)
      goto LABEL_42;
    v15 = *(_QWORD *)(v29 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_27;
  }
LABEL_45:
  __break(1u);
  return result;
}

id sub_21EAB40E0(int a1, id a2, char *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  id result;
  void (*v19)(uint64_t, id);
  uint64_t v20[3];

  if (a2)
  {
    v5 = a2;
    if (qword_255469BA8 != -1)
      swift_once();
    v6 = sub_21EB0263C();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.Rename);
    v7 = a2;
    v8 = a2;
    v9 = sub_21EB02624();
    v10 = sub_21EB02EE8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8F8);
      v14 = sub_21EB02BA0();
      sub_21EA591E4(v14, v15, v20);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v9, v10, "[Erase] encrypted volume: unlock failed with error: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v12, -1, -1);
      MEMORY[0x2207B6A18](v11, -1, -1);

    }
    else
    {

    }
  }
  v16 = *(_QWORD *)&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
  v17 = &a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
  swift_beginAccess();
  *v17 = 1;
  result = objc_msgSend(a3, sel_setOperationState_, 2);
  v19 = *(void (**)(uint64_t, id))&a3[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  if (v19)
  {
    sub_21EB01F10();
    v19(v16, a2);
    return (id)sub_21EA5CA7C((uint64_t)v19);
  }
  return result;
}

uint64_t sub_21EAB434C(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v4)(void *, uint64_t);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(void *, uint64_t))(a1 + 32);
  if (a3)
    v5 = sub_21EB02AD4();
  else
    v5 = 0;
  sub_21EB01F10();
  v6 = a2;
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_21EAB43E0(void *a1, char *a2, void *a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  void (*v31)(uint64_t, void *);
  uint64_t v32;
  char *v33;
  void (*v34)(uint64_t, _QWORD);
  uint64_t v35[3];

  sleep(1u);
  if (a1)
  {
    v6 = a1;
    if (qword_255469BA8 != -1)
      swift_once();
    v7 = sub_21EB0263C();
    __swift_project_value_buffer(v7, (uint64_t)static Logger.Rename);
    v8 = a1;
    v9 = a1;
    v10 = sub_21EB02624();
    v11 = sub_21EB02EE8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v35[0] = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8F8);
      v15 = sub_21EB02BA0();
      sub_21EA591E4(v15, v16, v35);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v10, v11, "[Erase] mount failed with error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v13, -1, -1);
      MEMORY[0x2207B6A18](v12, -1, -1);
    }
    else
    {

    }
    v28 = *(_QWORD *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
    v29 = &a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *v29 = 1;
    v30 = a1;
    objc_msgSend(a2, sel_setOperationState_, 2);
    v31 = *(void (**)(uint64_t, void *))&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v31)
    {
      sub_21EB01F10();
      v31(v28, a1);
      sub_21EA5CA7C((uint64_t)v31);
    }

  }
  else
  {
    if (qword_255469BA8 != -1)
      swift_once();
    v17 = sub_21EB0263C();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.Rename);
    v18 = a3;
    v19 = sub_21EB02624();
    v20 = sub_21EB02EDC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v35[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = v18;
      v24 = objc_msgSend(v23, sel_description);
      v25 = sub_21EB02B88();
      v27 = v26;

      sub_21EA591E4(v25, v27, v35);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v19, v20, "[Erase] mount success! Mounted new disk %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v22, -1, -1);
      MEMORY[0x2207B6A18](v21, -1, -1);

    }
    else
    {

    }
    v32 = *(_QWORD *)&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source];
    v33 = &a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished];
    swift_beginAccess();
    *v33 = 1;
    objc_msgSend(a2, sel_setOperationState_, 2);
    v34 = *(void (**)(uint64_t, _QWORD))&a2[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
    if (v34)
    {
      sub_21EB01F10();
      v34(v32, 0);
      sub_21EA5CA7C((uint64_t)v34);
    }
  }
}

id DOCUSBEraseOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCUSBEraseOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCUSBEraseOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBEraseOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static DOCUSBFormatting.shared.getter()
{
  if (qword_2540A6848 != -1)
    swift_once();
  return sub_21EB01F10();
}

uint64_t DOCUSBFormatting.formattableFileSystems(for:)(void *a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_opt_self();
  v12[0] = 0;
  v3 = a1;
  v4 = objc_msgSend(v2, sel_eraseVolumeWithChildDisk_error_, v3, v12);
  if (v4)
  {
    v5 = v4;
    v6 = v12[0];

    v7 = objc_msgSend(v5, sel_formattableFilesystems);
    sub_21EA579D4(0, &qword_25546B0A0);
    v8 = sub_21EB02CF0();

  }
  else
  {
    v9 = v12[0];
    v10 = (void *)sub_21EB02234();

    swift_willThrow();
    return MEMORY[0x24BEE4AF8];
  }
  return v8;
}

Swift::Bool __swiftcall DOCUSBFormatting.canErase(domain:)(__C::FPProviderDomainID domain)
{
  id v2;
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSString v17;
  os_log_type_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v33[5];

  v33[4] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_usbRenameErase);
  v3 = objc_msgSend(v2, sel_isEnabled);

  if (!v3)
    goto LABEL_12;
  if (qword_2540A6848 != -1)
    swift_once();
  v4 = *(_QWORD *)(static DOCUSBFormatting.shared + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v13 > 0)
      goto LABEL_6;
  }
  else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_6:
    if (qword_255469BA8 != -1)
      swift_once();
    v6 = sub_21EB0263C();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.Rename);
    v7 = sub_21EB02624();
    v8 = sub_21EB02EDC();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_11;
    v9 = swift_slowAlloc();
    v10 = (void *)swift_slowAlloc();
    v33[0] = v10;
    *(_DWORD *)v9 = 136315138;
    sub_21EA591E4(0xD000000000000011, 0x800000021EB11880, (uint64_t *)v33);
    sub_21EB03134();
    _os_log_impl(&dword_21EA4C000, v7, v8, "[Erase] %s erase is not supported while there is an ongoing erase operation", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    v11 = v10;
LABEL_10:
    MEMORY[0x2207B6A18](v11, -1, -1);
    MEMORY[0x2207B6A18](v9, -1, -1);
LABEL_11:

LABEL_12:
    LOBYTE(v12) = 0;
    return (char)v12;
  }
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (!v12)
  {
    __break(1u);
    return (char)v12;
  }
  v14 = v12;
  v15 = sub_21EAB7804();

  if (!v15)
  {
    if (qword_255469BA8 != -1)
      swift_once();
    v16 = sub_21EB0263C();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.Rename);
    v17 = domain._rawValue;
    v7 = sub_21EB02624();
    v18 = sub_21EB02EE8();
    if (!os_log_type_enabled(v7, v18))
    {

      goto LABEL_12;
    }
    v9 = swift_slowAlloc();
    v19 = (void *)swift_slowAlloc();
    v33[0] = v19;
    *(_DWORD *)v9 = 136315394;
    sub_21EA591E4(0xD000000000000011, 0x800000021EB11880, (uint64_t *)v33);
    sub_21EB03134();
    *(_WORD *)(v9 + 12) = 2080;
    v20 = sub_21EB02B88();
    sub_21EA591E4(v20, v21, (uint64_t *)v33);
    sub_21EB03134();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v7, v18, "[Erase] %s Failed to find an SKDisk for domain id: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    v11 = v19;
    goto LABEL_10;
  }
  if (objc_msgSend(v15, sel_isInternal))
  {

    goto LABEL_12;
  }
  v22 = (void *)objc_opt_self();
  v33[0] = 0;
  v23 = v15;
  v24 = objc_msgSend(v22, sel_eraseVolumeWithChildDisk_error_, v23, v33);
  if (v24)
  {
    v25 = v24;
    v26 = v33[0];

    v27 = objc_msgSend(v25, sel_formattableFilesystems);
    sub_21EA579D4(0, &qword_25546B0A0);
    v28 = sub_21EB02CF0();

  }
  else
  {
    v29 = v33[0];
    v30 = (void *)sub_21EB02234();

    swift_willThrow();
    v28 = MEMORY[0x24BEE4AF8];
  }
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_21EB0341C();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  LOBYTE(v12) = v31 != 0;
  return (char)v12;
}

void DOCUSBFormatting.performErase(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  id v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  unsigned int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  _QWORD v36[5];
  uint64_t v37;
  uint64_t v38;
  id v39;

  v14 = objc_msgSend(a1, sel_identifier);
  sub_21EB02B88();

  v15 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (v16)
  {
    v17 = v16;
    v39 = sub_21EAB7804();

    if (v39)
    {
      v37 = a2;
      v38 = a3;
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = a1;
      v18[3] = v7;
      v18[4] = a6;
      v18[5] = a7;
      v19 = (void *)objc_opt_self();
      v20 = a1;
      sub_21EB01F10();
      sub_21EB01F10();
      v21 = objc_msgSend(v19, sel_usbEraseDialog);
      v22 = objc_msgSend(v21, sel_isEnabled);

      v23 = objc_msgSend(v20, sel_displayName);
      v24 = sub_21EB02B88();
      v26 = v25;

      if (v22)
      {
        MEMORY[0x24BDAC7A8](v27);
        v36[2] = v7;
        v36[3] = v39;
        v28 = swift_allocObject();
        *(_QWORD *)(v28 + 16) = sub_21EAB8044;
        *(_QWORD *)(v28 + 24) = v18;
        objc_allocWithZone((Class)type metadata accessor for DOCEraseViewController());
        sub_21EB01F10();
        v29 = sub_21EAC4F78(v24, v26, (void (*)(uint64_t))sub_21EAB8AC8, (uint64_t)v36, (uint64_t)sub_21EAB5C50, 0, (uint64_t)sub_21EA5EA88, v28);
        objc_msgSend(a4, sel_setModalPresentationStyle_, 2);
        objc_msgSend(a4, sel_presentViewController_animated_completion_, v29, 1, 0);

        swift_release();
      }
      else
      {
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = a6;
        *(_QWORD *)(v30 + 24) = a7;
        v31 = (_QWORD *)swift_allocObject();
        v32 = v37;
        v31[2] = v20;
        v31[3] = v32;
        v31[4] = v38;
        v31[5] = v7;
        v31[6] = a6;
        v31[7] = a7;
        v31[8] = a4;
        swift_bridgeObjectRetain();
        v33 = a4;
        swift_retain_n();
        v34 = v20;
        sub_21EB01F10();
        v35 = sub_21EAB8558(v24, v26, (uint64_t)sub_21EAB8074, v30, (uint64_t)sub_21EAB80DC, (uint64_t)v31);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        objc_msgSend(v33, sel_presentViewController_animated_completion_, v35, 1, 0);

        swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_21EAB53E8()
{
  if (objc_msgSend((id)objc_opt_self(), sel_sharedManager))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB02738();
    swift_release();
    swift_release();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x21EAB5A98);
}

uint64_t sub_21EAB5AA8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)objc_opt_self();
  v21[0] = 0;
  v5 = a3;
  v6 = objc_msgSend(v4, sel_eraseVolumeWithChildDisk_error_, v5, v21);
  if (v6)
  {
    v7 = v6;
    v8 = v21[0];

    v9 = objc_msgSend(v7, sel_formattableFilesystems);
    sub_21EA579D4(0, &qword_25546B0A0);
    v10 = sub_21EB02CF0();

  }
  else
  {
    v11 = v21[0];
    v12 = (void *)sub_21EB02234();

    swift_willThrow();
    v10 = MEMORY[0x24BEE4AF8];
  }
  v13 = objc_msgSend(v5, sel_filesystemType);
  if (!v13)
    return swift_bridgeObjectRelease();
  v14 = v13;
  v15 = sub_21EB02B88();
  v17 = v16;

  v18 = sub_21EAD16E4(v15, v17);
  sub_21EAC7560(v10);
  swift_bridgeObjectRelease();
  if (v18 == 4)
    v19 = 1;
  else
    v19 = v18;
  return sub_21EAC7990(v19);
}

void sub_21EAB5C50()
{
  if (objc_msgSend((id)objc_opt_self(), sel_sharedManager))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB02738();
    swift_release();
    swift_release();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x21EAB60C4);
}

uint64_t sub_21EAB60D8()
{
  return sub_21EB023B4();
}

void sub_21EAB60FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a5;
  v14[7] = a6;
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  sub_21EB01F10();
  v15 = objc_msgSend(a1, sel_displayName);
  v16 = sub_21EB02B88();
  v18 = v17;

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a5;
  *(_QWORD *)(v19 + 24) = a6;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_21EAB9CD8;
  *(_QWORD *)(v20 + 24) = v14;
  sub_21EB01F10();
  sub_21EB01F10();
  v21 = sub_21EAB8EC4(v16, v18, (uint64_t)sub_21EAB9DA8, v19, (uint64_t)sub_21EA5EA88, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  objc_msgSend(a7, sel_presentViewController_animated_completion_, v21, 1, 0);
  swift_release();

}

void sub_21EAB6274(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v12;
  _BYTE *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t (**v20)(uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  objc_super v32;

  v12 = (objc_class *)type metadata accessor for DOCUSBEraseOperation();
  v13 = objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_operationState] = 0;
  v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_isFinished] = 0;
  v14 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source] = a1;
  v15 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName];
  *v15 = a2;
  v15[1] = a3;
  *(_QWORD *)&v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newFileSystem] = 0;
  v16 = &v13[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newPassword];
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  v32.receiver = v13;
  v32.super_class = v12;
  v17 = a1;
  swift_bridgeObjectRetain();
  v18 = (char *)objc_msgSendSuper2(&v32, sel_init);
  v19 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v19 + 2) = a4;
  *((_QWORD *)v19 + 3) = v18;
  *((_QWORD *)v19 + 4) = a5;
  *((_QWORD *)v19 + 5) = a6;
  v20 = (uint64_t (**)(uint64_t, uint64_t))&v18[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_completionHandler];
  *v20 = sub_21EAB9D88;
  v20[1] = v19;
  sub_21EB01F10();
  v22 = v18;
  sub_21EB01F10();
  sub_21EA5CA7C(v21);
  if (qword_255469BA8 != -1)
    swift_once();
  v23 = sub_21EB0263C();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.Rename);
  v24 = v22;
  v25 = sub_21EB02624();
  v26 = sub_21EB02EDC();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v27 = 136315394;
    sub_21EA591E4(0xD000000000000067, 0x800000021EB11DF0, &v31);
    sub_21EB03134();
    *(_WORD *)(v27 + 12) = 2112;
    v30 = v24;
    sub_21EB03134();
    *v28 = v24;

    _os_log_impl(&dword_21EA4C000, v25, v26, "%s: [Erase] Adding USB Erase Operation %@", (uint8_t *)v27, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v29, -1, -1);
    MEMORY[0x2207B6A18](v27, -1, -1);

  }
  else
  {

  }
  sub_21EAB1890(v24);

}

uint64_t sub_21EAB659C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29[3];

  v8 = (_QWORD *)(*(_QWORD *)(a3 + 16) + 24);
  swift_beginAccess();
  v9 = a4;
  v10 = sub_21EAB8AD0(v8, (uint64_t)v9);

  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v12 >= v10)
    {
LABEL_3:
      sub_21EA5DCB8(v10, v12, v11, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      swift_endAccess();
      if (qword_255469BA8 == -1)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v12 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= v10)
      goto LABEL_3;
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  v13 = sub_21EB0263C();
  __swift_project_value_buffer(v13, (uint64_t)static Logger.Rename);
  v14 = v9;
  swift_retain_n();
  v15 = v14;
  v16 = sub_21EB02624();
  v17 = sub_21EB02EDC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29[0] = v28;
    *(_DWORD *)v18 = 138412546;
    v19 = a2;
    v20 = v15;
    sub_21EB03134();
    *v27 = v15;

    a2 = v19;
    *(_WORD *)(v18 + 12) = 2080;
    v21 = type metadata accessor for DOCUSBEraseOperation();
    v22 = swift_bridgeObjectRetain();
    v23 = MEMORY[0x2207B5524](v22, v21);
    v25 = v24;
    swift_bridgeObjectRelease();
    sub_21EA591E4(v23, v25, v29);
    sub_21EB03134();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v16, v17, "[Erase] Removed finished USB Erase operation %@ from queue: %s", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v28, -1, -1);
    MEMORY[0x2207B6A18](v18, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return a5(a2);
}

uint64_t DOCUSBFormatting.currentOperation.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  id v5;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v3 = result;
    if (!result)
      goto LABEL_7;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v3)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2207B5B3C](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v2 + 32);
LABEL_6:
    v3 = (uint64_t)v5;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall DOCUSBFormatting.hasOperation(for:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v3;
  void *v4;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_21EAB7EB8(v3, countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)

  return v4 != 0;
}

uint64_t DOCUSBFormatting.operations.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void *DOCUSBFormatting.operation(for:)(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  void *v5;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_21EAB7EB8(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void DOCUSBFormatting.removeOperation(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = a1;
  v5 = sub_21EAB8AD0((_QWORD *)(v3 + 24), (uint64_t)v4);

  v7 = *(_QWORD *)(v3 + 24);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v8 >= v5)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_3:
      sub_21EA5DCB8(v5, v8, v6, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

Swift::Void __swiftcall DOCUSBFormatting.removeOperation(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5 = sub_21EAB93BC((unint64_t *)(v4 + 24), countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v4 + 24);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v8 >= v5)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_3:
      sub_21EA5DCB8(v5, v8, v6, (void (*)(uint64_t))type metadata accessor for DOCUSBEraseOperation);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

uint64_t DOCUSBFormatting.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DOCUSBFormatting.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

char *sub_21EAB6CFC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_21EA5C430(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAB6E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v7 = a1;
    v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v6 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v6 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v6;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v6 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x2207B5B48](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *v4 = v6;
  v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v7);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_21EB02D08();
  }
  if (!(v6 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v6 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAB7164(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v37;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    sub_21EB01F10();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B100);
  result = sub_21EB0344C();
  v8 = result;
  v35 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v37 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v35)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v35)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v35)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v35)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v35)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v37 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = 8 * v13;
    v19 = v4;
    v20 = *(void **)(*(_QWORD *)(v4 + 48) + v18);
    v21 = *(void **)(*(_QWORD *)(v4 + 56) + v18);
    sub_21EB02B88();
    sub_21EB035A8();
    v22 = v20;
    v23 = v21;
    sub_21EB02BDC();
    v24 = sub_21EB035E4();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = 8 * v28;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v33) = v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v33) = v23;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v19;
    v10 = v37;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_21EAB7444(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id result;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21EB02300();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_storageURLs);
  v10 = sub_21EB02CF0();

  if (*(_QWORD *)(v10 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v11 = 0;
  }
  else
  {
    v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v11, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21EA59E08((uint64_t)v4, (uint64_t *)&unk_2540A6520);
    if (qword_255469BA8 != -1)
      swift_once();
    v12 = sub_21EB0263C();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.Rename);
    v13 = a1;
    v14 = sub_21EB02624();
    v15 = sub_21EB02EE8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28 = v17;
      *(_DWORD *)v16 = 136315394;
      v27 = sub_21EA591E4(0xD000000000000014, 0x800000021EB11E80, &v28);
      sub_21EB03134();
      *(_WORD *)(v16 + 12) = 2080;
      v18 = v13;
      v19 = objc_msgSend(v18, sel_description);
      v20 = sub_21EB02B88();
      v22 = v21;

      v27 = sub_21EA591E4(v20, v22, &v28);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21EA4C000, v14, v15, "%s: Provider domain %s contained no storageURLs", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v17, -1, -1);
      MEMORY[0x2207B6A18](v16, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (result)
  {
    v24 = result;
    sub_21EB022F4();
    v25 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v24, sel_diskForPath_, v25);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v26;
  }
  __break(1u);
  return result;
}

id sub_21EAB7804()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v25[2];

  v25[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_21EB02B88();
  v0 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v1 = (void *)objc_opt_self();
  v25[0] = 0;
  v2 = v0;
  v3 = objc_msgSend(v1, sel_providerDomainWithID_cachePolicy_error_, v2, 1, v25);
  if (v3)
  {
    v4 = v3;
    v5 = v25[0];

    v6 = v4;
    v7 = sub_21EAB7444(v6);

  }
  else
  {
    v8 = v25[0];
    v9 = (void *)sub_21EB02234();

    swift_willThrow();
    if (qword_255469BA8 != -1)
      swift_once();
    v10 = sub_21EB0263C();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.Rename);
    v11 = v2;
    v12 = v9;
    v13 = v11;
    v14 = v9;
    v15 = sub_21EB02624();
    v16 = sub_21EB02EE8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = (void *)swift_slowAlloc();
      v25[0] = v18;
      *(_DWORD *)v17 = 136315650;
      sub_21EA591E4(0xD00000000000001ELL, 0x800000021EB11E60, (uint64_t *)v25);
      sub_21EB03134();
      *(_WORD *)(v17 + 12) = 2080;
      v19 = sub_21EB02B88();
      sub_21EA591E4(v19, v20, (uint64_t *)v25);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      v21 = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546A8F8);
      v22 = sub_21EB02BA0();
      sub_21EA591E4(v22, v23, (uint64_t *)v25);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v15, v16, "%s: Couldn't create FPProviderDomain with identifier %s. Error: %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v18, -1, -1);
      MEMORY[0x2207B6A18](v17, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v7;
}

uint64_t sub_21EAB7B6C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  id v17;

  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = 0; v4; i = 0)
  {
    v17 = *(id *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (char *)MEMORY[0x2207B5B3C](i, a1);
      else
        v6 = (char *)*(id *)(a1 + 8 * i + 32);
      v7 = v6;
      v8 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      v9 = objc_msgSend(v17, sel_identifier);
      v10 = sub_21EB02B88();
      v12 = v11;
      if (v10 == sub_21EB02B88() && v12 == v13)
      {

        swift_bridgeObjectRelease_n();
        return i;
      }
      a2 = sub_21EB034C4();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a2 & 1) != 0)
        return i;
      v15 = i + 1;
      if (__OFADD__(i, 1))
        break;
      ++i;
      if (v15 == v4)
        return 0;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  return i;
}

uint64_t sub_21EAB7D34(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t i;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;

  if (a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    for (i = 0; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x2207B5B3C](i, a1);
      else
        v8 = (char *)*(id *)(a1 + 8 * i + 32);
      v9 = v8;
      v10 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
      v11 = sub_21EB02B88();
      v13 = v12;

      if (v11 == a2 && v13 == a3)
      {

        swift_bridgeObjectRelease();
        return i;
      }
      v15 = sub_21EB034C4();

      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        return i;
      v16 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v16 == v6)
        return 0;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void *sub_21EAB7EB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  void *v14;

  if (a1 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_21EB0341C())
  {
    v8 = 4;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207B5B3C](v8 - 4, a1) : *(id *)(a1 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v14 = v9;
      v12 = sub_21EAB157C(&v14, a2, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_21EAB7FE0(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t type metadata accessor for DOCUSBEraseOperation()
{
  return objc_opt_self();
}

uint64_t sub_21EAB8010()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21EAB8044()
{
  sub_21EAB53E8();
}

uint64_t sub_21EAB8050()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAB8074()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_21EAB8098()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21EAB80DC()
{
  uint64_t v0;

  sub_21EAB60FC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
}

void sub_21EAB80F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;

  v28 = 0;
  v5 = 0;
  v30 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v29 = (_QWORD *)(a4 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_newDisplayName);
  v31 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v5 << 6);
LABEL_21:
    v14 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v10);
    v15 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v10);
    sub_21EB02B88();
    v16 = v14;
    v17 = v15;
    LOBYTE(v14) = sub_21EB02C54();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      v18 = objc_msgSend(v17, sel_domainFullDisplayName);
      v19 = sub_21EB02B88();
      v21 = v20;

      v22 = v29[1];
      if (v22)
      {
        if (v19 == *v29 && v22 == v21)
        {

          swift_bridgeObjectRelease();
LABEL_31:
          *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
          if (__OFADD__(v28++, 1))
          {
            __break(1u);
LABEL_34:
            sub_21EAB7164(a1, a2, v28, a3);
            return;
          }
        }
        else
        {
          v24 = sub_21EB034C4();

          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
            goto LABEL_31;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {

    }
  }
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v11 >= v31)
    goto LABEL_34;
  v12 = *(_QWORD *)(v30 + 8 * v11);
  ++v5;
  if (v12)
    goto LABEL_20;
  v5 = v11 + 1;
  if (v11 + 1 >= v31)
    goto LABEL_34;
  v12 = *(_QWORD *)(v30 + 8 * v5);
  if (v12)
    goto LABEL_20;
  v5 = v11 + 2;
  if (v11 + 2 >= v31)
    goto LABEL_34;
  v12 = *(_QWORD *)(v30 + 8 * v5);
  if (v12)
  {
LABEL_20:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v5 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v31)
    goto LABEL_34;
  v12 = *(_QWORD *)(v30 + 8 * v13);
  if (v12)
  {
    v5 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v31)
      goto LABEL_34;
    v12 = *(_QWORD *)(v30 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_21EAB83BC(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_21EAB80F0((unint64_t *)v9, v6, a1, (uint64_t)v10);
    v12 = v11;

    if (v2)
      swift_willThrow();

  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    v14 = v8;
    sub_21EAB80F0((unint64_t *)v13, v6, a1, (uint64_t)v14);
    v12 = v15;

    MEMORY[0x2207B6A18](v13, -1, -1);
  }
  return v12;
}

id sub_21EAB8558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v36;
  uint64_t aBlock;
  uint64_t v38;
  void (*v39)(uint64_t, void *);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;

  result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = result;
  v32 = a6;
  sub_21EB02168();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21EB08F10;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
  v13 = sub_21EA5EA3C();
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_21EB02B64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v14 = result;
  sub_21EB02168();

  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v15 + 56) = v12;
  *(_QWORD *)(v15 + 64) = v13;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_21EB02B64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v16, v17, 1, 0x800000021EB11C50);

  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v19 = result;
  v36 = v18;
  sub_21EB02168();

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v20 = result;
    sub_21EB02168();

    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a3;
    *(_QWORD *)(v21 + 24) = a4;
    sub_21EB01F10();
    v22 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v41 = sub_21EA5EA84;
    v42 = v21;
    v23 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v38 = 1107296256;
    v39 = sub_21EAA71A8;
    v40 = &block_descriptor_56;
    v24 = _Block_copy(&aBlock);
    swift_release();
    v25 = (void *)objc_opt_self();
    v26 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v22, 0, v24, 0x800000021EB11CA0);
    _Block_release(v24);

    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = a5;
    *(_QWORD *)(v27 + 24) = v32;
    sub_21EB01F10();
    v28 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v41 = sub_21EA5EA88;
    v42 = v27;
    aBlock = v23;
    v38 = 1107296256;
    v39 = sub_21EAA71A8;
    v40 = &block_descriptor_62;
    v29 = _Block_copy(&aBlock);
    swift_release();
    v30 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v28, 2, v29);
    _Block_release(v29);

    objc_msgSend(v36, sel_addAction_, v26);
    objc_msgSend(v36, sel_addAction_, v30);
    v31 = v36;
    objc_msgSend(v31, sel_setPreferredAction_, v26);

    return v31;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21EAB8AC8(uint64_t a1)
{
  uint64_t v1;

  return sub_21EAB5AA8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_21EAB8AD0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t i;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void *v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;

  v5 = swift_bridgeObjectRetain();
  v35 = sub_21EAB7B6C(v5, a2);
  v7 = v6;
  swift_bridgeObjectRelease();
  v33 = v2;
  if (v2)
    return v35;
  if ((v7 & 1) == 0)
  {
    i = v35 + 1;
    if (__OFADD__(v35, 1))
      goto LABEL_60;
    if (*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      v31 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (i != v31)
        goto LABEL_6;
    }
    else if (i != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v34 = *(id *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source);
      for (i = v35 + 5; ; ++i)
      {
        v9 = i - 4;
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v11 = (char *)MEMORY[0x2207B5B3C](i - 4);
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v11 = (char *)*(id *)(v10 + 8 * i);
        }
        v12 = v11;
        v13 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier, v33);
        v14 = objc_msgSend(v34, sel_identifier);
        a2 = sub_21EB02B88();
        v16 = v15;
        if (a2 == sub_21EB02B88() && v16 == v17)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        a2 = sub_21EB034C4();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((a2 & 1) != 0)
          goto LABEL_38;
        a2 = v35;
        if (v9 != v35)
          break;
LABEL_35:
        a2 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_53;
        ++v35;
LABEL_38:
        v28 = __OFADD__(v9, 1);
        v29 = i - 3;
        if (v28)
          goto LABEL_52;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          a2 = sub_21EB0341C();
          swift_bridgeObjectRelease();
        }
        else
        {
          a2 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v29 == a2)
          return v35;
      }
      v19 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v20 = (id)MEMORY[0x2207B5B3C](v35, *a1);
        v19 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v9 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v21 = *(id *)(v19 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v35 & 0x8000000000000000) != 0)
          goto LABEL_54;
        if (v35 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_55;
        v20 = *(id *)(v19 + 8 * v35 + 32);
        if ((v19 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v21 = (id)MEMORY[0x2207B5B3C](i - 4, v19);
      v19 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v19;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
        sub_21EAC020C(v19);
      v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20);
      *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20) = v21;

      sub_21EB02D08();
      v24 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v24;
      if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
        sub_21EAC020C(v24);
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_58;
      v26 = v24 & 0xFFFFFFFFFFFFFF8;
      if (v9 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_59;
      v27 = *(void **)(v26 + 8 * i);
      *(_QWORD *)(v26 + 8 * i) = v20;

      sub_21EB02D08();
      goto LABEL_35;
    }
    return v35;
  }
  if (!(*a1 >> 62))
    return *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v32 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  return v32;
}

id sub_21EAB8EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id result;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t aBlock;
  uint64_t v34;
  void (*v35)(uint64_t, void *);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;

  result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v13 = result;
  sub_21EB02168();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v14 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_21EB02B64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v15 = result;
  v32 = a5;
  sub_21EB02168();

  v16 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v16, v17, 1, 0x800000021EB11D80);

  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v19 = result;
  sub_21EB02168();

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v20 = result;
    sub_21EB02168();

    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a3;
    *(_QWORD *)(v21 + 24) = a4;
    sub_21EB01F10();
    v22 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v37 = sub_21EA5EA84;
    v38 = v21;
    v23 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v34 = 1107296256;
    v35 = sub_21EAA71A8;
    v36 = &block_descriptor_77;
    v24 = _Block_copy(&aBlock);
    swift_release();
    v25 = (void *)objc_opt_self();
    v26 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v22, 0, v24, 0x800000021EB11CA0);
    _Block_release(v24);

    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v32;
    *(_QWORD *)(v27 + 24) = a6;
    sub_21EB01F10();
    v28 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v37 = sub_21EA5EA84;
    v38 = v27;
    aBlock = v23;
    v34 = 1107296256;
    v35 = sub_21EAA71A8;
    v36 = &block_descriptor_83;
    v29 = _Block_copy(&aBlock);
    swift_release();
    v30 = objc_msgSend(v25, sel_actionWithTitle_style_handler_, v28, 2, v29);
    _Block_release(v29);

    objc_msgSend(v18, sel_addAction_, v30);
    objc_msgSend(v18, sel_addAction_, v26);
    v31 = v18;
    objc_msgSend(v31, sel_setPreferredAction_, v26);

    return v31;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21EAB93BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t i;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  id v23;
  id v24;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = swift_bridgeObjectRetain();
  v37 = a2;
  v8 = sub_21EAB7D34(v7, a2, a3);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_61;
    if (*a1 >> 62)
    {
LABEL_62:
      swift_bridgeObjectRetain();
      v35 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (v11 != v35)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v8 + 5; ; ++i)
      {
        v13 = i - 4;
        v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = (char *)MEMORY[0x2207B5B3C](i - 4);
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_52;
          v15 = (char *)*(id *)(v14 + 8 * i);
        }
        v16 = v15;
        v17 = objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC26DocumentManagerExecutables20DOCUSBEraseOperation_source], sel_identifier);
        v18 = sub_21EB02B88();
        v20 = v19;

        if (v18 == v37 && v20 == a3)
        {

          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
        v11 = sub_21EB034C4();

        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          goto LABEL_39;
        if (v13 != v8)
          break;
LABEL_35:
        if (__OFADD__(v8++, 1))
          goto LABEL_54;
LABEL_39:
        v11 = i - 3;
        if (__OFADD__(v13, 1))
          goto LABEL_53;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v32 = sub_21EB0341C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v32 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v11 == v32)
          return v8;
      }
      v22 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v23 = (id)MEMORY[0x2207B5B3C](v8, *a1);
        v22 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v13 & 0x8000000000000000) != 0)
            goto LABEL_57;
          if (v13 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_58;
          v24 = *(id *)(v22 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_55;
        if (v8 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
        v23 = *(id *)(v22 + 8 * v8 + 32);
        if ((v22 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v24 = (id)MEMORY[0x2207B5B3C](i - 4, v22);
      v22 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v22 & 0x8000000000000000) != 0
        || (v22 & 0x4000000000000000) != 0)
      {
        sub_21EAC020C(v22);
      }
      v26 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v24;

      sub_21EB02D08();
      v27 = *a1;
      v28 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v27;
      if (!v28 || (v27 & 0x8000000000000000) != 0 || (v27 & 0x4000000000000000) != 0)
        sub_21EAC020C(v27);
      if ((v13 & 0x8000000000000000) != 0)
        goto LABEL_59;
      v29 = v27 & 0xFFFFFFFFFFFFFF8;
      if (v13 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_60;
      v30 = *(void **)(v29 + 8 * i);
      *(_QWORD *)(v29 + 8 * i) = v23;

      sub_21EB02D08();
      goto LABEL_35;
    }
    return v8;
  }
  v33 = *a1;
  if (!(v33 >> 62))
    return *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v36 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_21EAB9758()
{
  unint64_t result;

  result = qword_25546B0A8;
  if (!qword_25546B0A8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCUSBFormattingErrorCode, &type metadata for DOCUSBFormattingErrorCode);
    atomic_store(result, (unint64_t *)&qword_25546B0A8);
  }
  return result;
}

unint64_t sub_21EAB97A0()
{
  unint64_t result;

  result = qword_25546B0B0;
  if (!qword_25546B0B0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCUSBEraseOperation.State, &type metadata for DOCUSBEraseOperation.State);
    atomic_store(result, (unint64_t *)&qword_25546B0B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCUSBFormattingErrorCode(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for DOCUSBFormattingErrorCode(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21EAB9878 + 4 * byte_21EB0A5B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21EAB9898 + 4 * byte_21EB0A5B5[v4]))();
}

_BYTE *sub_21EAB9878(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21EAB9898(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21EAB98A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21EAB98A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21EAB98B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21EAB98B8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_21EAB98C4()
{
  return 0;
}

ValueMetadata *type metadata accessor for DOCUSBFormattingErrorCode()
{
  return &type metadata for DOCUSBFormattingErrorCode;
}

ValueMetadata *type metadata accessor for DOCUSBEraseOperation.State()
{
  return &type metadata for DOCUSBEraseOperation.State;
}

uint64_t sub_21EAB98EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAB9910(void *a1, void *a2)
{
  uint64_t v2;

  sub_21EAB30F4(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_21EAB9918()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAB9944(void *a1)
{
  uint64_t v1;

  sub_21EAB43E0(a1, *(char **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_21EAB994C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21EAB3888(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_21EAB9954()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_21EAB9980(int a1)
{
  uint64_t v1;

  return sub_21EAB40E0(a1, *(id *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_21EAB9988()
{
  sub_21EAB24C4();
}

uint64_t sub_21EAB99A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x2207B5B48](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
  swift_arrayDestroy();
  if (!v6)
    return sub_21EB02D08();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_21EB02D08();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAB9C9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21EAB9CD8()
{
  uint64_t v0;

  sub_21EAB6274(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t objectdestroy_85Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAB9D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21EAB659C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32));
}

uint64_t DOCAppIntentsGenericError.localizedStringResource.getter()
{
  return sub_21EB02240();
}

BOOL static DOCAppIntentsGenericError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DOCAppIntentsGenericError.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCAppIntentsGenericError.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

unint64_t sub_21EAB9E68()
{
  unint64_t result;

  result = qword_25546B110;
  if (!qword_25546B110)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAppIntentsGenericError, &type metadata for DOCAppIntentsGenericError);
    atomic_store(result, (unint64_t *)&qword_25546B110);
  }
  return result;
}

uint64_t sub_21EAB9EB8()
{
  return sub_21EB02240();
}

uint64_t storeEnumTagSinglePayload for DOCAppIntentsGenericError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EAB9F48 + 4 * byte_21EB0A8C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EAB9F7C + 4 * byte_21EB0A8C0[v4]))();
}

uint64_t sub_21EAB9F7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAB9F84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAB9F8CLL);
  return result;
}

uint64_t sub_21EAB9F98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAB9FA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EAB9FA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAB9FAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAppIntentsGenericError()
{
  return &type metadata for DOCAppIntentsGenericError;
}

uint64_t DOCTabSwitcherStyle.description.getter(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
      return 0x736261546F6ELL;
    case 2:
      return 0x74616F6C46706F74;
    case 1:
      return 0x61426D6F74746F62;
  }
  type metadata accessor for DOCTabSwitcherStyle(0);
  result = sub_21EB034F4();
  __break(1u);
  return result;
}

BOOL DOCTabSwitcherStyle.showsTabs.getter(uint64_t a1)
{
  return a1 != 0;
}

uint64_t DOCTabSwitcherStyle.sidebarCanPresentNonBrowseTabItemContent.getter(unint64_t a1)
{
  uint64_t result;

  if (a1 < 3)
    return (a1 & 1) == 0;
  type metadata accessor for DOCTabSwitcherStyle(0);
  result = sub_21EB034F4();
  __break(1u);
  return result;
}

id sub_21EABA0C4(void *a1)
{
  id result;

  result = (id)DOCDeviceIsPad();
  if ((_DWORD)result)
    return objc_msgSend(a1, sel_setHorizontalSizeClass_, 2);
  return result;
}

uint64_t sub_21EABA104(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_21EABA140()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if (!*v0)
    return 0x736261546F6ELL;
  if (v1 == 2)
    return 0x74616F6C46706F74;
  if (v1 == 1)
    return 0x61426D6F74746F62;
  result = sub_21EB034F4();
  __break(1u);
  return result;
}

id sub_21EABA1DC(void *a1)
{
  return objc_msgSend(a1, sel_forSavingDocuments);
}

id DOCConfiguration.neverAllowsAnyTypeOfTabs.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_forSavingDocuments);
}

uint64_t _sSo19DOCTabSwitcherStyleV26DocumentManagerExecutablesE09preferredC03for15traitCollection10splitStateABSo16DOCConfigurationC_So07UITraitJ0CSgAC012DOCSplitViewL0VSgtFZ_0(void *a1, void *a2, char a3, uint64_t a4)
{
  int IsPad;
  id v7;
  void *v8;
  uint64_t result;
  unsigned int v10;
  int v11;
  id v12;
  _QWORD v13[6];

  if (a3 == 2)
  {
    IsPad = DOCDeviceIsPad();
    if (a2)
    {
LABEL_3:
      v7 = a2;
      objc_msgSend(v7, sel_enclosingDocumentLandingMode);
      goto LABEL_10;
    }
  }
  else
  {
    IsPad = (a3 & 1) == 0 && (a4 & 0xFFFFFFFFFFFFFFFELL) == 2;
    if (a2)
      goto LABEL_3;
  }
  v13[4] = sub_21EABA0C4;
  v13[5] = 0;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_21EABA104;
  v13[3] = &block_descriptor_15;
  v8 = _Block_copy(v13);
  v7 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithTraits_, v8);
  _Block_release(v8);
  swift_release();
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
  {
    __break(1u);
    return result;
  }
  swift_beginAccess();
LABEL_10:
  if (objc_msgSend(a1, sel_neverAllowsAnyTypeOfTabs))
  {
LABEL_11:

    return 0;
  }
  v10 = DOCUsePhoneIdiomForTraits();
  v11 = DOCUsePadIdiomForTraits();
  if ((objc_msgSend((id)objc_opt_self(), sel_enclosingTabSwitcherCanBeFloating) & 1) != 0 && v11)
  {
    if (IsPad || objc_msgSend(a1, sel_isPickerUI))
      goto LABEL_11;
    v12 = objc_msgSend(v7, sel_horizontalSizeClass);

    if (v12 == (id)2)
      return 2;
    else
      return 1;
  }
  else
  {

    return v10;
  }
}

void doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  swift_getDynamicType();
  sub_21EB035F0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB033B0();
  sub_21EB02C0C();
  sub_21EB032E4();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB02C0C();
  sub_21EB033C8();
  __break(1u);
}

Swift::String __swiftcall DOCLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5;
  void *v6;
  Swift::String result;

  v5 = sub_21EB02168();
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t AttributedString.init(doc_localized:options:locale:comment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a6;
  v25 = a4;
  v26 = a5;
  v22 = a1;
  v24 = a7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB02150();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21EB02B4C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  v20 = (id)_DocumentManagerBundle();
  sub_21EABB458(a3, (uint64_t)v12);
  sub_21EB0215C();
  sub_21EABB4A0(a3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
}

id sub_21EABA6E4()
{
  id result;

  result = DOCLogHandle();
  static DOCLog.DocumentManager = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.DocumentManager.unsafeMutableAddressor()
{
  if (qword_255469AF0 != -1)
    swift_once();
  return &static DOCLog.DocumentManager;
}

id static DOCLog.DocumentManager.getter()
{
  return sub_21EA951AC(&qword_255469AF0, (id *)&static DOCLog.DocumentManager);
}

id static DOCLog.UI.getter()
{
  return sub_21EA951AC(&qword_2540A6CB8, (id *)&static DOCLog.UI);
}

id sub_21EABA780()
{
  id result;

  result = DOCPersonaLogHandle();
  static DOCLog.Persona = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Persona.unsafeMutableAddressor()
{
  if (qword_255469B00 != -1)
    swift_once();
  return &static DOCLog.Persona;
}

id static DOCLog.Persona.getter()
{
  return sub_21EA951AC(&qword_255469B00, (id *)&static DOCLog.Persona);
}

id sub_21EABA800()
{
  id result;

  result = DOCSmartFolderLogHandle();
  static DOCLog.SmartFolders = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.SmartFolders.unsafeMutableAddressor()
{
  if (qword_255469B08 != -1)
    swift_once();
  return &static DOCLog.SmartFolders;
}

id static DOCLog.SmartFolders.getter()
{
  return sub_21EA951AC(&qword_255469B08, (id *)&static DOCLog.SmartFolders);
}

id static DOCLog.Source.getter()
{
  return sub_21EA951AC(&qword_2540A6CD0, (id *)&static DOCLog.Source);
}

id sub_21EABA89C()
{
  id result;

  result = DOCPickerLogHandle();
  static DOCLog.Picker = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Picker.unsafeMutableAddressor()
{
  if (qword_255469B18 != -1)
    swift_once();
  return &static DOCLog.Picker;
}

id static DOCLog.Picker.getter()
{
  return sub_21EA951AC(&qword_255469B18, (id *)&static DOCLog.Picker);
}

id static DOCLog.Rename.getter()
{
  return sub_21EA951AC(&qword_255469B20, (id *)&static DOCLog.Rename);
}

id static DOCLog.BrowserHistory.getter()
{
  return sub_21EA951AC(&qword_2540A6C98, (id *)&static DOCLog.BrowserHistory);
}

id static DOCLog.Tests.getter()
{
  return sub_21EA951AC(&qword_2540A6CC0, (id *)&static DOCLog.Tests);
}

id sub_21EABA970()
{
  id result;

  result = DOCDownloadServiceLogHandle();
  static DOCLog.DownloadService = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.DownloadService.unsafeMutableAddressor()
{
  if (qword_255469B28 != -1)
    swift_once();
  return &static DOCLog.DownloadService;
}

id static DOCLog.DownloadService.getter()
{
  return sub_21EA951AC(&qword_255469B28, (id *)&static DOCLog.DownloadService);
}

id static DOCLog.StateStore.getter()
{
  return sub_21EA951AC(&qword_2540A6C70, (id *)&static DOCLog.StateStore);
}

uint64_t *DOCLog.Analytics.unsafeMutableAddressor()
{
  if (qword_2540A6CD8 != -1)
    swift_once();
  return &static DOCLog.Analytics;
}

id static DOCLog.Analytics.getter()
{
  return sub_21EA951AC(&qword_2540A6CD8, (id *)&static DOCLog.Analytics);
}

id static DOCLog.Application.getter()
{
  return sub_21EA951AC(&qword_2540A6C80, (id *)&static DOCLog.Application);
}

id sub_21EABAA84()
{
  id result;

  result = DOCProgressUILogHandle();
  static DOCLog.ProgressUI = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.ProgressUI.unsafeMutableAddressor()
{
  if (qword_255469B38 != -1)
    swift_once();
  return &static DOCLog.ProgressUI;
}

id static DOCLog.ProgressUI.getter()
{
  return sub_21EA951AC(&qword_255469B38, (id *)&static DOCLog.ProgressUI);
}

id static DOCLog.Enumeration.getter()
{
  return sub_21EA951AC(&qword_2540A6C90, (id *)&static DOCLog.Enumeration);
}

id static DOCLog.FileProviderSyncState.getter()
{
  return sub_21EA951AC(&qword_2540A6CA8, (id *)&static DOCLog.FileProviderSyncState);
}

id static DOCLog.AppIntents.getter()
{
  return sub_21EA951AC(&qword_2540A6C60, (id *)&static DOCLog.AppIntents);
}

id sub_21EABAB58()
{
  id result;

  result = DOCSidebarLogHandle();
  static DOCLog.Sidebar = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Sidebar.unsafeMutableAddressor()
{
  if (qword_255469B48 != -1)
    swift_once();
  return &static DOCLog.Sidebar;
}

id static DOCLog.Sidebar.getter()
{
  return sub_21EA951AC(&qword_255469B48, (id *)&static DOCLog.Sidebar);
}

id sub_21EABABD8()
{
  id result;

  result = DOCPreviewLogHandle();
  static DOCLog.Preview = (uint64_t)result;
  return result;
}

uint64_t *DOCLog.Preview.unsafeMutableAddressor()
{
  if (qword_255469B50 != -1)
    swift_once();
  return &static DOCLog.Preview;
}

id static DOCLog.Preview.getter()
{
  return sub_21EA951AC(&qword_255469B50, (id *)&static DOCLog.Preview);
}

uint64_t static DOCDeviceModel.current.getter()
{
  id v0;
  void *v1;
  int deviceClassNumber;
  uint64_t result;

  v0 = (id)MobileGestalt_get_current_device();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x21EABACD8);
  }
  v1 = v0;
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  result = 0;
  switch(deviceClassNumber)
  {
    case 1:
      return result;
    case 2:
      result = 2;
      break;
    case 3:
      result = 1;
      break;
    case 11:
      result = 3;
      break;
    default:
      result = 4;
      break;
  }
  return result;
}

BOOL static DOCDeviceModel.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t DOCDeviceModel.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCDeviceModel.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

Swift::Void __swiftcall DOCAssertUnexpectedError(errorTitle:message:)(Swift::String errorTitle, Swift::String message)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)sub_21EB02B58();
  v3 = (void *)sub_21EB02B58();
  v4 = (id)sub_21EB02B58();
  DOCAssertWithIntenalBuildAlert();

}

uint64_t DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(char a1, uint64_t (*a2)(void), uint64_t a3, char a4, char a5)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;

  if ((a1 & 1) == 0)
  {
    v8 = a2();
    v10 = v9;
    if ((a4 & 1) == 0)
      goto LABEL_11;
    if (qword_255469B58 != -1)
      swift_once();
    if (byte_25546B118 == 1)
    {
      if (qword_255469B78 != -1)
        swift_once();
      v11 = sub_21EB0263C();
      __swift_project_value_buffer(v11, (uint64_t)static Logger.UI);
      swift_bridgeObjectRetain();
      v12 = sub_21EB02624();
      v13 = sub_21EB02EF4();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v23 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_21EA591E4(v8, v10, &v23);
        sub_21EB03134();
        swift_bridgeObjectRelease_n();
        v16 = "Skipping DOCGuardAssert() while attached in debugger: %s";
LABEL_16:
        _os_log_impl(&dword_21EA4C000, v12, v13, v16, v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207B6A18](v15, -1, -1);
        MEMORY[0x2207B6A18](v14, -1, -1);

        return a1 & 1;
      }
    }
    else
    {
LABEL_11:
      if ((a5 & 1) != 0 && DOCIsRunningUnitTests()())
      {
        if (qword_255469B78 != -1)
          swift_once();
        v17 = sub_21EB0263C();
        __swift_project_value_buffer(v17, (uint64_t)static Logger.UI);
        swift_bridgeObjectRetain();
        v12 = sub_21EB02624();
        v13 = sub_21EB02EF4();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          v15 = swift_slowAlloc();
          v23 = v15;
          *(_DWORD *)v14 = 136315138;
          swift_bridgeObjectRetain();
          sub_21EA591E4(v8, v10, &v23);
          sub_21EB03134();
          swift_bridgeObjectRelease_n();
          v16 = "Skipping DOCGuardAssert() while unit-testing: %s";
          goto LABEL_16;
        }
      }
      else
      {
        if (DOCIsInternalBuild())
        {
          swift_bridgeObjectRelease();
          return a1 & 1;
        }
        if (qword_255469B78 != -1)
          swift_once();
        v18 = sub_21EB0263C();
        __swift_project_value_buffer(v18, (uint64_t)static Logger.UI);
        swift_bridgeObjectRetain_n();
        v12 = sub_21EB02624();
        v19 = sub_21EB02EF4();
        if (os_log_type_enabled(v12, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          v21 = swift_slowAlloc();
          v23 = v21;
          *(_DWORD *)v20 = 136315138;
          swift_bridgeObjectRetain();
          sub_21EA591E4(v8, v10, &v23);
          sub_21EB03134();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21EA4C000, v12, v19, "assertion failure: %s", v20, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2207B6A18](v21, -1, -1);
          MEMORY[0x2207B6A18](v20, -1, -1);
          swift_bridgeObjectRelease();

          return a1 & 1;
        }
      }
    }

    swift_bridgeObjectRelease_n();
  }
  return a1 & 1;
}

Swift::Bool __swiftcall DOCIsAttachedInDebugger()()
{
  if (qword_255469B58 != -1)
    swift_once();
  return byte_25546B118;
}

Swift::Bool __swiftcall DOCIsRunningUnitTests()()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  Swift::Bool v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_21EB02AD4();
  if (*(_QWORD *)(v2 + 16) && (sub_21EA5B7F8(0xD000000000000017, 0x800000021EB11FA0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t doc_unrecognizedEnumValueDescription(_:)(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  swift_getDynamicType();
  sub_21EB035F0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB033B0();
  sub_21EB02C0C();
  return 0;
}

uint64_t sub_21EABB458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21EABB4A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void doc_warnUnrecognizedEnumValueEncountered(_:)(_QWORD *a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6[2];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  swift_getDynamicType();
  sub_21EB035F0();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  sub_21EB033B0();
  sub_21EB02C0C();
  if (qword_255469B78 != -1)
    swift_once();
  v1 = sub_21EB0263C();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.UI);
  swift_bridgeObjectRetain();
  v2 = sub_21EB02624();
  v3 = sub_21EB02EE8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v6[0] = v5;
    *(_DWORD *)v4 = 136315138;
    swift_bridgeObjectRetain();
    sub_21EA591E4(0, 0xE000000000000000, v6);
    sub_21EB03134();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21EA4C000, v2, v3, "Warning: Unrecognized enum value encountered => %s)", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v5, -1, -1);
    MEMORY[0x2207B6A18](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21EABB710()
{
  uint64_t result;

  result = sub_21EABB730();
  byte_25546B118 = result & 1;
  return result;
}

uint64_t sub_21EABB730()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v10;
  uint64_t v11;
  _BYTE v12[37];
  uint64_t v13;
  int v14;
  __int128 v15;
  __int128 v16;
  int v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  __int128 v31;
  _BYTE v32[28];
  uint64_t v33;
  uint64_t v34;
  int v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[28];
  uint64_t v43;
  __int16 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  __int128 v54;
  __int128 v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  v13 = 0;
  v14 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v29 = 0;
  v30 = 0;
  v43 = 0;
  v44 = 0;
  v49 = 0;
  v57 = 0;
  memset(v12, 0, sizeof(v12));
  v15 = 0u;
  v16 = 0u;
  v17 = 0;
  v20 = 0;
  v19 = 0u;
  v18 = 0u;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v25 = 0;
  v31 = 0u;
  memset(v32, 0, sizeof(v32));
  v35 = 0;
  v33 = 0;
  v34 = 0;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  memset(v42, 0, sizeof(v42));
  v48 = 0u;
  v47 = 0u;
  v46 = 0u;
  v45 = 0u;
  v51 = 0;
  v50 = 0;
  v53 = 0;
  v52 = 0;
  v54 = 0u;
  v55 = 0u;
  v56 = 0;
  v61 = 0;
  v59 = 0;
  v58 = 0;
  v60 = 0;
  v62 = 0u;
  v63 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B130);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21EB07160;
  *(_QWORD *)(v0 + 32) = 0xE00000001;
  *(_DWORD *)(v0 + 40) = 1;
  *(_DWORD *)(v0 + 44) = getpid();
  v10 = 648;
  v1 = sysctl((int *)(v0 + 32), 4u, v12, &v10, 0, 0);
  swift_bridgeObjectRelease();
  if (!v1)
    return (v12[33] >> 3) & 1;
  if (qword_255469B78 != -1)
    swift_once();
  v2 = sub_21EB0263C();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.UI);
  v3 = sub_21EB02624();
  v4 = sub_21EB02EE8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    MEMORY[0x2207B4F3C]();
    v7 = sub_21EB03488();
    sub_21EA591E4(v7, v8, &v11);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v3, v4, "sysctl(3) failed: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v6, -1, -1);
    MEMORY[0x2207B6A18](v5, -1, -1);
  }

  return 0;
}

unint64_t sub_21EABBA50()
{
  unint64_t result;

  result = qword_25546B128;
  if (!qword_25546B128)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCDeviceModel, &type metadata for DOCDeviceModel);
    atomic_store(result, (unint64_t *)&qword_25546B128);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLog()
{
  return &type metadata for DOCLog;
}

uint64_t storeEnumTagSinglePayload for DOCDeviceModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21EABBAF0 + 4 * byte_21EB0AA25[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21EABBB24 + 4 * byte_21EB0AA20[v4]))();
}

uint64_t sub_21EABBB24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EABBB2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EABBB34);
  return result;
}

uint64_t sub_21EABBB40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EABBB48);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21EABBB4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EABBB54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCDeviceModel()
{
  return &type metadata for DOCDeviceModel;
}

id DOCPreviewLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFA8];
  v1 = (void *)*MEMORY[0x24BE2DFA8];
  if (!*MEMORY[0x24BE2DFA8])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCSidebarLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFC8];
  v1 = (void *)*MEMORY[0x24BE2DFC8];
  if (!*MEMORY[0x24BE2DFC8])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCProgressUILogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFB0];
  v1 = (void *)*MEMORY[0x24BE2DFB0];
  if (!*MEMORY[0x24BE2DFB0])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCDownloadServiceLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF78];
  v1 = (void *)*MEMORY[0x24BE2DF78];
  if (!*MEMORY[0x24BE2DF78])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCPickerLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DFA0];
  v1 = (void *)*MEMORY[0x24BE2DFA0];
  if (!*MEMORY[0x24BE2DFA0])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

id DOCPersonaLogHandle()
{
  void **v0;
  void *v1;

  v0 = (void **)MEMORY[0x24BE2DF98];
  v1 = (void *)*MEMORY[0x24BE2DF98];
  if (!*MEMORY[0x24BE2DF98])
  {
    DOCInitLogging();
    v1 = *v0;
  }
  return v1;
}

void sub_21EABBCA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      v11 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    if (a4)
      goto LABEL_3;
  }
  v11 = 0;
LABEL_6:
  v30 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1);

  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_21EB0341C();
    if (!v12)
      goto LABEL_15;
  }
  else
  {
    v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_15;
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_38;
  }
  for (i = 0; i != v12; ++i)
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x2207B5B3C](i, a5);
    else
      v14 = *(id *)(a5 + 8 * i + 32);
    v15 = v14;
    objc_msgSend(v30, sel_addAction_, v14);

  }
LABEL_15:
  swift_bridgeObjectRelease();
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 != 1)
    goto LABEL_27;
  a5 = (unint64_t)v30;
  v17 = objc_msgSend((id)a5, sel_actions);
  sub_21EA579D4(0, &qword_25546B1C8);
  v12 = sub_21EB02CF0();

  if (!((unint64_t)v12 >> 62))
  {
    v18 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_21;
LABEL_39:
    v19 = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_40;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  v18 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_39;
LABEL_21:
  v19 = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_41:
    v20 = (id)MEMORY[0x2207B5B3C](v19, v12);
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v19 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_43:
    __break(1u);
    return;
  }
  v20 = *(id *)(v12 + 8 * v19 + 32);
LABEL_26:
  v21 = v20;
  swift_bridgeObjectRelease();
  objc_msgSend((id)a5, sel_setPreferredAction_, v21);

LABEL_27:
  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_21EB07140;
  v23 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  v24 = sub_21EA5EA3C();
  *(_QWORD *)(v22 + 32) = 0xD00000000000001FLL;
  *(_QWORD *)(v22 + 40) = 0x800000021EB12170;
  *(_QWORD *)(v22 + 96) = v23;
  *(_QWORD *)(v22 + 104) = v24;
  if (a4)
    v25 = a3;
  else
    v25 = 0;
  v26 = 0xE000000000000000;
  if (a4)
    v26 = a4;
  *(_QWORD *)(v22 + 64) = v24;
  *(_QWORD *)(v22 + 72) = v25;
  *(_QWORD *)(v22 + 80) = v26;
  swift_bridgeObjectRetain();
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  v27 = (void *)MEMORY[0x2207B6ACC](a6 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCActionUIOperation_presentingViewController);
  v28 = v30;
  if (v27)
  {
    v29 = v27;
    objc_msgSend(v27, sel_presentViewController_animated_completion_, v30, 1, 0);

    v28 = v30;
  }

}

void sub_21EABC0AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD v9[6];

  v6 = MEMORY[0x2207B6ACC](a1 + OBJC_IVAR____TtC26DocumentManagerExecutables20DOCActionUIOperation_presentingViewController);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)sub_21EB02228();
    if (a3)
    {
      v9[4] = a3;
      v9[5] = a4;
      v9[0] = MEMORY[0x24BDAC760];
      v9[1] = 1107296256;
      v9[2] = sub_21EA5EAB0;
      v9[3] = &block_descriptor_37;
      a3 = _Block_copy(v9);
      sub_21EB01F10();
      swift_release();
    }
    DOCPresentAlertForErrorWithForceHandler();
    _Block_release(a3);

  }
}

id DOCActionUIOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCActionUIOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21EABC20C()
{
  return swift_unknownObjectWeakDestroy();
}

id DOCActionUIOperation.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCActionUIOperation);
}

uint64_t type metadata accessor for DOCActionUIOperation()
{
  return objc_opt_self();
}

id DOCDeletePreflightUIOperation.__allocating_init(items:alertPresenting:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items] = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id DOCDeletePreflightUIOperation.init(items:alertPresenting:)(uint64_t a1, void *a2)
{
  char *v2;
  id v4;
  objc_super v6;

  *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items] = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

id DOCDeletePreflightUIOperation.main(with:previousOperationError:)()
{
  char *v0;
  id result;
  void *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t (*v32)();
  _QWORD *v33;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v2 = result;
    sub_21EB02168();

    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v3 = result;
      sub_21EB02168();

      v4 = _s26DocumentManagerExecutables18DOCDeleteOperationC19confirmationStrings3forAC06Removee12ConfirmationG0VSaySo6FPItemCG_tFZ_0(*(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items]);
      v26 = v5;
      v27 = v4;
      v7 = v6;
      v9 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_21EB0AAD0;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v0;
      v12 = v0;
      v13 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
      v32 = (uint64_t (*)())sub_21EABCF60;
      v33 = (_QWORD *)v11;
      aBlock = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_21EAA71A8;
      v31 = &block_descriptor_16;
      v14 = _Block_copy(&aBlock);
      swift_release();
      v15 = (void *)objc_opt_self();
      v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 2, v14, 0x800000021EB11C80);
      _Block_release(v14);

      *(_QWORD *)(v10 + 32) = v16;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v12;
      v18 = v12;
      v19 = (void *)sub_21EB02B58();
      swift_bridgeObjectRelease();
      v32 = sub_21EABCF68;
      v33 = (_QWORD *)v17;
      aBlock = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_21EAA71A8;
      v31 = &block_descriptor_6_5;
      v20 = _Block_copy(&aBlock);
      swift_release();
      v21 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v19, 1, v20);
      _Block_release(v20);

      *(_QWORD *)(v10 + 40) = v21;
      aBlock = v10;
      sub_21EB02D08();
      v22 = aBlock;
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = v27;
      v23[3] = v7;
      v23[4] = v26;
      v23[5] = v9;
      v23[6] = v22;
      v23[7] = v18;
      v32 = sub_21EABCF74;
      v33 = v23;
      aBlock = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_21EA5EAB0;
      v31 = &block_descriptor_12_0;
      v24 = _Block_copy(&aBlock);
      v25 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21EABC718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];

  v2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables29DOCDeletePreflightUIOperation_items);
  v4[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
  v4[0] = v2;
  swift_bridgeObjectRetain();
  DOCOperation.completed(with:error:)((uint64_t)v4, 0);
  return sub_21EA5B5B0((uint64_t)v4);
}

uint64_t sub_21EABC778()
{
  id v0;
  void *v1;
  id v2;
  __int128 v4;

  sub_21EB02B88();
  v0 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v1 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v1, 3072, 0, (unsigned __int128)0, (unsigned __int128)0);

  DOCOperation.completed(with:error:)((uint64_t)&v4, v2);
  return sub_21EA5B5B0((uint64_t)&v4);
}

uint64_t sub_21EABC828()
{
  return swift_bridgeObjectRelease();
}

id DOCDeletePreflightUIOperation.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCDeletePreflightUIOperation);
}

id DOCCreateNewFolderPostflightUIOperation.__allocating_init(folderName:alertPresenting:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

id DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  id v6;
  objc_super v8;

  v5 = &v3[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCActionUIOperation();
  v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id DOCCreateNewFolderPostflightUIOperation.main(with:previousOperationError:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id result;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  id v39;
  char *v40;
  id v41;
  char *v42;
  uint64_t aBlock;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t (*v47)();
  _QWORD *v48;

  if (!a2)
    return (id)DOCOperation.completed(with:error:)(a1, 0);
  v3 = (id)sub_21EB02228();
  v4 = (void *)sub_21EB02228();
  v5 = objc_msgSend(v4, sel_domain);
  v6 = sub_21EB02B88();
  v8 = v7;

  if (v6 == sub_21EB02B88() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {

LABEL_15:
      if (qword_2540A6CB8 != -1)
        swift_once();
      sub_21EB02EE8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_21EB07140;
      *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 64) = sub_21EA5EA3C();
      *(_QWORD *)(v34 + 32) = 0xD000000000000022;
      *(_QWORD *)(v34 + 40) = 0x800000021EB12040;
      *(_QWORD *)(v34 + 96) = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
      *(_QWORD *)(v34 + 104) = sub_21EAA6920();
      *(_QWORD *)(v34 + 72) = v3;
      v35 = v3;
      sub_21EB025F4();
      swift_bridgeObjectRelease();
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v2;
      *(_QWORD *)(v36 + 24) = v35;
      v37 = (_QWORD *)swift_allocObject();
      v37[2] = v2;
      v37[3] = v35;
      v37[4] = sub_21EABCFC4;
      v37[5] = v36;
      v47 = (uint64_t (*)())sub_21EABD040;
      v48 = v37;
      aBlock = MEMORY[0x24BDAC760];
      v44 = 1107296256;
      v45 = sub_21EA5EAB0;
      v46 = &block_descriptor_21_0;
      v38 = _Block_copy(&aBlock);
      v39 = v35;
      v40 = v2;
      v41 = v39;
      v42 = v40;
      sub_21EB01F10();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v38);

      return (id)swift_release();
    }
  }
  v13 = objc_msgSend(v4, sel_code);

  if (v13 != (id)-1001)
    goto LABEL_15;
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName];
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables39DOCCreateNewFolderPostflightUIOperation_folderName
                     + 8];
  if (qword_255469C40 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v16 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v16 + 32) = v15;
  *(_QWORD *)(v16 + 40) = v14;
  swift_bridgeObjectRetain();
  v17 = sub_21EB02B94();
  v19 = v18;
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v20 = result;
    sub_21EB02168();

    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v2;
    *(_QWORD *)(v21 + 24) = v3;
    v22 = v3;
    v23 = v2;
    v24 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v47 = sub_21EABCFC4;
    v48 = (_QWORD *)v21;
    v25 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v44 = 1107296256;
    v45 = sub_21EAA71A8;
    v46 = &block_descriptor_27_0;
    v26 = _Block_copy(&aBlock);
    swift_release();
    v27 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v24, 0, v26, 0xE200000000000000);
    _Block_release(v26);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_21EB07150;
    *(_QWORD *)(v28 + 32) = v27;
    aBlock = v28;
    sub_21EB02D08();
    v29 = aBlock;
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = v17;
    v30[5] = v19;
    v30[6] = v29;
    v30[7] = v23;
    v47 = sub_21EABCF74;
    v48 = v30;
    aBlock = v25;
    v44 = 1107296256;
    v45 = sub_21EA5EAB0;
    v46 = &block_descriptor_34;
    v31 = _Block_copy(&aBlock);
    v32 = v23;
    v33 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v31);

    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21EABCF08()
{
  return swift_bridgeObjectRelease();
}

id DOCCreateNewFolderPostflightUIOperation.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCCreateNewFolderPostflightUIOperation);
}

uint64_t sub_21EABCF3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EABCF60(uint64_t a1)
{
  uint64_t v1;

  return sub_21EABC718(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21EABCF68()
{
  return sub_21EABC778();
}

uint64_t type metadata accessor for DOCDeletePreflightUIOperation()
{
  return objc_opt_self();
}

uint64_t sub_21EABCF98()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EABCFC4()
{
  uint64_t v0;
  void *v1;
  _OWORD v3[2];

  v1 = *(void **)(v0 + 24);
  memset(v3, 0, sizeof(v3));
  DOCOperation.completed(with:error:)((uint64_t)v3, v1);
  return sub_21EA5B5B0((uint64_t)v3);
}

uint64_t sub_21EABD004()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void sub_21EABD040()
{
  uint64_t v0;

  sub_21EABC0AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_21EABD08C()
{
  uint64_t v0;

  sub_21EABBCA8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t type metadata accessor for DOCCreateNewFolderPostflightUIOperation()
{
  return objc_opt_self();
}

uint64_t String.init(_:)(void *a1)
{
  uint64_t v2;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = sub_21EB02C6C();

  return v2;
}

uint64_t String.append(_:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21EB02C6C();
  sub_21EB02C0C();
  return swift_bridgeObjectRelease();
}

uint64_t String.insert(_:at:)()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21EB02C6C();
  sub_21EABD2A8();
  sub_21EB02C18();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21EABD2A8()
{
  unint64_t result;

  result = qword_25546B1D0;
  if (!qword_25546B1D0)
  {
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25546B1D0);
  }
  return result;
}

id NSAttributedString.init(_:)(void *a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  return v4;
}

void NSMutableAttributedString.appendUnicode(_:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v4 = a1;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithString_, v5);

  objc_msgSend(v1, sel_appendAttributedString_, v6);
}

void sub_21EABD460(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v5 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v6 = a3;
  v7 = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v5, sel_initWithString_, v8);

  objc_msgSend(v7, sel_appendAttributedString_, v9);
}

void NSMutableAttributedString.insertUnicode(_:at:)(void *a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v6 = a1;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithString_, v7);

  objc_msgSend(v2, sel_insertAttributedString_atIndex_, v8, a2);
}

void NSMutableAttributedString.insert(_:at:)(void *a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v6 = a1;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithString_, v7);

  objc_msgSend(v2, sel_insertAttributedString_atIndex_, v8, a2);
}

void sub_21EABD6E4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v7 = objc_allocWithZone(MEMORY[0x24BDD1458]);
  swift_beginAccess();
  v8 = a3;
  v9 = a1;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v7, sel_initWithString_, v10);

  objc_msgSend(v9, sel_insertAttributedString_atIndex_, v11, a4);
}

uint64_t sub_21EABD7C8(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  int64_t v21;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v21 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v18 = v17[1];
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * i);
    v20[0] = *v17;
    v20[1] = v18;
    v20[2] = v19;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v21)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
      break;
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v21)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v21)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v21)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 4;
  if (v11 + 4 >= v21)
    return swift_release();
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v21)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21EABD9B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_21EB02138();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_21EB02114();
  sub_21EB01F10();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t NSNotification.SubscriptionsController.__allocating_init(observee:)()
{
  uint64_t v0;

  swift_allocObject();
  v0 = sub_21EA5D4A0();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NSNotification.SubscriptionsController.deinit()
{
  uint64_t v0;

  NSNotification.SubscriptionsController.invalidateAll()();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NSNotification.SubscriptionsController.__deallocating_deinit()
{
  NSNotification.SubscriptionsController.deinit();
  return swift_deallocClassInstance();
}

uint64_t NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t v11;

  v10 = (void *)sub_21EB02B58();
  v11 = NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)((uint64_t)v10, a3, a4, a5, a6);

  return v11;
}

uint64_t sub_21EABDB4C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = MEMORY[0x2207B6ACC](result + 16);
    result = swift_release();
    if (v6)
    {
      a3(v6, a1);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall NSNotification.SubscriptionsController.invalidateAll()()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_21EABD7C8((void (*)(_QWORD *))sub_21EABDF84, v0, v1);
  swift_bridgeObjectRelease();
}

uint64_t sub_21EABDC48()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t NSNotificationCenter.doc_observeOnce(forName:object:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD *);
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD v27[2];
  _QWORD aBlock[3];
  _QWORD *v29;
  uint64_t (*v30)(uint64_t);
  _QWORD *v31;

  _s10ObservanceCMa();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_21EA5B5F0(a2, (uint64_t)aBlock);
  v12 = v29;
  if (v29)
  {
    v13 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v29);
    v27[1] = v27;
    v14 = a5;
    v15 = a4;
    v16 = a1;
    v17 = a3;
    v18 = *(v12 - 1);
    MEMORY[0x24BDAC7A8](v13);
    v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = sub_21EB034B8();
    v22 = *(void (**)(char *, _QWORD *))(v18 + 8);
    a3 = v17;
    a1 = v16;
    a4 = v15;
    a5 = v14;
    v22(v20, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
  }
  else
  {
    v21 = 0;
  }
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v10;
  v23[3] = a4;
  v23[4] = a5;
  v30 = sub_21EABDFFC;
  v31 = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EABD9B0;
  v29 = &block_descriptor_9_2;
  v24 = _Block_copy(aBlock);
  sub_21EB01F10();
  sub_21EB01F10();
  swift_release();
  v25 = objc_msgSend(v11, sel_addObserverForName_object_queue_usingBlock_, a1, v21, a3, v24);
  _Block_release(v24);

  swift_unknownObjectRelease();
  *(_QWORD *)(v10 + 16) = v25;
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21EABDE94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  void *v6;
  id v7;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v6 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v7 = objc_msgSend(v6, sel_defaultCenter);
    objc_msgSend(v7, sel_removeObserver_, v5);
    swift_unknownObjectRelease();

  }
  return a3(a1);
}

uint64_t sub_21EABDF28()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EABDF4C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EABDF78(uint64_t a1)
{
  uint64_t v1;

  return sub_21EABDB4C(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32));
}

uint64_t sub_21EABDF84(uint64_t *a1)
{
  return _sSo14NSNotificationC26DocumentManagerExecutablesE23SubscriptionsControllerC10invalidateyySSF_0(*a1, a1[1]);
}

uint64_t _s10ObservanceCMa()
{
  return objc_opt_self();
}

uint64_t sub_21EABDFD0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EABDFFC(uint64_t a1)
{
  uint64_t v1;

  return sub_21EABDE94(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_21EABE010(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_21EB02E64();
  if (!v18)
    return sub_21EB02D38();
  v19 = v18;
  v25 = v15;
  v39 = sub_21EB02ABC();
  v32 = sub_21EB03398();
  sub_21EB03350();
  v36 = v17;
  result = sub_21EB02E58();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_21EB02EA0();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_21EB03380();
      sub_21EB02E7C();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t Dictionary<>.doc_allKeys(forValue:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[16];

  v15[8] = a3;
  v15[9] = a4;
  v15[10] = a5;
  v15[11] = a6;
  v15[12] = a1;
  swift_bridgeObjectRetain();
  v15[14] = sub_21EB02AEC();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  v10 = sub_21EB02AF8();
  v11 = MEMORY[0x2207B694C](MEMORY[0x24BEE04E8], v10);
  v13 = sub_21EABE010((void (*)(char *, char *))sub_21EABE4CC, (uint64_t)v15, v10, a3, MEMORY[0x24BEE4078], v11, MEMORY[0x24BEE40A8], v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21EABE3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (char *)&v18 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = &v11[v12];
  v14 = a1 + v12;
  v15 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, a2);
  v16 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, v14, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a3);
}

uint64_t sub_21EABE4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21EABE3DC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_21EABE4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t Dictionary<>.inverted()()
{
  uint64_t v0;
  uint64_t v2;

  sub_21EB02AB0();
  v0 = sub_21EB02AF8();
  sub_21EB02AF8();
  MEMORY[0x2207B694C](MEMORY[0x24BEE04D8], v0);
  sub_21EB02CA8();
  return v2;
}

void sub_21EABE614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21EB030F8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - v16;
  MEMORY[0x2207B532C](a1, a2, a4, a3, a6);
  LODWORD(a6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 48))(v17, 1, a3);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((_DWORD)a6 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a4);
    v18 = sub_21EB02BA0();
    v20 = v19;
    if (qword_255469B78 != -1)
      swift_once();
    v21 = sub_21EB0263C();
    __swift_project_value_buffer(v21, (uint64_t)static Logger.UI);
    swift_bridgeObjectRetain();
    v22 = sub_21EB02624();
    v23 = sub_21EB02EF4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain();
      v26 = sub_21EA591E4(v18, v20, &v27);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v22, v23, "Dictionary invert encountered duplicate entry for: (%s). Dropping from results.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v25, -1, -1);
      MEMORY[0x2207B6A18](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_21EABE89C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;
  _QWORD v31[2];
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  char *v35;

  v31[1] = a6;
  v32 = a5;
  v34 = a1;
  v11 = sub_21EB030F8();
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)v31 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v31 - v18;
  v20 = *(int *)(v17 + 48);
  v31[0] = a2;
  v21 = a2 + v20;
  sub_21EABE614(a2 + v20, *a1, a3, a4, v32, a6);
  v22 = *(int *)(TupleTypeMetadata2 + 48);
  v23 = v19;
  v33 = v19;
  v24 = &v19[v22];
  v25 = *(_QWORD *)(a3 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v26(v23, a2, a3);
  v32 = *(_QWORD *)(a4 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v27(v24, v21, a4);
  v28 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
  v26(v16, v31[0], a3);
  v27(v28, v21, a4);
  v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v35, v16, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, a3);
  sub_21EB02AF8();
  sub_21EB02B10();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v28, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v33, a3);
}

uint64_t sub_21EABEAAC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_21EABE89C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

Swift::Int __swiftcall String.doc_editDistance(from:)(Swift::String from)
{
  _QWORD *v1;
  unint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  _BOOL8 v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v41;
  Swift::Int v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v50[4];

  object = (unint64_t)from._object;
  countAndFlagsBits = from._countAndFlagsBits;
  v4 = sub_21EB02BE8();
  v49 = sub_21EB02BE8();
  if (v49 < 1)
    return sub_21EB02BE8();
  v5 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v6 = sub_21EABFBD8(0, v4 + 1);
  if (__OFADD__(v49, 1))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v7 = sub_21EABFCC0(v6, v49 + 1);
  if (v49 + 1 < 1)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v1 = (_QWORD *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_86:
    v1 = sub_21EAC01D0(v1);
  v8 = 0;
  while (1)
  {
    v9 = v1[2];
    if (v8 >= v9)
    {
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    v10 = v1[v8 + 4];
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_75;
    v11 = *(_QWORD *)(v10 + 32);
    v12 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_76;
    if (v8 + 1 >= v9)
      goto LABEL_77;
    v13 = &v1[v8];
    v14 = (_QWORD *)v13[5];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[5] = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      break;
    if (!v14[2])
      goto LABEL_16;
LABEL_13:
    v14[4] = v12;
    if (v49 == ++v8)
      goto LABEL_17;
  }
  v14 = sub_21EAC01BC(v14);
  v13[5] = v14;
  if (v14[2])
    goto LABEL_13;
LABEL_16:
  __break(1u);
LABEL_17:
  if (v5 < 1)
  {
    __break(1u);
LABEL_88:
    v1 = sub_21EAC01D0(v1);
    goto LABEL_23;
  }
  if (v5 != 1)
  {
    v43 = swift_isUniquelyReferenced_nonNull_native();
    if ((v43 & 1) != 0)
      goto LABEL_57;
    goto LABEL_92;
  }
LABEL_20:
  v16 = HIBYTE(object) & 0xF;
  v50[0] = countAndFlagsBits;
  v50[1] = object;
  if ((object & 0x2000000000000000) == 0)
    v16 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v50[2] = 0;
  v50[3] = v16;
  swift_bridgeObjectRetain();
  v48 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_88;
LABEL_23:
  object = (unint64_t)v50;
  v17 = sub_21EB02C30();
  if (v18)
  {
    v5 = v17;
    countAndFlagsBits = v18;
    v19 = 0;
    v20 = v1 + 4;
    while (1)
    {
      v22 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      swift_bridgeObjectRetain();
      v23 = sub_21EB02C30();
      if (v24)
      {
        object = (unint64_t)v24;
        v25 = 0;
        while (1)
        {
          if (v23 == v5 && object == countAndFlagsBits)
          {
            swift_bridgeObjectRelease();
            v26 = 0;
          }
          else
          {
            v27 = sub_21EB034C4();
            swift_bridgeObjectRelease();
            v26 = (v27 & 1) == 0;
          }
          v28 = v1[2];
          if (v19 >= v28)
            break;
          v29 = v20[v19];
          if (v25 + 1 >= *(_QWORD *)(v29 + 16))
            goto LABEL_67;
          v30 = *(_QWORD *)(v29 + 8 * v25 + 40);
          v31 = __OFADD__(v30, 1);
          v32 = v30 + 1;
          if (v31)
            goto LABEL_68;
          if (v22 >= v28)
            goto LABEL_69;
          object = v20[v22];
          if (v25 >= *(_QWORD *)(object + 16))
            goto LABEL_70;
          v33 = *(_QWORD *)(object + 8 * v25 + 32);
          v31 = __OFADD__(v33, 1);
          v34 = v33 + 1;
          if (v31)
            goto LABEL_71;
          v35 = *(_QWORD *)(v29 + 8 * v25 + 32);
          v31 = __OFADD__(v35, v26);
          v36 = v35 + v26;
          if (v31)
            goto LABEL_72;
          if (v34 >= v32)
            v37 = v32;
          else
            v37 = v34;
          if (v36 >= v37)
            v4 = v37;
          else
            v4 = v36;
          v38 = swift_isUniquelyReferenced_nonNull_native();
          v20[v22] = object;
          if ((v38 & 1) == 0)
          {
            object = (unint64_t)sub_21EAC01BC((_QWORD *)object);
            v20[v22] = object;
          }
          if (v25 + 1 >= *(_QWORD *)(object + 16))
            goto LABEL_73;
          *(_QWORD *)(object + 8 * v25 + 40) = v4;
          v23 = sub_21EB02C30();
          object = (unint64_t)v39;
          ++v25;
          if (!v39)
            goto LABEL_25;
        }
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      object = (unint64_t)v50;
      v5 = sub_21EB02C30();
      countAndFlagsBits = v21;
      ++v19;
      if (!v21)
        goto LABEL_52;
    }
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
LABEL_52:
  swift_bridgeObjectRelease();
  if (v49 >= v1[2])
  {
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    v1 = sub_21EAC01D0(v1);
LABEL_57:
    v44 = 0;
    while (v1[2])
    {
      v5 = v1[4];
      if (v44 >= *(_QWORD *)(v5 + 16))
        goto LABEL_79;
      v45 = *(_QWORD *)(v5 + 8 * v44 + 32);
      v46 = v45 + 1;
      if (__OFADD__(v45, 1))
        goto LABEL_80;
      v47 = swift_isUniquelyReferenced_nonNull_native();
      v1[4] = v5;
      if ((v47 & 1) == 0)
        v5 = (uint64_t)sub_21EAC01BC((_QWORD *)v5);
      if (v44 + 1 >= *(_QWORD *)(v5 + 16))
        goto LABEL_81;
      *(_QWORD *)(v5 + 8 * v44 + 40) = v46;
      v1[4] = v5;
      if (v4 == ++v44)
        goto LABEL_20;
    }
    goto LABEL_78;
  }
  if ((v48 & 0x8000000000000000) != 0)
    goto LABEL_90;
  v41 = v1[v49 + 4];
  if (v48 >= *(_QWORD *)(v41 + 16))
    goto LABEL_91;
  v42 = *(_QWORD *)(v41 + 8 * v48 + 32);
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t String.doc_localizedQuotedString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v4 = sub_21EB023F0();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_21EB023D8();

  v8 = sub_21EB023CC();
  if (v9)
    v10 = v8;
  else
    v10 = 34;
  if (v9)
    v11 = v9;
  else
    v11 = 0xE100000000000000;
  v12 = sub_21EB023C0();
  v36 = v10;
  v37 = v11;
  if (v13)
    v14 = v12;
  else
    v14 = 34;
  v27[1] = v14;
  v34 = a1;
  v35 = a2;
  sub_21EA8E234();
  v34 = sub_21EB03194();
  v35 = v15;
  v32 = 10844;
  v33 = 0xE200000000000000;
  v30 = 42;
  v31 = 0xE100000000000000;
  v16 = sub_21EB0317C();
  v18 = v17;
  swift_bridgeObjectRelease();
  v34 = v16;
  v35 = v18;
  v32 = 10076;
  v33 = 0xE200000000000000;
  v30 = 39;
  v31 = 0xE100000000000000;
  v19 = sub_21EB0317C();
  v21 = v20;
  swift_bridgeObjectRelease();
  v34 = v19;
  v35 = v21;
  v32 = 8796;
  v33 = 0xE200000000000000;
  v30 = 34;
  v31 = 0xE100000000000000;
  v22 = sub_21EB0317C();
  v24 = v23;
  swift_bridgeObjectRelease();
  v34 = v22;
  v35 = v24;
  v32 = 23644;
  v33 = 0xE200000000000000;
  v30 = 92;
  v31 = 0xE100000000000000;
  sub_21EB0317C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  v25 = v36;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  return v25;
}

uint64_t String.doc_searchEscapedString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  v39 = a2;
  v7 = a1;
  v29 = a2;
  sub_21EA8E234();
  v38 = sub_21EB03194();
  v39 = v8;
  v36 = 92;
  v37 = 0xE100000000000000;
  v34 = 23644;
  v35 = 0xE200000000000000;
  v32 = a1;
  v33 = a2;
  v30 = v38;
  v31 = v8;
  v9 = sub_21EB023F0();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v28 = v9;
  v27(v6, 1, 1, v9);
  swift_bridgeObjectRetain();
  sub_21EB031A0();
  sub_21EA59E08((uint64_t)v6, &qword_25546B120);
  swift_bridgeObjectRelease();
  v10 = sub_21EB0317C();
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v10;
  v39 = v12;
  v36 = 34;
  v37 = 0xE100000000000000;
  v34 = 8796;
  v35 = 0xE200000000000000;
  v31 = v12;
  v32 = v7;
  v13 = v7;
  v14 = v29;
  v33 = v29;
  v30 = v10;
  v15 = v9;
  v16 = v27;
  v27(v6, 1, 1, v15);
  swift_bridgeObjectRetain();
  sub_21EB031A0();
  sub_21EA59E08((uint64_t)v6, &qword_25546B120);
  swift_bridgeObjectRelease();
  v17 = sub_21EB0317C();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v17;
  v39 = v19;
  v36 = 39;
  v37 = 0xE100000000000000;
  v33 = v14;
  v34 = 10076;
  v35 = 0xE200000000000000;
  v31 = v19;
  v32 = v13;
  v30 = v17;
  v20 = v28;
  v16(v6, 1, 1, v28);
  swift_bridgeObjectRetain();
  sub_21EB031A0();
  sub_21EA59E08((uint64_t)v6, &qword_25546B120);
  swift_bridgeObjectRelease();
  v21 = sub_21EB0317C();
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v21;
  v39 = v23;
  v36 = 42;
  v37 = 0xE100000000000000;
  v34 = 10844;
  v35 = 0xE200000000000000;
  v32 = v13;
  v33 = v29;
  v30 = v21;
  v31 = v23;
  v16(v6, 1, 1, v20);
  swift_bridgeObjectRetain();
  sub_21EB031A0();
  sub_21EA59E08((uint64_t)v6, &qword_25546B120);
  swift_bridgeObjectRelease();
  v24 = sub_21EB0317C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t String.doc_searchQueryValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v4 = sub_21EB020FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 34;
  v11 = 0xE100000000000000;
  String.doc_searchEscapedString.getter(a1, a2);
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  v9[0] = a1;
  v9[1] = a2;
  sub_21EB020F0();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EB020E4();
  sub_21EA8E234();
  sub_21EB03158();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t String.doc_sanitizedForComparison.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_21EB023D8();

  v8 = sub_21EB023F0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  sub_21EA8E234();
  v9 = sub_21EB031AC();
  sub_21EA59E08((uint64_t)v6, &qword_25546B120);
  return v9;
}

uint64_t String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B120);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  v26 = a2;
  v23 = 124;
  v24 = 0xE100000000000000;
  sub_21EA8E234();
  v7 = sub_21EB0314C();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_21EA7D4A4(0, v8, 0);
    v9 = (void *)objc_opt_self();
    v22[1] = v7;
    v10 = (uint64_t *)(v7 + 40);
    do
    {
      v11 = *v10;
      v25 = *(v10 - 1);
      v26 = v11;
      swift_bridgeObjectRetain();
      v12 = objc_msgSend(v9, sel_currentLocale);
      sub_21EB023D8();

      v13 = sub_21EB023F0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
      v14 = sub_21EB031AC();
      v16 = v15;
      sub_21EA59E08((uint64_t)v6, &qword_25546B120);
      swift_bridgeObjectRelease();
      v17 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21EA7D4A4(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v23;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_21EA7D4A4(v18 > 1, v19 + 1, 1);
        v17 = v23;
      }
      v10 += 2;
      *(_QWORD *)(v17 + 16) = v19 + 1;
      v20 = v17 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v14;
      *(_QWORD *)(v20 + 40) = v16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v17;
}

uint64_t sub_21EABFBD8(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_21EB033BC();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_21EB02D44();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_21EABFCC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_21EB033BC();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546AEE8);
      v4 = (_QWORD *)sub_21EB02D44();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_21EABFDB0()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v0 = (void *)sub_21EB02B58();
  v1 = objc_msgSend(v0, sel_pathExtension);

  v2 = sub_21EB02B88();
  v4 = v3;

  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = v2 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    return 46;
  }
  return v2;
}

Swift::Bool __swiftcall String.isKnownExtension()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::Bool result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;

  v2 = v1;
  v3 = v0;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB025DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - v13;
  v22 = v3;
  v23 = v2;
  swift_bridgeObjectRetain();
  result = sub_21EB02C54();
  if (!result)
  {
LABEL_7:
    v18 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v18 = v3 & 0xFFFFFFFFFFFFLL;
    if (v18)
    {
      sub_21EB0251C();
      sub_21EB024D4();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
        v20 = sub_21EB02498();
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
        v19 = (v20 & 1) != 0 || UTType.isClaimed(for:handlerRank:)(0, *MEMORY[0x24BDC1620]);
        v21 = *(void (**)(char *, uint64_t))(v8 + 8);
        v21(v11, v7);
        v21(v14, v7);
        return v19;
      }
      sub_21EA59E08((uint64_t)v6, (uint64_t *)&unk_2540A6540);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  v16 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v16 = v3 & 0xFFFFFFFFFFFFLL;
  if (v16)
  {
    result = sub_21EA7D0C4(v3, v2);
    if (v17)
    {
      sub_21EAC0278(1);
      swift_bridgeObjectRelease();
      v3 = v22;
      v2 = v23;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall String.fileSuffixChain()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String result;

  sub_21EABFDB0();
  if (String.isKnownExtension()())
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v0 = sub_21EB02C48();
    swift_bridgeObjectRelease();
    v1 = sub_21EAC02EC(v0);
    v3 = v2;
    v5 = v4;
    v7 = v6;
    swift_bridgeObjectRelease();
    MEMORY[0x2207B53EC](v1, v3, v5, v7);
    swift_bridgeObjectRelease();
    v8 = String.fileSuffixChain()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    countAndFlagsBits = v8._countAndFlagsBits;
    object = v8._object;
  }
  else
  {
    swift_bridgeObjectRelease();
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

_QWORD *sub_21EAC01BC(_QWORD *a1)
{
  return sub_21EAA92A4(0, a1[2], 0, a1);
}

_QWORD *sub_21EAC01D0(_QWORD *a1)
{
  return sub_21EAA93B0(0, a1[2], 0, a1);
}

_QWORD *sub_21EAC01E4(_QWORD *a1)
{
  return sub_21EAA95C8(0, a1[2], 0, a1);
}

_QWORD *sub_21EAC01F8(_QWORD *a1)
{
  return sub_21EA5C430(0, a1[2], 0, a1);
}

void sub_21EAC0210(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2207B5B48);
}

uint64_t sub_21EAC0278(uint64_t result)
{
  char v1;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_21EB02BF4();
      if ((v1 & 1) == 0)
        return sub_21EB02BD0();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21EAC02EC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_21EB02BF4();
    return sub_21EB02C78();
  }
  return result;
}

uint64_t SetFilenameExtensionVisibilityIntent.operation.getter()
{
  unsigned __int8 v1;

  sub_21EB01EB0();
  return v1;
}

uint64_t SetFilenameExtensionVisibilityIntent.operation.setter()
{
  return sub_21EB01EBC();
}

uint64_t static ShowHideOperation.typeDisplayRepresentation.getter()
{
  return sub_21EB02090();
}

void *static ShowHideOperation.allCases.getter()
{
  return &unk_24E328348;
}

uint64_t ShowHideOperation.rawValue.getter(char a1)
{
  if (!a1)
    return 0x656C67676F74;
  if (a1 == 1)
    return 2003789939;
  return 1701079400;
}

uint64_t sub_21EAC044C(char *a1, unsigned __int8 *a2)
{
  return sub_21EAEFDA0(*a1, *a2);
}

uint64_t sub_21EAC0458()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC04E4()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAC054C()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC05D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables17ShowHideOperationO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_21EAC0600(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 2003789939;
  if (v2 != 1)
    v4 = 1701079400;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x656C67676F74;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

void sub_21EAC064C(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E328370;
}

uint64_t sub_21EAC065C()
{
  return sub_21EB02090();
}

uint64_t sub_21EAC0678()
{
  sub_21EA79B0C();
  return sub_21EB01E44();
}

uint64_t sub_21EAC06B4()
{
  sub_21EAC1A58();
  return sub_21EB02078();
}

uint64_t *SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.unsafeMutableAddressor()
{
  return &static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier;
}

uint64_t static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier = a1;
  qword_25546B298 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SetFilenameExtensionVisibilityIntent.attributionBundleIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21EAC07E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_21EB0224C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_21EB02258();
  __swift_allocate_value_buffer(v6, static SetFilenameExtensionVisibilityIntent.title);
  __swift_project_value_buffer(v6, (uint64_t)static SetFilenameExtensionVisibilityIntent.title);
  sub_21EB02B40();
  sub_21EB023E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCD328], v0);
  return sub_21EB02264();
}

uint64_t SetFilenameExtensionVisibilityIntent.title.unsafeMutableAddressor()
{
  return sub_21EA9DC78(&qword_255469B60, (uint64_t (*)(_QWORD))MEMORY[0x24BDCD380], (uint64_t)static SetFilenameExtensionVisibilityIntent.title);
}

uint64_t static SetFilenameExtensionVisibilityIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA9DCE0(&qword_255469B60, (uint64_t (*)(_QWORD))MEMORY[0x24BDCD380], (uint64_t)static SetFilenameExtensionVisibilityIntent.title, a1);
}

uint64_t sub_21EAC09BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD v14[2];
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21EB0224C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v8);
  v15 = sub_21EB02258();
  v9 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v10 = sub_21EB01FF4();
  __swift_allocate_value_buffer(v10, static SetFilenameExtensionVisibilityIntent.description);
  v14[1] = __swift_project_value_buffer(v10, (uint64_t)static SetFilenameExtensionVisibilityIntent.description);
  sub_21EB02B40();
  sub_21EB023E4();
  v11 = *MEMORY[0x24BDCD328];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v12(v6, v11, v3);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v12(v6, v11, v3);
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v15);
  return sub_21EB02000();
}

uint64_t SetFilenameExtensionVisibilityIntent.description.unsafeMutableAddressor()
{
  return sub_21EA9DC78(&qword_255469B68, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SetFilenameExtensionVisibilityIntent.description);
}

uint64_t static SetFilenameExtensionVisibilityIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EA9DCE0(&qword_255469B68, (uint64_t (*)(_QWORD))MEMORY[0x24BDB5800], (uint64_t)static SetFilenameExtensionVisibilityIntent.description, a1);
}

void (*SetFilenameExtensionVisibilityIntent.operation.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_21EB01EA4();
  return sub_21EA9DDF4;
}

uint64_t SetFilenameExtensionVisibilityIntent.$operation.getter()
{
  return sub_21EB01EC8();
}

void *SetFilenameExtensionVisibilityIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static SetFilenameExtensionVisibilityIntent.openAppWhenRun;
}

uint64_t static SetFilenameExtensionVisibilityIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static SetFilenameExtensionVisibilityIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B2A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B2A8);
  MEMORY[0x24BDAC7A8](v1);
  sub_21EAA8910();
  sub_21EB02054();
  sub_21EB02048();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B2B0);
  sub_21EB0203C();
  swift_release();
  sub_21EB02048();
  sub_21EB02060();
  return sub_21EB02030();
}

uint64_t SetFilenameExtensionVisibilityIntent.perform()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21EAC0EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255469B60 != -1)
    swift_once();
  v2 = sub_21EB02258();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static SetFilenameExtensionVisibilityIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_21EAC0F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables36SetFilenameExtensionVisibilityIntentVACycfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21EAC0F5C()
{
  sub_21EAA8910();
  return sub_21EB01E74();
}

uint64_t _s26DocumentManagerExecutables36SetFilenameExtensionVisibilityIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v22[2];
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v0 = sub_21EB0206C();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v25 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D58);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)v22 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21EB0224C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_21EB02258();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v22[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255469DE8);
  sub_21EB02B40();
  sub_21EB023E4();
  v17 = *MEMORY[0x24BDCD328];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v18(v12, v17, v9);
  sub_21EB02264();
  sub_21EB02B40();
  sub_21EB023E4();
  v18(v12, v17, v9);
  sub_21EB02264();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  v28 = 2;
  v19 = sub_21EB01E8C();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v23, 1, 1, v19);
  v20(v24, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x24BDB6090], v27);
  sub_21EA79B0C();
  return sub_21EB01ED4();
}

unint64_t _s26DocumentManagerExecutables17ShowHideOperationO26caseDisplayRepresentationsSDyAC10AppIntents0H14RepresentationVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v27[2];
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v29;
  void (*v30)(char *);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AC00);
  MEMORY[0x24BDAC7A8](v0);
  v34 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255469D60);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB0224C();
  v38 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v8);
  v36 = sub_21EB02258();
  v9 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B348);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546AAD0);
  v11 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v33 = 2 * v12;
  v14 = swift_allocObject();
  v35 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_21EB09A00;
  v39 = v14 + v13;
  *(_BYTE *)(v14 + v13) = 0;
  sub_21EB02B40();
  sub_21EB023E4();
  v29 = *MEMORY[0x24BDCD328];
  v30 = *(void (**)(char *))(v38 + 104);
  v30(v6);
  sub_21EB02264();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v15 = v32;
  v16 = v36;
  v28(v32, 1, 1, v36);
  v17 = sub_21EB0200C();
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v38 = v17;
  v18 = v34;
  v37(v34, 1, 1, v17);
  sub_21EB02018();
  v27[1] = v39 + v12 + *(int *)(v40 + 48);
  *(_BYTE *)(v39 + v12) = 1;
  sub_21EB02B40();
  sub_21EB023E4();
  v19 = v6;
  v20 = v6;
  v21 = v29;
  v23 = (void (*)(char *, uint64_t, uint64_t))v30;
  v22 = v31;
  ((void (*)(char *, _QWORD, uint64_t))v30)(v20, v29, v31);
  sub_21EB02264();
  v24 = v16;
  v25 = v28;
  v28(v15, 1, 1, v24);
  v37(v18, 1, 1, v38);
  sub_21EB02018();
  v40 = v39 + v33 + *(int *)(v40 + 48);
  *(_BYTE *)(v39 + v33) = 2;
  sub_21EB02B40();
  sub_21EB023E4();
  v23(v19, v21, v22);
  sub_21EB02264();
  v25(v15, 1, 1, v36);
  v37(v18, 1, 1, v38);
  sub_21EB02018();
  return sub_21EA98754(v35);
}

uint64_t _s26DocumentManagerExecutables17ShowHideOperationO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21EAC184C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21EB01EC8();
  *a1 = result;
  return result;
}

unint64_t sub_21EAC1878()
{
  unint64_t result;

  result = qword_25546B2C0;
  if (!qword_25546B2C0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2C0);
  }
  return result;
}

unint64_t sub_21EAC18C0()
{
  unint64_t result;

  result = qword_25546B2C8;
  if (!qword_25546B2C8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2C8);
  }
  return result;
}

unint64_t sub_21EAC1908()
{
  unint64_t result;

  result = qword_25546B2D0;
  if (!qword_25546B2D0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2D0);
  }
  return result;
}

unint64_t sub_21EAC1950()
{
  unint64_t result;

  result = qword_25546B2D8;
  if (!qword_25546B2D8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2D8);
  }
  return result;
}

uint64_t sub_21EAC1994()
{
  return sub_21EA9F1DC(&qword_25546B2E0, &qword_25546B2E8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_21EAC19C4()
{
  unint64_t result;

  result = qword_25546B2F0;
  if (!qword_25546B2F0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2F0);
  }
  return result;
}

unint64_t sub_21EAC1A0C()
{
  unint64_t result;

  result = qword_25546B2F8;
  if (!qword_25546B2F8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B2F8);
  }
  return result;
}

unint64_t sub_21EAC1A58()
{
  unint64_t result;

  result = qword_25546B300;
  if (!qword_25546B300)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B300);
  }
  return result;
}

uint64_t sub_21EAC1A9C()
{
  sub_21EA79B0C();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21EAC1AE0()
{
  unint64_t result;

  result = qword_25546B308;
  if (!qword_25546B308)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B308);
  }
  return result;
}

unint64_t sub_21EAC1B28()
{
  unint64_t result;

  result = qword_25546B310;
  if (!qword_25546B310)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B310);
  }
  return result;
}

unint64_t sub_21EAC1B70()
{
  unint64_t result;

  result = qword_25546B318;
  if (!qword_25546B318)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for ShowHideOperation, &type metadata for ShowHideOperation);
    atomic_store(result, (unint64_t *)&qword_25546B318);
  }
  return result;
}

unint64_t sub_21EAC1BB8()
{
  unint64_t result;

  result = qword_25546B320;
  if (!qword_25546B320)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetFilenameExtensionVisibilityIntent, &type metadata for SetFilenameExtensionVisibilityIntent);
    atomic_store(result, (unint64_t *)&qword_25546B320);
  }
  return result;
}

unint64_t sub_21EAC1C00()
{
  unint64_t result;

  result = qword_25546B328;
  if (!qword_25546B328)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for SetFilenameExtensionVisibilityIntent, &type metadata for SetFilenameExtensionVisibilityIntent);
    atomic_store(result, (unint64_t *)&qword_25546B328);
  }
  return result;
}

uint64_t sub_21EAC1C44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21EAC1C54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t storeEnumTagSinglePayload for ShowHideOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAC1CB0 + 4 * byte_21EB0ABB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAC1CE4 + 4 * asc_21EB0ABB0[v4]))();
}

uint64_t sub_21EAC1CE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC1CEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC1CF4);
  return result;
}

uint64_t sub_21EAC1D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC1D08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAC1D0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC1D14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShowHideOperation()
{
  return &type metadata for ShowHideOperation;
}

ValueMetadata *type metadata accessor for SetFilenameExtensionVisibilityIntent()
{
  return &type metadata for SetFilenameExtensionVisibilityIntent;
}

uint64_t sub_21EAC1D40()
{
  return sub_21EA9F1DC(&qword_25546B338, &qword_25546B340, MEMORY[0x24BDB5F68]);
}

uint64_t UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  unsigned int v13;
  id v14;
  unsigned int v15;
  void *v16;
  void *v17;
  unsigned int v18;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21EB025DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self();
  if ((objc_msgSend(v10, sel_quickLookInSeparateProcess) & 1) != 0)
    return 1;
  v12 = objc_msgSend(v10, sel_quickLookInWindow);
  v13 = objc_msgSend(v12, sel_isEnabled);

  if (v13)
    v11 = objc_msgSend(v1, sel__enhancedWindowingEnabled);
  else
    v11 = 0;
  v14 = objc_msgSend(v10, sel_quickLookRestrictContentTypesThatOpenInWindow);
  v15 = objc_msgSend(v14, sel_isEnabled);

  if (v15)
  {
    sub_21EAC1FC8(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_21EAA6978((uint64_t)v5);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546B350);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_21EB09A00;
      sub_21EB02558();
      sub_21EB0254C();
      sub_21EB02540();
      v16 = (void *)sub_21EB024E0();
      v17 = (void *)sub_21EB02CE4();
      v18 = objc_msgSend(v16, sel_doc_conformsToAnyInContentTypes_, v17);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v11 & (v18 ^ 1);
    }
  }
  return (uint64_t)v11;
}

uint64_t sub_21EAC1FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Logger.Enumeration.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BE8, (uint64_t)static Logger.Enumeration);
}

uint64_t Logger.UI.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B78, (uint64_t)static Logger.UI);
}

uint64_t sub_21EAC2048(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_21EB0263C();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t Logger.DocumentManager.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B70, (uint64_t)static Logger.DocumentManager);
}

uint64_t Logger.Picker.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BA0, (uint64_t)static Logger.Picker);
}

uint64_t Logger.Analytics.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BD0, (uint64_t)static Logger.Analytics);
}

uint64_t Logger.Rename.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BA8, (uint64_t)static Logger.Rename);
}

uint64_t sub_21EAC20F8(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.DocumentManager);
}

uint64_t static Logger.DocumentManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B70, (uint64_t)static Logger.DocumentManager, a1);
}

uint64_t sub_21EAC2140(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.UI);
}

uint64_t static Logger.UI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B78, (uint64_t)static Logger.UI, a1);
}

uint64_t sub_21EAC2170@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_21EB0263C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_21EAC21D8(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.documentCreation);
}

uint64_t Logger.documentCreation.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B80, (uint64_t)static Logger.documentCreation);
}

uint64_t static Logger.documentCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B80, (uint64_t)static Logger.documentCreation, a1);
}

uint64_t sub_21EAC2234(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Persona);
}

uint64_t Logger.Persona.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B88, (uint64_t)static Logger.Persona);
}

uint64_t static Logger.Persona.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B88, (uint64_t)static Logger.Persona, a1);
}

uint64_t sub_21EAC228C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.SmartFolders);
}

uint64_t Logger.SmartFolders.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B90, (uint64_t)static Logger.SmartFolders);
}

uint64_t static Logger.SmartFolders.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B90, (uint64_t)static Logger.SmartFolders, a1);
}

uint64_t sub_21EAC22EC(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Source);
}

uint64_t Logger.Source.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469B98, (uint64_t)static Logger.Source);
}

uint64_t static Logger.Source.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469B98, (uint64_t)static Logger.Source, a1);
}

uint64_t sub_21EAC2340(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Picker);
}

uint64_t static Logger.Picker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BA0, (uint64_t)static Logger.Picker, a1);
}

uint64_t sub_21EAC2378(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Rename);
}

uint64_t static Logger.Rename.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BA8, (uint64_t)static Logger.Rename, a1);
}

uint64_t sub_21EAC23B0(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.BrowserHistory);
}

uint64_t Logger.BrowserHistory.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BB0, (uint64_t)static Logger.BrowserHistory);
}

uint64_t static Logger.BrowserHistory.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BB0, (uint64_t)static Logger.BrowserHistory, a1);
}

uint64_t sub_21EAC2408(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Tests);
}

uint64_t Logger.Tests.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BB8, (uint64_t)static Logger.Tests);
}

uint64_t static Logger.Tests.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BB8, (uint64_t)static Logger.Tests, a1);
}

uint64_t sub_21EAC245C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.DownloadService);
}

uint64_t Logger.DownloadService.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BC0, (uint64_t)static Logger.DownloadService);
}

uint64_t static Logger.DownloadService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BC0, (uint64_t)static Logger.DownloadService, a1);
}

uint64_t sub_21EAC24C0(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.StateStore);
}

uint64_t Logger.StateStore.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BC8, (uint64_t)static Logger.StateStore);
}

uint64_t static Logger.StateStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BC8, (uint64_t)static Logger.StateStore, a1);
}

uint64_t sub_21EAC251C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Analytics);
}

uint64_t static Logger.Analytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BD0, (uint64_t)static Logger.Analytics, a1);
}

uint64_t sub_21EAC255C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Application);
}

uint64_t Logger.Application.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BD8, (uint64_t)static Logger.Application);
}

uint64_t static Logger.Application.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BD8, (uint64_t)static Logger.Application, a1);
}

uint64_t sub_21EAC25BC(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.ProgressUI);
}

uint64_t Logger.ProgressUI.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BE0, (uint64_t)static Logger.ProgressUI);
}

uint64_t static Logger.ProgressUI.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BE0, (uint64_t)static Logger.ProgressUI, a1);
}

uint64_t sub_21EAC2618(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Enumeration);
}

uint64_t static Logger.Enumeration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BE8, (uint64_t)static Logger.Enumeration, a1);
}

uint64_t sub_21EAC265C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.FileProviderSyncState);
}

uint64_t Logger.FileProviderSyncState.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BF0, (uint64_t)static Logger.FileProviderSyncState);
}

uint64_t static Logger.FileProviderSyncState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BF0, (uint64_t)static Logger.FileProviderSyncState, a1);
}

uint64_t sub_21EAC26B8(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.AppIntents);
}

uint64_t Logger.AppIntents.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469BF8, (uint64_t)static Logger.AppIntents);
}

uint64_t static Logger.AppIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469BF8, (uint64_t)static Logger.AppIntents, a1);
}

uint64_t sub_21EAC2714(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Sidebar);
}

uint64_t Logger.Sidebar.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469C00, (uint64_t)static Logger.Sidebar);
}

uint64_t static Logger.Sidebar.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469C00, (uint64_t)static Logger.Sidebar, a1);
}

uint64_t sub_21EAC276C(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Preview);
}

uint64_t Logger.Preview.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469C08, (uint64_t)static Logger.Preview);
}

uint64_t static Logger.Preview.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469C08, (uint64_t)static Logger.Preview, a1);
}

uint64_t sub_21EAC27C4(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.AppPopover);
}

uint64_t Logger.AppPopover.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469C10, (uint64_t)static Logger.AppPopover);
}

uint64_t static Logger.AppPopover.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469C10, (uint64_t)static Logger.AppPopover, a1);
}

uint64_t sub_21EAC2820(uint64_t a1)
{
  return sub_21EAC283C(a1, static Logger.Widget);
}

uint64_t sub_21EAC283C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_21EB0263C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  swift_bridgeObjectRetain();
  return sub_21EB02630();
}

uint64_t Logger.Widget.unsafeMutableAddressor()
{
  return sub_21EAC2048(&qword_255469C18, (uint64_t)static Logger.Widget);
}

uint64_t static Logger.Widget.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC2170(&qword_255469C18, (uint64_t)static Logger.Widget, a1);
}

Swift::Bool __swiftcall Logger.doc_isEnabled(for:)(os_log_type_t a1)
{
  NSObject *v2;
  Swift::Bool v3;

  sub_21EAC293C();
  v2 = sub_21EB030BC();
  v3 = os_log_type_enabled(v2, a1);

  return v3;
}

unint64_t sub_21EAC293C()
{
  unint64_t result;

  result = qword_2540A6EF8;
  if (!qword_2540A6EF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2540A6EF8);
  }
  return result;
}

uint64_t DeepLinkComponents.Scheme.rawValue.getter(char a1)
{
  if (!a1)
    return 1701603686;
  if (a1 == 1)
    return 0x6F64646572616873;
  return 6450547;
}

uint64_t sub_21EAC29D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21EAEFC90(*a1, *a2);
}

uint64_t sub_21EAC29DC()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC2A78()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAC2AF0()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC2B88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables18DeepLinkComponentsO6SchemeO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_21EAC2BB4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEF73746E656D7563;
  v5 = 0x6F64646572616873;
  if (v2 != 1)
  {
    v5 = 6450547;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701603686;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t DeepLinkComponents.QueryName.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21EAC2C48
                                                            + 4 * asc_21EB0AFA0[a1]))(0x6E6F697461636F6CLL, 0xE800000000000000);
}

uint64_t sub_21EAC2C48()
{
  return 1851876211;
}

uint64_t sub_21EAC2C58()
{
  return 0x656D616E656C6966;
}

uint64_t sub_21EAC2C74()
{
  return 0x6C6165766572;
}

uint64_t sub_21EAC2C88()
{
  return 1852141679;
}

uint64_t sub_21EAC2C98()
{
  return 0x746E6F63776F6873;
}

void sub_21EAC2CB8(char *a1)
{
  sub_21EAEFAD8(*a1);
}

void sub_21EAC2CC4()
{
  char *v0;

  sub_21EAF86DC(*v0);
}

void sub_21EAC2CCC()
{
  __asm { BR              X10 }
}

uint64_t sub_21EAC2D08()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

void sub_21EAC2D8C(uint64_t a1)
{
  char *v1;

  sub_21EAF8AC0(a1, *v1);
}

uint64_t sub_21EAC2D94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables18DeepLinkComponentsO9QueryNameO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21EAC2DC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21EAC2DF0 + 4 * byte_21EB0AFAC[*v0]))();
}

void sub_21EAC2DF0(_QWORD *a1@<X8>)
{
  *a1 = 1851876211;
  a1[1] = 0xE400000000000000;
}

void sub_21EAC2E04(_QWORD *a1@<X8>)
{
  *a1 = 0x656D616E656C6966;
  a1[1] = 0xE900000000000073;
}

void sub_21EAC2E24(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6165766572;
  a1[1] = 0xE600000000000000;
}

void sub_21EAC2E3C(_QWORD *a1@<X8>)
{
  *a1 = 1852141679;
  a1[1] = 0xE400000000000000;
}

void sub_21EAC2E50(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "showcontents");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void DeepLinkComponents.DeepLinkError.localizedStringResource.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_21EB0224C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_21EB023F0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_21EB02B4C();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_21EAC2F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_21EB02B40();
  sub_21EB023E4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x24BDCD328], v1);
  return sub_21EB02264();
}

BOOL static DeepLinkComponents.DeepLinkError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t DeepLinkComponents.DeepLinkError.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DeepLinkComponents.DeepLinkError.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

void sub_21EAC31E4()
{
  char *v0;

  DeepLinkComponents.DeepLinkError.localizedStringResource.getter(*v0);
}

uint64_t _s26DocumentManagerExecutables18DeepLinkComponentsO6SchemeO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t _s26DocumentManagerExecutables18DeepLinkComponentsO9QueryNameO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_21EAC3280()
{
  unint64_t result;

  result = qword_25546B368;
  if (!qword_25546B368)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DeepLinkComponents.Scheme, &type metadata for DeepLinkComponents.Scheme);
    atomic_store(result, (unint64_t *)&qword_25546B368);
  }
  return result;
}

unint64_t sub_21EAC32C8()
{
  unint64_t result;

  result = qword_25546B370;
  if (!qword_25546B370)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DeepLinkComponents.QueryName, &type metadata for DeepLinkComponents.QueryName);
    atomic_store(result, (unint64_t *)&qword_25546B370);
  }
  return result;
}

unint64_t sub_21EAC3310()
{
  unint64_t result;

  result = qword_25546B378;
  if (!qword_25546B378)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DeepLinkComponents.DeepLinkError, &type metadata for DeepLinkComponents.DeepLinkError);
    atomic_store(result, (unint64_t *)&qword_25546B378);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents()
{
  return &type metadata for DeepLinkComponents;
}

uint64_t storeEnumTagSinglePayload for DeepLinkComponents.Scheme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAC33B0 + 4 * byte_21EB0AFBC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAC33E4 + 4 * byte_21EB0AFB7[v4]))();
}

uint64_t sub_21EAC33E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC33EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC33F4);
  return result;
}

uint64_t sub_21EAC3400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC3408);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAC340C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC3414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.Scheme()
{
  return &type metadata for DeepLinkComponents.Scheme;
}

uint64_t getEnumTagSinglePayload for DeepLinkComponents.QueryName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkComponents.QueryName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21EAC350C + 4 * byte_21EB0AFC6[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21EAC3540 + 4 * byte_21EB0AFC1[v4]))();
}

uint64_t sub_21EAC3540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC3548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC3550);
  return result;
}

uint64_t sub_21EAC355C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC3564);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21EAC3568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC3570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.QueryName()
{
  return &type metadata for DeepLinkComponents.QueryName;
}

uint64_t storeEnumTagSinglePayload for DeepLinkComponents.DeepLinkError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21EAC35D8 + 4 * byte_21EB0AFD0[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21EAC360C + 4 * byte_21EB0AFCB[v4]))();
}

uint64_t sub_21EAC360C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC3614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC361CLL);
  return result;
}

uint64_t sub_21EAC3628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC3630);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21EAC3634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC363C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkComponents.DeepLinkError()
{
  return &type metadata for DeepLinkComponents.DeepLinkError;
}

uint64_t sub_21EAC3660()
{
  return _s26DocumentManagerExecutables29DOCAssociatedObjectStorageKeyV11descriptionSSvg_0();
}

uint64_t DOCAssociatedObjectStorage.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21EA5F2C0(*(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8), a2);
}

{
  return sub_21EA5F2C0(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8) + 16), a2);
}

uint64_t DOCAssociatedObjectStorage.subscript.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;

  sub_21EAC40AC(a1, a2);
  swift_release();
  v3 = sub_21EB030F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void (*DOCAssociatedObjectStorage.subscript.modify(_QWORD *a1, _QWORD *a2))(_QWORD ***a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a2 + 8);
  v7 = sub_21EB030F8();
  v5[2] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[3] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[4] = malloc(v9);
  v10 = malloc(v9);
  v5[5] = v10;
  sub_21EA5F2C0(v6, (uint64_t)v10);
  return sub_21EAC3798;
}

{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a2 + 8);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  sub_21EA5F2C0(*(_QWORD *)(v6 + 16), (uint64_t)v9);
  return sub_21EAC39B4;
}

void sub_21EAC3798(_QWORD ***a1, char a2)
{
  _QWORD **v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *);
  uint64_t v10;

  v2 = *a1;
  v3 = (*a1)[4];
  v4 = (*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    ((void (*)(_QWORD *, _QWORD *, _QWORD *))v6[2])((*a1)[4], v4, v5);
    v8 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *v7 + 8);
    sub_21EB01F10();
    sub_21EA5F3B0((uint64_t)v3, (uint64_t)v7, v8);
    swift_release();
    v9 = (void (*)(_QWORD *, _QWORD *))v6[1];
    v9(v3, v5);
  }
  else
  {
    v10 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *v7 + 8);
    sub_21EB01F10();
    sub_21EA5F3B0((uint64_t)v4, (uint64_t)v7, v10);
    swift_release();
    v9 = (void (*)(_QWORD *, _QWORD *))v6[1];
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t DOCAssociatedObjectStorage.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_21EAC40C8(a1, a2);
  swift_release();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v3 + 8) - 8) + 8))(a1);
}

void sub_21EAC39B4(_QWORD ***a1, char a2)
{
  _QWORD **v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *);
  uint64_t v10;

  v2 = *a1;
  v3 = (*a1)[4];
  v4 = (*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    ((void (*)(_QWORD *, _QWORD *, _QWORD *))v6[2])((*a1)[4], v4, v5);
    v8 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + *v7 + 8) + 16);
    sub_21EB01F10();
    sub_21EA5F3B0((uint64_t)v3, (uint64_t)v7, v8);
    swift_release();
    v9 = (void (*)(_QWORD *, _QWORD *))v6[1];
    v9(v3, v5);
  }
  else
  {
    v10 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + *v7 + 8) + 16);
    sub_21EB01F10();
    sub_21EA5F3B0((uint64_t)v4, (uint64_t)v7, v10);
    swift_release();
    v9 = (void (*)(_QWORD *, _QWORD *))v6[1];
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t DOCAssociatedObjectStorage.nonNullValue<A>(forPropertyStorageKey:defaultValue:)@<X0>(const void *a1@<X0>, void (*a2)(id)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  void *v18;
  _OWORD v19[2];
  _OWORD v20[2];

  v9 = sub_21EB030F8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - v11;
  v13 = objc_getAssociatedObject(v4, a1);
  if (v13)
  {
    sub_21EB031B8();
    swift_unknownObjectRelease();
    sub_21EA5951C(v19, v20);
    sub_21EA5951C(v20, v19);
    v14 = swift_dynamicCast();
    v15 = *(_QWORD *)(a3 - 8);
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    if ((v14 & 1) != 0)
    {
      v16(v12, 0, 1, a3);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v12, a3);
    }
    v16(v12, 1, 1, a3);
    v13 = (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  a2(v13);
  v18 = (void *)sub_21EB034B8();
  objc_setAssociatedObject(v4, a1, v18, (void *)1);
  return swift_unknownObjectRelease();
}

id DOCAssociatedObjectStorage.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for DOCAssociatedObjectStorage(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_21EAC3C8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAC3C9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_21EA821EC(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21EA9BF44();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v5);
  sub_21EAC3D44(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_21EAC3D44(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21EB031E8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_21EB0359C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21EAC3ED8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21EB031E8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21EB035A8();
        swift_bridgeObjectRetain();
        sub_21EB02BDC();
        v9 = sub_21EB035E4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_21EAC40AC(uint64_t a1, _QWORD *a2)
{
  return sub_21EA5F3B0(a1, (uint64_t)a2, *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a2 + 8));
}

uint64_t sub_21EAC40C8(uint64_t a1, _QWORD *a2)
{
  return sub_21EA5F3B0(a1, (uint64_t)a2, *(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + *a2 + 8) + 16));
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCAssociatedObjectStorageKey(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCAssociatedObjectStorageKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAssociatedObjectStorageKey()
{
  return &type metadata for DOCAssociatedObjectStorageKey;
}

uint64_t DOCThreadSafeState.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DOCThreadSafeState.init(_:)(a1);
  return v2;
}

id *DOCThreadSafeState.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return v0;
}

uint64_t DOCThreadSafeState.__deallocating_deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance();
}

id FISentinelNode.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static FISentinelNode.createSentinelNode.getter()
{
  if (qword_2540A6828 != -1)
    swift_once();
  swift_beginAccess();
  return (id)static FISentinelNode.createSentinelNode;
}

void static FISentinelNode.createSentinelNode.setter(uint64_t a1)
{
  void *v2;

  if (qword_2540A6828 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)static FISentinelNode.createSentinelNode;
  static FISentinelNode.createSentinelNode = a1;

}

uint64_t (*static FISentinelNode.createSentinelNode.modify())()
{
  if (qword_2540A6828 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FISentinelNode.identifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  v3 = static FPItem.createDocumentSentinelItemIdentifier;
  v2 = qword_25546A448;
  a1[3] = MEMORY[0x24BEE0D00];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FISentinelNode.displayName.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static FPItem.createDocumentSentinelItemIdentifier;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FISentinelNode.fpItem.getter()
{
  return 0;
}

uint64_t FISentinelNode.typeIdentifier.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_21EB025DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_contentType);
  sub_21EB024F8();

  v6 = sub_21EB0248C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t FISentinelNode.fileSize.getter()
{
  return 0;
}

uint64_t FISentinelNode.childItemCount.getter()
{
  return 0;
}

uint64_t _s26DocumentManagerExecutables14FISentinelNodeC10providerIDSo010FPProviderG0avg_0()
{
  uint64_t v0;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = sub_21EB02B58();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FISentinelNode.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC48C4((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t FISentinelNode.doc_lastUsedDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC48C4((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t FISentinelNode.isFolder.getter()
{
  return 0;
}

uint64_t FISentinelNode.filename.getter()
{
  return 4271950;
}

uint64_t FISentinelNode.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC48C4((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], a1);
}

uint64_t sub_21EAC48C4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

id FISentinelNode.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FISentinelNode();
  return objc_msgSendSuper2(&v2, sel_init);
}

id FISentinelNode.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FISentinelNode.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FISentinelNode();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id FISentinelNode.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FISentinelNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21EAC4A38(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21EAA6164(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_21EAD01F8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21EAC4AA0()
{
  uint64_t v0;

  v0 = sub_21EB0263C();
  __swift_allocate_value_buffer(v0, static Logger.diskFormatting);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.diskFormatting);
  return sub_21EB02630();
}

uint64_t Logger.diskFormatting.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_255469C20 != -1)
    swift_once();
  v0 = sub_21EB0263C();
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.diskFormatting);
}

uint64_t static Logger.diskFormatting.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_255469C20 != -1)
    swift_once();
  v2 = sub_21EB0263C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.diskFormatting);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_21EAC4BD8()
{
  return sub_21EAC6C54();
}

uint64_t sub_21EAC4BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables16ObservableString__value;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21EAC4C40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ObservableString(0);
  result = sub_21EB02720();
  *a1 = result;
  return result;
}

void sub_21EAC4C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t aBlock;
  uint64_t v30;
  void (*v31)(uint64_t, void *);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a9;
  *(_QWORD *)(v17 + 24) = a10;
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  v18 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v33 = sub_21EA5EA84;
  v34 = v17;
  v19 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v30 = 1107296256;
  v31 = sub_21EAA71A8;
  v32 = &block_descriptor_18;
  v20 = _Block_copy(&aBlock);
  swift_release();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v18, 0, v20);
  _Block_release(v20);

  objc_msgSend(v16, sel_addAction_, v22);
  objc_msgSend(v16, sel_setPreferredAction_, v22);
  if (a11 && a8)
  {
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a11;
    *(_QWORD *)(v23 + 24) = a12;
    sub_21EA83588(a11);
    sub_21EA83588(a11);
    swift_bridgeObjectRetain();
    v24 = v19;
    v25 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
    v33 = sub_21EA5EA88;
    v34 = v23;
    aBlock = v24;
    v30 = 1107296256;
    v31 = sub_21EAA71A8;
    v32 = &block_descriptor_44;
    v26 = _Block_copy(&aBlock);
    swift_release();
    v27 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v25, 2, v26);
    _Block_release(v26);

    objc_msgSend(v16, sel_addAction_, v27);
    sub_21EA5CA7C(a11);
  }
  objc_msgSend(a13, sel_presentViewController_animated_completion_, v16, 1, 0, a7);

}

char *sub_21EAC4F78(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (**v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *);
  char *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  char *result;
  char *v30;
  char *v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  char *v43;
  id v44;
  id v45;
  char *v46;
  id v47;
  char *v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  char *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  objc_super v64;
  uint64_t v65;

  v10 = (uint64_t *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  type metadata accessor for USBEraseViewModel(0);
  swift_allocObject();
  v11 = v8;
  sub_21EAC6E68();
  sub_21EA59DC8(&qword_25546B858, type metadata accessor for USBEraseViewModel, (uint64_t)&protocol conformance descriptor for USBEraseViewModel);
  *v10 = sub_21EB0278C();
  v10[1] = v12;
  v13 = &v11[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__confirmPassword];
  type metadata accessor for ObservableString(0);
  v14 = swift_allocObject();
  sub_21EB0272C();
  v65 = v14;
  sub_21EB0296C();
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0xE000000000000000;
  v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))&v11[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
  *v15 = sub_21EAC4C7C;
  v15[1] = 0;

  v64.receiver = v11;
  v64.super_class = (Class)type metadata accessor for DOCEraseViewController();
  v16 = (char *)objc_msgSendSuper2(&v64, sel_initWithNibName_bundle_, 0, 0);
  v17 = &v16[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  swift_getKeyPath();
  swift_getKeyPath();
  v18 = v16;
  sub_21EB01F10();
  sub_21EB02744();
  v19 = (_QWORD *)(*((_QWORD *)v17 + 1) + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  *v19 = a1;
  v19[1] = a2;
  swift_bridgeObjectRelease();
  v20 = sub_21EB01F10();
  a3(v20);
  swift_release();
  sub_21EB01F10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B878);
  sub_21EB02978();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B880);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_21EB07140;
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = a5;
  v23[4] = a6;
  *(_QWORD *)(v21 + 32) = sub_21EAD210C;
  *(_QWORD *)(v21 + 40) = v23;
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v21 + 48) = sub_21EAD2118;
  *(_QWORD *)(v21 + 56) = v24;
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v25;
  v26[3] = a7;
  v26[4] = a8;
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB0278C();
  sub_21EA59DC8(&qword_25546B888, type metadata accessor for ObservableString, (uint64_t)&unk_21EB0B5F4);
  sub_21EB0278C();
  swift_release();
  swift_release();
  v27 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25546B890));
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  v28 = (void *)sub_21EB0284C();
  objc_msgSend(v18, sel_addChildViewController_, v28);
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v30 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v31 = result;
  v32 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v31, sel_setBackgroundColor_, v32);

  result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v33 = result;
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v34 = result;
  objc_msgSend(v33, sel_addSubview_, result);

  objc_msgSend(v28, sel_didMoveToParentViewController_, v18);
  objc_msgSend(v18, sel_setPreferredContentSize_, 600.0, 700.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_21EB0B2E0;
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v36 = result;
  v37 = objc_msgSend(result, sel_centerXAnchor);

  result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v38 = result;
  v39 = objc_msgSend(result, sel_centerXAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v35 + 32) = v40;
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v41 = result;
  v42 = objc_msgSend(result, sel_centerYAnchor);

  result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v43 = result;
  v44 = objc_msgSend(result, sel_centerYAnchor);

  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v44);
  *(_QWORD *)(v35 + 40) = v45;
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v46 = result;
  v47 = objc_msgSend(result, sel_widthAnchor);

  result = (char *)objc_msgSend(v18, sel_view);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v48 = result;
  v49 = objc_msgSend(result, sel_widthAnchor);

  v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
  *(_QWORD *)(v35 + 48) = v50;
  result = (char *)objc_msgSend(v28, sel_view);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v51 = result;
  v52 = objc_msgSend(result, sel_heightAnchor);

  result = (char *)objc_msgSend(v18, sel_view);
  if (result)
  {
    v53 = result;
    v54 = (void *)objc_opt_self();
    v55 = objc_msgSend(v53, sel_heightAnchor);

    v56 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v55);
    *(_QWORD *)(v35 + 56) = v56;
    sub_21EB02D08();
    sub_21EA579D4(0, &qword_25546A918);
    v57 = (void *)sub_21EB02CE4();
    swift_bridgeObjectRelease();
    objc_msgSend(v54, sel_activateConstraints_, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    return v18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_21EAC5854(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x2207B6ACC](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

uint64_t sub_21EAC58B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, void *)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v5 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2207B6ACC](v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = *(_QWORD *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel + 8);
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter);
    v10 = *(_QWORD *)(result + OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter + 8);
    sub_21EB01F10();
    sub_21EB01F10();
    v11 = a2(v8, v9, v10, v7);
    swift_release();

    result = swift_release();
    v12 = v11 & 1;
  }
  else
  {
    v12 = 0;
  }
  *a3 = v12;
  return result;
}

void sub_21EAC598C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2207B6ACC](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB01F10();
    sub_21EB02738();
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v9 + 16) && (v6 = sub_21EA82548(1u), (v7 & 1) != 0))
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v9 + 56) + v6);
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25546B878);
        sub_21EB02978();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_21EB02738();
        swift_release();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_21EB01F10();
        sub_21EB02738();
        swift_release();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease_n();
      }
      else
      {

      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  *a2 = 1;
}

char *sub_21EAC5DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *result;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, void *(*)(), _QWORD *, char *);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = a1 + 16;
  swift_beginAccess();
  result = (char *)MEMORY[0x2207B6ACC](v5);
  if (result)
  {
    v7 = result;
    result = (char *)(id)_DocumentManagerBundle();
    if (result)
    {
      v8 = result;
      sub_21EB02168();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_21EB08F10;
      v10 = (uint64_t *)(*(_QWORD *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel
                                     + 8]
                      + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
      v12 = *v10;
      v11 = v10[1];
      *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 + 64) = sub_21EA5EA3C();
      *(_QWORD *)(v9 + 32) = v12;
      *(_QWORD *)(v9 + 40) = v11;
      swift_bridgeObjectRetain();
      v13 = sub_21EB02B64();
      v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = (char *)(id)_DocumentManagerBundle();
      if (result)
      {
        v16 = result;
        v34 = sub_21EB02168();
        v18 = v17;

        result = (char *)(id)_DocumentManagerBundle();
        if (result)
        {
          v19 = result;
          v31 = v13;
          v32 = v15;
          v20 = a2;
          v33 = a3;
          v30 = sub_21EB02168();
          v22 = v21;

          result = (char *)(id)_DocumentManagerBundle();
          if (result)
          {
            v23 = result;
            v24 = sub_21EB02168();
            v26 = v25;

            v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD, void *(*)(), _QWORD *, char *))&v7[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
            v28 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v29 = (_QWORD *)swift_allocObject();
            v29[2] = v28;
            v29[3] = v20;
            v29[4] = v33;
            sub_21EB01F10();
            sub_21EB01F10();
            sub_21EB01F10();
            v27(v31, v32, v34, v18, v30, v22, v24, v26, nullsub_1, 0, sub_21EAD2160, v29, v7);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            return (char *)swift_release();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

void *sub_21EAC61C4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  void *result;
  void *v5;
  uint64_t v6;

  v3 = a1 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x2207B6ACC](v3);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, sel_dismissViewControllerAnimated_completion_, 1, 0);
    v6 = sub_21EB01F10();
    a2(v6);

    return (void *)swift_release();
  }
  return result;
}

id sub_21EAC62AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCEraseViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21EAC6338(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21EAC6368()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = (id)_DocumentManagerBundle();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x21EAC64FCLL);
  }
  v1 = v0;
  v2 = sub_21EB02168();

  return v2;
}

void sub_21EAC6510(char *a1)
{
  sub_21EAEF774(*a1);
}

void sub_21EAC651C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21EB035A8();
  __asm { BR              X9 }
}

uint64_t sub_21EAC6564()
{
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

void sub_21EAC65BC()
{
  __asm { BR              X10 }
}

uint64_t sub_21EAC65F4()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

void sub_21EAC6638()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_21EB035A8();
  __asm { BR              X9 }
}

uint64_t sub_21EAC667C()
{
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC66D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21EAD1E68();
  *a1 = result;
  return result;
}

uint64_t sub_21EAC6700()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21EAC672C + 4 * byte_21EB0B30C[*v0]))();
}

void sub_21EAC672C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7461667865;
  a1[1] = v1;
}

void sub_21EAC6740(_QWORD *a1@<X8>)
{
  *a1 = 7562856;
  a1[1] = 0xE300000000000000;
}

void sub_21EAC6754(_QWORD *a1@<X8>)
{
  *a1 = 1936093281;
  a1[1] = 0xE400000000000000;
}

void sub_21EAC6768(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E328558;
}

uint64_t sub_21EAC6778(char a1)
{
  uint64_t result;
  void *v2;
  uint64_t v3;

  if (!a1)
    return 1701736270;
  if (a1 == 1)
  {
    result = (uint64_t)(id)_DocumentManagerBundle();
    if (result)
    {
      v2 = (void *)result;
LABEL_8:
      v3 = sub_21EB02168();

      return v3;
    }
    __break(1u);
  }
  else
  {
    result = (uint64_t)(id)_DocumentManagerBundle();
    if (result)
    {
      v2 = (void *)result;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21EAC68D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21EAEFE90(*a1, *a2);
}

uint64_t sub_21EAC68DC()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC6984()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAC6A08()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAC6AAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21EAD1EB0();
  *a1 = result;
  return result;
}

void sub_21EAC6AD8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE900000000000064;
  v5 = 0x6574707972636E65;
  if (v2 != 1)
  {
    v5 = 0x736E655365736163;
    v4 = 0xED00006576697469;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_21EAC6B40(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t property wrapper backing initializer of USBEraseViewModel.name()
{
  return sub_21EB0272C();
}

uint64_t sub_21EAC6B78()
{
  return sub_21EAC6C54();
}

uint64_t property wrapper backing initializer of USBEraseViewModel.selectedFormat()
{
  return sub_21EB0272C();
}

uint64_t sub_21EAC6BB8()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21EAC6C2C()
{
  return sub_21EAC6D18();
}

uint64_t sub_21EAC6C40()
{
  return sub_21EAC6C54();
}

uint64_t sub_21EAC6C54()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t _s26DocumentManagerExecutables17USBEraseViewModelC9encryptedSbSgvpfP_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B388);
  return sub_21EB0272C();
}

uint64_t sub_21EAC6D04()
{
  return sub_21EAC6D18();
}

uint64_t sub_21EAC6D18()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t property wrapper backing initializer of USBEraseViewModel.showingFormats(uint64_t a1)
{
  return sub_21EAC6DAC(a1, &qword_25546B390);
}

uint64_t sub_21EAC6D8C()
{
  return sub_21EAC6E00();
}

uint64_t property wrapper backing initializer of USBEraseViewModel.showingOptions(uint64_t a1)
{
  return sub_21EAC6DAC(a1, &qword_25546B398);
}

uint64_t sub_21EAC6DAC(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return sub_21EB0272C();
}

uint64_t sub_21EAC6DEC()
{
  return sub_21EAC6E00();
}

uint64_t sub_21EAC6E00()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21EAC6E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;

  *(_QWORD *)&v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3F8);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v40 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3E8);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3C8);
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3A8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__name;
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_21EB0272C();
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v15(v14, v13, v10);
  v16 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__selectedFormat;
  LOBYTE(v43) = 3;
  sub_21EB0272C();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16, v9, v6);
  v17 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__encrypted;
  LOBYTE(v43) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B388);
  sub_21EB0272C();
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v18(v17, v5, v3);
  v19 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__password;
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_21EB0272C();
  v15(v19, v13, v10);
  v20 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__caseSensitive;
  LOBYTE(v43) = 2;
  sub_21EB0272C();
  v18(v20, v5, v3);
  v21 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingFormats;
  v22 = MEMORY[0x24BEE4AF8];
  v43 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B390);
  v23 = v37;
  sub_21EB0272C();
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v21, v23, v39);
  v24 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingOptions;
  v43 = sub_21EA98548(v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B398);
  v25 = v40;
  sub_21EB0272C();
  (*(void (**)(uint64_t, char *, _QWORD))(v41 + 32))(v24, v25, v42);
  v26 = (_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  *v26 = 0;
  v26[1] = 0xE000000000000000;
  v27 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_supportedFormatsAndOptions;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255469DF8);
  inited = swift_initStackObject();
  v42 = xmmword_21EB07160;
  *(_OWORD *)(inited + 16) = xmmword_21EB07160;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = sub_21EA98548((uint64_t)&unk_24E3281A0);
  *(_BYTE *)(inited + 48) = 2;
  *(_QWORD *)(inited + 56) = sub_21EA98548((uint64_t)&unk_24E3281C8);
  *(_BYTE *)(inited + 64) = 1;
  *(_QWORD *)(inited + 72) = sub_21EA98548(v22);
  *(_BYTE *)(inited + 80) = 0;
  *(_QWORD *)(inited + 88) = sub_21EA98548(v22);
  sub_21EA98640(inited);
  *(_QWORD *)(v0 + v27) = v29;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats) = &unk_24E3281F0;
  v30 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_optionsForFormat;
  sub_21EA98640(v22);
  *(_QWORD *)(v0 + v30) = v31;
  v32 = OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255469E00);
  v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = v42;
  *(_BYTE *)(v33 + 32) = 3;
  *(_QWORD *)(v33 + 40) = &unk_24E328218;
  *(_BYTE *)(v33 + 48) = 2;
  *(_QWORD *)(v33 + 56) = &unk_24E328240;
  *(_BYTE *)(v33 + 64) = 1;
  *(_QWORD *)(v33 + 72) = &unk_24E328268;
  *(_BYTE *)(v33 + 80) = 0;
  *(_QWORD *)(v33 + 88) = &unk_24E328290;
  sub_21EA9864C(v33);
  *(_QWORD *)(v0 + v32) = v34;
  sub_21EAC7990(3);
  return v0;
}

uint64_t sub_21EAC7340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v1 = v4 & 0xFFFFFFFFFFFFLL;
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB02738();
    swift_release();
    swift_release();
    return v4;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_21EAC7438(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats)
                 + 16)
    && (sub_21EA82490(a1), (v2 & 1) != 0))
  {
    sub_21EB01F10();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_21EAD1410(v3, v1);
    swift_bridgeObjectRelease();
    swift_release();
    return v4;
  }
  else
  {
    sub_21EB032E4();
    sub_21EB02C0C();
    sub_21EB033B0();
    result = sub_21EB033C8();
    __break(1u);
  }
  return result;
}

uint64_t sub_21EAC7560(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats;
  swift_beginAccess();
  *(_QWORD *)v3 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21EB0341C();
    v4 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_10;
  }
  if (v4 < 1)
    goto LABEL_13;
  v6 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x2207B5B3C](v6, a1);
    else
      v7 = *(id *)(a1 + 8 * v6 + 32);
    v8 = v7;
    ++v6;
    v12 = v7;
    sub_21EAC76DC(&v12, v1);

  }
  while (v4 != v6);
LABEL_10:
  swift_bridgeObjectRelease();
  v12 = (id)MEMORY[0x24BEE4B08];
  v9 = swift_bridgeObjectRetain();
  sub_21EAD1C0C(v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)v3 = v11;
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    return sub_21EAC7990(*(_BYTE *)(*(_QWORD *)v3 + 32));
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_21EAC76DC(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  char v20;
  char v21;
  char v22;
  char **v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_type);
  v5 = sub_21EB02B88();
  v7 = v6;

  v8 = sub_21EAD16E4(v5, v7);
  if (v8 == 4)
    return;
  v9 = *(_QWORD *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_supportedFormatsAndOptions);
  if (!*(_QWORD *)(v9 + 16))
    return;
  v10 = v8;
  sub_21EA82490(v8);
  if ((v12 & 1) == 0)
    return;
  v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  v14 = sub_21EA98548(MEMORY[0x24BEE4AF8]);
  if (objc_msgSend(v3, sel_isEncrypted))
  {
    if (!*(_QWORD *)(v13 + 16))
      goto LABEL_12;
    v15 = sub_21EA82548(1u);
    if ((v16 & 1) == 0)
      goto LABEL_12;
    v17 = *(_BYTE *)(*(_QWORD *)(v13 + 56) + v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_21EA9B7BC(v17, 1u, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v3, sel_isCaseSensitive))
  {
    if (*(_QWORD *)(v13 + 16))
    {
      v19 = sub_21EA82548(2u);
      if ((v20 & 1) != 0)
      {
        v21 = *(_BYTE *)(*(_QWORD *)(v13 + 56) + v19);
        swift_bridgeObjectRelease();
        v22 = swift_isUniquelyReferenced_nonNull_native();
        sub_21EA9B7BC(v21, 2u, v22);
        goto LABEL_13;
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v23 = (char **)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
  swift_beginAccess();
  v24 = *v23;
  v25 = swift_isUniquelyReferenced_nonNull_native();
  *v23 = v24;
  if ((v25 & 1) == 0)
  {
    v24 = sub_21EAA983C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
    *v23 = v24;
  }
  v27 = *((_QWORD *)v24 + 2);
  v26 = *((_QWORD *)v24 + 3);
  if (v27 >= v26 >> 1)
  {
    v24 = sub_21EAA983C((char *)(v26 > 1), v27 + 1, 1, v24);
    *v23 = v24;
  }
  *((_QWORD *)v24 + 2) = v27 + 1;
  v24[v27 + 32] = v10;
  swift_endAccess();
  v28 = (uint64_t *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_optionsForFormat);
  swift_beginAccess();
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v30 = *v28;
  *v28 = 0x8000000000000000;
  sub_21EA9B688(v14, v10, v29);
  *v28 = v30;
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_21EAC7990(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  char v17;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A380);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
  *(_BYTE *)(inited + 32) = a1;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_followOnFormats);
  v17 = a1;
  if (*(_QWORD *)(v5 + 16) && (sub_21EA82490(a1), (v6 & 1) != 0))
    v7 = swift_bridgeObjectRetain();
  else
    v7 = MEMORY[0x24BEE4AF8];
  sub_21EACC608(v7);
  v8 = *(_QWORD *)(inited + 16);
  if (v8)
  {
    v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    for (i = 0; i != v8; ++i)
    {
      v11 = *v9;
      if (*(_QWORD *)(*v9 + 16))
      {
        swift_bridgeObjectRetain_n();
        __asm { BR              X9 }
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_21EB032E4();
  sub_21EB02C0C();
  sub_21EB033B0();
  sub_21EB02C0C();
  if (*(_QWORD *)(v5 + 16) && (sub_21EA82490(v17), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x2207B5524](v14, &type metadata for USBFormat);
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21EB02C0C();
  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  MEMORY[0x2207B5524](v15, &type metadata for USBFormat);
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_21EB033C8();
  __break(1u);
  return result;
}

uint64_t sub_21EAC8054()
{
  unint64_t v0;
  char v1;
  char v2;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v4 + 16) && (v0 = sub_21EA82548(1u), (v1 & 1) != 0))
  {
    v2 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v4) = v2;
  sub_21EB01F10();
  sub_21EB02744();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v4 + 16))
    sub_21EA82548(2u);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  return sub_21EB02744();
}

uint64_t USBEraseViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__name;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3A8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__selectedFormat;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__encrypted;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3C8);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v3(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__password, v2);
  v8(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__caseSensitive, v7);
  v9 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingFormats;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel__showingOptions;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B3F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t USBEraseViewModel.__deallocating_deinit()
{
  USBEraseViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21EAC83A8()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_21EAC83B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for USBEraseViewModel(0);
  result = sub_21EB02720();
  *a1 = result;
  return result;
}

uint64_t sub_21EAC83F0()
{
  return type metadata accessor for ObservableString(0);
}

uint64_t type metadata accessor for ObservableString(uint64_t a1)
{
  return sub_21EAC84C4(a1, (uint64_t *)&unk_25546B430);
}

void sub_21EAC840C()
{
  unint64_t v0;

  sub_21EAC8640(319, qword_25546B440);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for DOCEraseViewController()
{
  return objc_opt_self();
}

uint64_t sub_21EAC84A8()
{
  return type metadata accessor for USBEraseViewModel(0);
}

uint64_t type metadata accessor for USBEraseViewModel(uint64_t a1)
{
  return sub_21EAC84C4(a1, (uint64_t *)&unk_25546B558);
}

uint64_t sub_21EAC84C4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21EAC84F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_21EAC8640(319, qword_25546B440);
  if (v0 <= 0x3F)
  {
    sub_21EAC8640(319, &qword_25546B568);
    if (v1 <= 0x3F)
    {
      sub_21EAC8684(319, &qword_25546B570, &qword_25546B388);
      if (v2 <= 0x3F)
      {
        sub_21EAC8684(319, &qword_25546B578, &qword_25546B390);
        if (v3 <= 0x3F)
        {
          sub_21EAC8684(319, qword_25546B580, &qword_25546B398);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_21EAC8640(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_21EB02750();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_21EAC8684(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_21EB02750();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for USBFormatOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAC871C + 4 * byte_21EB0B31D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAC8750 + 4 * byte_21EB0B318[v4]))();
}

uint64_t sub_21EAC8750(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC8758(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC8760);
  return result;
}

uint64_t sub_21EAC876C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC8774);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAC8778(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC8780(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for USBFormatOption()
{
  return &type metadata for USBFormatOption;
}

uint64_t storeEnumTagSinglePayload for USBFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EAC87E8 + 4 * byte_21EB0B327[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EAC881C + 4 * byte_21EB0B322[v4]))();
}

uint64_t sub_21EAC881C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC8824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAC882CLL);
  return result;
}

uint64_t sub_21EAC8838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAC8840);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EAC8844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAC884C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for USBFormat()
{
  return &type metadata for USBFormat;
}

uint64_t sub_21EAC8868()
{
  return sub_21EA9F1DC(&qword_25546B828, &qword_25546B390, MEMORY[0x24BEE12E0]);
}

unint64_t sub_21EAC8898()
{
  unint64_t result;

  result = qword_25546B830;
  if (!qword_25546B830)
  {
    result = MEMORY[0x2207B694C](&unk_21EB0B4B4, &type metadata for USBFormat);
    atomic_store(result, (unint64_t *)&qword_25546B830);
  }
  return result;
}

unint64_t sub_21EAC88E0()
{
  unint64_t result;

  result = qword_25546B838;
  if (!qword_25546B838)
  {
    result = MEMORY[0x2207B694C](&unk_21EB0B4F4, &type metadata for USBFormat);
    atomic_store(result, (unint64_t *)&qword_25546B838);
  }
  return result;
}

unint64_t sub_21EAC8928()
{
  unint64_t result;

  result = qword_25546B840;
  if (!qword_25546B840)
  {
    result = MEMORY[0x2207B694C](&unk_21EB0B58C, &type metadata for USBFormatOption);
    atomic_store(result, (unint64_t *)&qword_25546B840);
  }
  return result;
}

unint64_t sub_21EAC8970()
{
  unint64_t result;

  result = qword_25546B848;
  if (!qword_25546B848)
  {
    result = MEMORY[0x2207B694C](&unk_21EB0B5CC, &type metadata for USBFormatOption);
    atomic_store(result, (unint64_t *)&qword_25546B848);
  }
  return result;
}

uint64_t sub_21EAC89B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v29 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8A8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8B0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8B8);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8C0);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8C8);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8D0);
  v13 = sub_21EA9F1DC(&qword_25546B8D8, &qword_25546B8D0, MEMORY[0x24BDF1988]);
  v14 = sub_21EA8E234();
  v31 = v12;
  v32 = MEMORY[0x24BEE0D00];
  v33 = v13;
  v34 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = v11;
  v32 = OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeConformance2();
  v17 = sub_21EA9F1DC(&qword_25546B8E0, &qword_25546B8C0, MEMORY[0x24BDEF170]);
  v31 = v9;
  v32 = v10;
  v33 = v16;
  v34 = v17;
  swift_getOpaqueTypeConformance2();
  sub_21EB027B0();
  LOBYTE(v16) = sub_21EB0287C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v18 = &v8[*(int *)(v6 + 36)];
  *v18 = v16;
  *(_OWORD *)(v18 + 8) = xmmword_21EB0B2F0;
  *(_OWORD *)(v18 + 24) = xmmword_21EB0B2F0;
  v18[40] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v19 = sub_21EB029E4();
  v21 = v20;
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemGroupedBackgroundColor);
  v23 = MEMORY[0x2207B5188](v22);
  v24 = sub_21EB027BC();
  LOBYTE(v6) = sub_21EB0287C();
  v25 = v29;
  sub_21EA5E094((uint64_t)v8, v29, &qword_25546B8A8);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25546B8E8) + 36);
  *(_QWORD *)v26 = v23;
  *(_QWORD *)(v26 + 8) = v24;
  *(_BYTE *)(v26 + 16) = v6;
  *(_QWORD *)(v26 + 24) = v19;
  *(_QWORD *)(v26 + 32) = v21;
  return sub_21EA59E08((uint64_t)v8, &qword_25546B8A8);
}

id sub_21EAC8C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v46 = a2;
  v3 = sub_21EB02828();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8D0);
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8C8);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8B8);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8B0);
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v37 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8F0);
  sub_21EA9F1DC(&qword_25546B8F8, &qword_25546B8F0, MEMORY[0x24BDF5428]);
  sub_21EB028A0();
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v15 = result;
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_21EB08F10;
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 8) + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
    v34[1] = a1;
    v19 = *v17;
    v18 = v17[1];
    v20 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v16 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v16 + 32) = v19;
    *(_QWORD *)(v16 + 40) = v18;
    swift_bridgeObjectRetain();
    v21 = sub_21EB02B64();
    v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v21;
    v49 = v23;
    v24 = sub_21EA9F1DC(&qword_25546B8D8, &qword_25546B8D0, MEMORY[0x24BDF1988]);
    v25 = sub_21EA8E234();
    sub_21EB02918();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v6);
    v27 = v40;
    v26 = v41;
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v5, *MEMORY[0x24BDEE5F0], v41);
    v48 = v6;
    v49 = v20;
    v50 = v24;
    v51 = v25;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v29 = v43;
    v30 = v38;
    sub_21EB0293C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v26);
    v31 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v10, v30);
    MEMORY[0x24BDAC7A8](v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546B8C0);
    v48 = v30;
    v49 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_21EA9F1DC(&qword_25546B8E0, &qword_25546B8C0, MEMORY[0x24BDEF170]);
    v32 = v37;
    v33 = v45;
    sub_21EB02948();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v33);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v46, v32, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_21EAC90EC@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  int v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int *v87;
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  __int128 *v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  _OWORD v113[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B978);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v102 = (uint64_t)&v90 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B980);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v98 = (uint64_t)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v101 = (uint64_t)&v90 - v12;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B988);
  v100 = *(_QWORD *)(v97 - 8);
  v13 = MEMORY[0x24BDAC7A8](v97);
  v96 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v90 - v15;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B990);
  v99 = *(_QWORD *)(v95 - 8);
  v17 = MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v90 - v19;
  v104 = a1;
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  v22 = result;
  v92 = a2;
  v93 = v7;
  v23 = sub_21EB02168();
  v25 = v24;

  v105 = v23;
  v106 = v25;
  sub_21EA8E234();
  v105 = sub_21EB028D0();
  v106 = v26;
  v107 = v27 & 1;
  v108 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B998);
  v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B9A0);
  v30 = sub_21EA9F1DC(&qword_25546B9A8, &qword_25546B9A0, MEMORY[0x24BDF53E0]);
  v109 = v29;
  v110 = v30;
  swift_getOpaqueTypeConformance2();
  v103 = v20;
  v31 = sub_21EB029CC();
  MEMORY[0x24BDAC7A8](v31);
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v32 = result;
  v33 = sub_21EB02168();
  v35 = v34;

  v105 = v33;
  v106 = v35;
  v105 = sub_21EB028D0();
  v106 = v36;
  v107 = v37 & 1;
  v108 = v38;
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v39 = result;
  v40 = sub_21EB02168();
  v42 = v41;

  v109 = v40;
  v110 = v42;
  v109 = sub_21EB028D0();
  v110 = v43;
  v111 = v44 & 1;
  v112 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9B0);
  sub_21EAD27AC();
  sub_21EB029D8();
  v113[0] = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)v113);
  v46 = *(_QWORD *)(v105 + 16);
  v47 = swift_bridgeObjectRelease();
  if (!v46)
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v101, 1, 1, v57);
    goto LABEL_8;
  }
  MEMORY[0x24BDAC7A8](v47);
  result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v48 = result;
  v49 = sub_21EB02168();
  v51 = v50;

  v105 = v49;
  v106 = v51;
  v105 = sub_21EB028D0();
  v106 = v52;
  v107 = v53 & 1;
  v108 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9D8);
  sub_21EAD2898();
  v55 = v101;
  sub_21EB029CC();
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9F8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 0, 1, v56);
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)v113);
  v58 = v105;
  v60 = v102;
  v59 = v103;
  if (!*(_QWORD *)(v105 + 16) || (v61 = sub_21EA82548(1u), (v62 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v63 = *(unsigned __int8 *)(*(_QWORD *)(v58 + 56) + v61);
  v64 = swift_bridgeObjectRelease();
  if (v63 != 1)
  {
LABEL_14:
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA00);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v60, 1, 1, v73);
    goto LABEL_15;
  }
  MEMORY[0x24BDAC7A8](v64);
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v65 = result;
    v66 = sub_21EB02168();
    v68 = v67;

    v105 = v66;
    v106 = v68;
    v109 = sub_21EB028D0();
    v110 = v69;
    v111 = v70 & 1;
    v112 = v71;
    sub_21EACAF84(a1, (uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA18);
    sub_21EA9F1DC(&qword_25546BA20, &qword_25546BA10, MEMORY[0x24BDF5428]);
    sub_21EAD291C();
    sub_21EB029D8();
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v60, 0, 1, v72);
    v59 = v103;
LABEL_15:
    v74 = v60;
    v75 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
    v76 = v94;
    v77 = v95;
    v75(v94, v59, v95);
    v78 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    v79 = v96;
    v91 = v16;
    v80 = v16;
    v81 = v97;
    v78(v96, v80, v97);
    v82 = v101;
    v83 = v98;
    sub_21EA5E094(v101, v98, &qword_25546B980);
    v84 = v74;
    v85 = (uint64_t)v93;
    sub_21EA5E094(v84, (uint64_t)v93, &qword_25546B978);
    v86 = v92;
    v75(v92, v76, v77);
    v87 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25546BA08);
    v78(&v86[v87[12]], v79, v81);
    sub_21EA5E094(v83, (uint64_t)&v86[v87[16]], &qword_25546B980);
    sub_21EA5E094(v85, (uint64_t)&v86[v87[20]], &qword_25546B978);
    sub_21EA59E08(v102, &qword_25546B978);
    sub_21EA59E08(v82, &qword_25546B980);
    v88 = *(void (**)(char *, uint64_t))(v100 + 8);
    v88(v91, v81);
    v89 = *(void (**)(char *, uint64_t))(v99 + 8);
    v89(v103, v77);
    sub_21EA59E08(v85, &qword_25546B978);
    sub_21EA59E08(v83, &qword_25546B980);
    v88(v79, v81);
    return (id)((uint64_t (*)(char *, uint64_t))v89)(v76, v77);
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_21EAC9B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];

  v15[3] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21EB02834();
  v15[1] = v8;
  v15[2] = v7;
  v15[0] = v9;
  v10 = *(_QWORD *)(a1 + 8);
  type metadata accessor for USBEraseViewModel(0);
  sub_21EA59DC8(&qword_25546B858, type metadata accessor for USBEraseViewModel, (uint64_t)&protocol conformance descriptor for USBEraseViewModel);
  sub_21EB02798();
  swift_getKeyPath();
  sub_21EB027A4();
  swift_release();
  swift_release();
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName);
  v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_originalName + 8);
  v15[4] = v11;
  v15[5] = v12;
  sub_21EA8E234();
  swift_bridgeObjectRetain();
  sub_21EB028D0();
  sub_21EB029F0();
  v13 = sub_21EA9F1DC(&qword_25546B9A8, &qword_25546B9A0, MEMORY[0x24BDF53E0]);
  MEMORY[0x2207B514C](1, v3, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21EAC9D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v22 = a2;
  v3 = sub_21EB0281C();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9C0);
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA58);
  v10 = *(_QWORD *)(v9 - 8);
  v20 = v9;
  v21 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for USBEraseViewModel(0);
  sub_21EA59DC8(&qword_25546B858, type metadata accessor for USBEraseViewModel, (uint64_t)&protocol conformance descriptor for USBEraseViewModel);
  sub_21EB02798();
  swift_getKeyPath();
  sub_21EB027A4();
  swift_release();
  swift_release();
  v28 = v24;
  v29 = v25;
  v30 = v26;
  v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA60);
  sub_21EAC8898();
  sub_21EAD2AC0();
  sub_21EB0299C();
  sub_21EB02810();
  v13 = sub_21EA9F1DC(&qword_25546B9C8, &qword_25546B9C0, MEMORY[0x24BDF4570]);
  v14 = MEMORY[0x24BDEE580];
  sub_21EB02900();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  v24 = v6;
  v25 = v3;
  v26 = v13;
  v27 = v14;
  swift_getOpaqueTypeConformance2();
  v15 = v20;
  sub_21EB02930();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v12, v15);
}

uint64_t sub_21EAC9FFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21EACA078()
{
  char v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02744();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  swift_release();
  return sub_21EAC7990(v1);
}

uint64_t sub_21EACA140(__int128 *a1)
{
  __int128 v2;

  v2 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v2);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B390);
  sub_21EA9F1DC(&qword_25546BA70, &qword_25546B390, MEMORY[0x24BEE12D8]);
  sub_21EAC8898();
  return sub_21EB029C0();
}

uint64_t sub_21EACA250@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_21EAC6338(*a1);
  sub_21EA8E234();
  result = sub_21EB028D0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_21EACA2A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v8;
  __int128 v9;

  v9 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v9);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_21EAA2184(v2);
  swift_bridgeObjectRelease();
  v8 = v3;
  sub_21EAC4A38(&v8);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 80) = *(_QWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  sub_21EAD25E8(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B9F0);
  sub_21EA9F1DC(&qword_25546BA50, &qword_25546BA48, MEMORY[0x24BEE12D8]);
  sub_21EAC8928();
  sub_21EA9F1DC(&qword_25546B9E8, &qword_25546B9F0, MEMORY[0x24BDF46D0]);
  return sub_21EB029C0();
}

uint64_t sub_21EACA46C(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v3 = *a1;
  sub_21EAC6778(*a1);
  sub_21EB02DE0();
  sub_21EAD25E8(a2);
  v4 = sub_21EB02DD4();
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 80) = v7;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 48) = v8;
  *(_BYTE *)(v5 + 104) = v3;
  sub_21EAD25E8(a2);
  v9 = sub_21EB02DD4();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v6;
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v10 + 80) = v11;
  *(_QWORD *)(v10 + 96) = *(_QWORD *)(a2 + 64);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v10 + 48) = v12;
  *(_BYTE *)(v10 + 104) = v3;
  sub_21EB029B4();
  sub_21EA8E234();
  return sub_21EB029A8();
}

uint64_t sub_21EACA5B4@<X0>(__int128 *a1@<X2>, unsigned __int8 a2@<W3>, _BYTE *a3@<X8>)
{
  unint64_t v5;
  char v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10;

  v10 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v10);
  if (*(_QWORD *)(v9 + 16) && (v5 = sub_21EA82548(a2), (v6 & 1) != 0))
  {
    v7 = *(_BYTE *)(*(_QWORD *)(v9 + 56) + v5);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  *a3 = v7;
  return result;
}

uint64_t sub_21EACA688(char *a1, uint64_t a2, uint64_t a3, __int128 *a4, unsigned __int8 a5)
{
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  char v9;
  __int128 v10;

  v6 = *a1;
  v10 = *a4;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21EA9B7BC(v6, a5, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02744();
  sub_21EAC8054();
  sub_21EAD26C4((uint64_t)&v10);
  if (a5 != 1)
  {
    v9 = sub_21EB034C4();
    result = swift_bridgeObjectRelease();
    if (v6 & 1 | ((v9 & 1) == 0))
      return result;
    goto LABEL_5;
  }
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
LABEL_5:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB01F10();
    return sub_21EB02744();
  }
  return result;
}

id sub_21EACA86C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  id result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v61 = a1;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA30);
  v66 = *(_QWORD *)(v69 - 8);
  v1 = MEMORY[0x24BDAC7A8](v69);
  v58 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v55 - v3;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA38);
  v5 = MEMORY[0x24BDAC7A8](v67);
  v60 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v59 = (uint64_t)&v55 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v55 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v55 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v55 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v55 - v16;
  v17 = sub_21EB02834();
  v64 = v18;
  v65 = (void (*)(char *, char *, uint64_t))v17;
  v62 = v19;
  v63 = v20;
  type metadata accessor for USBEraseViewModel(0);
  sub_21EA59DC8(&qword_25546B858, type metadata accessor for USBEraseViewModel, (uint64_t)&protocol conformance descriptor for USBEraseViewModel);
  sub_21EB02798();
  swift_getKeyPath();
  sub_21EB027A4();
  swift_release();
  swift_release();
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v22 = result;
    v23 = sub_21EB02168();
    v25 = v24;

    v70 = v23;
    v71 = v25;
    sub_21EA8E234();
    sub_21EB028D0();
    sub_21EB02774();
    KeyPath = swift_getKeyPath();
    v27 = sub_21EB02B88();
    v29 = v28;
    v30 = v66;
    v31 = v69;
    v65 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v65(v15, v4, v69);
    v32 = (uint64_t *)&v15[*(int *)(v67 + 36)];
    *v32 = KeyPath;
    v32[1] = v27;
    v32[2] = v29;
    v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v4, v31);
    sub_21EA59D84((uint64_t)v15, v68, &qword_25546BA38);
    v66 = sub_21EB02834();
    v63 = v35;
    v64 = v34;
    v62 = v36;
    type metadata accessor for ObservableString(0);
    sub_21EA59DC8(&qword_25546B888, type metadata accessor for ObservableString, (uint64_t)&unk_21EB0B5F4);
    sub_21EB02798();
    swift_getKeyPath();
    sub_21EB027A4();
    swift_release();
    swift_release();
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v37 = result;
      v38 = sub_21EB02168();
      v40 = v39;

      v70 = v38;
      v71 = v40;
      sub_21EB028D0();
      v41 = v58;
      sub_21EB02774();
      v42 = swift_getKeyPath();
      v43 = sub_21EB02B88();
      v45 = v44;
      v46 = (uint64_t)v56;
      v47 = v69;
      v65(v56, v41, v69);
      v48 = (uint64_t *)(v46 + *(int *)(v67 + 36));
      *v48 = v42;
      v48[1] = v43;
      v48[2] = v45;
      v33(v41, v47);
      v49 = v57;
      sub_21EA59D84(v46, v57, &qword_25546BA38);
      v50 = v68;
      v51 = v59;
      sub_21EA5E094(v68, v59, &qword_25546BA38);
      v52 = v60;
      sub_21EA5E094(v49, v60, &qword_25546BA38);
      v53 = v61;
      sub_21EA5E094(v51, v61, &qword_25546BA38);
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546BA40);
      sub_21EA5E094(v52, v53 + *(int *)(v54 + 48), &qword_25546BA38);
      sub_21EA59E08(v49, &qword_25546BA38);
      sub_21EA59E08(v50, &qword_25546BA38);
      sub_21EA59E08(v52, &qword_25546BA38);
      return (id)sub_21EA59E08(v51, &qword_25546BA38);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21EACAE68@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACAE90(a1);
}

uint64_t sub_21EACAE7C()
{
  return sub_21EACAF08();
}

uint64_t sub_21EACAE90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_21EACAF08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  return sub_21EB02744();
}

id sub_21EACAF84@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v4 = result;
    sub_21EB02168();
    v6 = v5;

    *((_QWORD *)&v27 + 1) = v6;
    sub_21EA8E234();
    v7 = sub_21EB028D0();
    v9 = v8;
    v11 = v10 & 1;
    sub_21EB02894();
    v12 = sub_21EB028B8();
    v14 = v13;
    v16 = v15;
    swift_release();
    sub_21EAD2980(v7, v9, v11);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v27 = sub_21EB02954();
    v17 = sub_21EB028AC();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    sub_21EAD2980(v12, v14, v16 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    v27 = a1[1];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB01F10();
    sub_21EB02738();
    swift_release();
    swift_release();
    sub_21EAD26C4((uint64_t)&v27);
    result = (id)swift_bridgeObjectRelease();
    v24 = HIBYTE(*((_QWORD *)&v26 + 1)) & 0xFLL;
    if ((*((_QWORD *)&v26 + 1) & 0x2000000000000000) == 0)
      v24 = v26 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      v26 = *a1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_21EB01F10();
      sub_21EB02738();
      swift_release();
      swift_release();
      sub_21EAD26C4((uint64_t)&v26);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_21EB01F10();
      sub_21EB02738();
      swift_release();
      swift_release();
      sub_21EAD26C4((uint64_t)&v27);
      result = (id)swift_bridgeObjectRelease_n();
    }
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v19;
    *(_BYTE *)(a2 + 16) = v21 & 1;
    *(_QWORD *)(a2 + 24) = v23;
    *(_QWORD *)(a2 + 32) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21EACB2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v22 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B900);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B908);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21EB02870();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B910);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB02864();
  v24 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B918);
  sub_21EA9F1DC(&qword_25546B920, &qword_25546B918, MEMORY[0x24BDF43B0]);
  sub_21EB02780();
  sub_21EB02858();
  v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B928);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B930);
  v14 = sub_21EAD246C();
  v25 = v13;
  v26 = v14;
  swift_getOpaqueTypeConformance2();
  sub_21EB02780();
  v15 = &v4[*(int *)(v21 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  v16 = v15;
  v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v16, v7, v20);
  sub_21EB02840();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

id sub_21EACB538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B918);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v9 = result;
    v10 = sub_21EB02168();
    v12 = v11;

    v16[0] = v10;
    v16[1] = v12;
    v13 = swift_allocObject();
    v14 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v13 + 64) = v14;
    *(_QWORD *)(v13 + 80) = *(_QWORD *)(a1 + 64);
    v15 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v13 + 32) = v15;
    sub_21EAD25E8(a1);
    sub_21EA8E234();
    sub_21EB02990();
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21EACB6AC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t *v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B948);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B930);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EACB7E0((uint64_t)v2);
  v6 = sub_21EB02954();
  KeyPath = swift_getKeyPath();
  sub_21EA5E094((uint64_t)v2, (uint64_t)v5, &qword_25546B948);
  v8 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *v8 = KeyPath;
  v8[1] = v6;
  sub_21EA59E08((uint64_t)v2, &qword_25546B948);
  sub_21EB02888();
  sub_21EAD246C();
  sub_21EB028F4();
  return sub_21EA59E08((uint64_t)v5, &qword_25546B930);
}

uint64_t sub_21EACB7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t *v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B970);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B918);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B948);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EB0275C();
  v14 = sub_21EB02768();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v15 + 64) = v16;
  *(_QWORD *)(v15 + 80) = *(_QWORD *)(v2 + 64);
  v17 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v17;
  sub_21EAD25E8(v2);
  sub_21EB02984();
  v35 = *(_OWORD *)v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v35);
  v18 = v34;
  if (!*(_QWORD *)(v34 + 16) || (v19 = sub_21EA82548(1u), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v21 = *(_BYTE *)(*(_QWORD *)(v18 + 56) + v19);
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_10:
    v25 = 0;
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v35);
  v22 = v34;
  swift_bridgeObjectRelease();
  v23 = HIBYTE(*((_QWORD *)&v22 + 1)) & 0xFLL;
  if ((*((_QWORD *)&v22 + 1) & 0x2000000000000000) == 0)
    v23 = v22 & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    v32 = a1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB01F10();
    sub_21EB02738();
    swift_release();
    swift_release();
    sub_21EAD26C4((uint64_t)&v35);
    v24 = v34;
    v34 = *(_OWORD *)(v2 + 16);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21EB01F10();
    sub_21EB02738();
    swift_release();
    swift_release();
    sub_21EAD26C4((uint64_t)&v34);
    if (v24 == v33)
    {
      swift_bridgeObjectRelease_n();
      v25 = 0;
    }
    else
    {
      v30 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = v30 ^ 1;
    }
    a1 = v32;
  }
  else
  {
    v25 = 1;
  }
LABEL_11:
  KeyPath = swift_getKeyPath();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = v25 & 1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  v28 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v28 = KeyPath;
  v28[1] = (uint64_t)sub_21EAD26AC;
  v28[2] = v27;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_21EA59D84((uint64_t)v13, a1, &qword_25546B948);
}

uint64_t sub_21EACBC0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v27 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v27);
  if (LOBYTE(v24[0]) == 2)
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  else
  {
    strcpy((char *)v24, ", encrypted: ");
    HIWORD(v24[1]) = -4864;
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    v2 = v24[0];
    v3 = v24[1];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  sub_21EB02738();
  swift_release();
  swift_release();
  sub_21EAD26C4((uint64_t)&v27);
  v4 = 0xE000000000000000;
  if (LOBYTE(v24[0]) == 2)
  {
    v5 = 0;
  }
  else
  {
    sub_21EB032E4();
    swift_bridgeObjectRelease();
    v24[0] = 0xD000000000000011;
    v24[1] = 0x800000021EB12E30;
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    v5 = 0xD000000000000011;
    v4 = 0x800000021EB12E30;
  }
  v24[0] = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(v24[0] + 16);
  if (v6)
  {
    v7 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      v8 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v7 - 8);
      v9 = sub_21EB01F10();
      v8(&v26, v9);
      swift_release();
      if (v26 != 1)
        break;
      v7 += 16;
      if (!--v6)
      {
        sub_21EAD26EC((uint64_t)v24);
        goto LABEL_12;
      }
    }
    sub_21EAD26EC((uint64_t)v24);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    v23 = v5;
    if (qword_255469B78 != -1)
      swift_once();
    v10 = sub_21EB0263C();
    __swift_project_value_buffer(v10, (uint64_t)static Logger.UI);
    sub_21EAD25E8(a1);
    sub_21EAD25E8(a1);
    sub_21EAD25E8(a1);
    sub_21EAD25E8(a1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_21EB02624();
    v12 = sub_21EB02EDC();
    if (os_log_type_enabled(v11, v12))
    {
      v21 = v2;
      v13 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v13 = 136315906;
      sub_21EB01F10();
      v14 = sub_21EAC7340();
      v16 = v15;
      sub_21EAD26C4((uint64_t)&v27);
      v25 = sub_21EA591E4(v14, v16, &v26);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      sub_21EAD2714(a1);
      sub_21EAD2714(a1);
      *(_WORD *)(v13 + 12) = 2080;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_21EB01F10();
      sub_21EB02738();
      swift_release();
      swift_release();
      sub_21EAD26C4((uint64_t)&v27);
      sub_21EAC6338(v25);
      v25 = sub_21EA591E4(v17, v18, &v26);
      sub_21EB03134();
      swift_bridgeObjectRelease();
      sub_21EAD2714(a1);
      sub_21EAD2714(a1);
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      v25 = sub_21EA591E4(v21, v3, &v26);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 32) = 2080;
      swift_bridgeObjectRetain();
      v25 = sub_21EA591E4(v23, v4, &v26);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21EA4C000, v11, v12, "Erasing using name %s, format %s%s%s", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v22, -1, -1);
      MEMORY[0x2207B6A18](v13, -1, -1);

    }
    else
    {
      sub_21EAD2714(a1);
      sub_21EAD2714(a1);
      sub_21EAD2714(a1);
      sub_21EAD2714(a1);

      swift_bridgeObjectRelease_n();
      v19 = swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t))(a1 + 56))(v19);
  }
}

uint64_t sub_21EACC174@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_21EB02834();
  result = sub_21EB028C4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_21EACC1E8()
{
  return sub_21EB0290C();
}

uint64_t sub_21EACC200@<X0>(uint64_t a1@<X8>)
{
  return sub_21EAC89B4(a1);
}

uint64_t sub_21EACC240(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_21EA5C430(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_21EAD1080((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_21EAA2258();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_21EA5C430((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_21EACC608(uint64_t a1)
{
  char **v1;
  size_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_21EAA983C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EACC750(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x2207B5B48](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_21EAD0E64(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21EB02D08();
  }
  __break(1u);
  return result;
}

uint64_t sub_21EACC908@<X0>(_BYTE *a1@<X8>)
{
  return sub_21EACC944(a1);
}

uint64_t sub_21EACC91C()
{
  return sub_21EACC9D0();
}

uint64_t sub_21EACC930@<X0>(_BYTE *a1@<X8>)
{
  return sub_21EACC944(a1);
}

uint64_t sub_21EACC944@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21EACC9BC()
{
  return sub_21EACC9D0();
}

uint64_t sub_21EACC9D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB01F10();
  return sub_21EB02744();
}

uint64_t sub_21EACCA3C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  return sub_21EB02744();
}

uint64_t sub_21EACCAB4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21EB02738();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21EACCB2C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  sub_21EB02744();
  return sub_21EAC8054();
}

uint64_t sub_21EACCBA8(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_21EB035A8();
  sub_21EB035CC();
  v6 = sub_21EB035E4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_21EACE504(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v9 + 4 * v8) != (_DWORD)a2);
  }
  result = 0;
  LODWORD(a2) = *(_DWORD *)(*(_QWORD *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_21EACCCC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_21EB035A8();
  swift_bridgeObjectRetain();
  sub_21EB02BDC();
  v8 = sub_21EB035E4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21EB034C4() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21EB034C4() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21EACE650(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21EACCE70(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_21EB03248();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_21EA579D4(0, (unint64_t *)&qword_25546A780);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_21EB0323C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_21EADEB00(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_21EACE26C(v26, &qword_25546BFC0);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_21EADED44(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_21EB03080();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_21EA579D4(0, (unint64_t *)&qword_25546A780);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_21EB0308C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_21EB0308C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_21EACEAD0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_25546BFC0, (unint64_t *)&qword_25546A780);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_21EACD12C(uint64_t a1, char a2)
{
  sub_21EB035A8();
  __asm { BR              X10 }
}

uint64_t sub_21EACD194()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  v2 = sub_21EB035E4() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_21EACE7E8(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_21EACD3E0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_21EB03248();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_21EB0323C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_21EADEB24(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_21EACE26C(v26, &qword_25546B860);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_21EADED44(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_21EB03080();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_21EB0308C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_21EB0308C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_21EACEAD0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_25546B860, (unint64_t *)&unk_25546A770);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_21EACD69C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A790);
  result = sub_21EB032C0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      sub_21EB035A8();
      sub_21EB035CC();
      result = sub_21EB035E4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21EACD944()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B898);
  v3 = sub_21EB032C0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = sub_21EB01F10();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_21EB02B88();
      sub_21EB035A8();
      sub_21EB02BDC();
      v18 = sub_21EB035E4();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21EACDC54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7F0);
  v3 = sub_21EB032C0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_21EB01F10();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_21EB035A8();
      sub_21EB02BDC();
      result = sub_21EB035E4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21EACDF30(uint64_t a1)
{
  return sub_21EACE26C(a1, &qword_25546BFC0);
}

uint64_t sub_21EACDF3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B850);
  v3 = sub_21EB032C0();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  sub_21EB01F10();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x21EACE250);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_21EB035A8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_21EACE260(uint64_t a1)
{
  return sub_21EACE26C(a1, &qword_25546B860);
}

uint64_t sub_21EACE26C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_21EB032C0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = sub_21EB01F10();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_21EB03080();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_21EACE504(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_21EACD69C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_21EACEC60();
      goto LABEL_14;
    }
    sub_21EACF494();
  }
  v8 = *v3;
  sub_21EB035A8();
  sub_21EB035CC();
  result = sub_21EB035E4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for FINodeProperty(0);
      result = sub_21EB03524();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_21EACE650(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_21EACDC54();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_21EACEF9C();
      goto LABEL_22;
    }
    sub_21EACF9E8();
  }
  v11 = *v4;
  sub_21EB035A8();
  sub_21EB02BDC();
  result = sub_21EB035E4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_21EB034C4(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_21EB03524();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_21EB034C4();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_21EACE7E8(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_21EACDF3C();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_21EACFC94();
LABEL_8:
      sub_21EB035A8();
      __asm { BR              X10 }
    }
    result = sub_21EACF158();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x21EACEA84);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

void sub_21EACEAD0(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_21EACE26C(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_21EACF2F4(a4);
      goto LABEL_14;
    }
    sub_21EACFF84(v11, a4);
  }
  v12 = *v5;
  v13 = sub_21EB03080();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_21EA579D4(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_21EB0308C();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_21EB03524();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_21EB0308C();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

void *sub_21EACEC60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A790);
  v2 = *v0;
  v3 = sub_21EB032B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21EACEDF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B898);
  v2 = *v0;
  v3 = sub_21EB032B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21EACEF9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7F0);
  v2 = *v0;
  v3 = sub_21EB032B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21EACF14C()
{
  return sub_21EACF2F4(&qword_25546BFC0);
}

void *sub_21EACF158()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B850);
  v2 = *v0;
  v3 = sub_21EB032B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21EACF2E8()
{
  return sub_21EACF2F4(&qword_25546B860);
}

id sub_21EACF2F4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21EB032B4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21EACF494()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A790);
  result = sub_21EB032C0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    sub_21EB035A8();
    sub_21EB035CC();
    result = sub_21EB035E4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21EACF70C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B898);
  v3 = sub_21EB032C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = sub_21EB01F10();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_21EB02B88();
    sub_21EB035A8();
    v18 = v17;
    sub_21EB02BDC();
    v19 = sub_21EB035E4();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21EACF9E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7F0);
  v3 = sub_21EB032C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = sub_21EB01F10();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_21EB035A8();
    swift_bridgeObjectRetain();
    sub_21EB02BDC();
    result = sub_21EB035E4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21EACFC94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B850);
  v3 = sub_21EB032C0();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  sub_21EB01F10();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x21EACFF74);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_21EB035A8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_21EACFF84(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_21EB032C0();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = sub_21EB01F10();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_21EB03080();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21EAD01F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 v23;
  unsigned __int8 *v24;
  uint64_t v25;
  char v26;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *__dst;
  uint64_t v94;
  char *v95;
  uint64_t v96;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  result = sub_21EB0347C();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_148;
    if (v4)
      return sub_21EAD09E0(0, v4, 1, v3);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_156;
  v91 = result;
  v92 = v4;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (_BYTE *)(MEMORY[0x24BEE4AF8] + 32);
    v90 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_114:
      v80 = v9;
      if (v12 >= 2)
      {
        v81 = *v3;
        do
        {
          v82 = v12 - 2;
          if (v12 < 2)
            goto LABEL_143;
          if (!v81)
            goto LABEL_155;
          v83 = v80;
          v84 = *(_QWORD *)&v80[16 * v82 + 32];
          v85 = *(_QWORD *)&v80[16 * v12 + 24];
          sub_21EAD0B1C((_BYTE *)(v81 + v84), (_BYTE *)(v81 + *(_QWORD *)&v80[16 * v12 + 16]), v81 + v85, __dst);
          if (v2)
            break;
          if (v85 < v84)
            goto LABEL_144;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v83 = sub_21EAA5E5C((uint64_t)v83);
          if (v82 >= *((_QWORD *)v83 + 2))
            goto LABEL_145;
          v86 = &v83[16 * v82 + 32];
          *(_QWORD *)v86 = v84;
          *((_QWORD *)v86 + 1) = v85;
          v87 = *((_QWORD *)v83 + 2);
          if (v12 > v87)
            goto LABEL_146;
          memmove(&v83[16 * v12 + 16], &v83[16 * v12 + 32], 16 * (v87 - v12));
          v80 = v83;
          *((_QWORD *)v83 + 2) = v87 - 1;
          v12 = v87 - 1;
        }
        while (v87 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v90 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = v1;
  }
  else
  {
    v96 = v1;
    v7 = v6 >> 1;
    v8 = sub_21EB02D44();
    *(_QWORD *)(v8 + 16) = v7;
    v4 = v92;
    v90 = v8;
    __dst = (_BYTE *)(v8 + 32);
  }
  v10 = 0;
  v89 = v3;
  v11 = *v3;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v13 = v10++;
    if (v10 >= v4)
      goto LABEL_43;
    if (*(_BYTE *)(v11 + v10) && *(_BYTE *)(v11 + v10) != 1)
    {
      swift_bridgeObjectRelease();
      v10 = v13 + 2;
      if (v13 + 2 >= v4)
        goto LABEL_35;
      v14 = 1;
    }
    else
    {
      v14 = sub_21EB034C4();
      swift_bridgeObjectRelease();
      v10 = v13 + 2;
      if (v13 + 2 >= v4)
      {
LABEL_31:
        if ((v14 & 1) == 0)
          goto LABEL_43;
LABEL_34:
        if (v10 < v13)
          goto LABEL_149;
LABEL_35:
        if (v13 < v10)
        {
          v17 = v10 - 1;
          v18 = v13;
          while (1)
          {
            if (v18 != v17)
            {
              if (!v11)
                goto LABEL_154;
              v19 = *(_BYTE *)(v11 + v18);
              *(_BYTE *)(v11 + v18) = *(_BYTE *)(v11 + v17);
              *(_BYTE *)(v11 + v17) = v19;
            }
            v60 = ++v18 < v17--;
            if (!v60)
              goto LABEL_43;
          }
        }
        goto LABEL_43;
      }
    }
    if (v4 <= v10 + 1)
      v15 = v10 + 1;
    else
      v15 = v4;
    do
    {
      if (*(_BYTE *)(v11 + v10) && *(_BYTE *)(v11 + v10) != 1)
      {
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
          goto LABEL_43;
      }
      else
      {
        v16 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        if (((v14 ^ v16) & 1) != 0)
          goto LABEL_31;
      }
      ++v10;
    }
    while (v10 < v4);
    v10 = v15;
    if ((v14 & 1) != 0)
      goto LABEL_34;
LABEL_43:
    if (v10 < v4)
    {
      if (__OFSUB__(v10, v13))
        goto LABEL_147;
      if (v10 - v13 < v91)
        break;
    }
LABEL_63:
    if (v10 < v13)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_21EAA5C18(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v29 = *((_QWORD *)v9 + 2);
    v28 = *((_QWORD *)v9 + 3);
    v12 = v29 + 1;
    if (v29 >= v28 >> 1)
      v9 = sub_21EAA5C18((char *)(v28 > 1), v29 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v95 = v9 + 32;
    v30 = &v9[16 * v29 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v10;
    if (v29)
    {
      v31 = v9 + 32;
      while (1)
      {
        v32 = v12 - 1;
        if (v12 >= 4)
        {
          v37 = &v31[16 * v12];
          v38 = *((_QWORD *)v37 - 8);
          v39 = *((_QWORD *)v37 - 7);
          v43 = __OFSUB__(v39, v38);
          v40 = v39 - v38;
          if (v43)
            goto LABEL_131;
          v42 = *((_QWORD *)v37 - 6);
          v41 = *((_QWORD *)v37 - 5);
          v43 = __OFSUB__(v41, v42);
          v35 = v41 - v42;
          v36 = v43;
          if (v43)
            goto LABEL_132;
          v44 = v12 - 2;
          v45 = &v31[16 * v12 - 32];
          v47 = *(_QWORD *)v45;
          v46 = *((_QWORD *)v45 + 1);
          v43 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          if (v43)
            goto LABEL_134;
          v43 = __OFADD__(v35, v48);
          v49 = v35 + v48;
          if (v43)
            goto LABEL_137;
          if (v49 >= v40)
          {
            v67 = &v31[16 * v32];
            v69 = *(_QWORD *)v67;
            v68 = *((_QWORD *)v67 + 1);
            v43 = __OFSUB__(v68, v69);
            v70 = v68 - v69;
            if (v43)
              goto LABEL_141;
            v60 = v35 < v70;
            goto LABEL_101;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v61 = *((_QWORD *)v9 + 4);
            v62 = *((_QWORD *)v9 + 5);
            v43 = __OFSUB__(v62, v61);
            v54 = v62 - v61;
            v55 = v43;
            goto LABEL_95;
          }
          v34 = *((_QWORD *)v9 + 4);
          v33 = *((_QWORD *)v9 + 5);
          v43 = __OFSUB__(v33, v34);
          v35 = v33 - v34;
          v36 = v43;
        }
        if ((v36 & 1) != 0)
          goto LABEL_133;
        v44 = v12 - 2;
        v50 = &v31[16 * v12 - 32];
        v52 = *(_QWORD *)v50;
        v51 = *((_QWORD *)v50 + 1);
        v53 = __OFSUB__(v51, v52);
        v54 = v51 - v52;
        v55 = v53;
        if (v53)
          goto LABEL_136;
        v56 = &v31[16 * v32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v43 = __OFSUB__(v57, v58);
        v59 = v57 - v58;
        if (v43)
          goto LABEL_139;
        if (__OFADD__(v54, v59))
          goto LABEL_140;
        if (v54 + v59 >= v35)
        {
          v60 = v35 < v59;
LABEL_101:
          if (v60)
            v32 = v44;
          goto LABEL_103;
        }
LABEL_95:
        if ((v55 & 1) != 0)
          goto LABEL_135;
        v63 = &v31[16 * v32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v43 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v43)
          goto LABEL_138;
        if (v66 < v54)
          goto LABEL_15;
LABEL_103:
        v71 = v32 - 1;
        if (v32 - 1 >= v12)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!v11)
          goto LABEL_153;
        v72 = v10;
        v73 = v9;
        v74 = v31;
        v75 = &v31[16 * v71];
        v76 = *(_QWORD *)v75;
        v77 = &v74[16 * v32];
        v78 = *((_QWORD *)v77 + 1);
        sub_21EAD0B1C((_BYTE *)(v11 + *(_QWORD *)v75), (_BYTE *)(v11 + *(_QWORD *)v77), v11 + v78, __dst);
        if (v96)
          goto LABEL_111;
        if (v78 < v76)
          goto LABEL_128;
        if (v32 > *((_QWORD *)v73 + 2))
          goto LABEL_129;
        *(_QWORD *)v75 = v76;
        v31 = v95;
        *(_QWORD *)&v95[16 * v71 + 8] = v78;
        v79 = *((_QWORD *)v73 + 2);
        if (v32 >= v79)
          goto LABEL_130;
        v9 = v73;
        v12 = v79 - 1;
        memmove(v77, v77 + 16, 16 * (v79 - 1 - v32));
        *((_QWORD *)v73 + 2) = v79 - 1;
        v10 = v72;
        if (v79 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v4 = v92;
    if (v10 >= v92)
    {
      v2 = v96;
      v3 = v89;
      goto LABEL_114;
    }
  }
  v20 = v13 + v91;
  if (__OFADD__(v13, v91))
    goto LABEL_150;
  if (v20 >= v4)
    v20 = v4;
  if (v20 >= v13)
  {
    if (v10 != v20)
    {
      v88 = v13;
      v21 = v13 - v10;
      v22 = (unsigned __int8 *)(v11 + v10);
      v94 = v20;
      do
      {
        v23 = *(_BYTE *)(v11 + v10);
        v24 = v22;
        v25 = v21;
        do
        {
          if (v23 > 1u)
          {
            swift_bridgeObjectRelease();
            if (!v11)
              goto LABEL_152;
          }
          else
          {
            v26 = sub_21EB034C4();
            swift_bridgeObjectRelease();
            if ((v26 & 1) == 0)
              break;
            if (!v11)
              goto LABEL_152;
          }
          v23 = *v24;
          *v24 = *(v24 - 1);
          *--v24 = v23;
        }
        while (!__CFADD__(v25++, 1));
        ++v10;
        --v21;
        ++v22;
      }
      while (v10 != v94);
      v10 = v94;
      v13 = v88;
    }
    goto LABEL_63;
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  result = sub_21EB033BC();
  __break(1u);
  return result;
}

uint64_t sub_21EAD09E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = result - a3;
    v8 = (unsigned __int8 *)(*a4 + a3);
LABEL_5:
    v9 = *(_BYTE *)(v6 + v4);
    v10 = v8;
    v11 = v7;
    while (1)
    {
      if (v9 > 1u)
      {
        result = swift_bridgeObjectRelease();
        if (!v6)
        {
LABEL_14:
          __break(1u);
          return result;
        }
      }
      else
      {
        v12 = sub_21EB034C4();
        result = swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
          goto LABEL_4;
        if (!v6)
          goto LABEL_14;
      }
      v9 = *v10;
      *v10 = *(v10 - 1);
      *--v10 = v9;
      if (__CFADD__(v11++, 1))
      {
LABEL_4:
        ++v4;
        --v7;
        ++v8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_21EAD0B1C(_BYTE *__src, _BYTE *a2, unint64_t a3, _BYTE *__dst)
{
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  size_t v8;
  unint64_t v9;
  _BYTE *v10;
  char v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  char v16;
  _BYTE *v17;
  uint64_t result;
  _BYTE *v19;
  const void *v20;
  _BYTE *v21;

  v21 = __src;
  v4 = __dst;
  v5 = (_BYTE *)a3;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v20 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) != 0)
      goto LABEL_45;
    if (__dst != a2 || a3 <= (unint64_t)__dst)
      memmove(__dst, a2, a3 - (_QWORD)a2);
    v13 = &v4[v9];
    v19 = &v4[v9];
    v21 = v6;
    if (v7 >= v6 || v5 == v6)
    {
LABEL_44:
      sub_21EAA5DCC((void **)&v21, &v20, &v19);
      return 1;
    }
    while (1)
    {
      v14 = v13 - 1;
      if (*(v13 - 1) && *(v13 - 1) != 1)
      {
        swift_bridgeObjectRelease();
        v15 = v5 - 1;
      }
      else
      {
        v15 = v5 - 1;
        v16 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          v19 = v13 - 1;
          if (v5 < v13 || v15 >= v13 || v5 != v13)
            *v15 = *v14;
          v17 = v6;
          --v13;
          if (v14 <= v4)
            goto LABEL_44;
          goto LABEL_43;
        }
      }
      v17 = v6 - 1;
      if (v5 != v6 || v15 >= v6)
        *v15 = *v17;
      v21 = v6 - 1;
      if (v13 <= v4)
        goto LABEL_44;
LABEL_43:
      v6 = v17;
      v5 = v15;
      if (v17 <= v7)
        goto LABEL_44;
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v19 = &v4[v8];
    if (v6 != v7 && v6 < v5)
    {
      while (!*v6 || *v6 == 1)
      {
        v11 = sub_21EB034C4();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          goto LABEL_16;
        if (v7 != v4 || v7 >= v4 + 1)
          *v7 = *v4;
        v20 = v4 + 1;
        v12 = v6;
        ++v4;
LABEL_20:
        ++v7;
        if (v4 < v10)
        {
          v6 = v12;
          if (v12 < v5)
            continue;
        }
        v21 = v7;
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      v12 = v6 + 1;
      if (v7 < v6 || v7 >= v12 || v7 != v6)
        *v7 = *v6;
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_45:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAD0E64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21EA9F1DC(&qword_25546B870, &qword_25546B868, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25546B868);
          v12 = sub_21EAE03C8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_21EB03458();
  __break(1u);
  return result;
}

uint64_t sub_21EAD1080(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_21EAD127C(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_21EAD1410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;

  v2 = *(_QWORD *)(a1 + 16);
  v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables17USBEraseViewModel_viableFormats);
  swift_beginAccess();
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v3 = MEMORY[0x24BEE4AF8];
  v4 = 0;
  do
  {
    if (v4 == v2)
    {
      __break(1u);
      JUMPOUT(0x21EAD16C4);
    }
    v5 = v4 + 1;
    v6 = *v8;
    if (*(_QWORD *)(*v8 + 16))
    {
      swift_bridgeObjectRetain_n();
      __asm { BR              X9 }
    }
    ++v4;
  }
  while (v5 != v2);
  return v3;
}

uint64_t sub_21EAD16E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t v9;
  char v11;

  if (sub_21EB02B88() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v6 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (sub_21EB02B88() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v11 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      __asm { BR              X9; loc_21EAD1870 }
    swift_bridgeObjectRelease();
    return 1;
  }
}

void sub_21EAD1C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v2 = v1;
  v3 = 0;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = a1 + 32;
  v6 = MEMORY[0x24BEE4AF8];
LABEL_2:
  if (v3 <= v4)
    v7 = v4;
  else
    v7 = v3;
  while (v4 != v3)
  {
    if (v7 == v3)
    {
      __break(1u);
      return;
    }
    v8 = *(_BYTE *)(v5 + v3++);
    sub_21EACD12C((uint64_t)&v14, v8);
    if ((v9 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = v6;
      v13 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21EA7D508(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v15;
      }
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_21EA7D508(v11 > 1, v12 + 1, 1);
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      *(_BYTE *)(v6 + v12 + 32) = v8;
      v2 = v13;
      goto LABEL_2;
    }
  }
}

void sub_21EAD1D1C()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  void (**v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *);

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__viewModel];
  type metadata accessor for USBEraseViewModel(0);
  swift_allocObject();
  sub_21EAC6E68();
  sub_21EA59DC8(&qword_25546B858, type metadata accessor for USBEraseViewModel, (uint64_t)&protocol conformance descriptor for USBEraseViewModel);
  *v1 = sub_21EB0278C();
  v1[1] = v2;
  v3 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController__confirmPassword];
  type metadata accessor for ObservableString(0);
  swift_allocObject();
  sub_21EB0272C();
  sub_21EB0296C();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  v4 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))&v0[OBJC_IVAR____TtC26DocumentManagerExecutables22DOCEraseViewController_alertPresenter];
  *v4 = sub_21EAC4C7C;
  v4[1] = 0;

  sub_21EB033C8();
  __break(1u);
}

uint64_t sub_21EAD1E68()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_21EAD1EB0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21EAD1EF8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACCAB4(a1);
}

uint64_t sub_21EAD1F20@<X0>(_BYTE *a1@<X8>)
{
  return sub_21EACC944(a1);
}

uint64_t sub_21EAD1F44()
{
  return sub_21EACC9D0();
}

uint64_t sub_21EAD1F68@<X0>(_BYTE *a1@<X8>)
{
  return sub_21EACC944(a1);
}

uint64_t sub_21EAD1F8C()
{
  return sub_21EACC9D0();
}

uint64_t sub_21EAD1FB8@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACCAB4(a1);
}

uint64_t sub_21EAD1FE0@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACAE90(a1);
}

uint64_t sub_21EAD2004()
{
  return sub_21EACAF08();
}

uint64_t sub_21EAD2028@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACAE90(a1);
}

uint64_t sub_21EAD204C()
{
  return sub_21EACAF08();
}

uint64_t sub_21EAD2070()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAD2094@<X0>(_QWORD *a1@<X8>)
{
  return sub_21EACAE90(a1);
}

uint64_t sub_21EAD20B8()
{
  return sub_21EACAF08();
}

uint64_t sub_21EAD20DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_21EAD2100()
{
  uint64_t v0;

  sub_21EAC5854(v0);
}

uint64_t sub_21EAD210C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_21EAC58B4(*(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(v1 + 24), a1);
}

void sub_21EAD2118(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_21EAC598C(v1, a1);
}

char *sub_21EAD2124()
{
  uint64_t *v0;

  return sub_21EAC5DC0(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_56Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void *sub_21EAD2160()
{
  uint64_t v0;

  return sub_21EAC61C4(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t destroy for EraseContentView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for EraseContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v5;
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  return a1;
}

_QWORD *assignWithCopy for EraseContentView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_21EB01F10();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_21EB01F10();
  swift_release();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  sub_21EB01F10();
  swift_release();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  sub_21EB01F10();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for EraseContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EraseContentView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EraseContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EraseContentView()
{
  return &type metadata for EraseContentView;
}

uint64_t sub_21EAD2434()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_21EAD2444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21EAC8C54(*(_QWORD *)(v1 + 16), a1);
}

id sub_21EAD244C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_21EAC90EC(*(__int128 **)(v1 + 16), a1);
}

uint64_t sub_21EAD2454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21EACB2E0(*(_QWORD *)(v1 + 16), a1);
}

id sub_21EAD245C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21EACB538(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_21EAD2464()
{
  return sub_21EACB6AC();
}

unint64_t sub_21EAD246C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25546B938;
  if (!qword_25546B938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B930);
    v2[0] = sub_21EAD24F0();
    v2[1] = sub_21EA9F1DC(&qword_25546B960, &qword_25546B968, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546B938);
  }
  return result;
}

unint64_t sub_21EAD24F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25546B940;
  if (!qword_25546B940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B948);
    v2[0] = sub_21EA9F1DC(&qword_25546B920, &qword_25546B918, MEMORY[0x24BDF43B0]);
    v2[1] = sub_21EA9F1DC(&qword_25546B950, &qword_25546B958, MEMORY[0x24BDF1248]);
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546B940);
  }
  return result;
}

uint64_t sub_21EAD258C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21EB027F8();
  *a1 = result;
  return result;
}

uint64_t sub_21EAD25B4()
{
  sub_21EB01F10();
  return sub_21EB02804();
}

uint64_t sub_21EAD25E0()
{
  uint64_t v0;

  return sub_21EACBC0C(v0 + 16);
}

uint64_t sub_21EAD25E8(uint64_t a1)
{
  sub_21EB01F10();
  sub_21EB01F10();
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  return a1;
}

uint64_t sub_21EAD264C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21EB027E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_21EAD2678()
{
  return sub_21EB027EC();
}

uint64_t sub_21EAD269C()
{
  return swift_deallocObject();
}

_BYTE *sub_21EAD26AC(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_21EAD26C4(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_21EAD26EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EAD2714(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_21EAD277C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_21EAD279C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21EAC9B74(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_21EAD27A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21EAC9D44(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_21EAD27AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_25546B9B8;
  if (!qword_25546B9B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B9B0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B9C0);
    v2[3] = sub_21EB0281C();
    v2[4] = sub_21EA9F1DC(&qword_25546B9C8, &qword_25546B9C0, MEMORY[0x24BDF4570]);
    v2[5] = MEMORY[0x24BDEE580];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_21EA59DC8(&qword_25546B9D0, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546B9B8);
  }
  return result;
}

uint64_t sub_21EAD2890()
{
  uint64_t v0;

  return sub_21EACA2A8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_21EAD2898()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25546B9E0;
  if (!qword_25546B9E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B9D8);
    v2 = sub_21EA9F1DC(&qword_25546B9E8, &qword_25546B9F0, MEMORY[0x24BDF46D0]);
    result = MEMORY[0x2207B694C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25546B9E0);
  }
  return result;
}

id sub_21EAD2914@<X0>(uint64_t a1@<X8>)
{
  return sub_21EACA86C(a1);
}

unint64_t sub_21EAD291C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25546BA28;
  if (!qword_25546BA28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546BA18);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546BA28);
  }
  return result;
}

uint64_t sub_21EAD2980(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_21EAD2990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21EB027C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21EAD29B8()
{
  swift_bridgeObjectRetain();
  return sub_21EB027D4();
}

uint64_t objectdestroy_72Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAD2A3C(char *a1)
{
  uint64_t v1;

  return sub_21EACA46C(a1, v1 + 16);
}

uint64_t sub_21EAD2A48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_21EACA5B4((__int128 *)(v1 + 32), *(_BYTE *)(v1 + 104), a1);
}

uint64_t objectdestroy_95Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAD2AA8(char *a1)
{
  uint64_t v1;

  return sub_21EACA688(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (__int128 *)(v1 + 32), *(_BYTE *)(v1 + 104));
}

uint64_t sub_21EAD2AB8()
{
  uint64_t v0;

  return sub_21EACA140(*(__int128 **)(v0 + 16));
}

unint64_t sub_21EAD2AC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25546BA68;
  if (!qword_25546BA68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546BA60);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x2207B694C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25546BA68);
  }
  return result;
}

_BYTE *sub_21EAD2B1C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_21EAD2B2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25546BA78;
  if (!qword_25546BA78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8E8);
    v2[0] = sub_21EAD2BB0();
    v2[1] = sub_21EA9F1DC(&qword_25546BA90, &qword_25546BA98, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546BA78);
  }
  return result;
}

unint64_t sub_21EAD2BB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25546BA80;
  if (!qword_25546BA80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25546B8A8);
    v2[0] = sub_21EA9F1DC(&qword_25546BA88, &qword_25546B8A0, MEMORY[0x24BDED358]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207B694C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25546BA80);
  }
  return result;
}

id static UIBezierPath.folder.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 116.0, 11.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 124.46, 11.58);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.42, 14.54, 125.8, 12.14, 126.86, 13.2);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 128.0, 20.88, 128.0, 15.94, 128.0, 17.58);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0, 23.0);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.42);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 124.46, 99.42, 126.86, 97.8, 125.8, 98.86);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 118.12, 100.0, 123.06, 100.0, 121.41, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_, 116.0, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 100.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 3.54, 99.42, 6.58, 100.0, 4.94, 100.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.58, 96.46, 2.2, 98.86, 1.14, 97.8);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 90.12, 0.0, 95.06, 0.0, 93.42);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.0);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 9.88);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.58, 3.54, 0.0, 6.58, 0.0, 4.94);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 3.54, 0.58, 1.14, 2.2, 2.2, 1.14);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 9.88, 0.0, 4.94, 0.0, 6.58, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.0, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 32.22, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 36.84, 0.33, 34.58, 0.0, 35.76, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 38.35, 1.06, 37.38, 0.49, 37.89, 0.74);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 41.5, 4.46, 39.29, 1.69, 40.02, 2.61);
  objc_msgSend(v0, sel_addLineToPoint_, 41.72, 4.74);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 46.14, 9.52, 43.8, 7.33, 44.83, 8.62);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 48.26, 10.54, 46.79, 9.96, 47.51, 10.31);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 54.75, 11.0, 49.78, 11.0, 51.44, 11.0);
  objc_msgSend(v0, sel_addLineToPoint_, 116.0, 11.0);
  objc_msgSend(v0, sel_closePath);
  return v0;
}

id static UIBezierPath.document_44.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 68.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 67.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 65.57, 87.6, 67.22, 86.49, 66.49, 87.22);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 61.21, 88.0, 64.6, 88.0, 63.47, 88.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 2.43, 87.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.4, 85.57, 1.51, 87.22, 0.78, 86.49);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 81.22, 0.0, 84.61, 0.0, 83.48);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 6.78);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.4, 2.43, 0.0, 4.52, 0.0, 3.39);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 2.43, 0.4, 0.78, 1.51, 1.51, 0.78);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 6.79, 0.0, 3.4, 0.0, 4.53, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 38.87, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 47.44, 3.55, 43.89, 0.0, 43.89, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 64.45, 20.62, 48.26, 4.37, 63.63, 19.8);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 68.0, 29.2, 68.0, 24.17, 68.0, 24.17);
  objc_msgSend(v0, sel_addLineToPoint_, 68.0, 81.22);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

id static UIBezierPath.document_84.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 128.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 127.23);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 123.36, 167.24, 126.51, 165.11, 125.11, 166.51);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 115.04, 168.0, 121.52, 168.0, 119.36, 168.0);
  objc_msgSend(v0, sel_addLineToPoint_, 12.96, 168.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 4.64, 167.24);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.77, 163.36, 2.89, 166.51, 1.49, 165.11);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 155.06, 0.0, 161.52, 0.0, 159.37);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 12.94);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.77, 4.64, 0.0, 8.63, 0.0, 6.48);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 4.64, 0.76, 1.49, 2.89, 2.89, 1.49);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 12.96, 0.0, 6.49, 0.0, 8.64, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 74.38, 0.0, 12.96, 0.0, 61.39, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 90.74, 6.78, 83.97, 0.0, 83.97, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 121.22, 37.26, 92.31, 8.34, 119.66, 35.69);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 128.0, 53.62, 128.0, 44.03, 128.0, 44.03);
  objc_msgSend(v0, sel_addLineToPoint_, 128.0, 155.06);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

id static UIBezierPath.document.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  objc_msgSend(v0, sel_moveToPoint_, 192.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 190.83);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 184.92, 254.83, 189.72, 251.6, 187.6, 253.72);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 172.25, 256.0, 182.12, 256.0, 178.83, 256.0);
  objc_msgSend(v0, sel_addLineToPoint_);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 7.08, 254.83);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 1.17, 248.93, 4.4, 253.72, 2.28, 251.6);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 0.0, 236.28, 0.0, 246.13, 0.0, 242.85);
  objc_msgSend(v0, sel_addLineToPoint_, 0.0, 19.72);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 1.17, 7.07, 0.0, 13.15, 0.0, 9.87);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 7.08, 1.16, 2.28, 4.4, 4.4, 2.28);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 19.75, 0.0, 9.88, 0.0, 13.17, 0.0);
  objc_msgSend(v0, sel_addLineToPoint_, 109.25, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 134.18, 10.33, 123.85, 0.0, 123.85, 0.0);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 181.67, 57.82, 136.57, 12.71, 179.29, 55.43);
  objc_msgSend(v0, sel_addCurveToPoint_controlPoint1_controlPoint2_, 192.0, 82.75, 192.0, 68.15, 192.0, 68.15);
  objc_msgSend(v0, sel_addLineToPoint_, 192.0, 236.28);
  objc_msgSend(v0, sel_closePath);
  objc_msgSend(v0, sel_setUsesEvenOddFillRule_, 1);
  return v0;
}

void *DOCVibrancy.featureEnabled.unsafeMutableAddressor()
{
  return &static DOCVibrancy.featureEnabled;
}

uint64_t static DOCVibrancy.featureEnabled.getter()
{
  return 0;
}

char *DOCVibrancy.ConfigurationTrait.name.unsafeMutableAddressor()
{
  return static DOCVibrancy.ConfigurationTrait.name;
}

uint64_t static DOCVibrancy.ConfigurationTrait.name.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = *(_QWORD *)static DOCVibrancy.ConfigurationTrait.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static DOCVibrancy.ConfigurationTrait.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)static DOCVibrancy.ConfigurationTrait.name = a1;
  *(_QWORD *)&static DOCVibrancy.ConfigurationTrait.name[8] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static DOCVibrancy.ConfigurationTrait.name.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static DOCVibrancy.ConfigurationTrait.defaultValue.getter()
{
  return 3;
}

void sub_21EAD3E04(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21EAD3E10()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = *(_QWORD *)static DOCVibrancy.ConfigurationTrait.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t UIMutableTraits.doc_vibrancyConfiguration.getter()
{
  unsigned __int8 v1;

  sub_21EAD3EB8();
  sub_21EB02678();
  return v1;
}

unint64_t sub_21EAD3EB8()
{
  unint64_t result;

  result = qword_25546BAB0;
  if (!qword_25546BAB0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCVibrancy.ConfigurationTrait, &type metadata for DOCVibrancy.ConfigurationTrait);
    atomic_store(result, (unint64_t *)&qword_25546BAB0);
  }
  return result;
}

uint64_t UIMutableTraits.doc_vibrancyConfiguration.setter()
{
  return sub_21EAD489C();
}

uint64_t (*UIMutableTraits.doc_vibrancyConfiguration.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;

  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  sub_21EAD3EB8();
  sub_21EB02678();
  return sub_21EAD3F6C;
}

uint64_t sub_21EAD3F6C(uint64_t a1)
{
  *(_BYTE *)(a1 + 24) = 3;
  sub_21EAD3EB8();
  return sub_21EB02684();
}

uint64_t UITraitCollection.doc_vibrancyConfiguration.getter()
{
  unsigned __int8 v1;

  sub_21EAD3EB8();
  sub_21EB02FC0();
  return v1;
}

uint64_t sub_21EAD3FFC(char *a1, char *a2)
{
  return sub_21EAF0414(*a1, *a2);
}

uint64_t sub_21EAD4008()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAD407C()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAD40CC()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAD413C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21EB03470();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_21EAD4198(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1819044198;
  if (!*v1)
    v2 = 0x656B6F727473;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t DOCVibrancy.Style.Weight.rawValue.getter(char a1)
{
  if (!a1)
    return 0x7972616D697270;
  if (a1 == 1)
    return 0x7261646E6F636573;
  return 0x7972616974726574;
}

uint64_t sub_21EAD422C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21EAF04AC(*a1, *a2);
}

uint64_t sub_21EAD4238()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAD42DC()
{
  sub_21EB02BDC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAD435C()
{
  sub_21EB035A8();
  sub_21EB02BDC();
  swift_bridgeObjectRelease();
  return sub_21EB035E4();
}

uint64_t sub_21EAD43FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s26DocumentManagerExecutables11DOCVibrancyV5StyleV6WeightO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_21EAD4428(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE900000000000079;
  v5 = 0x7261646E6F636573;
  if (v2 != 1)
  {
    v5 = 0x7972616974726574;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7972616D697270;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t static DOCVibrancy.Style.fill(_:)(int a1)
{
  return (a1 << 8) | 1u;
}

uint64_t DOCVibrancy.Style.description.getter(char a1)
{
  __int128 v3;

  BYTE8(v3) = 0;
  sub_21EB033B0();
  sub_21EB02C0C();
  *(_QWORD *)&v3 = a1 & 1;
  sub_21EB033B0();
  return *(_QWORD *)((char *)&v3 + 1);
}

uint64_t static DOCVibrancy.Style.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return sub_21EAD46F4(a1 & 0xFF01, a2 & 0xFF01);
}

uint64_t sub_21EAD4544(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21EAD46F4(*a1 | (unsigned __int16)(a1[1] << 8), *a2 | (unsigned __int16)(a2[1] << 8));
}

uint64_t sub_21EAD4560()
{
  uint64_t v0;
  __int128 v2;

  BYTE8(v2) = 0;
  *(_QWORD *)&v2 = *(unsigned __int8 *)(v0 + 1);
  sub_21EB033B0();
  sub_21EB02C0C();
  sub_21EB033B0();
  return *(_QWORD *)((char *)&v2 + 1);
}

BOOL static DOCVibrancy.Configuration.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 3)
    return a2 == 3;
  if (a2 == 3)
    return 0;
  return a1 == a2;
}

BOOL static DOCVibrancy.Environment.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_21EAD4650(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v3 == 3)
    return 0;
  return v2 == v3;
}

uint64_t DOCVibrancy.Environment.hash(into:)()
{
  return sub_21EB035B4();
}

uint64_t DOCVibrancy.Environment.hashValue.getter()
{
  sub_21EB035A8();
  sub_21EB035B4();
  return sub_21EB035E4();
}

uint64_t sub_21EAD46F4(__int16 a1, __int16 a2)
{
  unsigned __int8 v2;
  char v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v2 = HIBYTE(a2);
  v3 = HIBYTE(a1);
  v4 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v5 = 1819044198;
  else
    v5 = 0x656B6F727473;
  if (v4)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v7 = 1819044198;
  else
    v7 = 0x656B6F727473;
  if ((a2 & 1) != 0)
    v8 = 0xE400000000000000;
  else
    v8 = 0xE600000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v9 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = 0;
  if ((v9 & 1) != 0)
  {
LABEL_17:
    v11 = v2;
    v12 = 0x7261646E6F636573;
    v13 = 0xE900000000000079;
    if (v3 != 1)
    {
      v12 = 0x7972616974726574;
      v13 = 0xE800000000000000;
    }
    if (v3)
      v14 = v12;
    else
      v14 = 0x7972616D697270;
    if (v3)
      v15 = v13;
    else
      v15 = 0xE700000000000000;
    if (v11)
    {
      if (v11 == 1)
      {
        v16 = 0xE900000000000079;
        if (v14 != 0x7261646E6F636573)
          goto LABEL_34;
      }
      else
      {
        v16 = 0xE800000000000000;
        if (v14 != 0x7972616974726574)
          goto LABEL_34;
      }
    }
    else
    {
      v16 = 0xE700000000000000;
      if (v14 != 0x7972616D697270)
        goto LABEL_34;
    }
    if (v15 == v16)
    {
      v10 = 1;
LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
LABEL_34:
    v10 = sub_21EB034C4();
    goto LABEL_35;
  }
  return v10 & 1;
}

uint64_t sub_21EAD489C()
{
  sub_21EAD3EB8();
  return sub_21EB02684();
}

uint64_t _s26DocumentManagerExecutables11DOCVibrancyV5StyleV6WeightO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21EB03470();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_21EAD4944()
{
  unint64_t result;

  result = qword_25546BAB8;
  if (!qword_25546BAB8)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCVibrancy.Style.Weight, &type metadata for DOCVibrancy.Style.Weight);
    atomic_store(result, (unint64_t *)&qword_25546BAB8);
  }
  return result;
}

unint64_t sub_21EAD498C()
{
  unint64_t result;

  result = qword_25546BAC0;
  if (!qword_25546BAC0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCVibrancy.Environment, &type metadata for DOCVibrancy.Environment);
    atomic_store(result, (unint64_t *)&qword_25546BAC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy()
{
  return &type metadata for DOCVibrancy;
}

ValueMetadata *type metadata accessor for DOCVibrancy.ConfigurationTrait()
{
  return &type metadata for DOCVibrancy.ConfigurationTrait;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCVibrancy.Style(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCVibrancy.Style(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EAD4ADC + 4 * byte_21EB0BEC5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_21EAD4B10 + 4 * byte_21EB0BEC0[v4]))();
}

uint64_t sub_21EAD4B10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_21EAD4B18(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x21EAD4B20);
  return result;
}

uint64_t sub_21EAD4B2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x21EAD4B34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EAD4B38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_21EAD4B40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style()
{
  return &type metadata for DOCVibrancy.Style;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style.Weight()
{
  return &type metadata for DOCVibrancy.Style.Weight;
}

uint64_t getEnumTagSinglePayload for DOCVibrancy.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21EAD4BC4 + 4 * byte_21EB0BECA[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for DOCVibrancy.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21EAD4C6C + 4 * byte_21EB0BED4[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21EAD4CA0 + 4 * byte_21EB0BECF[v5]))();
}

uint64_t sub_21EAD4CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAD4CB0);
  return result;
}

uint64_t sub_21EAD4CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAD4CC4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21EAD4CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4CDC(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_21EAD4CF0(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Configuration()
{
  return &type metadata for DOCVibrancy.Configuration;
}

uint64_t _s26DocumentManagerExecutables11DOCVibrancyV5StyleV6WeightOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAD4D5C + 4 * byte_21EB0BEDE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAD4D90 + 4 * byte_21EB0BED9[v4]))();
}

uint64_t sub_21EAD4D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAD4DA0);
  return result;
}

uint64_t sub_21EAD4DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAD4DB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAD4DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Environment()
{
  return &type metadata for DOCVibrancy.Environment;
}

uint64_t storeEnumTagSinglePayload for DOCVibrancy.Style.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21EAD4E28 + 4 * byte_21EB0BEE8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21EAD4E5C + 4 * byte_21EB0BEE3[v4]))();
}

uint64_t sub_21EAD4E5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4E64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAD4E6CLL);
  return result;
}

uint64_t sub_21EAD4E78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAD4E80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21EAD4E84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD4E8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCVibrancy.Style.Category()
{
  return &type metadata for DOCVibrancy.Style.Category;
}

unint64_t sub_21EAD4EAC()
{
  unint64_t result;

  result = qword_25546BAC8;
  if (!qword_25546BAC8)
  {
    result = MEMORY[0x2207B694C](&unk_21EB0C1AC, &type metadata for DOCVibrancy.Style.Category);
    atomic_store(result, (unint64_t *)&qword_25546BAC8);
  }
  return result;
}

uint64_t static UIView.swift_docVibrancyFeatureEnabled.getter()
{
  return 0;
}

uint64_t UIView.swift_asSecondaryStrokeViewDecoratorEmbeddable.getter()
{
  return 0;
}

uint64_t UIView.swift_asPrimaryStrokeViewDecoratorEmbeddable.getter()
{
  return 0;
}

void __swiftcall DOCAnalyticsItemTaggedEvent.init(bundleID:taggingFlow:)(DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent *__return_ptr retstr, Swift::String_optional bundleID, DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow taggingFlow)
{
  retstr->name._countAndFlagsBits = 0xD00000000000002ELL;
  retstr->name._object = (void *)0x800000021EB0EBF0;
  retstr->bundleID = bundleID;
  retstr->taggingFlow = taggingFlow;
}

unint64_t sub_21EAD4F50()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25546A388);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
  strcpy((char *)(inited + 32), "tagging_flow");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = sub_21EB02E40();
  return sub_21EA5E924(inited);
}

unint64_t (*sub_21EAD4FCC())()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v5;
  char v6;
  __int128 v7;
  _BYTE v8[16];

  v5 = v0[1];
  v6 = *((_BYTE *)v0 + 32);
  v1 = swift_allocObject();
  v2 = *v0;
  v3 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 48) = *((_BYTE *)v0 + 32);
  v7 = v2;
  sub_21EA947C0((uint64_t)&v5, (uint64_t)v8);
  sub_21EA94808((uint64_t)&v7);
  sub_21EA94808((uint64_t)v8);
  return sub_21EAD51C8;
}

uint64_t DOCAnalyticsItemTaggedEvent.TaggingFlow.rawValue.getter(uint64_t result)
{
  return result;
}

DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow_optional __swiftcall DOCAnalyticsItemTaggedEvent.TaggingFlow.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3)
    LOBYTE(rawValue) = 3;
  return (DocumentManagerExecutables::DOCAnalyticsItemTaggedEvent::TaggingFlow_optional)rawValue;
}

unint64_t sub_21EAD507C()
{
  unint64_t result;

  result = qword_25546BAD0;
  if (!qword_25546BAD0)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCAnalyticsItemTaggedEvent.TaggingFlow, &type metadata for DOCAnalyticsItemTaggedEvent.TaggingFlow);
    atomic_store(result, (unint64_t *)&qword_25546BAD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsItemTaggedEvent()
{
  return &type metadata for DOCAnalyticsItemTaggedEvent;
}

uint64_t storeEnumTagSinglePayload for DOCAnalyticsItemTaggedEvent.TaggingFlow(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21EAD511C + 4 * byte_21EB0C1E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21EAD5150 + 4 * byte_21EB0C1E0[v4]))();
}

uint64_t sub_21EAD5150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD5158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21EAD5160);
  return result;
}

uint64_t sub_21EAD516C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21EAD5174);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21EAD5178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21EAD5180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAnalyticsItemTaggedEvent.TaggingFlow()
{
  return &type metadata for DOCAnalyticsItemTaggedEvent.TaggingFlow;
}

uint64_t sub_21EAD519C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_21EAD51C8()
{
  return sub_21EAD4F50();
}

id sub_21EAD51D0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTagManager(0)), sel_init);
  static DOCTagManager.shared = (uint64_t)result;
  return result;
}

id DOCTagManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t *DOCTagManager.shared.unsafeMutableAddressor()
{
  if (qword_255469C28 != -1)
    swift_once();
  return &static DOCTagManager.shared;
}

id static DOCTagManager.shared.getter()
{
  if (qword_255469C28 != -1)
    swift_once();
  return (id)static DOCTagManager.shared;
}

uint64_t DOCTagManager.scheduleAction(_:completionBlock:)(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v11 = sub_21EB02A20();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21EB02A5C();
  v22 = *(_QWORD *)(v14 - 8);
  v23 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)&v5[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_serialQueue];
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_BYTE *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = v5;
  *(_QWORD *)(v17 + 48) = a4;
  *(_QWORD *)(v17 + 56) = a5;
  aBlock[4] = sub_21EAD5AB0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_19;
  v18 = _Block_copy(aBlock);
  sub_21EAD5AC4(a1, a2, a3);
  v19 = v5;
  sub_21EA83588(a4);
  sub_21EB02A44();
  v25 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
  return swift_release();
}

void sub_21EAD54C4(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  _QWORD *v40;

  if (a3)
  {
    if (a3 == 1)
    {
      v10 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
      v11 = a1;
      v12 = objc_msgSend(v10, sel_init);
      v13 = sub_21EAD69B8(v11);

      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v28 = sub_21EB0341C();
        swift_bridgeObjectRelease();
        if (v28 >= 1)
          goto LABEL_5;
      }
      else if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      {
LABEL_5:
        sub_21EA579D4(0, &qword_25546BC38);
        v14 = (id)FPTagFromDOCTag();
        swift_bridgeObjectRetain();
        v34 = sub_21EAD5AFC(v14, v13, 0);
        sub_21EAD5DD0(v34, v13, a5, a6);
        swift_bridgeObjectRelease();
        sub_21EAD5A78(a1, a2, 1u);
LABEL_11:

        return;
      }
      if (!a5)
      {
        sub_21EAD5A78(a1, a2, 1u);
        swift_bridgeObjectRelease();
        return;
      }
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = a5;
      v29[3] = a6;
      v29[4] = 0;
      v29[5] = v13;
      v39 = sub_21EAD86A8;
      v40 = v29;
      aBlock = MEMORY[0x24BDAC760];
      v36 = 1107296256;
      v37 = sub_21EA5EAB0;
      v38 = &block_descriptor_49;
      v30 = _Block_copy(&aBlock);
      sub_21EA83588(a5);
      sub_21EA83588(a5);
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v30);
      sub_21EA5CA7C(a5);
      sub_21EAD5A78(a1, a2, 1u);
      goto LABEL_21;
    }
    v21 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
    v22 = a1;
    v34 = a2;
    v23 = objc_msgSend(v21, sel_init);
    v24 = sub_21EAD69B8(v22);

    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (v31 >= 1)
        goto LABEL_10;
    }
    else if (*(uint64_t *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_10:
      sub_21EA579D4(0, &qword_25546BC38);
      v25 = (id)FPTagFromDOCTag();
      swift_bridgeObjectRetain();
      v26 = (id)FPTagFromDOCTag();
      v27 = sub_21EAD5AFC(v25, v24, v26);
      sub_21EAD5DD0(v27, v24, a5, a6);

      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (a5)
    {
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = a5;
      v32[3] = a6;
      v32[4] = 0;
      v32[5] = v24;
      v39 = sub_21EAD86A8;
      v40 = v32;
      aBlock = MEMORY[0x24BDAC760];
      v36 = 1107296256;
      v37 = sub_21EA5EAB0;
      v38 = &block_descriptor_56_0;
      v33 = _Block_copy(&aBlock);
      sub_21EA83588(a5);
      sub_21EA83588(a5);
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v33);
      sub_21EA5CA7C(a5);
    }

LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCTagCollectionObserver(0));
  v16 = a1;
  v17 = objc_msgSend(v15, sel_init);
  v18 = sub_21EAD69B8(v16);

  if (a5)
  {
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a5;
    v19[3] = a6;
    v19[4] = 0;
    v19[5] = v18;
    v39 = sub_21EAD86A8;
    v40 = v19;
    aBlock = MEMORY[0x24BDAC760];
    v36 = 1107296256;
    v37 = sub_21EA5EAB0;
    v38 = &block_descriptor_63_0;
    v20 = _Block_copy(&aBlock);
    sub_21EA83588(a5);
    sub_21EA83588(a5);
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v20);
    sub_21EA5CA7C(a5);
    swift_bridgeObjectRelease();
    sub_21EAD5A78(a1, a2, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_21EAD5A78(a1, a2, 0);
  }
}

uint64_t sub_21EAD5A38()
{
  uint64_t v0;

  sub_21EAD5A78(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));

  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

void sub_21EAD5A78(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

void sub_21EAD5AB0()
{
  uint64_t v0;

  sub_21EAD54C4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

id sub_21EAD5AC4(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    v3 = result;
    result = a2;
  }
  return result;
}

id sub_21EAD5AFC(void *a1, unint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;

  sub_21EAD7ECC(a2, a1, a3);
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21EB09A00;
  v6 = objc_msgSend(a1, sel_label);
  v7 = sub_21EB02B88();
  v9 = v8;

  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_21EA5EA3C();
  v12 = v11;
  *(_QWORD *)(v5 + 64) = v11;
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v9;
  if (!a3)
  {
    v17 = (uint64_t *)(v5 + 72);
    *(_QWORD *)(v5 + 96) = v10;
    *(_QWORD *)(v5 + 104) = v11;
    goto LABEL_5;
  }
  v13 = objc_msgSend(a3, sel_label);
  v14 = sub_21EB02B88();
  v16 = v15;

  v17 = (uint64_t *)(v5 + 72);
  *(_QWORD *)(v5 + 96) = v10;
  *(_QWORD *)(v5 + 104) = v12;
  if (!v16)
  {
LABEL_5:
    *v17 = 0x5D6574656C65445BLL;
    v16 = 0xE800000000000000;
    goto LABEL_6;
  }
  *v17 = v14;
LABEL_6:
  *(_QWORD *)(v5 + 80) = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
  sub_21EB03518();
  v18 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  v19 = MEMORY[0x2207B5524](v29, v18);
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 136) = v10;
  *(_QWORD *)(v5 + 144) = v12;
  *(_QWORD *)(v5 + 112) = v19;
  *(_QWORD *)(v5 + 120) = v21;
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
  v22 = (void *)sub_21EB030BC();
  sub_21EB025F4();
  swift_bridgeObjectRelease();

  v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v24 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC40);
  v25 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v27 = objc_msgSend(v23, sel_initWithItems_tagsLists_isUndoable_shouldClearUndoStack_undoManager_, v24, v25, 0, 1, v26);

  return v27;
}

void sub_21EAD5DD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  NSObject *v18;
  id v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v8 = sub_21EB02A74();
  v30 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - v12;
  v14 = dispatch_group_create();
  dispatch_group_enter(v14);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = v14;
  v16[4] = v15;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_21EAD8694;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA8423C;
  aBlock[3] = &block_descriptor_36_2;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v18 = v14;
  sub_21EA83588(a3);
  swift_release();
  objc_msgSend(a1, sel_setActionCompletionBlock_, v17);
  _Block_release(v17);
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  objc_msgSend(v19, sel_scheduleAction_, a1);

  sub_21EB02A68();
  MEMORY[0x2207B52B4](v11, v29 + OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout);
  v20 = *(void (**)(char *, uint64_t))(v30 + 8);
  v20(v11, v8);
  sub_21EB02F0C();
  v20(v13, v8);
  if ((sub_21EB02A08() & 1) != 0)
  {
    sub_21EB02EE8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_21EB07140;
    v22 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
    v23 = sub_21EA5EA3C();
    *(_QWORD *)(v21 + 64) = v23;
    *(_QWORD *)(v21 + 32) = 0xD00000000000002BLL;
    *(_QWORD *)(v21 + 40) = 0x800000021EB13590;
    v24 = objc_msgSend(a1, sel_description);
    v25 = sub_21EB02B88();
    v27 = v26;

    *(_QWORD *)(v21 + 96) = v22;
    *(_QWORD *)(v21 + 104) = v23;
    *(_QWORD *)(v21 + 72) = v25;
    *(_QWORD *)(v21 + 80) = v27;
    sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
    v28 = (void *)sub_21EB030BC();
    sub_21EB025F4();
    swift_bridgeObjectRelease();

  }
}

void sub_21EAD60EC(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD aBlock[9];

  v6 = a6;
  v7 = a5;
  v8 = a2;
  v9 = a4 + 16;
  v10 = MEMORY[0x24BEE0D00];
  if (a1)
  {
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EE8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v13 + 56) = v10;
    *(_QWORD *)(v13 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v13 + 32) = 0xD00000000000002BLL;
    *(_QWORD *)(v13 + 40) = 0x800000021EB13590;
    v14 = sub_21EB02228();
    *(_QWORD *)(v13 + 96) = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
    *(_QWORD *)(v13 + 104) = sub_21EAD85E4((unint64_t *)&qword_25546BC30, (unint64_t *)&unk_25546C300, 0x24BDD1540, MEMORY[0x24BEE5BE8]);
    *(_QWORD *)(v13 + 72) = v14;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v6 = a6;
    v8 = a2;
    v7 = a5;
  }
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21EB08F10;
  aBlock[6] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
  sub_21EB03518();
  v16 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  v17 = MEMORY[0x2207B5524](aBlock[0], v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 56) = v10;
  *(_QWORD *)(v15 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
  v20 = (void *)sub_21EB030BC();
  sub_21EB025F4();
  swift_bridgeObjectRelease();

  dispatch_group_leave(a3);
  swift_beginAccess();
  v21 = MEMORY[0x2207B6ACC](v9);
  if (v21)
  {
    v22 = (void *)v21;
    if (v7)
    {
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = v7;
      v23[3] = v6;
      v23[4] = a1;
      v23[5] = v8;
      aBlock[4] = sub_21EAD86A8;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21EA5EAB0;
      aBlock[3] = &block_descriptor_42_0;
      v24 = _Block_copy(aBlock);
      sub_21EA83588(v7);
      sub_21EA83588(v7);
      v25 = a1;
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v24);
      sub_21EA5CA7C(v7);
    }

  }
}

id DOCTagManager.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  uint64_t v17;

  v15 = sub_21EB02F48();
  v1 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02F30();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v6);
  v14 = OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_serialQueue;
  v13[1] = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v7 = v0;
  sub_21EB02A44();
  v17 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v15);
  *(_QWORD *)(v13[2] + v14) = sub_21EB02F84();
  v8 = &v7[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout];
  *(_QWORD *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables13DOCTagManager_setTagsOperationTimeout] = 30;
  v9 = *MEMORY[0x24BEE5420];
  v10 = sub_21EB029FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);

  v11 = (objc_class *)type metadata accessor for DOCTagManager(0);
  v16.receiver = v7;
  v16.super_class = v11;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t type metadata accessor for DOCTagManager(uint64_t a1)
{
  return sub_21EAC84C4(a1, (uint64_t *)&unk_25546BB20);
}

id DOCTagManager.__deallocating_deinit()
{
  return sub_21EAD7CB4(type metadata accessor for DOCTagManager);
}

void destroy for DOCTagManagerAction(uint64_t a1)
{
  sub_21EAD5A78(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s26DocumentManagerExecutables19DOCTagManagerActionOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21EAD5AC4(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCTagManagerAction(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21EAD5AC4(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21EAD5A78(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCTagManagerAction(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21EAD5A78(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCTagManagerAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCTagManagerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21EAD6880(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21EAD6888(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DOCTagManagerAction()
{
  return &type metadata for DOCTagManagerAction;
}

uint64_t sub_21EAD68F0()
{
  return type metadata accessor for DOCTagManager(0);
}

uint64_t sub_21EAD68F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21EB029FC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t (*sub_21EAD6974())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21EAD69B8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  dispatch_queue_t v27;
  uint64_t aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;

  v3 = sub_21EB02A74();
  v26 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  dispatch_group_enter(*(dispatch_group_t *)&v1[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group]);
  v9 = *(NSObject **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_21EAD7E60;
  *(_QWORD *)(v11 + 24) = v10;
  v25 = v10;
  v32 = sub_21EA5EAA8;
  v33 = v11;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_21EA5EADC;
  v31 = &block_descriptor_11;
  v12 = _Block_copy(&aBlock);
  v13 = a1;
  v14 = v1;
  sub_21EB01F10();
  swift_release();
  v27 = v9;
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v10 & 1) == 0)
  {
    sub_21EB02A68();
    MEMORY[0x2207B52B4](v6, &v14[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout]);
    v16 = *(void (**)(char *, uint64_t))(v26 + 8);
    v16(v6, v3);
    sub_21EB02F0C();
    v16(v8, v3);
    v17 = sub_21EB02A08();
    if ((v17 & 1) != 0)
    {
      sub_21EB02EE8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_21EB08F10;
      *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v18 + 64) = sub_21EA5EA3C();
      *(_QWORD *)(v18 + 32) = 0xD000000000000021;
      *(_QWORD *)(v18 + 40) = 0x800000021EB13480;
      sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
      v19 = (void *)sub_21EB030BC();
      sub_21EB025F4();
      swift_bridgeObjectRelease();

      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v14;
      v21 = swift_allocObject();
      v22 = sub_21EAD7EB4;
      *(_QWORD *)(v21 + 16) = sub_21EAD7EB4;
      *(_QWORD *)(v21 + 24) = v20;
      v32 = sub_21EA5EA80;
      v33 = v21;
      aBlock = MEMORY[0x24BDAC760];
      v29 = 1107296256;
      v30 = sub_21EA5EADC;
      v31 = &block_descriptor_21_1;
      v23 = _Block_copy(&aBlock);
      v24 = v14;
      sub_21EB01F10();
      swift_release();
      dispatch_sync(v27, v23);
      _Block_release(v23);
      LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
      v17 = swift_release();
      if ((v23 & 1) == 0)
      {
LABEL_6:
        MEMORY[0x24BDAC7A8](v17);
        *(&v25 - 2) = (uint64_t)v14;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
        sub_21EB02F6C();
        swift_release();
        sub_21EA5CA7C((uint64_t)v22);
        return aBlock;
      }
      __break(1u);
    }
    v22 = 0;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_21EAD6DDC(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v5 = objc_msgSend(a1, sel_displayName);
  if (!v5)
  {
    sub_21EB02B88();
    v5 = (id)sub_21EB02B58();
    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(v4, sel_newCollectionForTag_, v5);

  objc_msgSend(v6, sel_setWorkingQueue_, *(_QWORD *)(a2+ OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue));
  objc_msgSend(v6, sel_setDelegate_, a2);
  v7 = *(void **)(a2
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
  *(_QWORD *)(a2
            + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection) = v6;
  v8 = v6;

  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v9 + 32) = 0xD000000000000021;
  *(_QWORD *)(v9 + 40) = 0x800000021EB13480;
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
  v10 = (void *)sub_21EB030BC();
  sub_21EB025F4();
  swift_bridgeObjectRelease();

  objc_msgSend(v8, sel_doc_startObserving);
  v11 = (void *)sub_21EB02B58();
  v12 = a2
      + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collectionObservationContext;
  swift_beginAccess();
  objc_msgSend(v8, sel_addObserver_forKeyPath_options_context_, a2, v11, 1, v12);
  swift_endAccess();

}

void sub_21EAD7014(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v2 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection;
  objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection), sel_doc_stopObserving);
  v3 = *(void **)(a1 + v2);
  if (v3)
  {
    v4 = v3;
    v5 = (id)sub_21EB02B58();
    objc_msgSend(v4, sel_removeObserver_forKeyPath_, a1, v5);

  }
}

void sub_21EAD70BC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(void **)(a1
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
  if (v3)
  {
    v4 = v3;
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_21EB08F10;
    v6 = objc_msgSend(v4, sel_items);
    v7 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
    sub_21EB02CF0();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
    sub_21EB03518();
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x2207B5524](v14, v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v5 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v5 + 32) = v8;
    *(_QWORD *)(v5 + 40) = v10;
    sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
    v11 = (void *)sub_21EB030BC();
    sub_21EB025F4();
    swift_bridgeObjectRelease();

    v12 = objc_msgSend(v4, sel_items);
    v13 = sub_21EB02CF0();

  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v13;
}

void sub_21EAD72A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  objc_class *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[3];
  _QWORD *v34;
  void (*v35)();
  uint64_t v36;
  objc_super v37;

  v31 = a4;
  v9 = sub_21EB02A20();
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_21EB02A5C();
  v12 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21EAD6974();
  if (!a5)
  {
    ((void (*)(_QWORD *, _QWORD))v16)(aBlock, 0);
    if (a2)
      goto LABEL_4;
    goto LABEL_6;
  }
  v17 = v15;
  ((void (*)(_QWORD *, _QWORD))v16)(aBlock, 0);
  if (v17 != a5)
  {
    if (a2)
    {
LABEL_4:
      v18 = (void *)sub_21EB02B58();
      goto LABEL_7;
    }
LABEL_6:
    v18 = 0;
LABEL_7:
    sub_21EA5B5F0(a3, (uint64_t)aBlock);
    v19 = v34;
    if (v34)
    {
      v20 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v34);
      v21 = *(v19 - 1);
      MEMORY[0x24BDAC7A8](v20);
      v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      v24 = sub_21EB034B8();
      (*(void (**)(char *, _QWORD *))(v21 + 8))(v23, v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      if (v31)
      {
LABEL_9:
        type metadata accessor for NSKeyValueChangeKey(0);
        sub_21EA59DC8((unint64_t *)&unk_25546BC20, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_21EB08790);
        v25 = (void *)sub_21EB02AC8();
LABEL_12:
        v26 = (objc_class *)type metadata accessor for DOCTagCollectionObserver(0);
        v37.receiver = v5;
        v37.super_class = v26;
        objc_msgSendSuper2(&v37, sel_observeValueForKeyPath_ofObject_change_context_, v18, v24, v25, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      v24 = 0;
      if (v31)
        goto LABEL_9;
    }
    v25 = 0;
    goto LABEL_12;
  }
  v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v35 = sub_21EAD8648;
  v36 = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  v34 = &block_descriptor_27_1;
  v28 = _Block_copy(aBlock);
  sub_21EB01F10();
  sub_21EB02A44();
  v32 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v14, v11, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
  swift_release();
  swift_release();
}

void sub_21EAD7644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207B6ACC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_21EAD833C();

  }
}

id sub_21EAD79E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  uint64_t v19;

  v17 = sub_21EB02F48();
  v1 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21EB02F30();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_gatheringKeyPath];
  *(_QWORD *)v7 = 0x6E69726568746167;
  *((_QWORD *)v7 + 1) = 0xE900000000000067;
  v16 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue;
  v15 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v8 = v0;
  sub_21EB02A44();
  v19 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v17);
  *(_QWORD *)&v0[v16] = sub_21EB02F84();
  v9 = OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group;
  *(_QWORD *)&v8[v9] = dispatch_group_create();
  v10 = &v8[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout];
  *(_QWORD *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_spotlightQueryTimeout] = 5;
  v11 = *MEMORY[0x24BEE5420];
  v12 = sub_21EB029FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  *(_QWORD *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection] = 0;
  v8[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collectionObservationContext] = 0;

  v13 = (objc_class *)type metadata accessor for DOCTagCollectionObserver(0);
  v18.receiver = v8;
  v18.super_class = v13;
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_21EAD7CA8()
{
  return sub_21EAD7CB4(type metadata accessor for DOCTagCollectionObserver);
}

id sub_21EAD7CB4(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_21EAD7D70()
{
  return type metadata accessor for DOCTagCollectionObserver(0);
}

uint64_t type metadata accessor for DOCTagCollectionObserver(uint64_t a1)
{
  return sub_21EAC84C4(a1, (uint64_t *)&unk_25546BBF0);
}

uint64_t sub_21EAD7D8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21EB029FC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_21EAD7E34()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAD7E60()
{
  uint64_t v0;

  sub_21EAD6DDC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21EAD7E68()
{
  return swift_deallocObject();
}

void sub_21EAD7E78(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_21EAD70BC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_21EAD7E90()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAD7EB4()
{
  uint64_t v0;

  sub_21EAD7014(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21EAD7EBC()
{
  return swift_deallocObject();
}

uint64_t sub_21EAD7ECC(unint64_t a1, void *a2, void *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  void *v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_54;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  result = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v38 = v3;
    v46 = MEMORY[0x24BEE4AF8];
    sub_21EA7D52C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
      __break(1u);
LABEL_56:
      result = sub_21EB03458();
      __break(1u);
    }
    else
    {
      v6 = 0;
      result = v46;
      v39 = v4;
      v40 = v3 & 0xC000000000000001;
      v37 = v3 + 32;
      do
      {
        if (v6 == v4)
          goto LABEL_51;
        v42 = v6;
        v43 = result;
        if (v40)
          v7 = (id)MEMORY[0x2207B5B3C](v6, v3);
        else
          v7 = *(id *)(v37 + 8 * v6);
        v41 = v7;
        v8 = objc_msgSend(v7, sel_tags);
        if (v8)
        {
          v9 = v8;
          sub_21EA579D4(0, (unint64_t *)&unk_25546BFB0);
          v3 = sub_21EB02CF0();

          v45 = v3;
          if (v3 >> 62)
          {
            v35 = a2;
            swift_bridgeObjectRetain();
            v10 = sub_21EB0341C();
            if (v10)
            {
LABEL_13:
              v12 = 0;
              while (1)
              {
                v13 = (v3 & 0xC000000000000001) != 0
                    ? (id)MEMORY[0x2207B5B3C](v12, v3)
                    : *(id *)(v3 + 8 * v12 + 32);
                v14 = v13;
                v15 = objc_msgSend(v13, sel_label);
                v16 = sub_21EB02B88();
                v18 = v17;

                v19 = objc_msgSend(a2, sel_label);
                v20 = sub_21EB02B88();
                v22 = v21;

                if (v16 == v20 && v18 == v22)
                  break;
                v24 = sub_21EB034C4();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v24 & 1) != 0)
                {
                  swift_bridgeObjectRelease();

                  v28 = a3;
                  if (!a3)
                    goto LABEL_34;
LABEL_27:
                  v26 = v28;
                  if ((swift_isUniquelyReferenced_nonNull_bridgeObject() & 1) == 0
                    || (v3 & 0x8000000000000000) != 0
                    || (v3 & 0x4000000000000000) != 0)
                  {
                    sub_21EAC020C(v3);
                  }
                  if (v12 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_52;
                  v29 = *(void **)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
                  *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20) = v26;

                  goto LABEL_41;
                }
                v25 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
LABEL_51:
                  __break(1u);
LABEL_52:
                  __break(1u);
LABEL_53:
                  __break(1u);
LABEL_54:
                  swift_bridgeObjectRetain();
                  v4 = sub_21EB0341C();
                  swift_bridgeObjectRelease();
                  goto LABEL_3;
                }
                ++v12;
                if (v25 == v10)
                  goto LABEL_24;
              }
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease_n();
              v28 = a3;
              if (a3)
                goto LABEL_27;
LABEL_34:
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (v3 & 0x8000000000000000) != 0
                || (v3 & 0x4000000000000000) != 0)
              {
                sub_21EAC020C(v3);
              }
              v3 &= 0xFFFFFFFFFFFFFF8uLL;
              v30 = *(_QWORD *)(v3 + 16);
              if (v30 <= v12)
                goto LABEL_53;
              if ((uint64_t)(~v12 + v30) < 0)
                goto LABEL_56;
              v31 = v30 - 1;
              v32 = v3 + 8 * v12;
              v26 = *(id *)(v32 + 32);
              memmove((void *)(v32 + 32), (const void *)(v32 + 40), 8 * (~v12 + v30));
              *(_QWORD *)(v3 + 16) = v31;
LABEL_41:
              sub_21EB02D08();
              goto LABEL_42;
            }
          }
          else
          {
            v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            v11 = a2;
            swift_bridgeObjectRetain();
            if (v10)
              goto LABEL_13;
          }
LABEL_24:
          swift_bridgeObjectRelease();
          v26 = a2;
LABEL_42:

          v27 = v45;
          v3 = v38;
        }
        else
        {
          v27 = MEMORY[0x24BEE4AF8];
        }

        result = v43;
        v34 = *(_QWORD *)(v43 + 16);
        v33 = *(_QWORD *)(v43 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_21EA7D52C(v33 > 1, v34 + 1, 1);
          v3 = v38;
          result = v43;
        }
        v6 = v42 + 1;
        *(_QWORD *)(result + 16) = v34 + 1;
        *(_QWORD *)(result + 8 * v34 + 32) = v27;
        v4 = v39;
      }
      while (v42 + 1 != v39);
    }
  }
  return result;
}

void sub_21EAD833C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD v19[2];

  v1 = v0;
  v2 = sub_21EB02A80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_serialQueue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_21EB02AA4();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v8 = *(void **)(v1
                  + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_collection);
    if (v8)
    {
      v9 = v8;
      if ((objc_msgSend(v9, sel_isGathering) & 1) == 0
        && (*(_BYTE *)(v1
                     + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering) & 1) == 0)
      {
        *(_BYTE *)(v1
                 + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_finishedGathering) = 1;
        sub_21EB02EDC();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_21EB08F10;
        v11 = objc_msgSend(v9, sel_items);
        v12 = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
        v13 = sub_21EB02CF0();

        v19[0] = v13;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546BC00);
        sub_21EB03518();
        swift_bridgeObjectRelease();
        v14 = MEMORY[0x2207B5524](v19[1], v12);
        v16 = v15;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v10 + 64) = sub_21EA5EA3C();
        *(_QWORD *)(v10 + 32) = v14;
        *(_QWORD *)(v10 + 40) = v16;
        sub_21EA579D4(0, (unint64_t *)&qword_2540A6EF8);
        v17 = (void *)sub_21EB030BC();
        sub_21EB025F4();
        swift_bridgeObjectRelease();

        objc_msgSend(v9, sel_doc_stopObserving);
        v18 = (void *)sub_21EB02B58();
        objc_msgSend(v9, sel_removeObserver_forKeyPath_, v1, v18);

        dispatch_group_leave(*(dispatch_group_t *)(v1
                                                 + OBJC_IVAR____TtC26DocumentManagerExecutablesP33_A9279F4482FEAC8D0F3BCF83DF142AB324DOCTagCollectionObserver_group));
      }

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21EAD85E4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_21EA579D4(255, a2);
    result = MEMORY[0x2207B694C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21EAD8624()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_21EAD8648()
{
  uint64_t v0;

  sub_21EAD7644(v0);
}

uint64_t sub_21EAD8650()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

void sub_21EAD8694(void *a1)
{
  uint64_t v1;

  sub_21EAD60EC(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAD86EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(BOOL, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32) == 0, *(_QWORD *)(v0 + 40));
}

uint64_t DOCCollectionEdit.operationType.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DOCCollectionEdit.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t DOCCollectionEdit.destination.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t DOCCollectionEdit.init(_:value:destination:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t result;

  *(_QWORD *)a7 = a1;
  *(_BYTE *)(a7 + 8) = a2 & 1;
  v11 = type metadata accessor for DOCCollectionEdit(0, a5, a6, a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + *(int *)(v11 + 36), a3, a5);
  *(_QWORD *)(a7 + *(int *)(v11 + 40)) = a4;
  return result;
}

uint64_t type metadata accessor for DOCCollectionEdit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCCollectionEdit);
}

BOOL static DOCCollectionEdit.__derived_struct_equals(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  v6 = *a1;
  v7 = *(_QWORD *)a2;
  v8 = *(_BYTE *)(a2 + 8);
  if (*((_BYTE *)a1 + 8) == 1)
  {
    if (v6)
    {
      if (v6 == 1)
      {
        if (v7 != 1)
          v8 = 0;
        if ((v8 & 1) == 0)
          return 0;
      }
      else
      {
        if (v7 <= 1)
          v8 = 0;
        if ((v8 & 1) == 0)
          return 0;
      }
    }
    else
    {
      if (v7)
        v8 = 0;
      if ((v8 & 1) == 0)
        return 0;
    }
  }
  else
  {
    if (v6 != v7)
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  v9 = type metadata accessor for DOCCollectionEdit(0, a3, a4, a4);
  if ((sub_21EB02B34() & 1) != 0)
    return *(uint64_t *)((char *)a1 + *(int *)(v9 + 40)) == *(_QWORD *)(a2 + *(int *)(v9 + 40));
  return 0;
}

BOOL static DOCCollectionEditType.__derived_enum_equals(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1)
          return 1;
      }
      else if ((a4 & 1) != 0 && a3 >= 2)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_21EAD8964(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return static DOCCollectionEdit.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t DOCCollectionEdit.debugDescription.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_21EB032E4();
    sub_21EB02C0C();
    sub_21EB034A0();
  }
  else
  {
    sub_21EB032E4();
    sub_21EB02C0C();
    sub_21EB034A0();
    sub_21EB02C0C();
    sub_21EB03488();
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
  }
  sub_21EB02C0C();
  sub_21EB03488();
  sub_21EB02C0C();
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_21EAD8BB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t DOCCollectionDiff.edits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCCollectionDiff.init(from:to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t result;

  v12 = *(_QWORD *)(a3 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 16);
  v13(a6, a1);
  v14 = type metadata accessor for DOCCollectionDiff(0, a3, a4, a5);
  v15 = a6 + *(int *)(v14 + 44);
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v15, a2, a3);
  v16 = sub_21EAD8D08(a6, v15, a3, a4, a5);
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(a2, a3);
  result = ((uint64_t (*)(uint64_t, uint64_t))v17)(a1, a3);
  *(_QWORD *)(a6 + *(int *)(v14 + 48)) = v16;
  return result;
}

uint64_t type metadata accessor for DOCCollectionDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCCollectionDiff);
}

uint64_t sub_21EAD8D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t TupleTypeMetadata2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *, _QWORD);
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(uint64_t *, _QWORD);
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(uint64_t *, _QWORD);
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(uint64_t *, _QWORD);
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  void (*v132)(uint64_t *, _QWORD);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  char *v155;
  uint64_t v156;
  void (*v157)(char *, _QWORD *, uint64_t);
  uint64_t v158;
  char *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  unint64_t v182;
  void (*v183)(char *, char *, uint64_t);
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190[5];
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v10 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v169 = *(_QWORD **)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v163 = (char *)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v176 = (char *)&v149 - v14;
  v164 = a5;
  v16 = type metadata accessor for DOCCollectionEdit(0, AssociatedTypeWitness, a5, v15);
  v161 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v154 = (uint64_t *)((char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v17);
  v159 = (char *)&v149 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v160 = (uint64_t *)((char *)&v149 - v21);
  v177 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v23 = sub_21EB030F8();
  v181 = *(_QWORD *)(v23 - 8);
  v182 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v178 = (char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v174 = (uint64_t *)((char *)&v149 - v26);
  v173 = sub_21EB03410();
  MEMORY[0x24BDAC7A8](v173);
  v168 = (void (*)(char *, char *, uint64_t))((char *)&v149 - v27);
  v183 = (void (*)(char *, char *, uint64_t))sub_21EB03404();
  v158 = *((_QWORD *)v183 - 1);
  MEMORY[0x24BDAC7A8](v183);
  v165 = (char *)&v149 - v28;
  v185 = swift_getAssociatedTypeWitness();
  v170 = *(_QWORD *)(v185 - 8);
  v29 = MEMORY[0x24BDAC7A8](v185);
  v166 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v184 = (char *)&v149 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v155 = (char *)&v149 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v180 = (char *)&v149 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v149 - v37;
  v152 = sub_21EB02E64();
  v39 = sub_21EB02E64();
  result = sub_21EB02D38();
  v190[0] = result;
  v151 = v39;
  v41 = __OFADD__(v39, 1);
  v42 = v39 + 1;
  if (v41)
  {
LABEL_43:
    __break(1u);
  }
  else
  {
    v43 = sub_21EB02D98();
    v162 = v10;
    v44 = a2;
    v45 = v43;
    v150 = v42;
    v46 = sub_21EADB66C((uint64_t)v190, v42, v43);
    swift_bridgeObjectRelease();
    v193 = v46;
    v192 = sub_21EB02ABC();
    v172 = a1;
    sub_21EB02E58();
    v191 = sub_21EB02ABC();
    v179 = v44;
    sub_21EB02C90();
    v47 = v165;
    sub_21EB033EC();
    v186 = a4;
    v48 = a3;
    v175 = a3;
    v167 = v16;
    v173 = v45;
    while (1)
    {
      v49 = v178;
      sub_21EB033F8();
      v50 = v174;
      (*(void (**)(uint64_t *, char *, unint64_t))(v181 + 32))(v174, v49, v182);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v50, 1, TupleTypeMetadata2) == 1)break;
      v51 = *v50;
      v52 = TupleTypeMetadata2;
      v53 = (void (*)(char *, char *, uint64_t))v169[4];
      v54 = v176;
      v55 = v177;
      v53(v176, (char *)v50 + *(int *)(TupleTypeMetadata2 + 48), v177);
      v56 = v160;
      *v160 = 0;
      *((_BYTE *)v56 + 8) = 1;
      v57 = v167;
      v53((char *)v56 + *(int *)(v167 + 36), v54, v55);
      *(_QWORD *)((char *)v56 + *(int *)(v57 + 40)) = v51;
      v58 = v161;
      (*(void (**)(char *, _QWORD *, uint64_t))(v161 + 16))(v159, v56, v57);
      result = sub_21EB02D74();
      v41 = __OFADD__(v51, 1);
      v59 = v51 + 1;
      if (v41)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v60 = v58;
      v61 = v191;
      sub_21EB02D98();
      swift_bridgeObjectRetain();
      v45 = v173;
      v48 = v175;
      sub_21EB02D2C();
      v62 = v193;
      sub_21EADA884(v59, v193);
      *(_QWORD *)(v62 + 8 * v59 + 32) = v61;
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, uint64_t))(v60 + 8))(v56, v167);
      TupleTypeMetadata2 = v52;
    }
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v158 + 8))(v47, v183);
    swift_bridgeObjectRelease();
    v63 = v185;
    v64 = v48;
    if (v152 >= 1)
    {
      v65 = 0;
      v162 = 1 - v151;
      v66 = 1;
      v171 = v38;
      while (1)
      {
        sub_21EB02E58();
        if ((v65 & 1) != 0)
          (*(void (**)(char *, uint64_t))(v170 + 8))(v180, v63);
        v168 = *(void (**)(char *, char *, uint64_t))(v170 + 32);
        v168(v180, v155, v63);
        v67 = v167;
        v190[0] = sub_21EB02D38();
        v68 = sub_21EADB66C((uint64_t)v190, v150, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v192 = v68;
        sub_21EB02DA4();
        v69 = (void (*)(uint64_t *, _QWORD))sub_21EB02EA0();
        v70 = v169;
        v71 = v176;
        v72 = v177;
        v174 = (uint64_t *)v169[2];
        ((void (*)(char *))v174)(v176);
        v69(v190, 0);
        v153 = v66;
        v73 = v154;
        *v154 = 1;
        *((_BYTE *)v73 + 8) = 1;
        v74 = (char *)v73 + *(int *)(v67 + 36);
        v158 = v70[4];
        ((void (*)(char *, char *, uint64_t))v158)(v74, v71, v72);
        v75 = *(int *)(v67 + 40);
        v156 = v66 - 1;
        *(_QWORD *)((char *)v73 + v75) = v66 - 1;
        v157 = *(void (**)(char *, _QWORD *, uint64_t))(v161 + 16);
        v157((char *)v160, v73, v67);
        sub_21EB02D74();
        v76 = v190[4];
        v165 = (char *)sub_21EB02D98();
        sub_21EB02D2C();
        v77 = v192;
        result = _swift_isClassOrObjCExistentialType();
        v78 = v77 & 0xFFFFFFFFFFFFF8;
        if ((result & 1) == 0)
          v78 = v77;
        if (!*(_QWORD *)(v78 + 16))
          goto LABEL_42;
        *(_QWORD *)(v77 + 32) = v76;
        swift_bridgeObjectRelease();
        v79 = v64;
        if (v151 >= 1)
        {
          v183 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
          v80 = 5;
          while (1)
          {
            v181 = v80;
            v182 = v80 - 4;
            v81 = v184;
            v82 = v185;
            v183(v184, v38, v185);
            v83 = (void (*)(uint64_t *, _QWORD))sub_21EB02EA0();
            v84 = v176;
            v85 = v177;
            v86 = v174;
            ((void (*)(char *))v174)(v176);
            v83(v190, 0);
            v87 = *(void (**)(char *, uint64_t))(v170 + 8);
            v87(v81, v82);
            v88 = sub_21EB02EA0();
            v89 = v163;
            ((void (*)(char *))v86)(v163);
            ((void (*)(uint64_t *, _QWORD))v88)(v190, 0);
            LOBYTE(v88) = sub_21EB02B34();
            v90 = (void (*)(char *, uint64_t))v169[1];
            v90(v89, v85);
            v90(v84, v85);
            v178 = (char *)v87;
            if ((v88 & 1) != 0)
            {
              v91 = v181;
              sub_21EB02DA4();
              v92 = v190[0];
              sub_21EB02D2C();
              v93 = v192;
              v94 = v182;
              sub_21EADA884(v182, v192);
              *(_QWORD *)(v93 + 8 * v91) = v92;
              swift_bridgeObjectRelease();
              v95 = v91;
            }
            else
            {
              sub_21EB02DA4();
              v96 = v181 - 5;
              sub_21EB02DA4();
              sub_21EB02DA4();
              v97 = swift_bridgeObjectRetain();
              v98 = v167;
              v99 = MEMORY[0x2207B5590](v97, v167);
              swift_bridgeObjectRelease();
              v100 = swift_bridgeObjectRetain();
              v101 = MEMORY[0x2207B5590](v100, v98);
              swift_bridgeObjectRelease();
              v102 = swift_bridgeObjectRetain();
              v103 = MEMORY[0x2207B5590](v102, v98);
              swift_bridgeObjectRelease();
              v104 = v101 >= v99 ? v99 : v101;
              v105 = v103 >= v104 ? v104 : v103;
              v106 = swift_bridgeObjectRetain();
              v107 = MEMORY[0x2207B5590](v106, v98);
              swift_bridgeObjectRelease();
              if (v107 == v105)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v108 = v184;
                v109 = v185;
                v183(v184, v171, v185);
                v110 = (void (*)(uint64_t *, _QWORD))sub_21EB02EA0();
                v111 = v176;
                v112 = v177;
                ((void (*)(char *))v174)(v176);
                v110(v190, 0);
                v87(v108, v109);
                v113 = v160;
                *v160 = 1;
                *((_BYTE *)v113 + 8) = 1;
                ((void (*)(char *, char *, uint64_t))v158)((char *)v113 + *(int *)(v98 + 36), v111, v112);
                *(_QWORD *)((char *)v113 + *(int *)(v98 + 40)) = v156;
                v157(v159, v113, v98);
                sub_21EB02D74();
                v114 = v189;
                sub_21EB02D2C();
                v115 = v192;
                v116 = v182;
                sub_21EADA884(v182, v192);
                v95 = v181;
                *(_QWORD *)(v115 + 8 * v181) = v114;
                v117 = v98;
                v118 = v161;
              }
              else
              {
                swift_bridgeObjectRelease();
                v119 = swift_bridgeObjectRetain();
                v120 = MEMORY[0x2207B5590](v119, v98);
                swift_bridgeObjectRelease();
                v121 = v181;
                v122 = 8 * v181;
                if (v120 == v105)
                {
                  swift_bridgeObjectRelease();
                  v123 = v184;
                  v124 = v185;
                  v183(v184, v180, v185);
                  v125 = (void (*)(uint64_t *, _QWORD))sub_21EB02EA0();
                  v126 = v176;
                  v127 = v177;
                  ((void (*)(char *))v174)(v176);
                  v125(v190, 0);
                  ((void (*)(char *, uint64_t))v178)(v123, v124);
                  v113 = v160;
                  *v160 = 0;
                  *((_BYTE *)v113 + 8) = 1;
                  v128 = v126;
                  v117 = v167;
                  ((void (*)(char *, char *, uint64_t))v158)((char *)v113 + *(int *)(v167 + 36), v128, v127);
                  *(_QWORD *)((char *)v113 + *(int *)(v117 + 40)) = v96;
                  v157(v159, v113, v117);
                  sub_21EB02D74();
                  v129 = v188;
                }
                else
                {
                  v117 = v98;
                  swift_bridgeObjectRelease();
                  v130 = v184;
                  v131 = v185;
                  v183(v184, v180, v185);
                  v132 = (void (*)(uint64_t *, _QWORD))sub_21EB02EA0();
                  v133 = v176;
                  v134 = v177;
                  ((void (*)(char *))v174)(v176);
                  v132(v190, 0);
                  ((void (*)(char *, uint64_t))v178)(v130, v131);
                  v113 = v160;
                  *v160 = 2;
                  *((_BYTE *)v113 + 8) = 1;
                  ((void (*)(char *, char *, uint64_t))v158)((char *)v113 + *(int *)(v117 + 36), v133, v134);
                  *(_QWORD *)((char *)v113 + *(int *)(v117 + 40)) = v156;
                  v157(v159, v113, v117);
                  sub_21EB02D74();
                  v129 = v187;
                }
                sub_21EB02D2C();
                v135 = v192;
                v116 = v182;
                sub_21EADA884(v182, v192);
                *(_QWORD *)(v135 + v122) = v129;
                v118 = v161;
                v95 = v121;
              }
              v94 = v116;
              swift_bridgeObjectRelease();
              (*(void (**)(_QWORD *, uint64_t))(v118 + 8))(v113, v117);
            }
            v136 = v180;
            v137 = v162 + v95;
            v138 = v166;
            v139 = v185;
            v183(v166, v180, v185);
            v140 = v184;
            v79 = v175;
            sub_21EB02E70();
            v141 = (void (*)(char *, uint64_t))v178;
            ((void (*)(char *, uint64_t))v178)(v138, v139);
            v141(v136, v139);
            result = ((uint64_t (*)(char *, char *, uint64_t))v168)(v136, v140, v139);
            v38 = v171;
            if (v137 == 5)
              break;
            v80 = v95 + 1;
            if (__OFADD__(v94, 1))
            {
              __break(1u);
              goto LABEL_41;
            }
          }
        }
        v142 = v192;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v193 = v142;
        v143 = v170;
        v144 = v166;
        v63 = v185;
        (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v166, v38, v185);
        v145 = v184;
        v64 = v79;
        sub_21EB02E70();
        v146 = *(void (**)(char *, uint64_t))(v143 + 8);
        v146(v144, v63);
        (*(void (**)(_QWORD *, uint64_t))(v161 + 8))(v154, v167);
        v146(v38, v63);
        v168(v38, v145, v63);
        v45 = v173;
        if (v153 == v152)
          break;
        v65 = 1;
        v66 = v153 + 1;
        if (__OFADD__(v153, 1))
        {
          __break(1u);
          break;
        }
      }
    }
    sub_21EB02DA4();
    v147 = sub_21EAD9E00(v190[0], v64, v177, v186, v164);
    swift_bridgeObjectRelease();
    v148 = *(void (**)(char *, uint64_t))(v170 + 8);
    v148(v38, v63);
    if (v152 >= 1)
      v148(v180, v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v147;
  }
  return result;
}

uint64_t sub_21EAD9E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for DOCCollectionEdit(0, a3, a5, a4);
  sub_21EB02ABC();
  v5 = sub_21EB02D98();
  MEMORY[0x2207B694C](MEMORY[0x24BEE12C8], v5);
  sub_21EB02CB4();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21EAD9EC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t result;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;

  v39 = a8;
  v36 = a5;
  v37 = a7;
  v34 = a6;
  v35 = a3;
  v33 = a1;
  v10 = type metadata accessor for DOCCollectionEdit(255, a4, a6, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_21EB030F8();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - v13;
  v15 = swift_getTupleTypeMetadata2();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - v17;
  v19 = *(_QWORD *)(v10 - 8);
  v20 = MEMORY[0x24BDAC7A8](v16);
  v38 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v31 - v22;
  v40 = *v33;
  v24 = v40;
  swift_bridgeObjectRetain();
  v33 = (uint64_t *)a2;
  sub_21EADA18C(a2, v24, v35, a4, v36, v34, v37, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v14, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  }
  else
  {
    v25 = *(_QWORD *)&v14[*(int *)(TupleTypeMetadata2 + 48)];
    v26 = *(int *)(v15 + 48);
    v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v27(v18, v14, v10);
    *(_QWORD *)&v18[v26] = v25;
    v27(v23, v18, v10);
    if (v23[8] != 1)
    {
      sub_21EB02D98();
      v29 = v38;
      sub_21EB02D80();
      v30 = *(void (**)(char *, uint64_t))(v19 + 8);
      v30(v29, v10);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v29, v23, v10);
      sub_21EB02D74();
      result = ((uint64_t (*)(char *, uint64_t))v30)(v23, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v10);
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v19 + 16))(v38, v33, v10);
  sub_21EB02D98();
  result = sub_21EB02D74();
LABEL_7:
  *v39 = v40;
  return result;
}

uint64_t sub_21EADA18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata2;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  v49 = a8;
  v15 = type metadata accessor for DOCCollectionEdit(0, a4, a6, a4);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if (*(_QWORD *)a1)
    {
      if (*(_QWORD *)a1 == 1)
      {
        v47 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        v48 = v22;
        v45 = &v44;
        v46 = a2;
        v50 = a2;
        MEMORY[0x24BDAC7A8](v20);
        *(&v44 - 6) = a3;
        *(&v44 - 5) = a4;
        *(&v44 - 4) = a5;
        *(&v44 - 3) = a6;
        *(&v44 - 2) = a7;
        *(&v44 - 1) = a1;
        v23 = sub_21EB02D98();
        MEMORY[0x2207B694C](MEMORY[0x24BEE12E0], v23);
        sub_21EB02E88();
        if ((v52 & 1) == 0)
        {
          v24 = v51;
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          v45 = (uint64_t *)*(int *)(TupleTypeMetadata2 + 48);
          v26 = *(_QWORD *)(a1 + *(int *)(v15 + 40));
          v27 = v47;
          v28 = v48;
          (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, a1 + *(int *)(v15 + 36), a4);
          sub_21EB02DA4();
          v29 = *(_QWORD *)&v19[*(int *)(v15 + 40)];
          (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
          v30 = v49;
          *v49 = v26;
          *((_BYTE *)v30 + 8) = 0;
          (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v30 + *(int *)(v15 + 36), v27, a4);
          *(_QWORD *)((char *)v30 + *(int *)(v15 + 40)) = v29;
          *(uint64_t *)((char *)v45 + (_QWORD)v30) = v24;
          v31 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8)
                                                                              + 56);
          v32 = v30;
LABEL_10:
          v35 = 0;
          v34 = TupleTypeMetadata2;
          return v31(v32, v35, 1, v34);
        }
      }
    }
    else
    {
      v47 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48 = v22;
      v45 = &v44;
      v46 = a2;
      v50 = a2;
      MEMORY[0x24BDAC7A8](v20);
      *(&v44 - 6) = a3;
      *(&v44 - 5) = a4;
      *(&v44 - 4) = a5;
      *(&v44 - 3) = a6;
      *(&v44 - 2) = a7;
      *(&v44 - 1) = a1;
      v33 = sub_21EB02D98();
      MEMORY[0x2207B694C](MEMORY[0x24BEE12E0], v33);
      sub_21EB02E88();
      if ((v52 & 1) == 0)
      {
        v37 = v51;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v38 = *(int *)(TupleTypeMetadata2 + 48);
        sub_21EB02DA4();
        v39 = *(_QWORD *)&v19[*(int *)(v15 + 40)];
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
        v40 = v47;
        v41 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, a1 + *(int *)(v15 + 36), a4);
        v42 = *(_QWORD *)(a1 + *(int *)(v15 + 40));
        v43 = v49;
        *v49 = v39;
        *((_BYTE *)v43 + 8) = 0;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v43 + *(int *)(v15 + 36), v40, a4);
        *(_QWORD *)((char *)v43 + *(int *)(v15 + 40)) = v42;
        *(_QWORD *)((char *)v43 + v38) = v37;
        v31 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56);
        v32 = v43;
        goto LABEL_10;
      }
    }
  }
  v34 = swift_getTupleTypeMetadata2();
  v31 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v32 = v49;
  v35 = 1;
  return v31(v32, v35, 1, v34);
}

BOOL sub_21EADA54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BOOL8 result;

  result = 0;
  if (*(_BYTE *)(a1 + 8) == 1 && !*(_QWORD *)a1)
  {
    type metadata accessor for DOCCollectionEdit(0, a4, a6, a4);
    if ((sub_21EB02B34() & 1) != 0)
      return 1;
  }
  return result;
}

BOOL sub_21EADA5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BOOL8 result;

  result = 0;
  if (*(_BYTE *)(a1 + 8) == 1 && *(_QWORD *)a1 == 1)
  {
    type metadata accessor for DOCCollectionEdit(0, a4, a6, a4);
    if ((sub_21EB02B34() & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t DOCCollectionDiff.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[2];
  _QWORD v17[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for DOCCollectionEdit(0, AssociatedTypeWitness, *(_QWORD *)(a1 + 32), v4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - v8;
  strcpy((char *)v17, "==============");
  HIBYTE(v17[1]) = -18;
  v10 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  v11 = swift_bridgeObjectRetain();
  if (!MEMORY[0x2207B55B4](v11, v5))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_21EB02C0C();
    return v17[0];
  }
  v12 = 0;
  while (1)
  {
    v13 = sub_21EB02D50();
    sub_21EB02D14();
    if ((v13 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v12, v5);
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_21EB03308();
    if (v7 != 8)
      break;
    v16[0] = result;
    (*(void (**)(char *, _QWORD *, uint64_t))(v6 + 16))(v9, v16, v5);
    swift_unknownObjectRelease();
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_5:
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_21EB02C0C();
    sub_21EB034A0();
    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    ++v12;
    if (v14 == MEMORY[0x2207B55B4](v10, v5))
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21EADA884(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_21EADA8D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21EADA8DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21EADA960(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 9) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    sub_21EB01F10();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v10 = (a1 + v5 + 9) & ~v5;
    v11 = ((unint64_t)a2 + v5 + 9) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    *(_QWORD *)((v6 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v6 + v11) & 0xFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_21EADAA40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_21EADAA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 9 + a1) & ~v5;
  v7 = (v5 + 9 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v6, v7);
  *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21EADAAE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 9) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + v8) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21EADAB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 9 + a1) & ~v5;
  v7 = (v5 + 9 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21EADABF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 9 + a1) & ~v5;
  v7 = (v5 + 9 + a2) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v6, v7);
  *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21EADAC80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 9) & ~v6);
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + ((v6 + 9) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v5 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_21EADAD00 + 4 * byte_21EB0C370[v9]))();
}

void sub_21EADAD68(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v12 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + (((_DWORD)v8 + 9) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X13 }
  }
  if (((*(_DWORD *)(v6 + 64) + (((_DWORD)v8 + 9) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v13 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + ((v8 + 9) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_21EADAE64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_21EADAE6C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21EADAE74);
}

void sub_21EADAE98()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_21EADAEA0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_21EADAEA8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a1)
    JUMPOUT(0x21EADAEB0);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))((v5 + v4 + 9) & a2);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCCollectionEditType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCCollectionEditType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_21EADAF2C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21EADAF48(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCCollectionEditType()
{
  return &type metadata for DOCCollectionEditType;
}

uint64_t sub_21EADAF78()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21EADAF80()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21EADAFFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v7 + v8;
  v10 = v7 + 7;
  v11 = ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    sub_21EB01F10();
  }
  else
  {
    v15 = ~v8;
    v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v16(a1, a2, *(_QWORD *)(a3 + 16));
    v17 = ((unint64_t)a2 + v9) & v15;
    v16((uint64_t *)(((unint64_t)v4 + v9) & v15), (uint64_t *)v17, v5);
    *(_QWORD *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + v17) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21EADB0F0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EADB160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21EADB1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EADB294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21EADB324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21EADB3BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v7 + v8;
  v10 = v7 + 7;
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v15 = *(_QWORD *)((v10 + ((v9 + a1) & ~v8)) & 0xFFFFFFFFFFFFF8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v6 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21EADB448 + 4 * byte_21EB0C37F[v13]))();
  }
}

void sub_21EADB4D4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v11 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v6 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v6 + a2;
    bzero(a1, ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_21EADB5DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21EADB654);
}

void sub_21EADB5E4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21EADB5ECLL);
  JUMPOUT(0x21EADB654);
}

void sub_21EADB630()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21EADB654);
}

void sub_21EADB638()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21EADB654);
}

uint64_t sub_21EADB640(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x21EADB654);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x21EADB650);
    JUMPOUT(0x21EADB64CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_21EADB66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_21EB02D38();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    if (a2)
    {
      v9 = v7;
      v10 = *(_QWORD *)(a3 - 8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      v12 = a2 - 1;
      if (v12)
      {
        v13 = *(_QWORD *)(v10 + 72);
        v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_21EB02D98();
    return v8;
  }
  return result;
}

uint64_t sub_21EADB71C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_21EAD9EC8(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], a3);
}

uint64_t sub_21EADB73C(uint64_t a1)
{
  return sub_21EADB77C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21EADA5D8) & 1;
}

uint64_t sub_21EADB75C(uint64_t a1)
{
  return sub_21EADB77C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21EADA54C) & 1;
}

uint64_t sub_21EADB77C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6]) & 1;
}

id static NSError.userCancelledError.getter()
{
  return sub_21EADB7B4(3072);
}

id static NSError.noSuchFileError.getter()
{
  return sub_21EADB7B4(4);
}

id sub_21EADB7B4(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  sub_21EB02B88();
  v2 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v3 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, a1, 0);

  return v4;
}

uint64_t NSError.isUserCancelledError.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_10;
  }
  if (objc_msgSend(v0, sel_code) == (id)3072)
    return 1;
LABEL_10:
  v9 = objc_msgSend(v0, sel_domain);
  v10 = sub_21EB02B88();
  v12 = v11;

  if (v10 == sub_21EB02B88() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-128;
  }
  v15 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v15 & 1) != 0)
    return objc_msgSend(v0, sel_code) == (id)-128;
  return result;
}

uint64_t NSError.isFilenameCollisionError.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_10;
  }
  if (objc_msgSend(v0, sel_code) == (id)-1001)
    return 1;
LABEL_10:
  v9 = objc_msgSend(v0, sel_domain);
  v10 = sub_21EB02B88();
  v12 = v11;

  if (v10 == sub_21EB02B88() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-48;
  }
  v15 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v15 & 1) != 0)
    return objc_msgSend(v0, sel_code) == (id)-48;
  return result;
}

BOOL NSError.isProviderDomainNotAuthenticated.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-1000;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v7 & 1) != 0)
    return objc_msgSend(v0, sel_code) == (id)-1000;
  return result;
}

BOOL NSError.isProviderServerUnreachable.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-1004;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v7 & 1) != 0)
    return objc_msgSend(v0, sel_code) == (id)-1004;
  return result;
}

BOOL NSError.isProviderNotFound.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(v0, sel_code) == (id)-2001;
  }
  v7 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v7 & 1) != 0)
    return objc_msgSend(v0, sel_code) == (id)-2001;
  return result;
}

id sub_21EADBD80()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCUSBStorageKitManager()), sel_init);
  static DOCUSBStorageKitManager.shared = (uint64_t)result;
  return result;
}

id DOCUSBStorageKitManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t *DOCUSBStorageKitManager.shared.unsafeMutableAddressor()
{
  if (qword_255469C30 != -1)
    swift_once();
  return &static DOCUSBStorageKitManager.shared;
}

id static DOCUSBStorageKitManager.shared.getter()
{
  if (qword_255469C30 != -1)
    swift_once();
  return (id)static DOCUSBStorageKitManager.shared;
}

Swift::Void __swiftcall DOCUSBStorageKitManager.prewarmStorageKitManagerIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  swift_beginAccess();
  if (*v2 == 1)
  {
    if (qword_255469BA8 != -1)
      swift_once();
    v3 = sub_21EB0263C();
    __swift_project_value_buffer(v3, (uint64_t)static Logger.Rename);
    v4 = sub_21EB02624();
    v5 = sub_21EB02EDC();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v26 = v7;
    *(_DWORD *)v6 = 136315394;
    sub_21EA591E4(0xD000000000000022, 0x800000021EB13690, &v26);
    sub_21EB03134();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BDC0);
    v9 = sub_21EB02BA0();
    sub_21EA591E4(v9, v10, &v26);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    v11 = "%s: SKManager already warmed, skipping prewarm. %s";
LABEL_11:
    _os_log_impl(&dword_21EA4C000, v4, v5, v11, (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v7, -1, -1);
    MEMORY[0x2207B6A18](v6, -1, -1);
LABEL_12:

    return;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted) == 1)
  {
    if (qword_255469BA8 != -1)
      swift_once();
    v12 = sub_21EB0263C();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.Rename);
    v4 = sub_21EB02624();
    v5 = sub_21EB02EDC();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_12;
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v26 = v7;
    *(_DWORD *)v6 = 136315394;
    sub_21EA591E4(0xD000000000000022, 0x800000021EB13690, &v26);
    sub_21EB03134();
    *(_WORD *)(v6 + 12) = 2080;
    v13 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BDC0);
    v14 = sub_21EB02BA0();
    sub_21EA591E4(v14, v15, &v26);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    v11 = "%s: Prewarming started but hasn't completed, skipping prewarm initialization. %s";
    goto LABEL_11;
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted) = 1;
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_sharedManager);
  if (qword_255469BA8 != -1)
    swift_once();
  v18 = sub_21EB0263C();
  __swift_project_value_buffer(v18, (uint64_t)static Logger.Rename);
  v19 = sub_21EB02624();
  v20 = sub_21EB02EDC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26 = v22;
    *(_DWORD *)v21 = 136315394;
    sub_21EA591E4(0xD000000000000022, 0x800000021EB13690, &v26);
    sub_21EB03134();
    *(_WORD *)(v21 + 12) = 2080;
    v23 = objc_msgSend(v16, sel_sharedManager);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BDC0);
    v24 = sub_21EB02BA0();
    sub_21EA591E4(v24, v25, &v26);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v19, v20, "%s: Starting to pre-warm SKManager %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v22, -1, -1);
    MEMORY[0x2207B6A18](v21, -1, -1);
  }

  if (v17)
  {
    objc_msgSend(v17, sel_addListener_, v1);

  }
}

uint64_t DOCUSBStorageKitManager.prewarmComplete.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCUSBStorageKitManager.prewarmComplete.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*DOCUSBStorageKitManager.prewarmComplete.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DOCUSBStorageKitManager.init()()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmStarted] = 0;
  v0[OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBStorageKitManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCUSBStorageKitManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUSBStorageKitManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall DOCUSBStorageKitManager.initialPopulateComplete()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14[3];

  v1 = v0;
  if (qword_255469BA8 != -1)
    swift_once();
  v2 = sub_21EB0263C();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.Rename);
  v3 = sub_21EB02624();
  v4 = sub_21EB02EDC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)v5 = 136315394;
    v13 = sub_21EA591E4(0xD000000000000019, 0x800000021EB136C0, v14);
    sub_21EB03134();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedManager, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546BDC0);
    v8 = sub_21EB02BA0();
    sub_21EA591E4(v8, v9, v14);
    sub_21EB03134();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21EA4C000, v3, v4, "%s: SKManager %s allDisks is fully populated.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207B6A18](v6, -1, -1);
    MEMORY[0x2207B6A18](v5, -1, -1);
  }

  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_removeListener_, v1);

    v12 = (_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables23DOCUSBStorageKitManager_prewarmComplete);
    swift_beginAccess();
    *v12 = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCUSBStorageKitManager()
{
  return objc_opt_self();
}

double UIContentConfiguration.asVibrancyCapableConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t UIContentConfiguration.isVibrantContainer.getter()
{
  return 0;
}

uint64_t sub_21EADC818()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DOCTagsCollectionViewData.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  swift_beginAccess();
  return MEMORY[0x2207B6ACC](v1);
}

uint64_t DOCTagsCollectionViewData.delegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*DOCTagsCollectionViewData.delegate.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x2207B6ACC](v5);
  return sub_21EADCA20;
}

void sub_21EADCA20(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

Swift::Void __swiftcall DOCTagsCollectionViewData.applyTagsFromNodes(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  BOOL v12;
  unint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  unint64_t *v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char v33;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_21EAE0804(v2);
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  v10 = (uint64_t *)(v9 + 32);
  v11 = (uint64_t *)(v9 + 40);
  v12 = v9 == 0;
  if (v9)
    v13 = (unint64_t *)(v9 + 24);
  else
    v13 = (unint64_t *)(v1
                             + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (v12)
    v14 = (uint64_t *)(v1
                    + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                    + 8);
  else
    v14 = v10;
  if (v12)
    v15 = (uint64_t *)(v1
                    + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                    + 16);
  else
    v15 = v11;
  v16 = *v15;
  v17 = *v14;
  v18 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_21EADE48C(v3, v18) & 1) != 0 && (sub_21EADE780(v5, v17), (v19 & 1) != 0))
  {
    sub_21EADE780(v7, v16);
    v21 = v20;
  }
  else
  {
    v21 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = (unint64_t *)(v1
                           + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  *v22 = v3;
  v22[1] = v5;
  v22[2] = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD **)(v1 + v8);
  if (!v23)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      return;
    goto LABEL_22;
  }
  v24 = v23[3];
  v25 = v23[4];
  v26 = v23[5];
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_21EADE48C(v24, v3) & 1) == 0 || (sub_21EADE780(v25, v5), (v27 & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  sub_21EADE780(v26, v7);
  v33 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
    v29 = *(_QWORD *)(v1 + v8);
    if (v29)
      *(_BYTE *)(v29 + 16) = 0;
    *(_QWORD *)(v1 + v8) = 0;
    swift_release();
    v32 = *(_QWORD *)(v1 + v8);
    if (v32)
      *(_BYTE *)(v32 + 16) = 1;
    swift_release();
  }
  else
  {
    swift_release();
    if ((v21 & 1) != 0)
      return;
  }
LABEL_22:
  v30 = v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
  swift_beginAccess();
  v31 = (void *)MEMORY[0x2207B6ACC](v30);
  if (v31)
  {
    objc_msgSend(v31, sel_tagsCollectionDataNeedsReload_, v1);
    swift_unknownObjectRelease();
  }
}

uint64_t DOCTagsCollectionViewData.applyPendingExternalChange(_:timeout:)(uint64_t a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_21EB02A20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21EB02A5C();
  v50 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_21EB02A74();
  v12 = *(_QWORD *)(v48 - 8);
  v13 = MEMORY[0x24BDAC7A8](v48);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v43 - v16;
  v17 = (unint64_t *)(a1
                           + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  result = swift_beginAccess();
  v19 = *v17;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = sub_21EB0341C();
    result = swift_bridgeObjectRelease();
    if (!v42)
      return result;
  }
  else if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  v44 = v10;
  v45 = v9;
  v46 = v7;
  v43 = (void (*)(_QWORD, _QWORD))v6;
  v20 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange];
  if (v21)
    v22 = (unint64_t *)(v21 + 24);
  else
    v22 = (unint64_t *)&v3[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection];
  v23 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_21EADD1D8(a1, v23);
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DOCTagsCollectionViewData.PendingExternalChange();
  v29 = swift_allocObject();
  v30 = v29;
  *(_BYTE *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = v24;
  *(_QWORD *)(v29 + 32) = v26;
  *(_QWORD *)(v29 + 40) = v28;
  v31 = *(_QWORD *)&v3[v20];
  if (v31)
    *(_BYTE *)(v31 + 16) = 0;
  v32 = v43;
  *(_QWORD *)&v3[v20] = v29;
  sub_21EB01F10();
  swift_release();
  v33 = *(_QWORD *)&v3[v20];
  if (v33)
    *(_BYTE *)(v33 + 16) = 1;
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v34 = (void *)sub_21EB02F54();
  sub_21EB02A68();
  v35 = v47;
  MEMORY[0x2207B52C0](v15, a2);
  v43 = *(void (**)(_QWORD, _QWORD))(v12 + 8);
  v36 = v48;
  v43(v15, v48);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v30;
  *(_QWORD *)(v37 + 24) = v3;
  aBlock[4] = sub_21EAE0BBC;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_20;
  v38 = _Block_copy(aBlock);
  sub_21EB01F10();
  v39 = v3;
  swift_release();
  v40 = v49;
  sub_21EB02A44();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_21EAE0BC4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA843CC();
  v41 = v45;
  sub_21EB031DC();
  MEMORY[0x2207B5764](v35, v40, v41, v38);
  _Block_release(v38);
  swift_release();

  (*(void (**)(char *, _QWORD))(v46 + 8))(v41, v32);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v44);
  return ((uint64_t (*)(char *, uint64_t))v43)(v35, v36);
}

void *sub_21EADD1D8(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  BOOL v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  unint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  char v30;
  void *v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;

  v2 = (void *)a2;
  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  v34 = *v3;
  if ((unint64_t)*v3 >> 62)
    goto LABEL_85;
  v4 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_86:
    swift_bridgeObjectRelease_n();
    return v2;
  }
LABEL_3:
  v5 = 0;
  v35 = v4;
  do
  {
    if ((v34 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x2207B5B3C](v5, v34);
    else
      v6 = *(id *)(v34 + 32 + 8 * v5);
    v7 = v6;
    v8 = __OFADD__(v5++, 1);
    if (v8)
      goto LABEL_82;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v2 = (void *)sub_21EB0341C();
      if (!v2)
      {
LABEL_57:
        swift_bridgeObjectRelease();
        v14 = a2;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          v12 = sub_21EB0341C();
          swift_bridgeObjectRelease();
        }
        else
        {
          v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        goto LABEL_59;
      }
    }
    else
    {
      v2 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2)
        goto LABEL_57;
    }
    if ((a2 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x2207B5B3C](0, a2);
    else
      v9 = *(id *)(a2 + 32);
    v10 = v9;
    sub_21EA579D4(0, (unint64_t *)&unk_25546BFA0);
    v11 = sub_21EB0308C();

    v12 = 0;
    if ((v11 & 1) == 0)
    {
      if (v2 == (void *)1)
        goto LABEL_57;
      v27 = 5;
      while (1)
      {
        v12 = v27 - 4;
        v28 = (a2 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x2207B5B3C](v27 - 4, a2)
            : *(id *)(a2 + 8 * v27);
        v29 = v28;
        v30 = sub_21EB0308C();

        if ((v30 & 1) != 0)
          break;
        v31 = (void *)(v27 - 3);
        if (__OFADD__(v12, 1))
          goto LABEL_75;
        ++v27;
        if (v31 == v2)
          goto LABEL_57;
      }
    }
    swift_bridgeObjectRelease();
    v13 = (void *)(v12 + 1);
    if (__OFADD__(v12, 1))
      goto LABEL_84;
    v14 = a2;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v2 = (void *)sub_21EB0341C();
      swift_bridgeObjectRelease();
      if (v13 != v2)
      {
LABEL_16:
        v15 = v12 + 5;
        do
        {
          v16 = v15 - 4;
          if ((v14 & 0xC000000000000001) != 0)
          {
            v17 = (id)MEMORY[0x2207B5B3C](v15 - 4, v14);
          }
          else
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v4 = sub_21EB0341C();
              if (!v4)
                goto LABEL_86;
              goto LABEL_3;
            }
            if (v16 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_72;
            v17 = *(id *)(v14 + 8 * v15);
          }
          v2 = v17;
          v18 = sub_21EB0308C();

          if ((v18 & 1) == 0)
          {
            if (v16 != v12)
            {
              if ((a2 & 0xC000000000000001) != 0)
              {
                v2 = (void *)MEMORY[0x2207B5B3C](v12, a2);
                v21 = (id)MEMORY[0x2207B5B3C](v15 - 4, a2);
              }
              else
              {
                if (v12 < 0)
                  goto LABEL_76;
                v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v12 >= v19)
                  goto LABEL_77;
                v20 = *(id *)(a2 + 8 * v12 + 32);
                if ((v16 & 0x8000000000000000) != 0)
                  goto LABEL_78;
                if (v16 >= v19)
                  goto LABEL_79;
                v2 = v20;
                v21 = *(id *)(a2 + 8 * v15);
              }
              v22 = v21;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (a2 & 0x8000000000000000) != 0
                || (a2 & 0x4000000000000000) != 0)
              {
                sub_21EAC020C(a2);
              }
              v23 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
              *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20) = v22;

              sub_21EB02D08();
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || (a2 & 0x8000000000000000) != 0
                || (a2 & 0x4000000000000000) != 0)
              {
                sub_21EAC020C(a2);
              }
              if ((v16 & 0x8000000000000000) != 0)
                goto LABEL_80;
              v24 = a2 & 0xFFFFFFFFFFFFFF8;
              if (v16 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_81;
              v25 = *(void **)(v24 + 8 * v15);
              *(_QWORD *)(v24 + 8 * v15) = v2;

              sub_21EB02D08();
            }
            v8 = __OFADD__(v12++, 1);
            if (v8)
              goto LABEL_74;
          }
          v26 = (void *)(v15 - 3);
          if (__OFADD__(v16, 1))
            goto LABEL_73;
          v14 = a2;
          if (a2 >> 62)
          {
            swift_bridgeObjectRetain();
            v2 = (void *)sub_21EB0341C();
            swift_bridgeObjectRelease();
          }
          else
          {
            v2 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v15;
        }
        while (v26 != v2);
      }
    }
    else
    {
      v2 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 != v2)
        goto LABEL_16;
    }
LABEL_59:
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v2 = (void *)sub_21EB0341C();
      swift_bridgeObjectRelease();
      if ((uint64_t)v2 < v12)
        goto LABEL_83;
    }
    else
    {
      v2 = *(void **)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((uint64_t)v2 < v12)
        goto LABEL_83;
    }
    sub_21EAB99A8(v12, (uint64_t)v2);

    v32 = (void *)sub_21EADF148(v7);
  }
  while (v5 != v35);
  swift_bridgeObjectRelease_n();
  return (void *)a2;
}

_BYTE *sub_21EADD770(_BYTE *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result[16] == 1)
  {
    v3 = OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange;
    v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
    if (v4)
      *(_BYTE *)(v4 + 16) = 0;
    *(_QWORD *)(a2 + v3) = 0;
    swift_release();
    v5 = *(_QWORD *)(a2 + v3);
    if (v5)
      *(_BYTE *)(v5 + 16) = 1;
    v6 = a2 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_delegate;
    swift_beginAccess();
    result = (_BYTE *)MEMORY[0x2207B6ACC](v6);
    if (result)
    {
      objc_msgSend(result, sel_tagsCollectionDataNeedsReload_, a2);
      return (_BYTE *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t DOCTagsCollectionViewData.countOfTags.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  v2 = (_QWORD *)(v1 + 24);
  if (!v1)
    v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (!(*v2 >> 62))
    return *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t DOCTagsCollectionViewData.tag(atIndex:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  id v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  v4 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (v3)
    v4 = (unint64_t *)(v3 + 24);
  v5 = *v4;
  swift_bridgeObjectRetain();
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v6 > a1)
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_21EB0341C();
  result = swift_bridgeObjectRelease();
  if (v10 <= a1)
    goto LABEL_11;
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x2207B5B3C](a1, v5);
    goto LABEL_9;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v8 = *(id *)(v5 + 8 * a1 + 32);
LABEL_9:
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t DOCTagsCollectionViewData.index(ofTag:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  v4 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection);
  if (v3)
    v4 = (unint64_t *)(v3 + 24);
  v5 = *v4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21EADE2F4(a1, v5);
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((v9 & 1) != 0)
    return sub_21EB020B4();
  else
    return v7;
}

uint64_t DOCTagsCollectionViewData.presence(of:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange);
  if (v3)
    v4 = (uint64_t *)(v3 + 32);
  else
    v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection + 8);
  if (v3)
    v5 = (uint64_t *)(v3 + 40);
  else
    v5 = (uint64_t *)(v1
                   + OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection
                   + 16);
  v6 = *v5;
  v7 = *v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_21EA891D0(a1, v6) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v9 = sub_21EA891D0(a1, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
}

id DOCTagsCollectionViewData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DOCTagsCollectionViewData.init()()
{
  char *v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  objc_super v6;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_tagsUnionCollection];
  v2 = v0;
  *v1 = sub_21EAE0804(MEMORY[0x24BEE4AF8]);
  v1[1] = v3;
  v1[2] = v4;
  *(_QWORD *)&v2[OBJC_IVAR____TtC26DocumentManagerExecutables25DOCTagsCollectionViewData_pendingExternalChange] = 0;
  swift_unknownObjectWeakInit();

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCTagsCollectionViewData();
  return objc_msgSendSuper2(&v6, sel_init);
}

id DOCTagsCollectionViewData.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCTagsCollectionViewData);
}

unint64_t DOCTagsCollectionViewDataPresence.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_21EADDF28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t DOCTagsCollectionViewDataChanges.deletions.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t DOCTagsCollectionViewDataChanges.deletions.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DOCTagsCollectionViewDataChanges.deletions.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL DOCTagsCollectionViewDataChanges.empty.getter()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions);
  swift_beginAccess();
  v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21EB0341C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 == 0;
}

id DOCTagsCollectionViewDataChanges.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables32DOCTagsCollectionViewDataChanges_deletions] = MEMORY[0x24BEE4AF8];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTagsCollectionViewDataChanges();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DOCTagsCollectionViewDataChanges.__deallocating_deinit()
{
  return sub_21EA7B5B4(type metadata accessor for DOCTagsCollectionViewDataChanges);
}

void sub_21EADE2F4(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x2207B5B3C](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
      v6 = sub_21EB0308C();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x2207B5B3C](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_21EB0308C();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_21EB0341C();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

id sub_21EADE48C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_21EB0341C();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x2207B5B3C](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x2207B5B3C](0, v2);
LABEL_21:
    v14 = v13;
    sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
    v15 = sub_21EB0308C();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x2207B5B3C](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x2207B5B3C](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_21EB0308C();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_21EB0308C();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_21EADE780(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_21EB03260();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_21EADFD40(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_21EB03080();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_21EB0308C();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_21EB0308C();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

void sub_21EADEA94(unint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_21EADE48C(*a1, *a2) & 1) != 0)
  {
    sub_21EADE780(v2, v4);
    if ((v6 & 1) != 0)
      sub_21EADE780(v3, v5);
  }
}

uint64_t sub_21EADEB00(uint64_t a1, uint64_t a2)
{
  return sub_21EADEB48(a1, a2, &qword_25546BFC0, (unint64_t *)&qword_25546A780, 0x24BEBDAA0, (void (*)(unint64_t))sub_21EACDF30);
}

uint64_t sub_21EADEB24(uint64_t a1, uint64_t a2)
{
  return sub_21EADEB48(a1, a2, &qword_25546B860, (unint64_t *)&unk_25546A770, 0x24BE2DF20, (void (*)(unint64_t))sub_21EACE260);
}

uint64_t sub_21EADEB48(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_21EB032CC();
    v21 = v8;
    sub_21EB0320C();
    if (sub_21EB0326C())
    {
      sub_21EA579D4(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_21EB03080();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_21EB0326C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v8;
}

unint64_t sub_21EADED48(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_21EB03080();
  result = sub_21EB031F4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_21EADEDC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_21EB035A8();
  swift_bridgeObjectRetain();
  sub_21EB02BDC();
  v6 = sub_21EB035E4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_21EB034C4() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_21EB034C4() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21EACEF9C();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_21EADF9DC(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_21EADEF54(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_21EB03278();

    if ((v6 & 1) != 0)
    {
      v7 = sub_21EADF82C(v4, (uint64_t)v5, &qword_25546BFC0, (unint64_t *)&qword_25546A780, 0x24BEBDAA0, (void (*)(unint64_t))sub_21EACDF30);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_21EB03080();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  sub_21EA579D4(0, (unint64_t *)&qword_25546A780);
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_21EB0308C();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_21EB0308C();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21EACF14C();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_21EADFBA0(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21EADF148(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_21EB03278();

    if ((v6 & 1) != 0)
    {
      v7 = sub_21EADF82C(v4, (uint64_t)v5, &qword_25546B860, (unint64_t *)&unk_25546A770, 0x24BE2DF20, (void (*)(unint64_t))sub_21EACE260);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_21EB03080();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_21EB0308C();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_21EB0308C();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21EACF2E8();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_21EADFBA0(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21EADF33C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546A7F0);
  result = sub_21EB032D8();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_21EB035A8();
    swift_bridgeObjectRetain();
    sub_21EB02BDC();
    result = sub_21EB035E4();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21EADF5D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546B860);
  result = sub_21EB032D8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_21EB03080();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21EADF82C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v11 = v6;
  swift_bridgeObjectRelease();
  v12 = sub_21EB0323C();
  v13 = swift_unknownObjectRetain();
  v14 = sub_21EADEB48(v13, v12, a3, a4, a5, a6);
  v25 = v14;
  sub_21EB01F10();
  v15 = sub_21EB03080();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    sub_21EA579D4(0, a4);
    v18 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v17);
    v19 = sub_21EB0308C();

    if ((v19 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v23 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v17);
      sub_21EADFBA0(v17);
      if ((sub_21EB0308C() & 1) != 0)
      {
        *v11 = v25;
        return v23;
      }
      __break(1u);
    }
    else
    {
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v17);
        v22 = sub_21EB0308C();

        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_21EADF9DC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    sub_21EB01F10();
    v8 = sub_21EB031E8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_21EB035A8();
        swift_bridgeObjectRetain();
        sub_21EB02BDC();
        v10 = sub_21EB035E4();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_21EADFBA0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    sub_21EB01F10();
    v8 = sub_21EB031E8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_21EB03080();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_21EADFD40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_21EB0323C())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_21EB03278();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_21EADFE90(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_21EAE0010((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_21EAE0010((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x2207B6A18](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_21EAE0010(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  unint64_t j;
  unint64_t v19;
  id v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  unint64_t i;
  unint64_t v35;
  id v36;
  char v37;
  unint64_t v38;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  v4 = a3;
  if (a3 >> 62)
    goto LABEL_38;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v45 = v4;
  if (v5)
  {
    while (1)
    {
      v46 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0)
        break;
      v23 = 0;
      v41 = v4 + 32;
      v42 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v43 = 0;
      while (v23 != v42)
      {
        v25 = *(id *)(v41 + 8 * v23);
        v4 = (uint64_t)v25;
        v26 = sub_21EB03080();
        v27 = -1 << *(_BYTE *)(a4 + 32);
        v28 = v26 & ~v27;
        v29 = v28 >> 6;
        v30 = 1 << v28;
        if (((1 << v28) & *(_QWORD *)(v46 + 8 * (v28 >> 6))) != 0)
        {
          v4 = sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
          v31 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v28);
          v32 = sub_21EB0308C();

          if ((v32 & 1) != 0)
          {

          }
          else
          {
            v33 = ~v27;
            for (i = v28 + 1; ; i = v35 + 1)
            {
              v35 = i & v33;
              if (((*(_QWORD *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0)
                goto LABEL_20;
              v36 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v35);
              v37 = sub_21EB0308C();

              if ((v37 & 1) != 0)
                break;
            }

            v29 = v35 >> 6;
            v30 = 1 << v35;
          }
          v38 = a1[v29];
          a1[v29] = v30 | v38;
          v24 = v5;
          if ((v30 & v38) == 0)
          {
            v9 = __OFADD__(v43++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          v24 = v5;
        }
        if (++v23 == v24)
          goto LABEL_40;
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v5 = sub_21EB0341C();
      v45 = v4;
      if (!v5)
        goto LABEL_39;
    }
    v43 = 0;
    v6 = 0;
    while (1)
    {
      v8 = MEMORY[0x2207B5B3C](v6, v45);
      v9 = __OFADD__(v6++, 1);
      if (v9)
        goto LABEL_35;
      v4 = v8;
      v10 = sub_21EB03080();
      v11 = -1 << *(_BYTE *)(a4 + 32);
      v12 = v10 & ~v11;
      v13 = v12 >> 6;
      v14 = 1 << v12;
      if (((1 << v12) & *(_QWORD *)(v46 + 8 * (v12 >> 6))) == 0)
        goto LABEL_5;
      v4 = sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
      v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v12);
      v16 = sub_21EB0308C();

      if ((v16 & 1) == 0)
        break;
      swift_unknownObjectRelease();
LABEL_16:
      v22 = a1[v13];
      a1[v13] = v14 | v22;
      v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v43, 1))
          goto LABEL_37;
        ++v43;
      }
LABEL_6:
      if (v6 == v7)
        goto LABEL_40;
    }
    v17 = ~v11;
    for (j = v12 + 1; ; j = v19 + 1)
    {
      v19 = j & v17;
      if (((*(_QWORD *)(v46 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0)
        break;
      v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v19);
      v21 = sub_21EB0308C();

      if ((v21 & 1) != 0)
      {
        swift_unknownObjectRelease();
        v13 = v19 >> 6;
        v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  v43 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  sub_21EB01F10();
  return sub_21EADF5D0(a1, a2, v43, a4);
}

void (*sub_21EAE03C8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21EAE0448(v6, a2, a3);
  return sub_21EAE041C;
}

void sub_21EAE041C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_21EAE0448(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2207B5B3C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_21EAE04B4;
  }
  __break(1u);
  return result;
}

void sub_21EAE04B4(id *a1)
{

}

uint64_t sub_21EAE04BC(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a1;
  v28 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_25;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v22 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v26 = a2;
      v27 = v3 + 32;
      v24 = v3 & 0xC000000000000001;
      v25 = v4;
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        v8 = (id)MEMORY[0x2207B5B3C](v5, v22);
LABEL_10:
        v9 = v8;
        if (__OFADD__(v5++, 1))
          goto LABEL_24;
        v11 = *a2;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v3 = v9;
          v12 = sub_21EB03278();
          swift_bridgeObjectRelease();

          if ((v12 & 1) != 0)
          {

            goto LABEL_6;
          }
        }
        else if (*(_QWORD *)(v11 + 16))
        {
          swift_bridgeObjectRetain();
          v13 = sub_21EB03080();
          v14 = -1 << *(_BYTE *)(v11 + 32);
          v15 = v13 & ~v14;
          if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
          {
            v3 = sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
            v16 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v15);
            v17 = sub_21EB0308C();

            if ((v17 & 1) != 0)
            {
LABEL_20:

              swift_bridgeObjectRelease();
              v4 = v25;
              a2 = v26;
              v7 = v23;
              v6 = v24;
              goto LABEL_6;
            }
            v18 = ~v14;
            while (1)
            {
              v15 = (v15 + 1) & v18;
              if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
                break;
              v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v15);
              v20 = sub_21EB0308C();

              if ((v20 & 1) != 0)
                goto LABEL_20;
            }
          }
          swift_bridgeObjectRelease();
          v4 = v25;
          a2 = v26;
          v7 = v23;
          v6 = v24;
        }
        sub_21EB03338();
        sub_21EB03368();
        sub_21EB03374();
        v3 = (uint64_t)&v28;
        sub_21EB03344();
LABEL_6:
        if (v5 == v4)
          return v28;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      v4 = sub_21EB0341C();
      if (!v4)
        return MEMORY[0x24BEE4AF8];
    }
    v8 = *(id *)(v27 + 8 * v5);
    goto LABEL_10;
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_21EAE0738(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  void *v4;
  void **v5;
  void *v6;
  id v7;

  if (a1 >> 62)
  {
    v2 = sub_21EB0341C();
    if (!v2)
      return;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return;
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v2; ++i)
    {
      v4 = (void *)MEMORY[0x2207B5B3C](i, a1);
      sub_21EACD3E0(&v7, v4);

    }
  }
  else
  {
    v5 = (void **)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_21EACD3E0(&v7, v6);

      --v2;
    }
    while (v2);
  }
}

uint64_t sub_21EAE0804(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = MEMORY[0x24BEE4B08];
  v22 = MEMORY[0x24BEE4B08];
  v20 = MEMORY[0x24BEE4AF8];
  v2 = a1 >> 62;
  if (!(a1 >> 62))
  {
    result = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result >= 1)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  result = sub_21EB0341C();
  if (result < 1)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (void *)MEMORY[0x2207B5B3C](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    v4 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  v5 = objc_msgSend(v4, sel_tags);
  swift_unknownObjectRelease();
  v6 = (id)DOCTagsFromFPTags();

  sub_21EA579D4(0, (unint64_t *)&unk_25546A770);
  v7 = sub_21EB02CF0();

  sub_21EAE0738(v7);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_23:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_21EB0341C();
  v8 = result;
  if (!result)
    goto LABEL_23;
LABEL_8:
  if (v8 < 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v9 = 0;
  v10 = v22;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v11 = (void *)MEMORY[0x2207B5B3C](v9, a1);
    }
    else
    {
      v11 = *(void **)(a1 + 8 * v9 + 32);
      swift_unknownObjectRetain();
    }
    v12 = objc_msgSend(v11, sel_tags);
    if (v12)
    {
      sub_21EA579D4(0, (unint64_t *)&unk_25546BFB0);
      sub_21EB02CF0();

      v12 = (id)sub_21EB02CE4();
      swift_bridgeObjectRelease();
    }
    v13 = (id)DOCTagsFromFPTags();

    v14 = sub_21EB02CF0();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_21EAE04BC(v15, &v21);
    swift_bridgeObjectRelease();
    if ((v10 & 0xC000000000000001) != 0)
    {
      if (v10 < 0)
        v17 = v10;
      else
        v17 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v18 = sub_21EB0323C();
      v19 = sub_21EADEB48(v17, v18, &qword_25546B860, (unint64_t *)&unk_25546A770, 0x24BE2DF20, (void (*)(unint64_t))sub_21EACE260);
      swift_bridgeObjectRelease();
      v10 = v19;
    }
    ++v9;
    v10 = sub_21EADFE90(v14, v10);
    sub_21EAE0738(v14);
    swift_bridgeObjectRelease();
    sub_21EACC750(v16);
    swift_unknownObjectRelease();
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t type metadata accessor for DOCTagsCollectionViewData.PendingExternalChange()
{
  return objc_opt_self();
}

uint64_t sub_21EAE0B90()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

_BYTE *sub_21EAE0BBC()
{
  uint64_t v0;

  return sub_21EADD770(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_21EAE0BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540A6CE0;
  if (!qword_2540A6CE0)
  {
    v1 = sub_21EB02A20();
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2540A6CE0);
  }
  return result;
}

uint64_t type metadata accessor for DOCTagsCollectionViewData()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DOCTagsCollectionViewDataChanges()
{
  return objc_opt_self();
}

unint64_t sub_21EAE0C50()
{
  unint64_t result;

  result = qword_25546BE70;
  if (!qword_25546BE70)
  {
    result = MEMORY[0x2207B694C](&protocol conformance descriptor for DOCTagsCollectionViewDataPresence, &type metadata for DOCTagsCollectionViewDataPresence);
    atomic_store(result, (unint64_t *)&qword_25546BE70);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTagsCollectionViewDataPresence()
{
  return &type metadata for DOCTagsCollectionViewDataPresence;
}

uint64_t destroy for DOCTagUnionCollection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s26DocumentManagerExecutables21DOCTagUnionCollectionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DOCTagUnionCollection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCTagUnionCollection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCTagUnionCollection(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCTagUnionCollection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTagUnionCollection()
{
  return &type metadata for DOCTagUnionCollection;
}

id DOCBlockOperation.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCBlockOperation_block];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DOCBlockOperation.init(block:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCBlockOperation_block];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DOCBlockOperation();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for DOCBlockOperation()
{
  return objc_opt_self();
}

Swift::Void __swiftcall DOCBlockOperation.main()()
{
  char *v0;
  void (*v1)(uint64_t (*)(uint64_t, void *), uint64_t);
  uint64_t v2;
  char *v3;

  v1 = *(void (**)(uint64_t (*)(uint64_t, void *), uint64_t))&v0[OBJC_IVAR____TtC26DocumentManagerExecutables17DOCBlockOperation_block];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = v0;
  v1(sub_21EAE0FDC, v2);
  swift_release();
}

uint64_t sub_21EAE0FB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EAE0FDC(uint64_t a1, void *a2)
{
  return DOCOperation.completed(with:error:)(a1, a2);
}

id DOCBlockOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DOCBlockOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21EAE10E8()
{
  return swift_release();
}

id DOCBlockOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBlockOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static DOCCreateFolderOperation.isFilenameCollisionError(_:)()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v9;

  v0 = (void *)sub_21EB02228();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21EB02B88();
  v4 = v3;

  if (v2 == sub_21EB02B88() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  v9 = objc_msgSend(v0, sel_code);

  return v9 == (id)-1001;
}

uint64_t static DOCCreateFolderOperation.renameCollisionFormattedString(folderName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (qword_255469C40 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  return sub_21EB02B94();
}

void sub_21EAE12D8()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (id)_DocumentManagerBundle();
  if (v0)
  {
    v1 = v0;
    v2 = sub_21EB02168();
    v4 = v3;

    static DOCCreateFolderOperation.untitledFolderName = v2;
    *(_QWORD *)algn_255475018 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t *DOCCreateFolderOperation.untitledFolderName.unsafeMutableAddressor()
{
  if (qword_255469C38 != -1)
    swift_once();
  return &static DOCCreateFolderOperation.untitledFolderName;
}

uint64_t static DOCCreateFolderOperation.untitledFolderName.getter()
{
  uint64_t v0;

  if (qword_255469C38 != -1)
    swift_once();
  v0 = static DOCCreateFolderOperation.untitledFolderName;
  swift_bridgeObjectRetain();
  return v0;
}

id DOCCreateFolderOperation.parentItem.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem);
}

uint64_t DOCCreateFolderOperation.folderName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName);
  swift_bridgeObjectRetain();
  return v1;
}

void *DOCCreateFolderOperation.folderItem.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCCreateFolderOperation.folderItem.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*DOCCreateFolderOperation.folderItem.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id DOCCreateFolderOperation.undoManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager);
}

char *DOCCreateFolderOperation.__allocating_init(parentItem:folderName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(a1, a2, a3, a4);
}

char *DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  void **v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  objc_super v18;

  v7 = (void **)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem];
  *(_QWORD *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem] = a1;
  v8 = &v4[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  swift_beginAccess();
  v9 = *v7;
  *v7 = 0;
  v10 = v4;
  v11 = a1;

  *(_QWORD *)&v10[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager] = a4;
  v12 = a4;

  swift_bridgeObjectRetain();
  v13 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for DOCCreateFolderOperation();
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithParentItem_folderName_, v11, v13);

  v15 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager];
  v16 = v14;
  objc_msgSend(v15, sel_registerUndoOperationForSender_, v16);

  return v16;
}

id DOCCreateFolderOperation.actionNameForUndoing.getter()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v1 = result;
    v2 = sub_21EB02168();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *DOCCreateFolderOperation.operationForRedoing()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  _QWORD v12[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_parentItem);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderName + 8);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager);
  v5 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation());
  v6 = v1;
  swift_bridgeObjectRetain();
  v7 = DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)(v6, v2, v3, v4);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  v12[4] = sub_21EAE1EB4;
  v12[5] = v8;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_21EA81D44;
  v12[3] = &block_descriptor_21;
  v9 = _Block_copy(v12);
  v10 = v7;
  swift_release();
  objc_msgSend(v10, sel_setCreateFolderCompletionBlock_, v9);
  _Block_release(v9);

  return v10;
}

void sub_21EAE19C8(void *a1, uint64_t a2, uint64_t a3)
{
  void **v4;
  void *v5;
  id v6;

  v4 = (void **)(a3 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

}

char *DOCCreateFolderOperation.operationForUndoing()()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  objc_super v18;
  uint64_t v19;

  v1 = v0;
  v2 = (void **)&v0[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_folderItem];
  swift_beginAccess();
  v3 = *v2;
  if (!*v2)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21EB07150;
  *(_QWORD *)(v4 + 32) = v3;
  v19 = v4;
  sub_21EB02D08();
  v5 = *(void **)&v1[OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager];
  v6 = (objc_class *)type metadata accessor for DOCDeleteOperation();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_items] = v19;
  *(_QWORD *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_originalOperation] = v1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager] = v5;
  sub_21EAA25DC();
  v8 = v5;
  v9 = v1;
  v10 = v8;
  v11 = v9;
  v12 = v3;
  swift_bridgeObjectRetain();
  v13 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v18.receiver = v7;
  v18.super_class = v6;
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithItems_, v13);

  v15 = *(void **)&v14[OBJC_IVAR____TtC26DocumentManagerExecutables18DOCDeleteOperation_undoManager];
  v16 = v14;
  objc_msgSend(v15, sel_registerUndoOperationForSender_, v16);

  return v16;
}

Swift::Void __swiftcall DOCCreateFolderOperation.registerUndo()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26DocumentManagerExecutables24DOCCreateFolderOperation_undoManager), sel_registerUndoOperationForSender_, v0);
}

id DOCCreateFolderOperation.__allocating_init(parentItem:folderName:)(void *a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithParentItem_folderName_, a1, v4);

  return v5;
}

void DOCCreateFolderOperation.init(parentItem:folderName:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCCreateFolderOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCreateFolderOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_21EAE1DB8()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (id)_DocumentManagerBundle();
  if (v0)
  {
    v1 = v0;
    v2 = sub_21EB02168();
    v4 = v3;

    qword_25546C000 = v2;
    *(_QWORD *)algn_25546C008 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCCreateFolderOperation()
{
  return objc_opt_self();
}

uint64_t sub_21EAE1E90()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21EAE1EB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21EAE19C8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t DOCDeleteOperation.RemoveOperationConfirmationStrings.title.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t DOCDeleteOperation.RemoveOperationConfirmationStrings.subtitle.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

id sub_21EAE1F20(char a1)
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)_DocumentManagerBundle();
  v3 = result;
  if ((a1 & 1) != 0)
  {
    if (result)
      goto LABEL_5;
    __break(1u);
  }
  else if (result)
  {
LABEL_5:
    v4 = sub_21EB02168();

    return (id)v4;
  }
  __break(1u);
  return result;
}

id sub_21EAE2074(char a1)
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)_DocumentManagerBundle();
  v3 = result;
  if ((a1 & 1) != 0)
  {
    if (result)
      goto LABEL_5;
    __break(1u);
  }
  else if (result)
  {
LABEL_5:
    v4 = sub_21EB02168();

    return (id)v4;
  }
  __break(1u);
  return result;
}

_QWORD *_s26DocumentManagerExecutables18DOCDeleteOperationC19confirmationStrings3forAC06Removee12ConfirmationG0VSaySo6FPItemCG_tFZ_0(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  _QWORD *result;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v3 = sub_21EB0341C();
    if (v3)
    {
LABEL_3:
      v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v5 = (id)MEMORY[0x2207B5B3C](v4 - 4, a1);
        else
          v5 = *(id *)(a1 + 8 * v4);
        v6 = v5;
        v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        v8 = objc_msgSend(v5, sel_isCloudItem);

        if (v8)
          break;
        ++v4;
        if (v7 == v3)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      v9 = 1;
      if (!v2)
        goto LABEL_11;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v9 = 0;
  if (!v2)
  {
LABEL_11:
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  v10 = sub_21EB0341C();
  swift_bridgeObjectRelease();
LABEL_14:
  result = (id)_DocumentManagerBundle();
  v12 = result;
  if (v10 == 1)
  {
    if (result)
    {
      sub_21EB02168();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
      result = (_QWORD *)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_21EB08F10;
      if (v3)
      {
        v12 = result;
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v13 = *(id *)(a1 + 32);
LABEL_20:
            v14 = objc_msgSend(v13, sel_displayName, 0x800000021EB13CD0);

            v15 = sub_21EB02B88();
            v17 = v16;

            v12[7] = MEMORY[0x24BEE0D00];
            v12[8] = sub_21EA5EA3C();
            v12[4] = v15;
            v12[5] = v17;
            v18 = sub_21EB02B94();
            swift_bridgeObjectRelease();
            sub_21EAE1F20(v9);
            return (_QWORD *)v18;
          }
          __break(1u);
          goto LABEL_30;
        }
      }
      else
      {
        __break(1u);
      }
      swift_bridgeObjectRetain();
      v13 = (id)MEMORY[0x2207B5B3C](0, a1);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (result)
  {
    sub_21EB02168();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v19 = swift_allocObject();
    v20 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v19 + 16) = xmmword_21EB08F10;
    v21 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v19 + 56) = v20;
    *(_QWORD *)(v19 + 64) = v21;
    *(_QWORD *)(v19 + 32) = v10;
    v18 = sub_21EB02B64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21EAE2074(v9);
    return (_QWORD *)v18;
  }
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *_s34RemoveOperationConfirmationStringsVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s34RemoveOperationConfirmationStringsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s34RemoveOperationConfirmationStringsVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s34RemoveOperationConfirmationStringsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s34RemoveOperationConfirmationStringsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDeleteOperation.RemoveOperationConfirmationStrings()
{
  return &type metadata for DOCDeleteOperation.RemoveOperationConfirmationStrings;
}

id DOCTextFieldRoundedBackgroundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id DOCTextFieldRoundedBackgroundView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v4[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  v9 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  v10 = sub_21EAE2D54();
  objc_msgSend(v9, sel_bounds);
  objc_msgSend(v10, sel_setFrame_);

  v11 = sub_21EAE2D54();
  objc_msgSend(v11, sel_setAutoresizingMask_, 18);

  v12 = sub_21EAE2D54();
  objc_msgSend(v9, sel_addSubview_, v12);

  sub_21EAE2DEC();
  return v9;
}

uint64_t type metadata accessor for DOCTextFieldRoundedBackgroundView()
{
  return objc_opt_self();
}

uint64_t DOCTextFieldRoundedBackgroundView.usePillShape.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  swift_beginAccess();
  return *v1;
}

void DOCTextFieldRoundedBackgroundView.usePillShape.setter(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
    sub_21EAE2DEC();
}

void (*DOCTextFieldRoundedBackgroundView.usePillShape.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_21EAE2AEC;
}

void sub_21EAE2AEC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
    sub_21EAE2DEC();
  free(v1);
}

id DOCTextFieldRoundedBackgroundView.bounds.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  return objc_msgSendSuper2(&v2, sel_bounds);
}

void DOCTextFieldRoundedBackgroundView.bounds.setter(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_class *v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  objc_super v18;
  objc_super v19;
  CGRect v20;
  CGRect v21;

  v9 = (objc_class *)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  v19.receiver = v4;
  v19.super_class = v9;
  objc_msgSendSuper2(&v19, sel_bounds);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18.receiver = v4;
  v18.super_class = v9;
  objc_msgSendSuper2(&v18, sel_setBounds_, a1, a2, a3, a4);
  objc_msgSend(v4, sel_bounds);
  v21.origin.x = v11;
  v21.origin.y = v13;
  v21.size.width = v15;
  v21.size.height = v17;
  if (!CGRectEqualToRect(v20, v21))
    sub_21EAE2DEC();
}

id sub_21EAE2D54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView____lazy_storage___backgroundProvidingTextField);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA48]), sel_init);
    objc_msgSend(v4, sel_setBorderStyle_, 3);
    objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_21EAE2DEC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546C090);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtC26DocumentManagerExecutables33DOCTextFieldRoundedBackgroundView_usePillShape];
  swift_beginAccess();
  if (*v5 == 1)
  {
    sub_21EAE2F70();
    sub_21EB026FC();
  }
  else
  {
    v6 = sub_21EAE2D54();
    objc_msgSend(v6, sel__cornerRadius);

    sub_21EAE2F70();
    sub_21EB026F0();
  }
  v7 = sub_21EB02708();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  v8 = (void *)sub_21EB02EC4();
  objc_msgSend(v1, sel_setHoverStyle_, v8);

}

id DOCTextFieldRoundedBackgroundView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTextFieldRoundedBackgroundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21EAE2F70()
{
  unint64_t result;

  result = qword_25546C098;
  if (!qword_25546C098)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25546C098);
  }
  return result;
}

uint64_t sub_21EAE309C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21EB07140;
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  v5 = sub_21EA5EA3C();
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = 0xD000000000000024;
  *(_QWORD *)(v3 + 40) = 0x800000021EB146B0;
  if (a1)
  {
    v9 = sub_21EA579D4(0, (unint64_t *)&qword_25546C310);
    v10 = sub_21EAEBD24((unint64_t *)&unk_25546C318, (unint64_t *)&qword_25546C310);
    *(_QWORD *)&v8 = a1;
    sub_21EA5F94C(&v8, v3 + 72);
  }
  else
  {
    *(_QWORD *)(v3 + 96) = v4;
    *(_QWORD *)(v3 + 104) = v5;
    *(_QWORD *)(v3 + 72) = 7104878;
    *(_QWORD *)(v3 + 80) = 0xE300000000000000;
  }
  v6 = a1;
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock))(1);
}

uint64_t sub_21EAE327C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EE8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_21EB09A00;
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v7 = sub_21EA5EA3C();
  v8 = v7;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(v5 + 40) = 0x800000021EB14660;
  if (!a1)
  {
    *(_QWORD *)(v5 + 96) = v6;
    *(_QWORD *)(v5 + 104) = v7;
    *(_QWORD *)(v5 + 72) = 7104878;
    *(_QWORD *)(v5 + 80) = 0xE300000000000000;
    if (a2)
      goto LABEL_5;
LABEL_7:
    *(_QWORD *)(v5 + 136) = v6;
    *(_QWORD *)(v5 + 144) = v8;
    *(_QWORD *)(v5 + 112) = 7104878;
    *(_QWORD *)(v5 + 120) = 0xE300000000000000;
    v11 = a1;
    goto LABEL_8;
  }
  v14 = sub_21EA579D4(0, (unint64_t *)&qword_25546C310);
  v15 = sub_21EAEBD24((unint64_t *)&unk_25546C318, (unint64_t *)&qword_25546C310);
  *(_QWORD *)&v13 = a1;
  sub_21EA5F94C(&v13, v5 + 72);
  if (!a2)
    goto LABEL_7;
LABEL_5:
  v9 = a1;
  v10 = sub_21EB02228();
  v14 = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
  v15 = sub_21EAEBD24((unint64_t *)&qword_25546BC30, (unint64_t *)&unk_25546C300);
  *(_QWORD *)&v13 = v10;
  sub_21EA5F94C(&v13, v5 + 112);
LABEL_8:
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v2
                                           + OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock))(0);
}

id sub_21EAE3528()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LaunchUtils.OpenAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21EAE3570()
{
  uint64_t result;
  uint64_t v1;

  result = sub_21EB02B88();
  qword_25546C0A0 = result;
  *(_QWORD *)algn_25546C0A8 = v1;
  return result;
}

void static LaunchUtils.launchDocuments(toPreview:item:alertPresenting:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  _QWORD aBlock[6];

  v40 = a3;
  v41 = a2;
  v4 = sub_21EB02300();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  LODWORD(v38) = sub_21EB022E8();
  if (qword_255469C48 != -1)
    swift_once();
  v33 = *(_QWORD *)algn_25546C0A8;
  v34 = qword_25546C0A0;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v10(v9, a1, v4);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = v12 + v6;
  v36 = v11 | 7;
  v14 = swift_allocObject();
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v35(v14 + v12, v9, v4);
  *(_BYTE *)(v14 + v13) = v38 & 1;
  v38 = sub_21EB022B8();
  v37 = sub_21EB02B58();
  v15 = v39;
  v10(v39, a1, v4);
  v16 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v13 + 31) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  v35(v21 + v12, v15, v4);
  v22 = v21 + v16;
  *(_QWORD *)v22 = sub_21EAE3AC4;
  *(_QWORD *)(v22 + 8) = v14;
  *(_BYTE *)(v22 + 16) = 1;
  v23 = (uint64_t *)(v21 + v17);
  v24 = v33;
  *v23 = v34;
  v23[1] = v24;
  *(_QWORD *)(v21 + v18) = 2;
  v25 = v40;
  *(_QWORD *)(v21 + v19) = v40;
  v26 = v41;
  *(_QWORD *)(v21 + v20) = v41;
  aBlock[4] = sub_21EAE59AC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA81D44;
  aBlock[3] = &block_descriptor_22;
  v27 = _Block_copy(aBlock);
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  v28 = v25;
  v29 = v26;
  swift_release();
  v31 = (void *)v37;
  v30 = (void *)v38;
  FPExtendBookmarkForDocumentURL();
  _Block_release(v27);
  swift_release();

}

uint64_t sub_21EAE3830(char a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((a1 & 1) != 0)
  {
    if (qword_2540A6CB8 != -1)
      swift_once();
  }
  else if (qword_2540A6CB8 != -1)
  {
    swift_once();
  }
  sub_21EB02EE8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21EB07140;
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 64) = sub_21EA5EA3C();
  *(_QWORD *)(v4 + 32) = 0xD000000000000030;
  *(_QWORD *)(v4 + 40) = 0x800000021EB14C10;
  v5 = sub_21EB022B8();
  *(_QWORD *)(v4 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
  *(_QWORD *)(v4 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
  *(_QWORD *)(v4 + 72) = v5;
  sub_21EB025F4();
  result = swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    return sub_21EB022D0();
  return result;
}

uint64_t sub_21EAE3A60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21EB02300();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21EAE3AC4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_21EB02300() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_21EAE3830(a1, v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

void sub_21EAE3B0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  objc_class *v40;
  char *v41;
  uint64_t (**v42)(int);
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  unsigned __int8 v54;
  id v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  void *v71;
  id v72;
  id v73;
  unint64_t v74;
  id v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  void (*v78)(uint64_t, char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  objc_super v90;

  v87 = a7;
  v88 = a8;
  v89 = a5;
  v86 = sub_21EB02300();
  v16 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v83 = v17;
  v85 = (char *)&v74 - (((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BEE1328];
  v84 = a6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546C350);
  inited = swift_initStackObject();
  if (a2)
  {
    *(_OWORD *)(inited + 16) = xmmword_21EB07140;
    *(_QWORD *)(inited + 32) = sub_21EB02B88();
    *(_QWORD *)(inited + 40) = v20;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 56) = a2;
    *(_QWORD *)(inited + 80) = sub_21EB02B88();
    *(_QWORD *)(inited + 88) = v21;
    *(_QWORD *)(inited + 120) = v18;
    v22 = a3 & 1;
    *(_BYTE *)(inited + 96) = a3 & 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(inited + 16) = xmmword_21EB08F10;
    *(_QWORD *)(inited + 32) = sub_21EB02B88();
    *(_QWORD *)(inited + 40) = v23;
    *(_QWORD *)(inited + 72) = v18;
    v22 = a3 & 1;
    *(_BYTE *)(inited + 48) = a3 & 1;
  }
  v81 = sub_21EA98908(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546C350);
  v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_21EB07140;
  *(_QWORD *)(v24 + 32) = sub_21EB02B88();
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)(v24 + 72) = v18;
  *(_BYTE *)(v24 + 48) = 1;
  *(_QWORD *)(v24 + 80) = sub_21EB02B88();
  *(_QWORD *)(v24 + 88) = v26;
  *(_QWORD *)(v24 + 120) = v18;
  *(_BYTE *)(v24 + 96) = 1;
  v80 = sub_21EA98908(v24);
  LOBYTE(v24) = sub_21EB022E8();
  v27 = *(char **)(v16 + 16);
  v28 = v85;
  v29 = v86;
  v82 = a4;
  v77 = (void (*)(char *, uint64_t, uint64_t))v27;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v85, a4, v86);
  v30 = *(unsigned __int8 *)(v16 + 80);
  v31 = (v30 + 17) & ~v30;
  v76 = v30;
  v32 = ((unint64_t)v83 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v83 + v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  v79 = v30 | 7;
  v34 = swift_allocObject();
  *(_BYTE *)(v34 + 16) = v24 & 1;
  v78 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v78(v34 + v31, v28, v29);
  v35 = v34 + v32;
  v36 = v89;
  v37 = v84;
  *(_QWORD *)v35 = v89;
  *(_QWORD *)(v35 + 8) = v37;
  *(_BYTE *)(v35 + 16) = v22;
  v38 = (_QWORD *)(v34 + v33);
  v39 = v88;
  *v38 = v87;
  v38[1] = v39;
  v40 = (objc_class *)type metadata accessor for LaunchUtils.OpenAppDelegate();
  v41 = (char *)objc_allocWithZone(v40);
  v42 = (uint64_t (**)(int))&v41[OBJC_IVAR____TtCV26DocumentManagerExecutables11LaunchUtilsP33_785CBA6FF492D1A84D3A93B2D10ABBAB15OpenAppDelegate_completionBlock];
  *v42 = sub_21EAEC9CC;
  v42[1] = (uint64_t (*)(int))v34;
  v90.receiver = v41;
  v90.super_class = v40;
  swift_bridgeObjectRetain();
  sub_21EB01F10();
  v43 = objc_msgSendSuper2(&v90, sel_init);
  v44 = objc_allocWithZone(MEMORY[0x24BDC1540]);
  swift_bridgeObjectRetain();
  v45 = sub_21EAE9574(v36, v37, 0);
  v46 = a9;
  if (sub_21EB02B88() == v36 && v47 == v37)
    goto LABEL_6;
  v48 = sub_21EB034C4();
  swift_bridgeObjectRelease();
  if ((v48 & 1) == 0)
  {
    if (sub_21EB02B88() == v36 && v56 == v37)
      goto LABEL_6;
    v57 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_8;
    if (sub_21EB02B88() == v36 && v58 == v37)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    v59 = sub_21EB034C4();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
      goto LABEL_11;
  }
LABEL_8:
  if (!v45)
    goto LABEL_11;
  v49 = v45;
  v50 = objc_msgSend(v49, sel_SDKVersion);
  v51 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v51)
  {
    v52 = v51;
    v53 = (void *)sub_21EB02B58();
    v54 = objc_msgSend(v52, sel_isVersion_greaterThanOrEqualToVersion_, v50, v53);

    v36 = v89;
    v46 = a9;
    if ((v54 & 1) == 0)
    {
      if (a11)
      {
        v55 = a11;
        sub_21EAE46D0(v55, v36, v37, a10, v87, v88, v82, a9, v81, v80, v43);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        v60 = v76;
        v75 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v77(v85, v82, v86);
        v61 = (v60 + 16) & ~v60;
        v62 = (uint64_t)v83 + v61 + 7;
        v83 = v43;
        v74 = v62 & 0xFFFFFFFFFFFFFFF8;
        v77 = (void (*)(char *, uint64_t, uint64_t))(((v62 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
        v63 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
        v76 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
        v64 = (v76 + 15) & 0xFFFFFFFFFFFFFFF8;
        v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
        v66 = swift_allocObject();
        v78(v66 + v61, v85, v86);
        v67 = (uint64_t *)(v66 + v74);
        v68 = v88;
        v69 = v84;
        *v67 = v89;
        v67[1] = v69;
        *(_QWORD *)((char *)v77 + v66) = a10;
        v70 = (_QWORD *)(v66 + v63);
        *v70 = v87;
        v70[1] = v68;
        *(_QWORD *)(v66 + v76) = a9;
        *(_QWORD *)(v66 + v64) = v81;
        *(_QWORD *)(v66 + v65) = v80;
        v71 = v83;
        *(_QWORD *)(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8)) = v83;
        swift_bridgeObjectRetain();
        sub_21EB01F10();
        v72 = a10;
        v73 = v71;
        _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v82, (uint64_t)sub_21EAECB24, v66);
        swift_release();

      }
      goto LABEL_22;
    }
LABEL_11:
    sub_21EAE4570(v82, v36, v37, v46, v81, v80, (uint64_t)v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v49 = v45;
LABEL_22:

    return;
  }

  __break(1u);
}

uint64_t sub_21EAE41B4(int a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  _QWORD *v38;
  os_log_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;

  v43 = a4;
  v44 = a8;
  v46 = a7;
  LODWORD(v11) = a2;
  v13 = sub_21EB02300();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v37 - v18;
  v45 = a1;
  if ((a1 & 1) != 0)
  {
    if ((a6 & 1) != 0)
    {
      v20 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a3, v13);
      v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v22 = v11;
      v11 = a3;
      v23 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = 0;
      *(_QWORD *)(v24 + 24) = 0;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v21, v17, v13);
      *(_QWORD *)(v24 + v23) = 0x3FF0000000000000;
      v25 = v11;
      LOBYTE(v11) = v22;
      _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v25, (uint64_t)sub_21EA850D4, v24);
      swift_release();

    }
  }
  else
  {
    if (qword_255469BA0 != -1)
      swift_once();
    v26 = sub_21EB0263C();
    __swift_project_value_buffer(v26, (uint64_t)static Logger.Picker);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, a3, v13);
    swift_bridgeObjectRetain_n();
    v27 = sub_21EB02624();
    v28 = sub_21EB02EE8();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v40 = v29;
      v31 = v30;
      v38 = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v48 = v41;
      *(_DWORD *)v31 = 138412546;
      v42 = v11;
      v39 = v27;
      v32 = sub_21EB022B8();
      v47 = v32;
      LOBYTE(v11) = v42;
      sub_21EB03134();
      v33 = v38;
      *v38 = v32;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_21EA591E4(v43, a5, &v48);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      v34 = v39;
      _os_log_impl(&dword_21EA4C000, v39, (os_log_type_t)v40, "Failed to open %@ in %s", (uint8_t *)v31, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v33, -1, -1);
      v35 = v41;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v35, -1, -1);
      MEMORY[0x2207B6A18](v31, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);

      swift_bridgeObjectRelease_n();
    }
  }
  result = v46(v45 & 1);
  if ((v11 & 1) != 0)
    return sub_21EB022D0();
  return result;
}

void sub_21EAE4570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v9)
  {
    v10 = v9;
    v11 = (void *)sub_21EB022B8();
    v12 = (void *)sub_21EB02B58();
    v13 = (void *)sub_21EB02AC8();
    v14 = (void *)sub_21EB02AC8();
    v15 = objc_msgSend(v10, sel_operationToOpenResource_usingApplication_uniqueDocumentIdentifier_isContentManaged_sourceAuditToken_userInfo_options_delegate_, v11, v12, 0, a4 == 1, 0, v13, v14, a7);

    if (v15)
    {
      objc_msgSend(v15, sel_start);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_21EAE46D0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD aBlock[7];

  v44 = a8;
  v45 = a3;
  v39 = a7;
  v40 = a2;
  v46 = a6;
  v47 = a4;
  v43 = a11;
  v41 = a5;
  v42 = a10;
  v38 = a9;
  v12 = sub_21EB02300();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21EB07150;
  *(_QWORD *)(v16 + 32) = a1;
  aBlock[0] = v16;
  sub_21EB02D08();
  v17 = objc_allocWithZone(MEMORY[0x24BDC8280]);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  swift_bridgeObjectRetain();
  v18 = a1;
  v19 = (void *)sub_21EB02CE4();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithItems_, v19);
  v37 = v20;

  objc_msgSend(v20, sel_setQualityOfService_, 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  v27 = v40;
  *((_QWORD *)v26 + 2) = v18;
  *((_QWORD *)v26 + 3) = v27;
  v28 = v47;
  *((_QWORD *)v26 + 4) = v45;
  *((_QWORD *)v26 + 5) = v28;
  v29 = v46;
  *((_QWORD *)v26 + 6) = v41;
  *((_QWORD *)v26 + 7) = v29;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v26[v21], v15, v12);
  *(_QWORD *)&v26[v22] = v44;
  *(_QWORD *)&v26[v23] = v38;
  *(_QWORD *)&v26[v24] = v42;
  v30 = v43;
  *(_QWORD *)&v26[v25] = v43;
  aBlock[4] = sub_21EAECCC0;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA8423C;
  aBlock[3] = &block_descriptor_93;
  v31 = _Block_copy(aBlock);
  v32 = v18;
  v33 = v37;
  swift_bridgeObjectRetain();
  v34 = v47;
  sub_21EB01F10();
  swift_bridgeObjectRetain();
  v35 = v30;
  swift_release();
  objc_msgSend(v33, sel_setActionCompletionBlock_, v31);
  _Block_release(v31);

  v36 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  objc_msgSend(v36, sel_scheduleAction_, v33);

}

void sub_21EAE49BC(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void (*a6)(_QWORD), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  _QWORD *v38;
  os_log_type_t type;
  uint64_t v40;
  void (*v41)(_QWORD);
  uint64_t aBlock[6];

  if (a1)
  {
    if (qword_255469BA0 != -1)
      swift_once();
    v18 = sub_21EB0263C();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.Picker);
    v19 = a2;
    swift_bridgeObjectRetain();
    v20 = a1;
    v21 = v19;
    swift_bridgeObjectRetain();
    v22 = a1;
    v23 = sub_21EB02624();
    v24 = sub_21EB02EE8();
    if (os_log_type_enabled(v23, v24))
    {
      v41 = a6;
      v25 = swift_slowAlloc();
      v38 = (_QWORD *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)v25 = 138412802;
      type = v24;
      v26 = v21;
      sub_21EB03134();
      *v38 = v21;

      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_21EA591E4(a3, a4, aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      v27 = (void *)sub_21EB02228();
      v28 = objc_msgSend(v27, sel_localizedDescription);

      v29 = sub_21EB02B88();
      v31 = v30;

      sub_21EA591E4(v29, v31, aBlock);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v23, type, "Failed to download item %@ for opening %s. %s", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v38, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v40, -1, -1);
      v32 = v25;
      a6 = v41;
      MEMORY[0x2207B6A18](v32, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = a1;
    *(_QWORD *)(v33 + 24) = a5;
    aBlock[4] = (uint64_t)sub_21EAECD80;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21EA5EAB0;
    aBlock[3] = (uint64_t)&block_descriptor_99;
    v34 = _Block_copy(aBlock);
    v35 = a1;
    v36 = a1;
    v37 = a5;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v34);

    a6(0);
  }
  else
  {
    sub_21EAE4570(a8, a3, a4, a9, a10, a11, a12);
  }
}

void sub_21EAE4DB0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  os_log_type_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a7;
  v53 = a8;
  v18 = sub_21EB02300();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v51 = a1;
    sub_21EAE46D0(v51, a4, a5, a6, v52, v53, a3, a9, a10, a11, a12);

  }
  else
  {
    v23 = a3;
    v24 = v22;
    v25 = v20;
    v26 = v19;
    v53 = a4;
    v27 = a2;
    if (qword_255469BA0 != -1)
      swift_once();
    v28 = sub_21EB0263C();
    __swift_project_value_buffer(v28, (uint64_t)static Logger.Picker);
    v29 = v24;
    v30 = v24;
    v31 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v30, v23, v26);
    v32 = a5;
    swift_bridgeObjectRetain();
    v33 = v27;
    swift_bridgeObjectRetain();
    v34 = v27;
    v35 = sub_21EB02624();
    v36 = sub_21EB02EE8();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      HIDWORD(v50) = v36;
      v51 = v35;
      v37 = v31;
      v38 = swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v55 = v52;
      *(_DWORD *)v38 = 138412802;
      v40 = sub_21EB022B8();
      v54 = v40;
      sub_21EB03134();
      *v39 = v40;
      v41 = v39;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v37);
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      v54 = sub_21EA591E4(v53, v32, &v55);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 22) = 2080;
      if (v27)
      {
        v42 = (void *)sub_21EB02228();
        v43 = objc_msgSend(v42, sel_localizedDescription);

        v44 = sub_21EB02B88();
        v46 = v45;

      }
      else
      {
        v46 = 0x800000021EB14BC0;
        v44 = 0xD000000000000013;
      }
      v47 = BYTE4(v50);
      v54 = sub_21EA591E4(v44, v46, &v55);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      v48 = v51;
      _os_log_impl(&dword_21EA4C000, v51, v47, "Failed to fetch item for url %@ in %s. %s", (uint8_t *)v38, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v41, -1, -1);
      v49 = v52;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v49, -1, -1);
      MEMORY[0x2207B6A18](v38, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v31);
      swift_bridgeObjectRelease_n();

    }
  }
}

uint64_t sub_21EAE51AC(NSObject *a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t *v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  char *v68;
  char *v69;
  uint64_t v70;
  os_log_t v71;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  uint64_t aBlock[7];

  v93 = a7;
  v94 = a8;
  v92 = a6;
  v102 = a4;
  v103 = a5;
  v99 = a3;
  v97 = a1;
  v12 = sub_21EB02A20();
  v95 = *(_QWORD *)(v12 - 8);
  v96 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21EB02A5C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21EB02A2C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_21EB02300();
  v100 = *(_QWORD *)(v23 - 8);
  v101 = v23;
  v24 = *(_QWORD *)(v100 + 64);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v98 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  MEMORY[0x24BDAC7A8](v26);
  if (a2)
  {
    v29 = (uint64_t)a2;
    if (qword_255469BA0 != -1)
      swift_once();
    v30 = sub_21EB0263C();
    __swift_project_value_buffer(v30, (uint64_t)static Logger.Picker);
    v31 = v100;
    v32 = v98;
    v33 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v98, v99, v101);
    v34 = a2;
    v35 = sub_21EB02624();
    v36 = sub_21EB02EE8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v97 = v35;
      v38 = (_QWORD *)v96;
      v99 = swift_slowAlloc();
      aBlock[0] = v99;
      *(_DWORD *)v37 = 138412546;
      v39 = sub_21EB022B8();
      v104 = v39;
      sub_21EB03134();
      *v38 = v39;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
      *(_WORD *)(v37 + 12) = 2080;
      v104 = v29;
      v40 = v34;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546C360);
      v41 = sub_21EB02BA0();
      v104 = sub_21EA591E4(v41, v42, aBlock);
      sub_21EB03134();

      swift_bridgeObjectRelease();
      v43 = v97;
      _os_log_impl(&dword_21EA4C000, v97, v36, "Error while extending bookmark for %@ with error %s", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      v44 = v96;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v44, -1, -1);
      v45 = v99;
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v45, -1, -1);
      MEMORY[0x2207B6A18](v37, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);

    }
  }
  else
  {
    v89 = v18;
    v90 = v16;
    v91 = v15;
    v98 = v14;
    if (v97)
    {
      v88 = a11;
      v86 = a10;
      v87 = a9;
      v46 = v28;
      v83 = v28;
      v85 = sub_21EB02B88();
      v84 = v47;
      sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
      (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BEE5490], v19);
      v97 = (os_log_t)sub_21EB02F90();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      v48 = v100;
      v49 = v101;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v46, v99, v101);
      v50 = (*(unsigned __int8 *)(v48 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v51 = (v24 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
      v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
      v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
      v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
      v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      v56 = swift_allocObject();
      *(_BYTE *)(v56 + 16) = v92 & 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))(v56 + v50, v83, v49);
      v57 = (_QWORD *)(v56 + v51);
      v58 = v94;
      *v57 = v93;
      v57[1] = v58;
      v59 = (_QWORD *)(v56 + v52);
      v60 = v103;
      *v59 = v102;
      v59[1] = v60;
      *(_QWORD *)(v56 + v53) = v87;
      v61 = v86;
      *(_QWORD *)(v56 + v54) = v86;
      v62 = v88;
      *(_QWORD *)(v56 + v55) = v88;
      v63 = (uint64_t *)(v56 + ((v55 + 15) & 0xFFFFFFFFFFFFFFF8));
      v64 = v84;
      *v63 = v85;
      v63[1] = v64;
      aBlock[4] = (uint64_t)sub_21EAECF18;
      aBlock[5] = v56;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21EA5EAB0;
      aBlock[3] = (uint64_t)&block_descriptor_108;
      v65 = _Block_copy(aBlock);
      v66 = v62;
      swift_bridgeObjectRetain();
      sub_21EB01F10();
      v67 = v61;
      v68 = v89;
      sub_21EB02A44();
      v104 = MEMORY[0x24BEE4AF8];
      sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
      sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
      v69 = v98;
      v70 = v96;
      sub_21EB031DC();
      v71 = v97;
      MEMORY[0x2207B57A0](0, v68, v69, v65);
      _Block_release(v65);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v69, v70);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v91);
      return swift_release();
    }
    v73 = (char *)&v82 - v27;
    v74 = v100;
    if (qword_255469BA0 != -1)
      swift_once();
    v75 = sub_21EB0263C();
    __swift_project_value_buffer(v75, (uint64_t)static Logger.Picker);
    v76 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v99, v101);
    v77 = sub_21EB02624();
    v78 = sub_21EB02EE8();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v79 = 138412290;
      v81 = sub_21EB022B8();
      aBlock[0] = v81;
      sub_21EB03134();
      *v80 = v81;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v76);
      _os_log_impl(&dword_21EA4C000, v77, v78, "bookmark for %@ is nil", v79, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v80, -1, -1);
      MEMORY[0x2207B6A18](v79, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v76);
    }

  }
  return v102(0);
}

void static LaunchUtils.tryOpeningInApp(applicationIdentifier:url:item:urlManagedState:requireOpenIn:alertPresenting:completionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  sub_21EAE9B08(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t static LaunchUtils.installConfigurationProfile(from:completionBlock:)(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD v39[4];
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  id v50;
  char v51;
  id aBlock[8];

  v48 = a2;
  v49 = a3;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v47 = sub_21EB02300();
  v4 = *(_QWORD *)(v47 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v47);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21EB07140;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  v44 = sub_21EA5EA3C();
  *(_QWORD *)(v7 + 64) = v44;
  v42 = (unint64_t)"%@: attempting to install %@";
  *(_QWORD *)(v7 + 32) = 0xD000000000000032;
  *(_QWORD *)(v7 + 40) = 0x800000021EB143B0;
  v8 = a1;
  v9 = sub_21EB022B8();
  v41 = sub_21EA579D4(0, &qword_25546C0B8);
  *(_QWORD *)(v7 + 96) = v41;
  v40 = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
  *(_QWORD *)(v7 + 104) = v40;
  *(_QWORD *)(v7 + 72) = v9;
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  v10 = sub_21EB022AC();
  v12 = v11;
  v45 = sub_21EB022E8();
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
  v51 = 0;
  v13 = (void *)sub_21EB022B8();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v46 = v8;
  v15 = v8;
  v16 = v47;
  v14((char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v47);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = (v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = &v51;
  *((_QWORD *)v19 + 3) = v10;
  *((_QWORD *)v19 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v19[v17], v6, v16);
  v20 = &v19[v18];
  v21 = v48;
  v22 = v49;
  *(_QWORD *)v20 = v48;
  *((_QWORD *)v20 + 1) = v22;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = sub_21EAE9D44;
  v23[3] = v19;
  aBlock[4] = sub_21EA5EA88;
  aBlock[5] = v23;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_21EAE62A4;
  aBlock[3] = &block_descriptor_12_1;
  v24 = _Block_copy(aBlock);
  sub_21EB01F10();
  sub_21EB01F10();
  v25 = v50;
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v25, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v13, 0, aBlock, v24);
  _Block_release(v24);

  v26 = aBlock[0];
  v27 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v16 & 1) != 0)
    __break(1u);
  if ((v51 & 1) == 0)
  {
    v28 = v21;
    v47 = static DOCLog.UI;
    v39[3] = sub_21EB02EE8();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_21EB09A00;
    v30 = MEMORY[0x24BEE0D00];
    v31 = v44;
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 64) = v31;
    v32 = v42 | 0x8000000000000000;
    *(_QWORD *)(v29 + 32) = 0xD000000000000032;
    *(_QWORD *)(v29 + 40) = v32;
    v33 = sub_21EB022B8();
    v34 = v40;
    *(_QWORD *)(v29 + 96) = v41;
    *(_QWORD *)(v29 + 104) = v34;
    *(_QWORD *)(v29 + 72) = v33;
    aBlock[0] = v26;
    v35 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A418);
    v36 = sub_21EB02BA0();
    *(_QWORD *)(v29 + 136) = v30;
    *(_QWORD *)(v29 + 144) = v31;
    *(_QWORD *)(v29 + 112) = v36;
    *(_QWORD *)(v29 + 120) = v37;
    sub_21EB025F4();
    v25 = v50;
    swift_bridgeObjectRelease();
    v28(0);
  }

  if ((v45 & 1) != 0)
    sub_21EB022D0();
  return swift_release();
}

void sub_21EAE5E44(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void (*v29)(uint64_t);
  id v30[3];

  v30[2] = *(id *)MEMORY[0x24BDAC8D0];
  *a2 = 1;
  v10 = sub_21EB0230C();
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultPermission);
  v14 = (void *)sub_21EB02318();
  v15 = (void *)sub_21EB02B58();
  if (qword_255469C48 != -1)
    swift_once();
  v16 = (void *)sub_21EB02B58();
  v30[0] = 0;
  v17 = objc_msgSend(v13, sel_queueFileDataForAcceptance_originalFileName_forBundleID_outError_, v14, v15, v16, v30);

  v18 = v30[0];
  if (v17)
  {
    v29 = a6;
    v19 = sub_21EB02B88();
    v21 = v20;
    v22 = v18;

    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_21EB09A00;
    v24 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
    v25 = sub_21EA5EA3C();
    *(_QWORD *)(v23 + 32) = 0xD000000000000032;
    *(_QWORD *)(v23 + 40) = 0x800000021EB143B0;
    *(_QWORD *)(v23 + 96) = v24;
    *(_QWORD *)(v23 + 104) = v25;
    *(_QWORD *)(v23 + 64) = v25;
    *(_QWORD *)(v23 + 72) = v19;
    *(_QWORD *)(v23 + 80) = v21;
    v26 = sub_21EB022B8();
    *(_QWORD *)(v23 + 136) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v23 + 144) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v23 + 112) = v26;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v29(1);
    sub_21EA8DBD8(v10, v12);
  }
  else
  {
    v27 = v30[0];
    v28 = (void *)sub_21EB02234();

    swift_willThrow();
    sub_21EA8DBD8(v10, v12);
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EE8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_21EB09A00;
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v7 + 32) = 0xD000000000000032;
    *(_QWORD *)(v7 + 40) = 0x800000021EB143B0;
    v8 = sub_21EB022B8();
    *(_QWORD *)(v7 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v7 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v7 + 72) = v8;
    v9 = sub_21EB02228();
    *(_QWORD *)(v7 + 136) = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
    *(_QWORD *)(v7 + 144) = sub_21EAEBD24((unint64_t *)&qword_25546BC30, (unint64_t *)&unk_25546C300);
    *(_QWORD *)(v7 + 112) = v9;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    a6(0);

  }
}

uint64_t sub_21EAE62A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_21EB02300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_21EB022DC();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)(uint64_t a1, void *a2, char a3, int a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _BYTE v22[12];
  int v23;
  id v24;
  uint64_t v25;

  v25 = a6;
  v13 = sub_21EB02300();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    v24 = a2;
    sub_21EAE64E4(a1, v24, a4 & 1, a3 & 1, a5, v25, a7);
  }
  else
  {
    v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(&v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v13);
    v17 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v23 = a4;
    v18 = v17 + v15;
    v19 = swift_allocObject();
    *(_BYTE *)(v19 + 16) = a3 & 1;
    v20 = v25;
    *(_QWORD *)(v19 + 24) = a5;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = a7;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
    *(_BYTE *)(v19 + v18) = v23 & 1;
    v21 = a5;
    sub_21EB01F10();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(a1, (uint64_t)sub_21EAE9E30, v19);
    swift_release();
  }

}

void sub_21EAE64E4(uint64_t a1, void *a2, int a3, int a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  int v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v32 = a6;
  v33 = a7;
  v31 = a5;
  v29 = a4;
  v30 = a3;
  v9 = sub_21EB02300();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultPermission);
  v14 = objc_msgSend(v13, sel_dataOwnerStateForNode_, a2);

  v28 = (id)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_BYTE *)(v18 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v15, v12, v9);
  v19 = v18 + v16;
  *(_QWORD *)v19 = v14;
  *(_BYTE *)(v19 + 8) = v30;
  v21 = v31;
  v20 = v32;
  *(_QWORD *)(v18 + v17) = v31;
  v22 = (_QWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  v23 = v33;
  *v22 = v20;
  v22[1] = v23;
  aBlock[4] = sub_21EAEC2C8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA81E00;
  aBlock[3] = &block_descriptor_62_0;
  v24 = _Block_copy(aBlock);
  v25 = a2;
  v26 = v21;
  sub_21EB01F10();
  swift_release();
  objc_msgSend(v28, sel_fetchProviderDomainForItem_cachePolicy_completionHandler_, v25, 1, v24);
  _Block_release(v24);
}

uint64_t sub_21EAE66DC(void *a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[7];

  v48 = a8;
  v47 = a7;
  v40 = a5;
  v42 = a4;
  v44 = a10;
  v45 = a6;
  v43 = a9;
  v50 = sub_21EB02A20();
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v49 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21EB02A5C();
  v51 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21EB02300();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21EB02A2C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BEE5480], v19);
  v41 = sub_21EB02F90();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v40, v15);
  v23 = (*(unsigned __int8 *)(v16 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = (v23 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v23 + v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a3;
  *(_QWORD *)(v26 + 24) = a1;
  *(_BYTE *)(v26 + 32) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v26 + v23, v18, v15);
  v27 = v26 + v24;
  v28 = v44;
  *(_QWORD *)v27 = v45;
  *(_BYTE *)(v27 + 8) = v47;
  v29 = v48;
  *(_QWORD *)(v26 + v25) = v48;
  v30 = (_QWORD *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v30 = v43;
  v30[1] = v28;
  aBlock[4] = sub_21EAEC410;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21EA5EAB0;
  aBlock[3] = &block_descriptor_68;
  v31 = _Block_copy(aBlock);
  v32 = a1;
  v33 = v29;
  sub_21EB01F10();
  v34 = a3;
  v35 = v46;
  sub_21EB02A44();
  v54 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  v37 = v49;
  v36 = v50;
  sub_21EB031DC();
  v38 = (void *)v41;
  MEMORY[0x2207B57A0](0, v35, v37, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v36);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v52);
  return swift_release();
}

void sub_21EAE6A48(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, char a6, void *a7, void (*a8)(_QWORD), uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  id v29;

  v14 = sub_21EAE9E94((unint64_t)a1);
  v16 = v15;
  if (a2)
  {
    v27 = v14;
    v28 = a8;
    v26 = a2;
    v17 = objc_msgSend(v26, sel_topLevelBundleIdentifier);
    v25 = sub_21EB02B88();
    v19 = v18;

    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v20 + 32) = 0xD000000000000089;
    *(_QWORD *)(v20 + 40) = 0x800000021EB148F0;
    v21 = sub_21EB022B8();
    *(_QWORD *)(v20 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 72) = v21;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v22 = a1;
    sub_21EAE6DDC(v22, a5, v25, v19, v27, v16, a6 & 1, v28, a9, a3 & 1, a4, a7);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v23 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v23 + 32) = 0xD000000000000089;
    *(_QWORD *)(v23 + 40) = 0x800000021EB148F0;
    v24 = sub_21EB022B8();
    *(_QWORD *)(v23 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v23 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v23 + 72) = v24;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v29 = a1;
    sub_21EAE6DDC(v29, a5, 0, 0, 0, 0, a6 & 1, a8, a9, a3 & 1, a4, a7);

  }
}

uint64_t sub_21EAE6DDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void (*a8)(_QWORD), uint64_t a9, unsigned __int8 a10, uint64_t a11, void *a12)
{
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  char *v65;

  v61 = a3;
  v62 = a4;
  v63 = a12;
  v18 = sub_21EB02300();
  v58 = *(_QWORD *)(v18 - 8);
  v59 = v18;
  v19 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v64 = a1;
  v65 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a10;
  v20 = (void *)sub_21EAEB77C(a1, a2, a5, a6, a10, a7);
  if (!v20)
    return static LaunchUtils.installConfigurationProfile(from:completionBlock:)(a11, a8, a9);
  if (v20 == (void *)1)
  {
    v23 = (uint64_t (*)(_QWORD))a8;
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v24 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v24 + 32) = 0xD000000000000071;
    *(_QWORD *)(v24 + 40) = 0x800000021EB149A0;
    v25 = sub_21EB022B8();
    *(_QWORD *)(v24 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v24 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v24 + 72) = v25;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    return v23(0);
  }
  else
  {
    v27 = v21;
    v28 = v22;
    v55 = a2;
    v56 = a8;
    v57 = a9;

    if (qword_2540A6CB8 != -1)
      swift_once();
    LODWORD(v54) = sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_21EB09A00;
    *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
    v30 = sub_21EA5EA3C();
    *(_QWORD *)(v29 + 64) = v30;
    *(_QWORD *)(v29 + 32) = 0xD000000000000071;
    *(_QWORD *)(v29 + 40) = 0x800000021EB149A0;
    v31 = sub_21EB022B8();
    v53 = a11;
    *(_QWORD *)(v29 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    v32 = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v29 + 72) = v31;
    *(_QWORD *)(v29 + 136) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v29 + 144) = v30;
    *(_QWORD *)(v29 + 104) = v32;
    *(_QWORD *)(v29 + 112) = v27;
    v52 = v27;
    *(_QWORD *)(v29 + 120) = v28;
    swift_bridgeObjectRetain();
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v34 = v58;
    v33 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v65, a11, v59);
    v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v36 = (v19 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    v40 = v57;
    *(_QWORD *)(v39 + 16) = v56;
    *(_QWORD *)(v39 + 24) = v40;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v39 + v35, v65, v33);
    v41 = (uint64_t *)(v39 + v36);
    v42 = v52;
    *v41 = v52;
    v41[1] = v28;
    v43 = v63;
    v44 = v64;
    *(_QWORD *)(v39 + v37) = v64;
    v45 = v54;
    v46 = v55;
    *(_QWORD *)(v39 + v38) = v55;
    v47 = v39 + v45;
    v48 = v62;
    *(_QWORD *)v47 = v61;
    *(_QWORD *)(v47 + 8) = v48;
    v49 = v42;
    LOBYTE(v33) = v60 & 1;
    *(_BYTE *)(v47 + 16) = v60 & 1;
    *(_QWORD *)(v39 + ((v38 + 39) & 0xFFFFFFFFFFFFFFF8)) = v43;
    swift_bridgeObjectRetain();
    v50 = v43;
    swift_bridgeObjectRetain();
    sub_21EB01F10();
    v51 = v44;
    sub_21EAE9B08(v49, v28, v53, v44, v46, v33, v50, (uint64_t)sub_21EAEC564, v39);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t static LaunchUtils.launchAction(for:urlManagedState:providerBundleId:appContainerBundleId:requireOpenIn:preferQuickLook:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  return sub_21EAEB77C(a1, a2, a5, a6, a7, a8);
}

void *sub_21EAE727C(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;

  v60 = a7;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    return (void *)a2(1);
  v55 = a2;
  v56 = a5;
  v58 = a8;
  v59 = a6;
  v54 = a3;
  v57 = a11;
  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v23 = swift_allocObject();
  v52 = xmmword_21EB09A00;
  *(_OWORD *)(v23 + 16) = xmmword_21EB09A00;
  v24 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
  v25 = sub_21EA5EA3C();
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = 0xD000000000000071;
  *(_QWORD *)(v23 + 40) = 0x800000021EB149A0;
  v51 = 0x800000021EB149A0;
  v26 = sub_21EB022B8();
  v50 = sub_21EA579D4(0, &qword_25546C0B8);
  *(_QWORD *)(v23 + 96) = v50;
  v27 = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
  *(_QWORD *)(v23 + 72) = v26;
  *(_QWORD *)(v23 + 136) = v24;
  *(_QWORD *)(v23 + 144) = v25;
  v49 = v27;
  v28 = v56;
  *(_QWORD *)(v23 + 104) = v27;
  *(_QWORD *)(v23 + 112) = v28;
  *(_QWORD *)(v23 + 120) = v59;
  swift_bridgeObjectRetain();
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  v29 = sub_21EB022AC();
  v31 = v30;
  v32 = objc_msgSend(v60, sel_contentType);
  sub_21EB024F8();

  v33 = sub_21EB025DC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v21, 0, 1, v33);
  v34 = (void *)sub_21EAEB128(v29, v31, (uint64_t)v21, v58, v57 & 1);
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  sub_21EA59E08((uint64_t)v21, (uint64_t *)&unk_2540A6540);
  if ((unint64_t)v34 < 2)
  {
    v39 = v55;
LABEL_11:
    sub_21EAEC60C(v34);
    return (void *)v39(0);
  }
  swift_bridgeObjectRetain();
  sub_21EB02EDC();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v52;
  v41 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v40 + 64) = v25;
  *(_QWORD *)(v40 + 32) = 0xD000000000000071;
  *(_QWORD *)(v40 + 40) = v51;
  v42 = sub_21EB022B8();
  v43 = v49;
  *(_QWORD *)(v40 + 96) = v50;
  *(_QWORD *)(v40 + 104) = v43;
  *(_QWORD *)(v40 + 72) = v42;
  *(_QWORD *)(v40 + 136) = v41;
  *(_QWORD *)(v40 + 144) = v25;
  *(_QWORD *)(v40 + 112) = v36;
  *(_QWORD *)(v40 + 120) = v38;
  swift_bridgeObjectRetain();
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  if (v36 == v28 && v38 == v59 || (sub_21EB034C4() & 1) != 0)
  {
    v39 = v55;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (a10
    && (v44 = objc_msgSend((id)objc_opt_self(), sel_defaultPermission),
        v45 = (void *)sub_21EB02B58(),
        v46 = (void *)sub_21EB02B58(),
        v47 = objc_msgSend(v44, sel_canAppWithBundleIdentifier_performAction_bundleIdentifier_, v45, 1, v46), v44, v45, v46, (v47 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v55(0);
  }
  else
  {
    sub_21EAE9B08(v36, v38, a4, v60, v58, v57 & 1, a12, (uint64_t)v55, v54);
    swift_bridgeObjectRelease();
  }
  return sub_21EAEC60C(v34);
}

void sub_21EAE7708(void *a1, void *a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void (*a12)(_QWORD), uint64_t a13)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  if (a1)
  {
    v27 = a1;
    sub_21EAE6DDC(v27, a6, a7, a8, a9, a10, a11 & 1, a12, a13, a3 & 1, a4, a5);

  }
  else
  {
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21EB09A00;
    v21 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    v22 = sub_21EA5EA3C();
    *(_QWORD *)(v20 + 64) = v22;
    *(_QWORD *)(v20 + 32) = 0xD000000000000089;
    *(_QWORD *)(v20 + 40) = 0x800000021EB148F0;
    v23 = sub_21EB022B8();
    *(_QWORD *)(v20 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 72) = v23;
    v24 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546A330);
    v25 = sub_21EB02BA0();
    *(_QWORD *)(v20 + 136) = v21;
    *(_QWORD *)(v20 + 144) = v22;
    *(_QWORD *)(v20 + 112) = v25;
    *(_QWORD *)(v20 + 120) = v26;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    a12(0);
  }
}

void sub_21EAE7928(void *a1, uint64_t a2, int a3, void *a4, uint64_t a5, void *a6, uint64_t a7, int a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  void *v42;
  id v43;

  v15 = sub_21EB02300();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43 = a1;
    sub_21EAE64E4(a7, v43, a8 & 1, a3 & 1, a4, a5, (uint64_t)a6);

  }
  else
  {
    v38 = v18;
    v39 = a3;
    v40 = a8;
    v41 = a5;
    v42 = a4;
    v43 = a6;
    if (qword_2540A6CB8 != -1)
      swift_once();
    LODWORD(v37) = sub_21EB02EDC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21EB07140;
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v20 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v20 + 32) = 0xD000000000000089;
    *(_QWORD *)(v20 + 40) = 0x800000021EB148F0;
    v36 = a7;
    v21 = sub_21EB022B8();
    *(_QWORD *)(v20 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 104) = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)(v20 + 72) = v21;
    sub_21EB025F4();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v22 = a7;
    v23 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v38);
    v24 = (*(unsigned __int8 *)(v16 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v25 = (v17 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v28 = swift_allocObject();
    *(_BYTE *)(v28 + 16) = v39 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v28 + v24, v19, v23);
    v29 = v42;
    v30 = (uint64_t)v43;
    *(_QWORD *)(v28 + v25) = v42;
    *(_QWORD *)(v28 + v26) = 2;
    v31 = (_QWORD *)(v28 + v27);
    v32 = v28 + ((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v31 = 0;
    v31[1] = 0;
    LOBYTE(v31) = v40 & 1;
    *(_QWORD *)v32 = 0;
    *(_QWORD *)(v32 + 8) = 0;
    *(_BYTE *)(v32 + 16) = (_BYTE)v31;
    v33 = (uint64_t *)(v28 + ((v27 + 47) & 0xFFFFFFFFFFFFFFF8));
    *v33 = v41;
    v33[1] = v30;
    v34 = v29;
    sub_21EB01F10();
    _sSo13FPItemManagerC08DocumentB11ExecutablesE13doc_fetchItem3for17completionHandlery10Foundation3URLV_ySo0A0CSg_s5Error_pSgtctF_0(v36, (uint64_t)sub_21EAEC704, v28);
    swift_release();

  }
}

uint64_t static LaunchUtils.bundleIdentifierOfDefaultApp(for:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v45[2];

  v45[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultPermission);
  v3 = objc_msgSend(v2, sel_dataOwnerStateForNode_, a1);

  v4 = (void *)objc_opt_self();
  v45[0] = 0;
  v5 = a1;
  v6 = objc_msgSend(v4, sel_providerDomainForItem_cachePolicy_error_, v5, 3, v45);
  if (v6)
  {
    v7 = v6;
    v8 = v45[0];

    v9 = objc_msgSend(v7, sel_topLevelBundleIdentifier);
    sub_21EB02B88();

    v10 = sub_21EAE9E94((unint64_t)v5);
    v12 = v11;

  }
  else
  {
    v13 = v45[0];
    v14 = (void *)sub_21EB02234();

    swift_willThrow();
    if (qword_255469B78 != -1)
      swift_once();
    v15 = sub_21EB0263C();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.UI);
    v16 = v14;
    v17 = v14;
    v18 = sub_21EB02624();
    v19 = sub_21EB02EE8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = (void *)swift_slowAlloc();
      v45[0] = v21;
      *(_DWORD *)v20 = 136315138;
      swift_getErrorValue();
      v22 = sub_21EB03554();
      sub_21EA591E4(v22, v23, (uint64_t *)v45);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21EA4C000, v18, v19, "Error fetching providerDomain %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v21, -1, -1);
      MEMORY[0x2207B6A18](v20, -1, -1);

    }
    else
    {

    }
    v10 = 0;
    v12 = 0;
  }
  v24 = (void *)sub_21EAEB77C(v5, (uint64_t)v3, v10, v12, 1, 0);
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v24)
  {
    if (qword_255469C48 != -1)
      swift_once();
    v26 = qword_25546C0A0;
    goto LABEL_38;
  }
  if (v24 == (void *)1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25546C0D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21EB07140;
    if (qword_255469C48 != -1)
      swift_once();
    v30 = *(_QWORD *)algn_25546C0A8;
    *(_QWORD *)(inited + 32) = qword_25546C0A0;
    *(_QWORD *)(inited + 40) = v30;
    *(_QWORD *)(inited + 48) = 0xD000000000000031;
    *(_QWORD *)(inited + 56) = 0x800000021EB14470;
    v31 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v32 = objc_msgSend(v31, sel_mainBundle);
    v33 = objc_msgSend(v32, sel_bundleIdentifier);

    if (v33)
    {
      v34 = sub_21EB02B88();
      v36 = v35;

      v37 = *(_QWORD *)(inited + 40);
      if (v37)
      {
LABEL_15:
        if (v36)
        {
          if (*(_QWORD *)(inited + 32) == v34 && v37 == v36 || (sub_21EB034C4() & 1) != 0)
            goto LABEL_32;
LABEL_28:
          v43 = *(_QWORD *)(inited + 56);
          if (v43 && (*(_QWORD *)(inited + 48) == v34 && v43 == v36 || (sub_21EB034C4() & 1) != 0))
          {
LABEL_32:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_37:
            v26 = qword_25546C0A0;
LABEL_38:
            swift_bridgeObjectRetain();
            return v26;
          }
          goto LABEL_34;
        }
        if (*(_QWORD *)(inited + 56))
        {
LABEL_34:
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
          swift_arrayDestroy();
          return 0;
        }
LABEL_36:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6CF8);
        swift_arrayDestroy();
        goto LABEL_37;
      }
    }
    else
    {
      v34 = 0;
      v36 = 0;
      v37 = *(_QWORD *)(inited + 40);
      if (v37)
        goto LABEL_15;
    }
    if (v36)
      goto LABEL_28;
    goto LABEL_36;
  }

  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_21EB09A00;
  v39 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v38 + 56) = MEMORY[0x24BEE0D00];
  v40 = sub_21EA5EA3C();
  *(_QWORD *)(v38 + 64) = v40;
  *(_QWORD *)(v38 + 32) = 0xD000000000000022;
  *(_QWORD *)(v38 + 40) = 0x800000021EB14440;
  *(_QWORD *)(v38 + 96) = sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
  v41 = sub_21EAEBD24(&qword_2540A6EC8, (unint64_t *)&qword_2540A6EC0);
  *(_QWORD *)(v38 + 72) = v5;
  *(_QWORD *)(v38 + 136) = v39;
  *(_QWORD *)(v38 + 144) = v40;
  *(_QWORD *)(v38 + 104) = v41;
  *(_QWORD *)(v38 + 112) = v26;
  *(_QWORD *)(v38 + 120) = v28;
  v42 = v5;
  swift_bridgeObjectRetain();
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  return v26;
}

_QWORD *sub_21EAE82D8()
{
  _QWORD *result;

  type metadata accessor for FPHierarchyLookup();
  swift_allocObject();
  result = sub_21EAE8D38();
  qword_25546C0B0 = (uint64_t)result;
  return result;
}

uint64_t sub_21EAE8314(void *a1, uint64_t a2, char a3)
{
  void **v3;
  uint64_t v4;
  void **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  dispatch_semaphore_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32;
  NSObject *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void **v40;
  void *v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  id v47;
  void **v48;
  void *v49;
  id v50;
  void **v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t aBlock;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  void *v73;
  _QWORD *v74;

  v5 = v3;
  v9 = sub_21EB02A74();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v52 - v12;
  v13 = sub_21EB02A20();
  v62 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21EB02A5C();
  v59 = *(_QWORD *)(v15 - 8);
  v60 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = objc_msgSend(a1, sel_itemID);
  v18 = objc_msgSend(a1, sel_parentItemID);
  if ((a3 & 1) != 0)
  {
    v55 = v13;
    v58 = v18;
    v53 = v5;
    v54 = v4;
  }
  else
  {
    v57 = a2;
    v19 = MEMORY[0x24BDAC7A8](v18);
    *(&v52 - 2) = v5;
    *(&v52 - 1) = (void **)v19;
    v20 = (void *)v19;
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25546C2E0);
    sub_21EB02F6C();

    v23 = aBlock;
    if (aBlock)
    {

      return v23;
    }
    v55 = v13;
    v58 = v20;
    v53 = v5;
    v54 = v4;
  }
  v24 = dispatch_semaphore_create(0);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  v52 = (void **)(v25 + 16);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  v27 = (uint64_t *)(v26 + 16);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v28 = (void *)sub_21EB02F90();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a1;
  v29[3] = v26;
  v30 = v67;
  v29[4] = v25;
  v29[5] = v30;
  v29[6] = v24;
  v73 = sub_21EAEC138;
  v74 = v29;
  aBlock = MEMORY[0x24BDAC760];
  v70 = 1107296256;
  v71 = sub_21EA5EAB0;
  v72 = &block_descriptor_28_0;
  v31 = _Block_copy(&aBlock);
  v32 = a1;
  v56 = v26;
  sub_21EB01F10();
  v57 = v25;
  sub_21EB01F10();
  v67 = v30;
  v33 = v24;
  sub_21EB02A44();
  v68 = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  v34 = v61;
  v35 = v55;
  sub_21EB031DC();
  MEMORY[0x2207B57A0](0, v17, v34, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
  swift_release();
  v36 = v63;
  sub_21EB02A68();
  v37 = v64;
  MEMORY[0x2207B52C0](v36, 5.0);
  v38 = v66;
  v39 = *(void (**)(char *, uint64_t))(v65 + 8);
  v39(v36, v66);
  sub_21EB03020();
  v39(v37, v38);
  swift_beginAccess();
  v23 = *v27;
  if (*v27)
  {
    v40 = v53;
    v41 = v53[2];
    v42 = (_QWORD *)swift_allocObject();
    v43 = v58;
    v42[2] = v40;
    v42[3] = v43;
    v42[4] = v23;
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = sub_21EAEC17C;
    *(_QWORD *)(v44 + 24) = v42;
    v73 = sub_21EA5EAA8;
    v74 = (_QWORD *)v44;
    aBlock = MEMORY[0x24BDAC760];
    v70 = 1107296256;
    v71 = sub_21EA5EADC;
    v72 = &block_descriptor_37_0;
    v45 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain_n();
    v46 = v41;
    sub_21EB01F10();
    v47 = v43;
    sub_21EB01F10();
    swift_release();
    dispatch_sync(v46, v45);

    _Block_release(v45);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if ((v45 & 1) == 0)
      return v23;
    __break(1u);
  }
  v23 = v57;
  v48 = v52;
  swift_beginAccess();
  v49 = *v48;
  if (!*v48)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1540]), sel_init);
    v49 = 0;
  }
  v50 = v49;
  swift_willThrow();
  swift_release();
  swift_release();

  return v23;
}

void sub_21EAE8958(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[6];

  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v11 = objc_msgSend(a1, sel_itemID);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v16[4] = sub_21EAEC218;
  v16[5] = v12;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_21EAE8CAC;
  v16[3] = &block_descriptor_56_1;
  v13 = _Block_copy(v16);
  sub_21EB01F10();
  sub_21EB01F10();
  v14 = a4;
  v15 = a5;
  swift_release();
  objc_msgSend(v10, sel_fetchParentsForItemID_recursively_completionHandler_, v11, 1, v13);
  _Block_release(v13);

}

uint64_t sub_21EAE8A94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(void **)(a4 + 16);
  *(_QWORD *)(a4 + 16) = a2;
  v11 = a2;

  if (a2)
  {
    v12 = a2;
    if (qword_2540A6CB8 != -1)
      swift_once();
    sub_21EB02EE8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21EB09A00;
    *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v13 + 64) = sub_21EA5EA3C();
    *(_QWORD *)(v13 + 32) = 0xD000000000000028;
    *(_QWORD *)(v13 + 40) = 0x800000021EB14630;
    *(_QWORD *)(v13 + 96) = sub_21EA579D4(0, (unint64_t *)&qword_25546C2F0);
    *(_QWORD *)(v13 + 104) = sub_21EAEBD24(&qword_25546C2F8, (unint64_t *)&qword_25546C2F0);
    *(_QWORD *)(v13 + 72) = a5;
    v14 = a5;
    v15 = sub_21EB02228();
    *(_QWORD *)(v13 + 136) = sub_21EA579D4(0, (unint64_t *)&unk_25546C300);
    *(_QWORD *)(v13 + 144) = sub_21EAEBD24((unint64_t *)&qword_25546BC30, (unint64_t *)&unk_25546C300);
    *(_QWORD *)(v13 + 112) = v15;
    sub_21EB025F4();
    swift_bridgeObjectRelease();

  }
  return sub_21EB03038();
}

uint64_t sub_21EAE8CAC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_21EA579D4(0, (unint64_t *)&qword_2540A6EC0);
    v4 = sub_21EB02CF0();
  }
  sub_21EB01F10();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

_QWORD *sub_21EAE8D38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _QWORD v9[2];

  v1 = sub_21EB02F48();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21EB02F30();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_21EB02A5C();
  MEMORY[0x24BDAC7A8](v7);
  v9[0] = sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  sub_21EB02A44();
  v9[1] = MEMORY[0x24BEE4AF8];
  sub_21EA59DC8((unint64_t *)&unk_2540A6E10, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D30);
  sub_21EA5DB98(qword_2540A6D40, (uint64_t *)&unk_2540A6D30);
  sub_21EB031DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5750], v1);
  v0[2] = sub_21EB02F84();
  v0[3] = sub_21EA98A3C(MEMORY[0x24BEE4AF8]);
  v0[4] = 0;
  return v0;
}

uint64_t sub_21EAE8F18(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t ObjectType;
  uint64_t result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  _QWORD aBlock[6];
  uint64_t v25;

  v6 = sub_21EB02A20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21EB02A5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = a2;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0x8000000000000000;
  sub_21EA9B8EC(a3, v14, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 24) = v25;

  swift_bridgeObjectRelease();
  swift_endAccess();
  if (*(_QWORD *)(a1 + 32))
    goto LABEL_2;
  sub_21EA579D4(0, &qword_25546C2E8);
  sub_21EA579D4(0, (unint64_t *)&qword_2540A6E20);
  v18 = (void *)sub_21EB02F54();
  v19 = sub_21EB02FCC();

  *(_QWORD *)(a1 + 32) = v19;
  result = swift_unknownObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_getObjectType();
    v20 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_21EAEC1BC;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EAB0;
    aBlock[3] = &block_descriptor_43;
    v21 = _Block_copy(aBlock);
    v23 = v6;
    v22 = v21;
    swift_unknownObjectRetain();
    sub_21EB01F10();
    sub_21EB02A44();
    sub_21EAE93E4();
    sub_21EB02FD8();
    _Block_release(v22);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    result = swift_release();
    if (*(_QWORD *)(a1 + 32))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_21EB02FF0();
      result = swift_unknownObjectRelease();
      if (*(_QWORD *)(a1 + 32))
      {
LABEL_2:
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x2207B5884](1, ObjectType);
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_21EAE9204()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(void **)(result + 16);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = sub_21EAEC1C4;
    *(_QWORD *)(v3 + 24) = v1;
    aBlock[4] = sub_21EA5EA80;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA5EADC;
    aBlock[3] = &block_descriptor_50_0;
    v4 = _Block_copy(aBlock);
    v5 = v2;
    sub_21EB01F10();
    sub_21EB01F10();
    swift_release();
    dispatch_sync(v5, v4);
    swift_release();

    _Block_release(v4);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_21EAE9348(uint64_t a1)
{
  unint64_t v2;

  if (*(_QWORD *)(a1 + 32))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21EB02FE4();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a1 + 32) = 0;
  swift_unknownObjectRelease();
  v2 = sub_21EA98A3C(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21EAE93E4()
{
  sub_21EB02A20();
  sub_21EA59DC8((unint64_t *)&qword_2540A6CE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6D10);
  sub_21EA5DB98((unint64_t *)&qword_2540A6D20, (uint64_t *)&unk_2540A6D10);
  return sub_21EB031DC();
}

uint64_t sub_21EAE9490@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t v11;

  result = swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = a2;
    swift_bridgeObjectRetain();
    v9 = sub_21EA826A4((uint64_t)v8);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
    }

    result = swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  *a3 = v11;
  return result;
}

uint64_t sub_21EAE9540()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

id sub_21EAE9574(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_21EB02234();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_21EAE964C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6520);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2540A6CB8 != -1)
    swift_once();
  v17 = static DOCLog.UI;
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21EB09A00;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  v9 = sub_21EA5EA3C();
  v10 = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = 0xD000000000000032;
  *(_QWORD *)(v7 + 40) = 0x800000021EB14730;
  if (a1)
  {
    v19 = sub_21EA579D4(0, (unint64_t *)&qword_25546C310);
    v20 = sub_21EAEBD24((unint64_t *)&unk_25546C318, (unint64_t *)&qword_25546C310);
    *(_QWORD *)&v18 = a1;
    sub_21EA5F94C(&v18, v7 + 72);
  }
  else
  {
    *(_QWORD *)(v7 + 96) = v8;
    *(_QWORD *)(v7 + 104) = v9;
    *(_QWORD *)(v7 + 72) = 7104878;
    *(_QWORD *)(v7 + 80) = 0xE300000000000000;
  }
  sub_21EA5E094(a2, (uint64_t)v6, (uint64_t *)&unk_2540A6520);
  v11 = sub_21EB02300();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    *(_QWORD *)(v7 + 136) = v8;
    *(_QWORD *)(v7 + 144) = v10;
    *(_QWORD *)(v7 + 112) = 7104878;
    *(_QWORD *)(v7 + 120) = 0xE300000000000000;
    v13 = a1;
  }
  else
  {
    v14 = a1;
    v15 = sub_21EB022B8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    v19 = sub_21EA579D4(0, &qword_25546C0B8);
    v20 = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
    *(_QWORD *)&v18 = v15;
    sub_21EA5F94C(&v18, v7 + 112);
  }
  sub_21EB025F4();
  return swift_bridgeObjectRelease();
}

void sub_21EAE98D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD aBlock[6];

  v42 = a3;
  v43 = a8;
  v44 = a2;
  v14 = sub_21EB02300();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a6 & 1) != 0)
  {
    v41 = sub_21EB022B8();
    v40 = sub_21EB02B58();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
    v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v36 = a9;
    v37 = (v18 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v18 + v16 + 31) & 0xFFFFFFFFFFFFFFF8;
    v38 = a5;
    v39 = a7;
    v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v18, v17, v14);
    v24 = v36;
    v25 = v23 + v37;
    *(_QWORD *)v25 = v43;
    *(_QWORD *)(v25 + 8) = v24;
    *(_BYTE *)(v25 + 16) = 1;
    v26 = (uint64_t *)(v23 + v19);
    v28 = v38;
    v27 = v39;
    *v26 = a4;
    v26[1] = v28;
    *(_QWORD *)(v23 + v20) = v42;
    *(_QWORD *)(v23 + v21) = v27;
    v29 = v44;
    *(_QWORD *)(v23 + v22) = v44;
    aBlock[4] = sub_21EAE59AC;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21EA81D44;
    aBlock[3] = &block_descriptor_81;
    v30 = _Block_copy(aBlock);
    v31 = v29;
    sub_21EB01F10();
    swift_bridgeObjectRetain();
    v32 = v27;
    swift_release();
    v34 = (void *)v40;
    v33 = (void *)v41;
    FPExtendBookmarkForDocumentURL();
    _Block_release(v30);

  }
  else
  {
    sub_21EAE3B0C(0, 0, 0, a1, a4, a5, v43, a9, v42, a7, v44);
  }
}

void sub_21EAE9B08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_2540A6CB8 != -1)
    swift_once();
  sub_21EB02EDC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21EB09A00;
  v13 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  v14 = sub_21EA5EA3C();
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 32) = 0xD00000000000006ELL;
  *(_QWORD *)(v12 + 40) = 0x800000021EB14B50;
  v15 = sub_21EB022B8();
  *(_QWORD *)(v12 + 96) = sub_21EA579D4(0, &qword_25546C0B8);
  v16 = sub_21EAEBD24((unint64_t *)&unk_25546C0C0, &qword_25546C0B8);
  *(_QWORD *)(v12 + 72) = v15;
  *(_QWORD *)(v12 + 136) = v13;
  *(_QWORD *)(v12 + 144) = v14;
  *(_QWORD *)(v12 + 104) = v16;
  *(_QWORD *)(v12 + 112) = a1;
  *(_QWORD *)(v12 + 120) = a2;
  swift_bridgeObjectRetain();
  sub_21EB025F4();
  swift_bridgeObjectRelease();
  sub_21EAE98D0(a3, a4, a5, a1, a2, a6 & 1, a7, a8, a9);
}

uint64_t sub_21EAE9CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_21EAE9D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_21EB02300() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_21EAE5E44(a1, *(_BYTE **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(void (**)(uint64_t))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_21EAE9DA0()
{
  return swift_deallocObject();
}

uint64_t sub_21EAE9DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_21EAE9E30(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_21EB02300() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_21EAE7928(a1, a2, *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(_QWORD *)(v5 + 64)));
}

uint64_t sub_21EAE9E94(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v2 = sub_21EB02A2C();
  i = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)a1, sel_fp_appContainerBundleIdentifier);
  if (v6)
  {
    v7 = v6;
    v8 = sub_21EB02B88();

    return v8;
  }
  if (qword_255469C50 != -1)
LABEL_25:
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(i + 104))(v5, *MEMORY[0x24BEE5480], v2);
  sub_21EB01F10();
  a1 = sub_21EAE8314((void *)a1, (uint64_t)v5, 0);
  (*(void (**)(char *, uint64_t))(i + 8))(v5, v2);
  swift_release();
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_9;
LABEL_27:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_bridgeObjectRetain();
  v10 = sub_21EB0341C();
  if (!v10)
    goto LABEL_27;
LABEL_9:
  v5 = (char *)(a1 & 0xC000000000000001);
  for (i = 4; ; ++i)
  {
    v2 = i - 4;
    if (v5)
      v11 = (id)MEMORY[0x2207B5B3C](i - 4, a1);
    else
      v11 = *(id *)(a1 + 8 * i);
    v12 = v11;
    v13 = i - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    v14 = objc_msgSend(v11, sel_fp_appContainerBundleIdentifier);
    if (v14)
      break;

    if (v13 == v10)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  v15 = v14;
  swift_bridgeObjectRelease_n();

  v16 = objc_msgSend(v12, sel_fp_appContainerBundleIdentifier);
  if (!v16)
  {
LABEL_21:

    return 0;
  }
  v17 = v16;
  v8 = sub_21EB02B88();
  v19 = v18;

  if (v8 == 0xD00000000000001FLL && v19 == 0x800000021EB147A0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v20 = sub_21EB034C4();

  if ((v20 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_21EAEA164(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_21EAE9E94(a1);
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    if ((v5 != 0xD00000000000001FLL || v6 != 0x800000021EB147A0) && (sub_21EB034C4() & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_21EB08F10;
      *(_QWORD *)(v9 + 32) = v7;
      *(_QWORD *)(v9 + 40) = v8;
      return v9;
    }
    swift_bridgeObjectRelease();
  }
  if (!a3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2540A6F40);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21EB08F10;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a3;
  swift_bridgeObjectRetain();
  return v9;
}

id sub_21EAEA26C(void *a1, char a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  const char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  id v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  NSObject *log;
  void *v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v3 = a1;
  v83 = *MEMORY[0x24BDAC8D0];
  v4 = *MEMORY[0x24BDC1620];
  v81 = 0;
  v5 = objc_msgSend(a1, sel_availableClaimBindingsForMode_handlerRank_error_, 0, v4, &v81);
  v6 = (id)v81;
  if (!v5)
  {
    v33 = (id)v81;
    v34 = (void *)sub_21EB02234();

    swift_willThrow();
    if (qword_255469B78 != -1)
      swift_once();
    v35 = sub_21EB0263C();
    __swift_project_value_buffer(v35, (uint64_t)static Logger.UI);
    v36 = v3;
    v37 = v34;
    v38 = v36;
    v39 = v34;
    v40 = sub_21EB02624();
    v41 = sub_21EB02EE8();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v43 = (_QWORD *)swift_slowAlloc();
      v79 = swift_slowAlloc();
      v81 = v79;
      *(_DWORD *)v42 = 138412802;
      v44 = v38;
      sub_21EB03134();
      *v43 = v38;

      *(_WORD *)(v42 + 12) = 2080;
      swift_getErrorValue();
      v45 = sub_21EB03554();
      sub_21EA591E4(v45, v46, (uint64_t *)&v81);
      sub_21EB03134();
      swift_bridgeObjectRelease();

      *(_WORD *)(v42 + 22) = 2080;
      sub_21EA591E4(0xD000000000000023, 0x800000021EB14870, (uint64_t *)&v81);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, v40, v41, "error determining owningApp of %@ - claimBindings loading error: %s - %s", (uint8_t *)v42, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v43, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v79, -1, -1);
      MEMORY[0x2207B6A18](v42, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v7 = v5;
  sub_21EA579D4(0, (unint64_t *)&qword_25546C348);
  v8 = sub_21EB02CF0();
  v9 = v6;

  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
      v78 = v3;
      v11 = a2;
      v81 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    if (qword_255469B78 == -1)
      goto LABEL_48;
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  v62 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (v62 <= 0)
    goto LABEL_47;
  v81 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v63 = sub_21EB0341C();
  if (!v63)
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  v10 = v63;
  v78 = v3;
  if (v63 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  v11 = a2;
LABEL_5:
  for (i = 0; i != v10; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x2207B5B3C](i, v8);
    else
      v13 = *(id *)(v8 + 8 * i + 32);
    v14 = v13;
    v15 = objc_msgSend(v13, sel_bundleRecord);
    objc_opt_self();
    v16 = swift_dynamicCastObjCClass();

    if (v16)
    {
      MEMORY[0x2207B5500]();
      if (*(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21EB02D20();
      sub_21EB02D5C();
      sub_21EB02D08();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v17 = v81;
  a2 = v11;
  v3 = v78;
LABEL_16:
  swift_bridgeObjectRelease();
  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_18;
LABEL_51:
    swift_bridgeObjectRelease();
    if (qword_255469B78 != -1)
      swift_once();
    v74 = sub_21EB0263C();
    __swift_project_value_buffer(v74, (uint64_t)static Logger.UI);
    v65 = v3;
    v66 = sub_21EB02624();
    v67 = sub_21EB02EE8();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v69 = (_QWORD *)swift_slowAlloc();
      v70 = swift_slowAlloc();
      v81 = v70;
      *(_DWORD *)v68 = 138412546;
      v75 = v65;
      sub_21EB03134();
      *v69 = v65;

      *(_WORD *)(v68 + 12) = 2080;
      sub_21EA591E4(0xD000000000000023, 0x800000021EB14870, (uint64_t *)&v81);
      sub_21EB03134();
      v72 = "error determining owningApp of %@ - claimBindings had no apps - %s";
      goto LABEL_55;
    }
LABEL_56:

    return 0;
  }
  swift_bridgeObjectRetain();
  v73 = sub_21EB0341C();
  swift_bridgeObjectRelease();
  if (!v73)
    goto LABEL_51;
LABEL_18:
  if ((v17 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(id *)(v17 + 32);
      goto LABEL_21;
    }
    __break(1u);
LABEL_61:
    swift_once();
LABEL_48:
    v64 = sub_21EB0263C();
    __swift_project_value_buffer(v64, (uint64_t)static Logger.UI);
    v65 = v3;
    v66 = sub_21EB02624();
    v67 = sub_21EB02EE8();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v69 = (_QWORD *)swift_slowAlloc();
      v70 = swift_slowAlloc();
      v81 = v70;
      *(_DWORD *)v68 = 138412546;
      v71 = v65;
      sub_21EB03134();
      *v69 = v65;

      *(_WORD *)(v68 + 12) = 2080;
      sub_21EA591E4(0xD000000000000023, 0x800000021EB14870, (uint64_t *)&v81);
      sub_21EB03134();
      v72 = "error determining owningApp of %@ - claimBindings was empty - %s";
LABEL_55:
      _os_log_impl(&dword_21EA4C000, v66, v67, v72, (uint8_t *)v68, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v69, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v70, -1, -1);
      MEMORY[0x2207B6A18](v68, -1, -1);

      return 0;
    }
    goto LABEL_56;
  }
  v18 = (id)MEMORY[0x2207B5B3C](0, v17);
LABEL_21:
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v19, sel_supportsOpenInPlace);
  if ((a2 & 1) == 0)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v47 = sub_21EB0263C();
    __swift_project_value_buffer(v47, (uint64_t)static Logger.UI);
    v48 = v3;
    v49 = v19;
    v24 = v48;
    v25 = v49;
    v26 = sub_21EB02624();
    v27 = sub_21EB02ED0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138412546;
      v81 = (unint64_t)v24;
      v50 = v24;
      sub_21EB03134();
      *v29 = v24;

      *(_WORD *)(v28 + 12) = 2112;
      v81 = (unint64_t)v25;
      v51 = v25;
      sub_21EB03134();
      v29[1] = v25;

      v32 = "determined owningApp (requireOpenInPlace = false) of %@ to be %@";
      goto LABEL_36;
    }
LABEL_37:

    return v25;
  }
  if (!v20)
  {
    v81 = 0;
    v82 = 0xE000000000000000;
    sub_21EB032E4();
    v52 = objc_msgSend(v19, sel_description);
    sub_21EB02B88();

    sub_21EB02C0C();
    swift_bridgeObjectRelease();
    sub_21EB02C0C();
    sub_21EB02C0C();
    sub_21EB02C0C();
    sub_21EB02C0C();
    sub_21EB02C0C();
    v54 = v81;
    v53 = v82;
    if (qword_255469B78 != -1)
      swift_once();
    v55 = sub_21EB0263C();
    __swift_project_value_buffer(v55, (uint64_t)static Logger.UI);
    v56 = v3;
    swift_bridgeObjectRetain();
    v57 = sub_21EB02624();
    v58 = sub_21EB02EE8();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc();
      log = v57;
      v60 = (_QWORD *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      v81 = v80;
      *(_DWORD *)v59 = 138412802;
      v61 = v56;
      sub_21EB03134();
      *v60 = v56;

      *(_WORD *)(v59 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_21EA591E4(v54, v53, (uint64_t *)&v81);
      sub_21EB03134();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v59 + 22) = 2080;
      sub_21EA591E4(0xD000000000000023, 0x800000021EB14870, (uint64_t *)&v81);
      sub_21EB03134();
      _os_log_impl(&dword_21EA4C000, log, v58, "error determining owningApp of %@ - owningApp %s - %s", (uint8_t *)v59, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v60, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207B6A18](v80, -1, -1);
      MEMORY[0x2207B6A18](v59, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  if (qword_255469B78 != -1)
    swift_once();
  v21 = sub_21EB0263C();
  __swift_project_value_buffer(v21, (uint64_t)static Logger.UI);
  v22 = v3;
  v23 = v19;
  v24 = v22;
  v25 = v23;
  v26 = sub_21EB02624();
  v27 = sub_21EB02ED0();
  if (!os_log_type_enabled(v26, v27))
    goto LABEL_37;
  v28 = swift_slowAlloc();
  v29 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v28 = 138412546;
  v81 = (unint64_t)v24;
  v30 = v24;
  sub_21EB03134();
  *v29 = v24;

  *(_WORD *)(v28 + 12) = 2112;
  v81 = (unint64_t)v25;
  v31 = v25;
  sub_21EB03134();
  v29[1] = v25;

  v32 = "determined owningApp (requireOpenInPlace = true) of %@ to be %@";
LABEL_36:
  _os_log_impl(&dword_21EA4C000, v26, v27, v32, (uint8_t *)v28, 0x16u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25546C340);
  swift_arrayDestroy();
  MEMORY[0x2207B6A18](v29, -1, -1);
  MEMORY[0x2207B6A18](v28, -1, -1);

  return v25;
}

uint64_t sub_21EAEB128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int (*v54)(_QWORD, _QWORD, _QWORD);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v54 - v13;
  v15 = sub_21EB025DC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a3;
  sub_21EA5E094(a3, (uint64_t)v14, (uint64_t *)&unk_2540A6540);
  v19 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v16 + 48);
  if (v19(v14, 1, v15) == 1)
  {
    sub_21EA59E08((uint64_t)v14, (uint64_t *)&unk_2540A6540);
  }
  else
  {
    v54 = v19;
    v55 = v12;
    v57 = a4;
    v58 = a5;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25546B350);
    v22 = *(_QWORD *)(v16 + 72);
    v23 = *(unsigned __int8 *)(v16 + 80);
    v24 = (v23 + 32) & ~v23;
    v62 = 4 * v22;
    v59 = v23 | 7;
    v60 = v21;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_21EB07160;
    v61 = v24;
    v26 = v25 + v24;
    if (qword_255469C70 != -1)
      swift_once();
    v56 = a2;
    v27 = __swift_project_value_buffer(v15, (uint64_t)static UTType.docMobileConfig);
    v63 = v16;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v28(v26, v27, v15);
    if (qword_255469C78 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v15, (uint64_t)static UTType.docMobileProvision);
    v28(v26 + v22, v29, v15);
    sub_21EB02570();
    sub_21EB024C8();
    if (*(_QWORD *)(v25 + 16))
    {
      v30 = v26;
      v31 = *(_QWORD *)(v25 + 16);
      while ((sub_21EB025AC() & 1) == 0)
      {
        v30 += v22;
        if (!--v31)
          goto LABEL_13;
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v18, v15);
      return 0;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    v32 = v61;
    v60 = swift_allocObject();
    v33 = v60 + v32;
    sub_21EB0254C();
    sub_21EB02558();
    sub_21EB02540();
    sub_21EB02504();
    sub_21EB02588();
    v62 = v33 + 5 * v22;
    sub_21EB024BC();
    sub_21EB024B0();
    v34 = sub_21EB025AC();
    v16 = v63;
    if ((v34 & 1) != 0
      || (sub_21EB025AC() & 1) != 0
      || (sub_21EB025AC() & 1) != 0
      || (sub_21EB025AC() & 1) != 0
      || (sub_21EB025AC() & 1) != 0
      || (sub_21EB025AC() & 1) != 0
      || (sub_21EB025AC() & 1) != 0)
    {
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return 1;
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    LOBYTE(a5) = v58;
    a4 = v57;
    v19 = v54;
    v12 = v55;
  }
  sub_21EA5E094(v64, (uint64_t)v12, (uint64_t *)&unk_2540A6540);
  if (v19(v12, 1, v15) == 1)
  {
    sub_21EA59E08((uint64_t)v12, (uint64_t *)&unk_2540A6540);
    v20 = 0;
  }
  else
  {
    sub_21EB0248C();
    v20 = v35;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
  }
  swift_bridgeObjectRetain();
  v36 = (void *)sub_21EB02B58();
  swift_bridgeObjectRelease();
  if (v20)
  {
    v37 = (void *)sub_21EB02B58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
  }
  v38 = objc_msgSend((id)objc_opt_self(), sel_documentProxyForName_type_MIMEType_isContentManaged_sourceAuditToken_, v36, v37, 0, a4 == 1, 0);

  v39 = sub_21EAEA26C(v38, a5 & 1);
  if (!v39)
  {

    return 1;
  }
  v40 = v39;
  v41 = v39;
  v42 = objc_msgSend(v41, sel_bundleIdentifier);
  if (!v42)
  {

    return 1;
  }
  v43 = v42;
  v44 = sub_21EB02B88();
  v46 = v45;

  v47 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v48 = objc_msgSend(v47, sel_bundleIdentifier);

  if (v48)
  {
    v49 = sub_21EB02B88();
    v51 = v50;

    if (v44 == v49 && v46 == v51)
    {
      swift_bridgeObjectRelease();

LABEL_36:
      swift_bridgeObjectRelease();
      return 1;
    }
    v52 = sub_21EB034C4();
    swift_bridgeObjectRelease();

    if ((v52 & 1) != 0)
      goto LABEL_36;
  }
  else
  {

  }
  return (uint64_t)v40;
}

uint64_t sub_21EAEB77C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  unsigned int v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD v56[3];
  void *v57;
  void *v58;
  unint64_t v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  id v65[2];

  v65[1] = *(id *)MEMORY[0x24BDAC8D0];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6540);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a6 & 1) != 0)
  {
    if (qword_255469B78 != -1)
      swift_once();
    v15 = sub_21EB0263C();
    __swift_project_value_buffer(v15, (uint64_t)static Logger.UI);
    v16 = sub_21EB02624();
    v17 = sub_21EB02EDC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21EA4C000, v16, v17, "WARNING: QuickLookAllDocumentsInFilesFirst enabled. Prefering to open document with Quick Look instead of handler app.", v18, 2u);
      MEMORY[0x2207B6A18](v18, -1, -1);
    }

    return 1;
  }
  v19 = sub_21EAEA164((unint64_t)a1, a3, a4);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)(v19 + 16);
    if (v21)
    {
      v22 = objc_opt_self();
      v63 = a5;
      if ((a5 & 1) != 0)
        v23 = 5457241;
      else
        v23 = 20302;
      v24 = 0xE200000000000000;
      if ((a5 & 1) != 0)
        v24 = 0xE300000000000000;
      v61 = v24;
      v62 = v23;
      v56[1] = v20;
      v25 = v20 + 40;
      v26 = (void *)v22;
      v60 = xmmword_21EB07160;
      v58 = (void *)v22;
      v59 = 0x800000021EB147C0;
      v57 = a1;
      do
      {
        swift_bridgeObjectRetain();
        v27 = a1;
        v28 = objc_msgSend(v26, sel_defaultPermission);
        v29 = (void *)sub_21EB02B58();
        v30 = objc_msgSend(v28, sel_canAppWithBundleIdentifier_performAction_item_, v29, 2, v27);

        if (v30)
        {
          v31 = objc_allocWithZone(MEMORY[0x24BDC1540]);
          v32 = (void *)sub_21EB02B58();
          swift_bridgeObjectRelease();
          v65[0] = 0;
          v33 = objc_msgSend(v31, sel_initWithBundleIdentifier_allowPlaceholder_error_, v32, 0, v65);

          if (v33)
          {
            v34 = v65[0];
            v35 = objc_msgSend(v33, sel_bundleIdentifier);
            if (v35)
            {
              v36 = v35;
              v56[2] = sub_21EB02B88();
              v64 = v37;

              if (qword_2540A6CB8 != -1)
                swift_once();
              sub_21EB02EDC();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2540A6F70);
              v38 = swift_allocObject();
              *(_OWORD *)(v38 + 16) = v60;
              v39 = MEMORY[0x24BEE0D00];
              *(_QWORD *)(v38 + 56) = MEMORY[0x24BEE0D00];
              v40 = sub_21EA5EA3C();
              *(_QWORD *)(v38 + 64) = v40;
              *(_QWORD *)(v38 + 32) = 0xD000000000000066;
              *(_QWORD *)(v38 + 40) = v59;
              *(_QWORD *)(v38 + 96) = sub_21EA579D4(0, &qword_25546C328);
              v41 = sub_21EAEBD24((unint64_t *)&unk_25546C330, &qword_25546C328);
              *(_QWORD *)(v38 + 72) = v33;
              *(_QWORD *)(v38 + 136) = v39;
              *(_QWORD *)(v38 + 144) = v40;
              v42 = v62;
              *(_QWORD *)(v38 + 104) = v41;
              *(_QWORD *)(v38 + 112) = v42;
              *(_QWORD *)(v38 + 120) = v61;
              v43 = v33;
              v44 = objc_msgSend(v43, sel_supportsOpenInPlace);
              v45 = 5457241;
              if (!v44)
                v45 = 20302;
              *(_QWORD *)(v38 + 176) = v39;
              *(_QWORD *)(v38 + 184) = v40;
              v46 = 0xE200000000000000;
              if (v44)
                v46 = 0xE300000000000000;
              *(_QWORD *)(v38 + 152) = v45;
              *(_QWORD *)(v38 + 160) = v46;
              sub_21EB025F4();
              swift_bridgeObjectRelease();
              if ((v63 & 1) == 0 || objc_msgSend(v43, sel_supportsOpenInPlace))
              {
                swift_bridgeObjectRelease();
                return (uint64_t)v43;
              }

              swift_bridgeObjectRelease();
              a1 = v57;
              v26 = v58;
            }
            else
            {

            }
          }
          else
          {
            v47 = v65[0];
            v48 = (void *)sub_21EB02234();

            swift_willThrow();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v25 += 16;
        --v21;
      }
      while (v21);
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  v49 = objc_msgSend(a1, sel_filename);
  v50 = sub_21EB02B88();
  v52 = v51;

  v53 = objc_msgSend(a1, sel_contentType);
  sub_21EB024F8();

  v54 = sub_21EB025DC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v14, 0, 1, v54);
  v43 = (id)sub_21EAEB128(v50, v52, (uint64_t)v14, a2, a5 & 1);
  swift_bridgeObjectRelease();
  sub_21EA59E08((uint64_t)v14, (uint64_t *)&unk_2540A6540);
  return (uint64_t)v43;
}

uint64_t sub_21EAEBD24(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_21EA579D4(255, a2);
    result = MEMORY[0x2207B694C](MEMORY[0x24BEE5BE8], v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchUtils()
{
  return &type metadata for LaunchUtils;
}

uint64_t type metadata accessor for LaunchUtils.OpenAppDelegate()
{
  return objc_opt_self();
}

id *destroy for LaunchUtils.LaunchAction(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s26DocumentManagerExecutables11LaunchUtilsV12LaunchActionOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v6 = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LaunchUtils.LaunchAction(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  __int128 v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      v7 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v8 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LaunchUtils.LaunchAction(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchUtils.LaunchAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LaunchUtils.LaunchAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_21EAEC02C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21EAEC044(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchUtils.LaunchAction()
{
  return &type metadata for LaunchUtils.LaunchAction;
}

uint64_t type metadata accessor for FPHierarchyLookup()
{
  return objc_opt_self();
}

uint64_t sub_21EAEC094@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_21EAE9490(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_21EAEC0AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21EAEC0D0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAEC0F4()
{
  id *v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21EAEC138()
{
  uint64_t v0;

  sub_21EAE8958(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_21EAEC148()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21EAEC17C()
{
  uint64_t v0;

  return sub_21EAE8F18(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_21EAEC188()
{
  return swift_deallocObject();
}

uint64_t sub_21EAEC198()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21EAEC1BC()
{
  return sub_21EAE9204();
}

uint64_t sub_21EAEC1C4()
{
  uint64_t v0;

  return sub_21EAE9348(v0);
}

uint64_t sub_21EAEC1CC()
{
  return swift_deallocObject();
}

uint64_t sub_21EAEC1DC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21EAEC218(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_21EAE8A94(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_21EAEC224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21EAEC2C8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_21EB02300() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  return sub_21EAE66DC(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_21EAEC364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_21EAEC410()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_21EB02300() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_21EAE6A48(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(_QWORD))(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_21EAEC48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_21EAEC564(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_21EB02300() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_21EAE727C(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(void **)(v1 + v6), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void **)(v1 + ((v7 + 39) & 0xFFFFFFFFFFFFF8)));
}

void *sub_21EAEC60C(void *result)
{
  if ((unint64_t)result >= 2)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21EAEC63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_21EB02300();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_21EAEC704(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(sub_21EB02300() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_21EAE7708(a1, a2, *(_BYTE *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + v9), *(_QWORD *)(v2 + v9 + 8), *(_QWORD *)(v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 16), *(void (**)(_QWORD))(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v9 + 47) & 0xFFFFFFFFFFFFFFF8) + 8));
}

