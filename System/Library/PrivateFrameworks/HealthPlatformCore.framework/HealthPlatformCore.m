uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t objectdestroy_179Tm()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03EA04(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = (v3 + 32) & ~v3;
  swift_release();
  swift_release();
  v5 = v0 + v4;
  swift_release();
  sub_1BBFDB2E4(0);
  v7 = v0 + v4 + *(int *)(v6 + 44);
  v8 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[7]);
  v9 = v0 + v4 + v2[8];
  v10 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v2[9];
  v12 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCE9AE4](a1, v6, a5);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC0890AC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1BC089064();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BC089D6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t objectdestroy_47Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_87Tm(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (int *)a1(0);
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = (v5 + 32) & ~v5;
  swift_release();
  swift_release();
  v7 = v2 + v6;
  swift_release();
  v8 = v2 + v6 + *(int *)(a2(0) + 36);
  v9 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 + v4[7]);
  v10 = v7 + v4[8];
  v11 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + v4[9];
  v13 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

id sub_1BBFDA1E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangeRelevanceProviderManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DateRangeRelevanceProviderManager()
{
  return objc_opt_self();
}

void type metadata accessor for _HKDataTypeCode(uint64_t a1)
{
  sub_1BBFDA924(a1, &qword_1ED69C940, (uint64_t)&unk_1E749F6A8, MEMORY[0x1E0DEEC78]);
}

BOOL sub_1BBFDA24C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BBFDA264()
{
  return sub_1BC08AC00();
}

uint64_t sub_1BBFDA290()
{
  sub_1BC08ABF4();
  sub_1BC08AC00();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFDA2D4()
{
  sub_1BC08ABF4();
  sub_1BC08AC00();
  return sub_1BC08AC18();
}

_QWORD *sub_1BBFDA314@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BBFDA324(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

double sub_1BBFDA330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  double v13;
  char v14;
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  double v18;
  uint64_t v20;

  v0 = sub_1BC089028();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - v5;
  v7 = sub_1BC088E84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089814();
  v11 = sub_1BC088E78();
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  v13 = 1.0;
  if ((v11 & 1) == 0)
  {
    sub_1BC089814();
    sub_1BC088E6C();
    v12(v10, v7);
    v14 = sub_1BC088FF8();
    v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    v15(v6, v0);
    if ((v14 & 1) != 0)
    {
      sub_1BC089808();
      sub_1BC089814();
      sub_1BC088E6C();
      v12(v10, v7);
      sub_1BC088FBC();
      sub_1BC088FBC();
      sub_1BC088FBC();
      REPercentThroughRange();
      v13 = v16;
      v15(v4, v0);
      v15(v6, v0);
    }
    else
    {
      sub_1BC089814();
      sub_1BC088E48();
      v12(v10, v7);
      sub_1BC0897FC();
      sub_1BC088FBC();
      sub_1BC088FBC();
      sub_1BC088FBC();
      REPercentThroughRange();
      v18 = v17;
      v15(v4, v0);
      v15(v6, v0);
      return 1.0 - v18;
    }
  }
  return v13;
}

uint64_t sub_1BBFDA588(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  int v12;
  id v13;
  double v14;
  id v15;
  uint64_t result;
  _QWORD v17[2];

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC089028();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2
    && (v11 = objc_msgSend(a2, sel_attributeForKey_, *MEMORY[0x1E0D84410])) != 0)
  {
    v17[1] = v11;
    sub_1BBFDA85C();
    v12 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v12 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1BC08901C();
  sub_1BBFDA820((uint64_t)v6);
LABEL_7:
  type metadata accessor for DateRangeRelevanceProvider();
  if (swift_dynamicCastClass())
  {
    v13 = a1;
    v14 = sub_1BBFDA330();
    v15 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v14);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (uint64_t)v15;
  }
  else
  {
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

void sub_1BBFDA7CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DBF8)
  {
    sub_1BC089028();
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DBF8);
  }
}

uint64_t sub_1BBFDA820(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDA7CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BBFDA85C()
{
  unint64_t result;

  result = qword_1EF3EDC00;
  if (!qword_1EF3EDC00)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3EDC00);
  }
  return result;
}

unint64_t sub_1BBFDA8B0()
{
  unint64_t result;

  result = qword_1ED69D8F0;
  if (!qword_1ED69D8F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69D8F0);
  }
  return result;
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
  sub_1BBFDA924(a1, &qword_1ED69B338, (uint64_t)&unk_1E749F6C8, MEMORY[0x1E0DEEC78]);
}

void type metadata accessor for HKDisplayCategoryIdentifier(uint64_t a1)
{
  sub_1BBFDA924(a1, &qword_1ED69C980, (uint64_t)&unk_1E749F6E8, MEMORY[0x1E0DEEC78]);
}

void sub_1BBFDA924(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BBFDA968()
{
  return sub_1BBFDA9C0((unint64_t *)&unk_1ED69B328, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, (uint64_t)&unk_1BC08B710);
}

uint64_t sub_1BBFDA994()
{
  return sub_1BBFDA9C0((unint64_t *)&unk_1ED69C970, (uint64_t (*)(uint64_t))type metadata accessor for HKDisplayCategoryIdentifier, (uint64_t)"Q@A+@n");
}

uint64_t sub_1BBFDA9C0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCE9B68](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AnyPipeline.domain.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1BC08952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t AnyPipeline.wrappedTypeName.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnyPipeline.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = sub_1BC08952C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_1BC08AC9C();
  v9[1] = v7;
  sub_1BC08A420();
  swift_bridgeObjectRetain();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 36), v3);
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t AnyPipeline.publisher.getter()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t GeneratorPipeline.eraseToAnyPipeline()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  _QWORD v23[2];

  v23[0] = sub_1BC08952C();
  v7 = *(_QWORD *)(v23[0] - 8);
  v8 = MEMORY[0x1E0C80A78](v23[0]);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1BC089604();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v16 = sub_1BC08A3E4();
  v18 = v17;
  *a3 = sub_1BBFDAE94;
  a3[1] = (uint64_t (*)())v15;
  sub_1BBFDAEA0(0);
  v20 = v19;
  result = (*(uint64_t (**)(char *, char *, _QWORD))(v7 + 32))((char *)a3 + *(int *)(v19 + 36), v10, v23[0]);
  v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 40));
  *v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t sub_1BBFDAD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  sub_1BBFDC134();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = sub_1BC089610();
  sub_1BBFDC0D0(0, &qword_1ED69C830, (unint64_t *)&qword_1ED69BB68);
  sub_1BBFDAEBC(0);
  sub_1BBFDC238(&qword_1ED69C828, &qword_1ED69C830, (unint64_t *)&qword_1ED69BB68);
  sub_1BC08A1A4();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69D5B8, (uint64_t (*)(uint64_t))sub_1BBFDC134, MEMORY[0x1E0C95950]);
  v5 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_1BBFDAE94()
{
  return sub_1BBFDB228((uint64_t (*)(uint64_t))sub_1BBFDAD30);
}

void sub_1BBFDAEA0(uint64_t a1)
{
  sub_1BBFDB264(a1, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
}

void sub_1BBFDAEBC(uint64_t a1)
{
  sub_1BBFDB2F8(a1, &qword_1ED69D048, (uint64_t (*)(uint64_t))sub_1BBFDAED0);
}

void sub_1BBFDAED0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C8F8)
  {
    v0 = sub_1BC08A534();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C8F8);
  }
}

uint64_t type metadata accessor for AnyPipeline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPipeline);
}

uint64_t sub_1BBFDAF30(_QWORD *a1)
{
  return sub_1BBFDB37C(a1, (uint64_t (*)(uint64_t, uint64_t))Generator.eraseToAnyGenerator());
}

uint64_t SharableModelGeneratorPipeline.eraseToAnyPipeline()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  _QWORD v23[2];

  v23[0] = sub_1BC08952C();
  v7 = *(_QWORD *)(v23[0] - 8);
  v8 = MEMORY[0x1E0C80A78](v23[0]);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1BC089904();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v16 = sub_1BC08A3E4();
  v18 = v17;
  *a3 = sub_1BBFDB21C;
  a3[1] = (uint64_t (*)())v15;
  sub_1BBFDB248(0);
  v20 = v19;
  result = (*(uint64_t (**)(char *, char *, _QWORD))(v7 + 32))((char *)a3 + *(int *)(v19 + 36), v10, v23[0]);
  v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 40));
  *v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t sub_1BBFDB0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  sub_1BBFDC018();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = sub_1BC0899F4();
  sub_1BBFDC0D0(0, &qword_1ED69D618, &qword_1ED69CE60);
  sub_1BBFDB2E4(0);
  sub_1BBFDC238(&qword_1ED69D610, &qword_1ED69D618, &qword_1ED69CE60);
  sub_1BC08A1A4();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69D5A8, (uint64_t (*)(uint64_t))sub_1BBFDC018, MEMORY[0x1E0C95950]);
  v5 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_1BBFDB21C()
{
  return sub_1BBFDB228((uint64_t (*)(uint64_t))sub_1BBFDB0B8);
}

uint64_t sub_1BBFDB228(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(v1 + ((v2 + 32) & ~v2));
}

void sub_1BBFDB248(uint64_t a1)
{
  sub_1BBFDB264(a1, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
}

void sub_1BBFDB264(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v8 = a3(255);
    v9 = sub_1BBFDA9C0(a4, a3, (uint64_t)"QCA+$c");
    v11 = type metadata accessor for AnyPipeline(a1, v8, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_1BBFDB2E4(uint64_t a1)
{
  sub_1BBFDB2F8(a1, &qword_1ED69D060, (uint64_t (*)(uint64_t))sub_1BBFDB354);
}

void sub_1BBFDB2F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for AnyGenerator(a1, v5, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BBFDB354(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D690, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BBFDB370(_QWORD *a1)
{
  return sub_1BBFDB37C(a1, (uint64_t (*)(uint64_t, uint64_t))SharableModelGenerator.eraseToAnyGenerator());
}

uint64_t sub_1BBFDB37C(_QWORD *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return a2(v3, v4);
}

uint64_t AnyPipelineProvider.makeGeneratorPipelines(for:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t PipelineProviderWrappers.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFDB550(v1, a1, (uint64_t (*)(_QWORD))sub_1BBFDB410);
}

void sub_1BBFDB410(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D530, (uint64_t (*)(uint64_t))sub_1BBFDB484, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineProviderWrapper);
}

void sub_1BBFDB42C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BBFDB484(uint64_t a1)
{
  sub_1BBFDB4A0(a1, &qword_1ED69D070, (uint64_t (*)(uint64_t))sub_1BBFDAEA0, &qword_1ED69D020);
}

void sub_1BBFDB4A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v8 = a3(255);
    v9 = sub_1BBFDA9C0(a4, a3, (uint64_t)&protocol conformance descriptor for AnyPipeline<A>);
    v11 = type metadata accessor for AnyPipelineProvider(a1, v8, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t type metadata accessor for AnyPipelineProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPipelineProvider);
}

uint64_t PipelineProviderWrappers.sharableModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFDB550(v1 + 56, a1, (uint64_t (*)(_QWORD))sub_1BBFDB594);
}

uint64_t sub_1BBFDB550(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BBFDB594(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D538, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineProviderWrapper);
}

void sub_1BBFDB5B0(uint64_t a1)
{
  sub_1BBFDB4A0(a1, (unint64_t *)&unk_1ED69D080, (uint64_t (*)(uint64_t))sub_1BBFDB248, &qword_1ED69D030);
}

uint64_t sub_1BBFDB5CC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1BBFDB5D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BBFDB5DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC08952C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BBFDB65C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BC08952C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 40);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BBFDB720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BBFDB780(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC08952C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 40);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BBFDB818(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BBFDB8C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_1BBFDB938(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BBFDB9C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BBFDB9D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC08952C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_1BBFDBA50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BBFDBA5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC08952C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of PipelineProviding.makeGeneratorPipelines(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BBFDBAD8()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_1BBFDBAE0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1BBFDBB0C()
{
  return swift_release();
}

_QWORD *sub_1BBFDBB14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1BBFDBB4C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingScenario(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingScenario(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineProviderWrappers(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PipelineProviderWrappers(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 72);
}

uint64_t initializeWithCopy for PipelineProviderWrappers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = a2 + 72;
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  v13(a1 + 72, v10, v12);
  return a1;
}

_QWORD *assignWithCopy for PipelineProviderWrappers(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v5 = a2[8];
  a1[7] = a2[7];
  a1[8] = v5;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 9, a2 + 9);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PipelineProviderWrappers(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineProviderWrappers(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineProviderWrappers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineProviderWrappers()
{
  return &type metadata for PipelineProviderWrappers;
}

void sub_1BBFDC018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5B0)
  {
    sub_1BBFDC0D0(255, &qword_1ED69D618, &qword_1ED69CE60);
    sub_1BBFDB2E4(255);
    sub_1BBFDC238(&qword_1ED69D610, &qword_1ED69D618, &qword_1ED69CE60);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5B0);
  }
}

void sub_1BBFDC0D0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BBFDC1EC(255, a3);
    v4 = sub_1BC089FB8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BBFDC134()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5C0)
  {
    sub_1BBFDC0D0(255, &qword_1ED69C830, (unint64_t *)&qword_1ED69BB68);
    sub_1BBFDAEBC(255);
    sub_1BBFDC238(&qword_1ED69C828, &qword_1ED69C830, (unint64_t *)&qword_1ED69BB68);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5C0);
  }
}

uint64_t sub_1BBFDC1EC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BBFDC238(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BBFDC0D0(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void *v5;
  id v6;
  unint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;

  sub_1BC089C4C();
  v5 = (void *)MEMORY[0x1BCCE8578]();
  v6 = objc_msgSend(v5, sel_relationshipKeyPathsForPrefetching);
  if (v6)
  {
    v8 = v6;
    v9 = (_QWORD *)sub_1BC08A4C8();

  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v10 = (_QWORD *)v9[2];
  v11 = (int64_t)v10 + 4;
  if (__OFADD__(v10, 4))
  {
    __break(1u);
LABEL_21:
    v10 = sub_1BBFDD3F8((_QWORD *)(v7 > 1), v11, 1, v10);
    v7 = v10[3];
    v13 = v7 >> 1;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && (v7 = v9[3], v13 = v7 >> 1, (uint64_t)(v7 >> 1) >= v11))
  {
    v10 = v9;
  }
  else
  {
    if ((uint64_t)v10 <= v11)
      v14 = (int64_t)v10 + 4;
    else
      v14 = (int64_t)v10;
    v10 = sub_1BBFDD3F8(isUniquelyReferenced_nonNull_native, v14, 1, v9);
    v7 = v10[3];
    v13 = v7 >> 1;
  }
  v2 = v10[2];
  v11 = v2 + 1;
  if (v13 <= v2)
    goto LABEL_21;
LABEL_13:
  v10[2] = v11;
  v15 = &v10[2 * v2];
  v15[4] = 0x7364726F7779656BLL;
  v15[5] = 0xE800000000000000;
  v16 = v2 + 2;
  if ((uint64_t)v13 < v16)
    v10 = sub_1BBFDD3F8((_QWORD *)(v7 > 1), v16, 1, v10);
  v10[2] = v16;
  v17 = &v10[2 * v11];
  v17[4] = 0x5465727574616566;
  v17[5] = 0xEB00000000736761;
  v19 = v10[2];
  v18 = v10[3];
  v20 = v18 >> 1;
  v21 = v19 + 1;
  if (v18 >> 1 <= v19)
  {
    v10 = sub_1BBFDD3F8((_QWORD *)(v18 > 1), v19 + 1, 1, v10);
    v18 = v10[3];
    v20 = v18 >> 1;
  }
  v10[2] = v21;
  v22 = &v10[2 * v19];
  v22[4] = 0x6570795461746164;
  v22[5] = 0xE900000000000073;
  v23 = v19 + 2;
  if (v20 < v23)
    v10 = sub_1BBFDD3F8((_QWORD *)(v18 > 1), v23, 1, v10);
  v10[2] = v23;
  v24 = &v10[2 * v21];
  v24[4] = 0x73656C69666F7270;
  v24[5] = 0xE800000000000000;
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setRelationshipKeyPathsForPrefetching_, v25);

  v26 = _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(a1, a2);
  objc_msgSend(v5, sel_setPredicate_, v26);

  v27 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v28 = (void *)sub_1BC08A3B4();
  v29 = objc_msgSend(v27, sel_initWithKey_ascending_, v28, 1);

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v30 + 32) = v29;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69DBA8);
  v31 = v29;
  v32 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v32);

  v33 = sub_1BC08A78C();
  return v33;
}

id NSManagedObjectContext.makeFeedItemsFetchedResultsController(for:associatedProfileIdentifier:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v2 = v1;
  sub_1BC089C4C();
  v4 = (void *)MEMORY[0x1BCCE8578]();
  v5 = _sSo22NSManagedObjectContextC18HealthPlatformCoreE22makeFeedItemsPredicate3for27associatedProfileIdentifierSo11NSPredicateC0dE00H0C4KindO_So09HKProfileN0CSgtF_0(a1);
  objc_msgSend(v4, sel_setPredicate_, v5);

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v7 = (void *)sub_1BC08A3B4();
  v8 = objc_msgSend(v6, sel_initWithKey_ascending_, v7, 1);

  v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v10 = (void *)sub_1BC08A3B4();
  v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 1);

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v11;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69DBA8);
  v13 = v8;
  v14 = v11;
  v15 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v15);

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B68]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v4, v2, 0, 0);
  return v16;
}

uint64_t NSManagedObjectContext.doesFeedEligibleForDisplayExist(kind:associatedProfileIdentifier:)(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  NSObject *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSObject *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  _QWORD *v76;
  id v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  os_log_t v82;
  char *v83;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  objc_class *v88;
  os_log_t v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_t v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;

  v3 = v2;
  sub_1BBFDB42C(0, &qword_1ED69D748, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v101 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v96 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v96 - v12;
  v14 = sub_1BC089DE4();
  v102 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v100 = (char *)&v96 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v96 - v20;
  sub_1BC089AFC();
  v22 = (void *)sub_1BC089AF0();
  v23 = (void *)sub_1BC089898();

  if (!v23)
  {
    sub_1BC089D9C();
    v37 = a2;
    v38 = v3;
    v39 = v37;
    v40 = v38;
    v41 = sub_1BC089DD8();
    v42 = sub_1BC08A678();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v100 = (char *)swift_slowAlloc();
      v105 = v100;
      *(_DWORD *)v43 = 136446722;
      v44 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v104 = sub_1BBFDE0F8(v44, v45, (uint64_t *)&v105);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      if (a2)
      {
        v46 = objc_msgSend(v39, sel_identifier);
        sub_1BC08904C();

        v47 = sub_1BC089064();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v8, 0, 1, v47);
      }
      else
      {
        v63 = sub_1BC089064();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v8, 1, 1, v63);
      }
      v64 = sub_1BC08A3E4();
      v104 = sub_1BBFDE0F8(v64, v65, (uint64_t *)&v105);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2082;
      v66 = v40;
      v67 = objc_msgSend(v66, sel_description);
      v68 = sub_1BC08A3C0();
      v70 = v69;

      v104 = sub_1BBFDE0F8(v68, v70, (uint64_t *)&v105);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v41, v42, "No feed of kind %{public}s for profile %{public}s detected; eligible for display FALSE; %{public}s",
        (uint8_t *)v43,
        0x20u);
      v71 = v100;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v71, -1, -1);
      MEMORY[0x1BCCE9C40](v43, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v17, v103);
    return 0;
  }
  if ((Feed.isTooOldForDisplay.getter() & 1) != 0)
  {
    sub_1BC089D9C();
    v24 = a2;
    v25 = v23;
    v26 = v3;
    v27 = v24;
    v28 = v25;
    v29 = v26;
    v30 = sub_1BC089DD8();
    v31 = sub_1BC08A678();
    if (os_log_type_enabled(v30, (os_log_type_t)v31))
    {
      LODWORD(v99) = v31;
      v32 = swift_slowAlloc();
      v98 = (_QWORD *)swift_slowAlloc();
      v100 = (char *)swift_slowAlloc();
      v105 = v100;
      *(_DWORD *)v32 = 136446978;
      v33 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v104 = sub_1BBFDE0F8(v33, v34, (uint64_t *)&v105);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      v97 = v30;
      if (a2)
      {
        v35 = objc_msgSend(v27, sel_identifier);
        sub_1BC08904C();

        v36 = sub_1BC089064();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v13, 0, 1, v36);
      }
      else
      {
        v72 = sub_1BC089064();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v13, 1, 1, v72);
      }
      v73 = sub_1BC08A3E4();
      v104 = sub_1BBFDE0F8(v73, v74, (uint64_t *)&v105);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2114;
      v75 = objc_msgSend(v28, sel_dateUpdated);
      v104 = (uint64_t)v75;
      sub_1BC08A7EC();
      v76 = v98;
      *v98 = v75;

      *(_WORD *)(v32 + 32) = 2082;
      v77 = v29;
      v78 = objc_msgSend(v77, sel_description);
      v79 = sub_1BC08A3C0();
      v81 = v80;

      v104 = sub_1BBFDE0F8(v79, v81, (uint64_t *)&v105);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      v82 = v97;
      _os_log_impl(&dword_1BBFD7000, v97, (os_log_type_t)v99, "Found feed of kind %{public}s for profile %{public}s too old for display (last updated %{public}@); eligible for"
        " display FALSE; %{public}s",
        (uint8_t *)v32,
        0x2Au);
      sub_1BBFDECF0();
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v76, -1, -1);
      v83 = v100;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v83, -1, -1);
      MEMORY[0x1BCCE9C40](v32, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v21, v103);
    return 0;
  }
  v48 = v100;
  sub_1BC089D9C();
  v49 = a2;
  v50 = v23;
  v51 = v3;
  v52 = v49;
  v53 = v50;
  v54 = v51;
  v55 = sub_1BC089DD8();
  v56 = sub_1BC08A678();
  if (os_log_type_enabled(v55, (os_log_type_t)v56))
  {
    LODWORD(v98) = v56;
    v57 = swift_slowAlloc();
    v97 = (os_log_t)swift_slowAlloc();
    v99 = swift_slowAlloc();
    v105 = (char *)v99;
    *(_DWORD *)v57 = 136446978;
    v58 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v104 = sub_1BBFDE0F8(v58, v59, (uint64_t *)&v105);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2082;
    if (a2)
    {
      v60 = objc_msgSend(v52, sel_identifier);
      sub_1BC08904C();

      v61 = sub_1BC089064();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v11, 0, 1, v61);
    }
    else
    {
      v85 = sub_1BC089064();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v11, 1, 1, v85);
    }
    v86 = sub_1BC08A3E4();
    v104 = sub_1BBFDE0F8(v86, v87, (uint64_t *)&v105);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 22) = 2114;
    v88 = (objc_class *)objc_msgSend(v53, sel_dateUpdated);
    v104 = (uint64_t)v88;
    sub_1BC08A7EC();
    v89 = v97;
    v97->isa = v88;

    *(_WORD *)(v57 + 32) = 2082;
    v90 = v54;
    v91 = objc_msgSend(v90, sel_description);
    v92 = sub_1BC08A3C0();
    v94 = v93;

    v104 = sub_1BBFDE0F8(v92, v94, (uint64_t *)&v105);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v55, (os_log_type_t)v98, "Feed of kind %{public}s for profile %{public}s is new enough; eligible for display TRUE (last updated %{public}@); %{public}s",
      (uint8_t *)v57,
      0x2Au);
    sub_1BBFDECF0();
    v62 = 1;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v89, -1, -1);
    v95 = v99;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v95, -1, -1);
    MEMORY[0x1BCCE9C40](v57, -1, -1);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v103);
    return 1;
  }
  return v62;
}

_QWORD *sub_1BBFDD3F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BBFDA924(0, &qword_1ED69DCF8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BBFDE760(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BBFDD518(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BBFDD660(a1, a2, a3, a4, &qword_1ED69DBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0]);
}

_QWORD *sub_1BBFDD52C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BBFDB42C(0, &qword_1ED69CA30, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BBFDF068(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BBFDD64C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BBFDD660(a1, a2, a3, a4, &qword_1ED69C9E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8C8]);
}

uint64_t sub_1BBFDD660(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFDB42C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BC08AA68();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BBFDF268(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1BBFDD87C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFDF598();
  sub_1BBFDF3F4(0, &qword_1ED69D210, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BC08AA68();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BBFDF3F4(0, &qword_1ED69D210, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BBFDEE5C(0, v8, v20, a4, &qword_1ED69D210, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

_QWORD *sub_1BBFDDAE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BBFDF544(0, &qword_1ED69C9F8, (unint64_t *)&qword_1ED69BB70);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BBFDF150(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BBFDDC14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BBFDB42C(0, &qword_1ED69CA10, (uint64_t (*)(uint64_t))sub_1BBFDF4CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BBFDED54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BBFDDD4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BBFDD660(a1, a2, a3, a4, &qword_1ED69CA08, (uint64_t (*)(uint64_t))type metadata accessor for ModelTrainingEvent);
}

uint64_t sub_1BBFDDD60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BBFDD660(a1, a2, a3, a4, &qword_1ED69CA40, (uint64_t (*)(uint64_t))sub_1BBFDF44C);
}

uint64_t sub_1BBFDDD74(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFDF380();
  sub_1BBFDF3F4(0, &qword_1ED69D200, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BC08AA68();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BBFDF3F4(0, &qword_1ED69D200, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BBFDEE5C(0, v8, v20, a4, &qword_1ED69D200, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BBFDDFD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BBFDD660(a1, a2, a3, a4, (unint64_t *)&unk_1EF3EDD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

char *sub_1BBFDDFEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_1BBFDA924(0, &qword_1ED69AE18, MEMORY[0x1E0D2E570], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BBFDEF84(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BBFDE0F8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BBFDE1C8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BBFDF6C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BBFDF6C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1BBFDE1C8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BC08A7F8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BBFDE380(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BC08A99C();
  if (!v8)
  {
    sub_1BC08AA68();
    __break(1u);
LABEL_17:
    result = sub_1BC08AAD4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BBFDE380(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BBFDE414(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BBFDE600(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BBFDE600(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BBFDE414(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BBFDE588(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BC08A960();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BC08AA68();
      __break(1u);
LABEL_10:
      v2 = sub_1BC08A42C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BC08AAD4();
    __break(1u);
LABEL_14:
    result = sub_1BC08AA68();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1BBFDE588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BBFDA924(0, &qword_1ED69DD38, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BBFDE600(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, &qword_1ED69DD38, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFDE760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

id _sSo22NSManagedObjectContextC18HealthPlatformCoreE22makeFeedItemsPredicate3for27associatedProfileIdentifierSo11NSPredicateC0dE00H0C4KindO_So09HKProfileN0CSgtF_0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;

  LODWORD(v31) = a1;
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - v2;
  v4 = sub_1BC089028();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089AFC();
  v7 = (void *)sub_1BC089AF0();
  v8 = (void *)sub_1BC08A3B4();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_expressionForKeyPath_, v8);

  v11 = v7;
  v12 = (void *)sub_1BC08A3B4();
  v13 = objc_msgSend(v9, sel_expressionForSubquery_usingIteratorVariable_predicate_, v10, v12, v11);

  v32 = v13;
  v14 = objc_msgSend(v13, sel_predicate);
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDF544(0, (unint64_t *)&qword_1ED69DBD8, (unint64_t *)&qword_1ED69DBE0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  v16 = sub_1BBFDF700();
  *(_QWORD *)(v15 + 64) = v16;
  strcpy((char *)(v15 + 32), "hideInDiscover");
  *(_BYTE *)(v15 + 47) = -18;
  v17 = (void *)sub_1BC08A5E8();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v18 + 32) = v14;
  *(_QWORD *)(v18 + 40) = v17;
  v33 = v18;
  sub_1BC08A4E0();
  v19 = v14;
  v20 = v17;
  Feed.Kind.earliestDisplayDateUpdated.getter(v31, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BBFDA820((uint64_t)v3);
  }
  else
  {
    v29 = v20;
    v31 = v19;
    v21 = v30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v3, v4);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BC08B960;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = v16;
    *(_QWORD *)(v22 + 32) = 0xD00000000000001CLL;
    *(_QWORD *)(v22 + 40) = 0x80000001BC08EAA0;
    v23 = sub_1BC088FEC();
    *(_QWORD *)(v22 + 96) = sub_1BBFDF744(0, &qword_1ED69BA58);
    *(_QWORD *)(v22 + 104) = sub_1BBFDF77C();
    *(_QWORD *)(v22 + 72) = v23;
    v24 = (id)sub_1BC08A5E8();
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
    v19 = v31;
    v20 = v29;
  }
  v25 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v25);

  return v26;
}

void sub_1BBFDECF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BA40)
  {
    sub_1BBFDF744(255, &qword_1ED69DD30);
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BA40);
  }
}

uint64_t sub_1BBFDED54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1BBFDF4CC();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFDEE5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, unint64_t *a6, uint64_t (*a7)(uint64_t), unint64_t *a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1BBFDF3F4(0, a5, a6, a7, a8);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = *(_QWORD *)(v13 + 72);
    v16 = a4 + ((v14 + 32) & ~v14) + v15 * a1;
    v17 = v15 * v8;
    v18 = a3 + v17;
    v19 = v16 + v17;
    if (v16 >= v18 || v19 <= a3)
    {
      swift_arrayInitWithCopy();
      return v18;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

char *sub_1BBFDEF84(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1BC08AAD4();
  __break(1u);
  return result;
}

char *sub_1BBFDF068(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFDF150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69BB70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFDF268(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BBFDF380()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D720)
  {
    sub_1BBFDF3F4(255, &qword_1ED69D200, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
    v0 = sub_1BC08AB70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D720);
  }
}

void sub_1BBFDF3F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    sub_1BBFDF60C(255, a3, a4, a5);
    v10 = type metadata accessor for GeneratorPipelineManagerWrapper(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BBFDF44C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69C988)
  {
    sub_1BBFDF744(255, &qword_1ED69C998);
    type metadata accessor for ModelTrainingEvent();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69C988);
  }
}

void sub_1BBFDF4CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69C8D8)
  {
    sub_1BBFDF744(255, &qword_1ED69DD30);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69C8D8);
  }
}

void sub_1BBFDF544(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BBFDC1EC(255, a3);
    v4 = sub_1BC08AB70();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BBFDF598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D728)
  {
    sub_1BBFDF3F4(255, &qword_1ED69D210, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
    v0 = sub_1BC08AB70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D728);
  }
}

void sub_1BBFDF60C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v8 = a3(255);
    v9 = sub_1BBFDF684(a4, a3);
    v11 = type metadata accessor for AnyPipeline(a1, v8, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_1BBFDF684(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCE9B68]("QCA+$c", v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BBFDF6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1BBFDF700()
{
  unint64_t result;

  result = qword_1ED69DB78;
  if (!qword_1ED69DB78)
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED69DB78);
  }
  return result;
}

uint64_t sub_1BBFDF744(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1BBFDF77C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69BA60;
  if (!qword_1ED69BA60)
  {
    v1 = sub_1BBFDF744(255, &qword_1ED69BA58);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69BA60);
  }
  return result;
}

uint64_t static FeedPopulationListenerSupport.makeThrottledFeedItemSubmissionPublisher<A>(config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  char *v26;
  uint64_t AssociatedTypeWitness;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a4;
  v54 = a1;
  v8 = sub_1BC089E98();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = sub_1BC08A744();
  v43 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDFC94();
  v15 = v14;
  v52 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v46 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BBFDA9C0(&qword_1ED69AD10, v17, MEMORY[0x1E0C95950]);
  v53 = v15;
  v58 = v15;
  v59 = a3;
  v45 = v18;
  v60 = v18;
  v61 = a5;
  v19 = sub_1BC089E2C();
  v51 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v50 = (char *)&v41 - v20;
  v21 = sub_1BC0897CC();
  v44 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95800], v19);
  v22 = sub_1BC089EA4();
  v48 = *(_QWORD *)(v22 - 8);
  v49 = v22;
  MEMORY[0x1E0C80A78](v22);
  v47 = (char *)&v41 - v23;
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED69D6D0 != -1)
    swift_once();
  sub_1BC08A750();

  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a2;
  v25[3] = a3;
  v42 = a2;
  v25[4] = v57;
  v25[5] = a5;
  sub_1BBFDA9C0((unint64_t *)&unk_1ED69AA80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v26 = v46;
  v41 = v21;
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v11);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = &v10[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  v29 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v10, v54, a3);
  v31 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration(0, a3, a5, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v28, v29 + *(int *)(v31 + 36), AssociatedTypeWitness);
  v33 = v55;
  v32 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v10, *MEMORY[0x1E0C95910], v56);
  v34 = v50;
  v35 = v53;
  sub_1BC08A1EC();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v35);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v42;
  v36[3] = a3;
  v36[4] = v57;
  v36[5] = a5;
  v37 = v47;
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v19);
  v38 = v49;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v49);
  v39 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v38);
  return v39;
}

void sub_1BBFDFC94()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69AD18)
  {
    sub_1BC08A744();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
    sub_1BC0897CC();
    sub_1BBFDA9C0((unint64_t *)&unk_1ED69AA80, v0, MEMORY[0x1E0CB1F20]);
    v1 = sub_1BC089EA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69AD18);
  }
}

uint64_t sub_1BBFDFD28@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34[5];
  __int128 v35;
  __int128 v36;

  v30 = a1;
  v3 = sub_1BC0897CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC089DE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFE1B28();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC088EA8();
  if (!v14)
  {
    v35 = 0u;
    v36 = 0u;
LABEL_13:
    sub_1BBFE1BD4((uint64_t)&v35, (uint64_t (*)(_QWORD))sub_1BBFE1B7C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    goto LABEL_14;
  }
  v15 = v14;
  v32 = 0xD000000000000014;
  v33 = 0x80000001BC08EB40;
  sub_1BC08A90C();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1BC0258A8((uint64_t)v34), (v17 & 1) != 0))
  {
    sub_1BBFDF6C4(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BBFE1C10((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_13;
  v31 = v8;
  v18 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, v18 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
LABEL_14:
    sub_1BBFE1BD4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BBFE1B28);
    result = sub_1BC08AA74();
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v13, v3);
  sub_1BC089D9C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v19 = sub_1BC089DD8();
  v20 = sub_1BC08A654();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v29 = v7;
    v23 = v22;
    v34[0] = v22;
    *(_DWORD *)v21 = 136446466;
    *(_QWORD *)&v35 = v30;
    swift_getMetatypeMetadata();
    v30 = v10;
    v24 = sub_1BC08A3E4();
    *(_QWORD *)&v35 = sub_1BBFDE0F8(v24, v25, v34);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    sub_1BBFDA9C0(&qword_1ED69AC78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], MEMORY[0x1E0D2DFD0]);
    v26 = sub_1BC08AB64();
    *(_QWORD *)&v35 = sub_1BBFDE0F8(v26, v27, v34);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1BBFD7000, v19, v20, "[%{public}s]: ChangeDomain received from feedItemSubmissionOccurred (will be throttled): %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v23, -1, -1);
    MEMORY[0x1BCCE9C40](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v7);
  }
}

uint64_t sub_1BBFE0180@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v42 = a2;
  v46 = a3;
  v4 = sub_1BC089DE4();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC0897CC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v41 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v41 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v41 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v41 - v20;
  v22 = *a1;
  sub_1BC08976C();
  v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v45 = v21;
  v23(v19, v21, v7);
  v24 = *(_QWORD *)(v22 + 16);
  v48 = v6;
  if (v24)
  {
    v25 = (char *)(v22 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
    v26 = *(_QWORD *)(v8 + 72);
    v41 = v22;
    swift_bridgeObjectRetain();
    do
    {
      v23(v16, v25, v7);
      v23(v13, v19, v7);
      sub_1BC0897A8();
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v27(v16, v7);
      v27(v19, v7);
      v28 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v28(v19, v13, v7);
      v25 += v26;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    v6 = v48;
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  }
  v29 = v46;
  v28(v46, v19, v7);
  v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v45, v7);
  sub_1BC089D9C();
  v31 = v47;
  v23(v47, v29, v7);
  v32 = sub_1BC089DD8();
  v33 = sub_1BC08A678();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v50 = v35;
    *(_DWORD *)v34 = 136446466;
    v49 = v42;
    swift_getMetatypeMetadata();
    v36 = sub_1BC08A3E4();
    v49 = sub_1BBFDE0F8(v36, v37, &v50);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    sub_1BBFDA9C0(&qword_1ED69AC78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], MEMORY[0x1E0D2DFD0]);
    v38 = sub_1BC08AB64();
    v49 = sub_1BBFDE0F8(v38, v39, &v50);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    v30(v31, v7);
    _os_log_impl(&dword_1BBFD7000, v32, v33, "[%{public}s]: Collected this changeDomain, emitting: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v35, -1, -1);
    MEMORY[0x1BCCE9C40](v34, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v48, v44);
  }
  else
  {
    v30(v31, v7);

    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  }
}

uint64_t FeedPopulationListenerSchedulerConfiguration.scheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.collectInterval.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.options.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  swift_getAssociatedTypeWitness();
  v5 = sub_1BC08A7D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t FeedPopulationListenerSchedulerConfiguration.init(scheduler:collectInterval:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  v12 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration(0, a4, a5, v11);
  v13 = a6 + *(int *)(v12 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v13, a2, AssociatedTypeWitness);
  v15 = a6 + *(int *)(v12 + 40);
  swift_getAssociatedTypeWitness();
  v16 = sub_1BC08A7D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
}

uint64_t static FeedPopulationListenerSchedulerConfiguration.realtime(queue:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  sub_1BBFE0898(0);
  v5 = v4;
  v6 = a1;
  sub_1BC08A6E4();
  v7 = (char *)a2 + *(int *)(v5 + 40);
  v8 = sub_1BC08A6D8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a2 = v6;
  return result;
}

uint64_t sub_1BBFE0854()
{
  return swift_deallocObject();
}

uint64_t sub_1BBFE0864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFDFD28(*(char **)(v1 + 16), a1);
}

uint64_t type metadata accessor for FeedPopulationListenerSchedulerConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedPopulationListenerSchedulerConfiguration);
}

uint64_t sub_1BBFE087C()
{
  return swift_deallocObject();
}

uint64_t sub_1BBFE088C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BBFE0180(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BBFE0898(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED69A670)
  {
    v2 = sub_1BBFE0910();
    v3 = sub_1BBFDA9C0((unint64_t *)&qword_1ED69D8A8, (uint64_t (*)(uint64_t))sub_1BBFE0910, MEMORY[0x1E0DEF7F8]);
    v5 = type metadata accessor for FeedPopulationListenerSchedulerConfiguration(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED69A670);
  }
}

unint64_t sub_1BBFE0910()
{
  unint64_t result;

  result = qword_1ED69DCD8;
  if (!qword_1ED69DCD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69DCD8);
  }
  return result;
}

uint64_t dispatch thunk of FeedPopulationListener.startListening()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedPopulationListener.stopListening()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1BBFE095C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t AssociatedTypeWitness;
  unint64_t v3;
  unint64_t v4;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v3 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_getAssociatedTypeWitness();
      v0 = sub_1BC08A7D4();
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_1BBFE0AAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  size_t __n;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v14 = v9 + v12;
  v15 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v15;
  v16 = v7 | *(_DWORD *)(v4 + 80) | v12;
  v17 = (v7 | *(_BYTE *)(v4 + 80) | v12);
  v18 = v16 & 0x100000;
  if (v17 <= 7
    && v15 + ((v14 + (v8 & ~(unint64_t)v7)) & ~v13) <= 0x18
    && v18 == 0)
  {
    __n = v15;
    v23 = ~(unint64_t)v7;
    v24 = ~v13;
    v25 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
    v26 = ((unint64_t)a2 + v8) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v8) & v23, v26, AssociatedTypeWitness);
    v27 = (void *)(((((unint64_t)a1 + v8) & v23) + v14) & v24);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))((v26 + v14) & v24, 1, v25))
    {
      memcpy(v27, (const void *)((v26 + v14) & v24), __n);
    }
    else
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v11 + 16))(v27, (v26 + v14) & v24, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v25);
    }
    return a1;
  }
  else
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = v21 + ((v17 + 16) & ~v17);
    swift_retain();
  }
  return (uint64_t *)v22;
}

uint64_t sub_1BBFE0CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  return result;
}

uint64_t sub_1BBFE0E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (void *)((v12 + v15 + v10) & ~v15);
  v17 = (const void *)((v12 + v15 + v11) & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v17, 1, v13))
  {
    if (*(_DWORD *)(v14 + 84))
      v18 = *(_QWORD *)(v14 + 64);
    else
      v18 = *(_QWORD *)(v14 + 64) + 1;
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v16, v17, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1BBFE0F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (void *)((v12 + v15 + v10) & ~v15);
  v17 = (void *)((v12 + v15 + v11) & ~v15);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v5) = v18(v16, 1, v13);
  v19 = v18(v17, 1, v13);
  if ((_DWORD)v5)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v16, v17, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      return a1;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v16, v17, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v16, v17, v20);
  return a1;
}

uint64_t sub_1BBFE1174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (void *)((v12 + v15 + v10) & ~v15);
  v17 = (const void *)((v12 + v15 + v11) & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v17, 1, v13))
  {
    if (*(_DWORD *)(v14 + 84))
      v18 = *(_QWORD *)(v14 + 64);
    else
      v18 = *(_QWORD *)(v14 + 64) + 1;
    memcpy(v16, v17, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v16, v17, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1BBFE1308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (void *)((v12 + v15 + v10) & ~v15);
  v17 = (void *)((v12 + v15 + v11) & ~v15);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v5) = v18(v16, 1, v13);
  v19 = v18(v17, 1, v13);
  if ((_DWORD)v5)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v16, v17, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      return a1;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v16, v17, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v16, v17, v20);
  return a1;
}

uint64_t sub_1BBFE14E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v13 <= v10)
    v13 = v10;
  if (v12)
    v14 = *(_QWORD *)(v11 + 64);
  else
    v14 = *(_QWORD *)(v11 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = *(_QWORD *)(v5 + 64) + v15;
  v17 = *(_QWORD *)(v8 + 64);
  v18 = *(unsigned __int8 *)(v11 + 80);
  v19 = a1;
  if (a2 <= v13)
    goto LABEL_30;
  v20 = v14 + ((v17 + v18 + (v16 & ~v15)) & ~v18);
  v21 = 8 * v20;
  if (v20 > 3)
    goto LABEL_14;
  v23 = ((a2 - v13 + ~(-1 << v21)) >> v21) + 1;
  if (HIWORD(v23))
  {
    v22 = *(_DWORD *)(a1 + v20);
    if (!v22)
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v23 > 0xFF)
  {
    v22 = *(unsigned __int16 *)(a1 + v20);
    if (!*(_WORD *)(a1 + v20))
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v23 >= 2)
  {
LABEL_14:
    v22 = *(unsigned __int8 *)(a1 + v20);
    if (!*(_BYTE *)(a1 + v20))
      goto LABEL_30;
LABEL_21:
    v24 = (v22 - 1) << v21;
    if (v20 > 3)
      v24 = 0;
    if ((_DWORD)v20)
    {
      if (v20 <= 3)
        v25 = v20;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    return v13 + v24 + 1;
  }
LABEL_30:
  if (!v13)
    return 0;
  if ((_DWORD)v6 == v13)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v27 = v6;
    v28 = v4;
    return v26(v19, v27, v28);
  }
  v19 = (v16 + a1) & ~v15;
  if ((_DWORD)v9 == v13)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v27 = v9;
    v28 = AssociatedTypeWitness;
    return v26(v19, v27, v28);
  }
  v29 = (*(uint64_t (**)(uint64_t))(v11 + 48))((v19 + v17 + v18) & ~v18);
  if (v29 >= 2)
    return v29 - 1;
  else
    return 0;
}

void sub_1BBFE1784(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = 0u;
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v13 <= v9)
    v14 = v9;
  else
    v14 = v13;
  v15 = *(unsigned __int8 *)(v8 + 80);
  v18 = *(unsigned __int8 *)(v11 + 80);
  if (v12)
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  v17 = *(_QWORD *)(v8 + 64);
  v16 = *(_QWORD *)(v6 + 64) + v15;
  v20 = ((v17 + v18 + (v16 & ~(_DWORD)v15)) & ~(_DWORD)v18) + v19;
  if (a3 > v14)
  {
    if (v20 > 3)
    {
      v10 = 1u;
      if (v14 >= a2)
LABEL_28:
        __asm { BR              X5 }
LABEL_21:
      v22 = ~v14 + a2;
      if (v20 < 4)
      {
        if (v20)
        {
          v23 = v22 & ~(-1 << (8 * v20));
          bzero(a1, ((v17 + v18 + (v16 & ~v15)) & ~v18) + v19);
          if (v20 == 3)
          {
            *(_WORD *)a1 = v23;
            a1[2] = BYTE2(v23);
          }
          else if (v20 == 2)
          {
            *(_WORD *)a1 = v23;
          }
          else
          {
            *a1 = v23;
          }
        }
      }
      else
      {
        bzero(a1, ((v17 + v18 + (v16 & ~v15)) & ~v18) + v19);
        *(_DWORD *)a1 = v22;
      }
      __asm { BR              X10 }
    }
    v21 = ((a3 - v14 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
    if (HIWORD(v21))
    {
      v10 = 4u;
      if (v14 >= a2)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v21 >= 0x100)
      v10 = 2;
    else
      v10 = v21 > 1;
  }
  if (v14 >= a2)
    goto LABEL_28;
  goto LABEL_21;
}

void sub_1BBFE1AA4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_1BBFE1AAC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_1BBFE1B04()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BBFE1B14()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BBFE1B1C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1BBFE1B28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BA10)
  {
    sub_1BC0897CC();
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BA10);
  }
}

void sub_1BBFE1B7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DD10)
  {
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DD10);
  }
}

uint64_t sub_1BBFE1BD4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BBFE1C10(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t HealthExperienceStoreCoreSpotlightOperation.store.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFE1C58(v1 + qword_1ED69AB10, a1);
}

uint64_t sub_1BBFE1C58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id HealthExperienceStoreCoreSpotlightOperation.__allocating_init(store:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1BBFE1C58(a1, (uint64_t)v3 + qword_1ED69AB10);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v4;
}

id HealthExperienceStoreCoreSpotlightOperation.init(store:)(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  sub_1BBFE1C58(a1, (uint64_t)v1 + qword_1ED69AB10);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t type metadata accessor for HealthExperienceStoreCoreSpotlightOperation()
{
  uint64_t result;

  result = qword_1ED69B4A8;
  if (!qword_1ED69B4A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BBFE1DA8()
{
  _QWORD *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  ObjectType = swift_getObjectType();
  v2 = sub_1BC089DE4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)(*(uint64_t (**)(uint64_t))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation
                                                  + (*MEMORY[0x1E0DEEDD8] & *v0)
                                                  + 16))(v4);
  objc_msgSend(v7, sel_startSpotlightIndexing);
  sub_1BC089D84();
  v8 = v7;
  v9 = sub_1BC089DD8();
  v10 = sub_1BC08A678();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v21 = v3;
    v12 = v11;
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    v23 = ObjectType;
    *(_DWORD *)v12 = 136315394;
    v20 = v2;
    swift_getMetatypeMetadata();
    v13 = sub_1BC08A3E4();
    v23 = sub_1BBFDE0F8(v13, v14, &v22);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    v23 = (uint64_t)v8;
    v15 = v8;
    sub_1BC08A7EC();
    v16 = v18;
    *v18 = v8;

    _os_log_impl(&dword_1BBFD7000, v9, v10, "[%s] spotlightDelegate: %@", (uint8_t *)v12, 0x16u);
    sub_1BBFDECF0();
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v16, -1, -1);
    v17 = v19;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v17, -1, -1);
    MEMORY[0x1BCCE9C40](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  sub_1BC089CD0();

}

void sub_1BBFE2038(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BBFE1DA8();

}

_QWORD *sub_1BBFE206C()
{
  uint64_t v0;
  _QWORD v2[5];

  type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  sub_1BBFE1C58(v0 + qword_1ED69AB10, (uint64_t)v2);
  return HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(for:)(v2);
}

id HealthExperienceStoreCoreSpotlightOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthExperienceStoreCoreSpotlightOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BBFE2108()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BBFE2134()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED69AB10);
}

id HealthExperienceStoreCoreSpotlightOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BBFE2178(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED69AB10);
}

id sub_1BBFE2188(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  HealthExperienceStoreCoreSpotlightOperation.description.getter();

  v2 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t HealthExperienceStoreCoreSpotlightOperation.description.getter()
{
  sub_1BC08A420();
  swift_getObjectType();
  sub_1BBFE22A0();
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  sub_1BC08AA20();
  sub_1BC08A420();
  return 0;
}

unint64_t sub_1BBFE22A0()
{
  unint64_t result;

  result = qword_1ED69B4B8;
  if (!qword_1ED69B4B8)
  {
    type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69B4B8);
  }
  return result;
}

uint64_t sub_1BBFE22D8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for HealthExperienceStoreCoreSpotlightOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightOperation.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation + v0 + 8))();
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightOperation.makeCoreSpotlightDelegate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for HealthExperienceStoreCoreSpotlightOperation
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 16))();
}

uint64_t sub_1BBFE2368()
{
  return type metadata accessor for HealthExperienceStoreCoreSpotlightOperation();
}

uint64_t FeedItemSuggestionRelevanceCalculating.getAllFeedItems()(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  sub_1BC089C4C();
  v4 = (void *)MEMORY[0x1BCCE8578]();
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v6 = sub_1BC08A78C();

  return v6;
}

unint64_t sub_1BBFE24A4()
{
  unint64_t result;

  result = qword_1ED69DAA0;
  if (!qword_1ED69DAA0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69DAA0);
  }
  return result;
}

uint64_t dispatch thunk of FeedItemSuggestionRelevanceCalculating.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1BBFE2500()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_featureTags);
  sub_1BC0895B0();
  sub_1BBFE266C();
  v3 = sub_1BC08A54C();

  v4 = sub_1BBFE2A44(v3);
  swift_bridgeObjectRelease();
  sub_1BBFE26B4();
  sub_1BC019310(v5);
  v6 = objc_msgSend(v1, sel_uniqueIdentifier, v4);
  sub_1BC08A3C0();

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D842D8]), sel_init);
  v8 = objc_allocWithZone(MEMORY[0x1E0D842E8]);
  v9 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  sub_1BBFE2CEC();
  v10 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithIdentifier_content_action_relevanceProviders_, v9, v7, 0, v10);

  return v11;
}

unint64_t sub_1BBFE266C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AC48;
  if (!qword_1ED69AC48)
  {
    v1 = sub_1BC0895B0();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AC48);
  }
  return result;
}

void sub_1BBFE26B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = sub_1BC089850();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BC089670();
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC0896E8();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC089628();
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BC089C28();
  v12 = (void *)objc_opt_self();
  if (qword_1ED69DA00 != -1)
    swift_once();
  v13 = qword_1ED6A0610;
  sub_1BBFEB450();
  v14 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v14);

  v16 = objc_msgSend(v12, sel_customRelevanceProviderForFeature_withValue_, v13, v15);
  if (v16)
  {
    v17 = v16;
    MEMORY[0x1BCCE8E84]();
    v18 = v33;
    if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();

    sub_1BC089C28();
    v19 = sub_1BC057DDC();
    sub_1BC019310((unint64_t)v19);
    sub_1BC089C28();
    v20 = sub_1BC00D6A8();
    sub_1BC019310(v20);
    sub_1BC089C28();
    v21 = sub_1BC01403C();
    sub_1BC019310(v21);
    v22 = objc_msgSend(v1, sel_localizedTitle);
    if (v22)
    {
      v23 = v22;
      v24 = sub_1BC08A3C0();
      v26 = v25;

      v36 = v24;
      v37 = v26;
      sub_1BC00D8F0();
      v28 = v27;
      swift_bridgeObjectRelease();
      sub_1BC019310(v28);
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v18);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v34);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BBFE2A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = a1;
  v26 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC08A864();
    sub_1BC0895B0();
    sub_1BBFE266C();
    result = sub_1BC08A588();
    v1 = v21;
    v19 = v22;
    v3 = v23;
    v4 = v24;
    v5 = v25;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v19 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = *(_QWORD *)(v19 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        goto LABEL_32;
      v15 = *(_QWORD *)(v19 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          goto LABEL_32;
        v15 = *(_QWORD *)(v19 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            goto LABEL_32;
          v15 = *(_QWORD *)(v19 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              goto LABEL_32;
            v15 = *(_QWORD *)(v19 + 8 * v12);
            if (!v15)
            {
              v16 = v4 + 6;
              while (v9 != v16)
              {
                v15 = *(_QWORD *)(v19 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BBFE2D28();
              return v26;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_1BC0203A4();
      v18 = v17;

      result = sub_1BC019310(v18);
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC08A8C4())
      {
        sub_1BC0895B0();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v20;
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v20)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1BBFE2CEC()
{
  unint64_t result;

  result = qword_1ED69C960;
  if (!qword_1ED69C960)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69C960);
  }
  return result;
}

uint64_t sub_1BBFE2D28()
{
  return swift_release();
}

void *static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(int a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  _QWORD *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  os_log_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  int v66;
  uint64_t v67;
  _QWORD *v68;

  v60 = a4;
  v65 = a2;
  v66 = a1;
  v5 = sub_1BC089028();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC089DE4();
  v62 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v55 - v13;
  v15 = sub_1BC089064();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v9;
  if (a3)
  {
    v19 = objc_msgSend(a3, sel_identifier);
    sub_1BC08904C();

    v59 = sub_1BC089034();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    v21 = 0xE400000000000000;
    v59 = 1701736302;
  }
  v22 = v65;
  sub_1BC089AFC();
  v64 = a3;
  v23 = (void *)sub_1BC089AF0();
  v24 = sub_1BC089898();
  if (v24)
  {
    v25 = (void *)v24;
    v61 = v6;
    sub_1BC089D9C();
    v26 = v25;
    swift_bridgeObjectRetain();
    v27 = sub_1BC089DD8();
    v28 = sub_1BC08A678();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v58 = v5;
      v31 = v30;
      v56 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v68 = (_QWORD *)v57;
      *(_DWORD *)v31 = 136315906;
      v55 = v27;
      v32 = sub_1BC08AC9C();
      LODWORD(v60) = v29;
      v67 = sub_1BBFDE0F8(v32, v33, (uint64_t *)&v68);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      v67 = sub_1BBFDE0F8(v59, v21, (uint64_t *)&v68);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2082;
      sub_1BC089ACC();
      v34 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v67 = sub_1BBFDE0F8(v34, v35, (uint64_t *)&v68);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2114;
      v36 = objc_msgSend(v26, sel_dateUpdated);
      v67 = (uint64_t)v36;
      v22 = v65;
      sub_1BC08A7EC();
      v37 = v56;
      *v56 = v36;

      v38 = v55;
      _os_log_impl(&dword_1BBFD7000, v55, (os_log_type_t)v60, "[%s]_%s: Feed of kind %{public}s and date %{public}@ found; deleting it and creating a new feed",
        (uint8_t *)v31,
        0x2Au);
      sub_1BBFDECF0();
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v37, -1, -1);
      v39 = v57;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v39, -1, -1);
      v40 = v31;
      v5 = v58;
      MEMORY[0x1BCCE9C40](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v63);
    objc_msgSend(v22, sel_deleteObject_, v26);

    v6 = v61;
  }
  else
  {
    v58 = v5;
    sub_1BC089D9C();
    swift_bridgeObjectRetain();
    v41 = sub_1BC089DD8();
    v42 = sub_1BC08A678();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      v68 = v56;
      *(_DWORD *)v43 = 136315650;
      v57 = (uint64_t)v23;
      v44 = sub_1BC08AC9C();
      v61 = v6;
      v67 = sub_1BBFDE0F8(v44, v45, (uint64_t *)&v68);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      v67 = sub_1BBFDE0F8(v59, v21, (uint64_t *)&v68);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 22) = 2080;
      v6 = v61;
      v46 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v67 = sub_1BBFDE0F8(v46, v47, (uint64_t *)&v68);
      sub_1BC08A7EC();
      v23 = (void *)v57;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v41, v42, "[%s]_%s: No feed of kind %s found; creating one", (uint8_t *)v43, 0x20u);
      v48 = v56;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v48, -1, -1);
      v49 = v43;
      v22 = v65;
      MEMORY[0x1BCCE9C40](v49, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v63);
    v5 = v58;
  }
  v50 = v64;
  v51 = v22;
  sub_1BC08901C();
  v52 = (void *)sub_1BC089AE4();
  sub_1BC089AD8();
  sub_1BC08901C();
  v53 = (void *)sub_1BC088FEC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v52, sel_setDateUpdated_, v53);

  return v52;
}

uint64_t dispatch thunk of FeedPopulationManaging.healthExperienceStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedPopulationManaging.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedPopulationManaging.managedFeedKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedPopulationManaging.managedLiveFeedKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedPopulationManaging.populateFeed(feedKinds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of FeedPopulationManaging.handleUpdatedFeedItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedPopulationManaging.deleteFeed(feedKinds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of FeedPopulationManaging.isChangeDomainPertinentForLiveUpdate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

id FeedItemREElementDataSource.__allocating_init(store:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  id v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  sub_1BBFE1C58(a1, (uint64_t)&v5[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(_QWORD *)&v5[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

id FeedItemREElementDataSource.init(store:sourceProfiles:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v5;
  objc_super v7;

  sub_1BBFE1C58(a1, (uint64_t)&v2[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = a2;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedItemREElementDataSource();
  v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t type metadata accessor for FeedItemREElementDataSource()
{
  return objc_opt_self();
}

unint64_t static FeedItemREElementDataSource.bundleIdentifier.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static FeedItemREElementDataSource.applicationBundleIdentifier.getter()
{
  return 0;
}

uint64_t static FeedItemREElementDataSource.contentAttributes()()
{
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BBFE3634(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  void *v35;
  char *v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t aBlock[7];

  ObjectType = swift_getObjectType();
  v10 = sub_1BC089DE4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D9C();
  swift_bridgeObjectRetain_n();
  v14 = v4;
  v15 = sub_1BC089DD8();
  v49 = sub_1BC08A678();
  if (!os_log_type_enabled(v15, (os_log_type_t)v49))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_11:
    __swift_project_boxed_opaque_existential_1(&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store], *(_QWORD *)&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store + 24]);
    v33 = (void *)sub_1BC0891C0();
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = a1;
    v34[3] = a2;
    v34[4] = v33;
    v34[5] = v14;
    v34[6] = a3;
    v34[7] = a4;
    v34[8] = ObjectType;
    aBlock[4] = (uint64_t)sub_1BBFE6064;
    aBlock[5] = (uint64_t)v34;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BBFE410C;
    aBlock[3] = (uint64_t)&block_descriptor;
    v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v36 = v14;
    v37 = v33;
    sub_1BBFE6078(a3);
    swift_release();
    objc_msgSend(v37, sel_performBlock_, v35);
    _Block_release(v35);

    return;
  }
  v46 = v13;
  v47 = v11;
  v48 = v10;
  v16 = swift_slowAlloc();
  v45 = swift_slowAlloc();
  aBlock[0] = v45;
  *(_DWORD *)v16 = 136446466;
  if (a2)
  {
    v41 = v15;
    v44 = ObjectType;
    swift_bridgeObjectRetain();
    v43 = a1;
    v50 = sub_1BBFDE0F8(a1, a2, aBlock);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    v42 = v14;
    v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles];
    v18 = *(_QWORD *)(v17 + 16);
    v19 = MEMORY[0x1E0DEE9D8];
    if (v18)
    {
      v38 = a2;
      v39 = a3;
      v40 = a4;
      v50 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BBFE449C(0, v18, 0);
      v20 = 0;
      v19 = v50;
      do
      {
        v21 = *(id *)(v17 + 8 * v20 + 32);
        v22 = sub_1BC08937C();
        v24 = v23;

        v50 = v19;
        v26 = *(_QWORD *)(v19 + 16);
        v25 = *(_QWORD *)(v19 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1BBFE449C(v25 > 1, v26 + 1, 1);
          v19 = v50;
        }
        ++v20;
        *(_QWORD *)(v19 + 16) = v26 + 1;
        v27 = v19 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
      }
      while (v18 != v20);
      swift_bridgeObjectRelease();
      a3 = v39;
      a4 = v40;
      a2 = v38;
    }
    v50 = v19;
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BBFE6088();
    v28 = sub_1BC08A384();
    v30 = v29;
    swift_bridgeObjectRelease();
    v50 = sub_1BBFDE0F8(v28, v30, aBlock);
    sub_1BC08A7EC();
    v14 = v42;

    swift_bridgeObjectRelease();
    v31 = v41;
    _os_log_impl(&dword_1BBFD7000, v41, (os_log_type_t)v49, "Querying Core Data for elements for Relevance Engine section %{public}s for profiles %{public}s", (uint8_t *)v16, 0x16u);
    v32 = v45;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v32, -1, -1);
    MEMORY[0x1BCCE9C40](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    a1 = v43;
    ObjectType = v44;
    goto LABEL_11;
  }

  __break(1u);
}

uint64_t sub_1BBFE3AA0(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, void (*a5)(char *), uint64_t a6, char *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  char *v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *);
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62[2];
  char *v63;

  v54 = a6;
  v58 = a4;
  v11 = sub_1BC089DE4();
  v55 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC089AA8();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    goto LABEL_32;
  v56 = v11;
  v57 = a5;
  swift_bridgeObjectRetain();
  v15 = 0;
  v52 = a7;
  v53 = a1;
  while (1)
  {
    v16 = *(unsigned __int8 *)(v13 + v15 + 32);
    v17 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    if (!a2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v17 == a1 && v18 == a2)
      break;
    v20 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
LABEL_4:
    if (v14 == ++v15)
      goto LABEL_31;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
LABEL_13:
  v21 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(v16, *(_QWORD *)&v58[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles]);
  v22 = v59;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = (char *)MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    v63 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    if ((v23 & 0x8000000000000000) == 0)
    {
      v25 = 0;
      v60 = v21 & 0xC000000000000001;
      v61 = v21;
      v26 = v23;
      do
      {
        if (v60)
          v27 = (id)MEMORY[0x1BCCE934C](v25, v21);
        else
          v27 = *(id *)(v21 + 8 * v25 + 32);
        v28 = v27;
        ++v25;
        v29 = objc_msgSend(v27, sel_featureTags);
        sub_1BC0895B0();
        sub_1BBFDA9C0((unint64_t *)&qword_1ED69AC48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB08], MEMORY[0x1E0DEFCF8]);
        v30 = sub_1BC08A54C();

        v31 = sub_1BBFE2A44(v30);
        swift_bridgeObjectRelease();
        sub_1BBFE26B4();
        v62[0] = v31;
        sub_1BC019310(v32);
        v33 = objc_msgSend(v28, sel_uniqueIdentifier);
        sub_1BC08A3C0();

        v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D842D8]), sel_init);
        v35 = objc_allocWithZone(MEMORY[0x1E0D842E8]);
        v36 = (void *)sub_1BC08A3B4();
        swift_bridgeObjectRelease();
        sub_1BBFDF744(0, (unint64_t *)&qword_1ED69C960);
        v37 = (void *)sub_1BC08A4BC();
        swift_bridgeObjectRelease();
        objc_msgSend(v35, sel_initWithIdentifier_content_action_relevanceProviders_, v36, v34, 0, v37);

        sub_1BC08A9A8();
        sub_1BC08A9D8();
        sub_1BC08A9E4();
        sub_1BC08A9B4();
        v21 = v61;
      }
      while (v26 != v25);
      v23 = v26;
      v24 = v63;
      v22 = v59;
      goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    sub_1BC089D9C();
    v38 = v58;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v39 = v38;
    v40 = sub_1BC089DD8();
    v41 = sub_1BC08A678();
    v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = swift_slowAlloc();
      v58 = (char *)v23;
      v44 = v43;
      v61 = swift_slowAlloc();
      v62[0] = v61;
      *(_DWORD *)v44 = 136315906;
      LODWORD(v60) = v42;
      v63 = v52;
      swift_getMetatypeMetadata();
      v45 = sub_1BC08A3E4();
      v63 = (char *)sub_1BBFDE0F8(v45, v46, v62);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      v47 = sub_1BBFE4260();
      v63 = (char *)sub_1BBFDE0F8(v47, v48, v62);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2050;
      swift_bridgeObjectRelease();
      v63 = v58;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 32) = 2082;
      swift_bridgeObjectRetain();
      v63 = (char *)sub_1BBFDE0F8(v53, a2, v62);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BBFD7000, v40, (os_log_type_t)v60, "[%s]_%{public}s: %{public}ld elements converted from Core Data and submitted to engine section %{public}s", (uint8_t *)v44, 0x2Au);
      v49 = v61;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v49, -1, -1);
      MEMORY[0x1BCCE9C40](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v56);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v56);
    }
    if (v57)
    {
      v57(v24);
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
  result = sub_1BC08AA74();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE410C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1BBFE41F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
  {
    sub_1BBFDF744(0, &qword_1ED69C998);
    v3 = sub_1BC08A4BC();
  }
  else
  {
    v3 = 0;
  }
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_1BBFE4260()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BBFE449C(0, v2, 0);
    v3 = 0;
    do
    {
      v4 = *(id *)(v1 + 8 * v3 + 32);
      v5 = sub_1BC08937C();
      v7 = v6;

      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_1BBFE449C(v8 > 1, v9 + 1, 1);
      ++v3;
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BBFE6088();
  v11 = sub_1BC08A384();
  swift_bridgeObjectRelease();
  return v11;
}

id FeedItemREElementDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeedItemREElementDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeedItemREElementDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItemREElementDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BBFE449C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE478C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE44B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE4908(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE44D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE4A78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE44F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5D3C(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1EF3EDD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE451C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5D3C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69CA40, (uint64_t (*)(uint64_t))sub_1BBFDF44C);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4548(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5D3C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69C9E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8C8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4574(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE4BD8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4590(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE4DF4(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69D708, &qword_1ED69CE40, (uint64_t)&qword_1ED69D210, (void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BBFE6190);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE45CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5B2C(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&qword_1ED69D728, (uint64_t)&qword_1ED69D210, (void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BBFE6190);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4600(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE500C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE461C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5188(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4638(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE533C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE4654(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE54AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE4670(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE561C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE468C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5D3C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69CA08, (uint64_t (*)(uint64_t))type metadata accessor for ModelTrainingEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE46B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BBFE57A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BBFE46D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5910(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE46F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE4DF4(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69D700, &qword_1ED69CE30, (uint64_t)&qword_1ED69D200, (void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BBFE6200);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE472C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5B2C(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&qword_1ED69D720, (uint64_t)&qword_1ED69D200, (void (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))sub_1BBFE6200);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE4760(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BBFE5D3C(a1, a2, a3, (_QWORD *)*v3, &qword_1ED69C9E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D690]);
  *v3 = result;
  return result;
}

uint64_t sub_1BBFE478C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, &qword_1ED69DCF8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE4908(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, &qword_1ED69CA20, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE4A78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, &qword_1ED69AE18, MEMORY[0x1E0D2E570], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE4BD8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFE6190(0, &qword_1ED69D718, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BBFDB264(0, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BBFDB264(0, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE4DF4(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  size_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v13 = a4[3];
    v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v14 = a2;
    }
  }
  else
  {
    v14 = a2;
  }
  v15 = a4[2];
  if (v14 <= v15)
    v16 = a4[2];
  else
    v16 = v14;
  if (!v16)
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFE6138(0, a5, a6, a7, a8);
  sub_1BBFE6370(0, a6, a7, a8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v21 = (_QWORD *)swift_allocObject();
  v22 = _swift_stdlib_malloc_size(v21);
  if (!v19)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v22 - v20 == 0x8000000000000000 && v19 == -1)
    goto LABEL_34;
  v21[2] = v15;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v19);
LABEL_19:
  sub_1BBFE6370(0, a6, a7, a8);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = (char *)v21 + v26;
  v28 = (char *)a4 + v26;
  if ((a1 & 1) != 0)
  {
    if (v21 < a4 || v27 >= &v28[*(_QWORD *)(v25 + 72) * v15])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v21 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v29 = *(_QWORD *)(v25 + 72) * v15;
  v30 = &v27[v29];
  v31 = (unint64_t)&v28[v29];
  if (v28 >= v30 || (unint64_t)v27 >= v31)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v21;
  }
LABEL_36:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE500C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE5188(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDB42C(0, &qword_1ED69CA18, (uint64_t (*)(uint64_t))sub_1BBFE62FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1BBFE62FC();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE533C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDB42C(0, &qword_1ED69CA00, (uint64_t (*)(uint64_t))sub_1BBFE6270, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE54AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDB42C(0, &qword_1ED69CA30, (uint64_t (*)(uint64_t))type metadata accessor for _HKDataTypeCode, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE561C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDA924(0, &qword_1ED69DD08, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE57A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDB42C(0, &qword_1ED69D910, (uint64_t (*)(uint64_t))sub_1BBFE6454, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE5910(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFE6200(0, &qword_1ED69D710, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BBFDB264(0, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BBFDB264(0, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE5B2C(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v11 = a4[3];
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v12 = a2;
    }
  }
  else
  {
    v12 = a2;
  }
  v13 = a4[2];
  if (v12 <= v13)
    v14 = a4[2];
  else
    v14 = v12;
  if (!v14)
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFE63F8(0, a5, a6, a7);
  v15 = *(_QWORD *)(((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a7)(0, a6, type metadata accessor for GeneratorPipelineManagerWrapper)- 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = (_QWORD *)swift_allocObject();
  v19 = _swift_stdlib_malloc_size(v18);
  if (!v16)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v16 == -1)
    goto LABEL_34;
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  v21 = *(_QWORD *)(((uint64_t (*)(_QWORD, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t)))a7)(0, a6, type metadata accessor for GeneratorPipelineManagerWrapper)- 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v13])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v13;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v18;
  }
LABEL_36:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE5D3C(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BBFDB42C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BBFE5F2C()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = *(_QWORD *)(sub_1BC089AA8() + 16);
  if (v0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE449C(0, v0, 0);
    v1 = 0;
    v2 = v10;
    do
    {
      v3 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v5 = v4;
      v7 = *(_QWORD *)(v10 + 16);
      v6 = *(_QWORD *)(v10 + 24);
      if (v7 >= v6 >> 1)
        sub_1BBFE449C(v6 > 1, v7 + 1, 1);
      ++v1;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      v8 = v10 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v3;
      *(_QWORD *)(v8 + 40) = v5;
    }
    while (v0 != v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1BBFE6020()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BBFE6064()
{
  uint64_t v0;

  return sub_1BBFE3AA0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(char **)(v0 + 40), *(void (**)(char *))(v0 + 48), *(_QWORD *)(v0 + 56), *(char **)(v0 + 64));
}

uint64_t sub_1BBFE6078(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

unint64_t sub_1BBFE6088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DCB0;
  if (!qword_1ED69DCB0)
  {
    sub_1BBFDA924(255, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DCB0);
  }
  return result;
}

uint64_t method lookup function for FeedItemREElementDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedItemREElementDataSource.__allocating_init(store:sourceProfiles:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BBFE60FC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BBFE610C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BBFE6130(uint64_t a1)
{
  uint64_t v1;

  sub_1BBFE41F0(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BBFE6138(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BBFE6370(255, a3, a4, a5);
    v6 = sub_1BC08AB70();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BBFE6190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BBFDB264(255, &qword_1ED69D038, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (unint64_t *)&unk_1ED69D050);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BBFE6200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BBFDB264(255, &qword_1ED69D028, (uint64_t (*)(uint64_t))sub_1BBFDAEBC, &qword_1ED69D040);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BBFE6270()
{
  unint64_t result;

  result = qword_1ED69BB78;
  if (!qword_1ED69BB78)
  {
    sub_1BBFE62A8();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69BB78);
  }
  return result;
}

unint64_t sub_1BBFE62A8()
{
  unint64_t result;

  result = qword_1ED69BB70;
  if (!qword_1ED69BB70)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69BB70);
  }
  return result;
}

void sub_1BBFE62FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69C8E0)
  {
    sub_1BBFDF744(255, &qword_1ED69DD30);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69C8E0);
  }
}

void sub_1BBFE6370(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC089064();
    a4(255, a3, type metadata accessor for GeneratorPipelineManagerWrapper);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BBFE63F8(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    a4(255, a3, type metadata accessor for GeneratorPipelineManagerWrapper);
    v5 = sub_1BC08AB70();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BBFE6454()
{
  unint64_t result;

  result = qword_1ED69D918;
  if (!qword_1ED69D918)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69D918);
  }
  return result;
}

uint64_t static FeedItem.predicateForKeyword(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC08B960;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1BBFDF700();
  *(_QWORD *)(v4 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v4 + 40) = 0xE800000000000000;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1BC08A5E8();
}

id static FeedItem.predicateForMissingKeyword(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC08B960;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1BBFDF700();
  *(_QWORD *)(v4 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v4 + 40) = 0xE800000000000000;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1BC08A5E8();
  v8 = objc_msgSend((id)objc_opt_self(), sel_notPredicateWithSubpredicate_, v7);

  return v8;
}

id static FeedItem.predicateForNotKeyword(contentKinds:keyword:sourceProfiles:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v26[2];

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - v9;
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  v11 = MEMORY[0x1E0DED1E8];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC08B960;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BBFDF700();
  *(_QWORD *)(v12 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v12 + 40) = 0xE800000000000000;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = a2;
  *(_QWORD *)(v12 + 80) = a3;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1BC08A5E8();
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_notPredicateWithSubpredicate_, v15);

  v18 = sub_1BC088E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  v19 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(a1, 0, (uint64_t)v10, a4);
  sub_1BBFE8B5C((uint64_t)v10);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))v11);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v20 + 32) = v17;
  *(_QWORD *)(v20 + 40) = v19;
  v26[1] = v20;
  sub_1BC08A4E0();
  v21 = v17;
  v22 = v19;
  v23 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v16, sel_andPredicateWithSubpredicates_, v23);

  return v24;
}

id static FeedItem.predicateFor(contentKinds:keyword:hideInDiscover:sourceProfiles:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t inited;
  id v11;

  sub_1BBFDA924(0, &qword_1ED69DCF8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B950;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  swift_bridgeObjectRetain();
  v11 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds17atLeastOneKeyword14hideInDiscover14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySSGSbSgSayAA13SourceProfileOGSgtFZ_0(a1, inited, a4 & 1, a5);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v11;
}

uint64_t static FeedItem.predicateFor(healthRecordsOnly:)(char a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC08B940;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, v1);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BC08B960;
    v4 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    v5 = sub_1BBFDF700();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = 0x7364726F7779656BLL;
    *(_QWORD *)(v3 + 40) = 0xE800000000000000;
    v6 = sub_1BC08964C();
    *(_QWORD *)(v3 + 96) = v4;
    *(_QWORD *)(v3 + 104) = v5;
    *(_QWORD *)(v3 + 72) = v6;
    *(_QWORD *)(v3 + 80) = v7;
    *(_QWORD *)(v2 + 32) = sub_1BC08A5E8();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BC08B960;
    *(_QWORD *)(v8 + 56) = v4;
    *(_QWORD *)(v8 + 64) = v5;
    *(_QWORD *)(v8 + 32) = 0x7364726F7779656BLL;
    *(_QWORD *)(v8 + 40) = 0xE800000000000000;
    v9 = sub_1BC089658();
    *(_QWORD *)(v8 + 96) = v4;
    *(_QWORD *)(v8 + 104) = v5;
    *(_QWORD *)(v8 + 72) = v9;
    *(_QWORD *)(v8 + 80) = v10;
    *(_QWORD *)(v2 + 40) = sub_1BC08A5E8();
    sub_1BC08A4E0();
    v11 = (void *)sub_1BC08A4BC();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v11);

    return (uint64_t)v12;
  }
  else
  {
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BC08B960;
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    v16 = sub_1BBFDF700();
    *(_QWORD *)(v14 + 64) = v16;
    *(_QWORD *)(v14 + 32) = 0x7364726F7779656BLL;
    *(_QWORD *)(v14 + 40) = 0xE800000000000000;
    v17 = sub_1BC089658();
    *(_QWORD *)(v14 + 96) = v15;
    *(_QWORD *)(v14 + 104) = v16;
    *(_QWORD *)(v14 + 72) = v17;
    *(_QWORD *)(v14 + 80) = v18;
    return sub_1BC08A5E8();
  }
}

uint64_t static FeedItem.predicateForHasKeywordHealthRecordsDataType(_:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B960;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1BBFDF700();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  v3 = sub_1BC089658();
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v4;
  return sub_1BC08A5E8();
}

uint64_t static FeedItem.predicateForHealthRecordsKeyword()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B960;
  v1 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  v2 = sub_1BBFDF700();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  v3 = sub_1BC08964C();
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = v2;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v4;
  return sub_1BC08A5E8();
}

uint64_t static FeedItem.predicate(uniqueIdentifier:)(uint64_t a1, uint64_t a2)
{
  return sub_1BBFE6FAC(a1, a2);
}

uint64_t static FeedItem.predicateForAnyUniqueIdentifier(in:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC08B960;
  sub_1BC089C4C();
  v3 = sub_1BC089C1C();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BBFDF700();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, v6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v2 + 96) = v7;
  *(_QWORD *)(v2 + 104) = sub_1BBFE90D8();
  *(_QWORD *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1BC08A5E8();
}

uint64_t static FeedItem.predicateForPartialUniqueIdentifier(in:)(uint64_t a1, uint64_t a2)
{
  return sub_1BBFE6FAC(a1, a2);
}

uint64_t sub_1BBFE6FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC08B960;
  sub_1BC089C4C();
  v5 = sub_1BC089C1C();
  v7 = v6;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BBFDF700();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1BC08A5E8();
}

id static FeedItem.predicateForNoFeedItems()()
{
  return objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
}

uint64_t static FeedItem.predicateForSectionsBefore(section:)()
{
  uint64_t v0;
  id v1;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B960;
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1BBFDF700();
  *(_QWORD *)(v0 + 32) = 0xD000000000000015;
  *(_QWORD *)(v0 + 40) = 0x80000001BC08EEA0;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, (__int16)sub_1BC089364());
  *(_QWORD *)(v0 + 96) = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCE0);
  *(_QWORD *)(v0 + 104) = sub_1BBFE9138(&qword_1ED69A058, (unint64_t *)&qword_1ED69DCE0);
  *(_QWORD *)(v0 + 72) = v1;
  return sub_1BC08A5E8();
}

uint64_t static FeedItem.createFeatureStatusPredicate(with:hkType:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  int v9;
  int v10;
  char v11;
  int v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t inited;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  unint64_t v47;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v38 - v5;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v39 = a2;
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    result = sub_1BBFE7658(a1);
    v8 = result;
    v10 = v9;
    v12 = v11 & 1;
    v44 = a1 + 56;
    v42 = *MEMORY[0x1E0D2D4D0];
    v41 = xmmword_1BC08B950;
    v40 = xmmword_1BC08B960;
    v43 = a1;
    v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v44 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(a1 + 36) != v10)
        goto LABEL_15;
      v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
      v15 = *v14;
      v16 = v14[1];
      v46 = v12;
      sub_1BBFDB42C(0, &qword_1ED69DBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], v13);
      v17 = sub_1BC0892A4();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v41;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, v42, v17);
      v21 = sub_1BC088E84();
      v22 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v45, 1, 1, v21);
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], v13);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v40;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v23 + 32) = sub_1BC0893C4();
      *(_QWORD *)(v23 + 40) = 0;
      _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7keyword17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SS10Foundation0L8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v20, v15, v16, v22, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BBFE8B5C(v22);
      swift_bridgeObjectRelease();
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      a1 = v43;
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      result = sub_1BBFE76FC(v8, v10, v46 & 1, a1);
      v8 = result;
      v10 = v24;
      v12 = v25 & 1;
      if (!--v6)
      {
        sub_1BBFE9178(result, v24, v12);
        a2 = v39;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    v26 = (void *)sub_1BC08A4BC();
    swift_bridgeObjectRelease();
    v27 = (void *)objc_opt_self();
    v28 = objc_msgSend(v27, sel_orPredicateWithSubpredicates_, v26);

    if (a2)
    {
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC08B600;
      *(_QWORD *)(inited + 32) = a2;
      v47 = inited;
      sub_1BC08A4E0();
      v30 = v47;
      v31 = a2;
      v32 = (void *)_s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(v30);
      swift_bridgeObjectRelease();
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1BC08B940;
      *(_QWORD *)(v33 + 32) = v28;
      *(_QWORD *)(v33 + 40) = v32;
      v47 = v33;
      sub_1BC08A4E0();
      v34 = v28;
      v35 = v32;
      v36 = (void *)sub_1BC08A4BC();
      swift_bridgeObjectRelease();
      v37 = objc_msgSend(v27, sel_andPredicateWithSubpredicates_, v36);

      return (uint64_t)v37;
    }
    else
    {
      return (uint64_t)v28;
    }
  }
  return result;
}

uint64_t sub_1BBFE7658(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1BBFE76FC(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;

  v0 = sub_1BC089028();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v24 = (char *)&v23 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v23 - v9;
  v25 = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC08BB50;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BBFDF700();
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 32) = 0xD000000000000011;
  *(_QWORD *)(v11 + 40) = 0x80000001BC08EF30;
  sub_1BC088E6C();
  v13 = sub_1BC088FEC();
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v10, v0);
  v15 = sub_1BBFDF744(0, &qword_1ED69BA58);
  *(_QWORD *)(v11 + 96) = v15;
  v16 = sub_1BBFE9138((unint64_t *)&qword_1ED69BA60, &qword_1ED69BA58);
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 72) = v13;
  sub_1BC088E48();
  v17 = sub_1BC088FEC();
  v14(v8, v0);
  *(_QWORD *)(v11 + 136) = v15;
  *(_QWORD *)(v11 + 144) = v16;
  *(_QWORD *)(v11 + 112) = v17;
  *(_QWORD *)(v11 + 176) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 184) = v12;
  *(_QWORD *)(v11 + 152) = 0x746E6176656C6572;
  *(_QWORD *)(v11 + 160) = 0xEF65746144646E45;
  v18 = v24;
  sub_1BC088E6C();
  v19 = sub_1BC088FEC();
  v14(v18, v0);
  *(_QWORD *)(v11 + 216) = v15;
  *(_QWORD *)(v11 + 224) = v16;
  *(_QWORD *)(v11 + 192) = v19;
  v20 = v26;
  sub_1BC088E48();
  v21 = sub_1BC088FEC();
  v14(v20, v0);
  *(_QWORD *)(v11 + 256) = v15;
  *(_QWORD *)(v11 + 264) = v16;
  *(_QWORD *)(v11 + 232) = v21;
  return sub_1BC08A5E8();
}

uint64_t _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
  {
LABEL_11:
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC08B960;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1BBFDF700();
    *(_QWORD *)(v9 + 32) = 0x6570795461746164;
    *(_QWORD *)(v9 + 40) = 0xE900000000000073;
    sub_1BBFE91E0();
    *(_QWORD *)(v9 + 96) = v10;
    *(_QWORD *)(v9 + 104) = sub_1BBFE9244();
    *(_QWORD *)(v9 + 72) = v3;
    return sub_1BC08A5E8();
  }
  v11 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC08A9CC();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCE934C](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = objc_msgSend(v6, sel_code);
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v8);

      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
    }
    while (v2 != v5);
    v3 = v11;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;

  v45 = a3;
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t)&v42 - v8;
  v9 = sub_1BC088E84();
  v48 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC0892A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v42 = v9;
    v43 = a4;
    v44 = a2;
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE449C(0, v15, 0);
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v50 = v18;
    v19 = v12;
    do
    {
      v49(v14, v17, v11);
      v20 = sub_1BC089298();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v16 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE449C(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v51;
      }
      v24 = *(_QWORD *)(v16 + 16);
      v23 = *(_QWORD *)(v16 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BBFE449C(v23 > 1, v24 + 1, 1);
        v16 = v51;
      }
      *(_QWORD *)(v16 + 16) = v24 + 1;
      v25 = v16 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v20;
      *(_QWORD *)(v25 + 40) = v22;
      v17 += v50;
      --v15;
      v12 = v19;
    }
    while (v15);
    a4 = v43;
    a2 = v44;
    v9 = v42;
  }
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  v26 = MEMORY[0x1E0DED1E8];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC08B960;
  v28 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 64) = sub_1BBFDF700();
  *(_QWORD *)(v27 + 32) = 0xD000000000000013;
  *(_QWORD *)(v27 + 40) = 0x80000001BC08EF50;
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, v28, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v27 + 96) = v29;
  *(_QWORD *)(v27 + 104) = sub_1BBFE90D8();
  *(_QWORD *)(v27 + 72) = v16;
  v30 = (void *)sub_1BC08A5E8();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))v26);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v31 + 32) = v30;
  v51 = v31;
  sub_1BC08A4E0();
  v32 = v46;
  sub_1BBFE9184(v45, v46);
  v33 = v48;
  v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v32, 1, v9);
  v35 = v47;
  if (v34 == 1)
  {
    v36 = v30;
    sub_1BBFE8B5C(v32);
    if (!a4)
      goto LABEL_18;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v47, v32, v9);
  v37 = v30;
  _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0();
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v9);
  if (a4)
  {
LABEL_15:
    sub_1BC089C4C();
    MEMORY[0x1BCCE8614](a4);
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();
  }
LABEL_18:
  if (a2)
  {
    v38 = (id)_s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor10objectypesSo11NSPredicateCSaySo12HKObjectTypeCG_tFZ_0(a2);
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();

  }
  v39 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v39);

  return v40;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  v10 = sub_1BC089A90();
  v11 = sub_1BC088E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v10, 0, (uint64_t)v9, a2);
  swift_bridgeObjectRelease();
  sub_1BBFE8B5C((uint64_t)v9);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v13 + 32) = v12;
  v48 = v13;
  sub_1BC08A4E0();
  v14 = (void *)objc_opt_self();
  v15 = v12;
  v16 = objc_msgSend(v14, sel_standardUserDefaults);
  v17 = (void *)sub_1BC08A3B4();
  v18 = objc_msgSend(v16, sel_arrayForKey_, v17);

  v19 = MEMORY[0x1E0DEA968];
  if (v18)
  {
    v20 = sub_1BC08A4C8();

    v21 = sub_1BC04C6A8(v20);
    swift_bridgeObjectRelease();
    if (v21)
    {
      v45 = v4;
      sub_1BC089D9C();
      swift_bridgeObjectRetain_n();
      v22 = sub_1BC089DD8();
      v23 = sub_1BC08A678();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v44 = v15;
        v26 = v25;
        v47 = v25;
        *(_DWORD *)v24 = 136315138;
        v27 = swift_bridgeObjectRetain();
        v28 = MEMORY[0x1BCCE8EA8](v27, MEMORY[0x1E0DEA968]);
        v43 = v3;
        v30 = v29;
        swift_bridgeObjectRelease();
        v46 = sub_1BBFDE0F8(v28, v30, &v47);
        v19 = MEMORY[0x1E0DEA968];
        sub_1BC08A7EC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v22, v23, "discoverFeedItemWhitelist key found in defaults, applying whitelist of %s", v24, 0xCu);
        swift_arrayDestroy();
        v31 = v26;
        v15 = v44;
        MEMORY[0x1BCCE9C40](v31, -1, -1);
        MEMORY[0x1BCCE9C40](v24, -1, -1);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v43);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v3);
      }
      sub_1BC089C4C();
      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
      sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1BC08B960;
      v33 = sub_1BC089C1C();
      v35 = v34;
      *(_QWORD *)(v32 + 56) = v19;
      *(_QWORD *)(v32 + 64) = sub_1BBFDF700();
      *(_QWORD *)(v32 + 32) = v33;
      *(_QWORD *)(v32 + 40) = v35;
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, v19, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *(_QWORD *)(v32 + 96) = v36;
      *(_QWORD *)(v32 + 104) = sub_1BBFE90D8();
      *(_QWORD *)(v32 + 72) = v21;
      v37 = (id)sub_1BC08A5E8();
      MEMORY[0x1BCCE8E84]();
      if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();

    }
  }
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v38 + 56) = v19;
  *(_QWORD *)(v38 + 64) = sub_1BBFDF700();
  strcpy((char *)(v38 + 32), "hideInDiscover");
  *(_BYTE *)(v38 + 47) = -18;
  v39 = (id)sub_1BC08A5E8();
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v40 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v40);

  return v41;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7keyword17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SS10Foundation0L8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a5;
  v36 = a4;
  v34 = a1;
  v7 = sub_1BC088E84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69DAA8, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  v17 = MEMORY[0x1E0DED1E8];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC08B960;
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  v20 = sub_1BBFDF700();
  *(_QWORD *)(v18 + 32) = 0x7364726F7779656BLL;
  *(_QWORD *)(v18 + 40) = 0xE800000000000000;
  *(_QWORD *)(v18 + 96) = v19;
  *(_QWORD *)(v18 + 104) = v20;
  *(_QWORD *)(v18 + 64) = v20;
  *(_QWORD *)(v18 + 72) = a2;
  *(_QWORD *)(v18 + 80) = a3;
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1BC08A5E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, 1, 1, v7);
  v22 = _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(v34, 0, (uint64_t)v16, v35);
  sub_1BBFE8B5C((uint64_t)v16);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))v17);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)(v23 + 40) = v22;
  v37 = v23;
  sub_1BC08A4E0();
  sub_1BBFE9184(v36, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    v24 = v21;
    v25 = v22;
    sub_1BBFE8B5C((uint64_t)v14);
  }
  else
  {
    v26 = v33;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v14, v7);
    v27 = v21;
    v28 = v22;
    _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor17relevantDateRangeSo11NSPredicateC10Foundation0I8IntervalV_tFZ_0();
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v7);
  }
  v29 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v29);

  return v30;
}

unint64_t sub_1BBFE8B08()
{
  unint64_t result;

  result = qword_1ED69DBE0;
  if (!qword_1ED69DBE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69DBE0);
  }
  return result;
}

uint64_t sub_1BBFE8B5C(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds17atLeastOneKeyword14hideInDiscover14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySSGSbSgSayAA13SourceProfileOGSgtFZ_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char *v33;
  __int128 v34;
  unint64_t v35;

  v32 = a3;
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v30 - v8;
  v9 = *(_QWORD *)(a2 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEA968];
  if (v9)
  {
    v30 = a1;
    v31 = a4;
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (uint64_t *)(a2 + 40);
    v34 = xmmword_1BC08B960;
    do
    {
      v13 = *(v12 - 1);
      v14 = *v12;
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = v34;
      *(_QWORD *)(v15 + 56) = v11;
      v16 = sub_1BBFDF700();
      *(_QWORD *)(v15 + 32) = 0x7364726F7779656BLL;
      *(_QWORD *)(v15 + 40) = 0xE800000000000000;
      *(_QWORD *)(v15 + 96) = v11;
      *(_QWORD *)(v15 + 104) = v16;
      *(_QWORD *)(v15 + 64) = v16;
      *(_QWORD *)(v15 + 72) = v13;
      *(_QWORD *)(v15 + 80) = v14;
      swift_bridgeObjectRetain_n();
      sub_1BC08A5E8();
      swift_bridgeObjectRelease();
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      v12 += 2;
      --v9;
    }
    while (v9);
    v17 = v35;
    a1 = v30;
    a4 = v31;
    v10 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v35 = v10;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_8;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_8:
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  v18 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v18);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
LABEL_13:
  v21 = v32;
  v22 = sub_1BC088E84();
  v23 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v33, 1, 1, v22);
  _s14HealthPlatform8FeedItemC0aB4CoreE12predicateFor12contentKinds7hkTypes17relevantDateRange14sourceProfilesSo11NSPredicateCSayAA11ContentKindOG_SaySo12HKObjectTypeCGSg10Foundation0M8IntervalVSgSayAA13SourceProfileOGSgtFZ_0(a1, 0, v23, a4);
  v24 = sub_1BBFE8B5C(v23);
  MEMORY[0x1BCCE8E84](v24);
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  if (v21 != 2)
  {
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BC08B960;
    *(_QWORD *)(v25 + 56) = v11;
    *(_QWORD *)(v25 + 64) = sub_1BBFDF700();
    strcpy((char *)(v25 + 32), "hideInDiscover");
    *(_BYTE *)(v25 + 47) = -18;
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v21 & 1);
    *(_QWORD *)(v25 + 96) = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCE0);
    *(_QWORD *)(v25 + 104) = sub_1BBFE9138(&qword_1ED69A058, (unint64_t *)&qword_1ED69DCE0);
    *(_QWORD *)(v25 + 72) = v26;
    sub_1BC08A5E8();
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();
  }
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  v27 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v27);

  return v28;
}

unint64_t sub_1BBFE90D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DB80;
  if (!qword_1ED69DB80)
  {
    sub_1BBFDA924(255, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DB80);
  }
  return result;
}

uint64_t sub_1BBFE9138(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BBFDF744(255, a2);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFD08], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BBFE9178(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BBFE9184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BBFE91E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B6D0)
  {
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCE0);
    v0 = sub_1BC08A534();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B6D0);
  }
}

unint64_t sub_1BBFE9244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B6D8;
  if (!qword_1ED69B6D8)
  {
    sub_1BBFE91E0();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B6D8);
  }
  return result;
}

uint64_t sub_1BBFE928C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  v4 = sub_1BC08952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1BBFE92F4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1BC08952C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1BBFE93B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  v4 = sub_1BC08952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BBFE941C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  v4 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BBFE9488())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BBFE94CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v10[2];
  _BYTE v11[40];
  _QWORD v12[6];

  v1 = v0;
  v2 = sub_1BC089574();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context, v2);
  sub_1BC089538();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BBFE1C58(v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo, (uint64_t)v12);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue);
  sub_1BBFE95C8(v10, (uint64_t)v11);
  v12[5] = v6;
  sub_1BBFE95E0();
  v7 = v6;
  v8 = sub_1BC08A180();
  sub_1BBFE9624((uint64_t)v11);
  return v8;
}

uint64_t sub_1BBFE95C8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1BBFE95E0()
{
  unint64_t result;

  result = qword_1ED69AFC0;
  if (!qword_1ED69AFC0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08BE38, &type metadata for LegacyFeedItemContextChangePublisher);
    atomic_store(result, (unint64_t *)&qword_1ED69AFC0);
  }
  return result;
}

uint64_t sub_1BBFE9624(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);

  return a1;
}

uint64_t GenerationOperationToGeneratorAdaptor.__allocating_init(queue:pluginInfo:domain:context:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = a1;
  v9 = v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  v10 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a3, v10);
  v11 = v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  v12 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a4, v12);
  sub_1BBFE95C8(a2, v8 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
  return v8;
}

uint64_t GenerationOperationToGeneratorAdaptor.init(queue:pluginInfo:domain:context:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = a1;
  v8 = v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  v9 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a3, v9);
  v10 = v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  v11 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a4, v11);
  sub_1BBFE95C8(a2, v4 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
  return v4;
}

uint64_t GenerationOperationToGeneratorAdaptor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  v2 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  v4 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);

  return v0;
}

uint64_t GenerationOperationToGeneratorAdaptor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  v2 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context;
  v4 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);

  return swift_deallocClassInstance();
}

uint64_t sub_1BBFE98F4()
{
  return sub_1BBFE94CC();
}

uint64_t sub_1BBFE9914@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain;
  swift_beginAccess();
  v4 = sub_1BC08952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BBFE9984()
{
  return type metadata accessor for GenerationOperationToGeneratorAdaptor();
}

uint64_t type metadata accessor for GenerationOperationToGeneratorAdaptor()
{
  uint64_t result;

  result = qword_1ED69C4A8;
  if (!qword_1ED69C4A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BBFE99C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC08952C();
  if (v1 <= 0x3F)
  {
    result = sub_1BC089574();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for GenerationOperationToGeneratorAdaptor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.domain.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.publisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of GenerationOperationToGeneratorAdaptor.__allocating_init(queue:pluginInfo:domain:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1BBFE9AB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC08A7D4();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t sub_1BBFE9B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  __int128 v15[2];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LegacyFeedItemContextChangePublisher.Inner(0, v8, v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  sub_1BBFE1C58(v2, (uint64_t)&v16);
  sub_1BBFE1C58(v2 + 40, (uint64_t)v15);
  v12 = *(void **)(v2 + 80);
  swift_allocObject();
  v13 = sub_1BBFE9E8C((uint64_t)v7, &v16, v15, (uint64_t)v12);
  v17 = v11;
  v18 = MEMORY[0x1BCCE9B68](&unk_1BC08BE00, v11);
  *(_QWORD *)&v16 = v13;
  sub_1BC089F7C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
}

_QWORD *sub_1BBFE9C98(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  swift_allocObject();
  return sub_1BBFE9E8C(a1, a2, a3, a4);
}

uint64_t sub_1BBFE9CF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7[2];

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  if (*(_QWORD *)(v0 + v2))
  {
    v3 = *(_QWORD *)(v0 + v2);
  }
  else
  {
    sub_1BBFE1C58(v0 + v1[14], (uint64_t)v7);
    v4 = swift_allocObject();
    swift_weakInit();
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v1[10];
    v5[3] = v1[11];
    v5[4] = v4;
    type metadata accessor for CommitRedirectingFeedItemContext();
    v3 = swift_allocObject();
    sub_1BBFE95C8(v7, v3 + 16);
    *(_QWORD *)(v3 + 56) = sub_1BBFEB310;
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v0 + v2) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1BBFE9DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = type metadata accessor for LegacyFeedItemContextChangePublisher.Inner(0, a3, a4, v7);
    MEMORY[0x1BCCE9B68](&unk_1BC08BD48, v8);
    sub_1BC0896B8();
    return swift_release();
  }
  return result;
}

_QWORD *sub_1BBFE9E8C(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  __int128 *v23;
  uint64_t v24;

  v5 = v4;
  v23 = a3;
  v24 = a4;
  v21 = a1;
  v22 = a2;
  v6 = *v4;
  v7 = *(_QWORD *)(v6 + 80);
  v8 = sub_1BC08A7D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - v10;
  v12 = (char *)v5 + *(_QWORD *)(v6 + 96);
  v13 = *(_QWORD *)(v7 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v12, 1, 1, v7);
  v15 = *(_QWORD *)(*v5 + 104);
  sub_1BC089718();
  swift_allocObject();
  *(_QWORD *)((char *)v5 + v15) = sub_1BC08970C();
  v16 = *(_QWORD *)(*v5 + 136);
  sub_1BC08925C();
  swift_allocObject();
  *(_QWORD *)((char *)v5 + v16) = sub_1BC089250();
  *(_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 144)) = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(*v5 + 152);
  *(_QWORD *)((char *)v5 + v17) = sub_1BC089FA0();
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 160)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 168)) = 0;
  v18 = (_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 176));
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 184)) = 0;
  *(_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 192)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v11, v21, v7);
  v14(v11, 0, 1, v7);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v12, v11, v8);
  swift_endAccess();
  sub_1BBFE95C8(v22, (uint64_t)v5 + *(_QWORD *)(*v5 + 112));
  sub_1BBFE95C8(v23, (uint64_t)v5 + *(_QWORD *)(*v5 + 120));
  *(_QWORD *)((char *)v5 + *(_QWORD *)(*v5 + 128)) = v24;
  return v5;
}

uint64_t sub_1BBFEA084@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v22[2];

  v2 = v1;
  v22[0] = a1;
  v3 = *v1;
  v4 = sub_1BC08AC30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1EF3EDDA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v22 - v9;
  v22[1] = v2;
  sub_1BBFDB42C(0, &qword_1ED69DD00, (uint64_t (*)(uint64_t))sub_1BBFEB31C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC08B960;
  *(_QWORD *)(v11 + 32) = 0x6D65744964656566;
  *(_QWORD *)(v11 + 40) = 0xEF747865746E6F43;
  v12 = (_QWORD *)((char *)v2 + *(_QWORD *)(v3 + 112));
  v13 = v12[3];
  v14 = __swift_project_boxed_opaque_existential_1(v12, v13);
  *(_QWORD *)(v11 + 72) = v13;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 48));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_0, v14, v13);
  *(_QWORD *)(v11 + 80) = 0x6E496E6967756C70;
  *(_QWORD *)(v11 + 88) = 0xEA00000000006F66;
  v16 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  v17 = v16[3];
  v18 = __swift_project_boxed_opaque_existential_1(v16, v17);
  *(_QWORD *)(v11 + 120) = v17;
  v19 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v11 + 96));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
  v20 = sub_1BC08AC24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEDFE8], v4);
  swift_retain();
  return sub_1BC08AC3C();
}

void sub_1BBFEA2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v13[24];

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = sub_1BC08A7D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-v5];
  sub_1BC089238();
  v7 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160));
  swift_beginAccess();
  *v7 = 1;
  v8 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  v9 = *(void **)v8;
  *(_QWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v6, 1, 1, v2);
  v10 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 40))(v10, v6, v3);
  swift_endAccess();
  v11 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v12 = *(void **)(v0 + v11);
  *(_QWORD *)(v0 + v11) = 0;

  sub_1BC089244();
  if (v9)
  {
    objc_msgSend(v9, sel_cancel);

  }
}

uint64_t sub_1BBFEA3FC()
{
  sub_1BC08925C();
  sub_1BBFDA9C0(&qword_1ED69BA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8], MEMORY[0x1E0D2D480]);
  swift_retain();
  sub_1BC089D18();
  return swift_release();
}

uint64_t sub_1BBFEA490(uint64_t *a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = *a1;
  v3 = (char *)a1 + *(_QWORD *)(*a1 + 168);
  swift_beginAccess();
  *v3 = 1;
  v4 = (uint64_t)a1 + *(_QWORD *)(*a1 + 176);
  v5 = *(void **)v4;
  *(_QWORD *)v4 = 0;
  *(_QWORD *)(v4 + 8) = 0;

  v6 = *(_QWORD *)(*a1 + 184);
  v7 = *(void **)((char *)a1 + v6);
  *(uint64_t *)((char *)a1 + v6) = 0;

  MEMORY[0x1BCCE9B68](&unk_1BC08BD48, v2);
  return sub_1BC0896AC();
}

uint64_t sub_1BBFEA52C(void (*a1)(char *, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  uint64_t v16;
  void **v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char v48;
  id v49[5];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = sub_1BC08A7D4();
  v47 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v44 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v44 - v13;
  sub_1BC089238();
  v15 = (char *)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  if ((*v15 & 1) != 0)
    return sub_1BC089244();
  v45 = v6;
  v46 = a1;
  v16 = *v2;
  v17 = (void **)((char *)v2 + *(_QWORD *)(*v2 + 176));
  if (*v17)
  {
LABEL_5:
    v31 = (uint64_t *)((char *)v2 + *(_QWORD *)(v16 + 152));
    swift_beginAccess();
    v32 = *v31;
    sub_1BC089FAC();
    if ((sub_1BC089F94() & 1) != 0)
    {
LABEL_18:
      swift_endAccess();
      MEMORY[0x1BCCE9B68](&unk_1BC08BD48, v4);
      sub_1BC0896AC();
      return sub_1BC089244();
    }
    v33 = v4;
    sub_1BC089FAC();
    v34 = sub_1BC089F94();
    v35 = sub_1BC089FAC();
    if ((v34 & 1) != 0)
    {
      v4 = v33;
LABEL_17:
      *v31 = v35;
      goto LABEL_18;
    }
    v36 = (int64_t)v46;
    result = sub_1BC089F94();
    v4 = v33;
    if ((result & 1) == 0)
    {
      if ((v32 | v36) < 0)
      {
        __break(1u);
        goto LABEL_22;
      }
      v35 = v32 + v36;
      if (!__OFADD__(v32, v36))
      {
        if ((v35 & 0x8000000000000000) == 0)
          goto LABEL_17;
LABEL_22:
        __break(1u);
        return result;
      }
    }
    v35 = sub_1BC089FAC();
    goto LABEL_17;
  }
  v44[0] = v4;
  sub_1BC089244();
  v18 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  v20 = v18[3];
  v19 = v18[4];
  v44[1] = __swift_project_boxed_opaque_existential_1(v18, v20);
  v21 = (void *)sub_1BBFE9CF8();
  v49[3] = (id)type metadata accessor for CommitRedirectingFeedItemContext();
  v49[4] = (id)sub_1BBFDA9C0(&qword_1ED69C378, (uint64_t (*)(uint64_t))type metadata accessor for CommitRedirectingFeedItemContext, (uint64_t)&unk_1BC08D244);
  v49[0] = v21;
  v22 = (void *)(*(uint64_t (**)(id *, uint64_t, uint64_t))(v19 + 40))(v49, v20, v19);
  v24 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  if (v22)
  {
    v49[0] = v22;
    swift_getKeyPath();
    v25 = v22;
    swift_retain();
    v26 = sub_1BC088F20();
    swift_release();
    swift_release();

    v27 = *(_QWORD *)(*v2 + 184);
    v28 = *(void **)((char *)v2 + v27);
    *(uint64_t *)((char *)v2 + v27) = v26;

    sub_1BC089238();
    v29 = *v17;
    *v17 = v22;
    v17[1] = v24;
    v30 = v25;

    sub_1BC089244();
    objc_msgSend(*(id *)((char *)v2 + *(_QWORD *)(*v2 + 128)), sel_addOperation_, v30);
    sub_1BC089238();

    v16 = *v2;
    v4 = v44[0];
    goto LABEL_5;
  }
  v38 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  swift_beginAccess();
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v39 = v45;
  v46(v14, v38, v45);
  sub_1BC089238();
  v40 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v12, 1, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 40))(v38, v12, v39);
  swift_endAccess();
  sub_1BC089244();
  sub_1BC0896F4();
  v46(v9, (uint64_t)v14, v39);
  v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v5);
  v42 = v47;
  v43 = v39;
  if (v41 != 1)
  {
    v48 = 1;
    sub_1BC089F70();
    v42 = v40;
    v43 = v5;
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  sub_1BC089700();
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v14, v39);
}

uint64_t sub_1BBFEA9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1BC08A7D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_1BBFEAA84()
{
  sub_1BBFEA9AC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyFeedItemContextChangePublisher.Inner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LegacyFeedItemContextChangePublisher.Inner);
}

void destroy for LegacyFeedItemContextChangePublisher(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);

}

uint64_t initializeWithCopy for LegacyFeedItemContextChangePublisher(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  id v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for LegacyFeedItemContextChangePublisher(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  v4 = (void *)a2[10];
  v5 = (void *)a1[10];
  a1[10] = (uint64_t)v4;
  v6 = v4;

  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for LegacyFeedItemContextChangePublisher(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyFeedItemContextChangePublisher(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyFeedItemContextChangePublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyFeedItemContextChangePublisher()
{
  return &type metadata for LegacyFeedItemContextChangePublisher;
}

uint64_t sub_1BBFEACBC(void (*a1)(char *, uint64_t, uint64_t))
{
  return sub_1BBFEA52C(a1);
}

uint64_t sub_1BBFEACDC()
{
  return swift_retain();
}

uint64_t sub_1BBFEACEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v4 = sub_1BC08A7D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BBFEAD60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v4 = sub_1BC08A7D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BBFEADDC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BBFEAE20()
{
  return swift_retain();
}

uint64_t sub_1BBFEAE30()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BBFEAE78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BBFEAEC8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BBFEAF10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BBFEAF54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BBFEAF9C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BBFEAFE0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BBFEB024(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BBFEB06C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BBFEB0B0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BBFEB0F4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BBFEB13C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BBFEB180()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_1BBFEB19C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BBFEA084(a1);
}

void sub_1BBFEB1BC()
{
  sub_1BBFEA2B0();
}

uint64_t sub_1BBFEB1DC()
{
  return sub_1BC089DF0();
}

uint64_t sub_1BBFEB1FC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

void sub_1BBFEB204()
{
  JUMPOUT(0x1BCCE9B68);
}

void sub_1BBFEB214()
{
  JUMPOUT(0x1BCCE9B68);
}

uint64_t sub_1BBFEB224()
{
  return MEMORY[0x1E0DEDD18];
}

char *keypath_get_selector_isFinished()
{
  return sel_isFinished;
}

id sub_1BBFEB240@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isFinished);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1BBFEB270(id *a1)
{
  id v1;
  uint64_t result;

  v1 = *a1;
  result = (uint64_t)objc_msgSend(*a1, sel_isFinished);
  if ((_DWORD)result)
  {
    result = (uint64_t)objc_msgSend(v1, sel_isCancelled);
    if ((result & 1) == 0)
      return sub_1BBFEA3FC();
  }
  return result;
}

uint64_t sub_1BBFEB2C0()
{
  uint64_t *v0;

  return sub_1BBFEA490(v0);
}

uint64_t sub_1BBFEB2C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BBFEB2EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BBFEB310(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BBFE9DF0(a1, v1[4], v1[2], v1[3]);
}

void sub_1BBFEB31C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69DCA0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69DCA0);
  }
}

void sub_1BBFEB388()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BC08A3B4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0610 = (uint64_t)v1;
}

uint64_t sub_1BBFEB3F8()
{
  uint64_t result;

  if (qword_1ED69DA00 != -1)
    swift_once();
  result = sub_1BC05E094(634);
  qword_1ED6A0608 = result;
  return result;
}

uint64_t sub_1BBFEB450()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t *, _QWORD);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36[4];
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;

  v0 = sub_1BC08961C();
  v1 = v0;
  v2 = v0 & 0xC000000000000001;
  if ((v0 & 0xC000000000000001) != 0)
    v3 = sub_1BC08A8A0();
  else
    v3 = *(_QWORD *)(v0 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_22:
    v36[0] = v7;
    swift_bridgeObjectRetain();
    sub_1BBFEB80C(v36);
    swift_bridgeObjectRelease();
    v24 = v36[0];
    v25 = *(_QWORD *)(v36[0] + 16);
    if (v25)
    {
      v36[0] = MEMORY[0x1E0DEE9D8];
      sub_1BBFE449C(0, v25, 0);
      v26 = 0;
      v27 = v36[0];
      do
      {
        v37 = *(_QWORD *)(v24 + 8 * v26 + 32);
        v28 = sub_1BC08AB64();
        v30 = v29;
        v36[0] = v27;
        v32 = *(_QWORD *)(v27 + 16);
        v31 = *(_QWORD *)(v27 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1BBFE449C(v31 > 1, v32 + 1, 1);
          v27 = v36[0];
        }
        ++v26;
        *(_QWORD *)(v27 + 16) = v32 + 1;
        v33 = v27 + 16 * v32;
        *(_QWORD *)(v33 + 32) = v28;
        *(_QWORD *)(v33 + 40) = v30;
      }
      while (v25 != v26);
      swift_release();
    }
    else
    {
      swift_release();
      v27 = MEMORY[0x1E0DEE9D8];
    }
    v36[0] = v27;
    sub_1BBFEC21C();
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69DCB0, (uint64_t (*)(uint64_t))sub_1BBFEC21C, MEMORY[0x1E0DEAF20]);
    v34 = sub_1BC08A384();
    swift_bridgeObjectRelease();
    return v34;
  }
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE44B8(0, v3 & ~(v3 >> 63), 0);
  if (v2)
  {
    v4 = sub_1BC08A858();
    v6 = 1;
  }
  else
  {
    v4 = sub_1BC08082C(v1);
    v6 = v8 & 1;
  }
  v37 = v4;
  v38 = v5;
  v39 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        v15 = v37;
        v14 = v38;
        v16 = v39;
        sub_1BC0805C8(v37, v38, v39, v1);
        v18 = v17;
        v19 = objc_msgSend(v17, sel_code);

        v20 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BBFE44B8(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v20 = v40;
        }
        v22 = *(_QWORD *)(v20 + 16);
        v21 = *(_QWORD *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1BBFE44B8(v21 > 1, v22 + 1, 1);
          v20 = v40;
        }
        *(_QWORD *)(v20 + 16) = v22 + 1;
        *(_QWORD *)(v20 + 8 * v22 + 32) = v19;
        if (v2)
          break;
        v9 = sub_1BBFE76F8(v15, v14, v16, v1);
        v11 = v10;
        v13 = v12;
        sub_1BBFE9178(v15, v14, v16);
        v37 = v9;
        v38 = v11;
        v39 = v13 & 1;
        if (!--v3)
          goto LABEL_21;
      }
      if ((v16 & 1) == 0)
        goto LABEL_31;
      if (sub_1BC08A870())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BBFEC168();
      v23 = (void (*)(uint64_t *, _QWORD))sub_1BC08A570();
      sub_1BC08A8E8();
      v23(v36, 0);
      --v3;
    }
    while (v3);
LABEL_21:
    sub_1BBFE9178(v37, v38, v39);
    swift_bridgeObjectRelease();
    v7 = v40;
    goto LABEL_22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BBFEB80C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC053A74(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BBFEB874(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BBFEB874(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BC08AB58();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1BBFEBEFC((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1BC0539F8((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC08A51C();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC05379C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1BC05379C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1BBFEBEFC((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1BC08AA68();
  __break(1u);
  return result;
}

uint64_t sub_1BBFEBEFC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1BC0538A8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BBFEC168()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3EDDB0)
  {
    sub_1BBFEC1E0();
    sub_1BBFDA9C0(&qword_1ED69D898, (uint64_t (*)(uint64_t))sub_1BBFEC1E0, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC08A57C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3EDDB0);
  }
}

unint64_t sub_1BBFEC1E0()
{
  unint64_t result;

  result = qword_1ED69D890;
  if (!qword_1ED69D890)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69D890);
  }
  return result;
}

void sub_1BBFEC21C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DCA8)
  {
    v0 = sub_1BC08A534();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DCA8);
  }
}

uint64_t *ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t *v9;
  _BYTE v11[40];

  v4 = (uint64_t *)swift_allocObject();
  v5 = (char *)v4
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  v6 = sub_1BC0897CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1BBFE1C58(a1, (uint64_t)v11);
  type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  swift_allocObject();
  v7 = a2;
  v8 = sub_1BC0224CC((uint64_t)v11, v7);

  sub_1BBFE1C58(a1, (uint64_t)v11);
  v9 = sub_1BBFEE34C((uint64_t)v11, v7, (uint64_t)v8, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t *ProfileDashboardFeedPopulationManager.init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char *v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t *v10;
  _BYTE v12[40];

  v3 = v2;
  v6 = (char *)v3
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  v7 = sub_1BC0897CC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1BBFE1C58(a1, (uint64_t)v12);
  type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  swift_allocObject();
  v8 = a2;
  v9 = sub_1BC0224CC((uint64_t)v12, v8);

  sub_1BBFE1C58(a1, (uint64_t)v12);
  v10 = sub_1BBFEE34C((uint64_t)v12, v8, (uint64_t)v9, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t sub_1BBFEC444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1
     + OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain;
  swift_beginAccess();
  sub_1BBFEED4C(v9, (uint64_t)v8);
  v10 = sub_1BC0897CC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1BBFEF208((uint64_t)v8, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0]);
  sub_1BBFEC5D0(v1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1BBFEEDA8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1BBFEC5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)((*(uint64_t (**)(void))(*(_QWORD *)a1 + 232))() + 16);
  if (v1)
  {
    for (i = 0; i != v1; ++i)
    {
      v3 = sub_1BC089A90();
      sub_1BC0196B4(v3);
    }
  }
  swift_bridgeObjectRelease();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v4 + 32) = sub_1BC08A618();
  return sub_1BC08976C();
}

void *sub_1BBFEC6C8()
{
  return &unk_1E749EFC8;
}

uint64_t sub_1BBFEC6D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_1BBFEC6E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v2 = sub_1BC0897CC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = sub_1BC0897B4();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, a1, v2);
  if ((v9 & 1) != 0)
  {
    v10 = 0;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    sub_1BBFEC444((uint64_t)v6);
    v10 = sub_1BC0897C0();
    v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v6, v2);
    v11(v8, v2);
  }
  return v10 & 1;
}

uint64_t sub_1BBFEC7D8(unint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;

  v8 = v4 + 8;
  v10 = v4[11];
  v9 = v4[12];
  __swift_project_boxed_opaque_existential_1(v8, v10);
  v11 = RelevanceEngineCoordinator.sortedElements(for:)(5, v10, v9);
  v12 = objc_msgSend(a2, sel_profileIdentifier);
  sub_1BBFEC88C(a1, v11, v12);

  v13 = swift_bridgeObjectRelease();
  return a4(v13);
}

uint64_t sub_1BBFEC88C(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  SEL *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  NSObject *v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  SEL *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  os_log_t v42;
  id v43;
  SEL *p_align;
  uint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  char *v49;
  id v50;
  id v51;
  NSObject *v52;
  int v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  SEL *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  NSObject *v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t);
  NSObject *v109;
  __int128 v110;
  NSObject *v111;
  SEL *v112;
  id v113;
  void *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  char v124;
  id v125;
  SEL *v126;
  id v127;
  SEL *v128;
  char *v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  unint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  unint64_t v144;
  char *v145;
  char *v146;
  id v147;
  uint64_t v148;
  id v149;
  id v150;
  id v151;
  id v152;
  NSObject *v153;
  os_log_type_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  id v159;
  SEL *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  SEL *v166;
  id v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  void *v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  NSObject *v179;
  os_log_type_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  id v186;
  SEL *v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  SEL *v193;
  id v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  id v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  os_log_t v202;
  void (*v203)(char *, uint64_t);
  id v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  SEL *v209;
  id v211;
  unint64_t v212;
  uint64_t v213;
  id v214;
  void *v215;
  __int128 v217;
  uint64_t v218;
  uint64_t v219;
  os_log_t v220;
  uint64_t v221;
  __int128 v222;
  char *v223;
  uint64_t v224;
  uint64_t *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  SEL *v231;
  id v232;
  char *v233;
  os_log_t v234;
  char *v235;
  id v236;
  uint64_t v237;
  void (*v238)(char *, uint64_t);
  unint64_t v239;
  NSObject *v240;
  char *v241;
  char *v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246[2];

  v4 = v3;
  v244 = a1;
  v7 = sub_1BC089064();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (SEL *)((char *)&v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1BC089DE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v233 = (char *)&v217 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v226 = (char *)&v217 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v230 = (char *)&v217 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v240 = ((char *)&v217 - v20);
  v21 = MEMORY[0x1E0C80A78](v19);
  v242 = (char *)&v217 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v217 - v23;
  sub_1BC089D9C();
  v25 = a3;
  swift_bridgeObjectRetain_n();
  v236 = v25;
  v26 = sub_1BC089DD8();
  LODWORD(v238) = sub_1BC08A678();
  v27 = os_log_type_enabled(v26, (os_log_type_t)v238);
  v241 = (char *)a2;
  v228 = v7;
  v229 = v4;
  v239 = v8;
  v231 = v10;
  v237 = v11;
  v218 = v12;
  v243 = a2 >> 62;
  if (v27)
  {
    v234 = v26;
    v235 = v24;
    v28 = a2 >> 62;
    v29 = swift_slowAlloc();
    v232 = (id)swift_slowAlloc();
    v246[0] = (uint64_t)v232;
    *(_DWORD *)v29 = 136315650;
    v30 = sub_1BC08AC9C();
    v31 = v8;
    v32 = v7;
    v245 = sub_1BBFDE0F8(v30, v33, v246);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v34 = v236;
    v35 = objc_msgSend(v236, sel_identifier);
    v36 = v231;
    sub_1BC08904C();

    sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v37 = sub_1BC08AB64();
    v39 = v38;
    (*(void (**)(SEL *, uint64_t))(v31 + 8))(v36, v32);
    v245 = sub_1BBFDE0F8(v37, v39, v246);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2050;
    v40 = v34;
    if (v28)
    {
      swift_bridgeObjectRetain();
      v41 = sub_1BC08AA80();
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = *(_QWORD *)(((unint64_t)v241 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v245 = v41;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    v42 = v234;
    _os_log_impl(&dword_1BBFD7000, v234, (os_log_type_t)v238, "[%s]_%s: %{public}ld REElements retrieved from RelevanceEngine for profile dashboard", (uint8_t *)v29, 0x20u);
    v43 = v232;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v43, -1, -1);
    MEMORY[0x1BCCE9C40](v29, -1, -1);

    v238 = *(void (**)(char *, uint64_t))(v218 + 8);
    v238(v235, v237);
    v4 = v229;
    v8 = v239;
    p_align = (SEL *)(&stru_1E74A5FE8 + 24);
  }
  else
  {
    v45 = v11;

    v40 = v236;
    swift_bridgeObjectRelease_n();
    v238 = *(void (**)(char *, uint64_t))(v12 + 8);
    v238(v24, v45);
    p_align = (SEL *)&stru_1E74A5FE8.align;
  }
  v232 = static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(5, (void *)v244, v40, v4);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v46 + 32) = v40;
  v47 = v40;
  v48 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(5, v46);
  swift_bridgeObjectRelease();
  v49 = v242;
  sub_1BC089D9C();
  v50 = v47;
  swift_bridgeObjectRetain_n();
  v51 = v50;
  v52 = sub_1BC089DD8();
  v53 = sub_1BC08A678();
  v54 = os_log_type_enabled(v52, (os_log_type_t)v53);
  v244 = v48;
  v235 = (char *)(v48 >> 62);
  v236 = v51;
  if (v54)
  {
    LODWORD(v234) = v53;
    v55 = swift_slowAlloc();
    v227 = swift_slowAlloc();
    v246[0] = v227;
    *(_DWORD *)v55 = 136315906;
    v56 = sub_1BC08AC9C();
    v245 = sub_1BBFDE0F8(v56, v57, v246);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v58 = objc_msgSend(v51, p_align[323]);
    v59 = v231;
    sub_1BC08904C();

    sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v60 = v51;
    v61 = v228;
    v62 = sub_1BC08AB64();
    v64 = v63;
    (*(void (**)(SEL *, uint64_t))(v8 + 8))(v59, v61);
    v245 = sub_1BBFDE0F8(v62, v64, v246);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 2082;
    v65 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v245 = sub_1BBFDE0F8(v65, v66, v246);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 32) = 2050;
    if (v235)
    {
      swift_bridgeObjectRetain();
      v67 = sub_1BC08AA80();
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = *(_QWORD *)((v244 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v68 = v237;
    v69 = (char *)v243;
    swift_bridgeObjectRelease();
    v245 = v67;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v52, (os_log_type_t)v234, "[%s]_%s: Picking elements for a new %{public}s feed from %{public}ld Core Data elements", (uint8_t *)v55, 0x2Au);
    v70 = v227;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v70, -1, -1);
    MEMORY[0x1BCCE9C40](v55, -1, -1);

    v238(v242, v68);
    v8 = v239;
    p_align = (SEL *)(&stru_1E74A5FE8 + 24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v68 = v237;
    v238(v49, v237);
    v69 = (char *)v243;
  }
  if (v69)
    goto LABEL_95;
  v71 = *(_QWORD *)(((unint64_t)v241 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v71)
    {
      v246[0] = MEMORY[0x1E0DEE9D8];
      sub_1BBFE449C(0, v71 & ~(v71 >> 63), 0);
      if (v71 < 0)
      {
        __break(1u);
        goto LABEL_99;
      }
      v72 = 0;
      v73 = v246[0];
      v74 = v241;
      v75 = (unint64_t)v241 & 0xC000000000000001;
      do
      {
        if (v75)
          v76 = (id)MEMORY[0x1BCCE934C](v72);
        else
          v76 = *(id *)&v74[8 * v72 + 32];
        v77 = v76;
        v78 = objc_msgSend(v76, p_align[323], (_QWORD)v217, *((_QWORD *)&v217 + 1));
        v79 = sub_1BC08A3C0();
        v81 = v80;

        v246[0] = v73;
        v83 = *(_QWORD *)(v73 + 16);
        v82 = *(_QWORD *)(v73 + 24);
        if (v83 >= v82 >> 1)
        {
          sub_1BBFE449C(v82 > 1, v83 + 1, 1);
          v73 = v246[0];
        }
        ++v72;
        *(_QWORD *)(v73 + 16) = v83 + 1;
        v84 = v73 + 16 * v83;
        *(_QWORD *)(v84 + 32) = v79;
        *(_QWORD *)(v84 + 40) = v81;
        v74 = v241;
        v8 = v239;
      }
      while (v71 != v72);
      v68 = v237;
    }
    v85 = v240;
    sub_1BC089D9C();
    v86 = v236;
    swift_bridgeObjectRetain();
    v87 = sub_1BC089DD8();
    v88 = sub_1BC08A678();
    v89 = v88;
    v90 = os_log_type_enabled(v87, v88);
    v236 = v86;
    if (v90)
    {
      v91 = swift_slowAlloc();
      LODWORD(v242) = v89;
      v92 = v91;
      v238 = (void (*)(char *, uint64_t))swift_slowAlloc();
      v246[0] = (uint64_t)v238;
      *(_DWORD *)v92 = 136315906;
      v93 = sub_1BC08AC9C();
      v245 = sub_1BBFDE0F8(v93, v94, v246);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2080;
      v95 = objc_msgSend(v86, p_align[323]);
      p_align = v231;
      sub_1BC08904C();

      sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v96 = v228;
      v97 = sub_1BC08AB64();
      v98 = v8;
      v100 = v99;
      v101 = v96;
      v68 = v237;
      (*(void (**)(SEL *, uint64_t))(v98 + 8))(p_align, v101);
      v245 = sub_1BBFDE0F8(v97, v100, v246);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 22) = 2082;
      v102 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v245 = sub_1BBFDE0F8(v102, v103, v246);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 32) = 2080;
      v104 = swift_bridgeObjectRetain();
      v105 = MEMORY[0x1BCCE8EA8](v104, MEMORY[0x1E0DEA968]);
      v107 = v106;
      swift_bridgeObjectRelease();
      v245 = sub_1BBFDE0F8(v105, v107, v246);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v87, (os_log_type_t)v242, "[%s]_%s: Picking feed of kind %{public}s from these ranked identifiers (the rest were dropped): %s", (uint8_t *)v92, 0x2Au);
      v108 = v238;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v108, -1, -1);
      MEMORY[0x1BCCE9C40](v92, -1, -1);

      v238 = *(void (**)(char *, uint64_t))(v218 + 8);
      v238((char *)v240, v68);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v238((char *)v85, v68);
    }
    v8 = v244;
    v69 = v233;
    if (v243)
      break;
    v109 = *(NSObject **)(((unint64_t)v241 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v109)
      goto LABEL_70;
LABEL_30:
    v234 = v109;
    if (!v235)
    {
      v243 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_32;
    }
LABEL_99:
    swift_bridgeObjectRetain();
    v243 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
LABEL_32:
    v111 = 0;
    v235 = (char *)((unint64_t)v241 & 0xC000000000000001);
    v224 = (unint64_t)v241 & 0xFFFFFFFFFFFFFF8;
    v223 = v241 + 32;
    v242 = (char *)(v8 & 0xC000000000000001);
    v225 = v246;
    *(_QWORD *)&v110 = 136315650;
    v222 = v110;
    v221 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v110 = 136315906;
    v217 = v110;
    while (1)
    {
      if (v235)
      {
        v112 = (SEL *)MEMORY[0x1BCCE934C](v111, v241);
      }
      else
      {
        if ((unint64_t)v111 >= *(_QWORD *)(v224 + 16))
          goto LABEL_94;
        v112 = (SEL *)*(id *)&v223[8 * (_QWORD)v111];
      }
      p_align = v112;
      if (__OFADD__(v111, 1))
        break;
      v240 = ((char *)&v111->isa + 1);
      if (v243)
      {
        swift_bridgeObjectRetain();
        v68 = 4;
        while (1)
        {
          v69 = (char *)(v68 - 4);
          v113 = v242 ? (id)MEMORY[0x1BCCE934C](v68 - 4, v8) : *(id *)(v8 + 8 * v68);
          v114 = v113;
          v8 = v68 - 3;
          if (__OFADD__(v69, 1))
            break;
          v115 = objc_msgSend(v113, sel_uniqueIdentifier);
          v116 = sub_1BC08A3C0();
          v118 = v117;

          v119 = -[SEL identifier](p_align, sel_identifier);
          v120 = sub_1BC08A3C0();
          v122 = v121;

          v123 = v116 == v120 && v118 == v122;
          if (v123)
          {
            v8 = v244;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_58;
          }
          v124 = sub_1BC08AB94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v124 & 1) != 0)
          {
            v8 = v244;
LABEL_58:
            swift_bridgeObjectRelease();
            objc_msgSend(v114, sel_setSortOrder_, v111);
            v143 = sub_1BC089ACC();
            v144 = v239;
            v145 = v226;
            v146 = v230;
            v147 = v236;
            if (((1 << v143) & 0x17) != 0)
            {
              v148 = sub_1BC05249C();
              if (!v148)
              {
                sub_1BC089D9C();
                v149 = v147;
                v150 = v114;
                v151 = v149;
                v152 = v150;
                v153 = sub_1BC089DD8();
                v154 = sub_1BC08A678();
                v155 = v154;
                if (os_log_type_enabled(v153, v154))
                {
                  v156 = swift_slowAlloc();
                  v227 = swift_slowAlloc();
                  v246[0] = v227;
                  *(_DWORD *)v156 = v222;
                  LODWORD(v220) = v155;
                  v157 = sub_1BC08AC9C();
                  v245 = sub_1BBFDE0F8(v157, v158, v246);
                  sub_1BC08A7EC();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v156 + 12) = 2080;
                  v219 = v156 + 14;
                  v159 = objc_msgSend(v151, sel_identifier);
                  v160 = v231;
                  sub_1BC08904C();

                  sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
                  v161 = v144;
                  v162 = v228;
                  v163 = sub_1BC08AB64();
                  v165 = v164;
                  v166 = v160;
                  v8 = v244;
                  (*(void (**)(SEL *, uint64_t))(v161 + 8))(v166, v162);
                  v245 = sub_1BBFDE0F8(v163, v165, v246);
                  sub_1BC08A7EC();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v156 + 22) = 2080;
                  v167 = objc_msgSend(v152, sel_uniqueIdentifier);
                  v168 = sub_1BC08A3C0();
                  v170 = v169;

                  v245 = sub_1BBFDE0F8(v168, v170, v246);
                  sub_1BC08A7EC();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1BBFD7000, v153, (os_log_type_t)v220, "[%s]_%s: Section not found for feedItem %s", (uint8_t *)v156, 0x20u);
                  v171 = v227;
                  swift_arrayDestroy();
                  MEMORY[0x1BCCE9C40](v171, -1, -1);
                  MEMORY[0x1BCCE9C40](v156, -1, -1);

                  v172 = v226;
                }
                else
                {

                  v172 = v145;
                }
                v68 = v237;
                v238(v172, v237);
                objc_msgSend(v152, sel_setFeedSection_, 0);
                sub_1BC089C4C();
                objc_msgSend(v152, sel_setSectionSortOrder_, sub_1BC089BBC());
LABEL_69:

                v69 = v233;
                goto LABEL_34;
              }
            }
            else
            {
              sub_1BC089ACC();
              v148 = sub_1BC053F6C();
            }
            v173 = (void *)v148;
            sub_1BC089D9C();
            v174 = v147;
            v175 = v173;
            v176 = v114;
            v177 = v174;
            v178 = v175;
            v152 = v176;
            v179 = sub_1BC089DD8();
            v180 = sub_1BC08A678();
            v181 = v180;
            if (os_log_type_enabled(v179, v180))
            {
              v182 = swift_slowAlloc();
              LODWORD(v227) = v181;
              v183 = v182;
              v238 = (void (*)(char *, uint64_t))swift_slowAlloc();
              v246[0] = (uint64_t)v238;
              *(_DWORD *)v183 = v217;
              v220 = v179;
              v184 = sub_1BC08AC9C();
              v245 = sub_1BBFDE0F8(v184, v185, v246);
              sub_1BC08A7EC();
              swift_bridgeObjectRelease();
              *(_WORD *)(v183 + 12) = 2080;
              v219 = v183 + 14;
              v186 = objc_msgSend(v177, sel_identifier);
              v187 = v231;
              sub_1BC08904C();

              sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
              v188 = v144;
              v189 = v228;
              v190 = sub_1BC08AB64();
              v192 = v191;
              v193 = v187;
              v8 = v244;
              (*(void (**)(SEL *, uint64_t))(v188 + 8))(v193, v189);
              v245 = sub_1BBFDE0F8(v190, v192, v246);
              sub_1BC08A7EC();

              swift_bridgeObjectRelease();
              *(_WORD *)(v183 + 22) = 2080;
              v194 = objc_msgSend(v178, sel_identifier);
              v195 = sub_1BC08A3C0();
              v197 = v196;

              v245 = sub_1BBFDE0F8(v195, v197, v246);
              sub_1BC08A7EC();

              swift_bridgeObjectRelease();
              *(_WORD *)(v183 + 32) = 2080;
              v198 = objc_msgSend(v152, sel_uniqueIdentifier);
              v199 = sub_1BC08A3C0();
              v201 = v200;

              v245 = sub_1BBFDE0F8(v199, v201, v246);
              sub_1BC08A7EC();

              swift_bridgeObjectRelease();
              v202 = v220;
              _os_log_impl(&dword_1BBFD7000, v220, (os_log_type_t)v227, "[%s]_%s: Section %s found for feedItem %s", (uint8_t *)v183, 0x2Au);
              v203 = v238;
              swift_arrayDestroy();
              MEMORY[0x1BCCE9C40](v203, -1, -1);
              MEMORY[0x1BCCE9C40](v183, -1, -1);

              v68 = v237;
              v238 = *(void (**)(char *, uint64_t))(v218 + 8);
              v238(v230, v237);
            }
            else
            {

              v68 = v237;
              v238(v146, v237);
            }
            objc_msgSend(v178, sel_addFeedItemsObject_, v152);

            goto LABEL_69;
          }

          ++v68;
          v123 = v8 == v243;
          v8 = v244;
          if (v123)
          {
            swift_bridgeObjectRelease();
            v68 = v237;
            v69 = v233;
            goto LABEL_54;
          }
        }
        __break(1u);
LABEL_90:
        __break(1u);
        break;
      }
LABEL_54:
      sub_1BC089D9C();
      v125 = v236;
      v126 = p_align;
      v127 = v125;
      v128 = v126;
      v129 = v69;
      v130 = sub_1BC089DD8();
      v131 = sub_1BC08A678();
      if (os_log_type_enabled(v130, v131))
      {
        v132 = swift_slowAlloc();
        v133 = (_QWORD *)swift_slowAlloc();
        v227 = swift_slowAlloc();
        v246[0] = v227;
        *(_DWORD *)v132 = v222;
        v134 = sub_1BC08AC9C();
        *(_QWORD *)(v132 + 4) = sub_1BBFDE0F8(v134, v135, v246);
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 12) = 2080;
        v136 = objc_msgSend(v127, sel_identifier);
        p_align = v231;
        sub_1BC08904C();

        sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v137 = v228;
        v138 = sub_1BC08AB64();
        v140 = v139;
        v141 = v137;
        v8 = v244;
        (*(void (**)(SEL *, uint64_t))(v239 + 8))(p_align, v141);
        *(_QWORD *)(v132 + 14) = sub_1BBFDE0F8(v138, v140, v246);

        v68 = v237;
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 22) = 2112;
        *(_QWORD *)(v132 + 24) = v128;
        *v133 = v128;

        _os_log_impl(&dword_1BBFD7000, v130, v131, "[%s]_%s: Item %@ was returned by the RelevanceEngine but is now deleted", (uint8_t *)v132, 0x20u);
        sub_1BBFDECF0();
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v133, -1, -1);
        v142 = v227;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v142, -1, -1);
        MEMORY[0x1BCCE9C40](v132, -1, -1);

        v69 = v233;
        v238(v233, v68);
      }
      else
      {

        v238(v129, v68);
        v69 = v129;
      }
LABEL_34:
      v111 = v240;
      if (v240 == v234)
        goto LABEL_70;
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    swift_bridgeObjectRetain();
    v71 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v109 = sub_1BC08AA80();
  if (v109)
    goto LABEL_30;
LABEL_70:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v204 = objc_msgSend(v232, sel_sections);
  sub_1BC0892BC();
  v205 = sub_1BC08A60C();

  v243 = v205;
  if (v205 >> 62)
  {
    swift_bridgeObjectRetain();
    v206 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v206)
      goto LABEL_97;
LABEL_72:
    sub_1BC089C4C();
    v207 = 0;
    v244 = v243 & 0xC000000000000001;
    v241 = (char *)(v243 + 32);
    v242 = (char *)(v243 & 0xFFFFFFFFFFFFFF8);
    v208 = v206;
    while (1)
    {
      if (v244)
      {
        v209 = (SEL *)MEMORY[0x1BCCE934C](v207, v243);
      }
      else
      {
        if (v207 >= *((_QWORD *)v242 + 2))
          goto LABEL_93;
        v209 = (SEL *)*(id *)&v241[8 * v207];
      }
      p_align = v209;
      if (__OFADD__(v207++, 1))
        goto LABEL_90;
      v211 = -[SEL feedItems](v209, sel_feedItems);
      v212 = sub_1BC08A60C();

      if (v212 >> 62)
      {
        swift_bridgeObjectRetain();
        v213 = sub_1BC08AA80();
        swift_bridgeObjectRelease();
        if (!v213)
          goto LABEL_73;
      }
      else
      {
        v213 = *(_QWORD *)((v212 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v213)
          goto LABEL_73;
      }
      if (v213 < 1)
        goto LABEL_92;
      v68 = 0;
      v8 = v212 & 0xC000000000000001;
      do
      {
        if (v8)
          v214 = (id)MEMORY[0x1BCCE934C](v68, v212);
        else
          v214 = *(id *)(v212 + 8 * v68 + 32);
        v215 = v214;
        objc_msgSend(v214, sel_setSectionSortOrder_, v68, (_QWORD)v217);

        v69 = (char *)++v68;
      }
      while (v213 != v68);
LABEL_73:

      swift_bridgeObjectRelease();
      if (v207 == v208)
        goto LABEL_97;
    }
  }
  v206 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v206)
    goto LABEL_72;
LABEL_97:

  return swift_bridgeObjectRelease();
}

void ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ProfileDashboardFeedPopulationManager.init(healthExperienceStore:healthStore:relevanceEngineCoordinator:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BBFEE230()
{
  uint64_t v0;

  return sub_1BBFEF208(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0]);
}

uint64_t ProfileDashboardFeedPopulationManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  sub_1BBFEF208(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0]);
  return v0;
}

uint64_t ProfileDashboardFeedPopulationManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  sub_1BBFEF208(v0+ OBJC_IVAR____TtC18HealthPlatformCore37ProfileDashboardFeedPopulationManager____lazy_storage___pertinentChangeDomain, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0]);
  return swift_deallocClassInstance();
}

uint64_t sub_1BBFEE334()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_1BBFEE340()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t *sub_1BBFEE34C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(_QWORD, _QWORD);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD v58[2];
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (**v72)(_QWORD, _QWORD);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[2];
  __int128 v78[2];
  _QWORD v79[5];

  v76 = a1;
  v62 = *a4;
  v8 = sub_1BC089DE4();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)v58 - v11;
  sub_1BBFEEE04();
  v66 = v12;
  v67 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v64 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFEEF74();
  v69 = v14;
  v70 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v65 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFEEFEC();
  v17 = *(void (***)(_QWORD, _QWORD))(v16 - 8);
  v71 = v16;
  v72 = v17;
  MEMORY[0x1E0C80A78](v16);
  v68 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1BC08A6FC();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC08A6CC();
  MEMORY[0x1E0C80A78](v21);
  v22 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v22);
  v79[3] = type metadata accessor for ProfileDashboardRelevanceEngineCoordinator();
  v79[4] = &off_1E74A1140;
  v79[0] = a3;
  sub_1BBFEEEB8();
  swift_allocObject();
  a4[14] = sub_1BC089FDC();
  a4[15] = 0;
  sub_1BBFE1C58(a1, (uint64_t)(a4 + 2));
  a4[7] = (uint64_t)a2;
  v58[1] = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v23 = a2;
  v59 = v23;
  *(_QWORD *)&v78[0] = sub_1BC08AC9C();
  *((_QWORD *)&v78[0] + 1) = v24;
  sub_1BC08A420();
  v25 = objc_msgSend(v23, sel_profileIdentifier);
  v26 = objc_msgSend(v25, sel_description);
  sub_1BC08A3C0();

  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A288();
  *(_QWORD *)&v78[0] = MEMORY[0x1E0DEE9D8];
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BBFDA9C0(&qword_1ED69DCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BBFDB42C(0, &qword_1ED69DCB8, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BBFEF1A8();
  sub_1BC08A834();
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v20, *MEMORY[0x1E0DEF8D0], v61);
  a4[13] = sub_1BC08A714();
  sub_1BBFE1C58((uint64_t)v79, (uint64_t)(a4 + 8));
  v28 = (void *)a4[13];
  *(_QWORD *)&v78[0] = a4[14];
  *(_QWORD *)&v77[0] = v28;
  v29 = sub_1BC08A6D8();
  v30 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v63, 1, 1, v29);
  sub_1BBFDA9C0(&qword_1ED69A9F8, (uint64_t (*)(uint64_t))sub_1BBFEEEB8, MEMORY[0x1E0C95F48]);
  sub_1BBFEEF1C();
  swift_retain();
  v31 = v28;
  v32 = v64;
  sub_1BC08A204();
  sub_1BBFEF208(v30, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  v33 = swift_allocObject();
  v34 = v59;
  v35 = v62;
  *(_QWORD *)(v33 + 16) = v59;
  *(_QWORD *)(v33 + 24) = v35;
  sub_1BBFDA9C0(&qword_1ED69A910, (uint64_t (*)(uint64_t))sub_1BBFEEE04, MEMORY[0x1E0C95CB8]);
  v36 = v34;
  v37 = v65;
  v38 = v66;
  sub_1BC08A168();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v38);
  v39 = swift_allocObject();
  swift_weakInit();
  sub_1BBFE1C58(v76, (uint64_t)v78);
  sub_1BBFE1C58((uint64_t)v79, (uint64_t)v77);
  v40 = (_QWORD *)swift_allocObject();
  sub_1BBFE95C8(v78, (uint64_t)(v40 + 2));
  sub_1BBFE95C8(v77, (uint64_t)(v40 + 7));
  v40[12] = v39;
  v40[13] = v36;
  v40[14] = v35;
  sub_1BBFEF0B4();
  sub_1BBFDA9C0(&qword_1ED69A6F0, (uint64_t (*)(uint64_t))sub_1BBFEEF74, MEMORY[0x1E0D2A5B0]);
  sub_1BBFDA9C0(&qword_1ED69ACF8, (uint64_t (*)(uint64_t))sub_1BBFEF0B4, MEMORY[0x1E0D2A5C0]);
  v41 = v36;
  v42 = v68;
  v43 = v69;
  sub_1BC08A264();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v43);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = v35;
  sub_1BBFDA9C0(&qword_1ED69AD20, (uint64_t (*)(uint64_t))sub_1BBFEEFEC, MEMORY[0x1E0C95B78]);
  v45 = v41;
  v46 = v71;
  v47 = sub_1BC08A24C();
  swift_release();
  ((void (**)(char *, uint64_t))v72)[1](v42, v46);
  a4[15] = v47;
  swift_release();
  v48 = v73;
  sub_1BC089D9C();
  swift_retain_n();
  v49 = v48;
  v50 = sub_1BC089DD8();
  v51 = sub_1BC08A678();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    v72 = (void (**)(_QWORD, _QWORD))v45;
    v54 = v53;
    *(_QWORD *)&v78[0] = v53;
    *(_DWORD *)v52 = 136446210;
    *(_QWORD *)&v77[0] = a4;
    type metadata accessor for BaseFeedPopulationManager();
    swift_retain();
    v55 = sub_1BC08A3E4();
    *(_QWORD *)&v77[0] = sub_1BBFDE0F8(v55, v56, (uint64_t *)v78);
    sub_1BC08A7EC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v50, v51, "Ready: %{public}s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v54, -1, -1);
    MEMORY[0x1BCCE9C40](v52, -1, -1);

  }
  else
  {
    swift_release_n();

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  __swift_destroy_boxed_opaque_existential_1(v76);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v75);
  return a4;
}

uint64_t sub_1BBFEEC4C()
{
  return type metadata accessor for ProfileDashboardFeedPopulationManager();
}

uint64_t type metadata accessor for ProfileDashboardFeedPopulationManager()
{
  uint64_t result;

  result = qword_1ED69AB18;
  if (!qword_1ED69AB18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BBFEEC90()
{
  unint64_t v0;

  sub_1BBFDB42C(319, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ProfileDashboardFeedPopulationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.__allocating_init(healthExperienceStore:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.managedFeedKinds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.managedLiveFeedKinds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ProfileDashboardFeedPopulationManager.isChangeDomainPertinentForLiveUpdate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_1BBFEED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BBFEEDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BBFEEE04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A918)
  {
    sub_1BBFEEEB8();
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
    sub_1BBFDA9C0(&qword_1ED69A9F8, (uint64_t (*)(uint64_t))sub_1BBFEEEB8, MEMORY[0x1E0C95F48]);
    sub_1BBFEEF1C();
    v0 = sub_1BC089F64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A918);
  }
}

void sub_1BBFEEEB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AA00)
  {
    v0 = sub_1BC089FE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AA00);
  }
}

unint64_t sub_1BBFEEF1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69D8A8;
  if (!qword_1ED69D8A8)
  {
    v1 = sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69D8A8);
  }
  return result;
}

void sub_1BBFEEF74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A6F8)
  {
    sub_1BBFEEE04();
    sub_1BBFDA9C0(&qword_1ED69A910, (uint64_t (*)(uint64_t))sub_1BBFEEE04, MEMORY[0x1E0C95CB8]);
    v0 = sub_1BC089E74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A6F8);
  }
}

void sub_1BBFEEFEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AD28)
  {
    sub_1BBFEF0B4();
    sub_1BBFEEF74();
    sub_1BBFDA9C0(&qword_1ED69ACF8, (uint64_t (*)(uint64_t))sub_1BBFEF0B4, MEMORY[0x1E0D2A5C0]);
    sub_1BBFDA9C0(&qword_1ED69A6F0, (uint64_t (*)(uint64_t))sub_1BBFEEF74, MEMORY[0x1E0D2A5B0]);
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AD28);
  }
}

void sub_1BBFEF0B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AD00)
  {
    sub_1BBFEF12C();
    sub_1BBFDA9C0(&qword_1ED69AD68, (uint64_t (*)(uint64_t))sub_1BBFEF12C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089E80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AD00);
  }
}

void sub_1BBFEF12C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AD70)
  {
    sub_1BBFDA924(255, (unint64_t *)&qword_1ED69AB30, MEMORY[0x1E0D2E570], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AD70);
  }
}

unint64_t sub_1BBFEF1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DCC0;
  if (!qword_1ED69DCC0)
  {
    sub_1BBFDB42C(255, &qword_1ED69DCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DCC0);
  }
  return result;
}

uint64_t sub_1BBFEF208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BBFDB42C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BBFEF24C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BBFEF270@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1BC082D78(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1BBFEF278()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BBFEF29C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BBFEF2D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC0832DC(a1, (_QWORD *)(v2 + 16), v2 + 56, *(_QWORD *)(v2 + 96), *(void **)(v2 + 104), *(void **)(v2 + 112), a2);
}

uint64_t sub_1BBFEF2EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC084AA4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t static ModelTrainingScenario.make(from:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t result;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a1;
  v1 = type metadata accessor for ModelTrainingElement(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModelTrainingCommand(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC088E24();
  swift_allocObject();
  v9 = sub_1BC088E18();
  sub_1BBFEF7A4();
  v10 = v46;
  sub_1BC088E0C();
  if (v10)
    return swift_release();
  v37[1] = 0;
  v38 = v2;
  v46 = v1;
  v40 = v44;
  v41 = v45;
  v11 = *(_QWORD *)(v44 + 16);
  v39 = v9;
  if (v11)
  {
    v12 = v44 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v43 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BBFDB550(v12, (uint64_t)v8, type metadata accessor for ModelTrainingCommand);
      v16 = *((_QWORD *)v8 + 1);
      v15 = *((_QWORD *)v8 + 2);
      swift_bridgeObjectRetain();
      sub_1BBFE1BD4((uint64_t)v8, type metadata accessor for ModelTrainingCommand);
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1BBFDD3F8(0, v13[2] + 1, 1, v13);
        v18 = v13[2];
        v17 = v13[3];
        if (v18 >= v17 >> 1)
          v13 = sub_1BBFDD3F8((_QWORD *)(v17 > 1), v18 + 1, 1, v13);
        v13[2] = v18 + 1;
        v14 = &v13[2 * v18];
        v14[4] = v16;
        v14[5] = v15;
      }
      v12 += v43;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v19 = v42;
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v19 = v42;
  }
  v20 = sub_1BBFFA42C((uint64_t)v13);
  swift_bridgeObjectRelease();
  v21 = v41;
  v22 = *(_QWORD *)(v41 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  v24 = v38;
  if (v22)
  {
    v37[0] = v20;
    v44 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BBFE449C(0, v22, 0);
    v25 = v21 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v43 = *(_QWORD *)(v24 + 72);
    v23 = v44;
    do
    {
      sub_1BBFDB550(v25, (uint64_t)v4, type metadata accessor for ModelTrainingElement);
      v26 = &v4[*(int *)(v46 + 56)];
      v27 = *(_QWORD *)v26;
      v28 = *((_QWORD *)v26 + 1);
      swift_bridgeObjectRetain();
      sub_1BBFE1BD4((uint64_t)v4, type metadata accessor for ModelTrainingElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE449C(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v44;
      }
      v30 = *(_QWORD *)(v23 + 16);
      v29 = *(_QWORD *)(v23 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BBFE449C(v29 > 1, v30 + 1, 1);
        v23 = v44;
      }
      *(_QWORD *)(v23 + 16) = v30 + 1;
      v31 = v23 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v28;
      v25 += v43;
      --v22;
    }
    while (v22);
    v21 = v41;
    swift_bridgeObjectRelease();
    v19 = v42;
    v20 = v37[0];
  }
  v32 = sub_1BBFFA42C(v23);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v32 + 16) <= *(_QWORD *)(v20 + 16) >> 3)
  {
    v44 = v20;
    sub_1BBFF3F88(v32);
    swift_bridgeObjectRelease();
    v33 = v44;
    if (*(_QWORD *)(v44 + 16))
      goto LABEL_23;
  }
  else
  {
    v33 = sub_1BBFF467C(v32, v20);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v33 + 16))
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = sub_1BBFF2544(v33);
      swift_bridgeObjectRelease();
      sub_1BBFFA4C0();
      swift_allocError();
      *(_QWORD *)v35 = v34;
      *(_QWORD *)(v35 + 8) = 0;
      *(_BYTE *)(v35 + 16) = 1;
      swift_willThrow();
      return swift_release();
    }
  }
  swift_release();
  result = swift_bridgeObjectRelease();
  *v19 = v40;
  v19[1] = v21;
  return result;
}

uint64_t type metadata accessor for ModelTrainingElement(uint64_t a1)
{
  return sub_1BBFEF770(a1, qword_1EF3EDF50);
}

uint64_t type metadata accessor for ModelTrainingCommand(uint64_t a1)
{
  return sub_1BBFEF770(a1, qword_1EF3EDEB8);
}

uint64_t sub_1BBFEF770(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BBFEF7A4()
{
  unint64_t result;

  result = qword_1EF3EDDB8;
  if (!qword_1EF3EDDB8)
  {
    result = MEMORY[0x1BCCE9B68]("=BA+,j", &type metadata for ModelTrainingScenario);
    atomic_store(result, (unint64_t *)&qword_1EF3EDDB8);
  }
  return result;
}

void sub_1BBFEF7E8(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19[2];

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    sub_1BC08A8A0();
  sub_1BBFDF744(0, &qword_1ED69DBB0);
  sub_1BBFFD9C0((unint64_t *)&qword_1ED69C950, &qword_1ED69DBB0);
  v19[1] = (id)sub_1BC08A564();
  if (v2)
  {
    v3 = sub_1BC08AA2C();
    v18 = 0;
    v4 = 0;
    v5 = 0;
    v1 = v3 | 0x8000000000000000;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(v1 + 32);
    v18 = v1 + 64;
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(v1 + 64);
  }
  v9 = 0;
  v10 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!sub_1BC08AA5C())
      goto LABEL_34;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v19[0];
    swift_unknownObjectRelease();
    if (!v14)
      goto LABEL_34;
    v11 = v5;
    v13 = v9;
LABEL_12:
    sub_1BBFF3874(v19, v14);

    v9 = v13;
    v5 = v11;
  }
  if (v5)
  {
    v11 = (v5 - 1) & v5;
    v12 = __clz(__rbit64(v5)) | (v9 << 6);
    v13 = v9;
LABEL_11:
    v14 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_34;
    goto LABEL_12;
  }
  v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v15 >= v10)
      goto LABEL_34;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    v13 = v9 + 1;
    if (!v16)
    {
      v13 = v9 + 2;
      if (v9 + 2 >= v10)
        goto LABEL_34;
      v16 = *(_QWORD *)(v18 + 8 * v13);
      if (!v16)
      {
        v13 = v9 + 3;
        if (v9 + 3 >= v10)
          goto LABEL_34;
        v16 = *(_QWORD *)(v18 + 8 * v13);
        if (!v16)
        {
          v13 = v9 + 4;
          if (v9 + 4 >= v10)
            goto LABEL_34;
          v16 = *(_QWORD *)(v18 + 8 * v13);
          if (!v16)
          {
            v13 = v9 + 5;
            if (v9 + 5 >= v10)
              goto LABEL_34;
            v16 = *(_QWORD *)(v18 + 8 * v13);
            if (!v16)
            {
              v17 = v9 + 6;
              while (v10 != v17)
              {
                v16 = *(_QWORD *)(v18 + 8 * v17++);
                if (v16)
                {
                  v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1BBFE2D28();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

BOOL sub_1BBFEFA98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BBFEFAB0()
{
  sub_1BC08ABF4();
  sub_1BC08AC00();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFEFAF4()
{
  return sub_1BC08AC00();
}

uint64_t sub_1BBFEFB1C()
{
  sub_1BC08ABF4();
  sub_1BC08AC00();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFEFB5C()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 0x73646E616D6D6F63;
}

uint64_t sub_1BBFEFB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BBFFD77C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BBFEFBB4()
{
  return 0;
}

void sub_1BBFEFBC0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BBFEFBCC()
{
  sub_1BBFFA504();
  return sub_1BC08AC84();
}

uint64_t sub_1BBFEFBF4()
{
  sub_1BBFFA504();
  return sub_1BC08AC90();
}

uint64_t ModelTrainingScenario.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  char v15;
  uint64_t v16;

  v14 = a2;
  sub_1BBFFDB9C(0, &qword_1EF3EDDC8, (uint64_t (*)(void))sub_1BBFFA504, (uint64_t)&type metadata for ModelTrainingScenario.CodingKeys, MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BBFFA504();
  sub_1BC08AC6C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v14;
  sub_1BBFDB42C(0, &qword_1EF3EDDD8, type metadata accessor for ModelTrainingCommand, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v15 = 0;
  sub_1BBFFA548();
  sub_1BC08AB28();
  v11 = v16;
  sub_1BBFDB42C(0, &qword_1EF3EDDF0, type metadata accessor for ModelTrainingElement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v15 = 1;
  sub_1BBFFA5D8();
  swift_bridgeObjectRetain();
  sub_1BC08AB28();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v12 = v16;
  *v10 = v11;
  v10[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BBFEFE4C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ModelTrainingScenario.init(from:)(a1, a2);
}

unint64_t sub_1BBFEFE60(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v5;

  if ((a3 & 1) != 0)
  {
    v5 = 0;
    sub_1BC08A954();
    sub_1BC08A420();
    MEMORY[0x1BCCE8EA8](a1, MEMORY[0x1E0DEA968]);
    sub_1BC08A420();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC08A954();
    swift_bridgeObjectRelease();
    v5 = 0xD000000000000025;
    sub_1BC08A420();
  }
  return v5;
}

unint64_t sub_1BBFEFF50()
{
  uint64_t v0;

  return sub_1BBFEFE60(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

HealthPlatformCore::ModelTrainingCommand::Kind_optional __swiftcall ModelTrainingCommand.Kind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HealthPlatformCore::ModelTrainingCommand::Kind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC08AAE0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ModelTrainingCommand.Kind.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x657461645F746573;
  else
    return 7364980;
}

uint64_t sub_1BBFEFFF0()
{
  sub_1BC08ABF4();
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFF0068()
{
  sub_1BC08A408();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BBFF00BC()
{
  sub_1BC08ABF4();
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  return sub_1BC08AC18();
}

HealthPlatformCore::ModelTrainingCommand::Kind_optional sub_1BBFF0130(Swift::String *a1)
{
  return ModelTrainingCommand.Kind.init(rawValue:)(*a1);
}

void sub_1BBFF013C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7364980;
  if (*v1)
    v2 = 0x657461645F746573;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BBFF0174()
{
  sub_1BBFFDAC4();
  return sub_1BC08A4A4();
}

uint64_t sub_1BBFF01D0()
{
  sub_1BBFFDAC4();
  return sub_1BC08A498();
}

uint64_t sub_1BBFF021C(char *a1, char *a2)
{
  return sub_1BC00C680(*a1, *a2);
}

void ModelTrainingCommand.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ModelTrainingCommand.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ModelTrainingCommand.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModelTrainingCommand(0);
  return sub_1BBFFA6F0(v1 + *(int *)(v3 + 24), a1, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

BOOL sub_1BBFF02A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BBFF02BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 25705;
  if (*v0 != 1)
    v1 = 1702125924;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_1BBFF02FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BBFFD85C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BBFF0320(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BBFF032C()
{
  sub_1BBFFA668();
  return sub_1BC08AC84();
}

uint64_t sub_1BBFF0354()
{
  sub_1BBFFA668();
  return sub_1BC08AC90();
}

uint64_t ModelTrainingCommand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v18 - v4;
  sub_1BBFFDB9C(0, &qword_1EF3EDE08, (uint64_t (*)(void))sub_1BBFFA668, (uint64_t)&type metadata for ModelTrainingCommand.CodingKeys, MEMORY[0x1E0DED048]);
  v22 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for ModelTrainingCommand(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BBFFA668();
  v21 = v8;
  v12 = v23;
  sub_1BC08AC6C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = (uint64_t)v20;
  v26 = 0;
  sub_1BBFFA6AC();
  v14 = v21;
  v15 = v22;
  sub_1BC08AB28();
  *v11 = v27;
  v25 = 1;
  *((_QWORD *)v11 + 1) = sub_1BC08AAEC();
  *((_QWORD *)v11 + 2) = v16;
  sub_1BC089028();
  v24 = 2;
  sub_1BBFDA9C0(&qword_1ED69BA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1BC08AB04();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v15);
  sub_1BBFFA7E8(v13, (uint64_t)&v11[*(int *)(v9 + 24)], (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BBFDB550((uint64_t)v11, v19, type metadata accessor for ModelTrainingCommand);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BBFE1BD4((uint64_t)v11, type metadata accessor for ModelTrainingCommand);
}

uint64_t sub_1BBFF064C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelTrainingCommand.init(from:)(a1, a2);
}

uint64_t ModelTrainingElement.associatedHKTypesRaw.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModelTrainingElement.contentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 20);
  v4 = sub_1BC0892A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ModelTrainingElement.completeness.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 24));
}

uint64_t ModelTrainingElement.dataVisualizationKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1BBFFA6F0(v1 + *(int *)(v3 + 28), a1, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
}

uint64_t ModelTrainingElement.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1BBFFA6F0(v1 + *(int *)(v3 + 32), a1, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068]);
}

uint64_t ModelTrainingElement.dateSubmitted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 36);
  v4 = sub_1BC089028();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ModelTrainingElement.keywords.getter()
{
  type metadata accessor for ModelTrainingElement(0);
  return swift_bridgeObjectRetain();
}

uint64_t ModelTrainingElement.magnitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 44));
}

uint64_t ModelTrainingElement.prominence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1BBFFA6F0(v1 + *(int *)(v3 + 48), a1, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38]);
}

uint64_t ModelTrainingElement.timeScope.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ModelTrainingElement(0);
  return sub_1BBFFA6F0(v1 + *(int *)(v3 + 52), a1, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50]);
}

uint64_t ModelTrainingElement.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ModelTrainingElement(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BBFF08B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BBFF08F0 + 4 * byte_1BC08BF20[a1]))(0xD000000000000014, 0x80000001BC08E4A0);
}

uint64_t sub_1BBFF08F0()
{
  return 0x4B746E65746E6F63;
}

uint64_t sub_1BBFF0910()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1BBFF0930(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_1BBFF09D0()
{
  return 0x6E656E696D6F7270;
}

uint64_t sub_1BBFF09EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BBFF0A24 + 4 * byte_1BC08BF2B[a1]))(0xD000000000000014, 0x80000001BC08E4A0);
}

uint64_t sub_1BBFF0A24()
{
  return 0x4B746E65746E6F63;
}

uint64_t sub_1BBFF0A44()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1BBFF0A64(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_1BBFF0B04()
{
  return 0x6E656E696D6F7270;
}

uint64_t sub_1BBFF0B20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BBFF08B8(*a1);
  v5 = v4;
  if (v3 == sub_1BBFF08B8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BBFF0BA8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BC08ABF4();
  sub_1BBFF08B8(v1);
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFF0C08()
{
  unsigned __int8 *v0;

  sub_1BBFF08B8(*v0);
  sub_1BC08A408();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BBFF0C48()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BC08ABF4();
  sub_1BBFF08B8(v1);
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  return sub_1BC08AC18();
}

uint64_t sub_1BBFF0CA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BBFFD978();
  *a1 = result;
  return result;
}

uint64_t sub_1BBFF0CD0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BBFF08B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BBFF0CF8()
{
  unsigned __int8 *v0;

  return sub_1BBFF09EC(*v0);
}

uint64_t sub_1BBFF0D00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BBFFD978();
  *a1 = result;
  return result;
}

void sub_1BBFF0D24(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1BBFF0D30()
{
  sub_1BBFFA748();
  return sub_1BC08AC84();
}

uint64_t sub_1BBFF0D58()
{
  sub_1BBFFA748();
  return sub_1BC08AC90();
}

uint64_t static ModelTrainingElement.make(from:)()
{
  sub_1BC088E24();
  swift_allocObject();
  sub_1BC088E18();
  type metadata accessor for ModelTrainingElement(0);
  sub_1BBFDA9C0(&qword_1EF3EDE00, type metadata accessor for ModelTrainingElement, (uint64_t)&protocol conformance descriptor for ModelTrainingElement);
  sub_1BC088E0C();
  return swift_release();
}

uint64_t ModelTrainingElement.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int *v62;
  char *v63;
  char v64;
  uint64_t v65;

  v50 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v51 = (uint64_t)&v47 - v5;
  sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], v3);
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v47 - v7;
  v59 = sub_1BC089028();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], v3);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], v3);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_1BC0892A4();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFFDB9C(0, &qword_1EF3EDE20, (uint64_t (*)(void))sub_1BBFFA748, (uint64_t)&type metadata for ModelTrainingElement.CodingKeys, MEMORY[0x1E0DED048]);
  v54 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v47 - v20;
  v62 = (int *)type metadata accessor for ModelTrainingElement(0);
  MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1BBFFA748();
  v55 = v21;
  v24 = v60;
  sub_1BC08AC6C();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  v48 = v11;
  v49 = v14;
  v25 = (uint64_t)v53;
  v60 = v19;
  v26 = MEMORY[0x1E0DEB418];
  sub_1BBFDA924(0, &qword_1EF3EDE30, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v64 = 0;
  sub_1BBFFA78C(&qword_1EF3EDE38, &qword_1EF3EDE30, v26, MEMORY[0x1E0DEB448]);
  sub_1BC08AB04();
  v27 = v63;
  *(_QWORD *)v63 = v65;
  LOBYTE(v65) = 1;
  sub_1BBFDA9C0(&qword_1EF3EDE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5D8]);
  v28 = v58;
  sub_1BC08AB28();
  v29 = v62;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v27[v62[5]], v17, v28);
  LOBYTE(v65) = 2;
  v30 = sub_1BC08AAF8();
  v31 = &v27[v29[6]];
  *(_QWORD *)v31 = v30;
  v31[8] = v32 & 1;
  sub_1BC089880();
  LOBYTE(v65) = 3;
  sub_1BBFDA9C0(&qword_1ED69BB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], MEMORY[0x1E0D2E1A0]);
  v33 = (uint64_t)v49;
  sub_1BC08AB04();
  sub_1BBFFA7E8(v33, (uint64_t)&v27[v29[7]], &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
  sub_1BC089838();
  LOBYTE(v65) = 4;
  sub_1BBFDA9C0(&qword_1EF3EDE48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], MEMORY[0x1E0D2E088]);
  v34 = (uint64_t)v48;
  sub_1BC08AB04();
  sub_1BBFFA7E8(v34, (uint64_t)&v27[v29[8]], (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068]);
  LOBYTE(v65) = 5;
  sub_1BBFDA9C0(&qword_1ED69BA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v35 = v52;
  v36 = v59;
  sub_1BC08AB28();
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v27[v29[9]], v35, v36);
  v37 = MEMORY[0x1E0DEA968];
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v64 = 6;
  sub_1BBFFA78C(&qword_1EF3EDE50, (unint64_t *)&qword_1ED69DCA8, v37, MEMORY[0x1E0DEA9A0]);
  sub_1BC08AB04();
  *(_QWORD *)&v27[v29[10]] = v65;
  LOBYTE(v65) = 7;
  v38 = sub_1BC08AAF8();
  v39 = &v27[v29[11]];
  *(_QWORD *)v39 = v38;
  v39[8] = v40 & 1;
  sub_1BC0896A0();
  LOBYTE(v65) = 8;
  sub_1BBFDA9C0(&qword_1ED69BAF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], MEMORY[0x1E0D2DE50]);
  sub_1BC08AB04();
  sub_1BBFFA7E8(v25, (uint64_t)&v27[v29[12]], &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38]);
  sub_1BC0895D4();
  LOBYTE(v65) = 9;
  sub_1BBFDA9C0(&qword_1ED69BAD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], MEMORY[0x1E0D2DB68]);
  sub_1BC08AB04();
  sub_1BBFFA7E8(v51, (uint64_t)&v63[v62[13]], &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50]);
  LOBYTE(v65) = 10;
  v41 = sub_1BC08AB10();
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v54);
  v44 = (uint64_t)v63;
  v45 = (uint64_t *)&v63[v62[14]];
  *v45 = v41;
  v45[1] = v43;
  sub_1BBFDB550(v44, v50, type metadata accessor for ModelTrainingElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  return sub_1BBFE1BD4(v44, type metadata accessor for ModelTrainingElement);
}

uint64_t sub_1BBFF1864@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ModelTrainingElement.init(from:)(a1, a2);
}

id FeedItem.init(context:modelTrainingElement:)(int *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int *v42;
  uint64_t v43;
  int *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t i;
  int *v58;
  double *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  double *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  _QWORD *v124;
  unint64_t v125;

  v123 = a1;
  v3 = sub_1BC089754();
  v110 = *(_QWORD *)(v3 - 8);
  v111 = v3;
  MEMORY[0x1E0C80A78](v3);
  v109 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v113 = (uint64_t)&v91 - v7;
  v8 = sub_1BC0895D4();
  v121 = *(_QWORD *)(v8 - 8);
  v122 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v107 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v108 = (char *)&v91 - v11;
  v12 = sub_1BC0897E4();
  v105 = *(_QWORD *)(v12 - 8);
  v106 = v12;
  MEMORY[0x1E0C80A78](v12);
  v104 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], v5);
  MEMORY[0x1E0C80A78](v14);
  v118 = (char *)&v91 - v15;
  v16 = sub_1BC0896A0();
  v119 = *(_QWORD *)(v16 - 8);
  v120 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v102 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v103 = (char *)&v91 - v19;
  v96 = sub_1BC089940();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1BC089A0C();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], v5);
  MEMORY[0x1E0C80A78](v22);
  v115 = (uint64_t)&v91 - v23;
  v24 = sub_1BC089880();
  v116 = *(_QWORD *)(v24 - 8);
  v117 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v97 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v98 = (char *)&v91 - v27;
  v93 = sub_1BC0899B8();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], v5);
  MEMORY[0x1E0C80A78](v29);
  v114 = (uint64_t)&v91 - v30;
  v31 = sub_1BC0892A4();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], v5);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v91 - v36;
  v38 = sub_1BC089028();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v91 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = (int *)type metadata accessor for ModelTrainingElement(0);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v41, &a2[v42[9]], v38);
  v43 = sub_1BC088E84();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v37, 1, 1, v43);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, &a2[v42[5]], v31);
  v44 = v123;
  swift_bridgeObjectRetain();
  v112 = v44;
  v45 = (void *)sub_1BC089C34();
  v123 = v42;
  sub_1BBFFA6F0((uint64_t)&a2[v42[8]], v114, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068]);
  v46 = v45;
  sub_1BC089C10();
  v124 = a2;
  v47 = *(_QWORD *)a2;
  if (*(_QWORD *)a2)
  {
    v48 = *(_QWORD *)(v47 + 16);
    v49 = MEMORY[0x1E0DEE9D8];
    if (v48)
    {
      swift_bridgeObjectRetain();
      v50 = 0;
      v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v52 = *(_QWORD *)(v47 + 8 * v50 + 32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v51 = sub_1BBFDD52C(0, v51[2] + 1, 1, v51);
        v54 = v51[2];
        v53 = v51[3];
        if (v54 >= v53 >> 1)
          v51 = sub_1BBFDD52C((_QWORD *)(v53 > 1), v54 + 1, 1, v51);
        ++v50;
        v51[2] = v54 + 1;
        v51[v54 + 4] = v52;
      }
      while (v48 != v50);
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v125 = v49;
    v55 = v51[2];
    if (v55)
    {
      v56 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      for (i = 0; i != v55; ++i)
      {
        if (objc_msgSend(v56, sel_dataTypeWithCode_, v51[i + 4]))
        {
          MEMORY[0x1BCCE8E84]();
          if (*(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC08A504();
          sub_1BC08A528();
          sub_1BC08A4E0();
        }
      }
      swift_bridgeObjectRelease();
      v49 = v125;
    }
    swift_bridgeObjectRelease();
    sub_1BBFFD600(v49, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898, (void (*)(id *, uint64_t))sub_1BBFF3190);
    swift_bridgeObjectRelease();
    sub_1BC089BD4();
  }
  v58 = v123;
  v59 = (double *)((char *)v124 + v123[6]);
  if (((_BYTE)v59[1] & 1) == 0 && *v59 >= 0.0)
  {
    v60 = v91;
    sub_1BC0899C4();
    v61 = v93;
    sub_1BC089BB0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v60, v61);
  }
  v62 = v115;
  sub_1BBFFA6F0((uint64_t)v124 + v58[7], v115, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
  v64 = v116;
  v63 = v117;
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v62, 1, v117);
  v67 = v121;
  v66 = v122;
  v69 = v119;
  v68 = v120;
  v70 = (uint64_t)v118;
  if (v65 == 1)
  {
    sub_1BBFEF208(v62, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
  }
  else
  {
    v71 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v98, v62, v63);
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v97, v71, v63);
    v72 = v99;
    sub_1BC089A18();
    v73 = v64;
    v74 = v101;
    sub_1BC089BB0();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v72, v74);
    v75 = *(void (**)(char *, uint64_t))(v73 + 8);
    v76 = v71;
    v68 = v120;
    v67 = v121;
    v66 = v122;
    v75(v76, v63);
  }
  if (*(_QWORD *)((char *)v124 + v58[10]))
  {
    v77 = swift_bridgeObjectRetain();
    sub_1BBFFA42C(v77);
    swift_bridgeObjectRelease();
    sub_1BC089BEC();
  }
  v78 = (double *)((char *)v124 + v58[11]);
  if (((_BYTE)v78[1] & 1) == 0 && *v78 >= 0.0)
  {
    v79 = v94;
    sub_1BC08994C();
    v80 = v96;
    sub_1BC089BB0();
    v81 = v79;
    v58 = v123;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v80);
  }
  sub_1BBFFA6F0((uint64_t)v124 + v58[12], v70, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v70, 1, v68) == 1)
  {
    sub_1BBFEF208(v70, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38]);
  }
  else
  {
    v82 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v103, v70, v68);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v102, v82, v68);
    v83 = v104;
    sub_1BC0897F0();
    v84 = v106;
    sub_1BC089BB0();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v83, v84);
    v85 = v82;
    v58 = v123;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v85, v68);
  }
  v86 = v113;
  sub_1BBFFA6F0((uint64_t)v124 + v58[13], v113, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v86, 1, v66) == 1)
  {

    sub_1BBFE1BD4((uint64_t)v124, type metadata accessor for ModelTrainingElement);
    sub_1BBFEF208(v86, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50]);
  }
  else
  {
    v87 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v108, v86, v66);
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v107, v87, v66);
    v88 = v109;
    sub_1BC089760();
    v89 = v111;
    sub_1BC089BB0();

    sub_1BBFE1BD4((uint64_t)v124, type metadata accessor for ModelTrainingElement);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v88, v89);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v87, v66);
  }
  return v46;
}

uint64_t sub_1BBFF245C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1BBFDA924(0, &qword_1ED69AE18, MEMORY[0x1E0D2E570], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_1BBFF9630(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BBFE2D28();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BBFF2544(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BBFDA924(0, &qword_1ED69DCF8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1BBFF97C4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BBFE2D28();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BBFF263C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1BBFF99C0(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BBFE2D28();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BBFF2734(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_1BC089C4C();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

_QWORD *sub_1BBFF28CC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1BC01E950((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BBFF29D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1BBFDB42C(0, &qword_1ED69A0B8, (uint64_t (*)(uint64_t))sub_1BBFFDB08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * (v5 >> 4);
  v6 = sub_1BBFF9DC8((uint64_t)&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BBFE2D28();
  if (v6 != v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BBFF2AD0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC08A8AC();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BBFDF744(0, &qword_1ED69D8D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC08A8A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BBFF4458(v7, result + 1, &qword_1ED69D900, &qword_1ED69D8D8, 0x1E0D84378, (unint64_t *)&qword_1ED69D8E0);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BBFF597C(v26, &qword_1ED69D900, &qword_1ED69D8D8, 0x1E0D84378, (unint64_t *)&qword_1ED69D8E0);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC0201C8(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC08A7B0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BBFDF744(0, &qword_1ED69D8D8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC08A7BC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC08A7BC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BBFF9330((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1ED69D900, &qword_1ED69D8D8, 0x1E0D84378, (unint64_t *)&qword_1ED69D8E0);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BBFF2DCC(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v25;

  v3 = v2;
  v6 = *v2;
  sub_1BC08ABF4();
  swift_bridgeObjectRetain();
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  v7 = sub_1BC08AC18();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v12 = v11;
    if (v10 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v15 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      result = 0;
      LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    v16 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v16;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v17 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v19 = v18;
      if (v17 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v19 == v20)
        goto LABEL_17;
      v22 = sub_1BC08AB94();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v3;
  *v3 = 0x8000000000000000;
  sub_1BBFF8BE8(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v25;
  swift_bridgeObjectRelease();
  result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1BBFF2FE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1BC08ABF4();
  swift_bridgeObjectRetain();
  sub_1BC08A408();
  v8 = sub_1BC08AC18();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BC08AB94() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BC08AB94() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BBFF8E0C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BBFF3190(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC08A8AC();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC08A8A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BBFF4458(v7, result + 1, (unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BBFF597C(v26, (unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC0201C8(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC08A7B0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC08A7BC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC08A7BC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BBFF9330((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BBFF348C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1BC0892A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1BBFDA9C0(&qword_1ED69BAB0, v11, MEMORY[0x1E0D2D5C0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1BC08A360();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1BBFDA9C0(&qword_1ED69BAB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C8]);
      v21 = sub_1BC08A3A8();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BBFF8FA4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1BBFF36E8(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  void *v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  id v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  sub_1BC08ABF4();
  swift_bridgeObjectRetain();
  sub_1BC0893B8();
  v7 = sub_1BC08AC18();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v9);
    v11 = sub_1BC0893AC();

    if ((v11 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();

      v15 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      v16 = v15;
      return 0;
    }
    v12 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v13 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v9);
      v14 = sub_1BC0893AC();

      if ((v14 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *v3;
  *v3 = 0x8000000000000000;
  v19 = a2;
  sub_1BBFF91A8((uint64_t)a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v20;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1BBFF3874(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC08A8AC();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BBFDF744(0, &qword_1ED69DBB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC08A8A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BBFF4458(v7, result + 1, (unint64_t *)&qword_1ED69C9B8, &qword_1ED69DBB0, 0x1E0CB6A10, (unint64_t *)&qword_1ED69C950);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BBFF597C(v26, (unint64_t *)&qword_1ED69C9B8, &qword_1ED69DBB0, 0x1E0CB6A10, (unint64_t *)&qword_1ED69C950);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC0201C8(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC08A7B0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BBFDF744(0, &qword_1ED69DBB0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC08A7BC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC08A7BC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BBFF9330((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (unint64_t *)&qword_1ED69C9B8, &qword_1ED69DBB0, 0x1E0CB6A10, (unint64_t *)&qword_1ED69C950);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BBFF3B70(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC08A8AC();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BBFDF744(0, &qword_1ED69C918);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC08A8A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BBFF4458(v7, result + 1, &qword_1EF3EDFF8, &qword_1ED69C918, 0x1E0CB6B00, &qword_1ED69C920);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BBFF597C(v26, &qword_1EF3EDFF8, &qword_1ED69C918, 0x1E0CB6B00, &qword_1ED69C920);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC0201C8(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC08A7B0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BBFDF744(0, &qword_1ED69C918);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC08A7BC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC08A7BC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BBFF9330((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_1EF3EDFF8, &qword_1ED69C918, 0x1E0CB6B00, &qword_1ED69C920);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BBFF3E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1BC08ABF4();
  sub_1BC08AC00();
  v6 = sub_1BC08AC18();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1BBFF94E4(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BBFF3F88(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BBFF5034(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1BBFF411C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1BC08A8A0())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1BC08A864();
      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
      sub_1BBFFD9C0(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890);
      sub_1BC08A588();
      a1 = v20;
      v18 = v21;
      v3 = v22;
      v4 = v23;
      v5 = v24;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v5)
      {
        v10 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v4 << 6);
        v12 = v4;
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9)
          goto LABEL_36;
        v15 = *(_QWORD *)(v18 + 8 * v14);
        v12 = v4 + 1;
        if (!v15)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v9)
            goto LABEL_36;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v9)
              goto LABEL_36;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v9)
                goto LABEL_36;
              v15 = *(_QWORD *)(v18 + 8 * v12);
              if (!v15)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v9)
                  goto LABEL_36;
                v15 = *(_QWORD *)(v18 + 8 * v12);
                if (!v15)
                {
                  v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    v15 = *(_QWORD *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1BBFE2D28();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_36;
      while (1)
      {
        v17 = (void *)sub_1BBFF51C0(v13);

        v4 = v12;
        v5 = v10;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_1BC08A8C4())
        {
          sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v13 = v19;
          swift_unknownObjectRelease();
          v12 = v4;
          v10 = v5;
          if (v19)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
}

uint64_t sub_1BBFF4410(uint64_t a1, uint64_t a2)
{
  return sub_1BBFF4458(a1, a2, (unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
}

uint64_t sub_1BBFF4434(uint64_t a1, uint64_t a2)
{
  return sub_1BBFF4458(a1, a2, (unint64_t *)&qword_1ED69C9B8, &qword_1ED69DBB0, 0x1E0CB6A10, (unint64_t *)&qword_1ED69C950);
}

uint64_t sub_1BBFF4458(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_1BBFFDC54(0, a3, a4, a5, a6);
    v10 = sub_1BC08A930();
    v23 = v10;
    sub_1BC08A864();
    if (sub_1BC08A8C4())
    {
      sub_1BBFDF744(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_1BBFF597C(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_1BC08A7B0();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_1BC08A8C4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v10;
}

uint64_t sub_1BBFF467C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1BBFE2D28();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1BC08ABF4();
      swift_bridgeObjectRetain();
      sub_1BC08A408();
      v19 = sub_1BC08AC18();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1BC08AB94() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1BC08AB94() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1BBFF6534((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1BBFE2D28();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1BBFF6534((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1BBFE2D28();
      MEMORY[0x1BCCE9C40](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BBFF4AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;

  v2 = a2;
  v51 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC08A864();
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
    sub_1BBFFD9C0(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890);
    sub_1BC08A588();
    v3 = v46;
    v4 = v47;
    v6 = v48;
    v5 = v49;
    v7 = v50;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v41 = v3;
  v42 = v4;
  v43 = v6;
  v44 = v5;
  v45 = v7;
  v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        v12 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v15 = v14;
        goto LABEL_15;
      }
      v25 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        v14 = 0;
        v12 = 0;
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        v12 = (v27 - 1) & v27;
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
        v5 = v25;
        goto LABEL_14;
      }
      v28 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_44;
      v27 = *(_QWORD *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        v27 = *(_QWORD *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          v25 = v5 + 3;
          goto LABEL_28;
        }
        v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          v14 = 0;
          v12 = 0;
          v5 += 3;
LABEL_15:
          v44 = v5;
          v45 = v12;
          if (!v14)
            goto LABEL_53;
          goto LABEL_19;
        }
        v27 = *(_QWORD *)(v42 + 8 * v28);
        if (v27)
          goto LABEL_32;
        v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          v27 = *(_QWORD *)(v42 + 8 * v25);
          if (v27)
            goto LABEL_28;
          v25 = v26 - 1;
          v29 = v5 + 6;
          while (v26 != v29)
          {
            v27 = *(_QWORD *)(v42 + 8 * v29++);
            if (v27)
            {
              v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v14 = 0;
          v12 = 0;
          v5 = v25;
          goto LABEL_15;
        }
      }
      v14 = 0;
      v12 = 0;
      v5 = v28;
      goto LABEL_15;
    }
    v16 = sub_1BC08A8C4();
    if (!v16
      || (v39 = v16,
          sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1BBFE2D28();
      return v2;
    }
LABEL_19:
    v17 = sub_1BC08A7B0();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_10;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
    v21 = sub_1BC08A7BC();

    if ((v21 & 1) != 0)
      break;
    v22 = ~v18;
    while (1)
    {
      v19 = (v19 + 1) & v22;
      if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        break;
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
      v24 = sub_1BC08A7BC();

      if ((v24 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v3 = v41;
    v6 = v43;
    v5 = v44;
    v7 = v45;
  }
LABEL_47:

  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1BBFF6828((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    v35 = v34;
    swift_release();
    sub_1BBFE2D28();
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1BBFF6828((unint64_t *)v36, v32, v2, v19, &v41);
    v35 = v37;
    swift_release();
    sub_1BBFE2D28();
    MEMORY[0x1BCCE9C40](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1BBFF5034(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1BC08ABF4();
  swift_bridgeObjectRetain();
  sub_1BC08A408();
  v6 = sub_1BC08AC18();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1BC08AB94() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1BC08AB94() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BBFF6F18();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1BBFF8884(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1BBFF51C0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1BC08A8D0();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1BBFF6BB4();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC08A7B0();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1BC08A7BC();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1BC08A7BC();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BBFF70C4((unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1BBFF8A48(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BBFF53B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDB9C(0, (unint64_t *)&qword_1ED69ADE8, (uint64_t (*)(void))sub_1BBFFDB58, MEMORY[0x1E0D2E570], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC08A924();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1BC08ABF4();
      _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      sub_1BC08A408();
      swift_bridgeObjectRelease();
      result = sub_1BC08AC18();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BBFF56A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDBF8();
  v3 = sub_1BC08A924();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1BC08ABF4();
      sub_1BC08A408();
      result = sub_1BC08AC18();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BBFF597C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_1BBFFDC54(0, a2, a3, a4, a5);
  v8 = sub_1BC08A924();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_1BC08A7B0();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_1BBFF5C14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1BC0892A4();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BBFFDA44(0, (unint64_t *)&qword_1ED69C9A8, v6, &qword_1ED69BAB0, MEMORY[0x1E0D2D5C0]);
  v7 = sub_1BC08A924();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v36 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v34 = v0;
    v35 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_33;
        v20 = v36[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_33;
          v20 = v36[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v35)
              goto LABEL_33;
            v20 = v36[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v35)
              {
LABEL_33:
                swift_release();
                v1 = v34;
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v36[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v35)
                    goto LABEL_33;
                  v20 = v36[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = v5;
      v23 = *(_QWORD *)(v5 + 48);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
      v25(v4, v23 + v24 * v18, v2);
      sub_1BBFDA9C0(&qword_1ED69BAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C0]);
      result = sub_1BC08A360();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(_QWORD *)(v8 + 48) + v16 * v24, v4, v2);
      ++*(_QWORD *)(v8 + 16);
      v5 = v22;
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BBFF5F9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDB9C(0, &qword_1ED69AAA0, (uint64_t (*)(void))sub_1BBFFDA00, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC08A924();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1BC08ABF4();
      sub_1BC0893B8();
      result = sub_1BC08AC18();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BBFF6270()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDA44(0, &qword_1ED69C9C0, (uint64_t (*)(uint64_t))type metadata accessor for HKDisplayCategoryIdentifier, &qword_1ED69C968, (uint64_t)"y?A+8m");
  result = sub_1BC08A924();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1BC08ABF4();
      sub_1BC08AC00();
      result = sub_1BC08AC18();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BBFF6534(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1BC076894(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1BC08ABF4();
        swift_bridgeObjectRetain();
        sub_1BC08A408();
        v22 = sub_1BC08AC18();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1BC08AB94() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1BC08AB94() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

void sub_1BBFF6828(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t i;
  unint64_t v23;
  id v24;
  char v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v36;
  void *v38;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v36 = a3 + 56;
  while (2)
  {
    v34 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          v9 = a5[3];
          v8 = a5[4];
          if (v8)
          {
            v10 = (v8 - 1) & v8;
            v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            v12 = *(void **)(*(_QWORD *)(*a5 + 48) + 8 * v11);
            v13 = v12;
            goto LABEL_8;
          }
          v26 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v27 = (unint64_t)(a5[2] + 64) >> 6;
          if (v26 >= v27)
          {
            v12 = 0;
            v10 = 0;
            goto LABEL_8;
          }
          v28 = a5[1];
          v29 = *(_QWORD *)(v28 + 8 * v26);
          if (v29)
          {
LABEL_22:
            v10 = (v29 - 1) & v29;
            v11 = __clz(__rbit64(v29)) + (v26 << 6);
            v9 = v26;
            goto LABEL_7;
          }
          v31 = v9 + 2;
          if (v9 + 2 >= v27)
            goto LABEL_41;
          v29 = *(_QWORD *)(v28 + 8 * v31);
          if (v29)
          {
LABEL_29:
            v26 = v31;
            goto LABEL_22;
          }
          if (v9 + 3 < v27)
          {
            v29 = *(_QWORD *)(v28 + 8 * (v9 + 3));
            if (v29)
            {
              v26 = v9 + 3;
              goto LABEL_22;
            }
            v31 = v9 + 4;
            if (v9 + 4 >= v27)
            {
              v12 = 0;
              v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12)
                goto LABEL_47;
              goto LABEL_12;
            }
            v29 = *(_QWORD *)(v28 + 8 * v31);
            if (v29)
              goto LABEL_29;
            v26 = v9 + 5;
            if (v9 + 5 < v27)
            {
              v29 = *(_QWORD *)(v28 + 8 * v26);
              if (v29)
                goto LABEL_22;
              v26 = v27 - 1;
              v32 = v9 + 6;
              while (v27 != v32)
              {
                v29 = *(_QWORD *)(v28 + 8 * v32++);
                if (v29)
                {
                  v26 = v32 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              v12 = 0;
              v10 = 0;
              v9 = v26;
              goto LABEL_8;
            }
          }
          v12 = 0;
          v10 = 0;
          v9 = v31;
          goto LABEL_8;
        }
        if (!sub_1BC08A8C4()
          || (sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v12 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_47:
          swift_retain();
          sub_1BC076E30(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        v14 = sub_1BC08A7B0();
        v15 = -1 << *(_BYTE *)(a3 + 32);
        v16 = v14 & ~v15;
        v17 = v16 >> 6;
        v18 = 1 << v16;
        if (((1 << v16) & *(_QWORD *)(v36 + 8 * (v16 >> 6))) == 0)
          goto LABEL_3;
        sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
        v19 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v16);
        v20 = sub_1BC08A7BC();

        if ((v20 & 1) != 0)
          break;
        v21 = ~v15;
        for (i = v16 + 1; ; i = v23 + 1)
        {
          v23 = i & v21;
          if (((*(_QWORD *)(v36 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0)
            break;
          v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v23);
          v25 = sub_1BC08A7BC();

          if ((v25 & 1) != 0)
          {

            v17 = v23 >> 6;
            v18 = 1 << v23;
            goto LABEL_25;
          }
        }
LABEL_3:

      }
LABEL_25:
      v30 = a1[v17];
      a1[v17] = v30 & ~v18;
    }
    while ((v18 & v30) == 0);
    v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v34 != 1)
      continue;
    break;
  }
}

uint64_t sub_1BBFF6BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1BC08A8A0();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1BBFF4458(v3, v2, (unint64_t *)&qword_1ED69C9B0, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, &qword_1ED69D898);
  v15 = v4;
  swift_retain();
  v5 = sub_1BC08A7B0();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1BC08A7BC();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1BBFF8A48(v7);
      if ((sub_1BC08A7BC() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1BC08A7BC();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

void *sub_1BBFF6D6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BBFFDB9C(0, (unint64_t *)&qword_1ED69ADE8, (uint64_t (*)(void))sub_1BBFFDB58, MEMORY[0x1E0D2E570], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = *v0;
  v3 = sub_1BC08A918();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BBFF6F18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BBFFDBF8();
  v2 = *v0;
  v3 = sub_1BC08A918();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BBFF70C4(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_1BBFFDC54(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC08A918();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BBFF7278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = sub_1BC0892A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFFDA44(0, (unint64_t *)&qword_1ED69C9A8, v6, &qword_1ED69BAB0, MEMORY[0x1E0D2D5C0]);
  v7 = *v0;
  v8 = sub_1BC08A918();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v7 + 48) + v21, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v21, v5, v2);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1BBFF74B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BBFFDB9C(0, &qword_1ED69AAA0, (uint64_t (*)(void))sub_1BBFFDA00, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = *v0;
  v3 = sub_1BC08A918();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BBFF767C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v1 = v0;
  sub_1BBFFDA44(0, &qword_1ED69C9C0, (uint64_t (*)(uint64_t))type metadata accessor for HKDisplayCategoryIdentifier, &qword_1ED69C968, (uint64_t)"y?A+8m");
  v2 = *v0;
  v3 = sub_1BC08A918();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v12)
      goto LABEL_25;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_25;
      v16 = *(_QWORD *)(v6 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_25;
        v16 = *(_QWORD *)(v6 + 8 * v8);
        if (!v16)
          break;
      }
    }
LABEL_24:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_9:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_25;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v16 = *(_QWORD *)(v6 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF7830()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDB9C(0, (unint64_t *)&qword_1ED69ADE8, (uint64_t (*)(void))sub_1BBFFDB58, MEMORY[0x1E0D2E570], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC08A924();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1BC08ABF4();
    _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    sub_1BC08A408();
    swift_bridgeObjectRelease();
    result = sub_1BC08AC18();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF7AEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDBF8();
  v3 = sub_1BC08A924();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1BC08ABF4();
    swift_bridgeObjectRetain();
    sub_1BC08A408();
    result = sub_1BC08AC18();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF7D94(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_1BBFFDC54(0, a2, a3, a4, a5);
  v8 = sub_1BC08A924();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_1BC08A7B0();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF8008()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = sub_1BC0892A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1BBFFDA44(0, (unint64_t *)&qword_1ED69C9A8, v7, &qword_1ED69BAB0, MEMORY[0x1E0D2D5C0]);
  v8 = sub_1BC08A924();
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v11 = *(_QWORD *)(v6 + 56);
  v32 = v0;
  v33 = v6 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v34)
        goto LABEL_33;
      v21 = *(_QWORD *)(v33 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v34)
          goto LABEL_33;
        v21 = *(_QWORD *)(v33 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_23:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    v23 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v23 * v19, v2);
    sub_1BBFDA9C0(&qword_1ED69BAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C0]);
    result = sub_1BC08A360();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v17 * v23, v5, v2);
    ++*(_QWORD *)(v9 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(v33 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v34)
      goto LABEL_33;
    v21 = *(_QWORD *)(v33 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF834C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDB9C(0, &qword_1ED69AAA0, (uint64_t (*)(void))sub_1BBFFDA00, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC08A924();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1BC08ABF4();
    v20 = v19;
    sub_1BC0893B8();
    result = sub_1BC08AC18();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF85F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BBFFDA44(0, &qword_1ED69C9C0, (uint64_t (*)(uint64_t))type metadata accessor for HKDisplayCategoryIdentifier, &qword_1ED69C968, (uint64_t)"y?A+8m");
  result = sub_1BC08A924();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1BC08ABF4();
    sub_1BC08AC00();
    result = sub_1BC08AC18();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1BBFF8884(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC08A840();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1BC08ABF4();
        swift_bridgeObjectRetain();
        sub_1BC08A408();
        v10 = sub_1BC08AC18();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1BBFF8A48(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC08A840();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1BC08A7B0();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1BBFF8BE8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1BBFF53B4();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1BBFF6D6C();
LABEL_22:
      v24 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_BYTE *)(*(_QWORD *)(v24 + 48) + a2) = v6;
      v25 = *(_QWORD *)(v24 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (!v26)
      {
        *(_QWORD *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1BBFF7830();
  }
  v9 = *v3;
  sub_1BC08ABF4();
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  result = sub_1BC08AC18();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v11 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  v13 = v12;
  if (v11 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v16 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v18 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v20 = v19;
      if (v18 == _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0() && v20 == v21)
        goto LABEL_25;
      v23 = sub_1BC08AB94();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  result = sub_1BC08ABAC();
  __break(1u);
  return result;
}

uint64_t sub_1BBFF8E0C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1BBFF56A4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1BBFF6F18();
      goto LABEL_22;
    }
    sub_1BBFF7AEC();
  }
  v11 = *v4;
  sub_1BC08ABF4();
  sub_1BC08A408();
  result = sub_1BC08AC18();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1BC08AB94(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1BC08ABAC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1BC08AB94();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1BBFF8FA4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1BC0892A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1BBFF5C14();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BBFF7278();
      goto LABEL_12;
    }
    sub_1BBFF8008();
  }
  v12 = *v3;
  sub_1BBFDA9C0(&qword_1ED69BAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C0]);
  v13 = sub_1BC08A360();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1BBFDA9C0(&qword_1ED69BAB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C8]);
      v18 = sub_1BC08A3A8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC08ABAC();
  __break(1u);
  return result;
}

void sub_1BBFF91A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BBFF5F9C();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1BBFF74B8();
      goto LABEL_14;
    }
    sub_1BBFF834C();
  }
  v9 = *v3;
  sub_1BC08ABF4();
  sub_1BC0893B8();
  v10 = sub_1BC08AC18();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1BC0893AC();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1BC08ABAC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1BC0893AC();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1BBFF9330(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BBFF597C(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1BBFF70C4(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1BBFF7D94(v13, a4, a5, a6, a7);
  }
  v14 = *v7;
  v15 = sub_1BC08A7B0();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BBFDF744(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_1BC08A7BC();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_1BC08ABAC();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_1BC08A7BC();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

uint64_t sub_1BBFF94E4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BBFF6270();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BBFF767C();
      goto LABEL_14;
    }
    sub_1BBFF85F0();
  }
  v8 = *v3;
  sub_1BC08ABF4();
  sub_1BC08AC00();
  result = sub_1BC08AC18();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for HKDisplayCategoryIdentifier(0);
      result = sub_1BC08ABAC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

_QWORD *sub_1BBFF9630(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF97C4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BBFF99C0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1BBFF9BB8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      v23 = v22;
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    result = v22;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1BBFF9DC8(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_OWORD *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_unknownObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

BOOL _s18HealthPlatformCore20ModelTrainingCommandV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _BOOL8 result;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v34)(uint64_t);
  _BYTE *v35;
  _BYTE *v36;
  uint64_t (*v37)(uint64_t);
  _BYTE *v38;
  uint64_t (*v39)(uint64_t);
  void (*v40)(_BYTE *, uint64_t);
  _BYTE v41[4];
  int v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;

  v4 = sub_1BC089028();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v43 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BBFFDCDC();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v44 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = &v41[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v41[-v17];
  if (*(_BYTE *)a1)
    v19 = 0x657461645F746573;
  else
    v19 = 7364980;
  if (*(_BYTE *)a1)
    v20 = 0xE800000000000000;
  else
    v20 = 0xE300000000000000;
  if (*(_BYTE *)a2)
    v21 = 0x657461645F746573;
  else
    v21 = 7364980;
  if (*(_BYTE *)a2)
    v22 = 0xE800000000000000;
  else
    v22 = 0xE300000000000000;
  if (v19 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v23 & 1) == 0)
      return result;
  }
  v25 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a2 + 16);
  if (!v25)
  {
    if (v26)
      return 0;
    goto LABEL_24;
  }
  if (!v26)
    return 0;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v25 == v26 || (v27 = sub_1BC08AB94(), result = 0, (v27 & 1) != 0))
  {
LABEL_24:
    v28 = type metadata accessor for ModelTrainingCommand(0);
    v29 = a1 + *(int *)(v28 + 24);
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BBFFA6F0(v29, (uint64_t)v18, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BBFFA6F0(a2 + *(int *)(v28 + 24), (uint64_t)v16, (unint64_t *)&qword_1ED69DBF8, v30);
    v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BBFFA6F0((uint64_t)v18, (uint64_t)v10, (unint64_t *)&qword_1ED69DBF8, v30);
    sub_1BBFFA6F0((uint64_t)v16, v31, (unint64_t *)&qword_1ED69DBF8, v30);
    v32 = v45;
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v33((uint64_t)v10, 1, v4) == 1)
    {
      v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
      sub_1BBFEF208((uint64_t)v16, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      sub_1BBFEF208((uint64_t)v18, (unint64_t *)&qword_1ED69DBF8, v34);
      if (v33(v31, 1, v4) == 1)
      {
        sub_1BBFEF208((uint64_t)v10, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        return 1;
      }
      goto LABEL_29;
    }
    v35 = v44;
    sub_1BBFFA6F0((uint64_t)v10, (uint64_t)v44, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v33(v31, 1, v4) == 1)
    {
      v36 = v35;
      v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
      sub_1BBFEF208((uint64_t)v16, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      sub_1BBFEF208((uint64_t)v18, (unint64_t *)&qword_1ED69DBF8, v37);
      (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v36, v4);
LABEL_29:
      sub_1BBFE1BD4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BBFFDCDC);
      return 0;
    }
    v38 = v43;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v32 + 32))(v43, v31, v4);
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BBFDA9C0(&qword_1EF3EE010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
    v42 = sub_1BC08A3A8();
    v40 = *(void (**)(_BYTE *, uint64_t))(v32 + 8);
    v40(v38, v4);
    sub_1BBFEF208((uint64_t)v16, (unint64_t *)&qword_1ED69DBF8, v39);
    sub_1BBFEF208((uint64_t)v18, (unint64_t *)&qword_1ED69DBF8, v39);
    v40(v35, v4);
    sub_1BBFEF208((uint64_t)v10, (unint64_t *)&qword_1ED69DBF8, v39);
    return (v42 & 1) != 0;
  }
  return result;
}

uint64_t sub_1BBFFA42C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1BC08A564();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BBFF2FE4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1BBFFA4C0()
{
  unint64_t result;

  result = qword_1EF3EDDC0;
  if (!qword_1EF3EDDC0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C5D4, &type metadata for ModelTrainingScenarioError);
    atomic_store(result, (unint64_t *)&qword_1EF3EDDC0);
  }
  return result;
}

unint64_t sub_1BBFFA504()
{
  unint64_t result;

  result = qword_1EF3EDDD0;
  if (!qword_1EF3EDDD0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C584, &type metadata for ModelTrainingScenario.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDDD0);
  }
  return result;
}

unint64_t sub_1BBFFA548()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF3EDDE0;
  if (!qword_1EF3EDDE0)
  {
    sub_1BBFDB42C(255, &qword_1EF3EDDD8, type metadata accessor for ModelTrainingCommand, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BBFDA9C0(&qword_1EF3EDDE8, type metadata accessor for ModelTrainingCommand, (uint64_t)"%AA+0i");
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF3EDDE0);
  }
  return result;
}

unint64_t sub_1BBFFA5D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF3EDDF8;
  if (!qword_1EF3EDDF8)
  {
    sub_1BBFDB42C(255, &qword_1EF3EDDF0, type metadata accessor for ModelTrainingElement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BBFDA9C0(&qword_1EF3EDE00, type metadata accessor for ModelTrainingElement, (uint64_t)&protocol conformance descriptor for ModelTrainingElement);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF3EDDF8);
  }
  return result;
}

unint64_t sub_1BBFFA668()
{
  unint64_t result;

  result = qword_1EF3EDE10;
  if (!qword_1EF3EDE10)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C534, &type metadata for ModelTrainingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDE10);
  }
  return result;
}

unint64_t sub_1BBFFA6AC()
{
  unint64_t result;

  result = qword_1EF3EDE18;
  if (!qword_1EF3EDE18)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for ModelTrainingCommand.Kind, &type metadata for ModelTrainingCommand.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF3EDE18);
  }
  return result;
}

uint64_t sub_1BBFFA6F0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BBFDB42C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BBFFA748()
{
  unint64_t result;

  result = qword_1EF3EDE28;
  if (!qword_1EF3EDE28)
  {
    result = MEMORY[0x1BCCE9B68]("E=A+$e", &type metadata for ModelTrainingElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDE28);
  }
  return result;
}

uint64_t sub_1BBFFA78C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BBFDA924(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = a4;
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF40], v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BBFFA7E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BBFDB42C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BBFFA844()
{
  unint64_t result;

  result = qword_1EF3EDE58;
  if (!qword_1EF3EDE58)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for ModelTrainingCommand.Kind, &type metadata for ModelTrainingCommand.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF3EDE58);
  }
  return result;
}

uint64_t destroy for ModelTrainingScenario()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18HealthPlatformCore21ModelTrainingScenarioVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ModelTrainingScenario(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ModelTrainingScenario(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ModelTrainingScenario()
{
  return &type metadata for ModelTrainingScenario;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelTrainingCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BC089028();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for ModelTrainingCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BC089028();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_1BC089028();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BC089028();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BC089028();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ModelTrainingCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BC089028();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingCommand()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BBFFAF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ModelTrainingCommand()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BBFFB010(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1BBFFB09C()
{
  unint64_t v0;

  sub_1BBFDB42C(319, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BBFFB138(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BBFFB140(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingCommand.Kind()
{
  return &type metadata for ModelTrainingCommand.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelTrainingElement(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC0892A4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = (char *)v7 + v14;
    v18 = (char *)a2 + v14;
    v19 = sub_1BC089880();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = a3[8];
    v23 = (char *)v7 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1BC089838();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = a3[9];
    v29 = (char *)v7 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_1BC089028();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    *(uint64_t *)((char *)v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v33 = (char *)v7 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = a3[12];
    v36 = (char *)v7 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_1BC0896A0();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    if (v40(v37, 1, v38))
    {
      sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v42 = a3[13];
    v43 = (char *)v7 + v42;
    v44 = (char *)a2 + v42;
    v45 = sub_1BC0895D4();
    v46 = *(_QWORD *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = a3[14];
    v49 = (uint64_t *)((char *)v7 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModelTrainingElement(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BC0892A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = sub_1BC089880();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[8];
  v10 = sub_1BC089838();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + a2[9];
  v13 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  v14 = a1 + a2[12];
  v15 = sub_1BC0896A0();
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v17 = a1 + a2[13];
  v18 = sub_1BC0895D4();
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ModelTrainingElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC0892A4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  v17 = sub_1BC089880();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1BC089838();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1BC089028();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v30 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = a3[12];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_1BC0896A0();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v40 = a3[13];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_1BC0895D4();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = a3[14];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ModelTrainingElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC0892A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[8];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v13;
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1BC089880();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1BC089838();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
LABEL_12:
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_13:
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_1BC089028();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  v40 = a3[12];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_1BC0896A0();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
LABEL_18:
    sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
LABEL_19:
  v49 = a3[13];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_1BC0895D4();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_24;
  }
  if (v56)
  {
LABEL_24:
    sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_25:
  v58 = a3[14];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for ModelTrainingElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC0892A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  v16 = sub_1BC089880();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1BC089838();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1BC089028();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  v29 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  v32 = a3[12];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_1BC0896A0();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[13];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_1BC0895D4();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  return a1;
}

_QWORD *assignWithTake for ModelTrainingElement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC0892A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = (char *)a1 + v11;
  v15 = (char *)a2 + v11;
  v16 = sub_1BC089880();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1BC089838();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_13:
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1BC089028();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  v35 = a3[11];
  v36 = a3[12];
  v37 = (char *)a1 + v35;
  v38 = (char *)a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  v39 = (char *)a1 + v36;
  v40 = (char *)a2 + v36;
  v41 = sub_1BC0896A0();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_18:
    sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
LABEL_19:
  v47 = a3[13];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = sub_1BC0895D4();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_24;
  }
  if (v54)
  {
LABEL_24:
    sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_25:
  v56 = a3[14];
  v57 = (_QWORD *)((char *)a1 + v56);
  v58 = (_QWORD *)((char *)a2 + v56);
  v60 = *v58;
  v59 = v58[1];
  *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingElement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BBFFC678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1BC0892A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = sub_1BC089028();
  v7 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v12;
    v9 = a3[9];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v13;
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v9 = a3[13];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v16 = *(_QWORD *)(a1 + a3[14] + 8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingElement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BBFFC81C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_1BC0892A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
LABEL_13:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
    return;
  }
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[7];
    goto LABEL_13;
  }
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v13;
    v11 = a4[8];
    goto LABEL_13;
  }
  v14 = sub_1BC089028();
  v9 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v14;
    v11 = a4[9];
    goto LABEL_13;
  }
  sub_1BBFDB42C(0, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v15;
    v11 = a4[12];
    goto LABEL_13;
  }
  sub_1BBFDB42C(0, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v16;
    v11 = a4[13];
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + a4[14] + 8) = (a2 - 1);
}

void sub_1BBFFC9B0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1BC0892A4();
  if (v0 <= 0x3F)
  {
    sub_1BBFDB42C(319, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1BBFDB42C(319, (unint64_t *)&qword_1ED69BB18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
      {
        sub_1BC089028();
        if (v3 <= 0x3F)
        {
          sub_1BBFDB42C(319, &qword_1ED69BB00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          if (v4 <= 0x3F)
          {
            sub_1BBFDB42C(319, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for ModelTrainingElement.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingElement.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BBFFCC08 + 4 * byte_1BC08BF3B[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BBFFCC3C + 4 * byte_1BC08BF36[v4]))();
}

uint64_t sub_1BBFFCC3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCC44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BBFFCC4CLL);
  return result;
}

uint64_t sub_1BBFFCC58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BBFFCC60);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BBFFCC64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCC6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingElement.CodingKeys()
{
  return &type metadata for ModelTrainingElement.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ModelTrainingCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BBFFCD64 + 4 * byte_1BC08BF45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BBFFCD98 + 4 * byte_1BC08BF40[v4]))();
}

uint64_t sub_1BBFFCD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BBFFCDA8);
  return result;
}

uint64_t sub_1BBFFCDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BBFFCDBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BBFFCDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BBFFCDD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingCommand.CodingKeys()
{
  return &type metadata for ModelTrainingCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ModelTrainingEvent.EventKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s18HealthPlatformCore20ModelTrainingCommandV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BBFFCEC8 + 4 * byte_1BC08BF4F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BBFFCEFC + 4 * byte_1BC08BF4A[v4]))();
}

uint64_t sub_1BBFFCEFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCF04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BBFFCF0CLL);
  return result;
}

uint64_t sub_1BBFFCF18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BBFFCF20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BBFFCF24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BBFFCF2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingScenario.CodingKeys()
{
  return &type metadata for ModelTrainingScenario.CodingKeys;
}

uint64_t sub_1BBFFCF4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ModelTrainingScenarioError()
{
  return sub_1BBFFCF68();
}

uint64_t sub_1BBFFCF68()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18HealthPlatformCore26ModelTrainingScenarioErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BBFFCF4C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelTrainingScenarioError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1BBFFCF4C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BBFFCF68();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ModelTrainingScenarioError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BBFFCF68();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelTrainingScenarioError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelTrainingScenarioError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BBFFD0F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1BBFFD0FC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ModelTrainingScenarioError()
{
  return &type metadata for ModelTrainingScenarioError;
}

unint64_t sub_1BBFFD11C()
{
  unint64_t result;

  result = qword_1EF3EDFB0;
  if (!qword_1EF3EDFB0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C314, &type metadata for ModelTrainingScenario.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFB0);
  }
  return result;
}

unint64_t sub_1BBFFD164()
{
  unint64_t result;

  result = qword_1EF3EDFB8;
  if (!qword_1EF3EDFB8)
  {
    atomic_store(result, (unint64_t *)&qword_1EF3EDFB8);
  }
  return result;
}

unint64_t sub_1BBFFD1AC()
{
  unint64_t result;

  result = qword_1EF3EDFC0;
  if (!qword_1EF3EDFC0)
  {
    result = MEMORY[0x1BCCE9B68]("==A+Le", &type metadata for ModelTrainingElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFC0);
  }
  return result;
}

unint64_t sub_1BBFFD1F4()
{
  unint64_t result;

  result = qword_1EF3EDFC8;
  if (!qword_1EF3EDFC8)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C3F4, &type metadata for ModelTrainingElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFC8);
  }
  return result;
}

unint64_t sub_1BBFFD23C()
{
  unint64_t result;

  result = qword_1EF3EDFD0;
  if (!qword_1EF3EDFD0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C41C, &type metadata for ModelTrainingElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFD0);
  }
  return result;
}

unint64_t sub_1BBFFD284()
{
  unint64_t result;

  result = qword_1EF3EDFD8;
  if (!qword_1EF3EDFD8)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C33C, &type metadata for ModelTrainingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFD8);
  }
  return result;
}

unint64_t sub_1BBFFD2CC()
{
  unint64_t result;

  result = qword_1EF3EDFE0;
  if (!qword_1EF3EDFE0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C364, &type metadata for ModelTrainingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFE0);
  }
  return result;
}

unint64_t sub_1BBFFD314()
{
  unint64_t result;

  result = qword_1EF3EDFE8;
  if (!qword_1EF3EDFE8)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C284, &type metadata for ModelTrainingScenario.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFE8);
  }
  return result;
}

unint64_t sub_1BBFFD35C()
{
  unint64_t result;

  result = qword_1EF3EDFF0;
  if (!qword_1EF3EDFF0)
  {
    result = MEMORY[0x1BCCE9B68](&unk_1BC08C2AC, &type metadata for ModelTrainingScenario.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF3EDFF0);
  }
  return result;
}

uint64_t sub_1BBFFD3A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BBFFDB58();
  result = sub_1BC08A564();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1BBFF2DCC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BBFFD410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1BC0892A4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1BBFDA9C0(&qword_1ED69BAB0, v10, MEMORY[0x1E0D2D5C0]);
  result = sub_1BC08A564();
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_1BBFF348C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_1BBFFD538(unint64_t a1)
{
  return sub_1BBFFD600(a1, &qword_1ED69DBB0, 0x1E0CB6A10, (unint64_t *)&qword_1ED69C950, (void (*)(id *, uint64_t))sub_1BBFF3874);
}

uint64_t sub_1BBFFD55C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1BBFFDA00();
  result = sub_1BC08A564();
  v8 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      sub_1BBFF36E8(&v7, v5);

      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BBFFD5DC(unint64_t a1)
{
  return sub_1BBFFD600(a1, &qword_1ED69C918, 0x1E0CB6B00, &qword_1ED69C920, (void (*)(id *, uint64_t))sub_1BBFF3B70);
}

uint64_t sub_1BBFFD600(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  sub_1BBFDF744(0, a2);
  sub_1BBFFD9C0(a4, a2);
  result = sub_1BC08A564();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC08AA80();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1BCCE934C](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BBFFD77C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73646E616D6D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BBFFD85C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BBFFD978()
{
  unint64_t v0;

  v0 = sub_1BC08AAE0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_1BBFFD9C0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BBFDF744(255, a2);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BBFFDA00()
{
  unint64_t result;

  result = qword_1ED69A110;
  if (!qword_1ED69A110)
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0D2D708], MEMORY[0x1E0D2D700]);
    atomic_store(result, (unint64_t *)&qword_1ED69A110);
  }
  return result;
}

void sub_1BBFFDA44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BBFDA9C0(a4, a3, a5);
    v9 = sub_1BC08A948();
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BBFFDAC4()
{
  unint64_t result;

  result = qword_1EF3EE000;
  if (!qword_1EF3EE000)
  {
    result = MEMORY[0x1BCCE9B68]("\rBA+\bj", &type metadata for ModelTrainingCommand.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF3EE000);
  }
  return result;
}

unint64_t sub_1BBFFDB08()
{
  unint64_t result;

  result = qword_1ED69A128;
  if (!qword_1ED69A128)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69A128);
  }
  return result;
}

unint64_t sub_1BBFFDB58()
{
  unint64_t result;

  result = qword_1ED69AC80;
  if (!qword_1ED69AC80)
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0D2E578], MEMORY[0x1E0D2E570]);
    atomic_store(result, (unint64_t *)&qword_1ED69AC80);
  }
  return result;
}

void sub_1BBFFDB9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BBFFDBF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D8F8)
  {
    v0 = sub_1BC08A948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D8F8);
  }
}

void sub_1BBFFDC54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BBFDF744(255, a3);
    sub_1BBFFD9C0(a5, a3);
    v8 = sub_1BC08A948();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1BBFFDCDC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3EE008)
  {
    sub_1BBFDB42C(255, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3EE008);
  }
}

id sub_1BBFFDD60()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for BaseFeedPopulationManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED69B6E0 = (uint64_t)result;
  return result;
}

void *sub_1BBFFDDB4(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1BC025AAC((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1BC08AA44();

  if (!v4)
    return 0;
  sub_1BBFDF744(0, &qword_1ED69C938);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1BBFFDE88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*v2)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_1BC089064();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v4, v5);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v2, MEMORY[0x1E0CB09C8]);
  v6 = sub_1BC08A2E8();
  swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(0, v7, v8, v9);
  result = sub_1BC08A2E8();
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_1BBFFDF9C()
{
  sub_1BC0087F4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BBFFDFB0(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BBFFDFF4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t GeneratorPipelineManager.environment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

id sub_1BBFFE038()
{
  return (id)sub_1BC008824();
}

void sub_1BBFFE050(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;

}

uint64_t (*sub_1BBFFE094())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t GeneratorPipelineManager.store.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFE1C58(v1 + 64, a1);
}

uint64_t sub_1BBFFE0EC()
{
  sub_1BC008854();
  return swift_retain();
}

uint64_t sub_1BBFFE100(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 144) = a1;
  return swift_release();
}

uint64_t (*sub_1BBFFE144())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id GeneratorPipelineManager.orchestrationQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 152);
}

uint64_t GeneratorPipelineManager.transactionBuilderManager.getter()
{
  return swift_retain();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.sourceProfilePublisher.getter()
{
  return swift_retain();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.country.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFDB550(v1 + qword_1ED6A04D8, a1, (uint64_t (*)(_QWORD))sub_1BC008884);
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.isLaunchGeneration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1ED6A0530);
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.interactiveSharableModelPublisher.getter()
{
  return swift_retain();
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__allocating_init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  sub_1BC008914(a2, v8 + qword_1ED6A04D8);
  *(_QWORD *)(v8 + qword_1ED6A04D0) = a3;
  *(_BYTE *)(v8 + qword_1ED6A0530) = a4;
  return v8;
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  sub_1BC008914(a2, v4 + qword_1ED6A04D8);
  *(_QWORD *)(v4 + qword_1ED6A04D0) = a3;
  *(_BYTE *)(v4 + qword_1ED6A0530) = a4;
  return v4;
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1BC008958(v0 + qword_1ED6A04D8);
  swift_release();
  return v0;
}

uint64_t GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__deallocating_deinit()
{
  GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t (*v19)(_BYTE *, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, _QWORD *, _QWORD *);
  uint64_t v20;
  _QWORD v22[5];
  _QWORD v23[5];
  _BYTE v24[40];
  _BYTE v25[48];

  v8 = v7;
  v15 = a4 & 1;
  v16 = sub_1BC089FAC();
  v17 = type metadata accessor for DispatchQueueOrchestrationScheduler();
  swift_allocObject();
  v18 = DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v15, v16, 3);
  sub_1BBFE1C58(a1, (uint64_t)v25);
  sub_1BBFE1C58(a5, (uint64_t)v24);
  v23[3] = v17;
  v23[4] = &protocol witness table for DispatchQueueOrchestrationScheduler;
  v23[0] = v18;
  v22[3] = v17;
  v22[4] = &protocol witness table for DispatchQueueOrchestrationScheduler;
  v22[0] = v18;
  v19 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, _QWORD *, _QWORD *))(v8 + 320);
  swift_retain();
  v20 = v19(v25, a2, a3, v15, v24, a6, a7, v23, v22);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v20;
}

uint64_t GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16;
  uint64_t v17;

  v16 = a4 & 1;
  v17 = swift_allocObject();
  GeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(a1, a2, a3, v16, a5, a6, a7, a8, a9);
  return v17;
}

_QWORD *GeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  id v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;

  v10 = v9;
  v63 = a8;
  v77 = a7;
  v70 = a6;
  v79 = a5;
  v59 = a3;
  v57 = a2;
  v80 = a1;
  v78 = a9;
  v11 = *v9;
  v58 = a4 & 1;
  v12 = sub_1BC08A6F0();
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  MEMORY[0x1E0C80A78](v12);
  v72 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v11;
  v14 = *(_QWORD *)(v11 + 80);
  v15 = *(_QWORD *)(v11 + 88);
  type metadata accessor for GeneratorPipelineManager.GenerationState(255, v14, v15, v16);
  v17 = sub_1BC08A00C();
  v18 = sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
  v53 = v18;
  v19 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95FB8], v17);
  v69 = v19;
  v68 = sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  *(_QWORD *)&v82 = v17;
  *((_QWORD *)&v82 + 1) = v18;
  v54 = v17;
  v83 = v19;
  v84 = v68;
  v71 = sub_1BC089F34();
  v75 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v67 = (char *)&v51 - v20;
  v64 = sub_1BC0894CC();
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v61 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1BC08952C();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v60 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1BC08A6FC();
  v23 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BC08A6CC();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v26);
  v28 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v28);
  v56 = v14;
  v55 = v15;
  sub_1BBFFDE88((uint64_t *)&v82);
  v81 = v82;
  v10[2] = sub_1BC08A018();
  v10[4] = 0;
  *(_QWORD *)&v82 = 0;
  *((_QWORD *)&v82 + 1) = 0xE000000000000000;
  sub_1BC08A954();
  *(_QWORD *)&v82 = type metadata accessor for GeneratorPipelineManager(0, v14, v15, v29);
  swift_getMetatypeMetadata();
  v30 = sub_1BC08A3E4();
  v32 = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v82 = v30;
  *((_QWORD *)&v82 + 1) = v32;
  sub_1BC08A420();
  sub_1BC08A288();
  *(_QWORD *)&v82 = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0(&qword_1ED69DCD0, v27, MEMORY[0x1E0DEF828]);
  sub_1BBFDB42C(0, &qword_1ED69DCB8, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BBFEF1A8();
  sub_1BC08A834();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF8D0], v52);
  v10[19] = sub_1BC08A714();
  sub_1BBFE1C58(v80, (uint64_t)(v10 + 8));
  v33 = v57;
  v10[6] = v57;
  v10[3] = v59;
  *((_BYTE *)v10 + 40) = v58;
  sub_1BBFE1C58(v79, (uint64_t)(v10 + 13));
  v10[30] = v77;
  v34 = v63;
  sub_1BBFE1C58(v63, (uint64_t)(v10 + 20));
  v35 = v78;
  sub_1BBFE1C58(v78, (uint64_t)(v10 + 25));
  sub_1BBFDB42C(0, &qword_1ED69CA38, (uint64_t (*)(uint64_t))sub_1BC0089AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B950;
  v37 = v33;
  swift_retain();
  *(_QWORD *)(inited + 32) = objc_msgSend(v37, sel_profileIdentifier);
  *(_QWORD *)(inited + 40) = v37;
  v38 = v37;
  *(_QWORD *)&v82 = sub_1BBFFEC70(inited);
  sub_1BC008A38();
  swift_allocObject();
  v10[7] = sub_1BC089B38();
  v10[18] = v70;
  v39 = (_QWORD *)v35;
  v40 = *(_QWORD *)(v35 + 24);
  v41 = *(_QWORD *)(v35 + 32);
  __swift_project_boxed_opaque_existential_1(v39, v40);
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, *MEMORY[0x1E0D2D9D8], v64);
  swift_retain();
  v42 = v60;
  sub_1BC0894FC();
  v43 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 8))(v42, v40, v41);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v66);
  *(_QWORD *)&v82 = v10[2];
  swift_retain();
  v44 = v72;
  sub_1BC08A6E4();
  *(_QWORD *)&v81 = v43;
  v45 = v67;
  sub_1BC08A228();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v44, v74);
  swift_release();
  v46 = (_QWORD *)swift_allocObject();
  v47 = v55;
  v46[2] = v56;
  v46[3] = v47;
  v46[4] = v76;
  v48 = v71;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C28], v71);
  v49 = sub_1BC08A24C();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v34);
  __swift_destroy_boxed_opaque_existential_1(v79);
  __swift_destroy_boxed_opaque_existential_1(v80);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v48);
  v10[4] = v49;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v78);
  return v10;
}

unint64_t sub_1BBFFEC70(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC008A9C(0, (unint64_t *)&qword_1ED69C9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1BC08AABC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1BC025AAC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BBFFED84(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC00BD58();
  v2 = sub_1BC08AABC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BBFDB550(v6, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC00BDC0);
    result = sub_1BC0258A8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1BC00BE28(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BBFFEEC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v75 = a4;
  v7 = sub_1BC089DE4();
  v69 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v68 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v68 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v68 - v14;
  v16 = *a1;
  v17 = a1[1];
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v18 = sub_1BC089DD8();
  v19 = sub_1BC08A678();
  v20 = os_log_type_enabled(v18, v19);
  v76 = v7;
  v72 = a2;
  v73 = a3;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v79 = v68;
    *(_DWORD *)v21 = 136446466;
    v77 = a2;
    swift_getMetatypeMetadata();
    v22 = sub_1BC08A3E4();
    v77 = sub_1BBFDE0F8(v22, v23, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v77 = v16;
    v78 = v17;
    v25 = type metadata accessor for GeneratorPipelineManager.GenerationState(0, a3, v75, v24);
    v26 = sub_1BBFFF70C(v25);
    v77 = sub_1BBFDE0F8(v26, v27, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v18, v19, "[%{public}s]: %{public}s", (uint8_t *)v21, 0x16u);
    v28 = v68;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v28, -1, -1);
    v29 = v21;
    v7 = v76;
    MEMORY[0x1BCCE9C40](v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v30 = *(void (**)(char *, uint64_t))(v69 + 8);
  v30(v15, v7);
  v31 = v70;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v32 = sub_1BC089DD8();
  v33 = sub_1BC08A648();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v79 = v35;
    *(_DWORD *)v34 = 136446466;
    v77 = v72;
    swift_getMetatypeMetadata();
    v36 = sub_1BC08A3E4();
    v77 = sub_1BBFDE0F8(v36, v37, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    v77 = v16;
    v78 = v17;
    v39 = type metadata accessor for GeneratorPipelineManager.GenerationState(0, v73, v75, v38);
    v40 = sub_1BBFFF93C(v39);
    v77 = sub_1BBFDE0F8(v40, v41, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v32, v33, "[%{public}s]: %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v35, -1, -1);
    v42 = v34;
    v7 = v76;
    MEMORY[0x1BCCE9C40](v42, -1, -1);

    v30(v70, v7);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v30(v31, v7);
  }
  v43 = v71;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v44 = sub_1BC089DD8();
  v45 = sub_1BC08A678();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v79 = v47;
    *(_DWORD *)v46 = 136446466;
    v48 = v72;
    v77 = v72;
    swift_getMetatypeMetadata();
    v49 = sub_1BC08A3E4();
    v70 = (char *)v30;
    v77 = sub_1BBFDE0F8(v49, v50, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    v77 = v16;
    v78 = v17;
    v52 = type metadata accessor for GeneratorPipelineManager.GenerationState(0, v73, v75, v51);
    v53 = sub_1BBFFFB14(v52);
    v77 = sub_1BBFDE0F8(v53, v54, &v79);
    v30 = (void (*)(char *, uint64_t))v70;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v44, v45, "[%{public}s]: %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v47, -1, -1);
    v55 = v46;
    v7 = v76;
    MEMORY[0x1BCCE9C40](v55, -1, -1);

    v30(v71, v7);
    v56 = v74;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v30(v43, v7);
    v56 = v74;
    v48 = v72;
  }
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v57 = sub_1BC089DD8();
  v58 = sub_1BC08A648();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v79 = v60;
    *(_DWORD *)v59 = 136446466;
    v77 = v48;
    swift_getMetatypeMetadata();
    v61 = sub_1BC08A3E4();
    v77 = sub_1BBFDE0F8(v61, v62, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2082;
    v77 = v16;
    v78 = v17;
    v64 = type metadata accessor for GeneratorPipelineManager.GenerationState(0, v73, v75, v63);
    v65 = sub_1BBFFFD88(v64);
    v77 = sub_1BBFDE0F8(v65, v66, &v79);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v57, v58, "[%{public}s]: %{public}s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v60, -1, -1);
    MEMORY[0x1BCCE9C40](v59, -1, -1);

    return ((uint64_t (*)(char *, uint64_t))v30)(v74, v76);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(char *, uint64_t))v30)(v56, v7);
  }
}

uint64_t sub_1BBFFF70C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[6];
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v21 = *v1;
  v2 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = v2;
  v16[2] = v18;
  v16[3] = v2;
  v16[4] = sub_1BC00BBC8;
  v16[5] = &v17;
  sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v5, v6);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v3, MEMORY[0x1E0CB09C8]);
  v7 = sub_1BC08A348();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA0E0], v7);
  v9 = MEMORY[0x1E0DEA968];
  v11 = sub_1BC015768((void (*)(char *, char *))sub_1BC00BBE8, (uint64_t)v16, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v21 = v11;
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v9, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1BC08A954();
  v20 = sub_1BC08A330();
  v12 = sub_1BC08AB64();
  v14 = v13;
  swift_bridgeObjectRelease();
  v21 = v12;
  v22 = v14;
  sub_1BC08A420();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_1BBFFF93C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v17 = *v1;
  v2 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = v2;
  v13[2] = v15;
  v13[3] = v2;
  v13[4] = sub_1BC00BC90;
  v13[5] = &v14;
  sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v5, v6);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v3, MEMORY[0x1E0CB09C8]);
  v7 = sub_1BC08A348();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA0E0], v7);
  v9 = MEMORY[0x1E0DEA968];
  v11 = sub_1BC015768((void (*)(char *, char *))sub_1BC00BF44, (uint64_t)v13, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v17 = v11;
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v9, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  v17 = 0xD00000000000001ELL;
  v18 = 0x80000001BC08F660;
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BBFFFB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[6];
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v21 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = v2;
  v16[2] = v18;
  v16[3] = v2;
  v16[4] = sub_1BC00BCB0;
  v16[5] = &v17;
  sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v5, v6);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v3, MEMORY[0x1E0CB09C8]);
  v7 = sub_1BC08A348();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA0E0], v7);
  v9 = MEMORY[0x1E0DEA968];
  v11 = sub_1BC015768((void (*)(char *, char *))sub_1BC00BCD0, (uint64_t)v16, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v21 = v11;
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v9, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1BC08A954();
  v20 = sub_1BC08A330();
  v12 = sub_1BC08AB64();
  v14 = v13;
  swift_bridgeObjectRelease();
  v21 = v12;
  v22 = v14;
  sub_1BC08A420();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_1BBFFFD88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v17 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = v2;
  v13[2] = v15;
  v13[3] = v2;
  v13[4] = sub_1BC00BCF0;
  v13[5] = &v14;
  sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v5, v6);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v3, MEMORY[0x1E0CB09C8]);
  v7 = sub_1BC08A348();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA0E0], v7);
  v9 = MEMORY[0x1E0DEA968];
  v11 = sub_1BC015768((void (*)(char *, char *))sub_1BC00BF58, (uint64_t)v13, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v10);
  swift_bridgeObjectRelease();
  v17 = v11;
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v9, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  v17 = 0xD00000000000001FLL;
  v18 = 0x80000001BC08F6A0;
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v17;
}

id sub_1BBFFFFB4(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v5;

  if (a1)
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1BBFDF744(0, &qword_1ED69C938);
    swift_retain();
    v3 = a1;
    sub_1BC089B08();
    swift_release();

    return (id)v5;
  }
  else
  {
    swift_beginAccess();
    return *(id *)(v1 + 48);
  }
}

void sub_1BC00009C(uint64_t *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v4 = *a1;
  v5 = a2;
  v6 = sub_1BBFFDDB4(v5, v4);

  if (!v6)
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
    objc_msgSend(v7, sel_setProfileIdentifier_, v5);
    objc_msgSend(v7, sel_resume);
    v8 = v5;
    v6 = v7;
    sub_1BC038FB4((uint64_t)v6, v8);

  }
  *a3 = v6;
}

uint64_t sub_1BC000140(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];

  v2 = v1;
  v51 = a1;
  v3 = *v1;
  sub_1BC008BC4();
  v5 = v4;
  v49 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v7, v8);
  v39[1] = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v9 = sub_1BC089FB8();
  v10 = MEMORY[0x1E0C95D90];
  v50 = v5;
  v46 = sub_1BBFDA9C0(&qword_1ED69A998, (uint64_t (*)(uint64_t))sub_1BC008BC4, MEMORY[0x1E0C95D90]);
  v11 = sub_1BC089EA4();
  v47 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v45 = (char *)v39 - v12;
  v13 = MEMORY[0x1BCCE9B68](v10, v9);
  v14 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v11);
  v48 = v9;
  v52[0] = v9;
  v52[1] = v11;
  v40 = v14;
  v41 = v13;
  v52[2] = v13;
  v52[3] = v14;
  v15 = sub_1BC089E68();
  v43 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  MEMORY[0x1E0C80A78](v15);
  v42 = (char *)v39 - v16;
  sub_1BC00B9C4(0, (unint64_t *)&qword_1ED69A698, (void (*)(uint64_t))sub_1BC008C50, (void (*)(void))sub_1BC008CC4);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v39 - v20;
  sub_1BC00BE50(0, &qword_1ED69C7F0, (uint64_t (*)(uint64_t))sub_1BC008C50, sub_1BC008CC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28]);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v39 - v25;
  v27 = *(_QWORD *)(v51 + 16);
  if ((sub_1BC089970() & 1) != 0)
  {
    v52[0] = v27;
    sub_1BC008C50();
    sub_1BC008CC4();
    sub_1BC08A1C8();
    sub_1BC008D14();
    v27 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  else
  {
    swift_retain();
  }
  v52[0] = sub_1BC000F60(v27);
  sub_1BC008C50();
  sub_1BC008CC4();
  sub_1BC08A240();
  swift_release();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95850], v18);
  v28 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v29 = v2[23];
  v30 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v29);
  v52[0] = v28;
  v52[0] = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 24))(v52, v50, v46, v29, v30);
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v33 = v49;
  v32[3] = v51;
  v32[4] = v33;
  swift_retain();
  v34 = v45;
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  v35 = v42;
  MEMORY[0x1BCCE8B48](v11, v40, v41);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v11);
  v36 = v44;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95870], v44);
  v37 = sub_1BC08A180();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
  return v37;
}

uint64_t sub_1BC000644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];

  v80 = a5;
  v75 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v9, v10);
  v12 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v13 = sub_1BC089FB8();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v13);
  v14 = sub_1BC089E20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v66 - v16;
  v70 = v12;
  v71 = v11;
  v18 = sub_1BC08A078();
  v68 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v67 = (char *)&v66 - v19;
  v81 = sub_1BC089DE4();
  v77 = *(_QWORD *)(v81 - 8);
  v20 = MEMORY[0x1E0C80A78](v81);
  v79 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v66 - v22;
  v24 = *a1;
  v78 = a2 + 16;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  v25 = sub_1BC089DD8();
  v26 = sub_1BC08A678();
  v27 = os_log_type_enabled(v25, v26);
  v73 = v15;
  v74 = v14;
  v72 = v17;
  v76 = v13;
  v66 = a4;
  v69 = v18;
  if (v27)
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v85[0] = v29;
    *(_DWORD *)v28 = 136446466;
    v84 = a4;
    swift_getMetatypeMetadata();
    v30 = sub_1BC08A3E4();
    v84 = sub_1BBFDE0F8(v30, v31, v85);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    v32 = swift_bridgeObjectRetain();
    v33 = MEMORY[0x1BCCE8EA8](v32, MEMORY[0x1E0D2D700]);
    v35 = v34;
    swift_bridgeObjectRelease();
    v84 = sub_1BBFDE0F8(v33, v35, v85);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v25, v26, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v29, -1, -1);
    MEMORY[0x1BCCE9C40](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v36 = *(void (**)(char *, uint64_t))(v77 + 8);
  v37 = v81;
  v36(v23, v81);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v39 = Strong;
    v83 = v24;
    v82 = MEMORY[0x1E0DEE9E0];
    sub_1BC00BC08(0, &qword_1ED69C8E8);
    v41 = v40;
    sub_1BC008A9C(0, (unint64_t *)&qword_1ED69C8D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v41);
    sub_1BC08A468();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v39 + 352))(v24, v85[0]);
    swift_bridgeObjectRelease();
    v42 = sub_1BC001250((uint64_t)v75, v24);
    v43 = sub_1BC003454(v42);
    v44 = v79;
    sub_1BC089D90();
    swift_bridgeObjectRetain_n();
    v45 = sub_1BC089DD8();
    v46 = sub_1BC08A678();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v75 = v36;
      v49 = v48;
      v83 = v48;
      *(_DWORD *)v47 = 136446466;
      v78 = v42;
      v85[0] = v66;
      swift_getMetatypeMetadata();
      v50 = sub_1BC08A3E4();
      v77 = v43;
      v85[0] = sub_1BBFDE0F8(v50, v51, &v83);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      v52 = swift_bridgeObjectRetain();
      v53 = MEMORY[0x1BCCE8EA8](v52, MEMORY[0x1E0D2D700]);
      v55 = v54;
      swift_bridgeObjectRelease();
      v56 = v53;
      v43 = v77;
      v85[0] = sub_1BBFDE0F8(v56, v55, &v83);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v45, v46, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v49, -1, -1);
      MEMORY[0x1BCCE9C40](v47, -1, -1);

      v75(v79, v81);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v36(v44, v37);
    }
    v62 = v73;
    v61 = v74;
    v63 = v72;
    v85[0] = v43;
    v64 = v76;
    v65 = MEMORY[0x1BCCE9B68](&unk_1BC08C640, v76);
    sub_1BC000E74(v64, v65);
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0C957C0], v61);
    v59 = sub_1BC08A180();
    swift_release();
    swift_release();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v61);
  }
  else
  {
    v57 = v67;
    sub_1BC08A06C();
    v58 = v69;
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v69);
    v59 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v57, v58);
  }
  *v80 = v59;
  return result;
}

void sub_1BC000DF4(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = *a2;
  v3 = sub_1BC089370();
  if (v3)
  {
    v4 = (void *)v3;
    if ((sub_1BC0893AC() & 1) == 0)
    {
      v5 = v4;
      v6 = sub_1BBFFFFB4(v2);
      sub_1BC038FB4((uint64_t)v6, v5);

    }
  }
}

uint64_t sub_1BC000E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC08A198();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC000F60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = *v1;
  sub_1BC00BE50(0, &qword_1ED69C810, (uint64_t (*)(uint64_t))sub_1BC008C50, sub_1BC008CC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v12[1] = a1;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = *(_QWORD *)(v3 + 80);
  v9[3] = *(_QWORD *)(v3 + 88);
  v9[4] = v3;
  sub_1BC008C50();
  sub_1BC008CC4();
  sub_1BC08A1D4();
  swift_release();
  sub_1BC00BEDC();
  v10 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

BOOL sub_1BC00107C(_QWORD **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v4 = sub_1BC089DE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC038AB8(*a1, (uint64_t)&unk_1E749F1B8);
  swift_arrayDestroy();
  if ((v8 & 1) != 0)
  {
    sub_1BC089D90();
    v9 = sub_1BC089DD8();
    v10 = sub_1BC08A66C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136446210;
      v16[1] = v11 + 4;
      v17 = v12;
      v18 = a2;
      swift_getMetatypeMetadata();
      v13 = sub_1BC08A3E4();
      v18 = sub_1BBFDE0F8(v13, v14, &v17);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v9, v10, "%{public}s: Received agnostic only source profiles, skipping pipeline for this set of profiles", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v12, -1, -1);
      MEMORY[0x1BCCE9C40](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (v8 & 1) == 0;
}

uint64_t sub_1BC001250(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v47 = a1;
  v4 = *v2;
  sub_1BC00B37C();
  v44 = v5;
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B470();
  v48 = *(_QWORD *)(v7 - 8);
  v8 = v7;
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v4;
  v11 = *(_QWORD *)(v4 + 80);
  v36 = *(_QWORD *)(v4 + 88);
  v12 = v11;
  v35 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v14, v15);
  sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v16 = sub_1BC089FB8();
  v41 = v16;
  v17 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90]);
  v40 = v17;
  v39 = sub_1BBFDA9C0(&qword_1ED69B408, (uint64_t (*)(uint64_t))sub_1BC00B470, MEMORY[0x1E0C95B78]);
  v49 = v16;
  v50 = v8;
  v51 = v17;
  v52 = v39;
  v18 = sub_1BC089EEC();
  v42 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v34 - v19;
  v49 = a2;
  v21 = MEMORY[0x1E0D2D700];
  sub_1BC00BC08(0, &qword_1ED69C8E8);
  sub_1BC00B430(&qword_1ED69C8F0, &qword_1ED69C8E8, v21, MEMORY[0x1E0DEAF38]);
  sub_1BC08A450();
  v22 = swift_allocObject();
  v23 = v37;
  swift_weakInit();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v12;
  v25 = v36;
  v24[3] = v36;
  v24[4] = v22;
  sub_1BC089FAC();
  sub_1BC00B7A0(0, &qword_1ED69B450, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B5A4();
  sub_1BC00B5C0();
  v26 = v44;
  v27 = v34;
  sub_1BC08A258();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v26);
  v28 = (_QWORD *)swift_allocObject();
  v29 = v47;
  v28[2] = v23;
  v28[3] = v29;
  v28[4] = v43;
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = v35;
  v30[3] = v25;
  v30[4] = sub_1BC00B6E0;
  v30[5] = v28;
  swift_retain();
  swift_retain();
  sub_1BC089FAC();
  v31 = v38;
  sub_1BC08A1F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v31);
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B78], v18);
  v32 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v18);
  return v32;
}

uint64_t sub_1BC001628@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t Strong;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  id v29;
  uint64_t v30;
  id v31;
  char *v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  v52 = a2;
  sub_1BC00A1C8(0, (unint64_t *)&qword_1ED69B3E0, sub_1BC00B784, (void (*)(uint64_t))sub_1BC00B528, (void (*)(void))sub_1BC00B820);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v40 - v4;
  sub_1BC00B83C();
  v6 = v5;
  v51 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B9C4(0, &qword_1ED69B3D0, v8, (void (*)(void))sub_1BC00BA60);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v40 - v12;
  sub_1BC00BA7C(0, v13);
  v53 = v14;
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69B468, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v40 - v20;
  v22 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v24 = (_QWORD *)Strong;
    v44 = sub_1BBFFFFB4(v22);
    swift_retain();
    v43 = v16;
    sub_1BC0899DC();
    swift_release();
    v25 = v24[23];
    v26 = v24[24];
    __swift_project_boxed_opaque_existential_1(v24 + 20, v25);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v54 = v27(v16, v53, OpaqueTypeConformance2, v25, v26);
    *(_QWORD *)(swift_allocObject() + 16) = v22;
    sub_1BC00B784(0);
    sub_1BC00B528();
    v41 = v10;
    sub_1BC00B820();
    v29 = v22;
    v42 = v11;
    v30 = v6;
    v31 = v29;
    v32 = v45;
    sub_1BC08A1A4();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = v22;
    sub_1BBFDB42C(0, &qword_1ED69B460, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    sub_1BC00B8FC();
    sub_1BC00B964();
    v33 = v31;
    v35 = v47;
    v34 = v48;
    sub_1BC08A1BC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v35);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC00BA60();
    v36 = v50;
    sub_1BC08A240();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v30);
    sub_1BC00BB68();
    v37 = v41;
    v38 = sub_1BC08A180();
    swift_release();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v37);
    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v43, v53);
  }
  else
  {
    sub_1BC00B528();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC00BAD4();
    v38 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  *v52 = v38;
  return result;
}

id sub_1BC001ACC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *a1;
  v5 = sub_1BC0893AC();
  v6 = 0;
  if ((v5 & 1) == 0)
  {
    swift_retain();
    v6 = v4;
  }
  *a3 = a2;
  a3[1] = v6;
  return a2;
}

uint64_t sub_1BC001B20@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  id v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - v11;
  v13 = *a1;
  v14 = (void *)sub_1BC089370();
  if (!v14 || (v15 = v14, v16 = objc_msgSend(v14, sel_type), v15, v16 != (id)2))
  {
    v47 = v7;
    sub_1BC089D90();
    v25 = a2;
    v26 = v13;
    v17 = v25;
    v27 = v13;
    v28 = sub_1BC089DD8();
    v29 = sub_1BC08A660();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v49[0] = v44;
      *(_DWORD *)v30 = 136446466;
      v17 = v17;
      v31 = sub_1BC089388();
      v45 = a3;
      v46 = v6;
      v32 = v31;
      v34 = v33;

      v48 = sub_1BBFDE0F8(v32, v34, v49);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v48 = (uint64_t)v13;
      v35 = v13;
      sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
      v36 = sub_1BC08A3E4();
      v48 = sub_1BBFDE0F8(v36, v37, v49);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BBFD7000, v28, v29, "Failed to get transaction builder for %{public}s: %{public}s", (uint8_t *)v30, 0x16u);
      v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v38, -1, -1);
      MEMORY[0x1BCCE9C40](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v46);
      goto LABEL_10;
    }

    v39 = *(void (**)(char *, uint64_t))(v47 + 8);
    v40 = v10;
LABEL_9:
    v39(v40, v6);
    goto LABEL_10;
  }
  sub_1BC089D90();
  v17 = a2;
  v18 = sub_1BC089DD8();
  v19 = sub_1BC08A678();
  if (!os_log_type_enabled(v18, v19))
  {

    v39 = *(void (**)(char *, uint64_t))(v7 + 8);
    v40 = v12;
    goto LABEL_9;
  }
  v47 = v7;
  v20 = (uint8_t *)swift_slowAlloc();
  v45 = swift_slowAlloc();
  v49[0] = v45;
  v46 = v6;
  *(_DWORD *)v20 = 136446210;
  v44 = (uint64_t)(v20 + 4);
  v17 = v17;
  v21 = sub_1BC089388();
  v23 = v22;

  v48 = sub_1BBFDE0F8(v21, v23, v49);
  sub_1BC08A7EC();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BBFD7000, v18, v19, "Returning nil transaction builder for summary sharing profile %{public}s", v20, 0xCu);
  v24 = v45;
  swift_arrayDestroy();
  MEMORY[0x1BCCE9C40](v24, -1, -1);
  MEMORY[0x1BCCE9C40](v20, -1, -1);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v46);
LABEL_10:
  v49[0] = (uint64_t)a2;
  v49[1] = 0;
  sub_1BC00B528();
  v41 = v17;
  return sub_1BC08A060();
}

uint64_t sub_1BC001F78(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v31 = a4;
  v32 = a5;
  v29 = a1;
  v30 = a2;
  v6 = *(_QWORD *)(*a3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v8, v9);
  v10 = sub_1BC08A534();
  v11 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v10);
  v42 = v10;
  v43 = MEMORY[0x1E0DEDCE8];
  v44 = v11;
  v45 = MEMORY[0x1E0DEDD18];
  v12 = sub_1BC089F28();
  v13 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  v35 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - v14;
  v16 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v42 = v10;
  v43 = v16;
  v44 = v11;
  v45 = MEMORY[0x1E0DEDB38];
  v17 = sub_1BC089F28();
  v33 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - v18;
  swift_beginAccess();
  v41 = a3[3];
  v20 = swift_allocObject();
  swift_weakInit();
  v36 = v20;
  v37 = v29;
  v38 = v31;
  v39 = v30;
  v40 = v32;
  type metadata accessor for GeneratorPipelineProviderWrapper(255, v6, v21, v22);
  v23 = sub_1BC08A534();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v23);
  v24 = sub_1BC08A474();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC0030DC(v24);
  v41 = v24;
  sub_1BC08A450();
  swift_bridgeObjectRelease();
  v25 = v34;
  sub_1BC089F10();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v25);
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C10], v17);
  v26 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v17);
  return v26;
}

uint64_t sub_1BC002240@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a4;
  v39 = a5;
  v11 = *a3;
  v12 = sub_1BC089574();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v35[1] = v6;
    v36 = v12;
    v17 = (uint64_t)a3 + qword_1ED6A04D8;
    v18 = *((unsigned __int8 *)a3 + qword_1ED6A0530);
    v37 = a6;
    v19 = *(_QWORD *)(v11 + 80);
    v20 = type metadata accessor for GeneratorPipelineProviderWrapper(0, v19, v15, v16);
    sub_1BC002AFC(a2, v17, v18, a1 + *(int *)(v20 + 28), v38, *(uint64_t *)((char *)a3 + qword_1ED6A04D0), (uint64_t)v14);
    v21 = *(_QWORD *)(v11 + 88);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 24))(v14, v19, v21);
    MEMORY[0x1E0C80A78](v41);
    v35[-6] = v19;
    v35[-5] = v21;
    v35[-4] = a1;
    v35[-3] = v14;
    v35[-2] = v39;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v23 = sub_1BC08A534();
    v26 = (char *)type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v24, v25);
    v27 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF50], v23);
    v28 = v23;
    a6 = v37;
    v30 = sub_1BC015768((void (*)(char *, char *))sub_1BC00B760, (uint64_t)&v35[-8], v28, v26, MEMORY[0x1E0DEDCE8], v27, MEMORY[0x1E0DEDD18], v29);
    swift_release();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v14, v36);
  }
  else
  {
    v32 = swift_getAssociatedTypeWitness();
    type metadata accessor for GeneratorPipelineManagerWrapper(0, v32, v33, v34);
    result = sub_1BC08A510();
    v30 = result;
  }
  *a6 = v30;
  return result;
}

uint64_t sub_1BC0024B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t AssociatedConformanceWitness;
  char *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88[2];
  uint64_t v89;

  v64 = a4;
  v86 = a2;
  v87 = a3;
  v85 = a1;
  v83 = a7;
  v69 = sub_1BC08952C();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v67 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1BC089574();
  v10 = *(_QWORD *)(v84 - 8);
  v11 = MEMORY[0x1E0C80A78](v84);
  v82 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v61 - v13;
  v65 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v81 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v61 - v19;
  v66 = a5;
  v23 = type metadata accessor for GeneratorPipelineProviderWrapper(0, a5, v21, v22);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v61 - v25;
  v27 = sub_1BC089DE4();
  v76 = *(_QWORD *)(v27 - 8);
  v77 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v71 = v24;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v80 = v23;
  v30(v26, v86, v23);
  v73 = v16;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v72 = v20;
  v74 = v32;
  v32(v20, v85, AssociatedTypeWitness);
  v78 = v14;
  v79 = v10;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v33(v14, v87, v84);
  v75 = v29;
  v34 = sub_1BC089DD8();
  v35 = sub_1BC08A678();
  v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc();
    v70 = (void (*)(char *, char *, uint64_t))v33;
    v38 = v37;
    v63 = swift_slowAlloc();
    v89 = v63;
    *(_DWORD *)v38 = 136446978;
    v62 = v34;
    *(_QWORD *)&v88[0] = v64;
    swift_getMetatypeMetadata();
    LODWORD(v64) = v36;
    v39 = sub_1BC08A3E4();
    *(_QWORD *)&v88[0] = sub_1BBFDE0F8(v39, v40, &v89);
    v61 = (char *)v88 + 8;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v41 = v80;
    __swift_project_boxed_opaque_existential_1(&v31[*(int *)(v80 + 28)], *(_QWORD *)&v31[*(int *)(v80 + 28) + 24]);
    v42 = sub_1BC089220();
    *(_QWORD *)&v88[0] = sub_1BBFDE0F8(v42, v43, &v89);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v41);
    *(_WORD *)(v38 + 22) = 2082;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v45 = v67;
    v46 = v72;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v47 = (void *)sub_1BC089514();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
    v48 = sub_1BC089388();
    v50 = v49;

    *(_QWORD *)&v88[0] = sub_1BBFDE0F8(v48, v50, &v89);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v46, AssociatedTypeWitness);
    *(_WORD *)(v38 + 32) = 2082;
    v51 = (uint64_t)v82;
    v52 = v78;
    v53 = v84;
    v70(v82, v78, v84);
    v54 = sub_1BC08A3E4();
    *(_QWORD *)&v88[0] = sub_1BBFDE0F8(v54, v55, &v89);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v53);
    v56 = v62;
    _os_log_impl(&dword_1BBFD7000, v62, (os_log_type_t)v64, "[%{public}s]: delegate returned pipeline <%{public}s> for profile %{public}s and context %{public}s.", (uint8_t *)v38, 0x2Au);
    v57 = v63;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v57, -1, -1);
    v58 = v38;
    v33 = (void (*)(char *, uint64_t, uint64_t))v70;
    MEMORY[0x1BCCE9C40](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  }
  else
  {
    v41 = v80;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v80);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, AssociatedTypeWitness);
    v53 = v84;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v84);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    v51 = (uint64_t)v82;
  }
  v59 = (uint64_t)v81;
  v74(v81, v85, AssociatedTypeWitness);
  sub_1BBFE1C58(v86 + *(int *)(v41 + 28), (uint64_t)v88);
  v33((char *)v51, v87, v53);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)(v59, v88, v51, AssociatedTypeWitness, v83);
}

uint64_t sub_1BC002AFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _BYTE v54[40];
  _QWORD v55[5];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;

  v8 = v7;
  v53 = a3;
  v51 = a2;
  v50 = a1;
  v52 = a7;
  sub_1BC008884();
  MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC088E84();
  MEMORY[0x1E0C80A78](v15);
  v48 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BBFFFFB4(a1);
  *(_QWORD *)&v56 = HKHealthStore.makePreferredTransactionPublisher()();
  v18 = MEMORY[0x1E0C95D78];
  sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v18, MEMORY[0x1E0C95D90]);
  v19 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v56 = v19;
  sub_1BC00BE50(0, (unint64_t *)&qword_1ED69B0E8, (uint64_t (*)(uint64_t))sub_1BC00AEC4, sub_1BC00B05C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95758]);
  sub_1BC00B078();
  v20 = sub_1BC08A180();
  swift_release();
  v21 = a4;
  sub_1BBFE1C58(a4, (uint64_t)&v56);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a5;
  sub_1BBFE95C8(&v56, (uint64_t)(v22 + 3));
  v22[8] = v17;
  v22[9] = v20;
  v47 = v20;
  sub_1BC006630(v17, a4, v20, a5, a6);
  v24 = v23;
  sub_1BBFE1C58(v21, (uint64_t)&v56);
  swift_beginAccess();
  v25 = *(void **)(v7 + 48);
  v46 = type metadata accessor for HealthStoreSharableModelContext();
  v26 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  v27 = v25;
  swift_retain();
  v45[1] = v24;
  swift_retain();
  v28 = v17;
  v26[2] = sub_1BC08A618();
  sub_1BBFE1C58((uint64_t)&v56, (uint64_t)(v26 + 4));
  v26[3] = v28;
  v29 = objc_allocWithZone(MEMORY[0x1E0CB6C98]);
  v30 = v28;
  v31 = objc_msgSend(v29, sel_initWithHealthStore_, v27);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  v26[9] = v31;
  v26[10] = sub_1BC00B11C;
  v26[11] = v22;
  v26[12] = sub_1BC0091D4;
  v26[13] = v24;
  v32 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v45[0] = sub_1BBFDA9C0(&qword_1ED69BC20, type metadata accessor for HealthExperienceStoreFeedItemContext, (uint64_t)&protocol conformance descriptor for HealthExperienceStoreFeedItemContext);
  v33 = v31;
  v34 = sub_1BC089460();

  *(_QWORD *)&v56 = v34;
  sub_1BC00B7A0(0, &qword_1ED69B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B12C();
  v35 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v56 = v35;
  sub_1BC00BE50(0, (unint64_t *)&qword_1ED69B0D8, (uint64_t (*)(uint64_t))sub_1BC00B18C, sub_1BC00B2A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95758]);
  sub_1BC00B2C0();
  v36 = sub_1BC08A180();
  swift_release();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 88));
  v37 = (void *)sub_1BC0891C0();
  sub_1BBFE1C58(v21, (uint64_t)&v56);
  LOBYTE(v31) = *(_BYTE *)(v8 + 40);
  sub_1BBFE1C58(v8 + 104, (uint64_t)v55);
  swift_beginAccess();
  v38 = *(_QWORD *)(v8 + 144);
  sub_1BBFE1C58(v8 + 200, (uint64_t)v54);
  v39 = v30;
  swift_retain();
  swift_retain();
  v40 = (uint64_t)v48;
  sub_1BC088E30();
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  swift_allocObject();
  v42 = sub_1BC012FE0(v37, &v56, v39, (char)v31, (uint64_t)v55, v38, (uint64_t)v54, v40, v36, (uint64_t)v41);

  swift_release();
  sub_1BBFDB550(v51, v49, (uint64_t (*)(_QWORD))sub_1BC008884);
  v57 = v32;
  v58 = v45[0];
  *(_QWORD *)&v56 = v42;
  v55[3] = v46;
  v55[4] = sub_1BBFDA9C0(&qword_1ED69CE78, (uint64_t (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext, (uint64_t)&unk_1BC08D0D0);
  v55[0] = v26;
  v43 = v50;
  swift_retain();
  swift_retain();
  sub_1BC089550();
  sub_1BC089568();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC0030DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  char *TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *v1;
  v20 = a1;
  v4 = *(_QWORD *)(v2 + 88);
  v18 = *(_QWORD *)(v2 + 80);
  v3 = v18;
  v19 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v6, v7);
  v8 = sub_1BC08A534();
  sub_1BC089064();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF50], v8);
  v20 = sub_1BC015768((void (*)(char *, char *))sub_1BC00AE08, (uint64_t)&v17, v8, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  v13 = sub_1BC08A534();
  sub_1BBFDA9C0(&qword_1ED69DAB8, v9, MEMORY[0x1E0CB09C8]);
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v13);
  v14 = sub_1BC08A324();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = v4;
  v15[4] = v14;
  sub_1BC007860((uint64_t)sub_1BC00AE48, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1BC003280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1BC089064();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v6, v7);
  v9 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1 + *(int *)(v8 + 36), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, a1, v8);
}

double sub_1BC003350@<D0>(__int128 *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;

  v8 = *a1;
  sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v5, v6);
  sub_1BBFDA9C0(&qword_1ED69DAB8, v3, MEMORY[0x1E0CB09C8]);
  sub_1BC08A348();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC08A33C();
  result = *(double *)&v8;
  *a2 = v8;
  return result;
}

uint64_t sub_1BC003454(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v31 = *(_QWORD *)(*v2 + 88);
  v32 = v4;
  v30 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  v29 = type metadata accessor for GeneratorPipelineManagerWrapper(255, v7, v8, v9);
  sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v10 = sub_1BC089FB8();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v11, v12);
  v13 = sub_1BC089FB8();
  v14 = MEMORY[0x1E0C95D90];
  v28 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v10);
  v33 = v10;
  v34 = v13;
  v35 = v28;
  v36 = MEMORY[0x1BCCE9B68](v14, v13);
  v15 = sub_1BC089EEC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - v17;
  v33 = a1;
  v19 = v2[23];
  v20 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = (_QWORD *)swift_allocObject();
  v23 = v31;
  v22[2] = v30;
  v22[3] = v23;
  v24 = v32;
  v22[4] = v21;
  v22[5] = v24;
  sub_1BC08A1F8();
  swift_release();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B78], v15);
  v25 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v25;
}

uint64_t sub_1BC003720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, NSObject *a3@<X3>, NSObject *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t Strong;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  char *v50;
  char *v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  os_log_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  NSObject *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v71 = a2;
  v82 = a5;
  v8 = sub_1BC08952C();
  v77 = *(_QWORD *)(v8 - 8);
  v78 = v8;
  MEMORY[0x1E0C80A78](v8);
  v76 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v73 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v72 = (char *)&v65 - v11;
  v14 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v12, v13);
  v83 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v65 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v81 = (char *)&v65 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v65 - v21;
  v23 = sub_1BC089DE4();
  v79 = *(_QWORD *)(v23 - 8);
  v80 = v23;
  MEMORY[0x1E0C80A78](v23);
  v86 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = a4;
  v74 = a3;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v25 = swift_getAssociatedTypeWitness();
  v28 = type metadata accessor for GeneratorPipelineManagerWrapper(255, v25, v26, v27);
  v29 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v30 = sub_1BC08A078();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v65 - v32;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v69 = Strong;
    v70 = v29;
    sub_1BC089D90();
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
    v35(v22, a1, v14);
    v36 = v81;
    v35(v81, a1, v14);
    v35(v84, a1, v14);
    v35(v85, a1, v14);
    v37 = sub_1BC089DD8();
    v38 = sub_1BC08A678();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v88 = v67;
      *(_DWORD *)v40 = 136447234;
      v65 = v37;
      v66 = v39;
      v87 = v71;
      swift_getMetatypeMetadata();
      v68 = a1;
      v41 = sub_1BC08A3E4();
      v71 = v28;
      v87 = sub_1BBFDE0F8(v41, v42, &v88);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2082;
      __swift_project_boxed_opaque_existential_1(&v22[*(int *)(v14 + 28)], *(_QWORD *)&v22[*(int *)(v14 + 28) + 24]);
      v43 = sub_1BC089220();
      v87 = sub_1BBFDE0F8(v43, v44, &v88);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      v45 = *(void (**)(char *, uint64_t))(v83 + 8);
      v45(v22, v14);
      *(_WORD *)(v40 + 22) = 2082;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v36, AssociatedTypeWitness);
      v46 = sub_1BC08A3E4();
      v87 = sub_1BBFDE0F8(v46, v47, &v88);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      v48 = ((uint64_t (*)(char *, uint64_t))v45)(v36, v14);
      *(_WORD *)(v40 + 32) = 2082;
      MEMORY[0x1E0C80A78](v48);
      v49 = v75;
      *(&v65 - 2) = v74;
      *(&v65 - 1) = v49;
      swift_getKeyPath();
      v50 = v76;
      v51 = v84;
      GeneratorPipelineManagerWrapper.subscript.getter();
      swift_release();
      v52 = (void *)sub_1BC089514();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v78);
      v53 = sub_1BC089388();
      v55 = v54;

      v87 = sub_1BBFDE0F8(v53, v55, &v88);
      sub_1BC08A7EC();
      a1 = v68;
      swift_bridgeObjectRelease();
      v45(v51, v14);
      *(_WORD *)(v40 + 42) = 2082;
      v56 = v85;
      sub_1BC089538();
      sub_1BBFDC1EC(0, &qword_1ED69BAC8);
      v57 = sub_1BC08A3E4();
      v87 = sub_1BBFDE0F8(v57, v58, &v88);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      v45(v56, v14);
      v59 = v65;
      _os_log_impl(&dword_1BBFD7000, v65, (os_log_type_t)v66, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v40, 0x34u);
      v60 = v67;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v60, -1, -1);
      MEMORY[0x1BCCE9C40](v40, -1, -1);

    }
    else
    {
      v63 = *(void (**)(char *, uint64_t))(v83 + 8);
      v63(v22, v14);
      v63(v36, v14);
      v63(v84, v14);
      v63(v85, v14);

    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v86, v80);
    v87 = sub_1BC003FC8(a1);
    v64 = sub_1BC089FB8();
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v64);
    v61 = sub_1BC08A180();
    swift_release();
    result = swift_release();
  }
  else
  {
    sub_1BC08A06C();
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v30);
    v61 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  }
  *v82 = v61;
  return result;
}

uint64_t sub_1BC003F2C()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_1BC003FC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v93 = a1;
  v2 = *v1;
  v3 = sub_1BC08952C();
  v87 = *(_QWORD *)(v3 - 8);
  v88 = v3;
  MEMORY[0x1E0C80A78](v3);
  v86 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v2 + 88);
  v90 = *(_QWORD *)(v2 + 80);
  v91 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedTypeWitness();
  v85 = type metadata accessor for GeneratorPipelineManagerWrapper(255, v8, v9, v10);
  v11 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v12 = sub_1BC089FB8();
  v82 = v12;
  v66 = type metadata accessor for GeneratorPipelineManagerWrapper(255, v7, v13, v14);
  v67 = v11;
  v15 = sub_1BC089FB8();
  v79 = v15;
  v16 = MEMORY[0x1E0C95D90];
  v17 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v12);
  v81 = v17;
  v78 = MEMORY[0x1BCCE9B68](v16, v15);
  v101 = v12;
  v102 = v15;
  v103 = v17;
  v104 = v78;
  v83 = sub_1BC089EEC();
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v80 = (char *)&v62 - v18;
  v89 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v19, v20);
  v74 = *(_QWORD *)(v89 - 8);
  v76 = *(_QWORD *)(v74 + 64);
  MEMORY[0x1E0C80A78](v89);
  v71 = (char *)&v62 - v21;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v22 = sub_1BC089FB8();
  MEMORY[0x1BCCE9B68](v16, v22);
  v23 = sub_1BC089E20();
  v72 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v62 = (uint64_t)&v62 - v24;
  v65 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C957C0], v23);
  v25 = sub_1BC089EA4();
  v75 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v63 = (char *)&v62 - v26;
  v68 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v25);
  v101 = v25;
  v102 = v11;
  v103 = v68;
  v104 = MEMORY[0x1E0DEDB38];
  v69 = sub_1BC089F04();
  v73 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v64 = (char *)&v62 - v27;
  v28 = v92;
  v70 = v92 + 20;
  v30 = v92[23];
  v29 = v92[24];
  __swift_project_boxed_opaque_existential_1(v92 + 20, v30);
  v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
  v31 = v90;
  v32 = v91;
  v98 = v90;
  v99 = v91;
  swift_getKeyPath();
  v33 = v89;
  v34 = v93;
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v100 = v101;
  v96 = v31;
  v97 = v32;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v36 = MEMORY[0x1BCCE9B68](&unk_1BC08C640, v22);
  v37 = v62;
  sub_1BC004890(v34, v28, KeyPath, v22, v36, v62);
  swift_release();
  swift_release();
  v38 = v74;
  v39 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v71, v34, v33);
  v40 = v38;
  v41 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v42 = swift_allocObject();
  v44 = v90;
  v43 = v91;
  *(_QWORD *)(v42 + 16) = v90;
  *(_QWORD *)(v42 + 24) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v42 + v41, v39, v33);
  v45 = v63;
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v37, v23);
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v44;
  *(_QWORD *)(v46 + 24) = v43;
  v47 = v44;
  v48 = v43;
  v49 = v64;
  sub_1BC08A21C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v25);
  v50 = v69;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v69);
  v51 = sub_1BC08A180();
  v76 = v51;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v50);
  v52 = v92[23];
  v53 = v92[24];
  __swift_project_boxed_opaque_existential_1(v70, v52);
  v101 = v51;
  v94 = v47;
  v95 = v48;
  swift_getKeyPath();
  v54 = v86;
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v55 = (*(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 40))(&v101, v54, v79, v78, v52, v53);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v88);
  v101 = v55;
  v56 = swift_allocObject();
  swift_weakInit();
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v47;
  v57[3] = v48;
  v57[4] = v56;
  v58 = v80;
  sub_1BC08A1F8();
  swift_release();
  swift_release();
  v59 = v83;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B78], v83);
  v60 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v58, v59);
  return v60;
}

uint64_t sub_1BC0047F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  v4 = swift_checkMetadataState();
  result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_1BC004890@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v29;
  void (*v30)(char *, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v39 = a3;
  v37 = a5;
  v38 = a6;
  v33 = a4;
  v35 = a1;
  v36 = a2;
  v8 = *a2;
  v9 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a3 + 8) + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v29 - v11;
  v13 = swift_allocObject();
  swift_weakInit();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v29 = v12;
  v34(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = a4;
  v16 = v9;
  v17 = *(_QWORD *)(v9 + 16);
  *((_QWORD *)v15 + 3) = v17;
  v18 = v17;
  v32 = *(_QWORD *)(v8 + 80);
  v19 = v37;
  *((_QWORD *)v15 + 4) = v32;
  *((_QWORD *)v15 + 5) = v19;
  v31 = *(_QWORD *)(v8 + 88);
  *((_QWORD *)v15 + 6) = v31;
  *((_QWORD *)v15 + 7) = v13;
  *((_QWORD *)v15 + 8) = v39;
  v30 = *(void (**)(char *, char *))(v10 + 32);
  v20 = v16;
  v30(&v15[v14], v12);
  v21 = swift_allocObject();
  swift_weakInit();
  v34(v12, v35, v20);
  v22 = (_QWORD *)swift_allocObject();
  v23 = v33;
  v22[2] = v33;
  v22[3] = v18;
  v24 = v18;
  v26 = v31;
  v25 = v32;
  v22[4] = v32;
  v22[5] = v19;
  v22[6] = v26;
  v22[7] = v21;
  v22[8] = v39;
  ((void (*)(char *, char *, uint64_t))v30)((char *)v22 + v14, v29, v20);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v23;
  v27[3] = v24;
  v27[4] = v25;
  v27[5] = v19;
  v27[6] = v26;
  v27[7] = sub_1BC00ABD4;
  v27[8] = v22;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC08A198();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1BC004B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v6 = sub_1BC089574();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - v12, a1, v11);
  v17 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v15, v16);
  sub_1BBFE1C58(a2 + *(int *)(v17 + 28), (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + *(int *)(v17 + 32), v6);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)((uint64_t)v13, v20, (uint64_t)v9, v11, a3);
}

uint64_t sub_1BC004C98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  int v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  _DWORD v54[4];
  unint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  const char *v59;
  _QWORD *v60;
  uint64_t AssociatedConformanceWitness;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v69 = a1;
  v70 = a2;
  v2 = sub_1BC08952C();
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  MEMORY[0x1E0C80A78](v2);
  v65 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC0892D4();
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v54 - v9;
  v66 = sub_1BC089D6C();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v71 = (uint64_t)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, v12, v13, v14);
  sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v15 = sub_1BC08A078();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v54 - v17;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v20 = (_QWORD *)Strong;
    v21 = (id)_HKLogPersistedSignposts();
    swift_retain();
    sub_1BC089D54();
    v24 = *(int *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v22, v23) + 28);
    v60 = v20;
    v25 = v69;
    v26 = (_QWORD *)(v69 + v24);
    v27 = *(_QWORD *)(v69 + v24 + 24);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v69 + v24), v27);
    v28 = sub_1BC015A44(v27);
    v58 = v29;
    v59 = v28;
    v57 = v30;
    v72 = 0x6F746172656E6547;
    v73 = 0xEB00000000203A72;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v31(v10, v25, AssociatedTypeWitness);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v56 = v72;
    v55 = v73;
    v54[3] = sub_1BC08A678();
    v33 = v62;
    v32 = v63;
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v6, *MEMORY[0x1E0D2D5F8], v63);
    v34 = (void *)sub_1BC0892C8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v32);
    sub_1BC00A718();
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1BC08C620;
    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    v36 = sub_1BC089220();
    v38 = v37;
    v39 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    v40 = sub_1BBFDF700();
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v38;
    v31(v10, v25, AssociatedTypeWitness);
    v41 = sub_1BC08A3E4();
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    *(_QWORD *)(v35 + 72) = v41;
    *(_QWORD *)(v35 + 80) = v42;
    v43 = v65;
    (*(void (**)(uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness);
    v44 = (void *)sub_1BC089514();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v68);
    v45 = sub_1BC089388();
    v47 = v46;

    *(_QWORD *)(v35 + 136) = v39;
    *(_QWORD *)(v35 + 144) = v40;
    *(_QWORD *)(v35 + 112) = v45;
    *(_QWORD *)(v35 + 120) = v47;
    sub_1BC089D3C();

    v48 = swift_bridgeObjectRelease();
    v49 = (void *)MEMORY[0x1BCCE96F4](v48);
    v50 = v25;
    v51 = v71;
    sub_1BC005210(v50, v60, (uint64_t)v59, v58, v57, v71, v56, v55, v70);
    objc_autoreleasePoolPop(v49);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v51, v66);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC08A06C();
    MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v15);
    v53 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    *v70 = v53;
  }
  return result;
}

uint64_t sub_1BC005210@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *KeyPath;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t (*v70)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[7];

  v100 = a8;
  v104 = a7;
  v99 = a6;
  v103 = a5;
  v102 = a4;
  v101 = a3;
  v110 = a1;
  v111 = a2;
  v108 = a9;
  v9 = *a2;
  v10 = sub_1BC08952C();
  v106 = *(_QWORD *)(v10 - 8);
  v107 = v10;
  MEMORY[0x1E0C80A78](v10);
  v105 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69B0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v98 = (uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v97 = (char *)&v75 - v15;
  v17 = *(_QWORD *)(v9 + 80);
  v16 = *(_QWORD *)(v9 + 88);
  swift_getAssociatedTypeWitness();
  v18 = v16;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v20, v21);
  v94 = *(_QWORD *)(v22 - 8);
  v96 = *(_QWORD *)(v94 + 64);
  MEMORY[0x1E0C80A78](v22);
  v93 = (char *)&v75 - v23;
  swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v25 = sub_1BC089FB8();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v25);
  v26 = sub_1BC089E20();
  v89 = *(_QWORD *)(v26 - 8);
  v80 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v75 - v27;
  v109 = type metadata accessor for GeneratorPipelineManagerWrapper(255, v24, v29, v30);
  v81 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C957C0], v26);
  v31 = sub_1BC089EA4();
  v91 = *(_QWORD *)(v31 - 8);
  v83 = v31;
  MEMORY[0x1E0C80A78](v31);
  v78 = (char *)&v75 - v32;
  v33 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
  v84 = v33;
  v82 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v31);
  v118[0] = v31;
  v118[1] = v33;
  v118[2] = v82;
  v118[3] = MEMORY[0x1E0DEDB38];
  v34 = sub_1BC089F04();
  v90 = *(_QWORD *)(v34 - 8);
  v85 = v34;
  v35 = MEMORY[0x1E0C80A78](v34);
  v88 = (char *)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v77 = (char *)&v75 - v37;
  v87 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v34);
  v92 = sub_1BC089E44();
  v95 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v86 = (char *)&v75 - v38;
  v39 = v17;
  v116 = v17;
  v117 = v18;
  v40 = v18;
  swift_getKeyPath();
  v41 = v22;
  v42 = v110;
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v118[6] = v118[0];
  v114 = v17;
  v115 = v40;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v44 = MEMORY[0x1BCCE9B68](&unk_1BC08C640, v25);
  v45 = v28;
  sub_1BC004890(v42, v111, KeyPath, v25, v44, (uint64_t)v28);
  swift_release();
  swift_release();
  v46 = v94;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  v48 = v93;
  v79 = v41;
  v47(v93, v42, v41);
  v49 = v46;
  v50 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v51 = swift_allocObject();
  v52 = v39;
  v76 = v39;
  *(_QWORD *)(v51 + 16) = v39;
  *(_QWORD *)(v51 + 24) = v40;
  v75 = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v51 + v50, v48, v41);
  v53 = v78;
  v54 = v80;
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v45, v54);
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v52;
  *(_QWORD *)(v55 + 24) = v40;
  v56 = v77;
  v57 = v83;
  sub_1BC08A21C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v57);
  v58 = (id)_HKLogPersistedSignposts();
  v59 = sub_1BC089D6C();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v97, v99, v59);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v59);
  v62 = v90;
  v63 = v85;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v88, v56, v85);
  sub_1BC00A9C8(v61, v98);
  swift_bridgeObjectRetain();
  v64 = v86;
  sub_1BC089E50();
  sub_1BC00AA24(v61);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v63);
  v65 = v92;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0D2E7F8], v92);
  v66 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v65);
  v67 = v111[23];
  v68 = v111[24];
  __swift_project_boxed_opaque_existential_1(v111 + 20, v67);
  v118[0] = v66;
  v112 = v76;
  v113 = v75;
  swift_getKeyPath();
  v69 = v105;
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v70 = *(uint64_t (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 48);
  v71 = sub_1BC089FB8();
  v72 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v71);
  v73 = v70(v118, v69, v71, v72, v67, v68);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v69, v107);
  result = swift_release();
  *v108 = v73;
  return result;
}

uint64_t sub_1BC005AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v4 = swift_checkMetadataState();
  result = v3(v4, AssociatedConformanceWitness);
  *a1 = result;
  return result;
}

uint64_t sub_1BC005BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v6 = sub_1BC089574();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - v12, a1, v11);
  v17 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v15, v16);
  sub_1BBFE1C58(a2 + *(int *)(v17 + 28), (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + *(int *)(v17 + 32), v6);
  return GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)((uint64_t)v13, v20, (uint64_t)v9, v11, a3);
}

uint64_t sub_1BC005D8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  v8 = sub_1BC08AB7C();
  if (v8)
  {
    v9 = v8;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  else
  {
    v9 = swift_allocError();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11, v7, AssociatedTypeWitness);
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1BC005F40()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_1BC006024(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a5;
  v54 = a1;
  v48[2] = a4;
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v48 - v11;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v48 - v16;
  sub_1BC00A264();
  v49 = *(_QWORD *)(v18 - 8);
  v50 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A2FC();
  v51 = *(_QWORD *)(v21 - 8);
  v52 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A3C4(0);
  v56 = *(_QWORD *)(v24 - 8);
  v57 = v24;
  MEMORY[0x1E0C80A78](v24);
  v55 = (char *)v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v58 = a2;
    sub_1BC089A60();
    swift_retain_n();
    sub_1BC08A060();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    sub_1BC089220();
    sub_1BC089A3C();
    sub_1BC089A48();
    sub_1BC00A4F4();
    v26 = sub_1BC08A0F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v58 = v26;
    sub_1BC009320();
    v28 = v27;
    v29 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    v30 = v55;
    sub_1BC08A0A8();
    swift_release();
    v58 = v28;
    v59 = v29;
    swift_getOpaqueTypeConformance2();
    v31 = v57;
    v32 = sub_1BC08A180();
    swift_release();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v33 = sub_1BC089220();
    v35 = v34;
    v36 = sub_1BC089A3C();
    v37 = sub_1BC089A48();
    v58 = v53;
    v38 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v38, MEMORY[0x1E0C95D90]);
    swift_retain();
    sub_1BC08A1C8();
    v39 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = v39;
    v40[3] = v33;
    v48[0] = v36;
    v48[1] = v35;
    v40[4] = v35;
    v40[5] = v36;
    v54 = v37;
    v40[6] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC089FAC();
    sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC009320();
    v42 = v41;
    sub_1BBFDA9C0(&qword_1ED69B170, (uint64_t (*)(uint64_t))sub_1BC00A264, MEMORY[0x1E0C95A38]);
    v43 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    v44 = v50;
    sub_1BC08A1F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v44);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B198, (uint64_t (*)(uint64_t))sub_1BC00A2FC, MEMORY[0x1E0C95B78]);
    v45 = v52;
    v46 = sub_1BC08A180();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = v46;
    v30 = v55;
    sub_1BC08A0A8();
    swift_release();
    v58 = v42;
    v59 = v43;
    swift_getOpaqueTypeConformance2();
    v31 = v57;
    v32 = sub_1BC08A180();
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v31);
  return v32;
}

uint64_t (*sub_1BC006630(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  __int128 v17[2];

  v6 = v5;
  v12 = *v6;
  v13 = swift_allocObject();
  swift_weakInit();
  sub_1BBFE1C58(a2, (uint64_t)v17);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(v12 + 80);
  v14[3] = *(_QWORD *)(v12 + 88);
  v14[4] = v13;
  v14[5] = a1;
  sub_1BBFE95C8(v17, (uint64_t)(v14 + 6));
  v14[11] = a3;
  v14[12] = a4;
  v14[13] = a5;
  v15 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1BC0091D4;
}

uint64_t sub_1BC006720(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v61 = a7;
  v62 = a8;
  v60 = a6;
  v64 = a5;
  sub_1BC009208(0, &qword_1ED69B2D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v52 - v13;
  sub_1BC009270();
  v54 = *(_QWORD *)(v15 - 8);
  v55 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00945C();
  v56 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC009524(0);
  v22 = v21;
  v59 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v58 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v53 = v22;
  v63 = Strong;
  v25 = (void *)sub_1BC08A618();
  v26 = (void *)sub_1BC089370();

  if (!v26)
  {
    swift_release();
LABEL_8:
    sub_1BBFDB354(0);
    sub_1BC08A06C();
    sub_1BC00A0CC((unint64_t *)&qword_1ED69B2C8, &qword_1ED69B2D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0], MEMORY[0x1E0C960D0]);
    v30 = sub_1BC08A180();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return v30;
  }
  v27 = objc_msgSend(v26, sel_type);
  if (v27 != (id)1)
  {
    if (v27 == (id)2)
    {
      __swift_project_boxed_opaque_existential_1(a4, a4[3]);
      v62 = v26;
      v32 = sub_1BC089220();
      v34 = v33;
      v35 = sub_1BC089A3C();
      v36 = sub_1BC089A48();
      v65 = v64;
      v37 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v38 = (_QWORD *)swift_allocObject();
      v38[2] = v37;
      v38[3] = v32;
      v38[4] = v34;
      v38[5] = v35;
      v61 = v34;
      v38[6] = v36;
      v39 = MEMORY[0x1E0C95D78];
      sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      v60 = v40;
      sub_1BC009320();
      sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v39, MEMORY[0x1E0C95D90]);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC08A1A4();
      swift_release();
      v41 = sub_1BBFDA9C0(&qword_1ED69A788, (uint64_t (*)(uint64_t))sub_1BC009270, MEMORY[0x1E0C95950]);
      v42 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
      v43 = v55;
      MEMORY[0x1BCCE8B48](v55, v41, v42);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v43);
      sub_1BBFDA9C0((unint64_t *)&qword_1ED69A6E0, (uint64_t (*)(uint64_t))sub_1BC00945C, MEMORY[0x1E0C95870]);
      v44 = v57;
      v45 = sub_1BC08A180();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = v45;
      v46 = sub_1BC08A0CC();
      swift_release();
      v65 = v46;
      sub_1BC00B7A0(0, &qword_1ED69A9B0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      v48 = v47;
      v49 = sub_1BC0095B0();
      v50 = v58;
      sub_1BC08A0A8();
      swift_release();
      v65 = v48;
      v66 = v49;
      swift_getOpaqueTypeConformance2();
      v51 = v53;
      v30 = sub_1BC08A180();

      swift_release();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v51);
      return v30;
    }
    if (v27 != (id)3)
    {
      sub_1BBFDB354(0);
      sub_1BC08A06C();
      sub_1BC00A0CC((unint64_t *)&qword_1ED69B2C8, &qword_1ED69B2D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0], MEMORY[0x1E0C960D0]);
      v30 = sub_1BC08A180();

      swift_release();
      goto LABEL_9;
    }
  }
  v28 = sub_1BC089A3C();
  v29 = sub_1BC089A48();
  v30 = sub_1BC009644(a3, a4, v28, v29, v64, v60, v61);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1BC006D18(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  int v16;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 32));
  v5 = sub_1BC089220();
  v7 = v6;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  if (v5 == sub_1BC089220() && v7 == v8)
    v10 = 1;
  else
    v10 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BBFDB42C(0, qword_1ED69D228, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  v11 = (void *)sub_1BC08955C();
  v12 = (void *)sub_1BC089370();

  v13 = objc_msgSend(a3, sel_profileIdentifier);
  v14 = v13;
  if (v12)
  {
    if (v13)
    {
      sub_1BBFDF744(0, &qword_1ED69DBB0);
      v15 = v12;
      v16 = sub_1BC08A7BC();

    }
    else
    {
      v16 = 0;
      v14 = v12;
    }
  }
  else
  {
    if (!v13)
    {
      v16 = 1;
      return v10 & v16 & 1;
    }
    v16 = 0;
  }

  return v10 & v16 & 1;
}

uint64_t sub_1BC006EAC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingPipelines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingPipelines.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*GeneratorPipelineManager.GenerationState.outstandingPipelines.modify())()
{
  return nullsub_1;
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingGenerators.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratorPipelineManager.GenerationState.outstandingGenerators.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GeneratorPipelineManager.GenerationState.outstandingGenerators.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC006F38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v5, v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v7 + 28)), *(_QWORD *)(a1 + *(int *)(v7 + 28) + 24));
  sub_1BC089220();
  sub_1BC00BC4C();
  v8 = sub_1BC08A804();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  result = swift_bridgeObjectRelease();
  *a2 = 0x3D6E6967756C70;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1BC007078@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  uint64_t v11;

  sub_1BC089064();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v7, v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a3 = result;
  a3[1] = v11;
  return result;
}

uint64_t sub_1BC007134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = a2;
  v21 = a3;
  v24 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = (char *)&v19 - v6;
  v7 = sub_1BC08952C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v11, v12);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v13 + 28)), *(_QWORD *)(a1 + *(int *)(v13 + 28) + 24));
  v27 = sub_1BC089220();
  v28 = v14;
  sub_1BC08A420();
  v25 = v20;
  v26 = v21;
  swift_getKeyPath();
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v15 = (void *)sub_1BC089514();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1BC089388();
  sub_1BC08A420();
  swift_bridgeObjectRelease();

  sub_1BC08A420();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, a1, AssociatedTypeWitness);
  sub_1BC08A3E4();
  sub_1BC08A420();
  result = swift_bridgeObjectRelease();
  v17 = v28;
  v18 = v24;
  *v24 = v27;
  v18[1] = v17;
  return result;
}

uint64_t sub_1BC007328@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v5, v6);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v7 + 28)), *(_QWORD *)(a1 + *(int *)(v7 + 28) + 24));
  sub_1BC089220();
  sub_1BC00BC4C();
  v8 = sub_1BC08A804();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  result = swift_bridgeObjectRelease();
  *a2 = 0x3D6E6967756C70;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1BC0074B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  uint64_t v11;

  sub_1BC089064();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for GeneratorPipelineManagerWrapper(255, AssociatedTypeWitness, v7, v8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a3 = result;
  a3[1] = v11;
  return result;
}

uint64_t sub_1BC0075BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  void *v9;
  uint64_t v11;

  v9 = (void *)MEMORY[0x1BCCE96F4]();
  a5(&v11, a2, a3, a4);
  objc_autoreleasePoolPop(v9);
  return v11;
}

uint64_t sub_1BC007628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v22 = a1;
  v26 = a4;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v24 = (char *)&v21 - v8;
  v23 = sub_1BC08952C();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v12, v13);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v14 + 28)), *(_QWORD *)(a1 + *(int *)(v14 + 28) + 24));
  v29 = sub_1BC089220();
  v30 = v15;
  sub_1BC08A420();
  v27 = a2;
  v28 = a3;
  swift_getKeyPath();
  v16 = v22;
  GeneratorPipelineManagerWrapper.subscript.getter();
  swift_release();
  v17 = (void *)sub_1BC089514();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  sub_1BC089388();
  sub_1BC08A420();
  swift_bridgeObjectRelease();

  sub_1BC08A420();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v16, AssociatedTypeWitness);
  sub_1BC08A3E4();
  sub_1BC08A420();
  result = swift_bridgeObjectRelease();
  v19 = v30;
  v20 = v26;
  *v26 = v29;
  v20[1] = v19;
  return result;
}

uint64_t sub_1BC007860(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BC08A270();
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC08A2B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = v3[19];
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = *(_QWORD *)(v6 + 80);
  v15[3] = *(_QWORD *)(v6 + 88);
  v15[4] = v14;
  v15[5] = a1;
  v15[6] = a2;
  aBlock[4] = sub_1BC009118;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = &block_descriptor_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC08A288();
  v21 = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BBFDB42C(0, &qword_1ED69DD20, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC009128();
  sub_1BC08A834();
  MEMORY[0x1BCCE90DC](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC007AA0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t result;
  void *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (void *)MEMORY[0x1BCCE96F4]();
    sub_1BC007B2C(a2);
    objc_autoreleasePoolPop(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC007B2C(void (*a1)(uint64_t *__return_ptr, _QWORD *))
{
  _QWORD v3[4];
  uint64_t v4;

  sub_1BC08A000();
  v3[0] = v3[2];
  v3[1] = v3[3];
  a1(&v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC089FF4();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t GeneratorPipelineManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_release();
  return v0;
}

uint64_t GeneratorPipelineManager.__deallocating_deinit()
{
  GeneratorPipelineManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC007C64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v10 = *a3;
  v11 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a3 + 8) + 24);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v21 - v13;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
    v16 = *(unsigned __int8 *)(v12 + 80);
    v21 = a6;
    v17 = (v16 + 64) & ~v16;
    v18 = (char *)swift_allocObject();
    *((_QWORD *)v18 + 2) = a5;
    *((_QWORD *)v18 + 3) = *(_QWORD *)(v11 + 16);
    v19 = *(_QWORD *)(v10 + *MEMORY[0x1E0DEC880]);
    v20 = v21;
    *((_QWORD *)v18 + 4) = *(_QWORD *)(v19 + 16);
    *((_QWORD *)v18 + 5) = v20;
    *((_QWORD *)v18 + 6) = *(_QWORD *)(v19 + 24);
    *((_QWORD *)v18 + 7) = a3;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v14, v11);
    swift_retain();
    sub_1BC007860((uint64_t)sub_1BC00AD54, (uint64_t)v18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC007DD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, _QWORD);
  _BYTE v19[32];

  v7 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a2 + 8) + 24);
  v8 = sub_1BC08A7D4();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v19[-v10];
  MEMORY[0x1E0C80A78](v9);
  v13 = *a1;
  v12 = a1[1];
  *a4 = v13;
  a4[1] = v12;
  (*(void (**)(_BYTE *, uint64_t))(v14 + 16))(&v19[-v15], a3 + *(int *)(v7 + 36));
  v16 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v11, a3, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = (uint64_t (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
  sub_1BC08A354();
  return v17(v19, 0);
}

uint64_t sub_1BC007F2C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = *a2;
  v10 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a2 + 8) + 24);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v20 - v12;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    v15 = *(unsigned __int8 *)(v11 + 80);
    v20 = a5;
    v16 = (v15 + 64) & ~v15;
    v17 = (char *)swift_allocObject();
    *((_QWORD *)v17 + 2) = a4;
    *((_QWORD *)v17 + 3) = *(_QWORD *)(v10 + 16);
    v18 = *(_QWORD *)(v9 + *MEMORY[0x1E0DEC880]);
    v19 = v20;
    *((_QWORD *)v17 + 4) = *(_QWORD *)(v18 + 16);
    *((_QWORD *)v17 + 5) = v19;
    *((_QWORD *)v17 + 6) = *(_QWORD *)(v18 + 24);
    *((_QWORD *)v17 + 7) = a2;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, v10);
    swift_retain();
    sub_1BC007860((uint64_t)sub_1BC00AC6C, (uint64_t)v17);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC008098@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, _QWORD);
  _BYTE v18[32];

  v7 = *(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DEC880] + *a2 + 8) + 24);
  v8 = sub_1BC08A7D4();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v18[-v10];
  MEMORY[0x1E0C80A78](v9);
  v13 = *a1;
  v12 = a1[1];
  *a4 = v13;
  a4[1] = v12;
  (*(void (**)(_BYTE *, uint64_t))(v14 + 16))(&v18[-v15], a3 + *(int *)(v7 + 36));
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v11, 1, 1, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = (uint64_t (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
  sub_1BC08A354();
  return v16(v18, 0);
}

uint64_t sub_1BC0081E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v7 = sub_1BC089DD8();
  v8 = sub_1BC08A678();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = a2;
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getMetatypeMetadata();
    v11 = sub_1BC08A3E4();
    v14 = sub_1BBFDE0F8(v11, v12, &v15);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v7, v8, "[%{public}s]: subscription to begin generation received", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v10, -1, -1);
    MEMORY[0x1BCCE9C40](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC008374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_1BC089F88();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v11 = sub_1BC089DE4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v10, a1, v4);
  v16 = sub_1BC089DD8();
  v17 = sub_1BC08A678();
  v32 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v31 = v12;
    v19 = v18;
    v29 = swift_slowAlloc();
    v33 = a2;
    v34 = v29;
    *(_DWORD *)v19 = 136446466;
    v30 = v11;
    swift_getMetatypeMetadata();
    v28 = v16;
    v20 = sub_1BC08A3E4();
    v33 = sub_1BBFDE0F8(v20, v21, &v34);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    v15(v8, (uint64_t)v10, v4);
    v22 = sub_1BC08A3E4();
    v33 = sub_1BBFDE0F8(v22, v23, &v34);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    v24 = v28;
    _os_log_impl(&dword_1BBFD7000, v28, (os_log_type_t)v32, "[%{public}s]: Sending completion event <%{public}s> for generation sent", (uint8_t *)v19, 0x16u);
    v25 = v29;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v25, -1, -1);
    MEMORY[0x1BCCE9C40](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1BC008660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_1BC089DE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v6 = sub_1BC089DD8();
  v7 = sub_1BC08A678();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = a1;
    v14 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_getMetatypeMetadata();
    v10 = sub_1BC08A3E4();
    v13 = sub_1BBFDE0F8(v10, v11, &v14);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v6, v7, "[%{public}s]: cancellation received for generation", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v9, -1, -1);
    MEMORY[0x1BCCE9C40](v8, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC0087F4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1BC008824()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1BC008854()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 144);
}

void sub_1BC008884()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AAD8)
  {
    sub_1BC0898EC();
    sub_1BC08985C();
    sub_1BBFDA9C0(&qword_1ED69A120, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E150], MEMORY[0x1E0D2E160]);
    v0 = sub_1BC08AC60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AAD8);
  }
}

uint64_t sub_1BC008914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC008884();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC008958(uint64_t a1)
{
  uint64_t v2;

  sub_1BC008884();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for GeneratorPipelineManager.GenerationState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeneratorPipelineManager.GenerationState);
}

uint64_t type metadata accessor for GeneratorPipelineManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeneratorPipelineManager);
}

void sub_1BC0089AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69C958)
  {
    sub_1BBFDF744(255, &qword_1ED69DBB0);
    sub_1BBFDF744(255, &qword_1ED69C938);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69C958);
  }
}

void sub_1BC008A38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BB60)
  {
    sub_1BC008A9C(255, (unint64_t *)&qword_1ED69C8D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    v0 = sub_1BC089B2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BB60);
  }
}

void sub_1BC008A9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v6 = sub_1BBFDF744(255, &qword_1ED69DBB0);
    v7 = sub_1BBFDF744(255, &qword_1ED69C938);
    v8 = sub_1BC008B60((unint64_t *)&qword_1ED69C950, &qword_1ED69DBB0, 0x1E0CB6A10, MEMORY[0x1E0DEFCF8]);
    v9 = a3(a1, v6, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC008B60(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BBFDF744(255, a2);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC008BA0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC008BB0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1BBFFEEC0(a1, v1[4], v1[2], v1[3]);
}

void sub_1BC008BBC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1BC00009C(a1, *(void **)(v2 + 16), a2);
}

void sub_1BC008BC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A9A0)
  {
    sub_1BC00BC08(255, &qword_1ED69C8E8);
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A9A0);
  }
}

void sub_1BC008C50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C870)
  {
    sub_1BC00BC08(255, &qword_1ED69C8E8);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C870);
  }
}

uint64_t sub_1BC008CC4()
{
  return sub_1BBFDA9C0(&qword_1ED69C868, (uint64_t (*)(uint64_t))sub_1BC008C50, MEMORY[0x1E0C95D90]);
}

uint64_t sub_1BC008CE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC008D08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC000644(a1, *(_QWORD *)(v2 + 16), *(void (**)(char *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_1BC008D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69C7E8;
  if (!qword_1ED69C7E8)
  {
    sub_1BC00BE50(255, &qword_1ED69C7F0, (uint64_t (*)(uint64_t))sub_1BC008C50, sub_1BC008CC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95A38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69C7E8);
  }
  return result;
}

uint64_t sub_1BC008D7C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC008DA8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1BC0087F4();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC008DD0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1BBFFDFB0(v0);
}

uint64_t sub_1BC008DF8()
{
  return 16;
}

__n128 sub_1BC008E04(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1BC008E10@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_1BC008824();
  *a1 = v2;
  return v2;
}

void sub_1BC008E38(id *a1)
{
  sub_1BBFFE050((uint64_t)*a1);
}

uint64_t sub_1BC008E60()
{
  return 16;
}

__n128 sub_1BC008E6C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC008E78@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1BC008854();
  return swift_retain();
}

uint64_t sub_1BC008EA0()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_1BBFFE100(v0);
}

uint64_t sub_1BC008EC8()
{
  return 16;
}

__n128 sub_1BC008ED4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of CoreGenerator.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreGenerator.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreGeneratorPipeline.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoreGeneratorPipeline.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1BC008F00()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for GeneratorPipelineManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.delegates.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.healthStore.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.notificationManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 320))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of GeneratorPipelineManager.makeHealthStore(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.makeGenerationStream(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of GeneratorPipelineManager.handleNewProfilesReceived(_:healthStores:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

void sub_1BC00903C()
{
  unint64_t v0;

  sub_1BC008884();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t type metadata accessor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext);
}

uint64_t method lookup function for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GeneratorPipelineManager.GeneratorPipelineManagerStreamContext.__allocating_init(sourceProfilePublisher:country:interactiveSharableModelPublisher:isLaunchGeneration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BC0090EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC009118()
{
  uint64_t v0;

  return sub_1BC007AA0(*(_QWORD *)(v0 + 32), *(void (**)(uint64_t *__return_ptr, _QWORD *))(v0 + 40));
}

unint64_t sub_1BC009128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DD28;
  if (!qword_1ED69DD28)
  {
    sub_1BBFDB42C(255, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DD28);
  }
  return result;
}

uint64_t sub_1BC009188()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0091D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC006720(a1, *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(void **)(v1 + 16));
}

void sub_1BC009208(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BBFDB354(255);
    v7 = a3(a1, v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC009270()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69A790)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(255, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC009320();
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC089EA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69A790);
  }
}

void sub_1BC009320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D688)
  {
    sub_1BC0093BC(255, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D688);
  }
}

void sub_1BC0093BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BBFDF744(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC00941C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC00AFBC(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC00945C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A6E8)
  {
    sub_1BC009320();
    sub_1BC009270();
    sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    sub_1BBFDA9C0(&qword_1ED69A788, (uint64_t (*)(uint64_t))sub_1BC009270, MEMORY[0x1E0C95950]);
    v0 = sub_1BC089E68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A6E8);
  }
}

void sub_1BC009524(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1ED69AD98)
  {
    sub_1BC00B7A0(255, &qword_1ED69A9B0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v5[0] = v2;
    v5[1] = sub_1BC0095B0();
    v3 = MEMORY[0x1BCCE9B38](a1, v5, MEMORY[0x1E0D2E830], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1ED69AD98);
  }
}

unint64_t sub_1BC0095B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A9A8;
  if (!qword_1ED69A9A8)
  {
    sub_1BC00B7A0(255, &qword_1ED69A9B0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A9A8);
  }
  return result;
}

uint64_t sub_1BC009610()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC009638(uint64_t a1)
{
  return sub_1BC00B368(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC04B064);
}

uint64_t sub_1BC009644(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t (*v76)(void);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100[2];
  uint64_t v101;

  v96 = a7;
  v97 = a2;
  v92 = a5;
  v98 = a4;
  v99 = a3;
  v95 = a1;
  sub_1BC00A028();
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  MEMORY[0x1E0C80A78](v8);
  v89 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A10C(0);
  v87 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  MEMORY[0x1E0C80A78](v10);
  v84 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A1C8(0, (unint64_t *)&qword_1ED69A7B0, v12, sub_1BBFDB354, (void (*)(void))sub_1BC00A248);
  v85 = *(_QWORD *)(v13 - 8);
  v86 = v13;
  MEMORY[0x1E0C80A78](v13);
  v83 = (char *)&v77 - v14;
  sub_1BC00A264();
  v80 = v15;
  v79 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A2FC();
  v82 = v18;
  v81 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v77 - v25;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v77 - v30;
  sub_1BC00A3C4(0);
  v33 = v32;
  v94 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v93 = (char *)&v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a6)
  {
    __swift_project_boxed_opaque_existential_1(v97, v97[3]);
    v61 = sub_1BC089220();
    v63 = v62;
    *(_QWORD *)&v100[0] = v92;
    v64 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v64, MEMORY[0x1E0C95D90]);
    swift_retain();
    sub_1BC08A1C8();
    v65 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v66 = (_QWORD *)swift_allocObject();
    v66[2] = v65;
    v66[3] = v61;
    v78 = v63;
    v67 = v99;
    v66[4] = v63;
    v66[5] = v67;
    v66[6] = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC089FAC();
    sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC009320();
    v69 = v68;
    sub_1BBFDA9C0(&qword_1ED69B170, (uint64_t (*)(uint64_t))sub_1BC00A264, MEMORY[0x1E0C95A38]);
    v70 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    v71 = v80;
    sub_1BC08A1F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v17, v71);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B198, (uint64_t (*)(uint64_t))sub_1BC00A2FC, MEMORY[0x1E0C95B78]);
    v72 = v82;
    v73 = sub_1BC08A180();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v72);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v100[0] = v73;
    v74 = v93;
    sub_1BC08A0A8();
    swift_release();
    *(_QWORD *)&v100[0] = v69;
    *((_QWORD *)&v100[0] + 1) = v70;
    swift_getOpaqueTypeConformance2();
    v75 = sub_1BC08A0CC();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v74, v33);
    *(_QWORD *)&v100[0] = v75;
    v76 = MEMORY[0x1E0C95D78];
    sub_1BC009208(0, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00A0CC((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v76, MEMORY[0x1E0C95D90]);
    v45 = sub_1BC08A180();
    swift_release();
    v36 = v97;
    v46 = v96;
    if (!v96)
      return v45;
    goto LABEL_3;
  }
  *(_QWORD *)&v100[0] = a6;
  v78 = a6;
  sub_1BC089A60();
  swift_retain_n();
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v35 = v33;
  v36 = v97;
  __swift_project_boxed_opaque_existential_1(v97, v97[3]);
  sub_1BC089220();
  sub_1BC00A4F4();
  v37 = sub_1BC08A0F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  *(_QWORD *)&v100[0] = v37;
  sub_1BC009320();
  v39 = v38;
  v40 = MEMORY[0x1E0C95D90];
  v41 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
  v42 = v93;
  sub_1BC08A0A8();
  swift_release();
  *(_QWORD *)&v100[0] = v39;
  *((_QWORD *)&v100[0] + 1) = v41;
  swift_getOpaqueTypeConformance2();
  v43 = sub_1BC08A0CC();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v42, v35);
  *(_QWORD *)&v100[0] = v43;
  v44 = MEMORY[0x1E0C95D78];
  sub_1BC009208(0, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00A0CC((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v44, v40);
  v45 = sub_1BC08A180();
  swift_release();
  swift_release();
  v46 = v96;
  if (v96)
  {
LABEL_3:
    v101 = v46;
    sub_1BBFE1C58((uint64_t)v36, (uint64_t)v100);
    v47 = swift_allocObject();
    sub_1BBFE95C8(v100, v47 + 16);
    v48 = v95;
    *(_QWORD *)(v47 + 56) = v95;
    sub_1BC00A130();
    sub_1BC00A1AC();
    swift_retain();
    v49 = v48;
    v50 = v84;
    sub_1BC08A1D4();
    swift_release();
    sub_1BBFDB354(0);
    sub_1BC00A248();
    v51 = v83;
    v52 = v88;
    sub_1BC08A1A4();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v50, v52);
    sub_1BC00A48C();
    v53 = v86;
    v54 = sub_1BC08A0C0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v53);
    *(_QWORD *)&v100[0] = v54;
    v55 = MEMORY[0x1E0C95D78];
    sub_1BC009208(0, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00A0CC((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v55, MEMORY[0x1E0C95D90]);
    v56 = sub_1BC08A180();
    swift_release();
    *(_QWORD *)&v100[0] = v56;
    v101 = v45;
    v57 = v89;
    sub_1BC08A15C();
    sub_1BBFDA9C0(&qword_1ED69B140, (uint64_t (*)(uint64_t))sub_1BC00A028, MEMORY[0x1E0D2A5D0]);
    v58 = v91;
    v59 = sub_1BC08A180();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v58);
    return v59;
  }
  return v45;
}

void sub_1BC00A028()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69B148)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC009208(255, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00A0CC((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC089E8C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69B148);
  }
}

uint64_t sub_1BC00A0CC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC009208(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC00A10C(uint64_t a1)
{
  sub_1BC00BE50(a1, &qword_1ED69A7F0, (uint64_t (*)(uint64_t))sub_1BC00A130, sub_1BC00A1AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0]);
}

void sub_1BC00A130()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D648)
  {
    sub_1BBFDB42C(255, qword_1ED69D228, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D648);
  }
}

uint64_t sub_1BC00A1AC()
{
  return sub_1BBFDA9C0(&qword_1ED69D640, (uint64_t (*)(uint64_t))sub_1BC00A130, MEMORY[0x1E0C95D90]);
}

void sub_1BC00A1C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1BC089EA4();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC00A248()
{
  return sub_1BBFDA9C0(&qword_1ED69A7E8, (uint64_t (*)(uint64_t))sub_1BC00A10C, MEMORY[0x1E0C95AD0]);
}

void sub_1BC00A264()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69B178)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(255, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC089EBC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69B178);
  }
}

void sub_1BC00A2FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B1A0)
  {
    sub_1BC009320();
    sub_1BC00A264();
    sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    sub_1BBFDA9C0(&qword_1ED69B170, (uint64_t (*)(uint64_t))sub_1BC00A264, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B1A0);
  }
}

void sub_1BC00A3C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_1ED69ADA0)
  {
    sub_1BC009320();
    v5[0] = v2;
    v5[1] = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    v3 = MEMORY[0x1BCCE9B38](a1, v5, MEMORY[0x1E0D2E830], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1ED69ADA0);
  }
}

uint64_t sub_1BC00A454()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1BC00A480(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC006D18(a1, (_QWORD *)(v1 + 16), *(void **)(v1 + 56));
}

unint64_t sub_1BC00A48C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A7A8;
  if (!qword_1ED69A7A8)
  {
    sub_1BC00A1C8(255, (unint64_t *)&qword_1ED69A7B0, sub_1BC00A10C, sub_1BBFDB354, (void (*)(void))sub_1BC00A248);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A7A8);
  }
  return result;
}

unint64_t sub_1BC00A4F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AE20;
  if (!qword_1ED69AE20)
  {
    sub_1BC00B7A0(255, &qword_1ED69AE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AE20);
  }
  return result;
}

uint64_t sub_1BC00A558()
{
  return 16;
}

__n128 sub_1BC00A564(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC00A570()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = (int *)type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v2, v3);
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = v0 + ((v5 + 32) & ~v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v6, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1(v6 + v4[7]);
  v7 = v6 + v4[8];
  v8 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v6 + v4[9];
  v10 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1BC00A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v6, v7)- 8)+ 80);
  return sub_1BC004B18(a1, v2 + ((v8 + 32) & ~v8), a2);
}

uint64_t sub_1BC00A6E0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC00A6F4()
{
  return 16;
}

__n128 sub_1BC00A700(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC00A70C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC004C98(a1, a2);
}

void sub_1BC00A718()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DBD8)
  {
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DBE0);
    v0 = sub_1BC08AB70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DBD8);
  }
}

uint64_t sub_1BC00A780()
{
  return 16;
}

__n128 sub_1BC00A78C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC00A798()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = (int *)type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v2, v3);
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = v0 + ((v5 + 32) & ~v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v6, AssociatedTypeWitness);
  __swift_destroy_boxed_opaque_existential_1(v6 + v4[7]);
  v7 = v6 + v4[8];
  v8 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v6 + v4[9];
  v10 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t sub_1BC00A8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v6, v7)- 8)+ 80);
  return sub_1BC005BC4(a1, v2 + ((v8 + 32) & ~v8), a2);
}

uint64_t sub_1BC00A9A0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC00A9B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC005D8C(a1, a2);
}

uint64_t sub_1BC00A9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, &qword_1ED69B0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC00AA24(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDB42C(0, &qword_1ED69B0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC00AA7C()
{
  return 16;
}

__n128 sub_1BC00AA88(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC00AA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 40);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, *(_QWORD *)(v4 + 24), a3, a4)- 8)+ 80);
  return sub_1BC007C64(a1, *(_QWORD *)(v4 + 56), *(uint64_t **)(v4 + 64), v4 + ((v8 + 72) & ~v8), v6, v7);
}

uint64_t objectdestroy_73Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 24);
  v6 = (int *)type metadata accessor for GeneratorPipelineManagerWrapper(0, v5, a3, a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = (v7 + 72) & ~v7;
  swift_release();
  swift_release();
  v9 = v4 + v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_1(v9 + v6[7]);
  v10 = v9 + v6[8];
  v11 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v9 + v6[9];
  v13 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_1BC00ABD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 40);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, *(_QWORD *)(v4 + 24), a3, a4)- 8)+ 80);
  return sub_1BC007F2C(*(_QWORD *)(v4 + 56), *(uint64_t **)(v4 + 64), v4 + ((v7 + 72) & ~v7), v5, v6);
}

uint64_t sub_1BC00AC24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00AC48()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_1BC00AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC00AD60(a1, (uint64_t (*)(uint64_t, _QWORD, char *, uint64_t, uint64_t))sub_1BC008098, a3, a4);
}

uint64_t objectdestroy_83Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 24);
  v6 = (int *)type metadata accessor for GeneratorPipelineManagerWrapper(0, v5, a3, a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = (v7 + 64) & ~v7;
  swift_release();
  v9 = v4 + v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_1(v9 + v6[7]);
  v10 = v9 + v6[8];
  v11 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v9 + v6[9];
  v13 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_1BC00AD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC00AD60(a1, (uint64_t (*)(uint64_t, _QWORD, char *, uint64_t, uint64_t))sub_1BC007DD0, a3, a4);
}

uint64_t sub_1BC00AD60(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *((_QWORD *)v4 + 2);
  v7 = *((_QWORD *)v4 + 5);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeneratorPipelineManagerWrapper(0, *((_QWORD *)v4 + 3), a3, a4)- 8)+ 80);
  return a2(a1, *((_QWORD *)v4 + 7), &v4[(v8 + 64) & ~v8], v6, v7);
}

uint64_t sub_1BC00ADD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00ADFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC003720(a1, *(_QWORD *)(v2 + 40), *(NSObject **)(v2 + 16), *(NSObject **)(v2 + 24), a2);
}

uint64_t sub_1BC00AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC003280(a1, a2);
}

uint64_t sub_1BC00AE24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1BC00AE48@<D0>(__int128 *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC003350(a1, a2);
}

uint64_t sub_1BC00AE54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for GeneratorPipelineManagerWrapper(0, AssociatedTypeWitness, v5, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
}

void sub_1BC00AEC4()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, _QWORD);
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED69B248)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(255, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0D29B38];
    sub_1BC00AFBC(255, qword_1ED69AE48, MEMORY[0x1E0D29B38]);
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC00941C(&qword_1ED69AE40, qword_1ED69AE48, v1, MEMORY[0x1E0D29B40]);
    v2 = sub_1BC089F58();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED69B248);
  }
}

void sub_1BC00AFBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0093BC(255, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC00B05C()
{
  return sub_1BBFDA9C0(&qword_1ED69B240, (uint64_t (*)(uint64_t))sub_1BC00AEC4, MEMORY[0x1E0C95C98]);
}

unint64_t sub_1BC00B078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B0E0;
  if (!qword_1ED69B0E0)
  {
    sub_1BC00BE50(255, (unint64_t *)&qword_1ED69B0E8, (uint64_t (*)(uint64_t))sub_1BC00AEC4, sub_1BC00B05C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95758]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B0E0);
  }
  return result;
}

uint64_t sub_1BC00B0E0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00B11C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC006024(a1, v1[2], v1 + 3, v1[8], v1[9]);
}

unint64_t sub_1BC00B12C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B250;
  if (!qword_1ED69B250)
  {
    sub_1BC00B7A0(255, &qword_1ED69B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B250);
  }
  return result;
}

void sub_1BC00B18C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69B238)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78];
    sub_1BC00B7A0(255, &qword_1ED69B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B7A0(255, &qword_1ED69AE38, v0, MEMORY[0x1E0D29B38]);
    sub_1BC00B12C();
    sub_1BC00B244();
    v1 = sub_1BC089F58();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69B238);
  }
}

unint64_t sub_1BC00B244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AE30;
  if (!qword_1ED69AE30)
  {
    sub_1BC00B7A0(255, &qword_1ED69AE38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], MEMORY[0x1E0D29B38]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0D29B40], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AE30);
  }
  return result;
}

uint64_t sub_1BC00B2A4()
{
  return sub_1BBFDA9C0(&qword_1ED69B230, (uint64_t (*)(uint64_t))sub_1BC00B18C, MEMORY[0x1E0C95C98]);
}

unint64_t sub_1BC00B2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B0D0;
  if (!qword_1ED69B0D0)
  {
    sub_1BC00BE50(255, (unint64_t *)&qword_1ED69B0D8, (uint64_t (*)(uint64_t))sub_1BC00B18C, sub_1BC00B2A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95758]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B0D0);
  }
  return result;
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC00B368(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_1BC00B37C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69C820)
  {
    v0 = MEMORY[0x1E0D2D700];
    sub_1BC00BC08(255, &qword_1ED69C8E8);
    sub_1BC00B430(&qword_1ED69C8F0, &qword_1ED69C8E8, v0, MEMORY[0x1E0DEAF38]);
    v1 = sub_1BC089F28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69C820);
  }
}

uint64_t sub_1BC00B430(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC00BC08(255, a2);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC00B470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B410)
  {
    sub_1BC00B7A0(255, &qword_1ED69B450, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B9C4(255, &qword_1ED69A6B8, (void (*)(uint64_t))sub_1BC00B37C, (void (*)(void))sub_1BC00B5A4);
    sub_1BC00B5C0();
    sub_1BC00B620();
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B410);
  }
}

void sub_1BC00B528()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69B3B8)
  {
    sub_1BBFDB42C(255, &qword_1ED69B3B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69B3B8);
  }
}

uint64_t sub_1BC00B5A4()
{
  return sub_1BBFDA9C0(&qword_1ED69C818, (uint64_t (*)(uint64_t))sub_1BC00B37C, MEMORY[0x1E0C95C10]);
}

unint64_t sub_1BC00B5C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B448;
  if (!qword_1ED69B448)
  {
    sub_1BC00B7A0(255, &qword_1ED69B450, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B448);
  }
  return result;
}

unint64_t sub_1BC00B620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A6B0;
  if (!qword_1ED69A6B0)
  {
    sub_1BC00B9C4(255, &qword_1ED69A6B8, (void (*)(uint64_t))sub_1BC00B37C, (void (*)(void))sub_1BC00B5A4);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A6B0);
  }
  return result;
}

uint64_t sub_1BC00B680()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00B6A4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC001628(a1, a2);
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00B6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC001F78(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC00B6EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00B710@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 32))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1BC00B740@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC002240(a1, *(void **)(v2 + 24), *(uint64_t **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1BC00B760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC0024B4(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

void sub_1BC00B784(uint64_t a1)
{
  sub_1BC00B7A0(a1, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC00B7A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC00B820()
{
  return sub_1BBFDA9C0(&qword_1ED69AD40, (uint64_t (*)(uint64_t))sub_1BC00B784, MEMORY[0x1E0C95D90]);
}

void sub_1BC00B83C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B3F0)
  {
    sub_1BC00A1C8(255, (unint64_t *)&qword_1ED69B3E0, sub_1BC00B784, (void (*)(uint64_t))sub_1BC00B528, (void (*)(void))sub_1BC00B820);
    sub_1BBFDB42C(255, &qword_1ED69B460, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    sub_1BC00B8FC();
    sub_1BC00B964();
    v0 = sub_1BC089EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B3F0);
  }
}

unint64_t sub_1BC00B8FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B3D8;
  if (!qword_1ED69B3D8)
  {
    sub_1BC00A1C8(255, (unint64_t *)&qword_1ED69B3E0, sub_1BC00B784, (void (*)(uint64_t))sub_1BC00B528, (void (*)(void))sub_1BC00B820);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B3D8);
  }
  return result;
}

unint64_t sub_1BC00B964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B458;
  if (!qword_1ED69B458)
  {
    sub_1BBFDB42C(255, &qword_1ED69B460, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B458);
  }
  return result;
}

void sub_1BC00B9C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    a4();
    v6 = sub_1BC089E5C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC00BA60()
{
  return sub_1BBFDA9C0(&qword_1ED69B3E8, (uint64_t (*)(uint64_t))sub_1BC00B83C, MEMORY[0x1E0C959F8]);
}

void sub_1BC00BA7C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_1ED69B3C0)
  {
    v2 = MEMORY[0x1BCCE9B38](0, a2, MEMORY[0x1E0D2E468], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1ED69B3C0);
  }
}

unint64_t sub_1BC00BAD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE018;
  if (!qword_1EF3EE018)
  {
    sub_1BC00B7A0(255, &qword_1ED69B468, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE018);
  }
  return result;
}

uint64_t sub_1BC00BB34()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC00BB58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC001ACC(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC00BB60@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC001B20(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1BC00BB68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B3C8;
  if (!qword_1ED69B3C8)
  {
    sub_1BC00B9C4(255, &qword_1ED69B3D0, (void (*)(uint64_t))sub_1BC00B83C, (void (*)(void))sub_1BC00BA60);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B3C8);
  }
  return result;
}

uint64_t sub_1BC00BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC0075BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1BC006F38);
}

uint64_t sub_1BC00BBE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC007078(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), a2);
}

void sub_1BC00BC08(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC08A534();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BC00BC4C()
{
  unint64_t result;

  result = qword_1ED69DC98;
  if (!qword_1ED69DC98)
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED69DC98);
  }
  return result;
}

uint64_t sub_1BC00BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC0075BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1BC007134);
}

uint64_t sub_1BC00BCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC0075BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1BC007328);
}

uint64_t sub_1BC00BCD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC0074B8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), a2);
}

uint64_t sub_1BC00BCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC0075BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1BC007628);
}

uint64_t sub_1BC00BD10()
{
  return swift_deallocObject();
}

uint64_t sub_1BC00BD20(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC0081E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC00BD28()
{
  return swift_deallocObject();
}

uint64_t sub_1BC00BD38(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC008374(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC00BD40()
{
  return swift_deallocObject();
}

uint64_t sub_1BC00BD50()
{
  uint64_t v0;

  return sub_1BC008660(*(_QWORD *)(v0 + 16));
}

void sub_1BC00BD58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DCF0)
  {
    v0 = sub_1BC08AAC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DCF0);
  }
}

void sub_1BC00BDC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69C9A0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69C9A0);
  }
}

_OWORD *sub_1BC00BE28(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BC00BE38(uint64_t a1, void **a2)
{
  sub_1BC000DF4(a1, a2);
}

void sub_1BC00BE50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_1BC00BEC0()
{
  return swift_deallocObject();
}

BOOL sub_1BC00BED0(_QWORD **a1)
{
  uint64_t v1;

  return sub_1BC00107C(a1, *(_QWORD *)(v1 + 32));
}

unint64_t sub_1BC00BEDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69C808;
  if (!qword_1ED69C808)
  {
    sub_1BC00BE50(255, &qword_1ED69C810, (uint64_t (*)(uint64_t))sub_1BC008C50, sub_1BC008CC4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95AD0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69C808);
  }
  return result;
}

uint64_t sub_1BC00BF44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC00BBE8(a1, a2);
}

uint64_t sub_1BC00BF58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC00BCD0(a1, a2);
}

uint64_t Keyword.localizedIdentifier.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_identifier);
  v3 = sub_1BC08A3C0();
  v5 = v4;

  v12 = sub_1BC089640();
  v13 = v6;
  sub_1BC00C0A0();
  sub_1BC00C0E4();
  LOBYTE(v2) = sub_1BC08A378();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return 0;
  v7 = objc_msgSend(v1, sel_identifier, v12, v13, v3, v5);
  v8 = HKDisplayCategoryIdentifierFromString();

  if (v8 != -1)
    return 0;
  v10 = objc_msgSend(v1, sel_identifier);
  v9 = sub_1BC08A3C0();

  return v9;
}

unint64_t sub_1BC00C0A0()
{
  unint64_t result;

  result = qword_1ED69ABB8[0];
  if (!qword_1ED69ABB8[0])
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, qword_1ED69ABB8);
  }
  return result;
}

unint64_t sub_1BC00C0E4()
{
  unint64_t result;

  result = qword_1ED69ABB0;
  if (!qword_1ED69ABB0)
  {
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED69ABB0);
  }
  return result;
}

uint64_t Set<>.correspondingKeywords.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFCF8]);
  v0 = sub_1BC08A594();
  sub_1BBFEC21C();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEB3D0], v0);
  sub_1BC00C210();
  v1 = sub_1BC08A474();
  v2 = sub_1BBFFA42C(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC00C1E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s14HealthPlatform7KeywordC0aB4CoreE11identifiers3forSaySSGSo12HKObjectTypeC_tFZ_0();
  *a1 = result;
  return result;
}

unint64_t sub_1BC00C210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69C900;
  if (!qword_1ED69C900)
  {
    sub_1BBFEC21C();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69C900);
  }
  return result;
}

uint64_t Keyword.uniqueIdentifier.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[2];

  swift_getObjectType();
  v1 = sub_1BC089064();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = sub_1BC08AC9C();
  v8[1] = v5;
  sub_1BC08A420();
  v6 = objc_msgSend(v0, sel_identifier);
  sub_1BC08A3C0();

  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  sub_1BC089058();
  sub_1BC00C384();
  sub_1BC08AB64();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v8[0];
}

unint64_t sub_1BC00C384()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69BAA0;
  if (!qword_1ED69BAA0)
  {
    v1 = sub_1BC089064();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69BAA0);
  }
  return result;
}

unint64_t Keyword.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_1BC00C3E8()
{
  return 0xD000000000000016;
}

uint64_t sub_1BC00C404()
{
  return Keyword.uniqueIdentifier.getter();
}

void sub_1BC00C424(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC00C46C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC00C54C + 4 * byte_1BC08C968[a2]))(0x4420372074736150);
}

uint64_t sub_1BC00C54C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4420372074736150 && v1 == 0xEB00000000737961)
    v2 = 1;
  else
    v2 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BC00C680(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657461645F746573;
  else
    v3 = 7364980;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x657461645F746573;
  else
    v5 = 7364980;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC00C71C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C6C657764;
  else
    v3 = 7364980;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C6C657764;
  else
    v5 = 7364980;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t ModelTrainingScenarioExecutor.__allocating_init(coordinator:store:)(__int128 *a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1BBFE95C8(a1, v4 + 16);
  sub_1BBFE95C8(a2, v4 + 56);
  return v4;
}

uint64_t ModelTrainingScenarioExecutor.init(coordinator:store:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;

  sub_1BBFE95C8(a1, v2 + 16);
  sub_1BBFE95C8(a2, v2 + 56);
  return v2;
}

uint64_t sub_1BC00C840(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v2 + 2;
  v7 = v2[5];
  v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  return RelevanceEngineCoordinator.saveModelToDisk(completion:)(a1, a2, v7, v6);
}

void sub_1BC00C894(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD aBlock[6];

  v4 = v3;
  sub_1BC00CD90(0, (unint64_t *)&qword_1ED69DBF8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v53 - v11;
  v12 = sub_1BC089028();
  v60 = *(_QWORD *)(v12 - 8);
  v61 = v12;
  MEMORY[0x1E0C80A78](v12);
  v53 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00CD90(0, &qword_1EF3EE020, (void (*)(uint64_t))type metadata accessor for ModelTrainingCommand);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v53 - v15;
  v17 = type metadata accessor for ModelTrainingCommand(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v59 = (uint64_t)&v53 - v22;
  v24 = *a1;
  v23 = a1[1];
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v55 = v23;
    v56 = a3;
    v58 = a2;
    v26 = v24 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v27 = *(_QWORD *)(v18 + 72);
    v54 = v24;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BBFDB550(v26, (uint64_t)v21, type metadata accessor for ModelTrainingCommand);
      if (*v21 == 1)
        break;
      v28 = sub_1BC08AB94();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
        goto LABEL_9;
      sub_1BC00CDDC((uint64_t)v21);
      v26 += v27;
      if (!--v25)
      {
        v29 = 1;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_9:
    sub_1BC00D664((uint64_t)v21, (uint64_t)v16, type metadata accessor for ModelTrainingCommand);
    v29 = 0;
LABEL_10:
    v23 = v55;
    a3 = v56;
    a2 = v58;
    v24 = v54;
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = 1;
  }
  v31 = v60;
  v30 = v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v29, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v32 = &qword_1EF3EE020;
    v33 = (void (*)(uint64_t))type metadata accessor for ModelTrainingCommand;
    v34 = (uint64_t)v16;
  }
  else
  {
    v35 = v59;
    sub_1BC00D664((uint64_t)v16, v59, type metadata accessor for ModelTrainingCommand);
    v36 = v35 + *(int *)(v17 + 24);
    v37 = v57;
    sub_1BC00D168(v36, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v37, 1, v30) != 1)
    {
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
      v58 = a2;
      v43 = v53;
      v42(v53, v37, v30);
      v44 = v4[5];
      v45 = v4[6];
      __swift_project_boxed_opaque_existential_1(v4 + 2, v44);
      v46 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45);
      v47 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v62, v43, v30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v47, 0, 1, v30);
      sub_1BC062064(v47);

      v48 = v43;
      a2 = v58;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v48, v30);
      sub_1BC00CDDC(v59);
      goto LABEL_17;
    }
    sub_1BC00CDDC(v35);
    v32 = (unint64_t *)&qword_1ED69DBF8;
    v33 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    v34 = v37;
  }
  sub_1BC00CE18(v34, v32, v33);
  v38 = v4[5];
  v39 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v38);
  v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
  v41 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v62, 1, 1, v30);
  sub_1BC062064(v41);

LABEL_17:
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  v49 = (void *)sub_1BC0891C0();
  v50 = (_QWORD *)swift_allocObject();
  v50[2] = v24;
  v50[3] = v23;
  v50[4] = v49;
  v50[5] = v4;
  v50[6] = a2;
  v50[7] = a3;
  aBlock[4] = sub_1BC00D158;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = &block_descriptor_1;
  v51 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = v49;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v52, sel_performBlock_, v51);
  _Block_release(v51);

}

void sub_1BC00CD90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC08A7D4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC00CDDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModelTrainingCommand(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC00CE18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC00CD90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC00CE54(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;

  v37 = a3;
  v38 = a2;
  v10 = type metadata accessor for ModelTrainingCommand(0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v34 = a4;
  v35 = a5;
  v36 = a6;
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v16 = *(_QWORD *)(v11 + 72);
  v33 = a1;
  swift_bridgeObjectRetain_n();
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1BBFDB550(v15, (uint64_t)v13, type metadata accessor for ModelTrainingCommand);
    if ((*v13 & 1) != 0)
    {
      v18 = sub_1BC08AB94();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        sub_1BC00CDDC((uint64_t)v13);
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v20 = *((_QWORD *)v13 + 1);
    v19 = *((_QWORD *)v13 + 2);
    swift_bridgeObjectRetain();
    sub_1BC00CDDC((uint64_t)v13);
    if (v19)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BBFDD3F8(0, v17[2] + 1, 1, v17);
      v22 = v17[2];
      v21 = v17[3];
      if (v22 >= v21 >> 1)
        v17 = sub_1BBFDD3F8((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
      v17[2] = v22 + 1;
      v23 = &v17[2 * v22];
      v23[4] = v20;
      v23[5] = v19;
    }
LABEL_4:
    v15 += v16;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease_n();
  a5 = v35;
  a6 = v36;
  a4 = v34;
LABEL_17:
  v24 = sub_1BBFFA42C((uint64_t)v17);
  swift_bridgeObjectRelease();
  v25 = v37;
  swift_bridgeObjectRetain();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_1BC00D258(v26, v25, v24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  objc_msgSend(v25, sel_rollback);
  v28 = a4 + 2;
  v29 = a4[5];
  v30 = a4[6];
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = a5;
  *(_QWORD *)(v31 + 24) = a6;
  swift_retain();
  RelevanceEngineCoordinator.train(with:completion:)(v27, (uint64_t)sub_1BC00D644, v31, v29, v30);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BC00D114()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00D158()
{
  uint64_t v0;

  return sub_1BC00CE54(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BC00D168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC00CD90(0, (unint64_t *)&qword_1ED69DBF8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ModelTrainingScenarioExecutor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t ModelTrainingScenarioExecutor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelTrainingScenarioExecutor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ModelTrainingScenarioExecutor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.__allocating_init(coordinator:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.saveModelToDisk(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ModelTrainingScenarioExecutor.execute(scenario:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1BC00D258(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = v3;
  v44 = a2;
  v45 = a3;
  v43 = type metadata accessor for ModelTrainingElement(0);
  v6 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDF44C();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v49 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE451C(0, v11, 0);
    v12 = v49;
    v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = sub_1BC089C4C();
    v38 = *(_QWORD *)(v6 + 72);
    v39 = v14;
    do
    {
      v46 = v12;
      v15 = v42;
      sub_1BBFDB550(v13, (uint64_t)v42, type metadata accessor for ModelTrainingElement);
      v16 = FeedItem.init(context:modelTrainingElement:)((int *)v44, v15);
      v17 = objc_msgSend(v16, sel_featureTags);
      sub_1BC0895B0();
      sub_1BBFE266C();
      v18 = sub_1BC08A54C();

      v19 = sub_1BBFE2A44(v18);
      v47 = v4;
      swift_bridgeObjectRelease();
      sub_1BBFE26B4();
      v48 = v19;
      sub_1BC019310(v20);
      v21 = objc_msgSend(v16, sel_uniqueIdentifier);
      sub_1BC08A3C0();

      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D842D8]), sel_init);
      v23 = objc_allocWithZone(MEMORY[0x1E0D842E8]);
      v24 = (void *)sub_1BC08A3B4();
      swift_bridgeObjectRelease();
      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69C960);
      v25 = (void *)sub_1BC08A4BC();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v23, sel_initWithIdentifier_content_action_relevanceProviders_, v24, v22, 0, v25);

      v27 = (uint64_t *)(v13 + *(int *)(v43 + 56));
      v29 = *v27;
      v28 = v27[1];
      swift_bridgeObjectRetain();
      LOBYTE(v22) = sub_1BC04C92C(v29, v28, v45);
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(v16, sel_objectID);
      v31 = objc_msgSend(v30, sel_URIRepresentation);

      v32 = (char *)v10 + *(int *)(v41 + 48);
      sub_1BC088F8C();

      v33 = type metadata accessor for ModelTrainingEvent();
      sub_1BC08901C();

      v32[*(int *)(v33 + 20)] = 0;
      v32[*(int *)(v33 + 24)] = v22 & 1;
      *v10 = v26;
      v12 = v46;
      v49 = v46;
      v35 = *(_QWORD *)(v46 + 16);
      v34 = *(_QWORD *)(v46 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1BBFE451C(v34 > 1, v35 + 1, 1);
        v12 = v49;
      }
      *(_QWORD *)(v12 + 16) = v35 + 1;
      sub_1BC00D664((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v35, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v13 += v38;
      --v11;
      v4 = v47;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1BC00D620()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC00D644()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BC00D664(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC00D6A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v9;

  v0 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8];
  sub_1BC089664();
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    if (qword_1ED69DA08 != -1)
      swift_once();
    v3 = qword_1ED6A0618;
    v4 = (void *)sub_1BC08A3B4();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v4);

    v6 = objc_msgSend(v2, sel_customRelevanceProviderForFeature_withValue_, v3, v5);
    if (v6)
    {
      v7 = v6;
      MEMORY[0x1BCCE8E84]();
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();

      return v9;
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v0;
}

void sub_1BC00D80C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BC08A3B4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0618 = (uint64_t)v1;
}

uint64_t sub_1BC00D87C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1ED69DA08 != -1)
    swift_once();
  sub_1BC0892BC();
  v0 = *(_QWORD *)(sub_1BC0892B0() + 16);
  swift_bridgeObjectRelease();
  result = sub_1BC05E094(v0);
  qword_1ED6A0620 = result;
  return result;
}

void sub_1BC00D8F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  sub_1BC00DA34();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B600;
  v1 = (void *)objc_opt_self();
  v2 = qword_1ED69A088;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = (void *)qword_1ED6A04E0;
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v5);

  v7 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v4, v6);
  if (v7)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = v7;
    sub_1BC08A4E0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC00DA34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BA48)
  {
    v0 = sub_1BC08AB70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BA48);
  }
}

void sub_1BC00DA8C()
{
  void *v0;
  id v1;

  sub_1BC00DB08();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A04E0 = (uint64_t)v1;
}

unint64_t sub_1BC00DB08()
{
  unint64_t result;

  result = qword_1ED69A1B8;
  if (!qword_1ED69A1B8)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for LocalizedTitleFeatureTag, &type metadata for LocalizedTitleFeatureTag);
    atomic_store(result, (unint64_t *)&qword_1ED69A1B8);
  }
  return result;
}

uint64_t HealthExperienceStoreFeedItemContext.__allocating_init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(void *a1, _QWORD *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v16;
  uint64_t v17;

  v16 = a4 & 1;
  swift_allocObject();
  v17 = sub_1BC012FE0(a1, a2, a3, v16, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v17;
}

uint64_t sub_1BC00DC00()
{
  uint64_t result;

  result = sub_1BC08A3B4();
  qword_1ED69C948 = result;
  return result;
}

id static NSNotificationName.feedItemSubmissionOccurred.getter()
{
  if (qword_1ED69D6D0 != -1)
    swift_once();
  return (id)qword_1ED69C948;
}

unint64_t static HealthExperienceStoreFeedItemContext.feedItemChangeDomainKey.getter()
{
  return 0xD000000000000014;
}

void sub_1BC00DC90(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;
  v5 = v2;

}

id sub_1BC00DCE4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 16);
}

uint64_t sub_1BC00DD14(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BBFE1C58(a1, (uint64_t)v5);
  v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1BBFE95C8(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC00DD78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1BBFE1C58(v1 + 24, a1);
}

uint64_t sub_1BC00DDC0(_OWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v3 + 64) = *a1;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1BC00DE20()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

void sub_1BC00DE60(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v2;
  v5 = v2;

}

id sub_1BC00DEB4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 80);
}

uint64_t sub_1BC00DEE4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1BC00DF14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  v4 = sub_1BC088E84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1BC00DF7C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1BC088E84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1BC00E040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  v4 = sub_1BC088E84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HealthExperienceStoreFeedItemContext.displayNamePublisher.getter()
{
  return swift_retain();
}

uint64_t HealthExperienceStoreFeedItemContext.pluginInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFE1C58(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo, a1);
}

uint64_t HealthExperienceStoreFeedItemContext.init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(void *a1, _QWORD *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  v11 = sub_1BC012FE0(a1, a2, a3, a4 & 1, a5, a6, a7, a8, a9, a10);

  swift_release();
  return v11;
}

uint64_t sub_1BC00E128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1BC00E17C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  a1[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a1[4] = sub_1BC01344C();
  v3 = (_QWORD *)swift_allocObject();
  *a1 = v3;
  v3[5] = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v3[6] = sub_1BBFDA9C0(&qword_1ED69BC20, type metadata accessor for HealthExperienceStoreFeedItemContext, (uint64_t)&protocol conformance descriptor for HealthExperienceStoreFeedItemContext);
  v3[2] = v1;
  return swift_retain();
}

uint64_t sub_1BC00E204(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  os_log_t v36;
  NSObject *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t isEscapingClosureAtFileLocation;
  NSObject *v50;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Class isa;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  void (*v68)(_QWORD);
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char v87;
  char *v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  NSObject *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  id v104;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  id v107;
  void *v108;
  _QWORD v109[2];
  int v110;
  os_log_t v111;
  NSObject *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  uint64_t v131;
  __int128 aBlock;
  __int128 v133;
  uint64_t (*v134)();
  uint64_t v135;
  NSObject *v136;

  v127 = *v1;
  v3 = sub_1BC088EC0();
  v4 = *(_QWORD **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC0897CC();
  v118 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v116 = (char *)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v119 = (char *)v109 - v10;
  v11 = (_QWORD *)sub_1BC089448();
  v130 = *(v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1E0C80A78](v123);
  v126 = (char *)v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1BC089DE4();
  v124 = *(_QWORD **)(v128 - 8);
  v15 = MEMORY[0x1E0C80A78](v128);
  v122 = (uint64_t)v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v117 = (char *)v109 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v121 = (char *)v109 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v109 - v21;
  sub_1BC089D90();
  v125 = v1;
  swift_retain_n();
  v129 = a1;
  swift_bridgeObjectRetain_n();
  v23 = sub_1BC089DD8();
  v24 = sub_1BC08A678();
  v25 = v24;
  v26 = os_log_type_enabled(v23, v24);
  v113 = v3;
  v115 = (char *)v4;
  v120 = v7;
  v114 = v6;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v111 = v23;
    v28 = v27;
    v112 = swift_slowAlloc();
    v136 = v112;
    *(_DWORD *)v28 = 136446722;
    v110 = v25;
    *(_QWORD *)&aBlock = v127;
    swift_getMetatypeMetadata();
    v29 = sub_1BC08A3E4();
    *(_QWORD *)&aBlock = sub_1BBFDE0F8(v29, v30, (uint64_t *)&v136);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    v109[1] = v28 + 14;
    v31 = v125;
    __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v125 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(_QWORD *)((char *)v125+ OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo+ 24));
    v32 = sub_1BC089220();
    *(_QWORD *)&aBlock = sub_1BBFDE0F8(v32, v33, (uint64_t *)&v136);
    sub_1BC08A7EC();
    v34 = (char *)v31;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2050;
    v35 = *(_QWORD *)(v129 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = v35;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    v36 = v111;
    _os_log_impl(&dword_1BBFD7000, v111, (os_log_type_t)v110, "[%{public}s][%{public}s] Plugin is requesting to commit %{public}ld change(s).", (uint8_t *)v28, 0x20u);
    v37 = v112;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v37, -1, -1);
    MEMORY[0x1BCCE9C40](v28, -1, -1);

  }
  else
  {

    v34 = (char *)v125;
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v38 = (_QWORD *)v124[1];
  v39 = v128;
  ((void (*)(char *, uint64_t))v38)(v22, v128);
  v40 = (uint64_t)v126;
  if (*(_QWORD *)(v129 + 16))
  {
    v124 = v38;
    v136 = 0;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1BC08976C();
    v122 = *(int *)(v123 + 20);
    *(_QWORD *)(v40 + v122) = v41;
    v42 = v34;
    v43 = *(void **)&v34[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext];
    v44 = (_QWORD *)swift_allocObject();
    v44[2] = v40;
    v44[3] = v34;
    v45 = (char *)v129;
    v44[4] = v129;
    v44[5] = &v136;
    v46 = v127;
    v44[6] = v127;
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_1BC013508;
    *(_QWORD *)(v47 + 24) = v44;
    v123 = (uint64_t)v44;
    v134 = sub_1BC00D644;
    v135 = v47;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v133 = sub_1BC00FE14;
    *((_QWORD *)&v133 + 1) = &block_descriptor_2;
    v48 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v43, sel_performBlockAndWait_, v48);
    _Block_release(v48);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (v136)
      {
        v50 = v136;
        swift_willThrow();
        sub_1BC013528(v40);

        return swift_release();
      }
      v62 = *(_QWORD *)(v40 + v122);
      v63 = *(_QWORD *)(v62 + 16);
      v64 = v128;
      if (v63)
      {
        v65 = v62 + ((LOBYTE(v130[10].isa) + 32) & ~(unint64_t)LOBYTE(v130[10].isa));
        isa = v130[9].isa;
        v67 = (void (*)(_QWORD, _QWORD, _QWORD))v130[2].isa;
        swift_bridgeObjectRetain_n();
        do
        {
          v67(v13, v65, v11);
          v68 = (void (*)(_QWORD))sub_1BC08940C();
          if (v68)
          {
            v69 = (uint64_t)v68;
            v68(v13);
            sub_1BBFE60FC(v69);
          }
          ((void (*)(char *, _QWORD *))v130[1].isa)(v13, v11);
          v65 += (uint64_t)isa;
          --v63;
        }
        while (v63);
        swift_bridgeObjectRelease_n();
        v64 = v128;
        v42 = (char *)v125;
        v46 = v127;
      }
      v70 = v121;
      sub_1BC089D90();
      swift_retain_n();
      v71 = sub_1BC089DD8();
      v72 = sub_1BC08A648();
      v73 = v72;
      if (os_log_type_enabled(v71, v72))
      {
        v74 = swift_slowAlloc();
        LODWORD(v130) = v73;
        v75 = v74;
        v129 = swift_slowAlloc();
        v131 = v129;
        *(_DWORD *)v75 = 136446466;
        *(_QWORD *)&aBlock = v46;
        swift_getMetatypeMetadata();
        v76 = sub_1BC08A3E4();
        *(_QWORD *)&aBlock = sub_1BBFDE0F8(v76, v77, &v131);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 12) = 2082;
        __swift_project_boxed_opaque_existential_1(&v42[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo], *(_QWORD *)&v42[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24]);
        v78 = sub_1BC089220();
        *(_QWORD *)&aBlock = sub_1BBFDE0F8(v78, v79, &v131);
        sub_1BC08A7EC();
        v80 = v42;
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v71, (os_log_type_t)v130, "[%{public}s][%{public}s] Executed afterCommit block for updated feed items.", (uint8_t *)v75, 0x16u);
        v81 = v129;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v81, -1, -1);
        MEMORY[0x1BCCE9C40](v75, -1, -1);

        v82 = v121;
      }
      else
      {

        v80 = v42;
        swift_release_n();
        v82 = v70;
      }
      v83 = v64;
      ((void (*)(char *, uint64_t))v124)(v82, v64);
      v40 = v120;
      v45 = v119;
      v84 = v118;
      v85 = v116;
      v48 = *(void **)(v118 + 16);
      v86 = v126;
      ((void (*)(char *, char *, uint64_t))v48)(v119, v126, v120);
      v87 = sub_1BC0897B4();
      v88 = v117;
      if ((v87 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v84 + 8))(v45, v40);
        v89 = (uint64_t)v86;
LABEL_27:
        sub_1BC013528(v89);

        return swift_release();
      }
      sub_1BC089D9C();
      ((void (*)(char *, char *, uint64_t))v48)(v85, v45, v40);
      v90 = v80;
      swift_retain_n();
      v91 = sub_1BC089DD8();
      v92 = sub_1BC08A654();
      v130 = v91;
      LODWORD(v129) = v92;
      if (os_log_type_enabled(v91, v92))
      {
        v93 = swift_slowAlloc();
        v122 = swift_slowAlloc();
        v131 = v122;
        *(_DWORD *)v93 = 136446722;
        *(_QWORD *)&aBlock = v127;
        swift_getMetatypeMetadata();
        v94 = sub_1BC08A3E4();
        *(_QWORD *)&aBlock = sub_1BBFDE0F8(v94, v95, &v131);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2082;
        __swift_project_boxed_opaque_existential_1(&v90[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo], *(_QWORD *)&v90[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24]);
        v96 = sub_1BC089220();
        *(_QWORD *)&aBlock = sub_1BBFDE0F8(v96, v97, &v131);
        v40 = v120;
        sub_1BC08A7EC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 22) = 2080;
        sub_1BBFDA9C0(&qword_1ED69AC78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DFC0], MEMORY[0x1E0D2DFD0]);
        v98 = sub_1BC08AB64();
        *(_QWORD *)&aBlock = sub_1BBFDE0F8(v98, v99, &v131);
        v45 = v119;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        v11 = *(_QWORD **)(v118 + 8);
        ((void (*)(char *, uint64_t))v11)(v85, v40);
        v100 = v130;
        _os_log_impl(&dword_1BBFD7000, v130, (os_log_type_t)v129, "[%{public}s][%{public}s] Posting feedItemSubmissionOccurred notification for change domain: %s, privacy: .public)", (uint8_t *)v93, 0x20u);
        v101 = v122;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v101, -1, -1);
        MEMORY[0x1BCCE9C40](v93, -1, -1);

        v102 = v117;
        v103 = v128;
      }
      else
      {
        swift_release_n();
        v11 = *(_QWORD **)(v84 + 8);
        ((void (*)(char *, uint64_t))v11)(v85, v40);

        v102 = v88;
        v103 = v83;
      }
      ((void (*)(char *, uint64_t))v124)(v102, v103);
      v42 = v115;
      isEscapingClosureAtFileLocation = (uint64_t)v114;
      if (qword_1ED69D6D0 == -1)
      {
LABEL_26:
        aBlock = 0u;
        v133 = 0u;
        v104 = (id)qword_1ED69C948;
        sub_1BC088E9C();
        sub_1BBFDB42C(0, &qword_1ED69CA48, (uint64_t (*)(uint64_t))sub_1BC00BDC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BC08B950;
        *(_QWORD *)&aBlock = 0xD000000000000014;
        *((_QWORD *)&aBlock + 1) = 0x80000001BC08EB40;
        sub_1BC08A90C();
        *(_QWORD *)(inited + 96) = v40;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 72));
        ((void (*)(uint64_t *, char *, uint64_t))v48)(boxed_opaque_existential_0, v45, v40);
        sub_1BBFFED84(inited);
        sub_1BC088EB4();
        v107 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v108 = (void *)sub_1BC088E90();
        objc_msgSend(v107, sel_postNotification_, v108);

        (*((void (**)(uint64_t, uint64_t))v42 + 1))(isEscapingClosureAtFileLocation, v113);
        ((void (*)(char *, uint64_t))v11)(v45, v40);
        v89 = (uint64_t)v126;
        goto LABEL_27;
      }
    }
    swift_once();
    goto LABEL_26;
  }
  v52 = v122;
  sub_1BC089D90();
  swift_retain_n();
  v53 = sub_1BC089DD8();
  v54 = sub_1BC08A660();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v124 = v38;
    v130 = v56;
    v136 = v56;
    *(_DWORD *)v55 = 136446466;
    *(_QWORD *)&aBlock = v127;
    swift_getMetatypeMetadata();
    v57 = sub_1BC08A3E4();
    *(_QWORD *)&aBlock = sub_1BBFDE0F8(v57, v58, (uint64_t *)&v136);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1(&v34[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo], *(_QWORD *)&v34[OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24]);
    v59 = sub_1BC089220();
    *(_QWORD *)&aBlock = sub_1BBFDE0F8(v59, v60, (uint64_t *)&v136);
    sub_1BC08A7EC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v53, v54, "[%{public}s][%{public}s] Empty commit was submitted; no work will be done",
      (uint8_t *)v55,
      0x16u);
    v61 = v130;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v61, -1, -1);
    MEMORY[0x1BCCE9C40](v55, -1, -1);

    return ((uint64_t (*)(uint64_t, uint64_t))v124)(v122, v128);
  }
  else
  {

    swift_release_n();
    return ((uint64_t (*)(uint64_t, uint64_t))v38)(v52, v39);
  }
}

void sub_1BC00F1B0(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  unsigned int v35;
  char *v36;
  id v37;
  NSObject *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD v76[2];
  int v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  char *v81;
  void **v82;
  void *v83;
  void (*v84)(NSObject *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88[2];

  v83 = a5;
  v88[1] = *MEMORY[0x1E0C80C00];
  v9 = sub_1BC089DE4();
  v84 = *(void (**)(NSObject *, uint64_t))(v9 - 8);
  v85 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = ((char *)v76 - v15);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v76 - v17;
  v19 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a2;
  sub_1BC00FE34(a3, (uint64_t)v21);
  v80 = v16;
  v81 = v12;
  sub_1BC013F00((uint64_t)v21, a1);
  v22 = *(void **)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  if (objc_msgSend(v22, sel_hasChanges))
  {
    v82 = a4;
    sub_1BC089D90();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v23 = sub_1BC089DD8();
    v24 = sub_1BC08A678();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v79 = a3;
      v27 = v26;
      v78 = swift_slowAlloc();
      v88[0] = v78;
      *(_DWORD *)v27 = 136446722;
      v77 = v25;
      v87 = v83;
      swift_getMetatypeMetadata();
      v28 = sub_1BC08A3E4();
      v87 = (id)sub_1BBFDE0F8(v28, v29, v88);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v76[1] = v27 + 14;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(_QWORD *)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
      v30 = sub_1BC089220();
      v87 = (id)sub_1BBFDE0F8(v30, v31, v88);
      sub_1BC08A7EC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2050;
      v32 = *(void **)(v79 + 16);
      swift_bridgeObjectRelease();
      v87 = v32;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v23, (os_log_type_t)v77, "[%{public}s][%{public}s] Finished committing %{public}ld change(s). Attempting to save.", (uint8_t *)v27, 0x20u);
      v33 = v78;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v33, -1, -1);
      MEMORY[0x1BCCE9C40](v27, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v34 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
    v34(v18, v85);
    v87 = 0;
    v35 = objc_msgSend(v22, sel_save_, &v87);
    v36 = v81;
    if (v35)
    {
      v37 = v87;
      v38 = v80;
      sub_1BC089D90();
      swift_retain_n();
      v39 = a3;
      swift_bridgeObjectRetain_n();
      v40 = sub_1BC089DD8();
      v41 = sub_1BC08A654();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc();
        v79 = v39;
        v43 = v42;
        v44 = swift_slowAlloc();
        v88[0] = v44;
        *(_DWORD *)v43 = 136446722;
        v87 = v83;
        swift_getMetatypeMetadata();
        v45 = sub_1BC08A3E4();
        v87 = (id)sub_1BBFDE0F8(v45, v46, v88);
        v84 = (void (*)(NSObject *, uint64_t))v34;
        v47 = v86;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2082;
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v47 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(_QWORD *)(v47 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
        v48 = sub_1BC089220();
        v87 = (id)sub_1BBFDE0F8(v48, v49, v88);
        sub_1BC08A7EC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 22) = 2050;
        v50 = *(void **)(v79 + 16);
        swift_bridgeObjectRelease();
        v87 = v50;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v40, v41, "[%{public}s][%{public}s] Successfully saved %{public}ld changes.", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v44, -1, -1);
        MEMORY[0x1BCCE9C40](v43, -1, -1);

        v84(v80, v85);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        v34((char *)v38, v85);
      }
    }
    else
    {
      v51 = v87;
      v52 = (void *)sub_1BC088F08();

      swift_willThrow();
      sub_1BC089D90();
      swift_retain_n();
      swift_bridgeObjectRetain();
      v53 = v52;
      swift_retain();
      swift_bridgeObjectRetain();
      v54 = v52;
      v55 = sub_1BC089DD8();
      v56 = sub_1BC08A660();
      v57 = v56;
      v80 = v55;
      if (os_log_type_enabled(v55, v56))
      {
        v58 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v88[0] = v79;
        *(_DWORD *)v58 = 136447234;
        LODWORD(v78) = v57;
        v87 = v83;
        swift_getMetatypeMetadata();
        v59 = sub_1BC08A3E4();
        v87 = (id)sub_1BBFDE0F8(v59, v60, v88);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 12) = 2082;
        v61 = (_QWORD *)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(_QWORD *)(v86 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
        v62 = sub_1BC089220();
        v87 = (id)sub_1BBFDE0F8(v62, v63, v88);
        sub_1BC08A7EC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 22) = 2050;
        v64 = *(void **)(a3 + 16);
        swift_bridgeObjectRelease();
        v87 = v64;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 32) = 2080;
        __swift_project_boxed_opaque_existential_1(v61, v61[3]);
        v65 = sub_1BC089220();
        v87 = (id)sub_1BBFDE0F8(v65, v66, v88);
        sub_1BC08A7EC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 42) = 2082;
        v87 = v52;
        v67 = v52;
        sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
        v68 = sub_1BC08A3F0();
        v87 = (id)sub_1BBFDE0F8(v68, v69, v88);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();

        v70 = v80;
        _os_log_impl(&dword_1BBFD7000, v80, (os_log_type_t)v78, "[%{public}s][%{public}s] Error saving %{public}ld changes from plugin %s: %{public}s", (uint8_t *)v58, 0x34u);
        v71 = v79;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v71, -1, -1);
        MEMORY[0x1BCCE9C40](v58, -1, -1);

        (*((void (**)(char *, uint64_t))v84 + 1))(v81, v85);
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();

        v34(v36, v85);
      }
      v72 = sub_1BC089958();
      sub_1BBFDA9C0(&qword_1EF3EE0E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E3A0], MEMORY[0x1E0D2E3A8]);
      v73 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v72 - 8) + 104))(v74, *MEMORY[0x1E0D2E398], v72);

      v75 = *v82;
      *v82 = (void *)v73;

    }
  }
}

uint64_t sub_1BC00FDF4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BC00FE14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1BC00FE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  _QWORD *v41;
  __int128 v42;
  char *v43;
  _OWORD v44[2];
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  unint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;

  v4 = v2;
  v70 = *v4;
  v86 = sub_1BC08934C();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1BC0897CC();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v64 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ExecuteChangesResult(0);
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1BC0892A4();
  v81 = *(_QWORD *)(v82 - 8);
  v12 = MEMORY[0x1E0C80A78](v82);
  v80 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v79 = (char *)v44 - v14;
  v15 = sub_1BC089448();
  v94 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v87 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v95 = (char *)v44 - v19;
  MEMORY[0x1E0C80A78](v18);
  v83 = (char *)v44 - v20;
  v76 = sub_1BC089DE4();
  v74 = *(_QWORD *)(v76 - 8);
  v21 = MEMORY[0x1E0C80A78](v76);
  v55 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v54 = (char *)v44 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v63 = (char *)v44 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v62 = (char *)v44 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v61 = (char *)v44 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)v44 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v60 = (char *)v44 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v75 = (char *)v44 - v37;
  MEMORY[0x1E0C80A78](v36);
  v59 = (char *)v44 - v38;
  v39 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC08976C();
  v56 = v10;
  v41 = (_QWORD *)(a2 + *(int *)(v10 + 20));
  v88 = a2;
  v89 = v41;
  *v41 = v39;
  if (*(_QWORD *)(a1 + 16))
  {
    v90 = (char *)v4 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo;
    v67 = OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext;
    v85 = (char *)v4 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage;
    v73 = (uint64_t *)(a1 + 32);
    v69 = &v97;
    v49 = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v42 = 136446722;
    v68 = v42;
    v47 = MEMORY[0x1E0DEE9B8] + 8;
    v53 = 0x80000001BC08F880;
    v58 = xmmword_1BC08B960;
    *((_QWORD *)&v42 + 1) = 8;
    v52 = xmmword_1BC08C9E0;
    v51 = 0x80000001BC08E540;
    v50 = 0x80000001BC08F840;
    *(_QWORD *)&v42 = 136446978;
    v44[1] = v42;
    *(_QWORD *)&v42 = 136446466;
    v48 = v42;
    v46 = xmmword_1BC08B950;
    v45 = 0x80000001BC08F860;
    v77 = v4;
    v92 = v15;
    v93 = v8;
    v71 = v33;
    v91 = *v73;
    v43 = (char *)&loc_1BC010430 + 4 * word_1BC08C9F0[*((unsigned __int8 *)v73 + 32) >> 5];
    v96 = v3;
    v78 = 1;
    __asm { BR              X9 }
  }
  return result;
}

uint64_t HealthExperienceStoreFeedItemContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  v2 = sub_1BC088E84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage;
  v4 = sub_1BC0898C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  return v0;
}

uint64_t HealthExperienceStoreFeedItemContext.__deallocating_deinit()
{
  HealthExperienceStoreFeedItemContext.deinit();
  return swift_deallocClassInstance();
}

id sub_1BC012B3C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(id *)(v1 + 16);
}

uint64_t sub_1BC012B78()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 88);
}

uint64_t sub_1BC012BB4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + 24;
  swift_beginAccess();
  return sub_1BBFE1C58(v3, a1);
}

uint64_t sub_1BC012C00()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC012C44@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  swift_beginAccess();
  v4 = sub_1BC088E84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_1BC012CAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(id *)(v1 + 80);
}

uint64_t sub_1BC012CE8()
{
  return swift_retain();
}

uint64_t sub_1BC012CFC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
}

uint64_t sub_1BC012D54@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  a2[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a2[4] = sub_1BC01344C();
  v6 = (_QWORD *)swift_allocObject();
  *a2 = v6;
  v6[5] = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v6[6] = a1;
  v6[2] = v5;
  return swift_retain();
}

uint64_t sub_1BC012DC4(uint64_t a1)
{
  return sub_1BC00E204(a1);
}

uint64_t sub_1BC012DE4()
{
  return sub_1BC0894C0();
}

uint64_t sub_1BC012DF8(void *a1, void *a2, void *a3, char a4)
{
  return HealthExperienceStoreFeedItemContext.previousFeedItems(predicate:)(a1, a2, a3, a4);
}

uint64_t sub_1BC012E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return HealthExperienceStoreFeedItemContext.fetchPluginStorage(havingUniqueIdentifier:)(a1, a2, a3);
}

uint64_t sub_1BC012E38()
{
  return HealthExperienceStoreFeedItemContext.fetchAllPluginStorage()();
}

uint64_t HealthExperienceStoreFeedItemContext.description.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_1BC08A954();
  swift_bridgeObjectRelease();
  sub_1BC013564();
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  swift_beginAccess();
  sub_1BC089964();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  v2 = objc_msgSend(v1, sel_description);
  sub_1BC08A3C0();

  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  return 60;
}

uint64_t sub_1BC012FC0()
{
  return HealthExperienceStoreFeedItemContext.description.getter();
}

uint64_t sub_1BC012FE0(void *a1, _QWORD *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[48];

  v11 = v10;
  v62 = a6;
  v58 = a3;
  v59 = a10;
  v55 = a5;
  v56 = a9;
  v16 = a4 & 1;
  v50 = sub_1BC0896D0();
  MEMORY[0x1E0C80A78](v50);
  v47[1] = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69B2C0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v52 = v19;
  v49 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v48 = (char *)v47 - v20;
  sub_1BC013F44();
  v53 = *(_QWORD *)(v21 - 8);
  v54 = v21;
  MEMORY[0x1E0C80A78](v21);
  v51 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC0898C8();
  v23 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v11 + 88) = v16;
  v26 = v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_boundingRange;
  v27 = sub_1BC088E84();
  v60 = *(_QWORD *)(v27 - 8);
  v61 = v27;
  v28 = *(void (**)(uint64_t, uint64_t))(v60 + 16);
  v63 = a8;
  v28(v26, a8);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v29 = a1;
  sub_1BC089220();
  sub_1BC013CC4();
  sub_1BC08A5E8();
  v30 = v55;
  sub_1BBFE1C58(v55, (uint64_t)v64);
  sub_1BC0898B0();
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v32 = v56;
  v31(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_feedItemStorage, v25, v57);
  *(_QWORD *)(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext) = v29;
  v33 = a2;
  sub_1BBFE1C58((uint64_t)a2, v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo);
  v34 = v58;
  *(_QWORD *)(v11 + 16) = v58;
  sub_1BBFE1C58(v30, v11 + 24);
  v57 = a7;
  sub_1BBFE1C58(a7, v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_queueProvider);
  v35 = objc_allocWithZone(MEMORY[0x1E0D2F8D8]);
  v36 = v29;
  v37 = v59;
  v38 = v34;
  *(_QWORD *)(v11 + 80) = objc_msgSend(v35, sel_initWithHealthStore_, v37);
  if (v32)
  {
    v39 = v32;
  }
  else
  {
    sub_1BC0896C4();
    v40 = v48;
    sub_1BC08A060();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v42 = v51;
    v41 = v52;
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v41);
    sub_1BBFDA9C0(&qword_1EF3EE0E8, (uint64_t (*)(uint64_t))sub_1BC013F44, MEMORY[0x1E0C964C8]);
    v43 = v54;
    v39 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v43);
  }
  *(_QWORD *)(v11 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_displayNamePublisher) = v39;
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  swift_retain();
  sub_1BC089220();
  sub_1BC0891F0();
  swift_allocObject();
  v44 = sub_1BC0891E4();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v61);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(v30);
  v45 = MEMORY[0x1E0D2D408];
  *(_QWORD *)(v11 + 64) = v44;
  *(_QWORD *)(v11 + 72) = v45;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v11;
}

unint64_t sub_1BC01344C()
{
  unint64_t result;

  result = qword_1ED69A1C8;
  if (!qword_1ED69A1C8)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for DispatchQueueGeneratorScheduler, &type metadata for DispatchQueueGeneratorScheduler);
    atomic_store(result, (unint64_t *)&qword_1ED69A1C8);
  }
  return result;
}

uint64_t sub_1BC013490()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t type metadata accessor for HealthExperienceStoreFeedItemContext(uint64_t a1)
{
  return sub_1BBFEF770(a1, (uint64_t *)&unk_1ED69BC28);
}

uint64_t type metadata accessor for ExecuteChangesResult(uint64_t a1)
{
  return sub_1BBFEF770(a1, (uint64_t *)&unk_1ED69AC90);
}

uint64_t sub_1BC0134DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC013508()
{
  uint64_t v0;

  sub_1BC00F1B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void ***)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1BC013518()
{
  return swift_deallocObject();
}

uint64_t sub_1BC013528(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExecuteChangesResult(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC013564()
{
  unint64_t result;

  result = qword_1ED69BDE0;
  if (!qword_1ED69BDE0)
  {
    type metadata accessor for HealthExperienceStoreFeedItemContext(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69BDE0);
  }
  return result;
}

id sub_1BC01359C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_1BC0135E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1BBFE1C58(v3, a2);
}

uint64_t sub_1BC013634@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_OWORD *)(v3 + 64);
  return swift_unknownObjectRetain();
}

id sub_1BC013684@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 80);
  *a2 = v4;
  return v4;
}

uint64_t sub_1BC0136CC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 88);
  return result;
}

uint64_t sub_1BC013710(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_1BC013758()
{
  return type metadata accessor for HealthExperienceStoreFeedItemContext(0);
}

uint64_t sub_1BC013760()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC088E84();
  if (v1 <= 0x3F)
  {
    result = sub_1BC0898C8();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for HealthExperienceStoreFeedItemContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.healthStore.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.pinnedContentManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.notificationManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.unitPreferenceController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.environment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))() & 1;
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.boundingRange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.__allocating_init(storageContext:pluginInfo:healthStore:environment:pinnedContentManager:notificationManager:queueProvider:dateRange:displayNamePublisher:primaryHealthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 312))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.queue(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.scheduler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of HealthExperienceStoreFeedItemContext.commit(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t *sub_1BC0138E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC0897CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC013974(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC0897CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0139B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC0897CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC013A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC0897CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC013A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC0897CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1BC013AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC0897CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC013B44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC013B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC0897CC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC013BCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC013BD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC0897CC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC013C50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC0897CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1BC013CC4()
{
  unint64_t result;

  result = qword_1ED69DB88;
  if (!qword_1ED69DB88)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69DB88);
  }
  return result;
}

void sub_1BC013D00(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRetain();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRetain();
      sub_1BC013D70(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

id sub_1BC013D70(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    result = a3;
    return sub_1BC013DC4(result);
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return result;
    goto LABEL_6;
  }
  return sub_1BC013DC4(result);
}

id sub_1BC013DC4(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1BC013DD4(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRelease();
      sub_1BC013E44(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

void sub_1BC013E44(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return;
    goto LABEL_6;
  }
LABEL_7:
  sub_1BC013E98(a1);
}

void sub_1BC013E98(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1BC013EA8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC013EBC(a1, a2);
  return a1;
}

uint64_t sub_1BC013EBC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BC013F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExecuteChangesResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BC013F44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B388)
  {
    sub_1BC0896D0();
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v0 = sub_1BC08AC54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B388);
  }
}

void sub_1BC013FC0()
{
  void *v0;
  id v1;

  sub_1BC0897E4();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0648 = (uint64_t)v1;
}

uint64_t sub_1BC01403C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v1 = sub_1BC089274();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC0892A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089844();
  v9 = sub_1BC089280();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v30[1] = v0;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE449C(0, v10, 0);
    v11 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v30[0] = v9;
    v12 = v9 + v11;
    v13 = *(_QWORD *)(v2 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v32 = v13;
    v14 = v2;
    do
    {
      v31(v4, v12, v1);
      v15 = sub_1BC089268();
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v18 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE449C(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v33;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BBFE449C(v19 > 1, v20 + 1, 1);
        v18 = v33;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      v21 = v18 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v15;
      *(_QWORD *)(v21 + 40) = v17;
      v12 += v32;
      --v10;
      v2 = v14;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v33 = v18;
  swift_bridgeObjectRetain();
  sub_1BC014CB4(&v33);
  swift_bridgeObjectRelease();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BBFE6088();
  sub_1BC08A384();
  swift_release();
  v22 = (void *)objc_opt_self();
  if (qword_1ED69CE58 != -1)
    swift_once();
  v23 = qword_1ED6A0568;
  v24 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v24);

  v26 = objc_msgSend(v22, sel_customRelevanceProviderForFeature_withValue_, v23, v25);
  if (v26)
  {
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BC08B600;
    sub_1BC014420();
    *(_QWORD *)(v27 + 32) = v28;
    v33 = v27;
    sub_1BC08A4E0();
    return v33;
  }
  else
  {
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

void sub_1BC014420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;

  v0 = sub_1BC0892A4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  if (qword_1ED69DA40 != -1)
    swift_once();
  v5 = (void *)qword_1ED6A0650;
  sub_1BC089850();
  v6 = v5;
  sub_1BC089730();
  sub_1BBFDA9C0(&qword_1ED69DAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5D0]);
  sub_1BC08A48C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v7);

  v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9)
    __break(1u);
}

void sub_1BC0145B4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v0 = (void *)objc_opt_self();
  if (qword_1ED69AC58 != -1)
    swift_once();
  v1 = (void *)qword_1ED6A0500;
  sub_1BC089694();
  v2 = v1;
  sub_1BC089730();
  v3 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v3);

  v5 = objc_msgSend(v0, sel_customRelevanceProviderForFeature_withValue_, v2, v4);
  if (!v5)
    __break(1u);
}

void sub_1BC0146C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;

  v0 = sub_1BC0895D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  if (qword_1ED69DA30 != -1)
    swift_once();
  v5 = (void *)qword_1ED6A0640;
  sub_1BC089754();
  v6 = v5;
  sub_1BC089730();
  sub_1BBFDA9C0(&qword_1ED69BAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], MEMORY[0x1E0D2DB60]);
  sub_1BC08A48C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v7);

  v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9)
    __break(1u);
}

void sub_1BC014854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[2];

  v0 = sub_1BC0896A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  if (qword_1ED69DA38 != -1)
    swift_once();
  v5 = (void *)qword_1ED6A0648;
  sub_1BC0897E4();
  v6 = v5;
  sub_1BC089730();
  sub_1BBFDA9C0(&qword_1ED69BAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE38], MEMORY[0x1E0D2DE48]);
  sub_1BC08A48C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v9[1]);
  v8 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v7);

  if (!v8)
    __break(1u);
}

void sub_1BC0149D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;

  v0 = sub_1BC089880();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  if (qword_1ED69DA90 != -1)
    swift_once();
  v5 = (void *)qword_1ED6A0688;
  sub_1BC089A0C();
  v6 = v5;
  sub_1BC089730();
  sub_1BBFDA9C0(&qword_1ED69BB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], MEMORY[0x1E0D2E198]);
  sub_1BC08A48C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v7);

  v9 = objc_msgSend(v4, sel_customRelevanceProviderForFeature_withValue_, v6, v8);
  if (!v9)
    __break(1u);
}

void sub_1BC014B64()
{
  void *v0;
  id v1;

  sub_1BC089850();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0650 = (uint64_t)v1;
}

void sub_1BC014BE0()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BC08A3B4();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0568 = (uint64_t)v1;
}

uint64_t sub_1BC014C50()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1ED69DA40 != -1)
    swift_once();
  v0 = *(_QWORD *)(sub_1BC08928C() + 16);
  swift_bridgeObjectRelease();
  result = sub_1BC05E094(v0);
  qword_1ED6A0658 = result;
  return result;
}

uint64_t sub_1BC014CB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC053A88(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC014D1C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC014D1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC08AB58();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BC015404(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BC0154D0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BC0539F8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC08A51C();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC08AB94();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BC08AB94()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC05379C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BC05379C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BC0154D0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BC08AB94() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BC08AA68();
  __break(1u);
  return result;
}

uint64_t sub_1BC015404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BC08AB94(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC0154D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BC08AB94() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BC08AB94() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BC053950((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC015768(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1BC08A5B8();
  if (!v18)
    return sub_1BC08A510();
  v19 = v18;
  v25 = v15;
  v39 = sub_1BC08A9FC();
  v32 = sub_1BC08AA08();
  sub_1BC08A9C0();
  v36 = v17;
  result = sub_1BC08A5A0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1BC08A5D0();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1BC08A9F0();
      sub_1BC08A5C4();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

const char *sub_1BC015A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  char v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint8_t *)sub_1BC089220();
  v11 = v9;
  if (v10 == (uint8_t *)0xD000000000000023 && v9 == 0x80000001BC08FA70 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_AppRecommendations";
  }
  if (v10 == (uint8_t *)0xD00000000000002DLL && v11 == 0x80000001BC08FAA0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Balance";
  }
  if (v10 == (uint8_t *)0xD00000000000001BLL && v11 == 0x80000001BC08FAD0
    || (v23 = 0xD00000000000001BLL, (sub_1BC08AB94() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return "Generation_Categories";
  }
  if (v10 == (uint8_t *)0xD000000000000021 && v11 == 0x80000001BC08FAF0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HearingAppPlugin";
  }
  if (v10 == (uint8_t *)0xD000000000000016 && v11 == 0x80000001BC08FB20 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Heart";
  }
  if (v10 == (uint8_t *)0xD000000000000020 && v11 == 0x80000001BC08FB40
    || (v22 = (uint8_t *)0xD000000000000020, (sub_1BC08AB94() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return "Generation_HighlightAlerts";
  }
  if (v10 == (uint8_t *)v23 && v11 == 0x80000001BC08FB70 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Highlights";
  }
  if (v10 == v22 && v11 == 0x80000001BC08FB90 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MenstrualCycles";
  }
  if (v10 == (uint8_t *)0xD000000000000019 && v11 == 0x80000001BC08FBC0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Profiles";
  }
  if (v10 == (uint8_t *)0xD000000000000023 && v11 == 0x80000001BC08FBE0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_ResearchApp";
  }
  if (v10 == (uint8_t *)0xD000000000000017 && v11 == 0x80000001BC08FC10 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Safety";
  }
  if (v10 == (uint8_t *)0xD000000000000025 && v11 == 0x80000001BC08FC30 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HealthRecords";
  }
  if (v10 == (uint8_t *)0xD00000000000001FLL && v11 == 0x80000001BC08FC60 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_HealthArticles";
  }
  if (v10 == (uint8_t *)0xD00000000000001CLL && v11 == 0x80000001BC08FC80 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Respiratory";
  }
  if (v10 == (uint8_t *)0xD00000000000001ALL && v11 == 0x80000001BC08FCA0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_Summaries";
  }
  if (v10 == (uint8_t *)0xD00000000000002BLL && v11 == 0x80000001BC08FCC0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MedicationsHealthAppPlugin";
  }
  if (v10 == (uint8_t *)0xD000000000000022 && v11 == 0x80000001BC08FCF0 || (sub_1BC08AB94() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return "Generation_MobilityAppPlugin";
  }
  if (v10 == (uint8_t *)0xD000000000000016 && v11 == 0x80000001BC08FD20)
  {
    swift_bridgeObjectRelease();
    return "Generation_Sleep";
  }
  v13 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    return "Generation_Sleep";
  sub_1BC089D90();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  v14 = sub_1BC089DD8();
  v15 = sub_1BC08A660();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v23;
    v22 = v16;
    *(_DWORD *)v16 = 136315138;
    v21 = v16 + 4;
    v17 = sub_1BC089220();
    v25 = sub_1BBFDE0F8(v17, v18, &v26);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
    v19 = v22;
    _os_log_impl(&dword_1BBFD7000, v14, v15, "You should add your bundle id: '%s' to generationSignpostID for better signposts", v22, 0xCu);
    v20 = v23;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v20, -1, -1);
    MEMORY[0x1BCCE9C40](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  return "Generation_<unknown>";
}

id BasicPluginInfo.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1BC0163B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC016414()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC01645C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC0164AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BasicPluginInfo.__allocating_init(bundle:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BasicPluginInfo.init(bundle:)(a1);
  return v2;
}

uint64_t BasicPluginInfo.init(bundle:)(void *a1)
{
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;

  v1[2] = a1;
  v2 = a1;
  v3 = objc_msgSend(v2, sel_bundleIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC08A3C0();
    v7 = v6;

    v1[3] = v5;
    v1[4] = v7;
    return (uint64_t)v1;
  }
  else
  {
    sub_1BC08A954();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v2, sel_description);
    sub_1BC08A3C0();

    sub_1BC08A420();
    swift_bridgeObjectRelease();
    sub_1BC08A420();
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

uint64_t BasicPluginInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BasicPluginInfo.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1BC0166B8()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1BC0166C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC016710@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 120))();
  *a1 = result;
  return result;
}

void sub_1BC016738()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  sub_1BC08A3C0();
  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    sub_1BC017AC8(0);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    qword_1ED69B630 = v3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t PluginBundleProvider.__allocating_init(sharedDefaults:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t static FoundationPluginBundleProvider.sharedInstance.getter()
{
  if (qword_1ED69B768 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static FoundationPluginBundleProvider.sharedInstance.setter(uint64_t a1)
{
  if (qword_1ED69B768 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED69B630 = a1;
  return swift_release();
}

uint64_t (*static FoundationPluginBundleProvider.sharedInstance.modify())()
{
  if (qword_1ED69B768 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FoundationPluginBundleProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FoundationPluginBundleProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BC016970()
{
  return (id)sub_1BC0176F8();
}

void sub_1BC016988(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

uint64_t (*sub_1BC0169CC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC016A08()
{
  void (*v0)(uint64_t);
  _QWORD v2[2];
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC089190();
  sub_1BC089184();
  sub_1BC089154();
  v4 = sub_1BC089148();
  v2[1] = v2;
  v3 = sub_1BC08A2E8();
  MEMORY[0x1E0C80A78](v3);
  v0 = (void (*)(uint64_t))MEMORY[0x1E0D2D2F0];
  sub_1BC017794(0, &qword_1ED69AB28, (void (*)(uint64_t))MEMORY[0x1E0D2D2F0]);
  sub_1BC08A348();
  sub_1BC01781C(&qword_1ED69ADB0, &qword_1ED69AB28, v0, MEMORY[0x1E0DEAF38]);
  sub_1BC08A468();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t sub_1BC016BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = sub_1BC08A7D4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - v5;
  v7 = sub_1BC0890E8();
  v9 = v8;
  sub_1BC089100();
  sub_1BC08922C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v6, 0, 1, a3);
  v11[0] = v7;
  v11[1] = v9;
  sub_1BC08A348();
  return sub_1BC08A354();
}

uint64_t sub_1BC016CC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;

  v1 = *v0;
  v2 = sub_1BC08910C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089190();
  sub_1BC089184();
  v6 = sub_1BC089160();
  swift_release();
  v7 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v20[1] = 0;
    *(_QWORD *)&v21 = v1;
    v9 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v20[0] = v6;
    swift_bridgeObjectRetain();
    do
    {
      v11(v5, v9, v2);
      sub_1BC089100();
      v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      MEMORY[0x1BCCE8E84](v12);
      if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v7 = v22;
    v1 = v21;
  }
  v13 = swift_bridgeObjectRelease();
  v22 = v7;
  MEMORY[0x1E0C80A78](v13);
  v21 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)&v20[-2] = v21;
  sub_1BC017794(0, &qword_1ED69ADD8, (void (*)(uint64_t))sub_1BC0177E0);
  v15 = v14;
  v16 = sub_1BC01781C(&qword_1ED69ADE0, &qword_1ED69ADD8, (void (*)(uint64_t))sub_1BC0177E0, MEMORY[0x1E0DEAF50]);
  v18 = sub_1BC015768((void (*)(char *, char *))sub_1BC017740, (uint64_t)&v20[-4], v15, (char *)v21, MEMORY[0x1E0DEDCE8], v16, MEMORY[0x1E0DEDD18], v17);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BC016F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, unint64_t, uint64_t);
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;

  v0 = sub_1BC08910C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089190();
  sub_1BC089184();
  v4 = sub_1BC089178();
  swift_release();
  v5 = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v12[1] = v4;
    swift_bridgeObjectRetain();
    do
    {
      v9(v3, v7, v0);
      sub_1BC089100();
      v10 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      MEMORY[0x1BCCE8E84](v10);
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v5 = v13;
  }
  swift_bridgeObjectRelease();
  return v5;
}

_QWORD *sub_1BC0170AC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1BC089190();
  sub_1BC089184();
  v0 = sub_1BC08916C();
  swift_release();
  v1 = sub_1BBFF2544(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PluginBundleProvider.init(sharedDefaults:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1BC01710C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = sub_1BC08910C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089190();
  v5 = sub_1BC089184();
  sub_1BC089154();
  if (v0)
  {
    swift_release();
  }
  else
  {
    v6 = sub_1BC089148();
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v18[1] = v5;
      v18[2] = 0;
      v22 = MEMORY[0x1E0DEE9D8];
      sub_1BBFE449C(0, v7, 0);
      v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v18[0] = v6;
      v9 = v6 + v8;
      v10 = *(_QWORD *)(v2 + 72);
      v19 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
      v20 = v10;
      v21 = v2;
      do
      {
        v19(v4, v9, v1);
        v11 = sub_1BC0890F4();
        v13 = v12;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        v5 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BBFE449C(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v22;
        }
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1BBFE449C(v14 > 1, v15 + 1, 1);
          v5 = v22;
        }
        *(_QWORD *)(v5 + 16) = v15 + 1;
        v16 = v5 + 16 * v15;
        *(_QWORD *)(v16 + 32) = v11;
        *(_QWORD *)(v16 + 40) = v13;
        v2 = v21;
        v9 += v20;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v5;
}

uint64_t sub_1BC0172F8(uint64_t a1, uint64_t a2)
{
  return sub_1BC017358(a1, a2, 1, MEMORY[0x1E0D2D350]);
}

uint64_t sub_1BC017318(uint64_t a1, uint64_t a2)
{
  return sub_1BC017358(a1, a2, 0, MEMORY[0x1E0D2D350]);
}

uint64_t sub_1BC017338(uint64_t a1, uint64_t a2)
{
  return sub_1BC017358(a1, a2, 1, MEMORY[0x1E0D2D348]);
}

uint64_t sub_1BC017358(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = sub_1BC08910C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089190();
  v13 = sub_1BC089184();
  a4(a1, a2, a3);
  swift_release();
  if (!v4)
  {
    v13 = sub_1BC089100();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_1BC017444()
{
  uint64_t v0;

  v0 = sub_1BC089DE4();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC089190();
  sub_1BC089184();
  sub_1BC089154();
  return swift_release();
}

uint64_t PluginBundleProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PluginBundleProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BC0176F8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1BC017728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC016BCC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BC017740(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1BC08922C();
}

void sub_1BC017794(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC08A534();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC0177E0()
{
  unint64_t result;

  result = qword_1ED69BA68;
  if (!qword_1ED69BA68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69BA68);
  }
  return result;
}

uint64_t sub_1BC01781C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC017794(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC01785C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1BC0178A8@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  v2 = (void *)sub_1BC0176F8();
  *a1 = v2;
  return v2;
}

void sub_1BC0178D0(id *a1)
{
  sub_1BC016988((uint64_t)*a1);
}

uint64_t sub_1BC0178F8()
{
  return 16;
}

__n128 sub_1BC017904(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for BasicPluginInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for BasicPluginInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BasicPluginInfo.bundleIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of BasicPluginInfo.__allocating_init(bundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for FoundationPluginBundleProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FoundationPluginBundleProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC017994()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PluginBundleProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PluginBundleProvider);
}

uint64_t method lookup function for PluginBundleProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PluginBundleProvider.sharedDefaults.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PluginBundleProvider.availablePluginsMap.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PluginBundleProvider.availableLaunchGenerationPlugins.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PluginBundleProvider.notificationDelegateProvidingPluginBundles.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PluginBundleProvider.disabledPlugins.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PluginBundleProvider.__allocating_init(sharedDefaults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of PluginBundleProvider.allPluginBundleNames()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadAndValidatePluginBundle(named:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadPluginBundle(named:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadPluginBundle(withIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PluginBundleProvider.loadAllPlugins()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void sub_1BC017AC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED69B598)
  {
    v2 = type metadata accessor for BasicPluginInfo();
    v3 = sub_1BC017B24();
    v5 = type metadata accessor for PluginBundleProvider(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED69B598);
  }
}

unint64_t sub_1BC017B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B4C0;
  if (!qword_1ED69B4C0)
  {
    v1 = type metadata accessor for BasicPluginInfo();
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for BasicPluginInfo, v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B4C0);
  }
  return result;
}

uint64_t sub_1BC017B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t result;
  int64_t v32;
  uint64_t v33;
  _QWORD v34[6];
  void *v35;

  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC08A864();
    sub_1BC089B80();
    sub_1BBFDA9C0(&qword_1ED69AB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E638], MEMORY[0x1E0DEFCF8]);
    sub_1BC08A588();
    v3 = v34[1];
    v33 = v34[2];
    v4 = v34[3];
    v5 = v34[4];
    v6 = v34[5];
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v32 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      v14 = sub_1BC08A8C4();
      if (!v14)
        goto LABEL_50;
      v34[0] = v14;
      sub_1BC089B80();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v35;
      swift_unknownObjectRelease();
      v13 = v5;
      v11 = v6;
      if (!v15)
        goto LABEL_50;
    }
    else
    {
      if (v6)
      {
        v11 = (v6 - 1) & v6;
        v12 = __clz(__rbit64(v6)) | (v5 << 6);
        v13 = v5;
      }
      else
      {
        v13 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_56;
        if (v13 >= v32)
          goto LABEL_50;
        v16 = *(_QWORD *)(v33 + 8 * v13);
        if (!v16)
        {
          v17 = v5 + 2;
          if (v5 + 2 >= v32)
            goto LABEL_50;
          v16 = *(_QWORD *)(v33 + 8 * v17);
          if (v16)
            goto LABEL_25;
          v17 = v5 + 3;
          if (v5 + 3 >= v32)
            goto LABEL_50;
          v16 = *(_QWORD *)(v33 + 8 * v17);
          if (v16)
            goto LABEL_25;
          v17 = v5 + 4;
          if (v5 + 4 >= v32)
            goto LABEL_50;
          v16 = *(_QWORD *)(v33 + 8 * v17);
          if (v16)
          {
LABEL_25:
            v13 = v17;
          }
          else
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v32)
              goto LABEL_50;
            v16 = *(_QWORD *)(v33 + 8 * v13);
            if (!v16)
            {
              v30 = v5 + 6;
              while (v32 != v30)
              {
                v16 = *(_QWORD *)(v33 + 8 * v30++);
                if (v16)
                {
                  v13 = v30 - 1;
                  goto LABEL_26;
                }
              }
LABEL_50:
              sub_1BBFE2D28();
              return (uint64_t)v10;
            }
          }
        }
LABEL_26:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v15 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
      if (!v15)
        goto LABEL_50;
    }
    v35 = v15;
    sub_1BC018D10(&v35, v34);
    if (v2)
    {

      sub_1BBFE2D28();
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
    v18 = v3;

    v19 = v34[0];
    v20 = *(_QWORD *)(v34[0] + 16);
    v21 = v10[2];
    v22 = v21 + v20;
    if (__OFADD__(v21, v20))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v22 > v10[3] >> 1)
    {
      if (v21 <= v22)
        v24 = v21 + v20;
      else
        v24 = v21;
      v10 = sub_1BBFDD3F8((_QWORD *)isUniquelyReferenced_nonNull_native, v24, 1, v10);
    }
    v3 = v18;
    if (*(_QWORD *)(v19 + 16))
    {
      v25 = v10[2];
      if ((v10[3] >> 1) - v25 < v20)
        goto LABEL_54;
      v26 = (unint64_t)&v10[2 * v25 + 4];
      if (v19 + 32 < v26 + 16 * v20 && v26 < v19 + 32 + 16 * v20)
        goto LABEL_57;
      swift_arrayInitWithCopy();
      if (v20)
      {
        v27 = v10[2];
        v28 = __OFADD__(v27, v20);
        v29 = v27 + v20;
        if (v28)
          goto LABEL_55;
        v10[2] = v29;
      }
    }
    else if (v20)
    {
      goto LABEL_53;
    }
    swift_bridgeObjectRelease();
    v5 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BC017F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC08A864();
    sub_1BC089B5C();
    sub_1BBFDA9C0(&qword_1ED69AB78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E5F8], MEMORY[0x1E0DEFCF8]);
    sub_1BC08A588();
    v1 = v29;
    v34 = v30;
    v2 = v31;
    v3 = v32;
    v4 = v33;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v34 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v27 = (unint64_t)(v2 + 64) >> 6;
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1BC08A8C4())
      goto LABEL_39;
    sub_1BC089B5C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v28;
    swift_unknownObjectRelease();
    if (!v28)
      goto LABEL_39;
LABEL_32:
    v15 = objc_msgSend(v11, sel_identifier);
    v16 = sub_1BC08A3C0();

    v28 = (void *)v16;
    sub_1BC089640();
    sub_1BC00C0A0();
    sub_1BC00C0E4();
    LOBYTE(v16) = sub_1BC08A378();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0
      || (v17 = objc_msgSend(v11, sel_identifier),
          v18 = HKDisplayCategoryIdentifierFromString(),
          v17,
          v18 != -1))
    {

    }
    else
    {
      v19 = objc_msgSend(v11, sel_identifier);
      v20 = sub_1BC08A3C0();
      v22 = v21;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_1BBFDD3F8(0, v26[2] + 1, 1, v26);
      v24 = v26[2];
      v23 = v26[3];
      if (v24 >= v23 >> 1)
        v26 = sub_1BBFDD3F8((_QWORD *)(v23 > 1), v24 + 1, 1, v26);
      v26[2] = v24 + 1;
      v25 = &v26[2 * v24];
      v25[4] = v20;
      v25[5] = v22;
    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_31:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_39;
    goto LABEL_32;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v27)
      goto LABEL_39;
    v13 = *(_QWORD *)(v34 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_39;
      v13 = *(_QWORD *)(v34 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_39;
        v13 = *(_QWORD *)(v34 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_39;
          v13 = *(_QWORD *)(v34 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v27)
              goto LABEL_39;
            v13 = *(_QWORD *)(v34 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v27 != v14)
              {
                v13 = *(_QWORD *)(v34 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_39:
              sub_1BBFE2D28();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1BC01839C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int v8;
  char v11;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  void *v37;
  id v38;
  char v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v1 = sub_1BC0892A4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v41 - v6;
  if (!objc_msgSend(v0, sel_indexForSearch))
    goto LABEL_11;
  sub_1BC089B98();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v8 == *MEMORY[0x1E0D2D500] || v8 == *MEMORY[0x1E0D2D538] || v8 == *MEMORY[0x1E0D2D508])
    goto LABEL_10;
  if (v8 == *MEMORY[0x1E0D2D568] || v8 == *MEMORY[0x1E0D2D588] || v8 == *MEMORY[0x1E0D2D510])
    goto LABEL_21;
  if (v8 == *MEMORY[0x1E0D2D4C0]
    || v8 == *MEMORY[0x1E0D2D4E8]
    || v8 == *MEMORY[0x1E0D2D4F0]
    || v8 == *MEMORY[0x1E0D2D4F8]
    || v8 == *MEMORY[0x1E0D2D4D0]
    || v8 == *MEMORY[0x1E0D2D5A0]
    || v8 == *MEMORY[0x1E0D2D4E0])
  {
    goto LABEL_10;
  }
  if (v8 == *MEMORY[0x1E0D2D4B8] || v8 == *MEMORY[0x1E0D2D550])
    goto LABEL_21;
  if (v8 == *MEMORY[0x1E0D2D540] || v8 == *MEMORY[0x1E0D2D4D8])
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (v8 != *MEMORY[0x1E0D2D5A8])
  {
    if (v8 != *MEMORY[0x1E0D2D558]
      && v8 != *MEMORY[0x1E0D2D570]
      && v8 != *MEMORY[0x1E0D2D4C8]
      && v8 != *MEMORY[0x1E0D2D598]
      && v8 != *MEMORY[0x1E0D2D560]
      && v8 != *MEMORY[0x1E0D2D578])
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
    goto LABEL_10;
  }
LABEL_21:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v15 = objc_msgSend(v0, sel_profiles);
  v16 = sub_1BC089B68();
  sub_1BBFDA9C0(&qword_1ED69BA18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E608], MEMORY[0x1E0DEFCF8]);
  v17 = sub_1BC08A54C();

  v41 = v0;
  v44 = v16;
  if ((v17 & 0xC000000000000001) != 0)
  {
    sub_1BC08A864();
    sub_1BC08A588();
    v17 = v49;
    v46 = v50;
    v18 = v51;
    v19 = v52;
    v20 = v53;
  }
  else
  {
    v19 = 0;
    v21 = -1 << *(_BYTE *)(v17 + 32);
    v22 = *(_QWORD *)(v17 + 56);
    v46 = v17 + 56;
    v18 = ~v21;
    v23 = -v21;
    if (v23 < 64)
      v24 = ~(-1 << v23);
    else
      v24 = -1;
    v20 = v24 & v22;
  }
  v42 = v18;
  v45 = (unint64_t)(v18 + 64) >> 6;
  v43 = MEMORY[0x1E0DEE9B0] + 8;
  v25 = v19;
  if (v17 < 0)
  {
    v27 = sub_1BC08A8C4();
    if (v27)
    {
      v47 = v27;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v28 = (id)v48;
      swift_unknownObjectRelease();
      goto LABEL_66;
    }
  }
  else
  {
    if (v20)
    {
      v26 = __clz(__rbit64(v20)) | (v19 << 6);
LABEL_65:
      v28 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v26);
LABEL_66:
      if (v28)
      {
        v33 = objc_msgSend(v28, sel_encodedHKProfileIdentifier, v41, v42, v43, v44);
        sub_1BC088FB0();
        v35 = v34;

        __asm { BR              X9 }
      }
      goto LABEL_68;
    }
    v29 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      JUMPOUT(0x1BC018A94);
    }
    if (v29 >= v45)
      goto LABEL_68;
    v30 = *(_QWORD *)(v46 + 8 * v29);
    v31 = v19 + 1;
    if (v30)
      goto LABEL_64;
    v31 = v25 + 2;
    if (v25 + 2 >= v45)
      goto LABEL_68;
    v30 = *(_QWORD *)(v46 + 8 * v31);
    if (v30)
      goto LABEL_64;
    v31 = v25 + 3;
    if (v25 + 3 >= v45)
      goto LABEL_68;
    v30 = *(_QWORD *)(v46 + 8 * v31);
    if (v30)
    {
LABEL_64:
      v26 = __clz(__rbit64(v30)) + (v31 << 6);
      goto LABEL_65;
    }
    v31 = v25 + 4;
    if (v25 + 4 < v45)
    {
      v30 = *(_QWORD *)(v46 + 8 * v31);
      if (!v30)
      {
        v32 = v25 + 5;
        while (v45 != v32)
        {
          v30 = *(_QWORD *)(v46 + 8 * v32++);
          if (v30)
          {
            v31 = v32 - 1;
            goto LABEL_64;
          }
        }
        goto LABEL_68;
      }
      goto LABEL_64;
    }
  }
LABEL_68:
  sub_1BBFE2D28();
  sub_1BC0190F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B960;
  *(_QWORD *)(inited + 32) = sub_1BC0893C4();
  *(_QWORD *)(inited + 40) = 0;
  v48 = sub_1BC089BF8();
  sub_1BC019144();
  sub_1BBFDA9C0(&qword_1ED69ABA8, (uint64_t (*)(uint64_t))sub_1BC019144, MEMORY[0x1E0DEB3E0]);
  v37 = (void *)sub_1BC08A5AC();
  swift_bridgeObjectRelease();
  v38 = *(id *)(inited + 32);
  v39 = sub_1BC0893AC();
  swift_bridgeObjectRetain();

  if ((v39 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v11 = 1;
  }
  else
  {
    v40 = *(id *)(inited + 40);
    v11 = sub_1BC0893AC();
    swift_bridgeObjectRelease();

  }
  swift_setDeallocating();
  swift_arrayDestroy();
  return v11 & 1;
}

uint64_t sub_1BC018AA4(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_localizedTitle);
  if (v4)
  {
    v5 = v4;
    sub_1BC08A3C0();

    swift_bridgeObjectRetain();
    v6 = (void *)sub_1BC08A3B4();
    objc_msgSend(a1, sel_setTitle_, v6);
    swift_bridgeObjectRelease_n();

  }
  v7 = objc_msgSend(v2, sel_keywords);
  sub_1BC089B5C();
  v8 = MEMORY[0x1E0DEFCF8];
  sub_1BBFDA9C0(&qword_1ED69AB78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E5F8], MEMORY[0x1E0DEFCF8]);
  v9 = sub_1BC08A54C();

  sub_1BC017F90(v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v2, sel_dataTypes);
  sub_1BC089B80();
  sub_1BBFDA9C0(&qword_1ED69AB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E638], v8);
  v13 = sub_1BC08A54C();

  v14 = sub_1BC017B68(v13);
  swift_bridgeObjectRelease();
  sub_1BC0191BC(v14);
  v15 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setKeywords_, v15, v11);

  v16 = objc_msgSend(v2, sel_dataTypes);
  v17 = sub_1BC08A54C();

  v18 = (void *)sub_1BC04CCAC(v17);
  swift_bridgeObjectRelease();
  if (v18)
  {
    v19 = (void *)sub_1BC089B74();

    if (v19)
    {
      objc_msgSend(v19, sel_code);

    }
  }
  return sub_1BC08A7A4();
}

void sub_1BC018D10(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = sub_1BC089B74();
  if (!v10)
  {
LABEL_10:
    v46 = v6;
    sub_1BC089D90();
    v28 = v9;
    v29 = sub_1BC089DD8();
    v30 = sub_1BC08A66C();
    if (os_log_type_enabled(v29, v30))
    {
      v44 = v2;
      v31 = swift_slowAlloc();
      v45 = a2;
      v32 = (uint8_t *)v31;
      v42 = swift_slowAlloc();
      v48 = v42;
      *(_DWORD *)v32 = 136315138;
      v41[1] = v32 + 4;
      v33 = v28;
      v34 = objc_msgSend(v33, sel_description);
      v43 = v5;
      v35 = v34;
      v36 = sub_1BC08A3C0();
      v38 = v37;

      v47 = sub_1BBFDE0F8(v36, v38, &v48);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v29, v30, "Could not get display type for: %s", v32, 0xCu);
      v39 = v42;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v39, -1, -1);
      v40 = v32;
      a2 = v45;
      MEMORY[0x1BCCE9C40](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v5);
    }
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v11 = (void *)v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v12
    || (v13 = v12,
        v14 = objc_msgSend(v12, sel_displayTypeForObjectType_, v11),
        v13,
        !v14))
  {

    goto LABEL_10;
  }
  v45 = a2;
  v15 = objc_msgSend(v14, sel_localization);
  v16 = objc_msgSend(v15, sel_keywords);

  v17 = sub_1BC08A54C();
  v18 = sub_1BBFF2544(v17);
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v14, sel_localization);
  v20 = objc_msgSend(v19, sel_displayName);

  v21 = sub_1BC08A3C0();
  v23 = v22;

  swift_retain();
  swift_bridgeObjectRetain();
  v24 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v24 = sub_1BBFDD3F8(0, v18[2] + 1, 1, v18);
  v26 = v24[2];
  v25 = v24[3];
  if (v26 >= v25 >> 1)
    v24 = sub_1BBFDD3F8((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
  v24[2] = v26 + 1;
  v27 = &v24[2 * v26];
  v27[4] = v21;
  v27[5] = v23;
  swift_release();
  swift_bridgeObjectRelease();

  a2 = v45;
LABEL_14:
  *a2 = v24;
}

void sub_1BC0190F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69DBD0)
  {
    v0 = sub_1BC08AB70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69DBD0);
  }
}

void sub_1BC019144()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69ABA0)
  {
    sub_1BC08931C();
    sub_1BBFDA9C0(&qword_1ED69AB70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D668], MEMORY[0x1E0D2D670]);
    v0 = sub_1BC08A594();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69ABA0);
  }
}

uint64_t sub_1BC0191BC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1BBFDD3F8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC019310(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1BCCE9358](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1BC01E484(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1BC08A4E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0194C8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    v5 = v20 + v3;
    if (!__OFADD__(v20, v3))
      goto LABEL_5;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
    goto LABEL_24;
LABEL_5:
  v6 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v6;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5)
    v10 = v5;
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1BCCE9358](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *v1 = v11;
  v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (*(_QWORD *)(v9 + 24) >> 1) - v12;
  result = sub_1BC01E6C0(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  if (v15 < 1)
    goto LABEL_19;
  v17 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = __OFADD__(v17, v15);
  v19 = v17 + v15;
  if (!v18)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
LABEL_19:
    swift_bridgeObjectRelease();
    if (v16 != v13)
      return sub_1BC08A4E0();
LABEL_26:
    sub_1BC01E8FC(0, &qword_1EF3EE120, (unint64_t *)&qword_1ED69D8F0);
    return sub_1BC08A4E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC0196B4(uint64_t a1)
{
  return sub_1BC019E1C(a1, (uint64_t (*)(void))sub_1BBFDD518, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2D5B0]);
}

uint64_t sub_1BC0196C8(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1BBFDD64C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_1BC089448();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC01983C(uint64_t a1)
{
  return sub_1BC019858(a1, (uint64_t (*)(void))sub_1BBFDD87C, &qword_1ED69D210, (uint64_t (*)(uint64_t))sub_1BBFDB248);
}

uint64_t sub_1BC019858(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v7 + v5 <= *(_QWORD *)(v6 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v6 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v5)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v12 = *(_QWORD *)(v6 + 16);
  v13 = (*(_QWORD *)(v6 + 24) >> 1) - v12;
  sub_1BBFDB42C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  if (v13 < v5)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v6 + v16 + v17 * v12;
  v19 = a1 + v16;
  v20 = v17 * v5;
  v21 = v18 + v20;
  v22 = v19 + v20;
  if (v19 < v21 && v18 < v22)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v5)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v4 = v6;
    return result;
  }
  v24 = *(_QWORD *)(v6 + 16);
  v25 = __OFADD__(v24, v5);
  v26 = v24 + v5;
  if (!v25)
  {
    *(_QWORD *)(v6 + 16) = v26;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

_QWORD *sub_1BC0199EC(_QWORD *result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v3 = result[2];
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = (uint64_t)result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1BBFDDC14(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = (_QWORD *)(v9 - v11);
  result = sub_1BBFF9BB8(v41, &v4[3 * v11 + 4], v9 - v11, v7);
  if ((uint64_t)result < v3)
    goto LABEL_15;
  if (result)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, result);
    v17 = (char *)result + v15;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    result = (_QWORD *)sub_1BBFE2D28();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v13 = v42;
  v39 = v41[1];
  v40 = v41[0];
  v14 = v43;
  if (v44)
  {
    v18 = (v44 - 1) & v44;
    v19 = v43;
    v20 = __clz(__rbit64(v44)) | (v43 << 6);
    v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  v35 = v14 + 1;
  if (__OFADD__(v14, 1))
    goto LABEL_66;
  v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38)
    goto LABEL_13;
  v36 = *(_QWORD *)(v39 + 8 * v35);
  v19 = v14 + 1;
  if (!v36)
  {
    v19 = v14 + 2;
    if (v14 + 2 >= v38)
      goto LABEL_13;
    v36 = *(_QWORD *)(v39 + 8 * v19);
    if (!v36)
    {
      v19 = v14 + 3;
      if (v14 + 3 >= v38)
        goto LABEL_13;
      v36 = *(_QWORD *)(v39 + 8 * v19);
      if (!v36)
      {
        v19 = v14 + 4;
        if (v14 + 4 >= v38)
          goto LABEL_13;
        v36 = *(_QWORD *)(v39 + 8 * v19);
        if (!v36)
        {
          v19 = v14 + 5;
          if (v14 + 5 >= v38)
            goto LABEL_13;
          v36 = *(_QWORD *)(v39 + 8 * v19);
          if (!v36)
          {
            v37 = v14 + 6;
            do
            {
              if (v38 == v37)
                goto LABEL_13;
              v36 = *(_QWORD *)(v39 + 8 * v37++);
            }
            while (!v36);
            v19 = v37 - 1;
          }
        }
      }
    }
  }
  v18 = (v36 - 1) & v36;
  v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  v21 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v20);
  v22 = *v21;
  v23 = v21[1];
  v24 = *(void **)(*(_QWORD *)(v40 + 56) + 8 * v20);
  swift_bridgeObjectRetain();
  result = v24;
  while (1)
  {
    v25 = v4[3];
    v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1)
      break;
    if (v2 < v26)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = sub_1BBFDDC14((_QWORD *)(v25 > 1), v2 + 1, 1, v4);
  v4 = result;
  v26 = result[3] >> 1;
  if (v2 >= v26)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v27 = &v4[3 * v2 + 4];
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    ++v2;
    if (v18)
    {
      v28 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v29 = v28 | (v19 << 6);
      goto LABEL_41;
    }
    v30 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v30 >= v38)
      goto LABEL_45;
    v31 = *(_QWORD *)(v39 + 8 * v30);
    v32 = v19 + 1;
    if (!v31)
    {
      v32 = v19 + 2;
      if (v19 + 2 >= v38)
        goto LABEL_45;
      v31 = *(_QWORD *)(v39 + 8 * v32);
      if (!v31)
      {
        v32 = v19 + 3;
        if (v19 + 3 >= v38)
          goto LABEL_45;
        v31 = *(_QWORD *)(v39 + 8 * v32);
        if (!v31)
        {
          v32 = v19 + 4;
          if (v19 + 4 >= v38)
            goto LABEL_45;
          v31 = *(_QWORD *)(v39 + 8 * v32);
          if (!v31)
          {
            v32 = v19 + 5;
            if (v19 + 5 >= v38)
              goto LABEL_45;
            v31 = *(_QWORD *)(v39 + 8 * v32);
            if (!v31)
            {
              v33 = v19 + 6;
              while (v38 != v33)
              {
                v31 = *(_QWORD *)(v39 + 8 * v33++);
                if (v31)
                {
                  v32 = v33 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v18 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
    v19 = v32;
LABEL_41:
    v34 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v29);
    v22 = *v34;
    v23 = v34[1];
    v24 = *(void **)(*(_QWORD *)(v40 + 56) + 8 * v29);
    if (v2 >= v26)
    {
      swift_bridgeObjectRetain();
      result = v24;
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    result = v24;
    v24 = result;
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1BC019DEC(uint64_t a1)
{
  return sub_1BC019858(a1, (uint64_t (*)(void))sub_1BBFDDD74, &qword_1ED69D200, (uint64_t (*)(uint64_t))sub_1BBFDAEA0);
}

uint64_t sub_1BC019E08(uint64_t a1)
{
  return sub_1BC019E1C(a1, (uint64_t (*)(void))sub_1BBFDDD4C, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
}

uint64_t sub_1BC019E1C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC019F94(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BBFDDFEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC01A0D8()
{
  uint64_t v0;
  uint64_t result;

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B960;
  result = sub_1BC0893C4();
  *(_QWORD *)(v0 + 32) = result;
  *(_QWORD *)(v0 + 40) = 0;
  qword_1ED69A1E0 = v0;
  return result;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.dataSourceProfiles.getter()
{
  if (qword_1ED69A1F0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

unint64_t static SummaryTabRelevanceEngineCoordinator.defaultEngineName.getter()
{
  return 0xD000000000000016;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultModelDirectoryName.getter()
{
  return 0x646D2E6C65646F6DLL;
}

id static SummaryTabRelevanceEngineCoordinator.defaultModelContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unsigned int v11;
  id result;
  id v13;
  void *v14;
  id v15[2];
  _QWORD v16[4];

  v16[3] = *MEMORY[0x1E0C80C00];
  v2 = sub_1BC088F98();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v15 - v7;
  sub_1BC0895A4();
  sub_1BC089598();
  sub_1BC088F68();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v10 = (void *)sub_1BC088F50();
  v16[0] = 0;
  v11 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v10, 1, 0, v16);

  v15[0] = (id)v16[0];
  if (v11)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v8, v2);
    return v15[0];
  }
  else
  {
    v13 = v15[0];
    v14 = (void *)sub_1BC088F08();

    swift_willThrow();
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_1BC08A954();
    sub_1BC08A420();
    v15[1] = v14;
    sub_1BBFE24A4();
    sub_1BC08A3F0();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    result = (id)sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC01A408()
{
  return 0;
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultModelURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BC088F98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SummaryTabRelevanceEngineCoordinator.defaultModelContainerURL.getter((uint64_t)v3);
  sub_1BC088F74();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BC01A4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  uint64_t v9;

  v0 = sub_1BC088F98();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1ED69A1F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED69A1F8);
  type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = objc_msgSend(v6, sel_bundleURL);

  sub_1BC088F8C();
  sub_1BC088F74();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t static SummaryTabRelevanceEngineCoordinator.defaultPretrainedModelURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED69A218 != -1)
    swift_once();
  v2 = sub_1BC088F98();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED69A1F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t SummaryTabRelevanceEngineCoordinator.__allocating_init(healthExperienceStore:engineName:modelURL:pretrainedModelURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[5];

  v6 = v5;
  v25 = a2;
  v26 = a3;
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v13 = sub_1BC088F98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1;
  sub_1BBFE1C58(a1, (uint64_t)v29);
  if (qword_1ED69A1F0 != -1)
    swift_once();
  v17 = qword_1ED69A1E0;
  v18 = (objc_class *)type metadata accessor for FeedItemREElementDataSource();
  v19 = (char *)objc_allocWithZone(v18);
  sub_1BBFE1C58((uint64_t)v29, (uint64_t)&v19[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(_QWORD *)&v19[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = v17;
  v28.receiver = v19;
  v28.super_class = v18;
  swift_bridgeObjectRetain();
  v20 = objc_msgSendSuper2(&v28, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v21 + 32) = v20;
  v29[0] = v21;
  sub_1BC08A4E0();
  v22 = v29[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  sub_1BC01A864(a5, (uint64_t)v12);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, char *))(v6 + 184))(v22, v25, v26, v16, v12);
  sub_1BC01A8C0(a5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  __swift_destroy_boxed_opaque_existential_1(v27);
  return v23;
}

uint64_t sub_1BC01A864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC01A8C0(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id SummaryTabRelevanceEngineCoordinator.__allocating_init(dataSources:engineName:modelURL:pretrainedModelURL:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return SummaryTabRelevanceEngineCoordinator.init(dataSources:engineName:modelURL:pretrainedModelURL:)(a1, a2, a3, a4, a5);
}

id SummaryTabRelevanceEngineCoordinator.init(dataSources:engineName:modelURL:pretrainedModelURL:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  unsigned int v30;
  objc_class *v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  uint64_t v49;

  v45 = a5;
  v46 = a4;
  v40 = a2;
  v41 = a3;
  v42 = a1;
  ObjectType = swift_getObjectType();
  v6 = sub_1BC089DE4();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC08A6FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC08A6CC();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v13);
  v15 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v15);
  v39 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue;
  v37 = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v16 = v5;
  sub_1BC08A288();
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0(&qword_1ED69DCD0, v14, MEMORY[0x1E0DEF828]);
  sub_1BC01DE38(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DCC0, (uint64_t (*)(uint64_t))sub_1BC01DE38, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF8D0], v9);
  *(_QWORD *)(v38 + v39) = sub_1BC08A714();
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___primaryFeatures] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelVersion] = 9;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceEngine] = 0;
  v17 = &v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName];
  v18 = v41;
  *(_QWORD *)v17 = v40;
  *((_QWORD *)v17 + 1) = v18;
  *(_QWORD *)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dataSources] = v42;
  v19 = &v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath];
  v20 = sub_1BC088F98();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v46, v20);
  sub_1BC01A864(v45, (uint64_t)&v16[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_pretrainedModelURL]);

  sub_1BC089D9C();
  v42 = v8;
  v22 = sub_1BC089DD8();
  v23 = sub_1BC08A678();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v47 = v25;
    *(_DWORD *)v24 = 136315394;
    v49 = ObjectType;
    swift_getMetatypeMetadata();
    v26 = sub_1BC08A3E4();
    v49 = sub_1BBFDE0F8(v26, v27, &v47);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 1024;
    v28 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    sub_1BC08A3C0();
    v29 = (void *)sub_1BC08A3B4();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_BOOLForKey_, v29);

    LODWORD(v49) = v30;
    sub_1BC08A7EC();
    _os_log_impl(&dword_1BBFD7000, v22, v23, "[%s]: REUserDefaultMLExplanationsEnabled=%{BOOL}d", (uint8_t *)v24, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v25, -1, -1);
    MEMORY[0x1BCCE9C40](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  v31 = (objc_class *)type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  v48.receiver = v16;
  v48.super_class = v31;
  v32 = objc_msgSendSuper2(&v48, sel_init);
  v33 = sub_1BC01C19C();

  sub_1BC01A8C0(v45);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v46, v20);
  return v32;
}

id SummaryTabRelevanceEngineCoordinator.dispatchQueue.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue));
}

uint64_t sub_1BC01AE80(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1BC08A270();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC08A2B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1BC01DEC4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = &block_descriptor_3;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  sub_1BBFE6078(a1);
  sub_1BC08A288();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC01DED0(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD28, (uint64_t (*)(uint64_t))sub_1BC01DED0, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  MEMORY[0x1BCCE90DC](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1BC01B07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v5 = sub_1BC01C19C();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v8[4] = sub_1BC01EC98;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BBFE410C;
  v8[3] = &block_descriptor_22;
  v7 = _Block_copy(v8);
  sub_1BBFE6078(a2);
  swift_release();
  objc_msgSend(v5, sel_resetModelWithCompletion_, v7);
  _Block_release(v7);

}

id sub_1BC01B154()
{
  return sub_1BC01C1B0(&OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___primaryFeatures, (uint64_t (*)(uint64_t, uint64_t))sub_1BC01B168);
}

id sub_1BC01B168()
{
  unint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  id v4;

  v0 = static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()();
  sub_1BC0194C8(v0);
  v1 = sub_1BC01B230();
  sub_1BC0194C8(v1);
  v2 = objc_allocWithZone(MEMORY[0x1E0D84308]);
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D8F0);
  v3 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithFeatures_, v3);

  return v4;
}

uint64_t sub_1BC01B230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___crossedFeatures);
  }
  else
  {
    v2 = sub_1BC01B290();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC01B290()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  id v76;
  uint64_t v77;

  v77 = MEMORY[0x1E0DEE9D8];
  v0 = (void *)objc_opt_self();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC08B940;
  if (qword_1ED69DA88 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A0680;
  *(_QWORD *)(v1 + 32) = qword_1ED6A0680;
  v3 = qword_1ED69DA28;
  v4 = v2;
  if (v3 != -1)
    swift_once();
  v5 = (void *)qword_1ED6A0638;
  *(_QWORD *)(v1 + 40) = qword_1ED6A0638;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D8F0);
  v6 = v5;
  v7 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v7);

  v9 = v8;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v10 + 32) = v9;
  v11 = qword_1ED69D9F8;
  v76 = v9;
  if (v11 != -1)
    swift_once();
  v12 = (void *)qword_1ED6A0608;
  *(_QWORD *)(v10 + 40) = qword_1ED6A0608;
  sub_1BC08A4E0();
  v13 = v12;
  v14 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v14);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC08B940;
  v17 = (void *)qword_1ED6A0680;
  *(_QWORD *)(v16 + 32) = qword_1ED6A0680;
  v18 = qword_1ED69DA18;
  v19 = v17;
  if (v18 != -1)
    swift_once();
  v20 = (void *)qword_1ED6A0628;
  *(_QWORD *)(v16 + 40) = qword_1ED6A0628;
  sub_1BC08A4E0();
  v21 = v20;
  v22 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v22);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BC08B940;
  v25 = (void *)qword_1ED6A0680;
  *(_QWORD *)(v24 + 32) = qword_1ED6A0680;
  v26 = qword_1ED69DA58;
  v27 = v25;
  if (v26 != -1)
    swift_once();
  v28 = (void *)qword_1ED6A0660;
  *(_QWORD *)(v24 + 40) = qword_1ED6A0660;
  sub_1BC08A4E0();
  v29 = v28;
  v30 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v30);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1BC08B940;
  v33 = (void *)qword_1ED6A0680;
  *(_QWORD *)(v32 + 32) = qword_1ED6A0680;
  v34 = qword_1ED69DA70;
  v35 = v33;
  if (v34 != -1)
    swift_once();
  v36 = (void *)qword_1ED6A0670;
  *(_QWORD *)(v32 + 40) = qword_1ED6A0670;
  sub_1BC08A4E0();
  v37 = v36;
  v38 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v39 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v38);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BC08CCE0;
  v41 = (void *)qword_1ED6A0680;
  v42 = (void *)qword_1ED6A0628;
  *(_QWORD *)(v40 + 32) = qword_1ED6A0680;
  *(_QWORD *)(v40 + 40) = v42;
  v43 = (void *)qword_1ED6A0660;
  *(_QWORD *)(v40 + 48) = qword_1ED6A0660;
  sub_1BC08A4E0();
  v44 = v41;
  v45 = v42;
  v46 = v43;
  v47 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v47);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BC08CCE0;
  v50 = (void *)qword_1ED6A0680;
  v51 = (void *)qword_1ED6A0660;
  *(_QWORD *)(v49 + 32) = qword_1ED6A0680;
  *(_QWORD *)(v49 + 40) = v51;
  v52 = (void *)qword_1ED6A0670;
  *(_QWORD *)(v49 + 48) = qword_1ED6A0670;
  sub_1BC08A4E0();
  v53 = v50;
  v54 = v51;
  v55 = v52;
  v56 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v57 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v56);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1BC08CCE0;
  v59 = (void *)qword_1ED6A0680;
  v60 = (void *)qword_1ED6A0670;
  *(_QWORD *)(v58 + 32) = qword_1ED6A0680;
  *(_QWORD *)(v58 + 40) = v60;
  v61 = (void *)qword_1ED6A0628;
  *(_QWORD *)(v58 + 48) = qword_1ED6A0628;
  sub_1BC08A4E0();
  v62 = v59;
  v63 = v60;
  v64 = v61;
  v65 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(v0, sel_crossedFeatureWithFeatures_, v65);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1BC08B940;
  v68 = (void *)qword_1ED6A0680;
  *(_QWORD *)(v67 + 32) = qword_1ED6A0680;
  v69 = qword_1ED69DA10;
  v70 = v68;
  if (v69 != -1)
    swift_once();
  v71 = (void *)qword_1ED6A0620;
  *(_QWORD *)(v67 + 40) = qword_1ED6A0620;
  sub_1BC08A4E0();
  v72 = v71;
  v73 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v74 = objc_msgSend(v0, (SEL)&selRef_conditionForFeature_hasValue_ + 5, v73);

  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  return v77;
}

uint64_t sub_1BC01BBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceProviderManagerClasses);
  }
  else
  {
    sub_1BC01DDBC();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BC08B950;
    *(_QWORD *)(v2 + 32) = type metadata accessor for DateRangeRelevanceProviderManager();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SummaryTabRelevanceEngineCoordinator.modelPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath;
  v4 = sub_1BC088F98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_1BC01BCB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84390]), sel_init);
    v5 = sub_1BC01C19C();
    objc_msgSend(v5, sel_addTrainingContext_, v4);

    objc_msgSend(v4, sel_becomeCurrent);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_1BC01BD50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext) = a1;

}

void (*sub_1BC01BD64(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC01BCB0();
  return sub_1BC01BD98;
}

void sub_1BC01BD98(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext) = v2;

}

id sub_1BC01BDB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___metricsRecorder);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RelevanceEngineMetricsBlockRecorder()), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC01BE20(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1BC08A270();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC08A2B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1BC01DF18;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = &block_descriptor_6;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  swift_retain();
  sub_1BC08A288();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC01DED0(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD28, (uint64_t (*)(uint64_t))sub_1BC01DED0, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  MEMORY[0x1BCCE90DC](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1BC01C014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  id v10;

  v5 = (char *)sub_1BC01BDB0();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v7 + 2) = v6;
  *((_QWORD *)v7 + 3) = a2;
  *((_QWORD *)v7 + 4) = a3;
  v8 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v5[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
  v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
  *v8 = sub_1BC01EC60;
  v8[1] = v7;
  swift_retain();
  sub_1BBFE60FC(v9);

  v10 = sub_1BC01C19C();
  objc_msgSend(v10, sel_gatherMetrics);

}

uint64_t sub_1BC01C0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v9 = a4 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE9CC4](v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (char *)sub_1BC01BDB0();

    v13 = &v12[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback];
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    sub_1BBFE60FC(v14);

  }
  return a5(a1, a2, a3);
}

id sub_1BC01C19C()
{
  return sub_1BC01C1B0(&OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceEngine, (uint64_t (*)(uint64_t, uint64_t))sub_1BC01C21C);
}

id sub_1BC01C1B0(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t ObjectType;
  void *v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v8 = (void *)a2(v2, ObjectType);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

uint64_t sub_1BC01C21C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t inited;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v2 = sub_1BC088F98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_engineName + 8);
  v28 = v10;
  sub_1BC01A864(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_pretrainedModelURL, (uint64_t)&v26 - v8);
  v30 = v3;
  v31 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_modelPath, v2);
  v29 = sub_1BC01B154();
  v11 = sub_1BC089A9C();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    v13 = 0;
    do
    {
      v14 = v13 + 1;
      sub_1BC01C508(*(_BYTE *)(v11 + v13 + 32));
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      v13 = v14;
    }
    while (v12 != v14);
    v15 = v32;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dataSources);
  v16 = sub_1BC01BBD4();
  v17 = sub_1BC01BDB0();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B600;
  if (qword_1ED69AA90 != -1)
    swift_once();
  v19 = (void *)qword_1ED69A0C8;
  *(_QWORD *)(inited + 32) = qword_1ED69A0C8;
  v32 = inited;
  sub_1BC08A4E0();
  v20 = v32;
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue);
  v22 = v19;
  v23 = v29;
  v24 = static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(v28, v27, 9, (uint64_t)v9, (uint64_t)v5, (uint64_t)v29, v15, v26, v16, (uint64_t)v17, v20, v21);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  sub_1BC01A8C0((uint64_t)v9);
  return v24;
}

void sub_1BC01C508(char a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;

  v2 = sub_1BC089DE4();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BC0892A4();
  MEMORY[0x1E0C80A78](v3);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84380]), sel_init);
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  v5 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setName_, v5);

  __asm { BR              X10 }
}

uint64_t sub_1BC01C618()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;

  if (qword_1ED69DA38 != -1)
    swift_once();
  v1 = qword_1ED6A0648;
  v2 = objc_msgSend((id)objc_opt_self(), sel_conditionHasValueForFeature_, qword_1ED6A0648);
  v3 = objc_msgSend((id)objc_opt_self(), sel_conditionForLeftFeature_relation_rightFeature_, v1, 2, v1);
  v4 = objc_allocWithZone(MEMORY[0x1E0D84348]);
  v5 = v2;
  v6 = objc_msgSend(v4, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v5, v5, v3, 1);

  LODWORD(v7) = 1144750080;
  objc_msgSend(v6, sel_setPriority_, v7);
  v8 = v6;
  v9 = *(void **)(v0 - 120);
  v10 = objc_msgSend(v9, sel_rules);
  sub_1BBFDF744(0, &qword_1ED69D8D8);
  sub_1BC01EBB8();
  v11 = sub_1BC08A54C();

  *(_QWORD *)(v0 - 112) = v11;
  sub_1BBFF2AD0((_QWORD *)(v0 - 104), v8);

  v12 = (void *)sub_1BC08A540();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRules_, v12);

  if (qword_1ED69DA20 != -1)
    swift_once();
  v13 = _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(qword_1ED6A0630);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v13, sel_setPriority_, v14);
  v15 = v13;
  v16 = objc_msgSend(v9, sel_rules);
  v17 = sub_1BC08A54C();

  *(_QWORD *)(v0 - 112) = v17;
  sub_1BBFF2AD0((_QWORD *)(v0 - 104), v15);

  v18 = (void *)sub_1BC08A540();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRules_, v18);

  return *(_QWORD *)(v0 - 120);
}

id sub_1BC01D9CC()
{
  id v0;
  id v1;

  v0 = sub_1BC01C19C();
  v1 = objc_msgSend(v0, sel_automaticallyResumeEngine);

  return v1;
}

void sub_1BC01DA04(char a1)
{
  id v2;

  v2 = sub_1BC01C19C();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, a1 & 1);

}

void (*sub_1BC01DA44(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  id v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = sub_1BC01C19C();
  v4 = objc_msgSend(v3, sel_automaticallyResumeEngine);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1BC01DA98;
}

void sub_1BC01DA98(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = sub_1BC01C19C();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, v1);

}

id sub_1BC01DADC()
{
  if (qword_1ED69AA90 != -1)
    swift_once();
  return (id)qword_1ED69A0C8;
}

id SummaryTabRelevanceEngineCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SummaryTabRelevanceEngineCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SummaryTabRelevanceEngineCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryTabRelevanceEngineCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BC01DCAC()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator_dispatchQueue));
}

id sub_1BC01DCC0()
{
  return sub_1BC01C19C();
}

id sub_1BC01DCE0()
{
  return sub_1BC01BCB0();
}

id sub_1BC01DD00()
{
  id v0;
  void *v1;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84338]), sel_init);
  v1 = (void *)sub_1BC08A3B4();
  objc_msgSend(v0, sel_setName_, v1);

  objc_msgSend(v0, sel_setEnableExploreExploit_, 1);
  if (qword_1ED69AC60 != -1)
    swift_once();
  result = objc_msgSend(v0, sel_setBiasFeature_, qword_1ED6A0508);
  qword_1ED69A0C8 = (uint64_t)v0;
  return result;
}

void sub_1BC01DDBC()
{
  unint64_t v0;
  unint64_t v1;

  v0 = sub_1BC01E284();
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  else
    sub_1BBFDB42C(0, &qword_1ED69D908, (uint64_t (*)(uint64_t))sub_1BC01E284, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC01DE38(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69DCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t type metadata accessor for SummaryTabRelevanceEngineCoordinator()
{
  uint64_t result;

  result = qword_1ED69A230;
  if (!qword_1ED69A230)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC01DE90()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC01DEC4()
{
  uint64_t *v0;

  sub_1BC01B07C(v0[2], v0[3], v0[4]);
}

void sub_1BC01DED0(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC01DEEC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC01DF18()
{
  uint64_t *v0;

  sub_1BC01C014(v0[2], v0[3], v0[4]);
}

id sub_1BC01DF24@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC01BCB0();
  *a1 = result;
  return result;
}

void sub_1BC01DF4C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___trainingContext);
}

id sub_1BC01DF58@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC01C19C();
  *a1 = result;
  return result;
}

void sub_1BC01DF80(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC18HealthPlatformCore36SummaryTabRelevanceEngineCoordinator____lazy_storage___relevanceEngine);
}

void keypath_setTm(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  id v6;
  id v7;

  v5 = *a1;
  v7 = *(id *)(*a2 + *a5);
  *(_QWORD *)(*a2 + *a5) = *a1;
  v6 = v5;

}

void sub_1BC01DFC4(unsigned __int8 *a1@<X8>)
{
  id v2;
  unsigned __int8 v3;

  v2 = sub_1BC01C19C();
  v3 = objc_msgSend(v2, sel_automaticallyResumeEngine);

  *a1 = v3;
}

void sub_1BC01E00C(unsigned __int8 *a1)
{
  uint64_t v1;
  id v2;

  v1 = *a1;
  v2 = sub_1BC01C19C();
  objc_msgSend(v2, sel_setAutomaticallyResumeEngine_, v1);

}

uint64_t sub_1BC01E050()
{
  return type metadata accessor for SummaryTabRelevanceEngineCoordinator();
}

void sub_1BC01E058()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC088F98();
  if (v0 <= 0x3F)
  {
    sub_1BBFDB42C(319, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SummaryTabRelevanceEngineCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.logPrefix.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.__allocating_init(dataSources:engineName:modelURL:pretrainedModelURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.clearEngineAndModel(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.trainingContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.gatherMetrics(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.relevanceEngine.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.automaticallyResumeRelevenceEngine.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of SummaryTabRelevanceEngineCoordinator.interactionDescriptor(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

unint64_t sub_1BC01E284()
{
  unint64_t result;

  result = qword_1ED69D8C8;
  if (!qword_1ED69D8C8)
  {
    sub_1BBFDF744(255, &qword_1ED69D8C0);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69D8C8);
  }
  return result;
}

uint64_t (*sub_1BC01E2CC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC01E3A4(v6, a2, a3);
  return sub_1BC01E320;
}

uint64_t (*sub_1BC01E324(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC01E410(v6, a2, a3);
  return sub_1BC01E320;
}

void sub_1BC01E378(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1BC01E3A4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCE934C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1BC01ECD0;
  }
  __break(1u);
  return result;
}

void (*sub_1BC01E410(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCE934C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1BC01E47C;
  }
  __break(1u);
  return result;
}

void sub_1BC01E47C(id *a1)
{

}

uint64_t sub_1BC01E484(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC01E8FC(0, &qword_1EF3EE130, (unint64_t *)&qword_1ED69C960);
        sub_1BC01EB78(&qword_1EF3EE138, &qword_1EF3EE130, (unint64_t *)&qword_1ED69C960);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC01E2CC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69C960);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC01E6C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC01E8FC(0, &qword_1EF3EE120, (unint64_t *)&qword_1ED69D8F0);
        sub_1BC01EB78(&qword_1EF3EE128, &qword_1EF3EE120, (unint64_t *)&qword_1ED69D8F0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC01E2CC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D8F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BC01E8FC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BBFDF744(255, a3);
    v4 = sub_1BC08A534();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC01E950(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BC01EB5C(0);
        sub_1BBFDA9C0(&qword_1ED69ADD0, (uint64_t (*)(uint64_t))sub_1BC01EB5C, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BC01E324(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BC089C4C();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BC01EB5C(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69ADC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC01EB78(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC01E8FC(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC01EBB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69D8E0;
  if (!qword_1ED69D8E0)
  {
    v1 = sub_1BBFDF744(255, &qword_1ED69D8D8);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69D8E0);
  }
  return result;
}

uint64_t sub_1BC01EC10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC01EC34()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC01EC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC01C0E8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_1BC01EC6C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC01EC98()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void ForYouSectionKind.localizedTitle.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC01ED04()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for SummaryTabFeedPopulationManager();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BC088EF0();

  return v2;
}

void sub_1BC01EF84()
{
  void *v0;
  id v1;

  sub_1BC0899B8();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 2);

  qword_1ED6A0678 = (uint64_t)v1;
}

uint64_t sub_1BC01F000()
{
  uint64_t result;

  if (qword_1ED69DA78 != -1)
    swift_once();
  result = sub_1BC05E28C(5);
  qword_1ED6A0670 = result;
  return result;
}

void sub_1BC01F058()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;

  sub_1BC00DA34();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B600;
  v1 = (void *)objc_opt_self();
  if (qword_1ED69DA78 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A0678;
  sub_1BC0899B8();
  v3 = v2;
  sub_1BC089730();
  v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v6);
  v5 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v3, v4);

  if (v5)
  {
    *(_QWORD *)(v0 + 32) = v5;
    sub_1BC08A4E0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC01F190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t result;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  swift_bridgeObjectRetain_n();
  v12 = sub_1BC089DD8();
  v13 = sub_1BC08A678();
  if (os_log_type_enabled(v12, v13))
  {
    v28 = a2;
    v14 = swift_slowAlloc();
    v29 = a3;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v31 = v16;
    v27 = v9;
    *(_DWORD *)v15 = 136315138;
    v25[1] = v15 + 4;
    sub_1BC01F540();
    v17 = v4;
    swift_bridgeObjectRetain();
    v18 = sub_1BC08A30C();
    v26 = v8;
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = v18;
    v4 = v17;
    v30 = sub_1BBFDE0F8(v21, v20, &v31);
    a2 = v28;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v12, v13, "Training metrics received from RelevanceEngine: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v16, -1, -1);
    v22 = v15;
    a3 = v29;
    MEMORY[0x1BCCE9C40](v22, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4
                                                         + OBJC_IVAR____TtC18HealthPlatformCore35RelevanceEngineMetricsBlockRecorder_callback);
  if (v24)
  {
    swift_retain();
    v24(a1, a2, a3);
    return sub_1BBFE60FC((uint64_t)v24);
  }
  return result;
}

id sub_1BC01F4DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RelevanceEngineMetricsBlockRecorder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RelevanceEngineMetricsBlockRecorder()
{
  return objc_opt_self();
}

unint64_t sub_1BC01F540()
{
  unint64_t result;

  result = qword_1ED69DCE0;
  if (!qword_1ED69DCE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69DCE0);
  }
  return result;
}

uint64_t sub_1BC01F57C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t *);
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void (*v53)(uint64_t, char *, uint64_t);
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  id v64;
  void *v65;
  uint64_t v66;
  id *v67;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[4];

  v2 = sub_1BC089574();
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  MEMORY[0x1E0C80A78](v2);
  v81 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC02024C(0, &qword_1ED69C888, (unint64_t *)&qword_1ED69BB68, MEMORY[0x1E0D2E728], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v75 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v69 - v6;
  v80 = (uint64_t *)sub_1BC0894CC();
  v78 = *(v80 - 1);
  MEMORY[0x1E0C80A78](v80);
  v79 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC08952C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v69 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v69 - v17;
  v83 = a1;
  v19 = (void *)sub_1BC08955C();
  v20 = (void *)sub_1BC0893C4();
  v21 = sub_1BC0893AC();

  if ((v21 & 1) != 0)
  {
    v69 = v13;
    v70 = v7;
    v71 = v5;
    v73 = v10;
    v74 = v16;
    v72 = v9;
    sub_1BC0893C4();
    v22 = sub_1BBFFD5DC(MEMORY[0x1E0DEE9D8]);
    sub_1BC01FD50(v22);
    swift_bridgeObjectRelease();
    v23 = v79;
    v24 = *(void (**)(char *, _QWORD, uint64_t *))(v78 + 104);
    v25 = v80;
    v24(v79, *MEMORY[0x1E0D2D9E8], v80);
    sub_1BC089508();
    v26 = v83;
    sub_1BC089538();
    __swift_project_boxed_opaque_existential_1(v87, v87[3]);
    v27 = v18;
    if ((sub_1BC08946C() & 1) != 0)
    {
      v46 = (uint64_t)(v82 + 16);
      __swift_project_boxed_opaque_existential_1((_QWORD *)v82 + 2, *((_QWORD *)v82 + 5));
      if (sub_1BC089220() == 0xD000000000000020 && v47 == 0x80000001BC08FB40)
      {
        swift_bridgeObjectRelease();
        v48 = v72;
        v49 = v73;
        v50 = (uint64_t)v74;
      }
      else
      {
        v51 = sub_1BC08AB94();
        swift_bridgeObjectRelease();
        v48 = v72;
        v49 = v73;
        v50 = (uint64_t)v74;
        v52 = (uint64_t)v81;
        if ((v51 & 1) == 0)
        {
          sub_1BC02024C(0, &qword_1ED69C9F0, &qword_1ED69BAE8, MEMORY[0x1E0D2DB88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = xmmword_1BC08B950;
          v65 = (void *)*((_QWORD *)v82 + 7);
          sub_1BBFE1C58(v46, (uint64_t)&v84);
          (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v50, v27, v48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v52, v83, v77);
          v66 = type metadata accessor for InteractiveGeneratorToPipelineAdaptor();
          swift_allocObject();
          v67 = InteractiveGeneratorToPipelineAdaptor.init(queue:pluginInfo:domain:context:commitImmediately:)(v65, (uint64_t)&v84, v50, v52, 0);
          *(_QWORD *)(v28 + 56) = v66;
          *(_QWORD *)(v28 + 64) = sub_1BBFDA9C0(&qword_1ED69C5C0, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveGeneratorToPipelineAdaptor, (uint64_t)&protocol conformance descriptor for InteractiveGeneratorToPipelineAdaptor);
          *(_QWORD *)(v28 + 32) = v67;
          (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v48);
          goto LABEL_11;
        }
      }
      v53 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 16);
      v53(v50, v27, v48);
      v24(v23, *MEMORY[0x1E0D2D9D8], v25);
      sub_1BC0894E4();
      sub_1BC02024C(0, &qword_1ED69C9F0, &qword_1ED69BAE8, MEMORY[0x1E0D2DB88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1BC08B950;
      v54 = (void *)*((_QWORD *)v82 + 7);
      sub_1BBFE1C58(v46, (uint64_t)&v84);
      v55 = v69;
      v56 = v48;
      v53((uint64_t)v69, (char *)v50, v48);
      v58 = v76;
      v57 = v77;
      v59 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v81, v83, v77);
      v60 = type metadata accessor for GenerationOperationToGeneratorPipelineAdaptor();
      v61 = swift_allocObject();
      v82 = v27;
      v62 = v61;
      *(_QWORD *)(v61 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_queue) = v54;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v61 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_domain, v55, v56);
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_context, v59, v57);
      sub_1BBFE95C8(&v84, v62 + OBJC_IVAR____TtC18HealthPlatformCore45GenerationOperationToGeneratorPipelineAdaptor_pluginInfo);
      *(_QWORD *)(v28 + 56) = v60;
      *(_QWORD *)(v28 + 64) = sub_1BBFDA9C0(&qword_1ED69AFF0, (uint64_t (*)(uint64_t))type metadata accessor for GenerationOperationToGeneratorPipelineAdaptor, (uint64_t)&protocol conformance descriptor for GenerationOperationToGeneratorPipelineAdaptor);
      *(_QWORD *)(v28 + 32) = v62;
      v63 = *(void (**)(char *, uint64_t))(v49 + 8);
      v64 = v54;
      v63(v74, v56);
      v63(v82, v56);
    }
    else
    {
      sub_1BC02024C(0, &qword_1ED69C9F0, &qword_1ED69BAE8, MEMORY[0x1E0D2DB88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1BC08B950;
      v80 = (uint64_t *)(v28 + 32);
      v29 = (void *)*((_QWORD *)v82 + 7);
      sub_1BBFE1C58((uint64_t)(v82 + 16), (uint64_t)&v84);
      v30 = v73;
      v31 = v74;
      v79 = *(char **)(v73 + 16);
      v32 = v26;
      v82 = v18;
      v33 = v72;
      ((void (*)(char *, char *, uint64_t))v79)(v74, v18, v72);
      v35 = v76;
      v34 = v77;
      v36 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v81, v32, v77);
      v37 = type metadata accessor for GenerationOperationToGeneratorAdaptor();
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_queue) = v29;
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v38 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_domain, v31, v33);
      (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v38 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_context, v36, v34);
      sub_1BBFE95C8(&v84, v38 + OBJC_IVAR____TtC18HealthPlatformCore37GenerationOperationToGeneratorAdaptor_pluginInfo);
      v85 = v37;
      v86 = sub_1BBFDA9C0(&qword_1ED69A040, (uint64_t (*)(uint64_t))type metadata accessor for GenerationOperationToGeneratorAdaptor, (uint64_t)"a@A+4l");
      *(_QWORD *)&v84 = v38;
      sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69BB68);
      v39 = v29;
      v40 = v70;
      sub_1BC08A060();
      sub_1BC0202AC();
      v41 = v75;
      v42 = sub_1BC08A180();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v41);
      v43 = v82;
      ((void (*)(char *, char *, uint64_t))v79)(v31, v82, v33);
      v44 = sub_1BC0898E0();
      v45 = MEMORY[0x1E0D2E230];
      *(_QWORD *)(v28 + 56) = v44;
      *(_QWORD *)(v28 + 64) = v45;
      __swift_allocate_boxed_opaque_existential_0(v80);
      MEMORY[0x1BCCE82A8](v42, v31);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v43, v33);
    }
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
    return v28;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC01FD50(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1BC08A8A0())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E8];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_1BC020314();
  v3 = sub_1BC08A93C();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC08A864();
  sub_1BBFDF744(0, &qword_1ED69C918);
  sub_1BBFFD9C0(&qword_1ED69C920, &qword_1ED69C918);
  result = sub_1BC08A588();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1BC08A8C4())
      goto LABEL_45;
    sub_1BBFDF744(0, &qword_1ED69C918);
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_1BC08A7B0();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1BBFE2D28();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1BC020100()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GenerationOperationToPluginDelegateAdaptor()
{
  return objc_opt_self();
}

void sub_1BC02014C()
{
  sub_1BC08AA74();
  __break(1u);
}

uint64_t sub_1BC0201A4(uint64_t a1)
{
  return sub_1BC01F57C(a1);
}

unint64_t sub_1BC0201CC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC08A7B0();
  result = sub_1BC08A84C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1BC02024C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BBFDC1EC(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC0202AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A048;
  if (!qword_1ED69A048)
  {
    sub_1BC02024C(255, &qword_1ED69C888, (unint64_t *)&qword_1ED69BB68, MEMORY[0x1E0D2E728], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A048);
  }
  return result;
}

void sub_1BC020314()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C9B0)
  {
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69D890);
    sub_1BBFFD9C0(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890);
    v0 = sub_1BC08A948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C9B0);
  }
}

void sub_1BC0203A4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  void (*v16)();
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  void (*v25)();
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  v2 = sub_1BC089DE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_name);
  v7 = sub_1BC08A3C0();
  v9 = v8;

  sub_1BC0899B8();
  if (sub_1BC08973C() == v7 && v10 == v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v12 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0D2E420];
    v15 = MEMORY[0x1E0D2E410];
    v16 = sub_1BC01F058;
    v17 = MEMORY[0x1E0D2E408];
LABEL_11:
    sub_1BC020A38((uint64_t (*)(_QWORD))v14, v15, (uint64_t (*)(uint64_t))v16, v17);
    return;
  }
  sub_1BC089940();
  if (sub_1BC08973C() == v7 && v13 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0D2E380];
    v15 = MEMORY[0x1E0D2E370];
    v16 = sub_1BC026498;
    v17 = MEMORY[0x1E0D2E368];
    goto LABEL_11;
  }
  v18 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_14;
  sub_1BC0898F8();
  if (sub_1BC08973C() == v7 && v19 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1BC020DD8();
    return;
  }
  v20 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_19;
  sub_1BC089A0C();
  if (sub_1BC08973C() == v7 && v21 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0D2E4B8];
    v24 = MEMORY[0x1E0D2E4A8];
    v25 = sub_1BC0149D0;
    v26 = MEMORY[0x1E0D2E4A0];
LABEL_25:
    sub_1BC02153C((uint64_t (*)(_QWORD))v23, v24, (uint64_t (*)(void))v25, v26);
    return;
  }
  v22 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_24;
  sub_1BC0209F4();
  if (sub_1BC08973C() == v7 && v27 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRelease();
    sub_1BC02115C();
    return;
  }
  v28 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_30;
  sub_1BC089694();
  if (sub_1BC08973C() == v7 && v29 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0D2DE18];
    v24 = MEMORY[0x1E0D2DE10];
    v25 = sub_1BC0145B4;
    v26 = MEMORY[0x1E0D2DE08];
    goto LABEL_25;
  }
  v30 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
    goto LABEL_35;
  sub_1BC0897E4();
  if (sub_1BC08973C() == v7 && v31 == v9)
  {
    swift_bridgeObjectRelease();
LABEL_40:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0D2E018];
    v24 = MEMORY[0x1E0D2E008];
    v25 = sub_1BC014854;
    v26 = MEMORY[0x1E0D2E000];
    goto LABEL_25;
  }
  v32 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    goto LABEL_40;
  sub_1BC089754();
  if (sub_1BC08973C() == v7 && v33 == v9)
  {
    swift_bridgeObjectRelease_n();
LABEL_45:
    v23 = MEMORY[0x1E0D2DF68];
    v24 = MEMORY[0x1E0D2DF58];
    v25 = sub_1BC0146C0;
    v26 = MEMORY[0x1E0D2DF50];
    goto LABEL_25;
  }
  v34 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_45;
  sub_1BC089D9C();
  v35 = v1;
  v36 = sub_1BC089DD8();
  v37 = sub_1BC08A660();
  v46 = v37;
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v48 = v45;
    *(_DWORD *)v38 = 136446210;
    v44[1] = v38 + 4;
    v39 = objc_msgSend(v35, sel_name);
    v40 = sub_1BC08A3C0();
    v42 = v41;

    v47 = sub_1BBFDE0F8(v40, v42, &v48);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v36, (os_log_type_t)v46, "A RelevanceFeatureTag was submitted that we do not have logic to decode (or we forgot to write it): %{public}s", v38, 0xCu);
    v43 = v45;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v43, -1, -1);
    MEMORY[0x1BCCE9C40](v38, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1BC0209F4()
{
  unint64_t result;

  result = qword_1ED69ACB0;
  if (!qword_1ED69ACB0)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for MutualExclusionGroupFeatureTag, &type metadata for MutualExclusionGroupFeatureTag);
    atomic_store(result, (unint64_t *)&qword_1ED69ACB0);
  }
  return result;
}

uint64_t sub_1BC020A38(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];

  v14[5] = a4;
  v6 = sub_1BC089DE4();
  v14[6] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v7 = a1(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  v11 = sub_1BC08997C();
  v12 = a3(v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1BC020DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_1BC089DE4();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1BC0898F8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC08997C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC02115C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v0 = sub_1BC089DE4();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC021910();
  sub_1BC08997C();
  sub_1BC00DA34();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC08B600;
  v2 = objc_allocWithZone(MEMORY[0x1E0D84330]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithGroupIdentifier_, v3);

  if (v4)
  {
    *(_QWORD *)(v1 + 32) = v4;
    sub_1BC08A4E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC02153C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];
  uint64_t v15;

  v14[5] = a4;
  v6 = sub_1BC089DE4();
  v14[6] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v7 = a1(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  sub_1BC08997C();
  sub_1BC00DA34();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v11 + 32) = a3();
  v15 = v11;
  sub_1BC08A4E0();
  v12 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

unint64_t sub_1BC021910()
{
  unint64_t result;

  result = qword_1ED69ACB8;
  if (!qword_1ED69ACB8)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for MutualExclusionGroupFeatureTag, &type metadata for MutualExclusionGroupFeatureTag);
    atomic_store(result, (unint64_t *)&qword_1ED69ACB8);
  }
  return result;
}

uint64_t sub_1BC021954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  _QWORD v9[2];

  v1 = sub_1BC089064();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 95;
  v9[1] = 0xE100000000000000;
  v6 = objc_msgSend(*(id *)(v0 + 24), sel_profileIdentifier);
  v7 = objc_msgSend(v6, sel_identifier);

  sub_1BC08904C();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, v2, MEMORY[0x1E0CB09F0]);
  sub_1BC08AB64();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return v9[0];
}

id sub_1BC021A68(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD v12[2];

  v2 = sub_1BC089064();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84338]), sel_init);
  v12[0] = sub_1BC08AC9C();
  v12[1] = v8;
  sub_1BC08A420();
  v9 = objc_msgSend(a1, sel_identifier);
  sub_1BC08904C();

  sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, v3, MEMORY[0x1E0CB09F0]);
  sub_1BC08AB64();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  v10 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setName_, v10);

  objc_msgSend(v7, sel_setEnableExploreExploit_, 0);
  return v7;
}

id sub_1BC021BEC()
{
  id v0;
  void *v1;
  id v2;

  static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()();
  v0 = objc_allocWithZone(MEMORY[0x1E0D84308]);
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D8F0);
  v1 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithFeatures_, v1);

  return v2;
}

uint64_t sub_1BC021C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1ED69A090);
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED69A090);
  v3 = sub_1BC088F98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
}

uint64_t sub_1BC021CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v9;

  v0 = sub_1BC088F98();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1ED69A4F0);
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED69A4F0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v7 = objc_msgSend(v6, sel_temporaryDirectory);

  sub_1BC088F8C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v4, v0);
}

uint64_t sub_1BC021DE4()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProfileDashboardRelevanceEngineCoordinator()
{
  return objc_opt_self();
}

id sub_1BC021E50()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 72);
}

id sub_1BC021E5C()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 80);
}

id sub_1BC021E68()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 88);
}

uint64_t sub_1BC021E74()
{
  return sub_1BC021954();
}

id sub_1BC021E94()
{
  uint64_t v0;
  void (**v1)(unint64_t *, _QWORD, uint64_t);
  uint64_t v2;
  unint64_t *v3;
  id v4;
  void *v5;
  uint64_t inited;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  double v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;

  v0 = sub_1BC0895D4();
  v1 = *(void (***)(unint64_t *, _QWORD, uint64_t))(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (unint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84380]), sel_init);
  _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  v5 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setName_, v5);

  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08CCE0;
  if (qword_1ED69DA30 != -1)
LABEL_14:
    swift_once();
  v7 = (void *)qword_1ED6A0640;
  v1[13](v3, *MEMORY[0x1E0D2DB38], v0);
  sub_1BC0895C8();
  ((void (*)(unint64_t *, uint64_t))v1[1])(v3, v0);
  v8 = v7;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_conditionForFeature_hasValue_, v8, v9);

  v12 = objc_msgSend(v10, sel_notCondition_, v11);
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_trueCondition);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84348]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v11, v12, v14, 1);
  swift_bridgeObjectRelease();

  *(_QWORD *)(inited + 32) = v15;
  if (qword_1ED69DA20 != -1)
    swift_once();
  v16 = qword_1ED6A0630;
  v17 = objc_msgSend(v10, sel_conditionHasValueForFeature_, qword_1ED6A0630, v37);
  v18 = objc_msgSend(v13, sel_conditionForLeftFeature_relation_rightFeature_, v16, 2, v16);
  v19 = objc_allocWithZone(MEMORY[0x1E0D84348]);
  v20 = v17;
  v1 = (void (**)(unint64_t *, _QWORD, uint64_t))objc_msgSend(v19, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v20, v20, v18, 1);

  *(_QWORD *)(inited + 40) = v1;
  if (qword_1ED69A088 != -1)
    swift_once();
  v21 = qword_1ED6A04E0;
  v22 = objc_msgSend(v10, sel_conditionHasValueForFeature_, qword_1ED6A04E0);
  v23 = objc_msgSend(v13, sel_conditionForLeftFeature_relation_rightFeature_, v21, 2, v21);
  v24 = objc_allocWithZone(MEMORY[0x1E0D84348]);
  v25 = v22;
  v26 = objc_msgSend(v24, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v25, v25, v23, -1);

  *(_QWORD *)(inited + 48) = v26;
  v39 = inited;
  v3 = &v39;
  sub_1BC08A4E0();
  v27 = 0;
  inited = v39;
  v37 = v39 & 0xFFFFFFFFFFFFFF8;
  v0 = 6;
  do
  {
    v35 = v0 - 4;
    if ((inited & 0xC000000000000001) != 0)
    {
      v28 = (id)MEMORY[0x1BCCE934C](v35, inited);
    }
    else
    {
      if (v35 >= *(_QWORD *)(v37 + 16))
      {
        __break(1u);
        goto LABEL_14;
      }
      v28 = *(id *)(inited + 8 * v0);
    }
    v30 = v28;
    v31 = v27 + 1;
    *(float *)&v29 = (float)v27;
    objc_msgSend(v28, sel_setPriority_, v29, v37);
    v32 = v30;
    v33 = objc_msgSend(v4, sel_rules);
    sub_1BBFDF744(0, &qword_1ED69D8D8);
    sub_1BC01EBB8();
    v34 = sub_1BC08A54C();

    v38 = (unint64_t *)v34;
    sub_1BBFF2AD0(&v39, v32);

    v3 = v38;
    v1 = (void (**)(unint64_t *, _QWORD, uint64_t))sub_1BC08A540();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setRules_, v1);

    --v0;
    v27 = v31;
  }
  while (v31 != 3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC0223A0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  objc_super v11;
  _QWORD v12[5];

  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC08B600;
  sub_1BBFE1C58(a2, (uint64_t)v12);
  sub_1BC022C54(0, (unint64_t *)&qword_1ED69DBD0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v5 + 32) = a1;
  v6 = (objc_class *)type metadata accessor for FeedItemREElementDataSource();
  v7 = (char *)objc_allocWithZone(v6);
  sub_1BBFE1C58((uint64_t)v12, (uint64_t)&v7[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_store]);
  *(_QWORD *)&v7[OBJC_IVAR____TtC18HealthPlatformCore27FeedItemREElementDataSource_sourceProfiles] = v5;
  v11.receiver = v7;
  v11.super_class = v6;
  v8 = a1;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  *(_QWORD *)(v4 + 32) = v9;
  v12[0] = v4;
  sub_1BC08A4E0();
  return v12[0];
}

_QWORD *sub_1BC0224CC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t (*v23)(uint64_t);
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v51;
  _QWORD v52[2];
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int128 v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v3 = v2;
  v55 = *v3;
  v6 = sub_1BC088F98();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x1E0C80A78](v6);
  v62 = (uint64_t)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v61 = (uint64_t)v52 - v10;
  v60 = sub_1BC08A6FC();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  *(_QWORD *)&v57 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC08A6CC();
  MEMORY[0x1E0C80A78](v12);
  v56 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1BC089064();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = v15;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a1;
  sub_1BBFE1C58(a1, (uint64_t)(v3 + 4));
  v3[3] = (uint64_t)a2;
  v52[1] = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v66 = 40;
  v67 = 0xE100000000000000;
  v20 = a2;
  sub_1BC08AC9C();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  v21 = objc_msgSend(v20, sel_profileIdentifier);
  v22 = objc_msgSend(v21, sel_identifier);

  sub_1BC08904C();
  v54 = sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v52[0] = v17;
  sub_1BC08AB64();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  v53 = *(void (**)(char *, uint64_t))(v16 + 8);
  v53(v19, v17);
  sub_1BC08A288();
  v66 = MEMORY[0x1E0DEE9D8];
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BBFDA9C0(&qword_1ED69DCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BBFDB42C(0, &qword_1ED69DCB8, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BBFEF1A8();
  sub_1BC08A834();
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v58 + 104))(v57, *MEMORY[0x1E0DEF8D0], v60);
  v3[2] = sub_1BC08A714();
  v24 = objc_msgSend(v20, sel_profileIdentifier);
  v25 = sub_1BC021A68(v24);

  v60 = (uint64_t)v3;
  v3[11] = (uint64_t)v25;
  v26 = v20;
  v66 = 0;
  v67 = 0xE000000000000000;
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  v66 = 0xD000000000000011;
  v67 = 0x80000001BC0905F0;
  v27 = objc_msgSend(v20, sel_profileIdentifier);
  v28 = objc_msgSend(v27, sel_identifier);

  sub_1BC08904C();
  v29 = v52[0];
  sub_1BC08AB64();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  v53(v19, v29);
  sub_1BC08A420();
  v30 = v67;
  v58 = v66;
  if (qword_1ED69A4E8 != -1)
    swift_once();
  v31 = __swift_project_value_buffer((uint64_t)v59, (uint64_t)qword_1ED69A090);
  sub_1BC01A864(v31, v61);
  if (qword_1ED69A510 != -1)
    swift_once();
  v32 = v64;
  v33 = __swift_project_value_buffer(v64, (uint64_t)qword_1ED69A4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v62, v33, v32);
  v59 = sub_1BC021BEC();
  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  inited = swift_initStackObject();
  v57 = xmmword_1BC08B600;
  *(_OWORD *)(inited + 16) = xmmword_1BC08B600;
  *(_QWORD *)(inited + 32) = sub_1BC021E94();
  v66 = inited;
  sub_1BC08A4E0();
  v35 = v66;
  v36 = objc_msgSend(v26, (SEL)&stru_1E74A6440.name);
  v37 = sub_1BC0223A0(v36, v65);

  sub_1BC01DDBC();
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v38 + 32) = type metadata accessor for DateRangeRelevanceProviderManager();
  v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = v57;
  v40 = (_QWORD *)v60;
  v41 = *(void **)(v60 + 88);
  *(_QWORD *)(v39 + 32) = v41;
  v66 = v39;
  sub_1BC08A4E0();
  v42 = v66;
  v43 = v40[2];
  v44 = v41;
  v51 = v43;
  v45 = v59;
  v47 = v61;
  v46 = v62;
  v48 = (void *)static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(v58, v30, 0, v61, v62, (uint64_t)v59, v35, v37, v38, 0, v42, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v46, v64);
  sub_1BC01A8C0(v47);
  v40[9] = v48;
  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84390]), sel_init);
  objc_msgSend(v48, sel_addTrainingContext_, v49);
  objc_msgSend(v49, sel_becomeCurrent);
  __swift_destroy_boxed_opaque_existential_1(v65);
  v40[10] = v49;
  return v40;
}

void sub_1BC022C54(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC08AB70();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t Generator.eraseToAnyGenerator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  _QWORD v23[2];

  v23[0] = sub_1BC08952C();
  v7 = *(_QWORD *)(v23[0] - 8);
  v8 = MEMORY[0x1E0C80A78](v23[0]);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1BC089604();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v16 = sub_1BC08A3E4();
  v18 = v17;
  *a3 = sub_1BC023158;
  a3[1] = (uint64_t (*)())v15;
  sub_1BBFDB2F8(0, &qword_1ED69D048, (uint64_t (*)(uint64_t))sub_1BBFDAED0);
  v20 = v19;
  result = (*(uint64_t (**)(char *, char *, _QWORD))(v7 + 32))((char *)a3 + *(int *)(v19 + 44), v10, v23[0]);
  v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 48));
  *v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t SharableModelGenerator.eraseToAnyGenerator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v22;
  _QWORD v23[2];

  v23[0] = sub_1BC08952C();
  v7 = *(_QWORD *)(v23[0] - 8);
  v8 = MEMORY[0x1E0C80A78](v23[0]);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, v13, a1);
  sub_1BC089904();
  v23[1] = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v16 = sub_1BC08A3E4();
  v18 = v17;
  *a3 = sub_1BC023174;
  a3[1] = (uint64_t (*)())v15;
  sub_1BBFDB2F8(0, &qword_1ED69D060, (uint64_t (*)(uint64_t))sub_1BBFDB354);
  v20 = v19;
  result = (*(uint64_t (**)(char *, char *, _QWORD))(v7 + 32))((char *)a3 + *(int *)(v19 + 44), v10, v23[0]);
  v22 = (uint64_t *)((char *)a3 + *(int *)(v20 + 48));
  *v22 = v16;
  v22[1] = v18;
  return result;
}

uint64_t AnyGenerator.domain.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_1BC08952C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t AnyGenerator.wrappedTypeName.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AnyGenerator.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = sub_1BC08952C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_1BC08AC9C();
  v9[1] = v7;
  sub_1BC08A420();
  swift_bridgeObjectRetain();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 44), v3);
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t AnyGenerator.publisher.getter()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1BC023158()
{
  return sub_1BC023180(MEMORY[0x1E0D2E738]);
}

uint64_t type metadata accessor for AnyGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyGenerator);
}

uint64_t sub_1BC023174()
{
  return sub_1BC023180(MEMORY[0x1E0D2E2B8]);
}

uint64_t sub_1BC023180(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1BC0231B8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

uint64_t sub_1BC0231C0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC0231C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC08952C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BC023248(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    v9 = *(int *)(a3 + 44);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1BC08952C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    v14 = *(int *)(a3 + 48);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC02330C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1BC02336C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC08952C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 48);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BC023404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 48);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BC0234AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

_OWORD *sub_1BC023524(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC08952C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 48);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC0235B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC0235C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC08952C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v8);
  }
}

uint64_t sub_1BC02363C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BC023648(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC08952C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC0236BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, qword_1ED69D228, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC02371C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1BBFDB42C(0, qword_1ED69D228, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

BOOL sub_1BC023770(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) != 0;
}

uint64_t sub_1BC023784@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1BC023790@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BC0236BC(a1, a2);
}

_QWORD *HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(for:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;

  v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = (void *)sub_1BC0891A8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = (void *)sub_1BC08919C();
  v6 = objc_msgSend(v3, sel_initForStoreWithDescription_coordinator_, v4, v5);

  v7 = (void *)objc_opt_self();
  v8 = v6;
  v9 = objc_msgSend(v7, sel_defaultCenter);
  v10 = *MEMORY[0x1E0C97968];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v8;
  v12 = (void *)sub_1BC08919C();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v11, sel_indexSearchableItemsToCurrentHistoryToken, v10, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = (void *)sub_1BC0891B4();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0xB0))();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_1BC023944()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1BC08A3C0();
  qword_1ED6A0540 = result;
  *(_QWORD *)algn_1ED6A0548 = v1;
  return result;
}

uint64_t sub_1BC023970(uint64_t a1)
{
  return sub_1BC0239A0(a1, MEMORY[0x1E0D2D298], &qword_1ED69A0D0, &qword_1ED69A0D8);
}

uint64_t sub_1BC023988(uint64_t a1)
{
  return sub_1BC0239A0(a1, MEMORY[0x1E0D2D2A0], &qword_1ED69A0E8, &qword_1ED69A0F0);
}

uint64_t sub_1BC0239A0(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;

  sub_1BC0890DC();
  result = a2();
  *a3 = result;
  *a4 = v8;
  return result;
}

void sub_1BC0239E4(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  id v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  _BYTE *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  os_log_t v67;
  NSObject *v68;
  NSObject *v69;
  char *v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  os_log_t v84;
  uint64_t v85;
  NSObject *v86;
  void (*v87)(_BYTE *, NSObject *, uint64_t);
  unint64_t v88;
  void (*v89)(_BYTE *, uint64_t);
  char v90;
  char *v91;
  unint64_t v92;
  char v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _BYTE *v100;
  _BYTE *v101;
  unint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  os_log_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char v117;
  _BYTE *v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  os_log_t v122;
  uint64_t v123;
  unint64_t v124;
  _BYTE v125[12];
  int v126;
  os_log_t v127;
  NSObject *v128;
  NSObject *v129;
  char *v130;
  unint64_t v131;
  NSObject *v132;
  unint64_t v133;
  _BYTE *v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  id v138;
  uint64_t ObjectType;
  uint64_t v140;
  uint64_t v141;
  os_log_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  __int128 v146;
  __int128 v147;

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_1BC025844();
  v137 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v136 = &v125[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v141 = sub_1BC089DE4();
  v140 = *(_QWORD *)(v141 - 8);
  v7 = MEMORY[0x1E0C80A78](v141);
  v9 = &v125[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v125[-v11];
  v13 = MEMORY[0x1E0C80A78](v10);
  v134 = &v125[-v14];
  v15 = MEMORY[0x1E0C80A78](v13);
  v135 = &v125[-v16];
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = &v125[-v18];
  MEMORY[0x1E0C80A78](v17);
  v21 = &v125[-v20];
  v22 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  v23 = objc_msgSend(v22, sel_persistentStores);

  sub_1BBFDF744(0, &qword_1ED69DCC8);
  v24 = sub_1BC08A4C8();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v43)
    {
LABEL_3:
      if ((v24 & 0xC000000000000001) != 0)
      {
        v25 = (id)MEMORY[0x1BCCE934C](0, v24);
      }
      else
      {
        if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_30:
          swift_once();
LABEL_7:
          if (!*((_QWORD *)v9 + 2))
          {
            v146 = 0u;
            v147 = 0u;
            goto LABEL_17;
          }
          v29 = qword_1ED69A0D8;
          v30 = qword_1ED69A0D0;
          swift_bridgeObjectRetain();
          v31 = sub_1BC0258D8(v30, v29);
          if ((v32 & 1) == 0)
          {
            v146 = 0u;
            v147 = 0u;
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
          sub_1BBFDF6C4(*((_QWORD *)v9 + 7) + 32 * v31, (uint64_t)&v146);
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)&v147 + 1))
          {
LABEL_17:
            swift_bridgeObjectRelease();
            sub_1BC02593C((uint64_t)&v146);
LABEL_18:
            sub_1BC089DC0();
            v37 = sub_1BC089DD8();
            v38 = sub_1BC08A660();
            if (os_log_type_enabled(v37, v38))
            {
              v39 = (uint8_t *)swift_slowAlloc();
              v40 = swift_slowAlloc();
              *(_QWORD *)&v146 = v40;
              *(_DWORD *)v39 = 136315138;
              v41 = sub_1BC08AC9C();
              v142 = (os_log_t)sub_1BBFDE0F8(v41, v42, (uint64_t *)&v146);
              sub_1BC08A7EC();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BBFD7000, v37, v38, "[%s] Could not get version or locale from metadata", v39, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1BCCE9C40](v40, -1, -1);
              MEMORY[0x1BCCE9C40](v39, -1, -1);
            }

            (*(void (**)(_BYTE *, uint64_t))(v140 + 8))(v12, v141);
            return;
          }
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          v132 = v142;
          v133 = v143;
          if (qword_1ED69A0F8 == -1)
          {
            if (*((_QWORD *)v9 + 2))
            {
LABEL_13:
              v33 = qword_1ED69A0F0;
              v34 = qword_1ED69A0E8;
              swift_bridgeObjectRetain();
              v35 = sub_1BC0258D8(v34, v33);
              if ((v36 & 1) != 0)
              {
                sub_1BBFDF6C4(*((_QWORD *)v9 + 7) + 32 * v35, (uint64_t)&v146);
              }
              else
              {
                v146 = 0u;
                v147 = 0u;
              }
              swift_bridgeObjectRelease();
LABEL_33:
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v147 + 1))
              {
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v50 = v143;
                  v129 = v142;
                  sub_1BC089DC0();
                  swift_bridgeObjectRetain_n();
                  v51 = v2;
                  v52 = sub_1BC089DD8();
                  v53 = sub_1BC08A678();
                  v54 = v53;
                  v55 = os_log_type_enabled(v52, v53);
                  v131 = v50;
                  if (v55)
                  {
                    v56 = swift_slowAlloc();
                    LODWORD(v130) = v54;
                    v57 = v56;
                    v128 = swift_slowAlloc();
                    v142 = v128;
                    *(_DWORD *)v57 = 136315650;
                    v58 = sub_1BC08AC9C();
                    *(_QWORD *)&v146 = sub_1BBFDE0F8(v58, v59, (uint64_t *)&v142);
                    v127 = v52;
                    sub_1BC08A7EC();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v57 + 12) = 2080;
                    v60 = v133;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)&v146 = sub_1BBFDE0F8((uint64_t)v132, v60, (uint64_t *)&v142);
                    sub_1BC08A7EC();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v57 + 22) = 2080;
                    v61 = &v51[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsVersion];
                    swift_beginAccess();
                    v62 = v136;
                    v63 = v61;
                    v64 = v137;
                    (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v136, v63, v137);
                    sub_1BC0892EC();
                    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v62, v64);
                    sub_1BC02598C(0, &qword_1ED69D878);
                    v65 = sub_1BC08A3E4();
                    *(_QWORD *)&v146 = sub_1BBFDE0F8(v65, v66, (uint64_t *)&v142);
                    v50 = v131;
                    sub_1BC08A7EC();

                    swift_bridgeObjectRelease();
                    v67 = v127;
                    _os_log_impl(&dword_1BBFD7000, v127, (os_log_type_t)v130, "[%s] Comparing versions '%s' and '%s'", (uint8_t *)v57, 0x20u);
                    v68 = v128;
                    swift_arrayDestroy();
                    MEMORY[0x1BCCE9C40](v68, -1, -1);
                    MEMORY[0x1BCCE9C40](v57, -1, -1);

                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  v69 = *(NSObject **)(v140 + 8);
                  ((void (*)(_BYTE *, uint64_t))v69)(v21, v141);
                  sub_1BC089DC0();
                  v70 = v51;
                  swift_bridgeObjectRetain_n();
                  v71 = v70;
                  v72 = sub_1BC089DD8();
                  v73 = sub_1BC08A678();
                  v74 = v73;
                  v75 = os_log_type_enabled(v72, v73);
                  v130 = v71;
                  if (v75)
                  {
                    v76 = swift_slowAlloc();
                    v127 = (os_log_t)swift_slowAlloc();
                    v142 = v127;
                    *(_DWORD *)v76 = 136315650;
                    v126 = v74;
                    v77 = sub_1BC08AC9C();
                    v128 = v69;
                    *(_QWORD *)&v146 = sub_1BBFDE0F8(v77, v78, (uint64_t *)&v142);
                    sub_1BC08A7EC();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v76 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)&v146 = sub_1BBFDE0F8((uint64_t)v129, v50, (uint64_t *)&v142);
                    sub_1BC08A7EC();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v76 + 22) = 2080;
                    v79 = &v130[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsLocale];
                    swift_beginAccess();
                    v80 = v136;
                    v81 = v137;
                    (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v136, v79, v137);
                    sub_1BC0892EC();
                    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v80, v81);
                    sub_1BC02598C(0, &qword_1ED69D878);
                    v82 = sub_1BC08A3E4();
                    *(_QWORD *)&v146 = sub_1BBFDE0F8(v82, v83, (uint64_t *)&v142);
                    sub_1BC08A7EC();

                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_1BBFD7000, v72, (os_log_type_t)v126, "[%s] Comparing locales '%s' and '%s'", (uint8_t *)v76, 0x20u);
                    v84 = v127;
                    swift_arrayDestroy();
                    MEMORY[0x1BCCE9C40](v84, -1, -1);
                    v85 = v76;
                    v71 = v130;
                    MEMORY[0x1BCCE9C40](v85, -1, -1);

                    ((void (*)(_BYTE *, uint64_t))v128)(v19, v141);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                    ((void (*)(_BYTE *, uint64_t))v69)(v19, v141);
                    v81 = v137;
                    v80 = v136;
                  }
                  v86 = &v71[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsVersion];
                  swift_beginAccess();
                  v87 = *(void (**)(_BYTE *, NSObject *, uint64_t))(v5 + 16);
                  v87(v80, v86, v81);
                  v88 = v133;
                  swift_bridgeObjectRetain();
                  sub_1BC0892EC();
                  v89 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
                  v89(v80, v81);
                  v128 = v86;
                  if (v143)
                  {
                    if (v132 == v142 && v143 == v88)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      v90 = sub_1BC08AB94();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v90 & 1) == 0)
                        goto LABEL_65;
                    }
                    v91 = &v71[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsLocale];
                    swift_beginAccess();
                    v87(v80, v91, v81);
                    v92 = v131;
                    swift_bridgeObjectRetain();
                    sub_1BC0892EC();
                    v89(v80, v81);
                    if (v143)
                    {
                      if (v129 == v142 && v143 == v92)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        goto LABEL_55;
                      }
                      v93 = sub_1BC08AB94();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v93 & 1) != 0)
                      {
LABEL_55:
                        v94 = objc_msgSend(v138, sel_identifier);
                        if (v94)
                        {
                          v95 = v94;
                          v96 = sub_1BC08A3C0();
                          v98 = v97;

                        }
                        else
                        {
                          v96 = 0;
                          v98 = 0;
                        }
                        v99 = &v71[OBJC_IVAR____TtC18HealthPlatformCore42HealthExperienceStoreCoreSpotlightDelegate__defaultsStoreIdentifier];
                        swift_beginAccess();
                        v100 = v136;
                        v87(v136, v99, v81);
                        sub_1BC0892EC();
                        v89(v100, v81);
                        if (v98)
                        {
                          if (v143)
                          {
                            if ((os_log_t)v96 == v142 && v98 == v143)
                            {
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
LABEL_74:
                              swift_bridgeObjectRelease();
                              v118 = v134;
                              sub_1BC089DC0();
                              v119 = sub_1BC089DD8();
                              v120 = sub_1BC08A678();
                              if (os_log_type_enabled(v119, v120))
                              {
                                v121 = (uint8_t *)swift_slowAlloc();
                                v122 = (os_log_t)swift_slowAlloc();
                                v142 = v122;
                                *(_DWORD *)v121 = 136315138;
                                v123 = sub_1BC08AC9C();
                                v144 = sub_1BBFDE0F8(v123, v124, (uint64_t *)&v142);
                                sub_1BC08A7EC();
                                swift_bridgeObjectRelease();
                                _os_log_impl(&dword_1BBFD7000, v119, v120, "[%s] Version, locale, and store identifier match up; we don't need to do anything here!",
                                  v121,
                                  0xCu);
                                swift_arrayDestroy();
                                MEMORY[0x1BCCE9C40](v122, -1, -1);
                                MEMORY[0x1BCCE9C40](v121, -1, -1);
                              }

                              (*(void (**)(_BYTE *, uint64_t))(v140 + 8))(v118, v141);
                              return;
                            }
                            v117 = sub_1BC08AB94();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v117 & 1) != 0)
                            {
LABEL_73:
                              swift_bridgeObjectRelease();
                              goto LABEL_74;
                            }
                            goto LABEL_65;
                          }
                        }
                        else if (!v143)
                        {
                          goto LABEL_73;
                        }
                        goto LABEL_64;
                      }
LABEL_65:
                      sub_1BC0250B0();
                      v101 = v135;
                      sub_1BC089DC0();
                      swift_bridgeObjectRetain_n();
                      v102 = v131;
                      swift_bridgeObjectRetain_n();
                      v103 = sub_1BC089DD8();
                      v104 = sub_1BC08A678();
                      if (os_log_type_enabled(v103, v104))
                      {
                        v105 = swift_slowAlloc();
                        v106 = (os_log_t)swift_slowAlloc();
                        v142 = v106;
                        *(_DWORD *)v105 = 136315650;
                        v107 = sub_1BC08AC9C();
                        v144 = sub_1BBFDE0F8(v107, v108, (uint64_t *)&v142);
                        sub_1BC08A7EC();
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v105 + 12) = 2080;
                        swift_bridgeObjectRetain();
                        v109 = (uint64_t)v132;
                        v144 = sub_1BBFDE0F8((uint64_t)v132, v133, (uint64_t *)&v142);
                        sub_1BC08A7EC();
                        swift_bridgeObjectRelease_n();
                        *(_WORD *)(v105 + 22) = 2080;
                        swift_bridgeObjectRetain();
                        v110 = (uint64_t)v129;
                        v144 = sub_1BBFDE0F8((uint64_t)v129, v131, (uint64_t *)&v142);
                        v102 = v131;
                        sub_1BC08A7EC();
                        swift_bridgeObjectRelease_n();
                        _os_log_impl(&dword_1BBFD7000, v103, v104, "[%s] Updating UserDefaults with new version: %s and locale: %s", (uint8_t *)v105, 0x20u);
                        v88 = v133;
                        swift_arrayDestroy();
                        MEMORY[0x1BCCE9C40](v106, -1, -1);
                        MEMORY[0x1BCCE9C40](v105, -1, -1);

                        (*(void (**)(_BYTE *, uint64_t))(v140 + 8))(v135, v141);
                        v111 = v138;
                      }
                      else
                      {

                        swift_bridgeObjectRelease_n();
                        swift_bridgeObjectRelease_n();
                        (*(void (**)(_BYTE *, uint64_t))(v140 + 8))(v101, v141);
                        v111 = v138;
                        v109 = (uint64_t)v132;
                        v110 = (uint64_t)v129;
                      }
                      v144 = v109;
                      v145 = v88;
                      swift_beginAccess();
                      sub_1BC0892F8();
                      swift_endAccess();
                      v144 = v110;
                      v145 = v102;
                      swift_beginAccess();
                      sub_1BC0892F8();
                      swift_endAccess();
                      v112 = objc_msgSend(v111, sel_identifier);
                      if (v112)
                      {
                        v113 = v112;
                        v114 = sub_1BC08A3C0();
                        v116 = v115;

                      }
                      else
                      {
                        v114 = 0;
                        v116 = 0;
                      }
                      v144 = v114;
                      v145 = v116;
                      swift_beginAccess();
                      sub_1BC0892F8();
                      swift_endAccess();

                      return;
                    }
                  }
LABEL_64:
                  swift_bridgeObjectRelease();
                  goto LABEL_65;
                }
                goto LABEL_21;
              }
              goto LABEL_17;
            }
          }
          else
          {
            swift_once();
            if (*((_QWORD *)v9 + 2))
              goto LABEL_13;
          }
          v146 = 0u;
          v147 = 0u;
          goto LABEL_33;
        }
        v25 = *(id *)(v24 + 32);
      }
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(a1, sel_persistentStoreCoordinator);
      v138 = v26;
      v28 = objc_msgSend(v27, sel_metadataForPersistentStore_, v26);

      v9 = (_BYTE *)sub_1BC08A300();
      if (qword_1ED69A0E0 == -1)
        goto LABEL_7;
      goto LABEL_30;
    }
  }
  else if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  sub_1BC089DC0();
  v44 = sub_1BC089DD8();
  v45 = sub_1BC08A660();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    *(_QWORD *)&v146 = v47;
    *(_DWORD *)v46 = 136315138;
    v48 = sub_1BC08AC9C();
    v142 = (os_log_t)sub_1BBFDE0F8(v48, v49, (uint64_t *)&v146);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v44, v45, "[%s] No persistent store exists", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v47, -1, -1);
    MEMORY[0x1BCCE9C40](v46, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v140 + 8))(v9, v141);
}

uint64_t sub_1BC024E80(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  uint64_t result;
  id v7;
  objc_super v8;
  __int128 v9[2];
  uint64_t v10;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;

  v11 = a1;
  sub_1BBFDF744(0, &qword_1ED69DB98);
  sub_1BBFDC1EC(0, &qword_1ED69B4A0);
  v3 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_1BC0259D0((uint64_t)v9);
    return 0;
  }
  sub_1BBFE95C8(v9, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(v12, v13);
  if ((sub_1BC01839C() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return 0;
  }
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  v4 = objc_msgSendSuper2(&v8, sel_attributeSetForObject_, v3);
  if (v4)
  {
    v5 = v4;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    sub_1BC018AA4(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return (uint64_t)v5;
  }
  *(_QWORD *)&v9[0] = 0;
  *((_QWORD *)&v9[0] + 1) = 0xE000000000000000;
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[0] = 0xD00000000000002FLL;
  *((_QWORD *)&v9[0] + 1) = 0x80000001BC0906A0;
  v7 = objc_msgSend(v3, sel_description);
  sub_1BC08A3C0();

  sub_1BC08A420();
  swift_bridgeObjectRelease();
  result = sub_1BC08AA74();
  __break(1u);
  return result;
}

void sub_1BC0250B0()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t aBlock[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DC0();
  v7 = sub_1BC089DD8();
  v8 = sub_1BC08A678();
  if (os_log_type_enabled(v7, v8))
  {
    v18 = v1;
    v9 = swift_slowAlloc();
    v19 = ObjectType;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_1BC08AC9C();
    v20 = sub_1BBFDE0F8(v12, v13, aBlock);
    sub_1BC08A7EC();
    v1 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v7, v8, "[%s] Deleting all searchable items in index", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v11, -1, -1);
    v14 = v10;
    ObjectType = v19;
    MEMORY[0x1BCCE9C40](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = ObjectType;
  aBlock[4] = (uint64_t)sub_1BC02637C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC02564C;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v1, sel_deleteSpotlightIndexWithCompletionHandler_, v16);
  _Block_release(v16);
}

uint64_t sub_1BC0252D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1BC089DE4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  if (a1)
  {
    v9 = a1;
    sub_1BC089DC0();
    v10 = a1;
    v11 = a1;
    v12 = sub_1BC089DD8();
    v13 = sub_1BC08A678();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v29 = v15;
      *(_DWORD *)v14 = 136315394;
      v16 = sub_1BC08AC9C();
      v28 = sub_1BBFDE0F8(v16, v17, &v29);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      v28 = (uint64_t)a1;
      v18 = a1;
      sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
      v19 = sub_1BC08A3F0();
      v28 = sub_1BBFDE0F8(v19, v20, &v29);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BBFD7000, v12, v13, "[%s] Failed to delete all searchable items: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v15, -1, -1);
      MEMORY[0x1BCCE9C40](v14, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    sub_1BC089DC0();
    v21 = sub_1BC089DD8();
    v22 = sub_1BC08A678();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = sub_1BC08AC9C();
      v28 = sub_1BBFDE0F8(v25, v26, &v29);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v21, v22, "[%s] Great success, we were able to delete all of the searchable items from our index", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v24, -1, -1);
      MEMORY[0x1BCCE9C40](v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

void sub_1BC02564C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id HealthExperienceStoreCoreSpotlightDelegate.__allocating_init(forStoreWith:coordinator:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initForStoreWithDescription_coordinator_, a1, a2);

  return v5;
}

id HealthExperienceStoreCoreSpotlightDelegate.init(forStoreWith:coordinator:)(void *a1, void *a2)
{
  id v4;

  v4 = sub_1BC02608C((uint64_t)a1, (uint64_t)a2);

  return v4;
}

id HealthExperienceStoreCoreSpotlightDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC025844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AB08)
  {
    sub_1BC02598C(255, &qword_1ED69D878);
    v0 = sub_1BC089310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AB08);
  }
}

unint64_t sub_1BC0258A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC08A8F4();
  return sub_1BC025B98(a1, v2);
}

unint64_t sub_1BC0258D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC08ABF4();
  sub_1BC08A408();
  v4 = sub_1BC08AC18();
  return sub_1BC025C5C(a1, a2, v4);
}

uint64_t sub_1BC02593C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC02598C(0, (unint64_t *)&qword_1ED69DD10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC02598C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC08A7D4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BC0259D0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC025A0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC025A0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3EE1E0)
  {
    sub_1BBFDC1EC(255, &qword_1ED69B4A0);
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3EE1E0);
  }
}

uint64_t type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate()
{
  uint64_t result;

  result = qword_1ED69A100;
  if (!qword_1ED69A100)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC025AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC08A7B0();
  return sub_1BC025D3C(a1, v2);
}

unint64_t sub_1BC025ADC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC089064();
  sub_1BC02632C(&qword_1ED69DAB8, MEMORY[0x1E0CB09C8]);
  v2 = sub_1BC08A360();
  return sub_1BC025E54(a1, v2);
}

unint64_t sub_1BC025B40(uint64_t a1)
{
  uint64_t v2;

  sub_1BC08ABF4();
  sub_1BC0893B8();
  v2 = sub_1BC08AC18();
  return sub_1BC025F8C(a1, v2);
}

unint64_t sub_1BC025B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BC026384(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCE92D4](v9, a1);
      sub_1BBFE1C10((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BC025C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BC08AB94() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BC08AB94() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BC025D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BBFDF744(0, &qword_1ED69DBB0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1BC08A7BC();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1BC08A7BC();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BC025E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1BC089064();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1BC02632C((unint64_t *)&unk_1ED69BA90, MEMORY[0x1E0CB09D0]);
      v14 = sub_1BC08A3A8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BC025F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1BC0893AC();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1BC0893AC();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

id sub_1BC02608C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;

  v5 = qword_1ED69A0E0;
  v6 = v2;
  if (v5 != -1)
    swift_once();
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_standardUserDefaults);
  sub_1BC02598C(0, &qword_1ED69D878);
  v13 = 0;
  v14 = 0;
  sub_1BC089304();
  if (qword_1ED69A0F8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v7, sel_standardUserDefaults);
  sub_1BC089304();
  v10 = objc_msgSend(v7, sel_standardUserDefaults);
  v13 = 0;
  v14 = 0;
  sub_1BC089304();

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
  return objc_msgSendSuper2(&v12, sel_initForStoreWithDescription_coordinator_, a1, a2);
}

uint64_t sub_1BC02628C()
{
  return type metadata accessor for HealthExperienceStoreCoreSpotlightDelegate();
}

void sub_1BC026294()
{
  unint64_t v0;

  sub_1BC025844();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for HealthExperienceStoreCoreSpotlightDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthExperienceStoreCoreSpotlightDelegate.setUp(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1BC02632C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC089064();
    result = MEMORY[0x1BCCE9B68](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC02636C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC02637C(void *a1)
{
  return sub_1BC0252D8(a1);
}

uint64_t sub_1BC026384(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1BC0263C4()
{
  void *v0;
  id v1;

  sub_1BC089940();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 2);

  qword_1ED6A0668 = (uint64_t)v1;
}

uint64_t sub_1BC026440()
{
  uint64_t result;

  if (qword_1ED69DA60 != -1)
    swift_once();
  result = sub_1BC05E28C(5);
  qword_1ED6A0660 = result;
  return result;
}

void sub_1BC026498()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;

  sub_1BC00DA34();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B600;
  v1 = (void *)objc_opt_self();
  if (qword_1ED69DA60 != -1)
    swift_once();
  v2 = (void *)qword_1ED6A0668;
  sub_1BC089940();
  v3 = v2;
  sub_1BC089730();
  v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v6);
  v5 = objc_msgSend(v1, sel_customRelevanceProviderForFeature_withValue_, v3, v4);

  if (v5)
  {
    *(_QWORD *)(v0 + 32) = v5;
    sub_1BC08A4E0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC0265D0(uint64_t a1, uint64_t a2)
{
  sub_1BC026F48(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03BCC4, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (void (*)(uint64_t))sub_1BC03BDC0);
}

uint64_t sub_1BC0265FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  v61 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)v51 - v4;
  sub_1BC03BCC4(0);
  v59 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v51 - v9;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)v51 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v51[1] = v1;
  v68 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE449C(0, v11, 0);
  result = sub_1BC03A650(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v62 = a1 + 80;
  v54 = a1 + 64;
  v55 = a1;
  v52 = v11;
  v53 = v14;
  v18 = v59;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v63 = v16;
    v64 = 1 << v15;
    v21 = (uint64_t)v56;
    v22 = (uint64_t)&v56[*(int *)(v18 + 48)];
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_1BC089064();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v27(v21, v26, v24);
    v28 = v15;
    v29 = *(_QWORD *)(a1 + 56);
    sub_1BC03BD4C(0);
    v31 = v30;
    v32 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72);
    v65 = v28;
    sub_1BBFDB550(v29 + v32 * v28, v22, (uint64_t (*)(_QWORD))sub_1BC03BD4C);
    v33 = v57;
    v27((uint64_t)v57, v21, v24);
    sub_1BBFDB550(v22, (uint64_t)&v33[*(int *)(v18 + 48)], (uint64_t (*)(_QWORD))sub_1BC03BD4C);
    v34 = (uint64_t)v33;
    v35 = v58;
    sub_1BC00D664(v34, v58, (uint64_t (*)(_QWORD))sub_1BC03BCC4);
    v36 = sub_1BC03BDC0(v21);
    v37 = v35 + *(int *)(v18 + 48);
    v38 = (void *)MEMORY[0x1BCCE96F4](v36);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v37 + *(int *)(v31 + 28)), *(_QWORD *)(v37 + *(int *)(v31 + 28) + 24));
    v66 = sub_1BC089220();
    v67 = v39;
    sub_1BC08A420();
    v40 = (void *)sub_1BC089514();
    sub_1BC089388();
    sub_1BC08A420();
    swift_bridgeObjectRelease();

    sub_1BC08A420();
    sub_1BC03BDCC(v37, v60);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v41 = v66;
    v42 = v67;
    objc_autoreleasePoolPop(v38);
    sub_1BC03BDC0(v35);
    v12 = v68;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BBFE449C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v68;
    }
    v44 = *(_QWORD *)(v12 + 16);
    v43 = *(_QWORD *)(v12 + 24);
    if (v44 >= v43 >> 1)
    {
      result = sub_1BBFE449C(v43 > 1, v44 + 1, 1);
      v12 = v68;
    }
    *(_QWORD *)(v12 + 16) = v44 + 1;
    v45 = v12 + 16 * v44;
    *(_QWORD *)(v45 + 32) = v41;
    *(_QWORD *)(v45 + 40) = v42;
    a1 = v55;
    v15 = 1 << *(_BYTE *)(v55 + 32);
    if (v65 >= (uint64_t)v15)
      goto LABEL_27;
    v17 = v54;
    v46 = *(_QWORD *)(v54 + 8 * v20);
    if ((v46 & v64) == 0)
      goto LABEL_28;
    LODWORD(v14) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v47 = v46 & (-2 << (v65 & 0x3F));
    if (v47)
    {
      v15 = __clz(__rbit64(v47)) | v65 & 0xFFFFFFFFFFFFFFC0;
      v19 = v52;
    }
    else
    {
      v48 = v20 + 1;
      v49 = (v15 + 63) >> 6;
      v19 = v52;
      if (v20 + 1 < v49)
      {
        v50 = *(_QWORD *)(v54 + 8 * v48);
        if (v50)
        {
LABEL_22:
          v15 = __clz(__rbit64(v50)) + (v48 << 6);
        }
        else
        {
          while (v49 - 2 != v20)
          {
            v50 = *(_QWORD *)(v62 + 8 * v20++);
            if (v50)
            {
              v48 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v63 + 1;
    if (v63 + 1 == v19)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1BC026A84(uint64_t a1, uint64_t a2)
{
  sub_1BC0277A8(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03BC7C, (uint64_t (*)(_QWORD))sub_1BC03BC90, (void (*)(char *, uint64_t))sub_1BC03BCAC, (void (*)(uint64_t))sub_1BC03BCB8);
}

uint64_t sub_1BC026AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_1BBFDAEA0(0);
  v61 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BC7C(0);
  v59 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v51 - v9;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)v51 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v51[1] = v1;
  v68 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE449C(0, v11, 0);
  result = sub_1BC03A650(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v62 = a1 + 80;
  v54 = a1 + 64;
  v55 = a1;
  v52 = v11;
  v53 = v14;
  v18 = v59;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v63 = v16;
    v64 = 1 << v15;
    v21 = (uint64_t)v56;
    v22 = (uint64_t)&v56[*(int *)(v18 + 48)];
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_1BC089064();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v27(v21, v26, v24);
    v28 = v15;
    v29 = *(_QWORD *)(a1 + 56);
    sub_1BC03BC90(0);
    v31 = v30;
    v32 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72);
    v65 = v28;
    sub_1BC03BCAC(v29 + v32 * v28, v22);
    v33 = v57;
    v27((uint64_t)v57, v21, v24);
    sub_1BC03BCAC(v22, (uint64_t)&v33[*(int *)(v18 + 48)]);
    v34 = (uint64_t)v33;
    v35 = v58;
    sub_1BC00D664(v34, v58, (uint64_t (*)(_QWORD))sub_1BC03BC7C);
    v36 = sub_1BC03BCB8(v21);
    v37 = v35 + *(int *)(v18 + 48);
    v38 = (void *)MEMORY[0x1BCCE96F4](v36);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v37 + *(int *)(v31 + 28)), *(_QWORD *)(v37 + *(int *)(v31 + 28) + 24));
    v66 = sub_1BC089220();
    v67 = v39;
    sub_1BC08A420();
    v40 = (void *)sub_1BC089514();
    sub_1BC089388();
    sub_1BC08A420();
    swift_bridgeObjectRelease();

    sub_1BC08A420();
    sub_1BBFDB550(v37, v60, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v41 = v66;
    v42 = v67;
    objc_autoreleasePoolPop(v38);
    sub_1BC03BCB8(v35);
    v12 = v68;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BBFE449C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v68;
    }
    v44 = *(_QWORD *)(v12 + 16);
    v43 = *(_QWORD *)(v12 + 24);
    if (v44 >= v43 >> 1)
    {
      result = sub_1BBFE449C(v43 > 1, v44 + 1, 1);
      v12 = v68;
    }
    *(_QWORD *)(v12 + 16) = v44 + 1;
    v45 = v12 + 16 * v44;
    *(_QWORD *)(v45 + 32) = v41;
    *(_QWORD *)(v45 + 40) = v42;
    a1 = v55;
    v15 = 1 << *(_BYTE *)(v55 + 32);
    if (v65 >= (uint64_t)v15)
      goto LABEL_27;
    v17 = v54;
    v46 = *(_QWORD *)(v54 + 8 * v20);
    if ((v46 & v64) == 0)
      goto LABEL_28;
    LODWORD(v14) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v47 = v46 & (-2 << (v65 & 0x3F));
    if (v47)
    {
      v15 = __clz(__rbit64(v47)) | v65 & 0xFFFFFFFFFFFFFFC0;
      v19 = v52;
    }
    else
    {
      v48 = v20 + 1;
      v49 = (v15 + 63) >> 6;
      v19 = v52;
      if (v20 + 1 < v49)
      {
        v50 = *(_QWORD *)(v54 + 8 * v48);
        if (v50)
        {
LABEL_22:
          v15 = __clz(__rbit64(v50)) + (v48 << 6);
        }
        else
        {
          while (v49 - 2 != v20)
          {
            v50 = *(_QWORD *)(v62 + 8 * v20++);
            if (v50)
            {
              v48 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v63 + 1;
    if (v63 + 1 == v19)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1BC026F1C(uint64_t a1, uint64_t a2)
{
  sub_1BC026F48(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03E9F0, (uint64_t (*)(_QWORD))sub_1BC03EA04, (void (*)(uint64_t))sub_1BC03EA20);
}

void sub_1BC026F48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(_QWORD);
  uint64_t (*v69)(_QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;

  v68 = a3;
  v69 = a4;
  v7 = v5;
  v67 = a3(0);
  v9 = MEMORY[0x1E0C80A78](v67);
  v72 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v58 - v12;
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)&v58 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v64 = a5;
    v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = &v74;
    sub_1BBFE449C(0, v14, 0);
    v17 = sub_1BC03A650(a1);
    v18 = 0;
    v19 = a1 + 64;
    v20 = *(_BYTE *)(a1 + 32);
    v59 = a1 + 80;
    v60 = v14;
    v62 = a1 + 64;
    v63 = a1;
    v61 = v16;
    while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << v20)
    {
      v24 = (unint64_t)v17 >> 6;
      if ((*(_QWORD *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0)
        goto LABEL_26;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v16)
        goto LABEL_27;
      v70 = v18;
      v71 = 1 << v17;
      v25 = v67;
      v26 = v65;
      v27 = (uint64_t)&v65[*(int *)(v67 + 48)];
      v28 = *(_QWORD *)(a1 + 48);
      v29 = sub_1BC089064();
      v73 = v7;
      v30 = v29;
      v31 = *(_QWORD *)(v29 - 8);
      v32 = v28 + *(_QWORD *)(v31 + 72) * v17;
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      v33(v26, v32, v29);
      v34 = *(_QWORD *)(a1 + 56);
      v35 = v69;
      v36 = v69(0);
      sub_1BBFDB550(v34 + *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72) * v17, v27, v35);
      v37 = (uint64_t)v66;
      v33(v66, (uint64_t)v26, v30);
      sub_1BBFDB550(v27, v37 + *(int *)(v25 + 48), v35);
      sub_1BC00D664(v37, v72, v68);
      v38 = v26;
      v39 = v64;
      v40 = ((uint64_t (*)(char *))v64)(v38);
      v41 = *(int *)(v25 + 48);
      v42 = v72;
      v43 = v72 + v41;
      v15 = (_QWORD *)MEMORY[0x1BCCE96F4](v40);
      v44 = v73;
      v45 = sub_1BC033088(v43, v35);
      if (v44)
        goto LABEL_31;
      v47 = v45;
      v48 = v46;
      objc_autoreleasePoolPop(v15);
      v39(v42);
      v15 = v74;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v73 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BBFE449C(0, v15[2] + 1, 1);
        v15 = v74;
      }
      a1 = v63;
      v51 = v15[2];
      v50 = v15[3];
      if (v51 >= v50 >> 1)
      {
        sub_1BBFE449C(v50 > 1, v51 + 1, 1);
        v15 = v74;
      }
      v15[2] = v51 + 1;
      v52 = &v15[2 * v51];
      v52[4] = v47;
      v52[5] = v48;
      v20 = *(_BYTE *)(a1 + 32);
      v21 = 1 << v20;
      if (v17 >= 1 << v20)
        goto LABEL_28;
      v19 = v62;
      v53 = *(_QWORD *)(v62 + 8 * v24);
      if ((v53 & v71) == 0)
        goto LABEL_29;
      LODWORD(v16) = v61;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v61)
        goto LABEL_30;
      v54 = v53 & (-2 << (v17 & 0x3F));
      if (v54)
      {
        v21 = __clz(__rbit64(v54)) | v17 & 0xFFFFFFFFFFFFFFC0;
        v7 = v73;
        v22 = v60;
        v23 = v70;
      }
      else
      {
        v55 = v24 + 1;
        v56 = (v21 + 63) >> 6;
        v7 = v73;
        v22 = v60;
        v23 = v70;
        if (v24 + 1 < v56)
        {
          v57 = *(_QWORD *)(v62 + 8 * v55);
          if (v57)
          {
LABEL_23:
            v21 = __clz(__rbit64(v57)) + (v55 << 6);
          }
          else
          {
            while (v56 - 2 != v24)
            {
              v57 = *(_QWORD *)(v59 + 8 * v24++);
              if (v57)
              {
                v55 = v24 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      v18 = v23 + 1;
      v17 = v21;
      if (v18 == v22)
        return;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    objc_autoreleasePoolPop(v15);
    __break(1u);
  }
}

uint64_t sub_1BC027300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_1BBFDB2E4(0);
  v61 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03E9F0(0);
  v59 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v51 - v9;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)v51 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v51[1] = v1;
  v68 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE449C(0, v11, 0);
  result = sub_1BC03A650(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v62 = a1 + 80;
  v54 = a1 + 64;
  v55 = a1;
  v52 = v11;
  v53 = v14;
  v18 = v59;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v63 = v16;
    v64 = 1 << v15;
    v21 = (uint64_t)v56;
    v22 = (uint64_t)&v56[*(int *)(v18 + 48)];
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_1BC089064();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v27(v21, v26, v24);
    v28 = v15;
    v29 = *(_QWORD *)(a1 + 56);
    sub_1BC03EA04(0);
    v31 = v30;
    v32 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72);
    v65 = v28;
    sub_1BBFDB550(v29 + v32 * v28, v22, (uint64_t (*)(_QWORD))sub_1BC03EA04);
    v33 = v57;
    v27((uint64_t)v57, v21, v24);
    sub_1BBFDB550(v22, (uint64_t)&v33[*(int *)(v18 + 48)], (uint64_t (*)(_QWORD))sub_1BC03EA04);
    v34 = (uint64_t)v33;
    v35 = v58;
    sub_1BC00D664(v34, v58, (uint64_t (*)(_QWORD))sub_1BC03E9F0);
    v36 = sub_1BC03EA20(v21);
    v37 = v35 + *(int *)(v18 + 48);
    v38 = (void *)MEMORY[0x1BCCE96F4](v36);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v37 + *(int *)(v31 + 28)), *(_QWORD *)(v37 + *(int *)(v31 + 28) + 24));
    v66 = sub_1BC089220();
    v67 = v39;
    sub_1BC08A420();
    v40 = (void *)sub_1BC089514();
    sub_1BC089388();
    sub_1BC08A420();
    swift_bridgeObjectRelease();

    sub_1BC08A420();
    sub_1BBFDB550(v37, v60, (uint64_t (*)(_QWORD))sub_1BBFDB2E4);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v41 = v66;
    v42 = v67;
    objc_autoreleasePoolPop(v38);
    sub_1BC03EA20(v35);
    v12 = v68;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BBFE449C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v68;
    }
    v44 = *(_QWORD *)(v12 + 16);
    v43 = *(_QWORD *)(v12 + 24);
    if (v44 >= v43 >> 1)
    {
      result = sub_1BBFE449C(v43 > 1, v44 + 1, 1);
      v12 = v68;
    }
    *(_QWORD *)(v12 + 16) = v44 + 1;
    v45 = v12 + 16 * v44;
    *(_QWORD *)(v45 + 32) = v41;
    *(_QWORD *)(v45 + 40) = v42;
    a1 = v55;
    v15 = 1 << *(_BYTE *)(v55 + 32);
    if (v65 >= (uint64_t)v15)
      goto LABEL_27;
    v17 = v54;
    v46 = *(_QWORD *)(v54 + 8 * v20);
    if ((v46 & v64) == 0)
      goto LABEL_28;
    LODWORD(v14) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v47 = v46 & (-2 << (v65 & 0x3F));
    if (v47)
    {
      v15 = __clz(__rbit64(v47)) | v65 & 0xFFFFFFFFFFFFFFC0;
      v19 = v52;
    }
    else
    {
      v48 = v20 + 1;
      v49 = (v15 + 63) >> 6;
      v19 = v52;
      if (v20 + 1 < v49)
      {
        v50 = *(_QWORD *)(v54 + 8 * v48);
        if (v50)
        {
LABEL_22:
          v15 = __clz(__rbit64(v50)) + (v48 << 6);
        }
        else
        {
          while (v49 - 2 != v20)
          {
            v50 = *(_QWORD *)(v62 + 8 * v20++);
            if (v50)
            {
              v48 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v63 + 1;
    if (v63 + 1 == v19)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1BC027774(uint64_t a1, uint64_t a2)
{
  sub_1BC0277A8(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03E9A8, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (void (*)(char *, uint64_t))sub_1BC03E9D8, (void (*)(uint64_t))sub_1BC03E9E4);
}

void sub_1BC0277A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), void (*a5)(char *, uint64_t), void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(_QWORD);
  uint64_t v78;
  _QWORD *v79;

  v72 = a3;
  v73 = a5;
  v77 = a4;
  v8 = v6;
  v71 = a3(0);
  v10 = MEMORY[0x1E0C80A78](v71);
  v76 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v12);
  v69 = (char *)&v63 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v68 = a6;
    v79 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v17 = &v79;
    v18 = v14;
    sub_1BBFE449C(0, v16, 0);
    v20 = sub_1BC03A650(v18);
    v21 = v18;
    v22 = 0;
    v23 = v18 + 64;
    v24 = *(_BYTE *)(v18 + 32);
    v63 = v18 + 80;
    v64 = v16;
    v66 = v18 + 64;
    v67 = v18;
    v65 = v19;
    while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << v24)
    {
      v28 = (unint64_t)v20 >> 6;
      if ((*(_QWORD *)(v23 + 8 * ((unint64_t)v20 >> 6)) & (1 << v20)) == 0)
        goto LABEL_26;
      if (*(_DWORD *)(v21 + 36) != (_DWORD)v19)
        goto LABEL_27;
      v74 = v22;
      v75 = 1 << v20;
      v29 = v71;
      v30 = *(int *)(v71 + 48);
      v78 = v8;
      v31 = v69;
      v32 = &v69[v30];
      v33 = *(_QWORD *)(v21 + 48);
      v34 = v21;
      v35 = sub_1BC089064();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = v33 + *(_QWORD *)(v36 + 72) * v20;
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      v38(v31, v37, v35);
      v39 = *(_QWORD *)(v34 + 56);
      v40 = (char *)(v39 + *(_QWORD *)(*(_QWORD *)(v77(0) - 8) + 72) * v20);
      v41 = v73;
      v73(v40, (uint64_t)v32);
      v42 = (uint64_t)v70;
      v38(v70, (uint64_t)v31, v35);
      v41(v32, v42 + *(int *)(v29 + 48));
      sub_1BC00D664(v42, v76, v72);
      v43 = v68;
      v44 = ((uint64_t (*)(char *))v68)(v31);
      v45 = *(int *)(v29 + 48);
      v46 = v76;
      v47 = v76 + v45;
      v17 = (_QWORD *)MEMORY[0x1BCCE96F4](v44);
      v48 = v78;
      v49 = sub_1BC033088(v47, v77);
      if (v48)
        goto LABEL_31;
      v51 = v49;
      v52 = v50;
      objc_autoreleasePoolPop(v17);
      v43(v46);
      v17 = v79;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v78 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BBFE449C(0, v17[2] + 1, 1);
        v17 = v79;
      }
      v21 = v67;
      v55 = v17[2];
      v54 = v17[3];
      if (v55 >= v54 >> 1)
      {
        v62 = v67;
        sub_1BBFE449C(v54 > 1, v55 + 1, 1);
        v21 = v62;
        v17 = v79;
      }
      v17[2] = v55 + 1;
      v56 = &v17[2 * v55];
      v56[4] = v51;
      v56[5] = v52;
      v24 = *(_BYTE *)(v21 + 32);
      v25 = 1 << v24;
      if (v20 >= 1 << v24)
        goto LABEL_28;
      v23 = v66;
      v57 = *(_QWORD *)(v66 + 8 * v28);
      if ((v57 & v75) == 0)
        goto LABEL_29;
      LODWORD(v19) = v65;
      if (*(_DWORD *)(v21 + 36) != (_DWORD)v65)
        goto LABEL_30;
      v58 = v57 & (-2 << (v20 & 0x3F));
      if (v58)
      {
        v25 = __clz(__rbit64(v58)) | v20 & 0xFFFFFFFFFFFFFFC0;
        v8 = v78;
        v26 = v64;
        v27 = v74;
      }
      else
      {
        v59 = v28 + 1;
        v60 = (v25 + 63) >> 6;
        v8 = v78;
        v26 = v64;
        v27 = v74;
        if (v28 + 1 < v60)
        {
          v61 = *(_QWORD *)(v66 + 8 * v59);
          if (v61)
          {
LABEL_23:
            v25 = __clz(__rbit64(v61)) + (v59 << 6);
          }
          else
          {
            while (v60 - 2 != v28)
            {
              v61 = *(_QWORD *)(v63 + 8 * v28++);
              if (v61)
              {
                v59 = v28 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      v22 = v27 + 1;
      v20 = v25;
      if (v22 == v26)
        return;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    objc_autoreleasePoolPop(v17);
    __break(1u);
  }
}

uint64_t sub_1BC027B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_1BBFDB248(0);
  v61 = v3;
  MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03E9A8(0);
  v59 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v58 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v57 = (char *)v51 - v9;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)v51 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v51[1] = v1;
  v68 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE449C(0, v11, 0);
  result = sub_1BC03A650(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v62 = a1 + 80;
  v54 = a1 + 64;
  v55 = a1;
  v52 = v11;
  v53 = v14;
  v18 = v59;
  while ((v15 & 0x8000000000000000) == 0 && (uint64_t)v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v63 = v16;
    v64 = 1 << v15;
    v21 = (uint64_t)v56;
    v22 = (uint64_t)&v56[*(int *)(v18 + 48)];
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_1BC089064();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    v27(v21, v26, v24);
    v28 = v15;
    v29 = *(_QWORD *)(a1 + 56);
    sub_1BC03E9BC(0);
    v31 = v30;
    v32 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72);
    v65 = v28;
    sub_1BC03E9D8(v29 + v32 * v28, v22);
    v33 = v57;
    v27((uint64_t)v57, v21, v24);
    sub_1BC03E9D8(v22, (uint64_t)&v33[*(int *)(v18 + 48)]);
    v34 = (uint64_t)v33;
    v35 = v58;
    sub_1BC00D664(v34, v58, (uint64_t (*)(_QWORD))sub_1BC03E9A8);
    v36 = sub_1BC03E9E4(v21);
    v37 = v35 + *(int *)(v18 + 48);
    v38 = (void *)MEMORY[0x1BCCE96F4](v36);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v37 + *(int *)(v31 + 28)), *(_QWORD *)(v37 + *(int *)(v31 + 28) + 24));
    v66 = sub_1BC089220();
    v67 = v39;
    sub_1BC08A420();
    v40 = (void *)sub_1BC089514();
    sub_1BC089388();
    sub_1BC08A420();
    swift_bridgeObjectRelease();

    sub_1BC08A420();
    sub_1BBFDB550(v37, v60, (uint64_t (*)(_QWORD))sub_1BBFDB248);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v41 = v66;
    v42 = v67;
    objc_autoreleasePoolPop(v38);
    sub_1BC03E9E4(v35);
    v12 = v68;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BBFE449C(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v68;
    }
    v44 = *(_QWORD *)(v12 + 16);
    v43 = *(_QWORD *)(v12 + 24);
    if (v44 >= v43 >> 1)
    {
      result = sub_1BBFE449C(v43 > 1, v44 + 1, 1);
      v12 = v68;
    }
    *(_QWORD *)(v12 + 16) = v44 + 1;
    v45 = v12 + 16 * v44;
    *(_QWORD *)(v45 + 32) = v41;
    *(_QWORD *)(v45 + 40) = v42;
    a1 = v55;
    v15 = 1 << *(_BYTE *)(v55 + 32);
    if (v65 >= (uint64_t)v15)
      goto LABEL_27;
    v17 = v54;
    v46 = *(_QWORD *)(v54 + 8 * v20);
    if ((v46 & v64) == 0)
      goto LABEL_28;
    LODWORD(v14) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v47 = v46 & (-2 << (v65 & 0x3F));
    if (v47)
    {
      v15 = __clz(__rbit64(v47)) | v65 & 0xFFFFFFFFFFFFFFC0;
      v19 = v52;
    }
    else
    {
      v48 = v20 + 1;
      v49 = (v15 + 63) >> 6;
      v19 = v52;
      if (v20 + 1 < v49)
      {
        v50 = *(_QWORD *)(v54 + 8 * v48);
        if (v50)
        {
LABEL_22:
          v15 = __clz(__rbit64(v50)) + (v48 << 6);
        }
        else
        {
          while (v49 - 2 != v20)
          {
            v50 = *(_QWORD *)(v62 + 8 * v20++);
            if (v50)
            {
              v48 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v63 + 1;
    if (v63 + 1 == v19)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BC027FD8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    v9 = *(_QWORD *)(sub_1BC089928() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC0280E0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC028148(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (void (*)(BOOL, unint64_t, uint64_t))sub_1BBFE45CC, (uint64_t (*)(_QWORD))sub_1BBFDB248, (void (*)(char *, unint64_t))sub_1BC03F594);
}

uint64_t sub_1BC028114(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC028148(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BC03BC90, (void (*)(BOOL, unint64_t, uint64_t))sub_1BBFE472C, (uint64_t (*)(_QWORD))sub_1BBFDAEA0, (void (*)(char *, unint64_t))sub_1BC03CBFC);
}

uint64_t sub_1BC028148(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(_QWORD), void (*a8)(char *, unint64_t))
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void (*v25)(BOOL, unint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, unint64_t);
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;

  v27 = a8;
  v28 = a1;
  v11 = v8;
  v29 = a2;
  v13 = a5(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    v25 = a6;
    a6(0, v17, 0);
    v18 = v30;
    v19 = *(_QWORD *)(a7(0) - 8);
    v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v26 = *(_QWORD *)(v19 + 72);
    while (1)
    {
      v28(v20);
      if (v11)
        break;
      v11 = 0;
      v30 = v18;
      v22 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        v25(v21 > 1, v22 + 1, 1);
        v18 = v30;
      }
      *(_QWORD *)(v18 + 16) = v22 + 1;
      v27(v16, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v22);
      v20 += v26;
      if (!--v17)
        return v18;
    }
    swift_release();
  }
  return v18;
}

_QWORD *sub_1BC0282CC(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  unint64_t v71;
  unint64_t v72;

  v10 = v9;
  v51 = a8;
  v67 = a7;
  v59 = a6;
  v50 = a5;
  v49 = a3;
  v47 = a2;
  v68 = a9;
  v69 = a1;
  v65 = *v9;
  v48 = a4 & 1;
  v11 = sub_1BC08A6F0();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B85C(0, &qword_1ED69B218, sub_1BC03B920, (void (*)(void))sub_1BC03BA78);
  v64 = v13;
  v66 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v44 - v14;
  v56 = sub_1BC0894CC();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BC08952C();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v53 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1BC08A6FC();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC08A6CC();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v19);
  v21 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v21);
  v71 = MEMORY[0x1E0DEE9E0];
  v72 = MEMORY[0x1E0DEE9E0];
  sub_1BC03B920(0);
  v52 = v22;
  swift_allocObject();
  v9[2] = sub_1BC08A024();
  v9[4] = 0;
  v46 = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v71 = 0;
  v72 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC03BA94(0);
  v71 = v23;
  sub_1BC03C700(0, &qword_1ED69D1B8, sub_1BC03BA94);
  v24 = sub_1BC08A3E4();
  v26 = v25;
  swift_bridgeObjectRelease();
  v71 = v24;
  v72 = v26;
  sub_1BC08A420();
  sub_1BC08A288();
  v71 = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0(&qword_1ED69DCD0, v20, MEMORY[0x1E0DEF828]);
  sub_1BC01DE38(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DCC0, (uint64_t (*)(uint64_t))sub_1BC01DE38, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v18, *MEMORY[0x1E0DEF8D0], v45);
  v9[19] = sub_1BC08A714();
  sub_1BBFE1C58(v69, (uint64_t)(v9 + 8));
  v27 = v47;
  v9[6] = (uint64_t)v47;
  v9[3] = v49;
  *((_BYTE *)v9 + 40) = v48;
  v28 = v50;
  sub_1BBFE1C58(v50, (uint64_t)(v9 + 13));
  v9[30] = v67;
  v29 = v51;
  sub_1BBFE1C58(v51, (uint64_t)(v9 + 20));
  v30 = v68;
  sub_1BBFE1C58(v68, (uint64_t)(v9 + 25));
  sub_1BBFDB42C(0, &qword_1ED69CA38, (uint64_t (*)(uint64_t))sub_1BC0089AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B950;
  v32 = v27;
  swift_retain();
  *(_QWORD *)(inited + 32) = objc_msgSend(v32, sel_profileIdentifier);
  *(_QWORD *)(inited + 40) = v32;
  v33 = v32;
  v71 = sub_1BBFFEC70(inited);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB60, (uint64_t (*)(uint64_t))sub_1BC03BB0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  v10[7] = sub_1BC089B38();
  v10[18] = v59;
  v34 = (_QWORD *)v30;
  v35 = *(_QWORD *)(v30 + 24);
  v36 = *(_QWORD *)(v30 + 32);
  __swift_project_boxed_opaque_existential_1(v34, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, *MEMORY[0x1E0D2D9D8], v56);
  swift_retain();
  v37 = v53;
  sub_1BC0894FC();
  v38 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 8))(v37, v35, v36);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
  v71 = v10[2];
  swift_retain();
  v39 = v60;
  sub_1BC08A6E4();
  v70 = v38;
  sub_1BC03BA78();
  sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v40 = v61;
  sub_1BC08A228();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v65;
  sub_1BC03BC1C();
  v41 = v64;
  v42 = sub_1BC08A24C();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v29);
  __swift_destroy_boxed_opaque_existential_1(v28);
  __swift_destroy_boxed_opaque_existential_1(v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v41);
  v10[4] = v42;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v68);
  return v10;
}

_QWORD *sub_1BC0289E8(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  unint64_t v71;
  unint64_t v72;

  v10 = v9;
  v51 = a8;
  v67 = a7;
  v59 = a6;
  v50 = a5;
  v49 = a3;
  v47 = a2;
  v68 = a9;
  v69 = a1;
  v65 = *v9;
  v48 = a4 & 1;
  v11 = sub_1BC08A6F0();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  MEMORY[0x1E0C80A78](v11);
  v60 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B85C(0, &qword_1ED69B228, sub_1BC03E7D0, (void (*)(void))sub_1BC03E864);
  v64 = v13;
  v66 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v44 - v14;
  v56 = sub_1BC0894CC();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BC08952C();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v53 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1BC08A6FC();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC08A6CC();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v19);
  v21 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v21);
  v71 = MEMORY[0x1E0DEE9E0];
  v72 = MEMORY[0x1E0DEE9E0];
  sub_1BC03E7D0(0);
  v52 = v22;
  swift_allocObject();
  v9[2] = sub_1BC08A024();
  v9[4] = 0;
  v46 = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v71 = 0;
  v72 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC03E880(0);
  v71 = v23;
  sub_1BC03C700(0, (unint64_t *)&unk_1ED69D1C8, sub_1BC03E880);
  v24 = sub_1BC08A3E4();
  v26 = v25;
  swift_bridgeObjectRelease();
  v71 = v24;
  v72 = v26;
  sub_1BC08A420();
  sub_1BC08A288();
  v71 = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0(&qword_1ED69DCD0, v20, MEMORY[0x1E0DEF828]);
  sub_1BC01DE38(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DCC0, (uint64_t (*)(uint64_t))sub_1BC01DE38, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v18, *MEMORY[0x1E0DEF8D0], v45);
  v9[19] = sub_1BC08A714();
  sub_1BBFE1C58(v69, (uint64_t)(v9 + 8));
  v27 = v47;
  v9[6] = (uint64_t)v47;
  v9[3] = v49;
  *((_BYTE *)v9 + 40) = v48;
  v28 = v50;
  sub_1BBFE1C58(v50, (uint64_t)(v9 + 13));
  v9[30] = v67;
  v29 = v51;
  sub_1BBFE1C58(v51, (uint64_t)(v9 + 20));
  v30 = v68;
  sub_1BBFE1C58(v68, (uint64_t)(v9 + 25));
  sub_1BBFDB42C(0, &qword_1ED69CA38, (uint64_t (*)(uint64_t))sub_1BC0089AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC08B950;
  v32 = v27;
  swift_retain();
  *(_QWORD *)(inited + 32) = objc_msgSend(v32, sel_profileIdentifier);
  *(_QWORD *)(inited + 40) = v32;
  v33 = v32;
  v71 = sub_1BBFFEC70(inited);
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69BB60, (uint64_t (*)(uint64_t))sub_1BC03BB0C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  v10[7] = sub_1BC089B38();
  v10[18] = v59;
  v34 = (_QWORD *)v30;
  v35 = *(_QWORD *)(v30 + 24);
  v36 = *(_QWORD *)(v30 + 32);
  __swift_project_boxed_opaque_existential_1(v34, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, *MEMORY[0x1E0D2D9D8], v56);
  swift_retain();
  v37 = v53;
  sub_1BC0894FC();
  v38 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 8))(v37, v35, v36);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
  v71 = v10[2];
  swift_retain();
  v39 = v60;
  sub_1BC08A6E4();
  v70 = v38;
  sub_1BC03E864();
  sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v40 = v61;
  sub_1BC08A228();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v65;
  sub_1BC03E948();
  v41 = v64;
  v42 = sub_1BC08A24C();

  swift_release();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v29);
  __swift_destroy_boxed_opaque_existential_1(v28);
  __swift_destroy_boxed_opaque_existential_1(v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v41);
  v10[4] = v42;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v68);
  return v10;
}

uint64_t sub_1BC029104(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _BYTE *), void (*a5)(uint64_t, _BYTE *), void (*a6)(uint64_t, _BYTE *), void (*a7)(uint64_t, _BYTE *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v63)(uint64_t, _BYTE *);
  void (*v64)(uint64_t, _BYTE *);
  void (*v65)(uint64_t, _BYTE *);
  void (*v66)(uint64_t, _BYTE *);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v65 = a6;
  v66 = a7;
  v63 = a4;
  v64 = a5;
  v10 = sub_1BC089DE4();
  v67 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v63 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v68 = (char *)&v63 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v63 - v18;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_1BC089DD8();
  v21 = sub_1BC08A678();
  v22 = os_log_type_enabled(v20, v21);
  v71 = v13;
  v72 = v10;
  v70 = a3;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v73 = v24;
    v74 = a3;
    *(_DWORD *)v23 = 136446466;
    swift_getMetatypeMetadata();
    v25 = sub_1BC08A3E4();
    v74 = sub_1BBFDE0F8(v25, v26, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    v27 = sub_1BC0298EC(a1, a2, v63);
    v74 = sub_1BBFDE0F8(v27, v28, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v20, v21, "[%{public}s]: %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    v29 = v24;
    v10 = v72;
    MEMORY[0x1BCCE9C40](v29, -1, -1);
    MEMORY[0x1BCCE9C40](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v30 = *(void (**)(char *, uint64_t))(v67 + 8);
  v30(v19, v10);
  v31 = v68;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v32 = sub_1BC089DD8();
  v33 = sub_1BC08A648();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v73 = v35;
    *(_DWORD *)v34 = 136446466;
    v74 = v70;
    swift_getMetatypeMetadata();
    v36 = sub_1BC08A3E4();
    v74 = sub_1BBFDE0F8(v36, v37, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    v38 = sub_1BC029A34(a1, a2, v64);
    v74 = sub_1BBFDE0F8(v38, v39, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v32, v33, "[%{public}s]: %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    v40 = v35;
    v10 = v72;
    MEMORY[0x1BCCE9C40](v40, -1, -1);
    MEMORY[0x1BCCE9C40](v34, -1, -1);

    v41 = v68;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v41 = v31;
  }
  v30(v41, v10);
  v42 = v69;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v43 = sub_1BC089DD8();
  v44 = sub_1BC08A678();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v73 = v46;
    *(_DWORD *)v45 = 136446466;
    v74 = v70;
    swift_getMetatypeMetadata();
    v47 = sub_1BC08A3E4();
    v74 = sub_1BBFDE0F8(v47, v48, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    v49 = sub_1BC029B40(a1, a2, v65);
    v74 = sub_1BBFDE0F8(v49, v50, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v43, v44, "[%{public}s]: %{public}s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    v51 = v46;
    v10 = v72;
    MEMORY[0x1BCCE9C40](v51, -1, -1);
    MEMORY[0x1BCCE9C40](v45, -1, -1);

    v52 = v69;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v52 = v42;
  }
  v30(v52, v10);
  v53 = v71;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v54 = sub_1BC089DD8();
  v55 = sub_1BC08A648();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v73 = v57;
    *(_DWORD *)v56 = 136446466;
    v69 = (char *)v30;
    v74 = v70;
    swift_getMetatypeMetadata();
    v58 = sub_1BC08A3E4();
    v74 = sub_1BBFDE0F8(v58, v59, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2082;
    v60 = sub_1BC029C90(a1, a2, v66);
    v74 = sub_1BBFDE0F8(v60, v61, &v73);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v54, v55, "[%{public}s]: %{public}s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v57, -1, -1);
    MEMORY[0x1BCCE9C40](v56, -1, -1);

    return ((uint64_t (*)(char *, uint64_t))v69)(v71, v72);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return ((uint64_t (*)(char *, uint64_t))v30)(v53, v10);
  }
}

uint64_t sub_1BC0298EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];

  v4 = swift_bridgeObjectRetain();
  a3(v4, v8);
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1E0DEA968];
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v5, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  sub_1BC08A954();
  v6 = sub_1BC08AB64();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1BC029A34(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];

  v4 = swift_bridgeObjectRetain();
  a3(v4, v7);
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1E0DEA968];
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v5, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

uint64_t sub_1BC029B40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _BYTE *))
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];

  swift_bridgeObjectRetain();
  a3(a2, v8);
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1E0DEA968];
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v5, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  sub_1BC08A954();
  v6 = sub_1BC08AB64();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1BC029C90(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _BYTE *))
{
  uint64_t v5;
  _BYTE v7[16];

  swift_bridgeObjectRetain();
  a3(a2, v7);
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1E0DEA968];
  sub_1BC00BC08(0, (unint64_t *)&qword_1ED69DCA8);
  sub_1BC00B430((unint64_t *)&qword_1ED69DCB0, (unint64_t *)&qword_1ED69DCA8, v5, MEMORY[0x1E0DEAF20]);
  sub_1BC08A384();
  swift_bridgeObjectRelease();
  sub_1BC08A954();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

uint64_t sub_1BC029DA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC03FAB4(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03EA04(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03FAB4);
    sub_1BC038E68(a2, (uint64_t (*)(_QWORD))sub_1BC03EA04, (void (*)(unint64_t, uint64_t))sub_1BC03F9B4, (void (*)(unint64_t, uint64_t))sub_1BC06DBF0, (void (*)(void))sub_1BC07CE30, (uint64_t)v8);
    v13 = sub_1BC089064();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC03FAB4);
  }
  else
  {
    sub_1BC03F9B4(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC0391B4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1BC07CE30, (void (*)(void))sub_1BC07C24C, (uint64_t (*)(_QWORD))sub_1BC03EA04, (uint64_t (*)(uint64_t, unint64_t))sub_1BC03F9B4);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1BC089064();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1BC029F5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC03FC6C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03E9BC(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03FC6C);
    sub_1BC038E68(a2, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (void (*)(unint64_t, uint64_t))sub_1BC03F594, (void (*)(unint64_t, uint64_t))sub_1BC06DC04, (void (*)(void))sub_1BC07CE44, (uint64_t)v8);
    v13 = sub_1BC089064();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC03FC6C);
  }
  else
  {
    sub_1BC03F594(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC0391B4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1BC07CE44, (void (*)(void))sub_1BC07C260, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(uint64_t, unint64_t))sub_1BC03F594);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1BC089064();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1BC02A114(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC03D1E8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BD4C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03D1E8);
    sub_1BC038E68(a2, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (void (*)(unint64_t, uint64_t))sub_1BC03D02C, (void (*)(unint64_t, uint64_t))sub_1BC06DEE8, (void (*)(void))sub_1BC07D2D0, (uint64_t)v8);
    v13 = sub_1BC089064();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC03D1E8);
  }
  else
  {
    sub_1BC03D02C(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC0391B4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1BC07D2D0, (void (*)(void))sub_1BC07C97C, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (uint64_t (*)(uint64_t, unint64_t))sub_1BC03D02C);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1BC089064();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1BC02A2CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC03D4B4(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BC90(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03D4B4);
    sub_1BC038E68(a2, (uint64_t (*)(_QWORD))sub_1BC03BC90, (void (*)(unint64_t, uint64_t))sub_1BC03CBFC, (void (*)(unint64_t, uint64_t))sub_1BC06DEFC, (void (*)(void))sub_1BC07D2E4, (uint64_t)v8);
    v13 = sub_1BC089064();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC03D4B4);
  }
  else
  {
    sub_1BC03CBFC(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC0391B4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1BC07D2E4, (void (*)(void))sub_1BC07C990, (uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(uint64_t, unint64_t))sub_1BC03CBFC);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1BC089064();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1BC02A484(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v46 = *v2;
  sub_1BC03EE54();
  v51 = v4;
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03EEE8();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03C00C(0, &qword_1ED69C810, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0]);
  v9 = v8;
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  sub_1BC03C090();
  v13 = v12;
  v44 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03C00C(0, &qword_1ED69C7F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v43 - v19;
  v47 = a1;
  v21 = *(_QWORD *)(a1 + 16);
  if ((sub_1BC089970() & 1) != 0)
  {
    v54 = v21;
    sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC008CC4();
    sub_1BC08A1C8();
    sub_1BC03C5E8((unint64_t *)&qword_1ED69C7E8, &qword_1ED69C7F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28], MEMORY[0x1E0C95A38]);
    v21 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
  }
  v45 = v21;
  v54 = v21;
  v22 = swift_allocObject();
  v23 = v46;
  *(_QWORD *)(v22 + 16) = v46;
  sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC008CC4();
  sub_1BC08A1D4();
  swift_release();
  sub_1BC03C5E8((unint64_t *)&qword_1ED69C808, &qword_1ED69C810, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0], MEMORY[0x1E0C95AD0]);
  v24 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v9);
  v54 = v24;
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A240();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A690, (uint64_t (*)(uint64_t))sub_1BC03C090, MEMORY[0x1E0C95850]);
  v25 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
  v26 = v2[23];
  v27 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v26);
  v54 = v25;
  v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 24);
  sub_1BC008BC4();
  v30 = v29;
  v31 = MEMORY[0x1E0C95D90];
  v32 = sub_1BBFDA9C0(&qword_1ED69A998, (uint64_t (*)(uint64_t))sub_1BC008BC4, MEMORY[0x1E0C95D90]);
  v54 = v28(&v54, v30, v32, v26, v27);
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v33;
  v34[3] = v47;
  v34[4] = v23;
  sub_1BC036180(0);
  swift_retain();
  v35 = v48;
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  v36 = sub_1BBFDA9C0(&qword_1ED69A748, (uint64_t (*)(uint64_t))sub_1BC03EE54, MEMORY[0x1E0C95950]);
  v37 = sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, v31);
  v39 = v50;
  v38 = v51;
  MEMORY[0x1BCCE8B48](v51, v36, v37);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v38);
  sub_1BBFDA9C0(&qword_1ED69A6D0, (uint64_t (*)(uint64_t))sub_1BC03EEE8, MEMORY[0x1E0C95870]);
  v40 = v53;
  v41 = sub_1BC08A180();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v40);
  return v41;
}

uint64_t sub_1BC02A9E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v46 = *v2;
  sub_1BC03BE30();
  v51 = v4;
  v49 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BF44();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03C00C(0, &qword_1ED69C810, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0]);
  v9 = v8;
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  sub_1BC03C090();
  v13 = v12;
  v44 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03C00C(0, &qword_1ED69C7F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v43 - v19;
  v47 = a1;
  v21 = *(_QWORD *)(a1 + 16);
  if ((sub_1BC089970() & 1) != 0)
  {
    v54 = v21;
    sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC008CC4();
    sub_1BC08A1C8();
    sub_1BC03C5E8((unint64_t *)&qword_1ED69C7E8, &qword_1ED69C7F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95A28], MEMORY[0x1E0C95A38]);
    v21 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    swift_retain();
  }
  v45 = v21;
  v54 = v21;
  v22 = swift_allocObject();
  v23 = v46;
  *(_QWORD *)(v22 + 16) = v46;
  sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC008CC4();
  sub_1BC08A1D4();
  swift_release();
  sub_1BC03C5E8((unint64_t *)&qword_1ED69C808, &qword_1ED69C810, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95AC0], MEMORY[0x1E0C95AD0]);
  v24 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v9);
  v54 = v24;
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A240();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A690, (uint64_t (*)(uint64_t))sub_1BC03C090, MEMORY[0x1E0C95850]);
  v25 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
  v26 = v2[23];
  v27 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v26);
  v54 = v25;
  v28 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 24);
  sub_1BC008BC4();
  v30 = v29;
  v31 = MEMORY[0x1E0C95D90];
  v32 = sub_1BBFDA9C0(&qword_1ED69A998, (uint64_t (*)(uint64_t))sub_1BC008BC4, MEMORY[0x1E0C95D90]);
  v54 = v28(&v54, v30, v32, v26, v27);
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v33;
  v34[3] = v47;
  v34[4] = v23;
  sub_1BC03BEC4(0);
  swift_retain();
  v35 = v48;
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  v36 = sub_1BBFDA9C0(&qword_1ED69A738, (uint64_t (*)(uint64_t))sub_1BC03BE30, MEMORY[0x1E0C95950]);
  v37 = sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, v31);
  v39 = v50;
  v38 = v51;
  MEMORY[0x1BCCE8B48](v51, v36, v37);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v38);
  sub_1BBFDA9C0(&qword_1ED69A6C0, (uint64_t (*)(uint64_t))sub_1BC03BF44, MEMORY[0x1E0C95870]);
  v40 = v53;
  v41 = sub_1BC08A180();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v40);
  return v41;
}

uint64_t sub_1BC02AF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  id v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t result;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t Strong;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[3];
  uint64_t v104;
  uint64_t v105;

  v92 = a3;
  sub_1BC03F058();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AA38, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v90 = *((_QWORD *)v12 - 1);
  v91 = v12;
  MEMORY[0x1E0C80A78](v12);
  v89 = (char *)&v89 - v13;
  v14 = sub_1BC089DE4();
  v98 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v97 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v89 - v17;
  Strong = a2 + 16;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  v19 = sub_1BC089DD8();
  v20 = sub_1BC08A678();
  v21 = os_log_type_enabled(v19, v20);
  v101 = a1;
  v95 = v9;
  v96 = v8;
  v93 = a4;
  v94 = v11;
  v99 = v14;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v103[0] = v23;
    *(_DWORD *)v22 = 136446466;
    v104 = a4;
    swift_getMetatypeMetadata();
    v24 = sub_1BC08A3E4();
    v104 = sub_1BBFDE0F8(v24, v25, v103);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x1BCCE8EA8](v101, MEMORY[0x1E0D2D700]);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v26;
    a1 = v101;
    v104 = sub_1BBFDE0F8(v29, v28, v103);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v19, v20, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    v30 = v23;
    v14 = v99;
    MEMORY[0x1BCCE9C40](v30, -1, -1);
    MEMORY[0x1BCCE9C40](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v31 = *(void (**)(char *, uint64_t))(v98 + 8);
  v31(v18, v14);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BC03619C(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v63 = v89;
    sub_1BC08A06C();
    sub_1BC03B5A8();
    v64 = v91;
    v65 = sub_1BC08A180();
    (*(void (**)(char *, _QWORD))(v90 + 8))(v63, v64);
    return v65;
  }
  v91 = v31;
  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
  {
    v35 = MEMORY[0x1E0DEE9E0];
LABEL_35:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)Strong + 352))(a1, v35);
    swift_bridgeObjectRelease();
    v66 = sub_1BC02C34C(v92, a1);
    v67 = sub_1BC02F3B8(v66);
    v68 = v97;
    sub_1BC089D90();
    swift_bridgeObjectRetain_n();
    v69 = sub_1BC089DD8();
    v70 = sub_1BC08A678();
    v71 = os_log_type_enabled(v69, v70);
    v72 = v99;
    v73 = v93;
    if (v71)
    {
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      v98 = v67;
      v76 = v75;
      *(_DWORD *)v74 = 136446466;
      v101 = v66;
      v102 = v75;
      v105 = v73;
      swift_getMetatypeMetadata();
      v77 = sub_1BC08A3E4();
      v105 = sub_1BBFDE0F8(v77, v78, &v102);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      v79 = swift_bridgeObjectRetain();
      v80 = MEMORY[0x1BCCE8EA8](v79, MEMORY[0x1E0D2D700]);
      v82 = v81;
      swift_bridgeObjectRelease();
      v105 = sub_1BBFDE0F8(v80, v82, &v102);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v69, v70, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      v83 = v76;
      v67 = v98;
      MEMORY[0x1BCCE9C40](v83, -1, -1);
      MEMORY[0x1BCCE9C40](v74, -1, -1);

      v84 = v97;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v84 = v68;
    }
    v91(v84, v72);
    v86 = v94;
    v85 = v95;
    v105 = v67;
    sub_1BC036180(0);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    sub_1BC08A198();
    sub_1BBFDA9C0(&qword_1ED69A688, (uint64_t (*)(uint64_t))sub_1BC03F058, MEMORY[0x1E0C957C0]);
    v87 = v96;
    v65 = sub_1BC08A180();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
    return v65;
  }
  v33 = Strong + 48;
  swift_bridgeObjectRetain();
  v98 = v33;
  swift_beginAccess();
  v34 = 0;
  v35 = MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v36 = *(void **)(a1 + 8 * v34 + 32);
    v37 = v36;
    v38 = sub_1BC089370();
    if (!v38)
    {

      goto LABEL_8;
    }
    v39 = (void *)v38;
    v40 = sub_1BC0893AC();
    if ((v40 & 1) != 0)
    {

      goto LABEL_8;
    }
    if (v36)
    {
      MEMORY[0x1E0C80A78](v40);
      sub_1BBFDF744(0, &qword_1ED69C938);
      v41 = v37;
      v42 = v39;
      swift_retain();
      sub_1BC089B08();
      swift_release();

      v43 = (id)v105;
      if ((v35 & 0xC000000000000001) == 0)
        goto LABEL_21;
    }
    else
    {
      v44 = *(void **)v98;
      v45 = v39;
      v43 = v44;
      if ((v35 & 0xC000000000000001) == 0)
        goto LABEL_21;
    }
    if (v35 < 0)
      v46 = v35;
    else
      v46 = v35 & 0xFFFFFFFFFFFFFF8;
    v47 = sub_1BC08A8A0();
    if (__OFADD__(v47, 1))
      goto LABEL_41;
    v35 = sub_1BC06D7F4(v46, v47 + 1);
LABEL_21:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v105 = v35;
    v50 = sub_1BC025AAC((uint64_t)v39);
    v51 = *(_QWORD *)(v35 + 16);
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      break;
    v54 = v49;
    if (*(_QWORD *)(v35 + 24) >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC07CC90();
    }
    else
    {
      sub_1BC07BF80(v53, isUniquelyReferenced_nonNull_native);
      v55 = sub_1BC025AAC((uint64_t)v39);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_43;
      v50 = v55;
    }
    a1 = v101;
    v35 = v105;
    v57 = 8 * v50;
    if ((v54 & 1) != 0)
    {
      v58 = *(_QWORD *)(v105 + 56);

      *(_QWORD *)(v58 + v57) = v43;
    }
    else
    {
      *(_QWORD *)(v105 + 8 * (v50 >> 6) + 64) |= 1 << v50;
      *(_QWORD *)(*(_QWORD *)(v35 + 48) + 8 * v50) = v39;
      *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v50) = v43;
      v59 = *(_QWORD *)(v35 + 16);
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_42;
      *(_QWORD *)(v35 + 16) = v61;
      v62 = v39;
    }

    swift_bridgeObjectRelease();
LABEL_8:
    if (v32 == ++v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1BBFDF744(0, &qword_1ED69DBB0);
  result = sub_1BC08ABB8();
  __break(1u);
  return result;
}

uint64_t sub_1BC02B860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  id v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t result;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t Strong;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[3];
  uint64_t v104;
  uint64_t v105;

  v92 = a3;
  sub_1BC03C628();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AA30, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v90 = *((_QWORD *)v12 - 1);
  v91 = v12;
  MEMORY[0x1E0C80A78](v12);
  v89 = (char *)&v89 - v13;
  v14 = sub_1BC089DE4();
  v98 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v97 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v89 - v17;
  Strong = a2 + 16;
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  v19 = sub_1BC089DD8();
  v20 = sub_1BC08A678();
  v21 = os_log_type_enabled(v19, v20);
  v101 = a1;
  v95 = v9;
  v96 = v8;
  v93 = a4;
  v94 = v11;
  v99 = v14;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v103[0] = v23;
    *(_DWORD *)v22 = 136446466;
    v104 = a4;
    swift_getMetatypeMetadata();
    v24 = sub_1BC08A3E4();
    v104 = sub_1BBFDE0F8(v24, v25, v103);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x1BCCE8EA8](v101, MEMORY[0x1E0D2D700]);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v26;
    a1 = v101;
    v104 = sub_1BBFDE0F8(v29, v28, v103);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v19, v20, "%{public}s: Switching to a new pipeline with sourceProfiles: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    v30 = v23;
    v14 = v99;
    MEMORY[0x1BCCE9C40](v30, -1, -1);
    MEMORY[0x1BCCE9C40](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v31 = *(void (**)(char *, uint64_t))(v98 + 8);
  v31(v18, v14);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BC03BEE0(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v63 = v89;
    sub_1BC08A06C();
    sub_1BC03C6A0();
    v64 = v91;
    v65 = sub_1BC08A180();
    (*(void (**)(char *, _QWORD))(v90 + 8))(v63, v64);
    return v65;
  }
  v91 = v31;
  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
  {
    v35 = MEMORY[0x1E0DEE9E0];
LABEL_35:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)Strong + 352))(a1, v35);
    swift_bridgeObjectRelease();
    v66 = sub_1BC02C694(v92, a1);
    v67 = sub_1BC02F588(v66);
    v68 = v97;
    sub_1BC089D90();
    swift_bridgeObjectRetain_n();
    v69 = sub_1BC089DD8();
    v70 = sub_1BC08A678();
    v71 = os_log_type_enabled(v69, v70);
    v72 = v99;
    v73 = v93;
    if (v71)
    {
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      v98 = v67;
      v76 = v75;
      *(_DWORD *)v74 = 136446466;
      v101 = v66;
      v102 = v75;
      v105 = v73;
      swift_getMetatypeMetadata();
      v77 = sub_1BC08A3E4();
      v105 = sub_1BBFDE0F8(v77, v78, &v102);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      v79 = swift_bridgeObjectRetain();
      v80 = MEMORY[0x1BCCE8EA8](v79, MEMORY[0x1E0D2D700]);
      v82 = v81;
      swift_bridgeObjectRelease();
      v105 = sub_1BBFDE0F8(v80, v82, &v102);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v69, v70, "%{public}s: Created new generation stream for sourceProfiles: %{public}s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      v83 = v76;
      v67 = v98;
      MEMORY[0x1BCCE9C40](v83, -1, -1);
      MEMORY[0x1BCCE9C40](v74, -1, -1);

      v84 = v97;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v84 = v68;
    }
    v91(v84, v72);
    v86 = v94;
    v85 = v95;
    v105 = v67;
    sub_1BC03BEC4(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
    sub_1BC08A198();
    sub_1BBFDA9C0(&qword_1ED69A678, (uint64_t (*)(uint64_t))sub_1BC03C628, MEMORY[0x1E0C957C0]);
    v87 = v96;
    v65 = sub_1BC08A180();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
    return v65;
  }
  v33 = Strong + 48;
  swift_bridgeObjectRetain();
  v98 = v33;
  swift_beginAccess();
  v34 = 0;
  v35 = MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v36 = *(void **)(a1 + 8 * v34 + 32);
    v37 = v36;
    v38 = sub_1BC089370();
    if (!v38)
    {

      goto LABEL_8;
    }
    v39 = (void *)v38;
    v40 = sub_1BC0893AC();
    if ((v40 & 1) != 0)
    {

      goto LABEL_8;
    }
    if (v36)
    {
      MEMORY[0x1E0C80A78](v40);
      sub_1BBFDF744(0, &qword_1ED69C938);
      v41 = v37;
      v42 = v39;
      swift_retain();
      sub_1BC089B08();
      swift_release();

      v43 = (id)v105;
      if ((v35 & 0xC000000000000001) == 0)
        goto LABEL_21;
    }
    else
    {
      v44 = *(void **)v98;
      v45 = v39;
      v43 = v44;
      if ((v35 & 0xC000000000000001) == 0)
        goto LABEL_21;
    }
    if (v35 < 0)
      v46 = v35;
    else
      v46 = v35 & 0xFFFFFFFFFFFFFF8;
    v47 = sub_1BC08A8A0();
    if (__OFADD__(v47, 1))
      goto LABEL_41;
    v35 = sub_1BC06D7F4(v46, v47 + 1);
LABEL_21:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v105 = v35;
    v50 = sub_1BC025AAC((uint64_t)v39);
    v51 = *(_QWORD *)(v35 + 16);
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      break;
    v54 = v49;
    if (*(_QWORD *)(v35 + 24) >= v53)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC07CC90();
    }
    else
    {
      sub_1BC07BF80(v53, isUniquelyReferenced_nonNull_native);
      v55 = sub_1BC025AAC((uint64_t)v39);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_43;
      v50 = v55;
    }
    a1 = v101;
    v35 = v105;
    v57 = 8 * v50;
    if ((v54 & 1) != 0)
    {
      v58 = *(_QWORD *)(v105 + 56);

      *(_QWORD *)(v58 + v57) = v43;
    }
    else
    {
      *(_QWORD *)(v105 + 8 * (v50 >> 6) + 64) |= 1 << v50;
      *(_QWORD *)(*(_QWORD *)(v35 + 48) + 8 * v50) = v39;
      *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v50) = v43;
      v59 = *(_QWORD *)(v35 + 16);
      v60 = __OFADD__(v59, 1);
      v61 = v59 + 1;
      if (v60)
        goto LABEL_42;
      *(_QWORD *)(v35 + 16) = v61;
      v62 = v39;
    }

    swift_bridgeObjectRelease();
LABEL_8:
    if (v32 == ++v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1BBFDF744(0, &qword_1ED69DBB0);
  result = sub_1BC08ABB8();
  __break(1u);
  return result;
}

BOOL sub_1BC02C174(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC038AB8(a1, a3);
  swift_arrayDestroy();
  if ((v10 & 1) != 0)
  {
    sub_1BC089D90();
    v11 = sub_1BC089DD8();
    v12 = sub_1BC08A66C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      *(_DWORD *)v13 = 136446210;
      v18[1] = v13 + 4;
      v19 = v14;
      v20 = a2;
      swift_getMetatypeMetadata();
      v15 = sub_1BC08A3E4();
      v20 = sub_1BBFDE0F8(v15, v16, &v19);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v11, v12, "%{public}s: Received agnostic only source profiles, skipping pipeline for this set of profiles", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v14, -1, -1);
      MEMORY[0x1BCCE9C40](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return (v10 & 1) == 0;
}

uint64_t sub_1BC02C34C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v3;
  v28 = a1;
  v29 = v5;
  sub_1BC00B37C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B470();
  v30 = v11;
  v32 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03FCB0(0);
  v31 = v14;
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a2;
  v17 = MEMORY[0x1E0D2D700];
  sub_1BC00BC08(0, &qword_1ED69C8E8);
  sub_1BC00B430(&qword_1ED69C8F0, &qword_1ED69C8E8, v17, MEMORY[0x1E0DEAF38]);
  sub_1BC08A450();
  swift_allocObject();
  swift_weakInit();
  sub_1BC089FAC();
  sub_1BC00B7A0(0, &qword_1ED69B450, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B5A4();
  sub_1BC00B5C0();
  sub_1BC08A258();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = (_QWORD *)swift_allocObject();
  v20 = v28;
  v19 = v29;
  v18[2] = v3;
  v18[3] = v20;
  v18[4] = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1BC03FDC0;
  *(_QWORD *)(v21 + 24) = v18;
  swift_retain();
  swift_retain();
  sub_1BC089FAC();
  sub_1BC03E9BC(0);
  sub_1BC00B7A0(0, &qword_1ED69A960, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v22 = MEMORY[0x1E0C95B78];
  sub_1BBFDA9C0(&qword_1ED69B408, (uint64_t (*)(uint64_t))sub_1BC00B470, MEMORY[0x1E0C95B78]);
  sub_1BC03F1BC();
  v23 = v30;
  sub_1BC08A1F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v23);
  sub_1BBFDA9C0(&qword_1ED69B428, (uint64_t (*)(uint64_t))sub_1BC03FCB0, v22);
  v24 = v31;
  v25 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v24);
  return v25;
}

uint64_t sub_1BC02C694(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v3;
  v28 = a1;
  v29 = v5;
  sub_1BC00B37C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B470();
  v30 = v11;
  v32 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03D650(0);
  v31 = v14;
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a2;
  v17 = MEMORY[0x1E0D2D700];
  sub_1BC00BC08(0, &qword_1ED69C8E8);
  sub_1BC00B430(&qword_1ED69C8F0, &qword_1ED69C8E8, v17, MEMORY[0x1E0DEAF38]);
  sub_1BC08A450();
  swift_allocObject();
  swift_weakInit();
  sub_1BC089FAC();
  sub_1BC00B7A0(0, &qword_1ED69B450, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B5A4();
  sub_1BC00B5C0();
  sub_1BC08A258();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = (_QWORD *)swift_allocObject();
  v20 = v28;
  v19 = v29;
  v18[2] = v3;
  v18[3] = v20;
  v18[4] = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1BC03D6A4;
  *(_QWORD *)(v21 + 24) = v18;
  swift_retain();
  swift_retain();
  sub_1BC089FAC();
  sub_1BC03BC90(0);
  sub_1BC00B7A0(0, &qword_1ED69A950, (uint64_t (*)(uint64_t))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v22 = MEMORY[0x1E0C95B78];
  sub_1BBFDA9C0(&qword_1ED69B408, (uint64_t (*)(uint64_t))sub_1BC00B470, MEMORY[0x1E0C95B78]);
  sub_1BC03C7C8();
  v23 = v30;
  sub_1BC08A1F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v23);
  sub_1BBFDA9C0(&qword_1ED69B418, (uint64_t (*)(uint64_t))sub_1BC03D650, v22);
  v24 = v31;
  v25 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v24);
  return v25;
}

uint64_t sub_1BC02C9DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;

  sub_1BC00B7A0(0, &qword_1ED69B468, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v39 - v5;
  sub_1BC03E68C();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B83C();
  v11 = v10;
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69B3D0, v13, sub_1BC00BA60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95840]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v39 - v17;
  sub_1BC00BA7C(0, v18);
  v49 = v19;
  v45 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v23 = Strong;
    v40 = v16;
    v41 = v11;
    v42 = v15;
    if (a1)
    {
      MEMORY[0x1E0C80A78](Strong);
      *(&v39 - 2) = a1;
      sub_1BBFDF744(0, &qword_1ED69C938);
      swift_retain();
      v24 = a1;
      sub_1BC089B08();
      swift_release();

      v25 = v51;
    }
    else
    {
      swift_beginAccess();
      v25 = *(id *)(v23 + 48);
      v24 = 0;
    }
    v39 = v25;
    swift_retain();
    sub_1BC0899DC();
    swift_release();
    v27 = *(_QWORD *)(v23 + 184);
    v28 = *(_QWORD *)(v23 + 192);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v23 + 160), v27);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v50 = v29(v21, v49, OpaqueTypeConformance2, v27, v28);
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B528();
    sub_1BC00B820();
    v31 = v24;
    sub_1BC08A1A4();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BC03E71C(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B3D8, (uint64_t (*)(uint64_t))sub_1BC03E68C, MEMORY[0x1E0C95950]);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B458, (uint64_t (*)(uint64_t))sub_1BC03E71C, MEMORY[0x1E0C960B0]);
    v32 = v31;
    v33 = v46;
    v34 = v44;
    sub_1BC08A1BC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v34);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC00BA60();
    v35 = v47;
    v36 = v41;
    sub_1BC08A240();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v36);
    sub_1BC00BB68();
    v37 = v42;
    v26 = sub_1BC08A180();
    swift_release();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v49);
  }
  else
  {
    sub_1BC00B528();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC00BAD4();
    v26 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v26;
}

uint64_t sub_1BC02CF24(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;

  sub_1BC00B7A0(0, &qword_1ED69B468, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v39 - v5;
  sub_1BC03E68C();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B83C();
  v11 = v10;
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69B3D0, v13, sub_1BC00BA60, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95840]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v39 - v17;
  sub_1BC00BA7C(0, v18);
  v49 = v19;
  v45 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v23 = Strong;
    v40 = v16;
    v41 = v11;
    v42 = v15;
    if (a1)
    {
      MEMORY[0x1E0C80A78](Strong);
      *(&v39 - 2) = a1;
      sub_1BBFDF744(0, &qword_1ED69C938);
      swift_retain();
      v24 = a1;
      sub_1BC089B08();
      swift_release();

      v25 = v51;
    }
    else
    {
      swift_beginAccess();
      v25 = *(id *)(v23 + 48);
      v24 = 0;
    }
    v39 = v25;
    swift_retain();
    sub_1BC0899DC();
    swift_release();
    v27 = *(_QWORD *)(v23 + 184);
    v28 = *(_QWORD *)(v23 + 192);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v23 + 160), v27);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v50 = v29(v21, v49, OpaqueTypeConformance2, v27, v28);
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B528();
    sub_1BC00B820();
    v31 = v24;
    sub_1BC08A1A4();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_1BC03E71C(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B3D8, (uint64_t (*)(uint64_t))sub_1BC03E68C, MEMORY[0x1E0C95950]);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B458, (uint64_t (*)(uint64_t))sub_1BC03E71C, MEMORY[0x1E0C960B0]);
    v32 = v31;
    v33 = v46;
    v34 = v44;
    sub_1BC08A1BC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v34);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC00BA60();
    v35 = v47;
    v36 = v41;
    sub_1BC08A240();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v36);
    sub_1BC00BB68();
    v37 = v42;
    v26 = sub_1BC08A180();
    swift_release();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v49);
  }
  else
  {
    sub_1BC00B528();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC00BAD4();
    v26 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v26;
}

uint64_t sub_1BC02D46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(char *);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a5;
  sub_1BC03D6D8(0, &qword_1ED69D608, sub_1BC03FDFC, (void (*)(void))sub_1BC03FE18);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)v26 - v11;
  sub_1BC03CB2C(0, &qword_1ED69A8D0, (uint64_t (*)(uint64_t))sub_1BC03FDFC, sub_1BC03FE18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95C00]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v32 = (char *)v26 - v15;
  swift_beginAccess();
  v16 = *(_QWORD *)(a3 + 24);
  v17 = swift_allocObject();
  v31 = a3;
  swift_weakInit();
  v36 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v27 = v14;
    v28 = v13;
    v29 = v10;
    v30 = v9;
    v19 = (uint64_t (**)(char *))(v16 + 32);
    v26[1] = v16;
    swift_bridgeObjectRetain_n();
    do
    {
      v20 = sub_1BC02D9EC(v19, v17, a1, v34, a2, v35, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t (**)(char *), uint64_t, _QWORD))sub_1BC02E09C, (uint64_t)sub_1BC03FF90, (uint64_t (*)(uint64_t))sub_1BC0280E0);
      sub_1BC01983C(v20);
      v19 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    swift_bridgeObjectRelease_n();
    v21 = v36;
    v10 = v29;
    v9 = v30;
    v14 = v27;
    v13 = v28;
  }
  else
  {
    swift_release();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC02EE64(v21);
  v36 = v21;
  sub_1BC03FDFC(0);
  sub_1BC03FE18();
  v22 = v33;
  sub_1BC08A450();
  swift_bridgeObjectRelease();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  v23 = v32;
  sub_1BC089F10();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  sub_1BC03FE34();
  v24 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
  return v24;
}

uint64_t sub_1BC02D72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(char *);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a5;
  sub_1BC03D6D8(0, &qword_1ED69D600, sub_1BC03D758, (void (*)(void))sub_1BC03D774);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v33 = (char *)v26 - v11;
  sub_1BC03CB2C(0, &qword_1ED69A8C0, (uint64_t (*)(uint64_t))sub_1BC03D758, sub_1BC03D774, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95C00]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v32 = (char *)v26 - v15;
  swift_beginAccess();
  v16 = *(_QWORD *)(a3 + 24);
  v17 = swift_allocObject();
  v31 = a3;
  swift_weakInit();
  v36 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v27 = v14;
    v28 = v13;
    v29 = v10;
    v30 = v9;
    v19 = (uint64_t (**)(char *))(v16 + 32);
    v26[1] = v16;
    swift_bridgeObjectRetain_n();
    do
    {
      v20 = sub_1BC02D9EC(v19, v17, a1, v34, a2, v35, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t (**)(char *), uint64_t, _QWORD))sub_1BC02E780, (uint64_t)sub_1BC03D980, (uint64_t (*)(uint64_t))sub_1BC028114);
      sub_1BC019DEC(v20);
      v19 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    swift_bridgeObjectRelease_n();
    v21 = v36;
    v10 = v29;
    v9 = v30;
    v14 = v27;
    v13 = v28;
  }
  else
  {
    swift_release();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BC02F0BC(v21);
  v36 = v21;
  sub_1BC03D758(0);
  sub_1BC03D774();
  v22 = v33;
  sub_1BC08A450();
  swift_bridgeObjectRelease();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  v23 = v32;
  sub_1BC089F10();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  sub_1BC03D790();
  v24 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
  return v24;
}

uint64_t sub_1BC02D9EC(uint64_t (**a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, _QWORD, uint64_t (**)(char *), uint64_t, _QWORD), uint64_t a8, uint64_t (*a9)(uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void (*v23)(uint64_t, uint64_t, _QWORD, uint64_t (**)(char *), uint64_t, _QWORD);
  uint64_t v24;
  uint64_t v25;

  v24 = a6;
  v25 = a8;
  v23 = a7;
  v13 = sub_1BC089574();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return MEMORY[0x1E0DEE9D8];
  v22 = a9;
  v23(a3, a4 + qword_1ED6A04D8, *(unsigned __int8 *)(a4 + qword_1ED6A0530), a1 + 2, a5, *(_QWORD *)(a4 + qword_1ED6A04D0));
  v17 = (*a1)(v16);
  MEMORY[0x1E0C80A78](v17);
  *(&v21 - 4) = (uint64_t)a1;
  *(&v21 - 3) = (uint64_t)v16;
  v18 = v25;
  *(&v21 - 2) = v24;
  v19 = v22(v18);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v19;
}

uint64_t sub_1BC02DB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  return sub_1BC02DBE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BBFDB248, (uint64_t (*)(_QWORD))sub_1BBFDB594, (uint64_t (*)(_QWORD))sub_1BC03E9BC, a5);
}

uint64_t sub_1BC02DBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  return sub_1BC02DBE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BBFDAEA0, (uint64_t (*)(_QWORD))sub_1BBFDB410, (uint64_t (*)(_QWORD))sub_1BC03BC90, a5);
}

uint64_t sub_1BC02DBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X5>, uint64_t (*a6)(_QWORD)@<X6>, uint64_t (*a7)(_QWORD)@<X7>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *);
  char *v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  os_log_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD);
  uint64_t v65;
  _BYTE v66[16];
  _QWORD v67[4];
  uint64_t v68;

  v60 = a7;
  v63 = a3;
  v53 = a4;
  v62 = a8;
  v12 = sub_1BC089574();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v52 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v47 - v16;
  v51 = a5(0);
  MEMORY[0x1E0C80A78](v51);
  v19 = (char *)&v47 - v18;
  v20 = sub_1BC089DE4();
  v56 = *(_QWORD *)(v20 - 8);
  v57 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v59 = a2;
  v54 = a6;
  sub_1BBFDB550(a2, (uint64_t)v66, a6);
  v58 = a1;
  v64 = a5;
  sub_1BBFDB550(a1, (uint64_t)v19, a5);
  v55 = v13;
  v23 = *(void (**)(char *))(v13 + 16);
  v24 = v17;
  v25 = v17;
  v26 = v63;
  v61 = v12;
  v23(v25);
  v27 = sub_1BC089DD8();
  v28 = sub_1BC08A678();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v65 = v50;
    *(_DWORD *)v30 = 136446978;
    v49 = v29;
    v68 = (uint64_t)v53;
    swift_getMetatypeMetadata();
    v48 = v27;
    v31 = sub_1BC08A3E4();
    v68 = sub_1BBFDE0F8(v31, v32, &v65);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    v53 = (void (*)(char *, char *, uint64_t))v23;
    __swift_project_boxed_opaque_existential_1(v67, v67[3]);
    v33 = sub_1BC089220();
    v68 = sub_1BBFDE0F8(v33, v34, &v65);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    sub_1BBFE1BD4((uint64_t)v66, v54);
    *(_WORD *)(v30 + 22) = 2082;
    v35 = (void *)sub_1BC089514();
    v36 = sub_1BC089388();
    v38 = v37;

    v68 = sub_1BBFDE0F8(v36, v38, &v65);
    sub_1BC08A7EC();
    v26 = v63;
    swift_bridgeObjectRelease();
    sub_1BBFE1BD4((uint64_t)v19, v64);
    *(_WORD *)(v30 + 32) = 2082;
    v39 = v61;
    v53(v52, v24, v61);
    v40 = sub_1BC08A3E4();
    v68 = sub_1BBFDE0F8(v40, v41, &v65);
    sub_1BC08A7EC();
    v23 = (void (*)(char *))v53;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v39);
    v27 = v48;
    _os_log_impl(&dword_1BBFD7000, v48, (os_log_type_t)v49, "[%{public}s]: delegate returned pipeline <%{public}s> for profile %{public}s and context %{public}s.", (uint8_t *)v30, 0x2Au);
    v42 = v50;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v42, -1, -1);
    MEMORY[0x1BCCE9C40](v30, -1, -1);
  }
  else
  {
    sub_1BBFE1BD4((uint64_t)v66, v54);
    sub_1BBFE1BD4((uint64_t)v19, v64);
    v39 = v61;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v61);
  }

  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v57);
  v43 = v62;
  sub_1BBFDB550(v58, v62, v64);
  v44 = v59 + 16;
  v45 = v60(0);
  sub_1BBFE1C58(v44, v43 + *(int *)(v45 + 28));
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v43 + *(int *)(v45 + 32), v26, v39);
  return sub_1BC089058();
}

uint64_t sub_1BC02E09C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  int v59;
  _BYTE v60[40];
  _QWORD v61[5];
  __int128 v62;
  uint64_t v63;
  uint64_t v64;

  v8 = v7;
  v59 = a3;
  v55 = a2;
  v58 = a7;
  sub_1BC008884();
  MEMORY[0x1E0C80A78](v13);
  v56 = (uint64_t)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC088E84();
  v16 = MEMORY[0x1E0C80A78](v15);
  v54 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  if (a1)
  {
    MEMORY[0x1E0C80A78](v16);
    sub_1BBFDF744(0, &qword_1ED69C938);
    swift_retain();
    v18 = a1;
    sub_1BC089B08();
    swift_release();
    v53 = v18;

    v19 = (id)v62;
  }
  else
  {
    swift_beginAccess();
    v19 = *(id *)(v7 + 48);
    v53 = 0;
  }
  *(_QWORD *)&v62 = HKHealthStore.makePreferredTransactionPublisher()();
  v20 = MEMORY[0x1E0C95D78];
  sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v20, MEMORY[0x1E0C95D90]);
  v21 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v62 = v21;
  sub_1BC03D99C();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69B0E0, (uint64_t (*)(uint64_t))sub_1BC03D99C, MEMORY[0x1E0C95768]);
  v22 = sub_1BC08A180();
  swift_release();
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a5;
  sub_1BBFE95C8(&v62, (uint64_t)(v23 + 3));
  v23[8] = v19;
  v23[9] = v22;
  v24 = v22;
  v25 = swift_allocObject();
  swift_weakInit();
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v19;
  sub_1BBFE95C8(&v62, (uint64_t)(v26 + 4));
  v26[9] = v24;
  v26[10] = a5;
  v52 = v24;
  v26[11] = a6;
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  swift_beginAccess();
  v27 = *(void **)(v8 + 48);
  v51 = type metadata accessor for HealthStoreSharableModelContext();
  v28 = (_QWORD *)swift_allocObject();
  swift_retain();
  v29 = v27;
  v30 = v23;
  v50[1] = v23;
  swift_retain();
  swift_retain();
  v31 = v19;
  swift_retain_n();
  swift_retain_n();
  v32 = v31;
  v28[2] = sub_1BC08A618();
  sub_1BBFE1C58((uint64_t)&v62, (uint64_t)(v28 + 4));
  v28[3] = v32;
  v33 = objc_allocWithZone(MEMORY[0x1E0CB6C98]);
  v34 = a4;
  v35 = v32;
  v36 = objc_msgSend(v33, sel_initWithHealthStore_, v29);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  v28[9] = v36;
  v28[10] = sub_1BC040168;
  v28[11] = v30;
  v28[12] = sub_1BC040074;
  v28[13] = v26;
  v37 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v50[0] = sub_1BBFDA9C0(&qword_1ED69BC20, type metadata accessor for HealthExperienceStoreFeedItemContext, (uint64_t)&protocol conformance descriptor for HealthExperienceStoreFeedItemContext);
  v38 = v36;
  v39 = sub_1BC089460();

  *(_QWORD *)&v62 = v39;
  sub_1BC00B7A0(0, &qword_1ED69B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B12C();
  v40 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v62 = v40;
  sub_1BC03DA38();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69B0D0, (uint64_t (*)(uint64_t))sub_1BC03DA38, MEMORY[0x1E0C95768]);
  v41 = sub_1BC08A180();
  swift_release();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 88));
  v42 = (void *)sub_1BC0891C0();
  sub_1BBFE1C58(v34, (uint64_t)&v62);
  LOBYTE(v36) = *(_BYTE *)(v8 + 40);
  sub_1BBFE1C58(v8 + 104, (uint64_t)v61);
  swift_beginAccess();
  v43 = *(_QWORD *)(v8 + 144);
  sub_1BBFE1C58(v8 + 200, (uint64_t)v60);
  v44 = v35;
  swift_retain();
  swift_retain();
  v45 = (uint64_t)v54;
  sub_1BC088E30();
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  swift_allocObject();
  v47 = sub_1BC012FE0(v42, &v62, v44, (char)v36, (uint64_t)v61, v43, (uint64_t)v60, v45, v41, (uint64_t)v46);

  swift_release();
  sub_1BBFDB550(v55, v56, (uint64_t (*)(_QWORD))sub_1BC008884);
  v63 = v37;
  v64 = v50[0];
  *(_QWORD *)&v62 = v47;
  v61[3] = v51;
  v61[4] = sub_1BBFDA9C0(&qword_1ED69CE78, (uint64_t (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext, (uint64_t)&unk_1BC08D0D0);
  v61[0] = v28;
  v48 = v53;
  swift_retain();
  swift_retain();
  sub_1BC089550();
  sub_1BC089568();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC02E780@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  int v59;
  _BYTE v60[40];
  _QWORD v61[5];
  __int128 v62;
  uint64_t v63;
  uint64_t v64;

  v8 = v7;
  v59 = a3;
  v55 = a2;
  v58 = a7;
  sub_1BC008884();
  MEMORY[0x1E0C80A78](v13);
  v56 = (uint64_t)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC088E84();
  v16 = MEMORY[0x1E0C80A78](v15);
  v54 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  if (a1)
  {
    MEMORY[0x1E0C80A78](v16);
    sub_1BBFDF744(0, &qword_1ED69C938);
    swift_retain();
    v18 = a1;
    sub_1BC089B08();
    swift_release();
    v53 = v18;

    v19 = (id)v62;
  }
  else
  {
    swift_beginAccess();
    v19 = *(id *)(v7 + 48);
    v53 = 0;
  }
  *(_QWORD *)&v62 = HKHealthStore.makePreferredTransactionPublisher()();
  v20 = MEMORY[0x1E0C95D78];
  sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v20, MEMORY[0x1E0C95D90]);
  v21 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v62 = v21;
  sub_1BC03D99C();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69B0E0, (uint64_t (*)(uint64_t))sub_1BC03D99C, MEMORY[0x1E0C95768]);
  v22 = sub_1BC08A180();
  swift_release();
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a5;
  sub_1BBFE95C8(&v62, (uint64_t)(v23 + 3));
  v23[8] = v19;
  v23[9] = v22;
  v24 = v22;
  v25 = swift_allocObject();
  swift_weakInit();
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v19;
  sub_1BBFE95C8(&v62, (uint64_t)(v26 + 4));
  v26[9] = v24;
  v26[10] = a5;
  v52 = v24;
  v26[11] = a6;
  sub_1BBFE1C58(a4, (uint64_t)&v62);
  swift_beginAccess();
  v27 = *(void **)(v8 + 48);
  v51 = type metadata accessor for HealthStoreSharableModelContext();
  v28 = (_QWORD *)swift_allocObject();
  swift_retain();
  v29 = v27;
  v30 = v23;
  v50[1] = v23;
  swift_retain();
  swift_retain();
  v31 = v19;
  swift_retain_n();
  swift_retain_n();
  v32 = v31;
  v28[2] = sub_1BC08A618();
  sub_1BBFE1C58((uint64_t)&v62, (uint64_t)(v28 + 4));
  v28[3] = v32;
  v33 = objc_allocWithZone(MEMORY[0x1E0CB6C98]);
  v34 = a4;
  v35 = v32;
  v36 = objc_msgSend(v33, sel_initWithHealthStore_, v29);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  v28[9] = v36;
  v28[10] = sub_1BC00B11C;
  v28[11] = v30;
  v28[12] = sub_1BC03DA1C;
  v28[13] = v26;
  v37 = type metadata accessor for HealthExperienceStoreFeedItemContext(0);
  v50[0] = sub_1BBFDA9C0(&qword_1ED69BC20, type metadata accessor for HealthExperienceStoreFeedItemContext, (uint64_t)&protocol conformance descriptor for HealthExperienceStoreFeedItemContext);
  v38 = v36;
  v39 = sub_1BC089460();

  *(_QWORD *)&v62 = v39;
  sub_1BC00B7A0(0, &qword_1ED69B258, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DE78], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00B12C();
  v40 = sub_1BC08A150();
  swift_release();
  *(_QWORD *)&v62 = v40;
  sub_1BC03DA38();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69B0D0, (uint64_t (*)(uint64_t))sub_1BC03DA38, MEMORY[0x1E0C95768]);
  v41 = sub_1BC08A180();
  swift_release();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 88));
  v42 = (void *)sub_1BC0891C0();
  sub_1BBFE1C58(v34, (uint64_t)&v62);
  LOBYTE(v36) = *(_BYTE *)(v8 + 40);
  sub_1BBFE1C58(v8 + 104, (uint64_t)v61);
  swift_beginAccess();
  v43 = *(_QWORD *)(v8 + 144);
  sub_1BBFE1C58(v8 + 200, (uint64_t)v60);
  v44 = v35;
  swift_retain();
  swift_retain();
  v45 = (uint64_t)v54;
  sub_1BC088E30();
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  swift_allocObject();
  v47 = sub_1BC012FE0(v42, &v62, v44, (char)v36, (uint64_t)v61, v43, (uint64_t)v60, v45, v41, (uint64_t)v46);

  swift_release();
  sub_1BBFDB550(v55, v56, (uint64_t (*)(_QWORD))sub_1BC008884);
  v63 = v37;
  v64 = v50[0];
  *(_QWORD *)&v62 = v47;
  v61[3] = v51;
  v61[4] = sub_1BBFDA9C0(&qword_1ED69CE78, (uint64_t (*)(uint64_t))type metadata accessor for HealthStoreSharableModelContext, (uint64_t)&unk_1BC08D0D0);
  v61[0] = v28;
  v48 = v53;
  swift_retain();
  swift_retain();
  sub_1BC089550();
  sub_1BC089568();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC02EE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC03FE9C(0);
  v25 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v24 = v1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE4590(0, v7, 0);
    v8 = v26;
    sub_1BC03E9BC(0);
    v10 = v9;
    v11 = *(_QWORD *)(v9 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    do
    {
      v14 = (uint64_t)&v6[*(int *)(v25 + 48)];
      sub_1BC03E9D8(v12, v14);
      v15 = v14 + *(int *)(v10 + 36);
      v16 = sub_1BC089064();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15, v16);
      v26 = v8;
      v18 = *(_QWORD *)(v8 + 16);
      v17 = *(_QWORD *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BBFE4590(v17 > 1, v18 + 1, 1);
        v8 = v26;
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      sub_1BC00D664((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v18, (uint64_t (*)(_QWORD))sub_1BC03FE9C);
      v12 += v13;
      --v7;
    }
    while (v7);
  }
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1BC03FEB0();
    v19 = sub_1BC08AABC();
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9E0];
  }
  v26 = v19;
  v20 = swift_bridgeObjectRetain();
  sub_1BC0397BC(v20, 1, &v26);
  swift_bridgeObjectRelease();
  v21 = v26;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  sub_1BC033190((uint64_t)sub_1BC03FF44, v22, (uint64_t)&unk_1E74A1AA8, (uint64_t)&unk_1E74A1C38, (uint64_t)sub_1BC040160, (uint64_t)&block_descriptor_197);
  return swift_release();
}

uint64_t sub_1BC02F0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC03D7F8(0);
  v25 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v24 = v1;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE46F0(0, v7, 0);
    v8 = v26;
    sub_1BC03BC90(0);
    v10 = v9;
    v11 = *(_QWORD *)(v9 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = *(_QWORD *)(v11 + 72);
    do
    {
      v14 = (uint64_t)&v6[*(int *)(v25 + 48)];
      sub_1BC03BCAC(v12, v14);
      v15 = v14 + *(int *)(v10 + 36);
      v16 = sub_1BC089064();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15, v16);
      v26 = v8;
      v18 = *(_QWORD *)(v8 + 16);
      v17 = *(_QWORD *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BBFE46F0(v17 > 1, v18 + 1, 1);
        v8 = v26;
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      sub_1BC00D664((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v18, (uint64_t (*)(_QWORD))sub_1BC03D7F8);
      v12 += v13;
      --v7;
    }
    while (v7);
  }
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1BC03D87C();
    v19 = sub_1BC08AABC();
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9E0];
  }
  v26 = v19;
  v20 = swift_bridgeObjectRetain();
  sub_1BC03A088(v20, 1, &v26);
  swift_bridgeObjectRelease();
  v21 = v26;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  sub_1BC033190((uint64_t)sub_1BC03D934, v22, (uint64_t)&unk_1E74A1530, (uint64_t)&unk_1E74A16C0, (uint64_t)sub_1BC03D1CC, (uint64_t)&block_descriptor_5);
  return swift_release();
}

uint64_t sub_1BC02F314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *)@<X4>, _QWORD *a6@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = a1;
  a5(a3, a4, 0, isUniquelyReferenced_nonNull_native, &v15);
  v13 = v15;
  result = swift_bridgeObjectRelease();
  *a6 = v13;
  a6[1] = a2;
  return result;
}

uint64_t sub_1BC02F3B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v2 = v1;
  v4 = *v2;
  sub_1BC03F0D0(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = a1;
  v10 = v2[23];
  v11 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v4;
  sub_1BC00B7A0(0, &qword_1ED69A960, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03619C(0);
  sub_1BC036180(0);
  sub_1BC03F1BC();
  sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  sub_1BC08A1F8();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A848, (uint64_t (*)(uint64_t))sub_1BC03F0D0, MEMORY[0x1E0C95B78]);
  v14 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1BC02F588(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v2 = v1;
  v4 = *v2;
  sub_1BC03C7A4(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = a1;
  v10 = v2[23];
  v11 = v2[24];
  __swift_project_boxed_opaque_existential_1(v2 + 20, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v4;
  sub_1BC00B7A0(0, &qword_1ED69A950, (uint64_t (*)(uint64_t))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03BEE0(0);
  sub_1BC03BEC4(0);
  sub_1BC03C7C8();
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
  sub_1BC08A1F8();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A818, (uint64_t (*)(uint64_t))sub_1BC03C7A4, MEMORY[0x1E0C95B78]);
  v14 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1BC02F758(uint64_t (**a1)(void), uint64_t a2, uint64_t (**a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (**v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v51 = a3;
  sub_1BBFDB248(0);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AA38, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v46 - v9;
  sub_1BC03E9BC(0);
  v54 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v56 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v46 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v46 - v20;
  v22 = sub_1BC089DE4();
  v55 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v57 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1BC089D90();
    sub_1BC03E9D8((uint64_t)a1, (uint64_t)v21);
    sub_1BC03E9D8((uint64_t)a1, (uint64_t)v19);
    sub_1BC03E9D8((uint64_t)a1, (uint64_t)v16);
    sub_1BC03E9D8((uint64_t)a1, v56);
    v24 = sub_1BC089DD8();
    v25 = sub_1BC08A678();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v59 = v50;
      *(_DWORD *)v27 = 136447234;
      v49 = v26;
      v58 = (uint64_t)v51;
      swift_getMetatypeMetadata();
      v47 = v24;
      v28 = sub_1BC08A3E4();
      v51 = a1;
      v58 = sub_1BBFDE0F8(v28, v29, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v30 = &v21[*(int *)(v54 + 28)];
      v48 = v22;
      __swift_project_boxed_opaque_existential_1(v30, *((_QWORD *)v30 + 3));
      v31 = sub_1BC089220();
      v58 = sub_1BBFDE0F8(v31, v32, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      *(_WORD *)(v27 + 22) = 2082;
      sub_1BBFDB550((uint64_t)v19, v52, (uint64_t (*)(_QWORD))sub_1BBFDB248);
      v33 = sub_1BC08A3E4();
      v58 = sub_1BBFDE0F8(v33, v34, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      *(_WORD *)(v27 + 32) = 2082;
      v35 = (void *)sub_1BC089514();
      v36 = sub_1BC089388();
      v38 = v37;

      v58 = sub_1BBFDE0F8(v36, v38, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      *(_WORD *)(v27 + 42) = 2082;
      v39 = v56;
      sub_1BC089538();
      sub_1BBFDC1EC(0, &qword_1ED69BAC8);
      v40 = sub_1BC08A3E4();
      v58 = sub_1BBFDE0F8(v40, v41, &v59);
      a1 = v51;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4(v39, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      v42 = v47;
      _os_log_impl(&dword_1BBFD7000, v47, (os_log_type_t)v49, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v27, 0x34u);
      v43 = v50;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v43, -1, -1);
      MEMORY[0x1BCCE9C40](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v48);
    }
    else
    {
      sub_1BBFE1BD4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      sub_1BBFE1BD4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      sub_1BBFE1BD4(v56, (uint64_t (*)(_QWORD))sub_1BC03E9BC);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v22);
    }
    v58 = sub_1BC030390(a1);
    sub_1BC036180(0);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v44 = sub_1BC08A180();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BC03619C(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC03B5A8();
    v44 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v44;
}

uint64_t sub_1BC02FD74(uint64_t (**a1)(void), uint64_t a2, uint64_t (**a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (**v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v51 = a3;
  sub_1BBFDAEA0(0);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AA30, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v46 - v9;
  sub_1BC03BC90(0);
  v54 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v56 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v46 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v46 - v20;
  v22 = sub_1BC089DE4();
  v55 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v57 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1BC089D90();
    sub_1BC03BCAC((uint64_t)a1, (uint64_t)v21);
    sub_1BC03BCAC((uint64_t)a1, (uint64_t)v19);
    sub_1BC03BCAC((uint64_t)a1, (uint64_t)v16);
    sub_1BC03BCAC((uint64_t)a1, v56);
    v24 = sub_1BC089DD8();
    v25 = sub_1BC08A678();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v59 = v50;
      *(_DWORD *)v27 = 136447234;
      v49 = v26;
      v58 = (uint64_t)v51;
      swift_getMetatypeMetadata();
      v47 = v24;
      v28 = sub_1BC08A3E4();
      v51 = a1;
      v58 = sub_1BBFDE0F8(v28, v29, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v30 = &v21[*(int *)(v54 + 28)];
      v48 = v22;
      __swift_project_boxed_opaque_existential_1(v30, *((_QWORD *)v30 + 3));
      v31 = sub_1BC089220();
      v58 = sub_1BBFDE0F8(v31, v32, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      *(_WORD *)(v27 + 22) = 2082;
      sub_1BBFDB550((uint64_t)v19, v52, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
      v33 = sub_1BC08A3E4();
      v58 = sub_1BBFDE0F8(v33, v34, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      *(_WORD *)(v27 + 32) = 2082;
      v35 = (void *)sub_1BC089514();
      v36 = sub_1BC089388();
      v38 = v37;

      v58 = sub_1BBFDE0F8(v36, v38, &v59);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      *(_WORD *)(v27 + 42) = 2082;
      v39 = v56;
      sub_1BC089538();
      sub_1BBFDC1EC(0, &qword_1ED69BAC8);
      v40 = sub_1BC08A3E4();
      v58 = sub_1BBFDE0F8(v40, v41, &v59);
      a1 = v51;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4(v39, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      v42 = v47;
      _os_log_impl(&dword_1BBFD7000, v47, (os_log_type_t)v49, "[%{public}s][%{public}s]: dispatching GeneratorPipeline <%{public}s> for profile %{public}s and context %{public}s to queue for execution", (uint8_t *)v27, 0x34u);
      v43 = v50;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v43, -1, -1);
      MEMORY[0x1BCCE9C40](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v48);
    }
    else
    {
      sub_1BBFE1BD4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      sub_1BBFE1BD4((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      sub_1BBFE1BD4(v56, (uint64_t (*)(_QWORD))sub_1BC03BC90);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v22);
    }
    v58 = sub_1BC030864(a1);
    sub_1BC03BEC4(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
    v44 = sub_1BC08A180();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BC03BEE0(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC03C6A0();
    v44 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v44;
}

uint64_t sub_1BC030390(uint64_t (**a1)(void))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v42 = a1;
  sub_1BC03F268(0);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03E9BC(0);
  v43 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC03F2EC();
  v9 = v8;
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03F3C4();
  v47 = v12;
  v49 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69A890, v15, sub_1BC03F458, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
  v45 = v16;
  v48 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  v46 = v1 + 20;
  v20 = v1[23];
  v19 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v20);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v20, v19);
  v21 = (uint64_t)v42;
  v22 = (*v42)();
  sub_1BBFDB5B0(0);
  v54 = v23;
  v55 = sub_1BBFDA9C0(&qword_1ED69D078, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
  KeyPath = swift_getKeyPath();
  sub_1BC030D38(v21, KeyPath, v22, (uint64_t)v11);
  swift_release();
  swift_release();
  sub_1BC03E9D8(v21, (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v26 = swift_allocObject();
  sub_1BC03F594((uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_1BC03EA04(0);
  sub_1BBFDA9C0(&qword_1ED69D588, (uint64_t (*)(uint64_t))sub_1BC03F2EC, MEMORY[0x1E0C957C0]);
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC03F458();
  v27 = v47;
  sub_1BC08A21C();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v27);
  sub_1BC03F610();
  v28 = v45;
  v29 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v28);
  v30 = v2[23];
  v31 = v2[24];
  __swift_project_boxed_opaque_existential_1(v46, v30);
  v56 = v29;
  sub_1BBFDB248(0);
  v33 = v21 + *(int *)(v32 + 36);
  v34 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v31 + 40);
  sub_1BC00B7A0(0, &qword_1ED69A940, (uint64_t (*)(uint64_t))sub_1BC03EA04, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v36 = v35;
  v37 = sub_1BC03F28C();
  v56 = v34(&v56, v33, v36, v37, v30, v31);
  swift_allocObject();
  swift_weakInit();
  sub_1BC03619C(0);
  sub_1BC036180(0);
  sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  v38 = v51;
  sub_1BC08A1F8();
  swift_release();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A838, (uint64_t (*)(uint64_t))sub_1BC03F268, MEMORY[0x1E0C95B78]);
  v39 = v52;
  v40 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
  return v40;
}

uint64_t sub_1BC030864(uint64_t (**a1)(void))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v42 = a1;
  sub_1BC03C850(0);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BC90(0);
  v43 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC03C99C();
  v9 = v8;
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CA98();
  v47 = v12;
  v49 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69A880, v15, sub_1BC03CBCC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
  v45 = v16;
  v48 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  v46 = v1 + 20;
  v20 = v1[23];
  v19 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v20);
  v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v20, v19);
  v21 = (uint64_t)v42;
  v22 = (*v42)();
  sub_1BBFDB484(0);
  v54 = v23;
  v55 = sub_1BBFDA9C0(&qword_1ED69D068, (uint64_t (*)(uint64_t))sub_1BBFDB484, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
  KeyPath = swift_getKeyPath();
  sub_1BC03117C(v21, KeyPath, v22, (uint64_t)v11);
  swift_release();
  swift_release();
  sub_1BC03BCAC(v21, (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v26 = swift_allocObject();
  sub_1BC03CBFC((uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  sub_1BC03BD4C(0);
  sub_1BBFDA9C0(&qword_1ED69D578, (uint64_t (*)(uint64_t))sub_1BC03C99C, MEMORY[0x1E0C957C0]);
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC03CBCC();
  v27 = v47;
  sub_1BC08A21C();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v27);
  sub_1BC03CC1C();
  v28 = v45;
  v29 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v28);
  v30 = v2[23];
  v31 = v2[24];
  __swift_project_boxed_opaque_existential_1(v46, v30);
  v56 = v29;
  sub_1BBFDAEA0(0);
  v33 = v21 + *(int *)(v32 + 36);
  v34 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v31 + 40);
  sub_1BC00B7A0(0, &qword_1ED69A930, (uint64_t (*)(uint64_t))sub_1BC03BD4C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v36 = v35;
  v37 = sub_1BC03C93C();
  v56 = v34(&v56, v33, v36, v37, v30, v31);
  swift_allocObject();
  swift_weakInit();
  sub_1BC03BEE0(0);
  sub_1BC03BEC4(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
  v38 = v51;
  sub_1BC08A1F8();
  swift_release();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A808, (uint64_t (*)(uint64_t))sub_1BC03C850, MEMORY[0x1E0C95B78]);
  v39 = v52;
  v40 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
  return v40;
}

uint64_t sub_1BC030D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[0] = a4;
  sub_1BC03E9BC(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  v11 = swift_allocObject();
  swift_weakInit();
  sub_1BC03E9D8(a1, (uint64_t)v10);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = a2;
  sub_1BC03F594((uint64_t)v10, v13 + v12);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BC03E9D8(a1, (uint64_t)v10);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1BC03F594((uint64_t)v10, v15 + v12);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC03FC30;
  *(_QWORD *)(v16 + 24) = v15;
  sub_1BC0362D8(0, &qword_1ED69D638, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03F364();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC08A198();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1BC030F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[0] = a4;
  sub_1BC03EA04(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  v11 = swift_allocObject();
  swift_weakInit();
  sub_1BBFDB550(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC03EA04);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = a2;
  sub_1BC03F9B4((uint64_t)v10, v13 + v12);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BBFDB550(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC03EA04);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1BC03F9B4((uint64_t)v10, v15 + v12);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC03FA58;
  *(_QWORD *)(v16 + 24) = v15;
  sub_1BC0362D8(0, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03E590();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC08A198();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1BC03117C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[0] = a4;
  sub_1BC03BC90(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a3;
  v11 = swift_allocObject();
  swift_weakInit();
  sub_1BC03BCAC(a1, (uint64_t)v10);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = a2;
  sub_1BC03CBFC((uint64_t)v10, v13 + v12);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BC03BCAC(a1, (uint64_t)v10);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1BC03CBFC((uint64_t)v10, v15 + v12);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC03D434;
  *(_QWORD *)(v16 + 24) = v15;
  sub_1BC03CA14();
  sub_1BBFDA9C0(&qword_1ED69D620, (uint64_t (*)(uint64_t))sub_1BC03CA14, MEMORY[0x1E0C95D90]);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC08A198();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1BC031394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  _QWORD v19[2];

  v19[0] = a4;
  sub_1BC03BD4C(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a3;
  v11 = swift_allocObject();
  swift_weakInit();
  sub_1BBFDB550(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC03BD4C);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = a2;
  sub_1BC03D02C((uint64_t)v10, v13 + v12);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BBFDB550(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC03BD4C);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1BC03D02C((uint64_t)v10, v15 + v12);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1BC03D19C;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = MEMORY[0x1E0C95D78];
  sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C880, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03BA24(&qword_1ED69C878, (unint64_t *)&qword_1ED69C880, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v17, MEMORY[0x1E0C95D90]);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC08A198();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1BC0315E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BBFDB550(a1, a3, (uint64_t (*)(_QWORD))sub_1BBFDB2E4);
  sub_1BC03E9BC(0);
  v6 = v5;
  v7 = a2 + *(int *)(v5 + 28);
  sub_1BC03EA04(0);
  v9 = v8;
  sub_1BBFE1C58(v7, a3 + *(int *)(v8 + 28));
  v10 = a2 + *(int *)(v6 + 32);
  v11 = a3 + *(int *)(v9 + 32);
  v12 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  return sub_1BC089058();
}

uint64_t sub_1BC031694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03BDCC(a1, a3);
  sub_1BC03BC90(0);
  v6 = v5;
  v7 = a2 + *(int *)(v5 + 28);
  sub_1BC03BD4C(0);
  v9 = v8;
  sub_1BBFE1C58(v7, a3 + *(int *)(v8 + 28));
  v10 = a2 + *(int *)(v6 + 32);
  v11 = a3 + *(int *)(v9 + 32);
  v12 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  return sub_1BC089058();
}

uint64_t sub_1BC031738(uint64_t (**a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t);
  _QWORD *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  int v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD v44[4];
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  const char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t (**v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v52 = a1;
  sub_1BC00B7A0(0, &qword_1ED69AA38, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v44 - v4;
  v6 = sub_1BC0892D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB2E4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC089D6C();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    v18 = (id)_HKLogPersistedSignposts();
    swift_retain();
    v51 = v15;
    sub_1BC089D54();
    sub_1BC03EA04(0);
    v20 = v52;
    v21 = (uint64_t (**)(uint64_t))((char *)v52 + *(int *)(v19 + 28));
    v50 = v17;
    v22 = v21[3];
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v23 = sub_1BC015A44(v22);
    v48 = v24;
    v49 = v23;
    v47 = v25;
    v55 = 0x6F746172656E6547;
    v56 = 0xEB00000000203A72;
    sub_1BBFDB550((uint64_t)v20, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BBFDB2E4);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v45 = v56;
    v46 = v55;
    v44[3] = sub_1BC08A678();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D2D5F8], v6);
    v26 = (void *)sub_1BC0892C8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1BC00A718();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BC08C620;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v28 = sub_1BC089220();
    v30 = v29;
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    v32 = sub_1BBFDF700();
    *(_QWORD *)(v27 + 64) = v32;
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 40) = v30;
    sub_1BBFDB550((uint64_t)v20, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BBFDB2E4);
    v33 = sub_1BC08A3E4();
    *(_QWORD *)(v27 + 96) = v31;
    *(_QWORD *)(v27 + 104) = v32;
    *(_QWORD *)(v27 + 72) = v33;
    *(_QWORD *)(v27 + 80) = v34;
    v35 = (void *)sub_1BC089514();
    v36 = sub_1BC089388();
    v38 = v37;

    *(_QWORD *)(v27 + 136) = v31;
    *(_QWORD *)(v27 + 144) = v32;
    *(_QWORD *)(v27 + 112) = v36;
    *(_QWORD *)(v27 + 120) = v38;
    sub_1BC089D3C();

    v39 = swift_bridgeObjectRelease();
    v40 = (void *)MEMORY[0x1BCCE96F4](v39);
    v41 = (uint64_t)v51;
    v42 = sub_1BC031F9C(v20, v50, (uint64_t)v49, v48, v47, (uint64_t)v51, v46, v45);
    objc_autoreleasePoolPop(v40);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v41, v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC03619C(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC03B5A8();
    v42 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v42;
}

uint64_t sub_1BC031B64(uint64_t (**a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t);
  _QWORD *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  int v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD v44[4];
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  const char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t (**v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v52 = a1;
  sub_1BC00B7A0(0, &qword_1ED69AA30, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v44 - v4;
  v6 = sub_1BC0892D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v44 - v11;
  v13 = sub_1BC089D6C();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    v18 = (id)_HKLogPersistedSignposts();
    swift_retain();
    v51 = v15;
    sub_1BC089D54();
    sub_1BC03BD4C(0);
    v20 = v52;
    v21 = (uint64_t (**)(uint64_t))((char *)v52 + *(int *)(v19 + 28));
    v50 = v17;
    v22 = v21[3];
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v23 = sub_1BC015A44(v22);
    v48 = v24;
    v49 = v23;
    v47 = v25;
    v55 = 0x6F746172656E6547;
    v56 = 0xEB00000000203A72;
    sub_1BC03BDCC((uint64_t)v20, (uint64_t)v12);
    sub_1BC08A3E4();
    sub_1BC08A420();
    swift_bridgeObjectRelease();
    v45 = v56;
    v46 = v55;
    v44[3] = sub_1BC08A678();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D2D5F8], v6);
    v26 = (void *)sub_1BC0892C8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1BC00A718();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1BC08C620;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v28 = sub_1BC089220();
    v30 = v29;
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    v32 = sub_1BBFDF700();
    *(_QWORD *)(v27 + 64) = v32;
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 40) = v30;
    sub_1BC03BDCC((uint64_t)v20, (uint64_t)v12);
    v33 = sub_1BC08A3E4();
    *(_QWORD *)(v27 + 96) = v31;
    *(_QWORD *)(v27 + 104) = v32;
    *(_QWORD *)(v27 + 72) = v33;
    *(_QWORD *)(v27 + 80) = v34;
    v35 = (void *)sub_1BC089514();
    v36 = sub_1BC089388();
    v38 = v37;

    *(_QWORD *)(v27 + 136) = v31;
    *(_QWORD *)(v27 + 144) = v32;
    *(_QWORD *)(v27 + 112) = v36;
    *(_QWORD *)(v27 + 120) = v38;
    sub_1BC089D3C();

    v39 = swift_bridgeObjectRelease();
    v40 = (void *)MEMORY[0x1BCCE96F4](v39);
    v41 = (uint64_t)v51;
    v42 = sub_1BC032528(v20, v50, (uint64_t)v49, v48, v47, (uint64_t)v51, v46, v45);
    objc_autoreleasePoolPop(v40);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v41, v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC03BEE0(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC08A06C();
    sub_1BC03C6A0();
    v42 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v42;
}

uint64_t sub_1BC031F9C(uint64_t (**a1)(uint64_t), _QWORD *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t (*v53)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t (**v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v78 = a7;
  v73 = a6;
  v74 = a8;
  v77 = a5;
  v75 = a3;
  v76 = a4;
  v79 = a2;
  sub_1BC03CCAC(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v59 - v12;
  sub_1BC03EA04(0);
  v61 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v61 + 64);
  MEMORY[0x1E0C80A78](v13);
  sub_1BC03F6A0();
  v16 = v15;
  v62 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03F718();
  v20 = v19;
  v63 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69A8B0, v23, sub_1BC03F7AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
  v68 = v24;
  v66 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v64 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v60 = (char *)&v59 - v27;
  sub_1BC03F7C8();
  v29 = *(_QWORD *)(v28 - 8);
  v69 = v28;
  v70 = v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v65 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (*a1)(v30);
  sub_1BBFDB5B0(0);
  v80 = v33;
  v81 = sub_1BBFDA9C0(&qword_1ED69D078, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
  KeyPath = swift_getKeyPath();
  v67 = a1;
  sub_1BC030F50((uint64_t)a1, KeyPath, v32, (uint64_t)v18);
  swift_release();
  swift_release();
  sub_1BBFDB550((uint64_t)a1, (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03EA04);
  v35 = (*(unsigned __int8 *)(v61 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v36 = swift_allocObject();
  sub_1BC03F9B4((uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35);
  sub_1BC03619C(0);
  sub_1BBFDA9C0(&qword_1ED69D598, (uint64_t (*)(uint64_t))sub_1BC03F6A0, MEMORY[0x1E0C957C0]);
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v18, v16);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC03F7AC();
  v37 = v60;
  sub_1BC08A21C();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v20);
  v38 = (id)_HKLogPersistedSignposts();
  v39 = sub_1BC089D6C();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v71, v73, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
  v42 = v66;
  v43 = v37;
  v44 = v37;
  v45 = v68;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v43, v68);
  sub_1BBFDB550(v41, v72, (uint64_t (*)(_QWORD))sub_1BC03CCAC);
  sub_1BC03F848();
  swift_bridgeObjectRetain();
  v46 = v65;
  sub_1BC089E50();
  sub_1BBFE1BD4(v41, (uint64_t (*)(_QWORD))sub_1BC03CCAC);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  sub_1BBFDA9C0(&qword_1ED69B130, (uint64_t (*)(uint64_t))sub_1BC03F7C8, MEMORY[0x1E0D2E7F8]);
  v47 = v69;
  v48 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v47);
  v49 = v79[23];
  v50 = v79[24];
  __swift_project_boxed_opaque_existential_1(v79 + 20, v49);
  v82 = v48;
  sub_1BBFDB2E4(0);
  v52 = (char *)v67 + *(int *)(v51 + 44);
  v53 = *(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 48);
  sub_1BC036180(0);
  v55 = v54;
  v56 = sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  v57 = v53(&v82, v52, v55, v56, v49, v50);
  swift_release();
  return v57;
}

uint64_t sub_1BC032528(uint64_t (**a1)(uint64_t), _QWORD *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t (*v53)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (**v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v78 = a7;
  v73 = a6;
  v74 = a8;
  v77 = a5;
  v75 = a3;
  v76 = a4;
  v79 = a2;
  sub_1BC03CCAC(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v71 = (char *)&v59 - v12;
  sub_1BC03BD4C(0);
  v61 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v61 + 64);
  MEMORY[0x1E0C80A78](v13);
  sub_1BC03CCC8();
  v16 = v15;
  v62 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CD70();
  v20 = v19;
  v63 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03CB2C(0, &qword_1ED69A8A0, v23, sub_1BC03CE04, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
  v66 = *(_QWORD *)(v24 - 8);
  v67 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v64 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v60 = (char *)&v59 - v27;
  sub_1BC03CE20();
  v29 = *(_QWORD *)(v28 - 8);
  v69 = v28;
  v70 = v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v65 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (*a1)(v30);
  sub_1BBFDB484(0);
  v80 = v33;
  v81 = sub_1BBFDA9C0(&qword_1ED69D068, (uint64_t (*)(uint64_t))sub_1BBFDB484, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
  KeyPath = swift_getKeyPath();
  v68 = a1;
  sub_1BC031394((uint64_t)a1, KeyPath, v32, (uint64_t)v18);
  swift_release();
  swift_release();
  sub_1BBFDB550((uint64_t)a1, (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03BD4C);
  v35 = (*(unsigned __int8 *)(v61 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v36 = swift_allocObject();
  sub_1BC03D02C((uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35);
  sub_1BC03BEE0(0);
  sub_1BBFDA9C0(&qword_1ED69C788, (uint64_t (*)(uint64_t))sub_1BC03CCC8, MEMORY[0x1E0C957C0]);
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v18, v16);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC03CE04();
  v37 = v60;
  sub_1BC08A21C();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v20);
  v38 = (id)_HKLogPersistedSignposts();
  v39 = sub_1BC089D6C();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v71, v73, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
  v42 = v66;
  v43 = v37;
  v44 = v37;
  v45 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v43, v67);
  sub_1BBFDB550(v41, v72, (uint64_t (*)(_QWORD))sub_1BC03CCAC);
  sub_1BC03CEA0();
  swift_bridgeObjectRetain();
  v46 = v65;
  sub_1BC089E50();
  sub_1BBFE1BD4(v41, (uint64_t (*)(_QWORD))sub_1BC03CCAC);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  sub_1BBFDA9C0(&qword_1ED69B120, (uint64_t (*)(uint64_t))sub_1BC03CE20, MEMORY[0x1E0D2E7F8]);
  v47 = v69;
  v48 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v47);
  v49 = v79[23];
  v50 = v79[24];
  __swift_project_boxed_opaque_existential_1(v79 + 20, v49);
  v82 = v48;
  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  v52 = (char *)v68 + *(int *)(v51 + 44);
  v53 = *(uint64_t (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 48);
  sub_1BC03BEC4(0);
  v55 = v54;
  v56 = sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
  v57 = v53(&v82, v52, v55, v56, v49, v50);
  swift_release();
  return v57;
}

uint64_t sub_1BC032AD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v56 = a8;
  v63 = a6;
  v64 = a7;
  v66 = a5;
  sub_1BC0362D8(0, &qword_1ED69B2D0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v54 - v15;
  sub_1BC009270();
  v57 = *(_QWORD *)(v17 - 8);
  v58 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00945C();
  v59 = *(_QWORD *)(v20 - 8);
  v60 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC009524(0);
  v24 = v23;
  v62 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v61 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v55 = v24;
  v65 = Strong;
  v27 = (void *)sub_1BC08A618();
  v28 = (void *)sub_1BC089370();

  if (!v28)
  {
    swift_release();
LABEL_8:
    sub_1BBFDB354(0);
    sub_1BC08A06C();
    sub_1BC03DAB0();
    v32 = sub_1BC08A180();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return v32;
  }
  v29 = objc_msgSend(v28, sel_type);
  if (v29 != (id)1)
  {
    if (v29 == (id)2)
    {
      v63 = a9;
      __swift_project_boxed_opaque_existential_1(a4, a4[3]);
      v64 = v28;
      v34 = sub_1BC089220();
      v36 = v35;
      v37 = sub_1BC089A3C();
      v38 = sub_1BC089A48();
      v67 = v66;
      v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = v39;
      v40[3] = v34;
      v40[4] = v36;
      v40[5] = v37;
      v54 = v37;
      v40[6] = v38;
      v41 = MEMORY[0x1E0C95D78];
      sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      v56 = v42;
      sub_1BC009320();
      sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v41, MEMORY[0x1E0C95D90]);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC08A1A4();
      swift_release();
      v43 = sub_1BBFDA9C0(&qword_1ED69A788, (uint64_t (*)(uint64_t))sub_1BC009270, MEMORY[0x1E0C95950]);
      v44 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
      v45 = v58;
      MEMORY[0x1BCCE8B48](v58, v43, v44);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v45);
      sub_1BBFDA9C0((unint64_t *)&qword_1ED69A6E0, (uint64_t (*)(uint64_t))sub_1BC00945C, MEMORY[0x1E0C95870]);
      v46 = v60;
      v47 = sub_1BC08A180();
      swift_release();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v67 = v47;
      v48 = sub_1BC08A0CC();
      swift_release();
      v67 = v48;
      sub_1BC00B7A0(0, &qword_1ED69A9B0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      v50 = v49;
      v51 = sub_1BC0095B0();
      v52 = v61;
      sub_1BC08A0A8();
      swift_release();
      v67 = v50;
      v68 = v51;
      swift_getOpaqueTypeConformance2();
      v53 = v55;
      v32 = sub_1BC08A180();

      swift_release();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v53);
      return v32;
    }
    if (v29 != (id)3)
    {
      sub_1BBFDB354(0);
      sub_1BC08A06C();
      sub_1BC03DAB0();
      v32 = sub_1BC08A180();

      swift_release();
      goto LABEL_9;
    }
  }
  v30 = sub_1BC089A3C();
  v31 = sub_1BC089A48();
  v32 = a10(a3, a4, v30, v31, v66, v63, v64);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1BC033088(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2(0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + *(int *)(v3 + 28)), *(_QWORD *)(a1 + *(int *)(v3 + 28) + 24));
  sub_1BC089220();
  sub_1BC00BC4C();
  v4 = sub_1BC08A804();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
    swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  return 0x3D6E6967756C70;
}

uint64_t sub_1BC033190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v21 = a6;
  v10 = sub_1BC08A270();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC08A2B8();
  v13 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v6 + 152);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = a5;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = v21;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC08A288();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC01DED0(0);
  sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD28, (uint64_t (*)(uint64_t))sub_1BC01DED0, MEMORY[0x1E0DEAF38]);
  sub_1BC08A834();
  MEMORY[0x1BCCE90DC](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC0333B8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _QWORD *))
{
  uint64_t result;
  void *v4;
  _QWORD v5[4];
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (void *)MEMORY[0x1BCCE96F4]();
    sub_1BC08A000();
    v5[0] = v5[2];
    v5[1] = v5[3];
    a2(&v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC089FF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033498()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_release();
  return v0;
}

uint64_t sub_1BC03350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03EA04(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BBFDB550(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03EA04);
    v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    sub_1BC03F9B4((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03FBE0, v11, (uint64_t)&unk_1E74A1AA8, (uint64_t)&unk_1E74A1C38, (uint64_t)sub_1BC040160, (uint64_t)&block_descriptor_197);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03E9BC(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC03E9D8(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    sub_1BC03F594((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03FC9C, v11, (uint64_t)&unk_1E74A1AA8, (uint64_t)&unk_1E74A1C38, (uint64_t)sub_1BC040160, (uint64_t)&block_descriptor_197);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03BD4C(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BBFDB550(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03BD4C);
    v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    sub_1BC03D02C((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03D334, v11, (uint64_t)&unk_1E74A1530, (uint64_t)&unk_1E74A16C0, (uint64_t)sub_1BC03D1CC, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC03387C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03BC90(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC03BCAC(a4, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a3;
    sub_1BC03CBFC((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03D63C, v11, (uint64_t)&unk_1E74A1530, (uint64_t)&unk_1E74A16C0, (uint64_t)sub_1BC03D1CC, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC03399C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03EA04(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BBFDB550(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03EA04);
    v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    sub_1BC03F9B4((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03FA70, v10, (uint64_t)&unk_1E74A1AA8, (uint64_t)&unk_1E74A1C38, (uint64_t)sub_1BC040160, (uint64_t)&block_descriptor_197);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03E9BC(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC03E9D8(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    sub_1BC03F594((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03FC58, v10, (uint64_t)&unk_1E74A1AA8, (uint64_t)&unk_1E74A1C38, (uint64_t)sub_1BC040160, (uint64_t)&block_descriptor_197);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03BD4C(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BBFDB550(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03BD4C);
    v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    sub_1BC03D02C((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03D1B4, v10, (uint64_t)&unk_1E74A1530, (uint64_t)&unk_1E74A16C0, (uint64_t)sub_1BC03D1CC, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03BC90(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC03BCAC(a3, (uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    sub_1BC03CBFC((uint64_t)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
    swift_retain();
    sub_1BC033190((uint64_t)sub_1BC03D4A0, v10, (uint64_t)&unk_1E74A1530, (uint64_t)&unk_1E74A16C0, (uint64_t)sub_1BC03D1CC, (uint64_t)&block_descriptor_5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC033E2C(uint64_t a1)
{
  return sub_1BC033E54(a1, sub_1BC036180, &qword_1ED69A990);
}

uint64_t sub_1BC033E40(uint64_t a1)
{
  return sub_1BC033E54(a1, sub_1BC03BEC4, &qword_1ED69A978);
}

uint64_t sub_1BC033E54(uint64_t a1, void (*a2)(uint64_t), unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v9 = sub_1BC089DD8();
  v10 = sub_1BC08A678();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136446210;
    v16[1] = v11 + 4;
    v17 = ((uint64_t (*)(_QWORD))a2)(0);
    sub_1BC03C700(0, a3, a2);
    v13 = sub_1BC08A3E4();
    v17 = sub_1BBFDE0F8(v13, v14, &v18);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v9, v10, "[%{public}s]: subscription to begin generation received", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v12, -1, -1);
    MEMORY[0x1BCCE9C40](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC034004(void *a1, void (*a2)(uint64_t), unint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v10 = a1;
  v11 = a1;
  v12 = sub_1BC089DD8();
  v13 = sub_1BC08A678();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = v6;
    v15 = v14;
    v16 = swift_slowAlloc();
    v26 = v16;
    *(_DWORD *)v15 = 136446466;
    v25 = ((uint64_t (*)(_QWORD))a2)(0);
    sub_1BC03C700(0, a3, a2);
    v17 = sub_1BC08A3E4();
    v25 = sub_1BBFDE0F8(v17, v18, &v26);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    v25 = (uint64_t)a1;
    v19 = a1;
    sub_1BC03C738();
    v20 = sub_1BC08A3E4();
    v25 = sub_1BBFDE0F8(v20, v21, &v26);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v12, v13, "[%{public}s]: Sending completion event <%{public}s> for generation sent", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v16, -1, -1);
    MEMORY[0x1BCCE9C40](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1BC034250()
{
  return sub_1BC034278(sub_1BC036180, &qword_1ED69A990);
}

uint64_t sub_1BC034264()
{
  return sub_1BC034278(sub_1BC03BEC4, &qword_1ED69A978);
}

uint64_t sub_1BC034278(void (*a1)(uint64_t), unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1BC089DE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v8 = sub_1BC089DD8();
  v9 = sub_1BC08A678();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v10 = 136446210;
    v15[1] = v10 + 4;
    v16 = ((uint64_t (*)(_QWORD))a1)(0);
    sub_1BC03C700(0, a2, a1);
    v12 = sub_1BC08A3E4();
    v16 = sub_1BBFDE0F8(v12, v13, &v17);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v8, v9, "[%{public}s]: cancellation received for generation", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v11, -1, -1);
    MEMORY[0x1BCCE9C40](v10, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC034428(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a2;
  sub_1BC03B218();
  v6 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  v31 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v28 - v18;
  v39 = a3;
  sub_1BC089A60();
  swift_retain();
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1BC00A4F4();
  v20 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v21 = *a1;
  __swift_project_boxed_opaque_existential_1(a1 + 1, a1[4]);
  v22 = sub_1BC089220();
  v33 = v20;
  v34 = v22;
  v35 = v23;
  v36 = a1;
  v37 = v29;
  v38 = a3;
  v24 = sub_1BC027FD8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BC03B290, (uint64_t)v32, v21);
  swift_bridgeObjectRelease();
  v39 = v24;
  sub_1BC036180(0);
  sub_1BC03B2D0(0);
  sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  sub_1BBFDA9C0(&qword_1ED69AA48, (uint64_t (*)(uint64_t))sub_1BC03B2D0, MEMORY[0x1E0DEAF38]);
  sub_1BC089F4C();
  sub_1BBFDA9C0(&qword_1ED69A8D8, (uint64_t (*)(uint64_t))sub_1BC03B218, MEMORY[0x1E0C95C80]);
  v25 = v30;
  v26 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v25);
  return v26;
}

uint64_t sub_1BC034704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53[2];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v53[0] = a7;
  v53[1] = a6;
  v69 = a2;
  v70 = a5;
  v67 = a3;
  v68 = a4;
  sub_1BC00B7A0(0, &qword_1ED69AA38, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)v53 - v9;
  sub_1BC03B2EC();
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B3F8();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B488();
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03619C(0);
  v71 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  sub_1BC03B518();
  v21 = *(_QWORD *)(v20 - 8);
  v65 = v20;
  v66 = v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC089928();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, a1, v24);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v27, v24);
  if (v28 == *MEMORY[0x1E0D2E348])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v72 = v69;
    v29 = MEMORY[0x1E0C95D78];
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B820();
    v30 = sub_1BC08A12C();
    swift_bridgeObjectRelease();
    v72 = v30;
    sub_1BBFDB550(v70, (uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03619C);
    v31 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v32 = swift_allocObject();
    sub_1BC00D664((uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, (uint64_t (*)(_QWORD))sub_1BC03619C);
    sub_1BC00B7A0(0, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v29);
    sub_1BC03B398();
LABEL_5:
    sub_1BC08A1A4();
    swift_release();
    swift_release();
    sub_1BBFDA9C0(&qword_1ED69A768, (uint64_t (*)(uint64_t))sub_1BC03B518, MEMORY[0x1E0C95950]);
    v38 = v65;
    v39 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v38);
    return v39;
  }
  v33 = v69;
  if (v28 == *MEMORY[0x1E0D2E320])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v72 = v33;
    v34 = MEMORY[0x1E0C95D78];
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B820();
    v35 = sub_1BC08A12C();
    swift_bridgeObjectRelease();
    v72 = v35;
    sub_1BBFDB550(v70, (uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03619C);
    v36 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v37 = swift_allocObject();
    sub_1BC00D664((uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v36, (uint64_t (*)(_QWORD))sub_1BC03619C);
    sub_1BC00B7A0(0, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v34);
    sub_1BC03B398();
    goto LABEL_5;
  }
  if (v28 == *MEMORY[0x1E0D2E340])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v72 = v33;
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B820();
    v41 = sub_1BC08A0FC();
    swift_bridgeObjectRelease();
    v72 = v41;
    sub_1BBFDB550(v70, (uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BC03619C);
    v42 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v43 = swift_allocObject();
    sub_1BC00D664((uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v43 + v42, (uint64_t (*)(_QWORD))sub_1BC03619C);
    sub_1BC08A1A4();
    swift_release();
    swift_release();
    sub_1BBFDA9C0(&qword_1EF3EE218, (uint64_t (*)(uint64_t))sub_1BC03B488, MEMORY[0x1E0C95950]);
    v44 = v64;
    v39 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v16, v44);
    return v39;
  }
  if (v28 == *MEMORY[0x1E0D2E338])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v72 = v33;
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B820();
    v45 = sub_1BC08A114();
    swift_bridgeObjectRelease();
    v72 = v45;
    v46 = v60;
    sub_1BC08A18C();
    swift_release();
    sub_1BBFDA9C0(&qword_1ED69ACC8, (uint64_t (*)(uint64_t))sub_1BC03B3F8, MEMORY[0x1E0C95708]);
    v47 = v62;
    v39 = sub_1BC08A180();
    v48 = v61;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
    return v39;
  }
  if (v28 == *MEMORY[0x1E0D2E330])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v27, v24);
    v72 = v33;
    v49 = MEMORY[0x1E0C95D78];
    sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B820();
    v50 = sub_1BC08A12C();
    swift_bridgeObjectRelease();
    v72 = v50;
    sub_1BC00B7A0(0, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v49);
    sub_1BC03B398();
    v46 = v57;
    sub_1BC08A18C();
    swift_release();
    sub_1BBFDA9C0(&qword_1ED69ACD8, (uint64_t (*)(uint64_t))sub_1BC03B2EC, MEMORY[0x1E0C95708]);
    v47 = v59;
    v39 = sub_1BC08A180();
    v48 = v58;
    goto LABEL_13;
  }
  if (v28 == *MEMORY[0x1E0D2E328])
    return sub_1BC034F7C(v53[0], v70, v67, v68);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  v51 = v54;
  sub_1BC08A06C();
  sub_1BC03B5A8();
  v52 = v56;
  v39 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  return v39;
}

uint64_t sub_1BC034F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v51 = a4;
  v49 = a3;
  v58 = a2;
  sub_1BC03619C(0);
  v59 = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v6;
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v45 - v12;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v45 - v17;
  sub_1BC03B738();
  v20 = *(_QWORD *)(v19 - 8);
  v46 = v19;
  v47 = v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B7B0();
  v48 = v23;
  v50 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03B488();
  v27 = *(_QWORD *)(v26 - 8);
  v53 = v26;
  v54 = v27;
  MEMORY[0x1E0C80A78](v26);
  v52 = (char *)v45 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a1;
  sub_1BC089A60();
  swift_retain();
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1BC00A4F4();
  v29 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v60 = v29;
  v30 = MEMORY[0x1E0C95D78];
  sub_1BC00B7A0(0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v45[1] = v31;
  v45[2] = sub_1BC00B820();
  v32 = sub_1BC08A138();
  swift_release();
  v60 = v32;
  sub_1BC00B7A0(0, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v30);
  sub_1BC03B398();
  sub_1BC08A1D4();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69B390, (uint64_t (*)(uint64_t))sub_1BC03B738, MEMORY[0x1E0C95AD0]);
  swift_retain();
  v33 = v46;
  sub_1BC08A1A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v33);
  v34 = MEMORY[0x1E0C95950];
  sub_1BBFDA9C0(&qword_1EF3EE228, (uint64_t (*)(uint64_t))sub_1BC03B7B0, MEMORY[0x1E0C95950]);
  v35 = v48;
  v36 = sub_1BC08A108();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v35);
  v60 = v36;
  v37 = v55;
  sub_1BBFDB550(v58, v55, (uint64_t (*)(_QWORD))sub_1BC03619C);
  v38 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v39 = swift_allocObject();
  sub_1BC00D664(v37, v39 + v38, (uint64_t (*)(_QWORD))sub_1BC03619C);
  v40 = v52;
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  sub_1BBFDA9C0(&qword_1EF3EE218, (uint64_t (*)(uint64_t))sub_1BC03B488, v34);
  v41 = v53;
  v42 = v40;
  v43 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v41);
  return v43;
}

uint64_t sub_1BC03542C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *a3 = sub_1BC03E7B4;
  a3[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t sub_1BC0354F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (**v3)();
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BBFDB248(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t (**)())((char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1BC089124();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE4574(0, v5, 0);
    v6 = v4 + 32;
    v7 = v16;
    do
    {
      sub_1BBFE1C58(v6, (uint64_t)v13);
      v8 = v14;
      v9 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      SharableModelGeneratorPipeline.eraseToAnyPipeline()(v8, v9, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE4574(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BBFE4574(v10 > 1, v11 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BC00D664((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v11, (uint64_t (*)(_QWORD))sub_1BBFDB248);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1BC0356B0()
{
  uint64_t result;

  result = sub_1BC04754C((uint64_t)&unk_1E749F1E0);
  qword_1ED69AFC8 = result;
  return result;
}

uint64_t sub_1BC0356D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 248) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC035730()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC035764(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 248) = a1;
  return swift_release();
}

uint64_t (*sub_1BC0357A8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC0357E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v81)(uint64_t, char *, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;

  v3 = *v1;
  sub_1BC0360FC();
  v94 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  MEMORY[0x1E0C80A78](v4);
  v103 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0361B8();
  v97 = *(_QWORD *)(v6 - 8);
  v98 = v6;
  MEMORY[0x1E0C80A78](v6);
  v96 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC089D6C();
  v104 = *(_QWORD *)(v8 - 8);
  v105 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v93 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v81 - v12;
  v90 = v13;
  MEMORY[0x1E0C80A78](v11);
  v102 = (char *)&v81 - v14;
  v15 = sub_1BC089064();
  v100 = *(_QWORD *)(v15 - 8);
  v101 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v92 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v81 - v19;
  v88 = v20;
  MEMORY[0x1E0C80A78](v18);
  v107 = (char *)&v81 - v21;
  sub_1BC008884();
  v23 = MEMORY[0x1E0C80A78](v22);
  v84 = (uint64_t)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v85 = (uint64_t)&v81 - v25;
  sub_1BC036230();
  v27 = v26;
  v83 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a1 + qword_1ED6A04D0);
  v87 = v1;
  if (v30)
  {
    v106 = v30;
  }
  else
  {
    swift_beginAccess();
    v108 = v1[31];
    sub_1BC0362D8(0, &qword_1ED69AA08, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
    sub_1BC036340();
    v106 = sub_1BC08A180();
  }
  v108 = *(_QWORD *)(a1 + 16);
  v31 = v108;
  *(_QWORD *)(swift_allocObject() + 16) = v3;
  v99 = v3;
  sub_1BC03B9B4(0, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC00BC08(0, &qword_1ED69C8E8);
  sub_1BC008CC4();
  swift_retain();
  swift_retain();
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A758, (uint64_t (*)(uint64_t))sub_1BC036230, MEMORY[0x1E0C95950]);
  v32 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v29, v27);
  v33 = v85;
  sub_1BBFDB550(a1 + qword_1ED6A04D8, v85, (uint64_t (*)(_QWORD))sub_1BC008884);
  v34 = *(_BYTE *)(a1 + qword_1ED6A0530);
  sub_1BC036528(0);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v31;
  sub_1BC00D664(v33, v35 + qword_1ED6A04D8, (uint64_t (*)(_QWORD))sub_1BC008884);
  v36 = v106;
  *(_QWORD *)(v35 + qword_1ED6A04D0) = v106;
  v37 = v36;
  *(_BYTE *)(v35 + qword_1ED6A0530) = v34;
  v38 = v84;
  sub_1BBFDB550(v35 + qword_1ED6A04D8, v84, (uint64_t (*)(_QWORD))sub_1BC008884);
  v39 = swift_allocObject();
  v86 = v32;
  *(_QWORD *)(v39 + 16) = v32;
  sub_1BC00D664(v38, v39 + qword_1ED6A04D8, (uint64_t (*)(_QWORD))sub_1BC008884);
  v106 = v37;
  *(_QWORD *)(v39 + qword_1ED6A04D0) = v37;
  *(_BYTE *)(v39 + qword_1ED6A0530) = v34;
  v85 = v39;
  swift_setDeallocating();
  v40 = v35 + qword_1ED6A04D8;
  swift_retain_n();
  swift_retain();
  sub_1BBFE1BD4(v40, (uint64_t (*)(_QWORD))sub_1BC008884);
  swift_release();
  swift_deallocClassInstance();
  v41 = v87;
  v42 = sub_1BC02A484(v39);
  v84 = v42;
  v43 = v107;
  sub_1BC089058();
  v44 = (id)_HKLogPersistedSignposts();
  _HKLogSignpostIDGenerate();

  v45 = v102;
  sub_1BC089D78();
  v108 = v42;
  v46 = swift_allocObject();
  swift_weakInit();
  v47 = swift_allocObject();
  v48 = v99;
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v48;
  sub_1BC089FAC();
  sub_1BC036180(0);
  sub_1BC03619C(0);
  sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  sub_1BC08A1F8();
  swift_release();
  v87 = (_QWORD *)v41[19];
  v83 = *(_QWORD *)(v100 + 16);
  v49 = v100;
  v50 = v89;
  v51 = v43;
  v52 = v101;
  ((void (*)(char *, char *, uint64_t))v83)(v89, v51, v101);
  v82 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
  v53 = v104;
  v54 = v91;
  v55 = v45;
  v82(v91, v45, v105);
  v56 = *(unsigned __int8 *)(v49 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = *(unsigned __int8 *)(v53 + 80);
  v59 = v53;
  v60 = (v88 + v58 + v57) & ~v58;
  v88 = v56 | v58 | 7;
  v61 = (v90 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  v90 = v61 + 8;
  v62 = swift_allocObject();
  v81 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  v81(v62 + v57, v50, v52);
  v63 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
  v64 = v105;
  v63(v62 + v60, v54, v105);
  v65 = v99;
  *(_QWORD *)(v62 + v61) = v99;
  v66 = v92;
  ((void (*)(char *, char *, uint64_t))v83)(v92, v107, v52);
  v67 = v93;
  v68 = v55;
  v69 = v64;
  v82(v93, v68, v64);
  v70 = swift_allocObject();
  v71 = v70 + v57;
  v72 = v101;
  v81(v71, v66, v101);
  v73 = v70 + v60;
  v74 = v69;
  v63(v73, v67, v69);
  *(_QWORD *)(v70 + v61) = v65;
  sub_1BBFDA9C0(&qword_1ED69A858, (uint64_t (*)(uint64_t))sub_1BC0360FC, MEMORY[0x1E0C95B78]);
  v75 = v95;
  v76 = v96;
  v77 = v103;
  sub_1BC08A09C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v77, v75);
  sub_1BBFDA9C0(&qword_1ED69B110, (uint64_t (*)(uint64_t))sub_1BC0361B8, MEMORY[0x1E0D2E7E0]);
  v78 = v98;
  v79 = sub_1BC08A180();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v76, v78);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v74);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v107, v72);
  return v79;
}

void sub_1BC0360FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A860)
  {
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A860);
  }
}

void sub_1BC036180(uint64_t a1)
{
  sub_1BC00B7A0(a1, &qword_1ED69A988, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC03619C(uint64_t a1)
{
  sub_1BBFDB42C(a1, qword_1ED69D228, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
}

void sub_1BC0361B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B118)
  {
    sub_1BC0360FC();
    sub_1BBFDA9C0(&qword_1ED69A858, (uint64_t (*)(uint64_t))sub_1BC0360FC, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC089E38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B118);
  }
}

void sub_1BC036230()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A760)
  {
    sub_1BC03B9B4(255, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00BC08(255, &qword_1ED69C8E8);
    sub_1BC008CC4();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A760);
  }
}

void sub_1BC0362D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BC036340()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE1E8;
  if (!qword_1EF3EE1E8)
  {
    sub_1BC0362D8(255, &qword_1ED69AA08, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE1E8);
  }
  return result;
}

uint64_t sub_1BC0363A0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)result;
  v3 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v3)
  {
    v13 = a2;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(void **)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = (void *)sub_1BC089370();
      if (!v8)
        goto LABEL_3;
      v9 = v8;
      v10 = objc_msgSend(v8, sel_type);

      if (qword_1ED69AFD0 != -1)
        swift_once();
      if ((sub_1BC04CA60(v10, qword_1ED69AFC8) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BBFE4600(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v12 = *(_QWORD *)(v5 + 16);
        v11 = *(_QWORD *)(v5 + 24);
        if (v12 >= v11 >> 1)
          sub_1BBFE4600(v11 > 1, v12 + 1, 1);
        *(_QWORD *)(v5 + 16) = v12 + 1;
        *(_QWORD *)(v5 + 8 * v12 + 32) = v6;
      }
      else
      {
LABEL_3:

      }
      ++v4;
    }
    while (v3 != v4);
    result = swift_bridgeObjectRelease();
    a2 = v13;
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1BC036510()
{
  return swift_deallocObject();
}

uint64_t sub_1BC036520@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC0363A0(result, a2);
}

void sub_1BC036528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69ACA0)
  {
    sub_1BBFDB5B0(255);
    v3 = v2;
    v4 = sub_1BBFDA9C0(&qword_1ED69D078, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
    v6 = type metadata accessor for GeneratorPipelineManager.GeneratorPipelineManagerStreamContext(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED69ACA0);
  }
}

uint64_t sub_1BC0365A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  void (**v49)(_QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92[3];
  uint64_t v93;

  v89 = a2;
  v91 = a1;
  sub_1BC038DC8(0);
  v87 = (id)*(v4 - 1);
  v88 = v4;
  MEMORY[0x1E0C80A78](v4);
  v84 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AAC0, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v85 = *(_QWORD *)(v6 - 8);
  v86 = v6;
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v70 - v7;
  v8 = sub_1BC089DE4();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03619C(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v90 = (uint64_t)&v70 - v17;
  sub_1BC00BA7C(0, v18);
  v74 = v19;
  v73 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03EA2C();
  v77 = v22;
  v76 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v75 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03EADC();
  v79 = *((_QWORD *)v24 - 1);
  v80 = v24;
  MEMORY[0x1E0C80A78](v24);
  v78 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v27 = Strong;
    v28 = a3;
    v72 = v12;
    v29 = (void *)sub_1BC08955C();
    v30 = sub_1BC089370();

    v71 = (void *)v30;
    if (v30)
    {
      v88 = v28;
      v31 = sub_1BC08955C();
      if (v31)
      {
        v32 = (void *)v31;
        *(&v70 - 2) = MEMORY[0x1E0C80A78](v31);
        sub_1BBFDF744(0, &qword_1ED69C938);
        swift_retain();
        sub_1BC089B08();

        swift_release();
        v33 = (id)v92[0];
      }
      else
      {
        swift_beginAccess();
        v33 = *(id *)(v27 + 48);
      }
      v87 = v33;
      swift_retain();
      sub_1BC0899DC();
      swift_release();
      v56 = v90;
      sub_1BBFDB550(v91, v90, (uint64_t (*)(_QWORD))sub_1BC03619C);
      v57 = *(unsigned __int8 *)(v13 + 80);
      v58 = (v57 + 24) & ~v57;
      v85 = v58 + v14;
      v86 = v57 | 7;
      v59 = swift_allocObject();
      *(_QWORD *)(v59 + 16) = v27;
      sub_1BC00D664(v56, v59 + v58, (uint64_t (*)(_QWORD))sub_1BC03619C);
      swift_retain();
      sub_1BC089FAC();
      sub_1BC036180(0);
      v84 = v60;
      swift_getOpaqueTypeConformance2();
      sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
      v61 = v75;
      v62 = v74;
      sub_1BC08A1F8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v62);
      sub_1BBFDB550(v91, v56, (uint64_t (*)(_QWORD))sub_1BC03619C);
      v63 = (v85 + 7) & 0xFFFFFFFFFFFFFFF8;
      v64 = swift_allocObject();
      v65 = v71;
      *(_QWORD *)(v64 + 16) = v71;
      sub_1BC00D664(v56, v64 + v58, (uint64_t (*)(_QWORD))sub_1BC03619C);
      *(_QWORD *)(v64 + v63) = v89;
      sub_1BBFDA9C0(&qword_1ED69B438, (uint64_t (*)(uint64_t))sub_1BC03EA2C, MEMORY[0x1E0C95B78]);
      v66 = v65;
      v67 = v78;
      v68 = v77;
      sub_1BC08A1BC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v61, v68);
      sub_1BBFDA9C0(&qword_1ED69B3F8, (uint64_t (*)(uint64_t))sub_1BC03EADC, MEMORY[0x1E0C959F8]);
      v69 = v80;
      v54 = sub_1BC08A180();
      swift_release();

      result = (*(uint64_t (**)(char *, char *))(v79 + 8))(v67, v69);
      a3 = v88;
      goto LABEL_12;
    }
    swift_release();
    a3 = v28;
  }
  sub_1BC089D90();
  sub_1BBFDB550(v91, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03619C);
  v34 = sub_1BC089DD8();
  v35 = sub_1BC08A660();
  v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc();
    v80 = v10;
    LODWORD(v79) = v36;
    v38 = v37;
    v39 = swift_slowAlloc();
    v92[0] = v39;
    *(_DWORD *)v38 = 136315394;
    v40 = sub_1BC08AC9C();
    v93 = sub_1BBFDE0F8(v40, v41, v92);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v89 = v38 + 14;
    v42 = (void *)sub_1BC08955C();
    v43 = a3;
    v44 = sub_1BC089388();
    v46 = v45;

    v47 = v44;
    a3 = v43;
    v93 = sub_1BBFDE0F8(v47, v46, v92);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03619C);
    _os_log_impl(&dword_1BBFD7000, v34, (os_log_type_t)v79, "%s Self is deallocated or we're unable to find a profile identifier for profile %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v39, -1, -1);
    MEMORY[0x1BCCE9C40](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  }
  else
  {
    sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC03619C);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v10, v82);
  }
  v49 = (void (**)(_QWORD, _QWORD))v87;
  v48 = v88;
  v51 = v85;
  v50 = v86;
  v53 = v83;
  v52 = v84;
  sub_1BBFDB550(v91, v90, (uint64_t (*)(_QWORD))sub_1BC03619C);
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A03C();
  ((void (**)(char *, uint64_t *))v49)[1](v52, v48);
  sub_1BC03EBA4();
  v54 = sub_1BC08A180();
  result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v53, v50);
LABEL_12:
  *a3 = v54;
  return result;
}

uint64_t sub_1BC036DD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC0365A0(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC036DE0@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t result;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v54 = a4;
  sub_1BC03619C(0);
  MEMORY[0x1E0C80A78](v9);
  v59 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC038DC8(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00B7A0(0, &qword_1ED69AAC0, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v16 = v15;
  v60 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v58 = (char *)&v48 - v17;
  v18 = sub_1BC089DE4();
  v56 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  sub_1BC089D90();
  v22 = a2;
  v23 = v21;
  v24 = v22;
  v25 = v21;
  v26 = sub_1BC089DD8();
  v27 = sub_1BC08A660();
  v55 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v53 = a5;
    v29 = v28;
    v49 = swift_slowAlloc();
    v63 = v49;
    *(_DWORD *)v29 = 136315650;
    v51 = a3;
    v30 = sub_1BC08AC9C();
    v50 = v16;
    v62 = sub_1BBFDE0F8(v30, v31, &v63);
    v54 = v12;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v32 = v24;
    v33 = objc_msgSend(v32, sel_description);
    v34 = sub_1BC08A3C0();
    v52 = v13;
    v35 = v34;
    v48 = v26;
    v37 = v36;

    v16 = v50;
    v62 = sub_1BBFDE0F8(v35, v37, &v63);
    a3 = v51;
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2082;
    v62 = (uint64_t)v21;
    v38 = v21;
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v39 = sub_1BC08A3E4();
    v62 = sub_1BBFDE0F8(v39, v40, &v63);
    v13 = v52;
    sub_1BC08A7EC();
    v12 = v54;
    swift_bridgeObjectRelease();

    v41 = v48;
    _os_log_impl(&dword_1BBFD7000, v48, (os_log_type_t)v55, "%s Unable to find transaction builder for %s: %{public}s", (uint8_t *)v29, 0x20u);
    v42 = v49;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v42, -1, -1);
    v43 = v29;
    a5 = v53;
    MEMORY[0x1BCCE9C40](v43, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v57);
  sub_1BBFDB550(a3, v59, (uint64_t (*)(_QWORD))sub_1BC03619C);
  v44 = v61;
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  v45 = v58;
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
  sub_1BC03EBA4();
  v46 = sub_1BC08A180();
  result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v45, v16);
  *a5 = v46;
  return result;
}

void sub_1BC037260()
{
  sub_1BC037550("[%{public}s] Sharable model generation STARTED: %{public}s", (void (*)(_QWORD))MEMORY[0x1E0DF22A0]);
}

void sub_1BC037274(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, void (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a4;
  v8 = sub_1BC089064();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC089DE4();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v15 = sub_1BC089DD8();
  v16 = sub_1BC08A678();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v28 = a5;
    v18 = v17;
    v27 = swift_slowAlloc();
    v34 = v27;
    *(_DWORD *)v18 = 136446466;
    v19 = sub_1BC08AC9C();
    v33 = sub_1BBFDE0F8(v19, v20, &v34);
    v29 = a2;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v21 = sub_1BC08AB64();
    v33 = sub_1BBFDE0F8(v21, v22, &v34);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_1BBFD7000, v15, v16, v30, (uint8_t *)v18, 0x16u);
    v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v23, -1, -1);
    v24 = v18;
    a5 = v28;
    MEMORY[0x1BCCE9C40](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  v25 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  a5(v25);
  v26 = (id)_HKLogPersistedSignposts();
  sub_1BC089D48();

}

void sub_1BC03753C()
{
  sub_1BC037550("[%{public}s] Sharable model generation IDLE for 6 seconds: %{public}s", (void (*)(_QWORD))MEMORY[0x1E0DF2298]);
}

void sub_1BC037550(const char *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(sub_1BC089064() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_1BC089D6C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_1BC037274(v2 + v6, v2 + v9, *(_QWORD *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)), a1, a2);
}

uint64_t sub_1BC0375E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v48 = a1;
  v59 = a2;
  v54 = *v2;
  sub_1BC038BA8();
  v55 = v4;
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC038C3C();
  v56 = v6;
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC038D04();
  v44 = v8;
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03619C(0);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v14;
  sub_1BC038DC8(0);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v43 - v21;
  sub_1BBFDB550(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BC03619C);
  sub_1BC08A060();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  v23 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v24 + v23, v20, v16);
  *(_QWORD *)(v24 + ((v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v59;
  swift_retain();
  sub_1BC089FAC();
  sub_1BC036180(0);
  v26 = v25;
  sub_1BC038DE4();
  v27 = sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
  sub_1BC08A258();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A828, (uint64_t (*)(uint64_t))sub_1BC038D04, MEMORY[0x1E0C95B78]);
  v28 = v44;
  v29 = sub_1BC08A180();
  v45 = v29;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v28);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  v30 = v49[23];
  v31 = v49[24];
  __swift_project_boxed_opaque_existential_1(v49 + 20, v30);
  v60 = v29;
  v60 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 32))(&v60, v26, v27, v30, v31);
  swift_allocObject();
  swift_weakInit();
  v32 = v52;
  sub_1BC08A1A4();
  swift_release();
  swift_release();
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = (uint64_t)v47;
  sub_1BBFDB550(v48, (uint64_t)v47, (uint64_t (*)(_QWORD))sub_1BC03619C);
  v35 = (*(unsigned __int8 *)(v50 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v36 = (v51 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v33;
  sub_1BC00D664(v34, v37 + v35, (uint64_t (*)(_QWORD))sub_1BC03619C);
  *(_QWORD *)(v37 + v36) = v59;
  *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v54;
  sub_1BBFDA9C0(&qword_1ED69A728, (uint64_t (*)(uint64_t))sub_1BC038BA8, MEMORY[0x1E0C95950]);
  swift_retain();
  v38 = v53;
  v39 = v55;
  sub_1BC08A1BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v39);
  sub_1BBFDA9C0(&qword_1ED69A7C8, (uint64_t (*)(uint64_t))sub_1BC038C3C, MEMORY[0x1E0C959F8]);
  v40 = v56;
  v41 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v40);
  return v41;
}

uint64_t sub_1BC037AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if ((sub_1BC089970() & 1) != 0)
    {
      swift_beginAccess();
      swift_retain();
      sub_1BC089FD0();
      swift_release();
    }
    swift_release();
  }
  return sub_1BBFDB550(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03619C);
}

uint64_t sub_1BC037B94@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t Strong;
  _QWORD *v35;
  uint64_t (*v36)(uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  id v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74[4];

  v59 = a4;
  v60 = a2;
  v66 = a3;
  sub_1BC03B168(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v67 = v12;
  v65 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v56 - v13;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  MEMORY[0x1E0C80A78](v14);
  v61 = (char *)&v56 - v15;
  sub_1BC00B7A0(0, &qword_1EF3EE1F8, (uint64_t (*)(uint64_t))sub_1BC03619C, MEMORY[0x1E0C96058]);
  v57 = *(_QWORD *)(v16 - 8);
  v58 = v16;
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v56 - v17;
  v71 = sub_1BC089DE4();
  v18 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  sub_1BC089D90();
  v22 = v21;
  v23 = v21;
  v24 = sub_1BC089DD8();
  v25 = sub_1BC08A660();
  v26 = os_log_type_enabled(v24, v25);
  v72 = a5;
  v69 = v9;
  v70 = v8;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v74[0] = v28;
    *(_DWORD *)v27 = 136446466;
    v29 = sub_1BC08AC9C();
    v73 = sub_1BBFDE0F8(v29, v30, v74);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v73 = (uint64_t)v21;
    v31 = v21;
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v32 = sub_1BC08A3F0();
    v73 = sub_1BBFDE0F8(v32, v33, v74);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v24, v25, "[%{public}s]: Transaction Publisher Error: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v28, -1, -1);
    MEMORY[0x1BCCE9C40](v27, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v71);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v35 = (_QWORD *)Strong;
    sub_1BC03619C(0);
    sub_1BC0382D8(v21);
    v73 = v66;
    sub_1BC089A60();
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
    swift_retain();
    v37 = v62;
    sub_1BC08A060();
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v38 = v61;
    v39 = v67;
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v39);
    sub_1BC00A4F4();
    v40 = v64;
    v41 = sub_1BC08A120();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
    v42 = v35[23];
    v43 = v35[24];
    __swift_project_boxed_opaque_existential_1(v35 + 20, v42);
    v73 = v41;
    v44 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 32);
    sub_1BC00B7A0(0, &qword_1ED69AD48, v36, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v46 = v45;
    v47 = sub_1BC00B820();
    v73 = v44(&v73, v46, v47, v42, v43);
    *(_QWORD *)(swift_allocObject() + 16) = v21;
    v48 = v21;
    sub_1BC089FAC();
    sub_1BC036180(0);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v49 = v68;
    sub_1BC08A1F8();
    swift_release();
    swift_release();
    sub_1BBFDA9C0(&qword_1EF3EE208, (uint64_t (*)(uint64_t))sub_1BC03B168, MEMORY[0x1E0C95B78]);
    v50 = v70;
    v51 = sub_1BC08A180();
    swift_release();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v49, v50);
  }
  else
  {
    v73 = (uint64_t)v21;
    v53 = v21;
    sub_1BC03619C(0);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v54 = v56;
    sub_1BC08A030();
    sub_1BC03B18C();
    v55 = v58;
    v51 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v54, v55);
  }
  *v72 = v51;
  return result;
}

uint64_t sub_1BC0381DC@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  sub_1BC00B7A0(0, &qword_1EF3EE1F8, (uint64_t (*)(uint64_t))sub_1BC03619C, MEMORY[0x1E0C96058]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v12[1] = a1;
  v9 = a1;
  sub_1BC03619C(0);
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A030();
  sub_1BC03B18C();
  v10 = sub_1BC08A180();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v10;
  return result;
}

void sub_1BC0382D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;

  v35 = sub_1BC089DE4();
  v2 = *(_QWORD *)(v35 - 8);
  v3 = MEMORY[0x1E0C80A78](v35);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v35 - v6;
  v36 = (id)sub_1BC088EFC();
  v8 = objc_msgSend(v36, sel_domain);
  v9 = sub_1BC08A3C0();
  v11 = v10;

  if (v9 == sub_1BC08A3C0() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_1BC08AB94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_10:

      return;
    }
  }
  v15 = objc_msgSend(v36, sel_code, v35);
  if (v15 != (id)126)
  {
    if (v15 == (id)6)
    {
      sub_1BC089D90();
      v29 = sub_1BC089DD8();
      v30 = sub_1BC08A678();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        v38 = v32;
        *(_DWORD *)v31 = 136315138;
        v33 = sub_1BC038750();
        v37 = sub_1BBFDE0F8(v33, v34, &v38);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v29, v30, "[%s] Can not access database: exiting process", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v32, -1, -1);
        MEMORY[0x1BCCE9C40](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v35);
      exit(0);
    }
    goto LABEL_10;
  }
  v16 = (void *)sub_1BC089544();
  v17 = objc_msgSend(v16, sel_profileIdentifier);
  sub_1BC0899D0();

  sub_1BC089D90();
  v18 = a1;
  v19 = a1;
  v20 = sub_1BC089DD8();
  v21 = sub_1BC08A66C();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v38 = v23;
    *(_DWORD *)v22 = 136446466;
    v24 = sub_1BC08AC9C();
    v37 = sub_1BBFDE0F8(v24, v25, &v38);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v37 = (uint64_t)a1;
    v26 = a1;
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    v27 = sub_1BC08A3F0();
    v37 = sub_1BBFDE0F8(v27, v28, &v38);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v20, v21, "[%{public}s]: Cleared existing transaction identifier due to error: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v23, -1, -1);
    MEMORY[0x1BCCE9C40](v22, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v35);
}

uint64_t sub_1BC038750()
{
  swift_getMetatypeMetadata();
  return sub_1BC08A3E4();
}

_QWORD *SharableModelGeneratorPipelineManager.__allocating_init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v16;

  v16 = a4 & 1;
  swift_allocObject();
  return SharableModelGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(a1, a2, a3, v16, a5, a6, a7, a8, a9);
}

_QWORD *SharableModelGeneratorPipelineManager.init(store:healthStore:delegates:environment:pinnedContentManager:notificationManager:transactionBuilderManager:scheduler:queueProvider:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v16;
  _QWORD *v17;
  _BYTE v20[40];
  _BYTE v21[40];
  _BYTE v22[40];
  _BYTE v23[48];

  v16 = a4 & 1;
  sub_1BC0362D8(0, &qword_1ED69AA08, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F28]);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v9 + 248) = sub_1BC089FDC();
  swift_release();
  sub_1BBFE1C58(a1, (uint64_t)v23);
  sub_1BBFE1C58(a5, (uint64_t)v22);
  sub_1BBFE1C58(a8, (uint64_t)v21);
  sub_1BBFE1C58(a9, (uint64_t)v20);
  v17 = sub_1BC0289E8((uint64_t)v23, a2, a3, v16, (uint64_t)v22, a6, a7, (uint64_t)v21, (uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1(a9);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v17;
}

uint64_t sub_1BC038954()
{
  return swift_release();
}

uint64_t SharableModelGeneratorPipelineManager.deinit()
{
  uint64_t v0;

  v0 = sub_1BC033498();
  swift_release();
  return v0;
}

uint64_t SharableModelGeneratorPipelineManager.__deallocating_deinit()
{
  sub_1BC033498();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC0389BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 248);
  return swift_retain();
}

uint64_t type metadata accessor for SharableModelGeneratorPipelineManager()
{
  uint64_t result;

  result = qword_1ED69D540;
  if (!qword_1ED69D540)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC038A44()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for SharableModelGeneratorPipelineManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of SharableModelGeneratorPipelineManager.interactiveSharableModelOutput.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t sub_1BC038AB8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v10;
  void **v11;
  void **v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  BOOL v19;

  v2 = a1[2];
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_7;
  if (!v2 || a1 == (_QWORD *)a2)
    goto LABEL_6;
  v5 = (void *)a1[4];
  v6 = *(id *)(a2 + 32);
  v7 = v5;
  LOBYTE(v5) = sub_1BC0893AC();

  if ((v5 & 1) == 0)
  {
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v8 = 1;
    return v8 & 1;
  }
  v10 = v2 - 2;
  v11 = (void **)(a1 + 5);
  v12 = (void **)(a2 + 40);
  do
  {
    v14 = *v11++;
    v13 = v14;
    v15 = *v12++;
    v16 = v15;
    v17 = v13;
    v8 = sub_1BC0893AC();

    v19 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v19);
  return v8 & 1;
}

void sub_1BC038BA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A730)
  {
    sub_1BC036180(255);
    sub_1BC03619C(255);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A730);
  }
}

void sub_1BC038C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A7D0)
  {
    sub_1BC038BA8();
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69A728, (uint64_t (*)(uint64_t))sub_1BC038BA8, MEMORY[0x1E0C95950]);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A7D0);
  }
}

void sub_1BC038D04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A830)
  {
    sub_1BC036180(255);
    sub_1BC03CB2C(255, &qword_1ED69A6A8, (uint64_t (*)(uint64_t))sub_1BC038DC8, sub_1BC038DE4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95840]);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    sub_1BC038E00();
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A830);
  }
}

void sub_1BC038DC8(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69AA20, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
}

uint64_t sub_1BC038DE4()
{
  return sub_1BBFDA9C0(&qword_1ED69AA18, (uint64_t (*)(uint64_t))sub_1BC038DC8, MEMORY[0x1E0C960B0]);
}

unint64_t sub_1BC038E00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A6A0;
  if (!qword_1ED69A6A0)
  {
    sub_1BC03CB2C(255, &qword_1ED69A6A8, (uint64_t (*)(uint64_t))sub_1BC038DC8, sub_1BC038DE4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95840]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A6A0);
  }
  return result;
}

uint64_t sub_1BC038E68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v11;
  unint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v11 = v6;
  swift_bridgeObjectRetain();
  v14 = sub_1BC025ADC(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v11;
    v25 = *v11;
    *v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      v17 = v25;
    }
    v18 = *(_QWORD *)(v17 + 48);
    v19 = sub_1BC089064();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    v20 = *(_QWORD *)(v17 + 56);
    v21 = a2(0);
    v22 = *(_QWORD *)(v21 - 8);
    a3(v20 + *(_QWORD *)(v22 + 72) * v14, a6);
    a4(v14, v17);
    *v11 = v17;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a6, 0, 1, v21);
  }
  else
  {
    v24 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a6, 1, 1, v24);
  }
}

uint64_t sub_1BC038FB4(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1BC08A8A0();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1BC06D7F4(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC039054(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1BC039054(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1BC025AAC((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1BC07CC90();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1BC07BF80(v12, a3 & 1);
  v17 = sub_1BC025AAC((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BBFDF744(0, &qword_1ED69DBB0);
  sub_1BC08ABB8();
  __break(1u);
}

uint64_t sub_1BC0391B4(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t, unint64_t))
{
  _QWORD *v7;
  _QWORD **v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  void (*v30)(void);
  void (*v31)(void);
  uint64_t (*v32)(uint64_t, unint64_t);
  uint64_t v33;

  v31 = a5;
  v32 = a7;
  v30 = a4;
  v9 = (_QWORD **)v7;
  v33 = a1;
  v12 = sub_1BC089064();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)*v7;
  v18 = sub_1BC025ADC(a2);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = v16[3];
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v9;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7];
      v26 = a6(0);
      return sub_1BC03D4D0(v33, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a6);
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    v30();
    goto LABEL_7;
  }
  v31();
  v28 = sub_1BC025ADC(a2);
  if ((v22 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_1BC08ABB8();
    __break(1u);
    return result;
  }
  v18 = v28;
  v24 = *v9;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  return sub_1BC03933C(v18, (uint64_t)v15, v33, v24, a6, v32);
}

uint64_t sub_1BC03933C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t, unint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a4[6];
  v13 = sub_1BC089064();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v14 = a4[7];
  v15 = a5(0);
  result = a6(a3, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1);
  v17 = a4[2];
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    a4[2] = v19;
  return result;
}

uint64_t sub_1BC0393FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1BC03E9BC(0);
  v48 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v46 = (uint64_t)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v58 = (uint64_t)v45 - v13;
  v14 = sub_1BC089064();
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69CE48, (uint64_t (*)(uint64_t))sub_1BC03FE9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v45 - v18;
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v51 = a1;
  v52 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v53 = v21;
  v54 = 0;
  v55 = v24 & v22;
  v56 = a2;
  v57 = a3;
  v45[2] = a1;
  swift_bridgeObjectRetain();
  v45[1] = a3;
  swift_retain();
  sub_1BC03A8C8((uint64_t)v19);
  sub_1BC03FE9C(0);
  v26 = v25;
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
  if (v47(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BBFE2D28();
    return swift_release();
  }
  v50 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  while (1)
  {
    v30 = (uint64_t)&v19[*(int *)(v26 + 48)];
    v31 = v14;
    v50(v16, v19, v14);
    sub_1BC03F594(v30, v58);
    v32 = *a5;
    v34 = sub_1BC025ADC((uint64_t)v16);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (*(_QWORD *)(v32 + 24) >= v37)
    {
      if ((a4 & 1) != 0)
      {
        if ((v33 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BC07CE44();
        if ((v38 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BC07C260(v37, a4 & 1);
      v39 = sub_1BC025ADC((uint64_t)v16);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_22;
      v34 = v39;
      if ((v38 & 1) != 0)
      {
LABEL_7:
        v28 = v58;
        v29 = v46;
        sub_1BC03E9D8(v58, v46);
        sub_1BBFE1BD4(v28, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
        v14 = v31;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v31);
        sub_1BC03D4D0(v29, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v48 + 72) * v34, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
        goto LABEL_8;
      }
    }
    v41 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    v14 = v31;
    v50((char *)(v41[6] + *(_QWORD *)(v49 + 72) * v34), v16, v31);
    sub_1BC03F594(v58, v41[7] + *(_QWORD *)(v48 + 72) * v34);
    v42 = v41[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_21;
    v41[2] = v44;
LABEL_8:
    sub_1BC03A8C8((uint64_t)v19);
    a4 = 1;
    if (v47(v19, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BC08ABB8();
  __break(1u);
  return result;
}

void sub_1BC0397BC(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;

  LODWORD(v58) = a2;
  sub_1BC03E9BC(0);
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC089064();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03FE9C(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v54[1] = v3;
  v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  v54[0] = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = a1 + v54[0];
  v60 = *(_QWORD *)(v15 + 72);
  v56 = a1;
  swift_bridgeObjectRetain();
  sub_1BBFDB550(v20, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC03FE9C);
  v55 = v10;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v61 = v9;
  v21(v12, v17, v9);
  v59 = v19;
  v62 = v8;
  sub_1BC03F594(v19, (uint64_t)v8);
  v22 = (_QWORD *)*a3;
  v24 = sub_1BC025ADC((uint64_t)v12);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_24;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v58 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC07CE44();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v33 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v34 = v33[6];
    v58 = *(_QWORD *)(v55 + 72);
    v35 = v61;
    v21((char *)(v34 + v58 * v24), v12, v61);
    v36 = v33[7];
    v57 = *(_QWORD *)(v57 + 72);
    sub_1BC03F594((uint64_t)v62, v36 + v57 * v24);
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v33[2] = v39;
    v40 = v18 - 1;
    if (v18 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v41 = v56 + v60 + v54[0];
    while (1)
    {
      sub_1BBFDB550(v41, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC03FE9C);
      v21(v12, v17, v35);
      sub_1BC03F594(v59, (uint64_t)v62);
      v42 = (_QWORD *)*a3;
      v44 = sub_1BC025ADC((uint64_t)v12);
      v45 = v42[2];
      v46 = (v43 & 1) == 0;
      v47 = v45 + v46;
      if (__OFADD__(v45, v46))
        break;
      v48 = v43;
      if (v42[3] < v47)
      {
        sub_1BC07C260(v47, 1);
        v49 = sub_1BC025ADC((uint64_t)v12);
        if ((v48 & 1) != (v50 & 1))
          goto LABEL_26;
        v44 = v49;
      }
      if ((v48 & 1) != 0)
        goto LABEL_10;
      v51 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      v35 = v61;
      v21((char *)(v51[6] + v58 * v44), v12, v61);
      sub_1BC03F594((uint64_t)v62, v51[7] + v57 * v44);
      v52 = v51[2];
      v38 = __OFADD__(v52, 1);
      v53 = v52 + 1;
      if (v38)
        goto LABEL_25;
      v51[2] = v53;
      v41 += v60;
      if (!--v40)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BC07C260(v27, v58 & 1);
  v29 = sub_1BC025ADC((uint64_t)v12);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = (void *)swift_allocError();
    swift_willThrow();
    v65 = v31;
    v32 = v31;
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v62, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v61);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1BC08ABB8();
  __break(1u);
LABEL_27:
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC08A420();
  sub_1BC08AA20();
  sub_1BC08A420();
  sub_1BC08AA74();
  __break(1u);
}

uint64_t sub_1BC039CC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1BC03BC90(0);
  v48 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v46 = (uint64_t)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v58 = (uint64_t)v45 - v13;
  v14 = sub_1BC089064();
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, &qword_1ED69CE38, (uint64_t (*)(uint64_t))sub_1BC03D7F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v45 - v18;
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v51 = a1;
  v52 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v53 = v21;
  v54 = 0;
  v55 = v24 & v22;
  v56 = a2;
  v57 = a3;
  v45[2] = a1;
  swift_bridgeObjectRetain();
  v45[1] = a3;
  swift_retain();
  sub_1BC03ABFC((uint64_t)v19);
  sub_1BC03D7F8(0);
  v26 = v25;
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
  if (v47(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BBFE2D28();
    return swift_release();
  }
  v50 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  while (1)
  {
    v30 = (uint64_t)&v19[*(int *)(v26 + 48)];
    v31 = v14;
    v50(v16, v19, v14);
    sub_1BC03CBFC(v30, v58);
    v32 = *a5;
    v34 = sub_1BC025ADC((uint64_t)v16);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (*(_QWORD *)(v32 + 24) >= v37)
    {
      if ((a4 & 1) != 0)
      {
        if ((v33 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BC07D2E4();
        if ((v38 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BC07C990(v37, a4 & 1);
      v39 = sub_1BC025ADC((uint64_t)v16);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_22;
      v34 = v39;
      if ((v38 & 1) != 0)
      {
LABEL_7:
        v28 = v58;
        v29 = v46;
        sub_1BC03BCAC(v58, v46);
        sub_1BBFE1BD4(v28, (uint64_t (*)(_QWORD))sub_1BC03BC90);
        v14 = v31;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v31);
        sub_1BC03D4D0(v29, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v48 + 72) * v34, (uint64_t (*)(_QWORD))sub_1BC03BC90);
        goto LABEL_8;
      }
    }
    v41 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    v14 = v31;
    v50((char *)(v41[6] + *(_QWORD *)(v49 + 72) * v34), v16, v31);
    sub_1BC03CBFC(v58, v41[7] + *(_QWORD *)(v48 + 72) * v34);
    v42 = v41[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_21;
    v41[2] = v44;
LABEL_8:
    sub_1BC03ABFC((uint64_t)v19);
    a4 = 1;
    if (v47(v19, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BC08ABB8();
  __break(1u);
  return result;
}

void sub_1BC03A088(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;

  LODWORD(v58) = a2;
  sub_1BC03BC90(0);
  v57 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC089064();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03D7F8(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v54[1] = v3;
  v19 = (uint64_t)&v17[*(int *)(v14 + 48)];
  v54[0] = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = a1 + v54[0];
  v60 = *(_QWORD *)(v15 + 72);
  v56 = a1;
  swift_bridgeObjectRetain();
  sub_1BBFDB550(v20, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC03D7F8);
  v55 = v10;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v61 = v9;
  v21(v12, v17, v9);
  v59 = v19;
  v62 = v8;
  sub_1BC03CBFC(v19, (uint64_t)v8);
  v22 = (_QWORD *)*a3;
  v24 = sub_1BC025ADC((uint64_t)v12);
  v25 = v22[2];
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
    goto LABEL_24;
  v28 = v23;
  if (v22[3] >= v27)
  {
    if ((v58 & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC07D2E4();
      if ((v28 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v33 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v34 = v33[6];
    v58 = *(_QWORD *)(v55 + 72);
    v35 = v61;
    v21((char *)(v34 + v58 * v24), v12, v61);
    v36 = v33[7];
    v57 = *(_QWORD *)(v57 + 72);
    sub_1BC03CBFC((uint64_t)v62, v36 + v57 * v24);
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v33[2] = v39;
    v40 = v18 - 1;
    if (v18 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v41 = v56 + v60 + v54[0];
    while (1)
    {
      sub_1BBFDB550(v41, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC03D7F8);
      v21(v12, v17, v35);
      sub_1BC03CBFC(v59, (uint64_t)v62);
      v42 = (_QWORD *)*a3;
      v44 = sub_1BC025ADC((uint64_t)v12);
      v45 = v42[2];
      v46 = (v43 & 1) == 0;
      v47 = v45 + v46;
      if (__OFADD__(v45, v46))
        break;
      v48 = v43;
      if (v42[3] < v47)
      {
        sub_1BC07C990(v47, 1);
        v49 = sub_1BC025ADC((uint64_t)v12);
        if ((v48 & 1) != (v50 & 1))
          goto LABEL_26;
        v44 = v49;
      }
      if ((v48 & 1) != 0)
        goto LABEL_10;
      v51 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      v35 = v61;
      v21((char *)(v51[6] + v58 * v44), v12, v61);
      sub_1BC03CBFC((uint64_t)v62, v51[7] + v57 * v44);
      v52 = v51[2];
      v38 = __OFADD__(v52, 1);
      v53 = v52 + 1;
      if (v38)
        goto LABEL_25;
      v51[2] = v53;
      v41 += v60;
      if (!--v40)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1BC07C990(v27, v58 & 1);
  v29 = sub_1BC025ADC((uint64_t)v12);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v31 = (void *)swift_allocError();
    swift_willThrow();
    v65 = v31;
    v32 = v31;
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4((uint64_t)v62, (uint64_t (*)(_QWORD))sub_1BC03BC90);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v61);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1BC08ABB8();
  __break(1u);
LABEL_27:
  v63 = 0;
  v64 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC08A420();
  sub_1BC08AA20();
  sub_1BC08A420();
  sub_1BC08AA74();
  __break(1u);
}

uint64_t sub_1BC03A594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC03A5CC(a1, (uint64_t (*)(_QWORD))sub_1BC03E9A8, (uint64_t (*)(_QWORD))sub_1BC03FE9C, sub_1BC03E9D8, a2);
}

uint64_t sub_1BC03A5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC03A5CC(a1, (uint64_t (*)(_QWORD))sub_1BC03BC7C, (uint64_t (*)(_QWORD))sub_1BC03D7F8, sub_1BC03BCAC, a2);
}

uint64_t sub_1BC03A5CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = a1 + *(int *)(a2(0) + 48);
  v9 = a5 + *(int *)(a3(0) + 48);
  v10 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a5, a1, v10);
  return a4(v8, v9);
}

uint64_t sub_1BC03A650(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BC03A6D8(void **a1)
{
  return sub_1BC034004(*a1, sub_1BC036180, &qword_1ED69A990);
}

uint64_t sub_1BC03A704@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_1BC03A758(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03FAB4, (uint64_t (*)(_QWORD))sub_1BC03EA04, (void (*)(char *, char *))sub_1BC029DA4, a3);
}

uint64_t sub_1BC03A720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BC03C2A8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC03FAB4, (uint64_t (*)(_QWORD))sub_1BC03EA04, (void (*)(char *, char *))sub_1BC029DA4, a4);
}

uint64_t sub_1BC03A73C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_1BC03A758(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03FC6C, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (void (*)(char *, char *))sub_1BC029F5C, a3);
}

uint64_t sub_1BC03A758@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t (*a4)(_QWORD)@<X4>, void (*a5)(char *, char *)@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, _QWORD);
  uint64_t v22;
  void (*v23)(char *, char *);
  _BYTE v24[32];

  v23 = a5;
  v10 = a3(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v13 = sub_1BC089064();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v17 = a1[1];
  *a6 = v18;
  a6[1] = v17;
  v19 = a4(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2 + *(int *)(v19 + 36), v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = (uint64_t (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
  v23(v12, v16);
  return v20(v24, 0);
}

uint64_t sub_1BC03A8A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BC03C440(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC03FC6C, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (void (*)(uint64_t, char *))sub_1BC03E9D8, (void (*)(char *, char *))sub_1BC029F5C, a4);
}

uint64_t sub_1BC03A8C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  sub_1BC03E9A8(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03FF74(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  v15 = *v1;
  v16 = v1[1];
  v17 = v1[2];
  v18 = v1[3];
  v19 = v1[4];
  v38 = v7;
  v41 = v17;
  if (v19)
  {
    v39 = v11;
    v40 = v16;
    v20 = v5;
    v21 = a1;
    v22 = (v19 - 1) & v19;
    v23 = __clz(__rbit64(v19)) | (v18 << 6);
LABEL_3:
    v24 = *(_QWORD *)(v15 + 48);
    v25 = sub_1BC089064();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v25);
    v26 = *(_QWORD *)(v15 + 56);
    sub_1BC03E9BC(0);
    sub_1BC03E9D8(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v23, (uint64_t)&v14[*(int *)(v4 + 48)]);
    v28 = 0;
    a1 = v21;
    v5 = v20;
    v11 = v39;
    v16 = v40;
    goto LABEL_4;
  }
  v33 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    return result;
  }
  v34 = (unint64_t)(v17 + 64) >> 6;
  if (v33 >= v34)
  {
    v22 = 0;
    v28 = 1;
    goto LABEL_4;
  }
  v35 = *(_QWORD *)(v16 + 8 * v33);
  if (v35)
  {
LABEL_11:
    v39 = v11;
    v40 = v16;
    v20 = v5;
    v21 = a1;
    v22 = (v35 - 1) & v35;
    v23 = __clz(__rbit64(v35)) + (v33 << 6);
    v18 = v33;
    goto LABEL_3;
  }
  v36 = v18 + 2;
  if (v18 + 2 >= v34)
    goto LABEL_27;
  v35 = *(_QWORD *)(v16 + 8 * v36);
  if (v35)
  {
LABEL_15:
    v33 = v36;
    goto LABEL_11;
  }
  if (v18 + 3 >= v34)
    goto LABEL_28;
  v35 = *(_QWORD *)(v16 + 8 * (v18 + 3));
  if (v35)
  {
    v33 = v18 + 3;
    goto LABEL_11;
  }
  v36 = v18 + 4;
  if (v18 + 4 < v34)
  {
    v35 = *(_QWORD *)(v16 + 8 * v36);
    if (v35)
      goto LABEL_15;
    v33 = v18 + 5;
    if (v18 + 5 < v34)
    {
      v35 = *(_QWORD *)(v16 + 8 * v33);
      if (v35)
        goto LABEL_11;
      v33 = v34 - 1;
      v37 = v18 + 6;
      while (v34 != v37)
      {
        v35 = *(_QWORD *)(v16 + 8 * v37++);
        if (v35)
        {
          v33 = v37 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v22 = 0;
      v28 = 1;
      v18 = v33;
      goto LABEL_4;
    }
LABEL_28:
    v22 = 0;
    v28 = 1;
    v18 = v36;
    goto LABEL_4;
  }
  v22 = 0;
  v28 = 1;
  v18 += 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, v28, 1, v4);
  *v1 = v15;
  v1[1] = v16;
  v1[2] = v41;
  v1[3] = v18;
  v1[4] = v22;
  v29 = (void (*)(uint64_t))v1[5];
  sub_1BC00D664((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC03FF74);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_1BC03FE9C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
  }
  else
  {
    v31 = (uint64_t)v38;
    sub_1BC00D664((uint64_t)v11, (uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BC03E9A8);
    v29(v31);
    sub_1BC03E9E4(v31);
    sub_1BC03FE9C(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a1, 0, 1, v32);
  }
}

uint64_t sub_1BC03ABFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  sub_1BC03BC7C(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03D964(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v38 - v13;
  v15 = *v1;
  v16 = v1[1];
  v17 = v1[2];
  v18 = v1[3];
  v19 = v1[4];
  v38 = v7;
  v41 = v17;
  if (v19)
  {
    v39 = v11;
    v40 = v16;
    v20 = v5;
    v21 = a1;
    v22 = (v19 - 1) & v19;
    v23 = __clz(__rbit64(v19)) | (v18 << 6);
LABEL_3:
    v24 = *(_QWORD *)(v15 + 48);
    v25 = sub_1BC089064();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v25);
    v26 = *(_QWORD *)(v15 + 56);
    sub_1BC03BC90(0);
    sub_1BC03BCAC(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v23, (uint64_t)&v14[*(int *)(v4 + 48)]);
    v28 = 0;
    a1 = v21;
    v5 = v20;
    v11 = v39;
    v16 = v40;
    goto LABEL_4;
  }
  v33 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    return result;
  }
  v34 = (unint64_t)(v17 + 64) >> 6;
  if (v33 >= v34)
  {
    v22 = 0;
    v28 = 1;
    goto LABEL_4;
  }
  v35 = *(_QWORD *)(v16 + 8 * v33);
  if (v35)
  {
LABEL_11:
    v39 = v11;
    v40 = v16;
    v20 = v5;
    v21 = a1;
    v22 = (v35 - 1) & v35;
    v23 = __clz(__rbit64(v35)) + (v33 << 6);
    v18 = v33;
    goto LABEL_3;
  }
  v36 = v18 + 2;
  if (v18 + 2 >= v34)
    goto LABEL_27;
  v35 = *(_QWORD *)(v16 + 8 * v36);
  if (v35)
  {
LABEL_15:
    v33 = v36;
    goto LABEL_11;
  }
  if (v18 + 3 >= v34)
    goto LABEL_28;
  v35 = *(_QWORD *)(v16 + 8 * (v18 + 3));
  if (v35)
  {
    v33 = v18 + 3;
    goto LABEL_11;
  }
  v36 = v18 + 4;
  if (v18 + 4 < v34)
  {
    v35 = *(_QWORD *)(v16 + 8 * v36);
    if (v35)
      goto LABEL_15;
    v33 = v18 + 5;
    if (v18 + 5 < v34)
    {
      v35 = *(_QWORD *)(v16 + 8 * v33);
      if (v35)
        goto LABEL_11;
      v33 = v34 - 1;
      v37 = v18 + 6;
      while (v34 != v37)
      {
        v35 = *(_QWORD *)(v16 + 8 * v37++);
        if (v35)
        {
          v33 = v37 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v22 = 0;
      v28 = 1;
      v18 = v33;
      goto LABEL_4;
    }
LABEL_28:
    v22 = 0;
    v28 = 1;
    v18 = v36;
    goto LABEL_4;
  }
  v22 = 0;
  v28 = 1;
  v18 += 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, v28, 1, v4);
  *v1 = v15;
  v1[1] = v16;
  v1[2] = v41;
  v1[3] = v18;
  v1[4] = v22;
  v29 = (void (*)(uint64_t))v1[5];
  sub_1BC00D664((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC03D964);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_1BC03D7F8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 1, 1, v30);
  }
  else
  {
    v31 = (uint64_t)v38;
    sub_1BC00D664((uint64_t)v11, (uint64_t)v38, (uint64_t (*)(_QWORD))sub_1BC03BC7C);
    v29(v31);
    sub_1BC03BCB8(v31);
    sub_1BC03D7F8(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a1, 0, 1, v32);
  }
}

uint64_t sub_1BC03AF30()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC038DC8(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC03AFA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  sub_1BC038DC8(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = sub_1BC034428(a1, v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
  *a2 = result;
  return result;
}

uint64_t sub_1BC03B008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC037AE0(a1, a2);
}

uint64_t sub_1BC03B010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC03619C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  v6 = v0 + v4 + *(int *)(v2 + 32);
  v7 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v2 + 36);
  v9 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC03B0F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1BC03619C(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC037B94(a1, v2 + v7, *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_1BC03B168(uint64_t a1)
{
  sub_1BC03F0F4(a1, &qword_1EF3EE1F0, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (void (*)(void))sub_1BC00B820);
}

unint64_t sub_1BC03B18C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE200;
  if (!qword_1EF3EE200)
  {
    sub_1BC00B7A0(255, &qword_1EF3EE1F8, (uint64_t (*)(uint64_t))sub_1BC03619C, MEMORY[0x1E0C96058]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C96068], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE200);
  }
  return result;
}

uint64_t sub_1BC03B1EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC03B210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC0381DC(*(void **)(v1 + 16), a1);
}

void sub_1BC03B218()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A8E0)
  {
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089F40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A8E0);
  }
}

uint64_t sub_1BC03B290@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1BC034704(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
  if (!v3)
    *a2 = result;
  return result;
}

void sub_1BC03B2D0(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69AA40, (uint64_t (*)(uint64_t))sub_1BC036180, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC03B2EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69ACE0)
  {
    sub_1BC00B7A0(255, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03619C(255);
    sub_1BC03B398();
    v0 = sub_1BC089DFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69ACE0);
  }
}

void sub_1BC03B37C(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69CDF8, MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1BC03B398()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69D650;
  if (!qword_1ED69D650)
  {
    sub_1BC00B7A0(255, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69D650);
  }
  return result;
}

void sub_1BC03B3F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69ACD0)
  {
    sub_1BC00B7A0(255, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03619C(255);
    sub_1BC00B820();
    v0 = sub_1BC089DFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69ACD0);
  }
}

void sub_1BC03B488()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AD08)
  {
    sub_1BC00B7A0(255, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03619C(255);
    sub_1BC00B820();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AD08);
  }
}

void sub_1BC03B518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A770)
  {
    sub_1BC00B7A0(255, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03619C(255);
    sub_1BC03B398();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A770);
  }
}

unint64_t sub_1BC03B5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE210;
  if (!qword_1EF3EE210)
  {
    sub_1BC00B7A0(255, &qword_1ED69AA38, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE210);
  }
  return result;
}

uint64_t sub_1BC03B60C(uint64_t a1)
{
  return sub_1BC03B6D8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BC02379C);
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BC03619C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = v0 + ((v3 + 16) & ~v3);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  v5 = v4 + *(int *)(v2 + 32);
  v6 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + *(int *)(v2 + 36);
  v8 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_1BC03B6D8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_1BC03619C(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return a2(a1, v2 + ((v5 + 16) & ~v5));
}

void sub_1BC03B738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B398)
  {
    sub_1BC00B7A0(255, &qword_1ED69D658, (uint64_t (*)(uint64_t))sub_1BC03B37C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03B398();
    v0 = sub_1BC089EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B398);
  }
}

void sub_1BC03B7B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3EE220)
  {
    sub_1BC03B738();
    sub_1BC089A60();
    sub_1BBFDA9C0(&qword_1ED69B390, (uint64_t (*)(uint64_t))sub_1BC03B738, MEMORY[0x1E0C95AD0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3EE220);
  }
}

uint64_t sub_1BC03B844@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC023784(v1, a1);
}

uint64_t sub_1BC03B850(uint64_t a1)
{
  return sub_1BC03B6D8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BC023790);
}

void sub_1BC03B85C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
    a4();
    sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v6 = sub_1BC089F34();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC03B920(uint64_t a1)
{
  sub_1BC0362D8(a1, &qword_1ED69B2A8, (uint64_t (*)(uint64_t))sub_1BC03B93C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
}

void sub_1BC03B93C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69D120)
  {
    sub_1BBFDB484(255);
    v3 = v2;
    v4 = sub_1BBFDA9C0(&qword_1ED69D068, (uint64_t (*)(uint64_t))sub_1BBFDB484, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
    v6 = type metadata accessor for GeneratorPipelineManager.GenerationState(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED69D120);
  }
}

void sub_1BC03B9B4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC00BC08(255, a3);
    v9 = a5(a1, v8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC03BA24(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC03B9B4(255, a2, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC03BA78()
{
  return sub_1BBFDA9C0(&qword_1ED69B2A0, (uint64_t (*)(uint64_t))sub_1BC03B920, MEMORY[0x1E0C95FB8]);
}

void sub_1BC03BA94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69D1B0)
  {
    sub_1BBFDB484(255);
    v3 = v2;
    v4 = sub_1BBFDA9C0(&qword_1ED69D068, (uint64_t (*)(uint64_t))sub_1BBFDB484, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
    v6 = type metadata accessor for GeneratorPipelineManager(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED69D1B0);
  }
}

void sub_1BC03BB0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C8D0)
  {
    sub_1BBFDF744(255, &qword_1ED69DBB0);
    sub_1BBFDF744(255, &qword_1ED69C938);
    sub_1BC008B60((unint64_t *)&qword_1ED69C950, &qword_1ED69DBB0, 0x1E0CB6A10, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC08A348();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C8D0);
  }
}

uint64_t sub_1BC03BBCC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC03BBDC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC029104(*a1, a1[1], *(_QWORD *)(v1 + 16), (void (*)(uint64_t, _BYTE *))sub_1BC026A84, (void (*)(uint64_t, _BYTE *))sub_1BC026AB8, (void (*)(uint64_t, _BYTE *))sub_1BC0265D0, (void (*)(uint64_t, _BYTE *))sub_1BC0265FC);
}

unint64_t sub_1BC03BC1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B210;
  if (!qword_1ED69B210)
  {
    sub_1BC03B85C(255, &qword_1ED69B218, sub_1BC03B920, (void (*)(void))sub_1BC03BA78);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C28], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B210);
  }
  return result;
}

void sub_1BC03BC7C(uint64_t a1)
{
  sub_1BC03BCD8(a1, &qword_1ED69CE10, sub_1BC03BC90);
}

void sub_1BC03BC90(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D200, (uint64_t (*)(uint64_t))sub_1BBFDAEA0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
}

uint64_t sub_1BC03BCAC(uint64_t a1, uint64_t a2)
{
  return sub_1BBFDB550(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03BC90);
}

uint64_t sub_1BC03BCB8(uint64_t a1)
{
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03BC7C);
}

void sub_1BC03BCC4(uint64_t a1)
{
  sub_1BC03BCD8(a1, &qword_1ED69CE00, sub_1BC03BD4C);
}

void sub_1BC03BCD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC089064();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC03BD4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED69D1E0)
  {
    sub_1BC03B9B4(255, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
    v5 = type metadata accessor for GeneratorPipelineManagerWrapper(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED69D1E0);
  }
}

uint64_t sub_1BC03BDC0(uint64_t a1)
{
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03BCC4);
}

uint64_t sub_1BC03BDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC03BE30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A740)
  {
    sub_1BC008BC4();
    sub_1BC03BEC4(255);
    sub_1BBFDA9C0(&qword_1ED69A998, (uint64_t (*)(uint64_t))sub_1BC008BC4, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A740);
  }
}

void sub_1BC03BEC4(uint64_t a1)
{
  sub_1BC00B7A0(a1, &qword_1ED69A970, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC03BEE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED69D220)
  {
    sub_1BC00BC08(255, (unint64_t *)&qword_1ED69C8F8);
    v5 = type metadata accessor for GeneratorPipelineManagerWrapper(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED69D220);
  }
}

void sub_1BC03BF44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A6C8)
  {
    sub_1BC03BEC4(255);
    sub_1BC03BE30();
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
    sub_1BBFDA9C0(&qword_1ED69A738, (uint64_t (*)(uint64_t))sub_1BC03BE30, MEMORY[0x1E0C95950]);
    v0 = sub_1BC089E68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A6C8);
  }
}

void sub_1BC03C00C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC03B9B4(255, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    v7 = v6;
    v8 = sub_1BC008CC4();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC03C090()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A698)
  {
    sub_1BC03B9B4(255, (unint64_t *)&qword_1ED69C870, &qword_1ED69C8E8, MEMORY[0x1E0D2D700], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    sub_1BC008CC4();
    v0 = sub_1BC089E5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A698);
  }
}

uint64_t sub_1BC03C148(void **a1)
{
  return sub_1BC034004(*a1, sub_1BC03BEC4, &qword_1ED69A978);
}

uint64_t sub_1BC03C170@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v8 = *a1;
  v9 = a3(0);
  sub_1BBFE1C58(a2 + *(int *)(v9 + 28), (uint64_t)(a5 + 1));
  v10 = a2 + *(int *)(v9 + 32);
  v11 = (char *)a5 + *(int *)(a4(0) + 32);
  v12 = sub_1BC089574();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  *a5 = v8;
  swift_bridgeObjectRetain();
  return sub_1BC089058();
}

uint64_t sub_1BC03C21C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC08AB7C();
  if (!result)
    result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t sub_1BC03C270@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_1BC03A758(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03D1E8, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (void (*)(char *, char *))sub_1BC02A114, a3);
}

uint64_t sub_1BC03C28C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BC03C2A8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC03D1E8, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (void (*)(char *, char *))sub_1BC02A114, a4);
}

uint64_t sub_1BC03C2A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, void (*a6)(char *, char *)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_BYTE *, _QWORD);
  uint64_t v23;
  void (*v24)(char *, char *);
  _BYTE v25[32];

  v23 = a2;
  v24 = a6;
  v11 = a4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  v14 = sub_1BC089064();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v18 = a1[1];
  *a7 = v19;
  a7[1] = v18;
  v20 = a5(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3 + *(int *)(v20 + 36), v14);
  sub_1BBFDB550(a3, (uint64_t)v13, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 0, 1, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = (uint64_t (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
  v24(v13, v17);
  return v21(v25, 0);
}

uint64_t sub_1BC03C400@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_1BC03A758(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03D4B4, (uint64_t (*)(_QWORD))sub_1BC03BC90, (void (*)(char *, char *))sub_1BC02A2CC, a3);
}

uint64_t sub_1BC03C41C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BC03C440(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC03D4B4, (uint64_t (*)(_QWORD))sub_1BC03BC90, (void (*)(uint64_t, char *))sub_1BC03BCAC, (void (*)(char *, char *))sub_1BC02A2CC, a4);
}

uint64_t sub_1BC03C440@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, void (*a6)(uint64_t, char *)@<X5>, void (*a7)(char *, char *)@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, _QWORD);
  uint64_t v25;
  void (*v26)(char *, char *);
  _BYTE v27[32];

  v25 = a2;
  v26 = a7;
  v13 = a4(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v16 = sub_1BC089064();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v21 = a1[1];
  *a8 = v20;
  a8[1] = v21;
  v22 = a5(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3 + *(int *)(v22 + 36), v16);
  a6(a3, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 0, 1, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = (uint64_t (*)(_BYTE *, _QWORD))swift_modifyAtWritableKeyPath();
  v26(v15, v19);
  return v23(v27, 0);
}

uint64_t sub_1BC03C598()
{
  return swift_deallocObject();
}

BOOL sub_1BC03C5A8(_QWORD **a1)
{
  uint64_t v1;

  return sub_1BC02C174(*a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_1E749F190);
}

uint64_t sub_1BC03C5DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC03F024(a1, sub_1BC02B860, a2);
}

uint64_t sub_1BC03C5E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC03C00C(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC03C628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A680)
  {
    sub_1BC03BEC4(255);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A680);
  }
}

unint64_t sub_1BC03C6A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE230;
  if (!qword_1EF3EE230)
  {
    sub_1BC00B7A0(255, &qword_1ED69AA30, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE230);
  }
  return result;
}

uint64_t sub_1BC03C700(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC03C738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A0B0)
  {
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v0 = sub_1BC089F88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A0B0);
  }
}

void sub_1BC03C7A4(uint64_t a1)
{
  sub_1BC03C874(a1, &qword_1ED69A820, &qword_1ED69A950, (uint64_t (*)(uint64_t))sub_1BC03BC90, (void (*)(void))sub_1BC03C7C8);
}

unint64_t sub_1BC03C7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A948;
  if (!qword_1ED69A948)
  {
    sub_1BC00B7A0(255, &qword_1ED69A950, (uint64_t (*)(uint64_t))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A948);
  }
  return result;
}

uint64_t sub_1BC03C828@<X0>(uint64_t (**a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC02FD74(a1, *(_QWORD *)(v2 + 16), *(uint64_t (***)(void))(v2 + 24));
  *a2 = result;
  return result;
}

void sub_1BC03C850(uint64_t a1)
{
  sub_1BC03C874(a1, &qword_1ED69A810, &qword_1ED69A930, (uint64_t (*)(uint64_t))sub_1BC03BD4C, (void (*)(void))sub_1BC03C93C);
}

void sub_1BC03C874(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC03BEC4(255);
    sub_1BC00B7A0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A968, (uint64_t (*)(uint64_t))sub_1BC03BEC4, MEMORY[0x1E0C95D90]);
    a5();
    v9 = sub_1BC089EEC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC03C93C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A928;
  if (!qword_1ED69A928)
  {
    sub_1BC00B7A0(255, &qword_1ED69A930, (uint64_t (*)(uint64_t))sub_1BC03BD4C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A928);
  }
  return result;
}

void sub_1BC03C99C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D580)
  {
    sub_1BC03CA14();
    sub_1BBFDA9C0(&qword_1ED69D620, (uint64_t (*)(uint64_t))sub_1BC03CA14, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D580);
  }
}

void sub_1BC03CA14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D628)
  {
    sub_1BC03B9B4(255, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D628);
  }
}

void sub_1BC03CA98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5D0)
  {
    sub_1BC03C99C();
    sub_1BC03BD4C(255);
    sub_1BBFDA9C0(&qword_1ED69D578, (uint64_t (*)(uint64_t))sub_1BC03C99C, MEMORY[0x1E0C957C0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5D0);
  }
}

void sub_1BC03CB2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69DAA0);
    v11[2] = a4();
    v11[3] = MEMORY[0x1E0DEDB38];
    v9 = a5(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC03CBCC()
{
  return sub_1BBFDA9C0(&qword_1ED69D5C8, (uint64_t (*)(uint64_t))sub_1BC03CA98, MEMORY[0x1E0C95950]);
}

uint64_t sub_1BC03CBE8()
{
  return objectdestroy_53Tm((uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
}

uint64_t sub_1BC03CBFC(uint64_t a1, uint64_t a2)
{
  return sub_1BC00D664(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03BC90);
}

uint64_t sub_1BC03CC08(uint64_t a1)
{
  return sub_1BC03F5B4(a1, (uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t))sub_1BC031694);
}

unint64_t sub_1BC03CC1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A878;
  if (!qword_1ED69A878)
  {
    sub_1BC03CB2C(255, &qword_1ED69A880, (uint64_t (*)(uint64_t))sub_1BC03CA98, sub_1BC03CBCC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A878);
  }
  return result;
}

uint64_t sub_1BC03CC84@<X0>(uint64_t (**a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC031B64(a1);
  *a2 = result;
  return result;
}

void sub_1BC03CCAC(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69B0C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC03CCC8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69C790)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC03B9B4(255, (unint64_t *)&qword_1ED69C880, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03BA24(&qword_1ED69C878, (unint64_t *)&qword_1ED69C880, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC089E20();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69C790);
  }
}

void sub_1BC03CD70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5F0)
  {
    sub_1BC03CCC8();
    sub_1BC03BEE0(255);
    sub_1BBFDA9C0(&qword_1ED69C788, (uint64_t (*)(uint64_t))sub_1BC03CCC8, MEMORY[0x1E0C957C0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5F0);
  }
}

uint64_t sub_1BC03CE04()
{
  return sub_1BBFDA9C0(&qword_1ED69D5E8, (uint64_t (*)(uint64_t))sub_1BC03CD70, MEMORY[0x1E0C95950]);
}

void sub_1BC03CE20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B128)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8A0, (uint64_t (*)(uint64_t))sub_1BC03CD70, sub_1BC03CE04, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    sub_1BC03CEA0();
    v0 = sub_1BC089E44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B128);
  }
}

unint64_t sub_1BC03CEA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A898;
  if (!qword_1ED69A898)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8A0, (uint64_t (*)(uint64_t))sub_1BC03CD70, sub_1BC03CE04, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A898);
  }
  return result;
}

uint64_t sub_1BC03CF08()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03BD4C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = v0 + ((v3 + 16) & ~v3);
  swift_release();
  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  v6 = v4 + *(int *)(v5 + 44);
  v7 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + v2[7]);
  v8 = v4 + v2[8];
  v9 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v2[9];
  v11 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject();
}

uint64_t sub_1BC03D02C(uint64_t a1, uint64_t a2)
{
  return sub_1BC00D664(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03BD4C);
}

uint64_t sub_1BC03D038@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC03F9D4(a1, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (uint64_t (*)(_QWORD))sub_1BC03BEE0, a2);
}

uint64_t sub_1BC03D050(uint64_t a1)
{
  return sub_1BC03D3D0(a1, (uint64_t (*)(_QWORD))sub_1BC03BD4C, sub_1BC033754);
}

uint64_t objectdestroy_64Tm()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03BD4C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = (v3 + 32) & ~v3;
  swift_release();
  swift_release();
  v5 = v0 + v4;
  swift_release();
  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  v7 = v0 + v4 + *(int *)(v6 + 44);
  v8 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[7]);
  v9 = v0 + v4 + v2[8];
  v10 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v2[9];
  v12 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_1BC03D19C()
{
  return sub_1BC03D448((uint64_t (*)(_QWORD))sub_1BC03BD4C, sub_1BC033BE4);
}

uint64_t sub_1BC03D1B4(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03C270);
}

uint64_t sub_1BC03D1CC()
{
  uint64_t v0;

  return sub_1BC0333B8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t *__return_ptr, _QWORD *))(v0 + 24));
}

void sub_1BC03D1E8(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D1E8, (uint64_t (*)(uint64_t))sub_1BC03BD4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t objectdestroy_74Tm()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03BD4C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = v0 + v4;
  swift_release();
  sub_1BC03B9B4(0, &qword_1ED69D048, (unint64_t *)&qword_1ED69C8F8, MEMORY[0x1E0D2E1B0], type metadata accessor for AnyGenerator);
  v7 = v0 + v4 + *(int *)(v6 + 44);
  v8 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[7]);
  v9 = v0 + v4 + v2[8];
  v10 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v2[9];
  v12 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_1BC03D334(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03BD4C, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03C28C);
}

uint64_t sub_1BC03D348(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), v3 + ((v5 + 24) & ~v5));
}

uint64_t sub_1BC03D3A8()
{
  return objectdestroy_87Tm((uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
}

uint64_t sub_1BC03D3BC(uint64_t a1)
{
  return sub_1BC03D3D0(a1, (uint64_t (*)(_QWORD))sub_1BC03BC90, sub_1BC03387C);
}

uint64_t sub_1BC03D3D0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v5 + 32) & ~v5));
}

uint64_t sub_1BC03D420()
{
  return objectdestroy_87Tm((uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
}

uint64_t sub_1BC03D434()
{
  return sub_1BC03D448((uint64_t (*)(_QWORD))sub_1BC03BC90, sub_1BC033D0C);
}

uint64_t sub_1BC03D448(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v3 + 32) & ~v3));
}

uint64_t sub_1BC03D48C()
{
  return objectdestroy_97Tm((uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
}

uint64_t sub_1BC03D4A0(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03C400);
}

void sub_1BC03D4B4(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D208, (uint64_t (*)(uint64_t))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC03D4D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC03D514()
{
  return objectdestroy_97Tm((uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(_QWORD))sub_1BBFDAEA0);
}

uint64_t objectdestroy_97Tm(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (int *)a1(0);
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = (v5 + 24) & ~v5;
  swift_release();
  v7 = v2 + v6;
  swift_release();
  v8 = v2 + v6 + *(int *)(a2(0) + 36);
  v9 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 + v4[7]);
  v10 = v7 + v4[8];
  v11 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + v4[9];
  v13 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_1BC03D63C(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03BC90, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03C41C);
}

void sub_1BC03D650(uint64_t a1)
{
  sub_1BC03FCD4(a1, &qword_1ED69B420, &qword_1ED69A950, (uint64_t (*)(uint64_t))sub_1BC03BC90, (void (*)(void))sub_1BC03C7C8);
}

uint64_t sub_1BC03D674@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC02CF24(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC03D6A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC02D72C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BC03D6B0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC03D6D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC089F28();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC03D758(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D698, (uint64_t (*)(uint64_t))sub_1BC03BC90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC03D774()
{
  return sub_1BBFDA9C0(&qword_1ED69D6A0, (uint64_t (*)(uint64_t))sub_1BC03D758, MEMORY[0x1E0DEAF38]);
}

unint64_t sub_1BC03D790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A8B8;
  if (!qword_1ED69A8B8)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8C0, (uint64_t (*)(uint64_t))sub_1BC03D758, sub_1BC03D774, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95C00]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C10], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A8B8);
  }
  return result;
}

void sub_1BC03D7F8(uint64_t a1)
{
  sub_1BC03D80C(a1, &qword_1ED69CE30, sub_1BC03BC90);
}

void sub_1BC03D80C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC089064();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BC03D87C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69D6F0)
  {
    sub_1BC089064();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC03BC90(255);
    sub_1BBFDA9C0(&qword_1ED69DAB8, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC08AAC8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69D6F0);
  }
}

uint64_t sub_1BC03D910()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC03D934@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC02F314(*a1, a1[1], *(_QWORD *)(v2 + 16), (uint64_t)sub_1BC03A5B0, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1BC039CC8, a2);
}

void sub_1BC03D964(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69CE18, (uint64_t (*)(uint64_t))sub_1BC03BC7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC03D980(uint64_t a1, uint64_t a2)
{
  return sub_1BC03FFAC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _BYTE *))sub_1BC02DBBC);
}

void sub_1BC03D99C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B0E8)
  {
    sub_1BC00AEC4();
    sub_1BBFDA9C0(&qword_1ED69B240, (uint64_t (*)(uint64_t))sub_1BC00AEC4, MEMORY[0x1E0C95C98]);
    v0 = sub_1BC089E08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B0E8);
  }
}

uint64_t sub_1BC03DA1C(uint64_t a1)
{
  return sub_1BC040090(a1, (uint64_t)&unk_1E74A1918, (uint64_t)sub_1BC009638, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id))sub_1BC03DB7C);
}

void sub_1BC03DA38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B0D8)
  {
    sub_1BC00B18C();
    sub_1BBFDA9C0(&qword_1ED69B230, (uint64_t (*)(uint64_t))sub_1BC00B18C, MEMORY[0x1E0C95C98]);
    v0 = sub_1BC089E08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B0D8);
  }
}

unint64_t sub_1BC03DAB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B2C8;
  if (!qword_1ED69B2C8)
  {
    sub_1BC0362D8(255, &qword_1ED69B2D0, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B2C8);
  }
  return result;
}

uint64_t sub_1BC03DB10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC03DB38(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1BC03DBC0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1E74A1E90);
}

uint64_t sub_1BC03DB7C(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1BC03DBC0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1E74A1940);
}

uint64_t sub_1BC03DBC0(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void);
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97[2];
  uint64_t v98;

  v74[2] = a8;
  v93 = a7;
  v79 = a5;
  v95 = a3;
  v96 = a4;
  v94 = a2;
  sub_1BC00A028();
  v88 = *(_QWORD *)(v10 - 8);
  v89 = v10;
  MEMORY[0x1E0C80A78](v10);
  v87 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A10C(0);
  v84 = v12;
  v82 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03E5F0();
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A264();
  v76 = v16;
  v75 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00A2FC();
  v78 = v19;
  v77 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518];
  sub_1BBFDB42C(0, &qword_1ED69AD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v74 - v26;
  sub_1BC00B7A0(0, &qword_1ED69AE28, v22, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)v74 - v31;
  sub_1BC00A3C4(0);
  v91 = *(_QWORD *)(v33 - 8);
  v92 = v33;
  MEMORY[0x1E0C80A78](v33);
  v90 = (char *)v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a1;
  if (!a6)
  {
    __swift_project_boxed_opaque_existential_1(v94, v94[3]);
    v58 = sub_1BC089220();
    v60 = v59;
    *(_QWORD *)&v97[0] = v79;
    v61 = MEMORY[0x1E0C95D78];
    sub_1BC00AFBC(0, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00941C(&qword_1ED69A9C8, &qword_1ED69A9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v61, MEMORY[0x1E0C95D90]);
    swift_retain();
    sub_1BC08A1C8();
    v62 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v63 = (_QWORD *)swift_allocObject();
    v63[2] = v62;
    v63[3] = v58;
    v74[1] = v60;
    v64 = v95;
    v63[4] = v60;
    v63[5] = v64;
    v63[6] = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC089FAC();
    sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC009320();
    v66 = v65;
    sub_1BBFDA9C0(&qword_1ED69B170, (uint64_t (*)(uint64_t))sub_1BC00A264, MEMORY[0x1E0C95A38]);
    v67 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
    v68 = v76;
    sub_1BC08A1F8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v18, v68);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69B198, (uint64_t (*)(uint64_t))sub_1BC00A2FC, MEMORY[0x1E0C95B78]);
    v69 = v78;
    v70 = sub_1BC08A180();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v21, v69);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v97[0] = v70;
    v71 = v90;
    sub_1BC08A0A8();
    swift_release();
    *(_QWORD *)&v97[0] = v66;
    *((_QWORD *)&v97[0] + 1) = v67;
    swift_getOpaqueTypeConformance2();
    v72 = v92;
    v73 = sub_1BC08A0CC();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v71, v72);
    *(_QWORD *)&v97[0] = v73;
    sub_1BC0362D8(0, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03E590();
    v43 = sub_1BC08A180();
    swift_release();
    v35 = v94;
    v44 = v93;
    if (!v93)
      return v43;
    goto LABEL_3;
  }
  *(_QWORD *)&v97[0] = a6;
  sub_1BC089A60();
  swift_retain_n();
  sub_1BC08A060();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v35 = v94;
  __swift_project_boxed_opaque_existential_1(v94, v94[3]);
  sub_1BC089220();
  sub_1BC00A4F4();
  v36 = sub_1BC08A0F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  *(_QWORD *)&v97[0] = v36;
  sub_1BC009320();
  v38 = v37;
  v39 = sub_1BBFDA9C0(&qword_1ED69D680, (uint64_t (*)(uint64_t))sub_1BC009320, MEMORY[0x1E0C95D90]);
  v40 = v90;
  sub_1BC08A0A8();
  swift_release();
  *(_QWORD *)&v97[0] = v38;
  *((_QWORD *)&v97[0] + 1) = v39;
  swift_getOpaqueTypeConformance2();
  v41 = v92;
  v42 = sub_1BC08A0CC();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v40, v41);
  *(_QWORD *)&v97[0] = v42;
  sub_1BC0362D8(0, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC03E590();
  v43 = sub_1BC08A180();
  swift_release();
  swift_release();
  v44 = v93;
  if (v93)
  {
LABEL_3:
    v98 = v44;
    sub_1BBFE1C58((uint64_t)v35, (uint64_t)v97);
    v45 = swift_allocObject();
    sub_1BBFE95C8(v97, v45 + 16);
    v46 = v80;
    *(_QWORD *)(v45 + 56) = v80;
    sub_1BC0362D8(0, (unint64_t *)&qword_1ED69D648, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00A1AC();
    swift_retain();
    v47 = v46;
    v48 = v81;
    sub_1BC08A1D4();
    swift_release();
    sub_1BBFDB354(0);
    sub_1BBFDA9C0(&qword_1ED69A7E8, (uint64_t (*)(uint64_t))sub_1BC00A10C, MEMORY[0x1E0C95AD0]);
    v50 = v83;
    v49 = v84;
    sub_1BC08A1A4();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v48, v49);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69A7A8, (uint64_t (*)(uint64_t))sub_1BC03E5F0, MEMORY[0x1E0C95950]);
    v51 = v86;
    v52 = sub_1BC08A0C0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v51);
    *(_QWORD *)&v97[0] = v52;
    sub_1BC0362D8(0, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03E590();
    v53 = sub_1BC08A180();
    swift_release();
    *(_QWORD *)&v97[0] = v53;
    v98 = v43;
    v54 = v87;
    sub_1BC08A15C();
    sub_1BBFDA9C0(&qword_1ED69B140, (uint64_t (*)(uint64_t))sub_1BC00A028, MEMORY[0x1E0D2A5D0]);
    v55 = v89;
    v56 = sub_1BC08A180();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v55);
    return v56;
  }
  return v43;
}

unint64_t sub_1BC03E590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69D670;
  if (!qword_1ED69D670)
  {
    sub_1BC0362D8(255, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69D670);
  }
  return result;
}

void sub_1BC03E5F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A7B0)
  {
    sub_1BC00A10C(255);
    sub_1BBFDB354(255);
    sub_1BBFDA9C0(&qword_1ED69A7E8, (uint64_t (*)(uint64_t))sub_1BC00A10C, MEMORY[0x1E0C95AD0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A7B0);
  }
}

void sub_1BC03E68C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B3E0)
  {
    sub_1BC00B7A0(255, &qword_1ED69AD48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E518], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B528();
    sub_1BC00B820();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B3E0);
  }
}

void sub_1BC03E71C(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69B460, (uint64_t (*)(uint64_t))sub_1BC00B528, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
}

uint64_t sub_1BC03E738()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC03E75C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BC03E7B4()
{
  return sub_1BC0354F4();
}

void sub_1BC03E7D0(uint64_t a1)
{
  sub_1BC0362D8(a1, &qword_1ED69B2B8, (uint64_t (*)(uint64_t))sub_1BC03E7EC, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
}

void sub_1BC03E7EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69D128[0])
  {
    sub_1BBFDB5B0(255);
    v3 = v2;
    v4 = sub_1BBFDA9C0(&qword_1ED69D078, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
    v6 = type metadata accessor for GeneratorPipelineManager.GenerationState(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, qword_1ED69D128);
  }
}

uint64_t sub_1BC03E864()
{
  return sub_1BBFDA9C0(&qword_1ED69B2B0, (uint64_t (*)(uint64_t))sub_1BC03E7D0, MEMORY[0x1E0C95FB8]);
}

void sub_1BC03E880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69D1C0)
  {
    sub_1BBFDB5B0(255);
    v3 = v2;
    v4 = sub_1BBFDA9C0(&qword_1ED69D078, (uint64_t (*)(uint64_t))sub_1BBFDB5B0, (uint64_t)&protocol conformance descriptor for AnyPipelineProvider<A>);
    v6 = type metadata accessor for GeneratorPipelineManager(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED69D1C0);
  }
}

uint64_t sub_1BC03E8F8()
{
  return swift_deallocObject();
}

uint64_t sub_1BC03E908(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC029104(*a1, a1[1], *(_QWORD *)(v1 + 16), (void (*)(uint64_t, _BYTE *))sub_1BC027774, (void (*)(uint64_t, _BYTE *))sub_1BC027B74, (void (*)(uint64_t, _BYTE *))sub_1BC026F1C, (void (*)(uint64_t, _BYTE *))sub_1BC027300);
}

unint64_t sub_1BC03E948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B220;
  if (!qword_1ED69B220)
  {
    sub_1BC03B85C(255, &qword_1ED69B228, sub_1BC03E7D0, (void (*)(void))sub_1BC03E864);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C28], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B220);
  }
  return result;
}

void sub_1BC03E9A8(uint64_t a1)
{
  sub_1BC03BCD8(a1, &qword_1ED69CE20, sub_1BC03E9BC);
}

void sub_1BC03E9BC(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D210, (uint64_t (*)(uint64_t))sub_1BBFDB248, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
}

uint64_t sub_1BC03E9D8(uint64_t a1, uint64_t a2)
{
  return sub_1BBFDB550(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
}

uint64_t sub_1BC03E9E4(uint64_t a1)
{
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03E9A8);
}

void sub_1BC03E9F0(uint64_t a1)
{
  sub_1BC03BCD8(a1, &qword_1ED69CE08, sub_1BC03EA04);
}

void sub_1BC03EA04(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D1F0, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
}

uint64_t sub_1BC03EA20(uint64_t a1)
{
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BC03E9F0);
}

void sub_1BC03EA2C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69B440)
  {
    sub_1BC036180(255);
    sub_1BC00BA7C(255, v0);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    swift_getOpaqueTypeConformance2();
    v1 = sub_1BC089EEC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69B440);
  }
}

void sub_1BC03EADC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B400)
  {
    sub_1BC03EA2C();
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69B438, (uint64_t (*)(uint64_t))sub_1BC03EA2C, MEMORY[0x1E0C95B78]);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B400);
  }
}

unint64_t sub_1BC03EBA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE238;
  if (!qword_1EF3EE238)
  {
    sub_1BC00B7A0(255, &qword_1ED69AAC0, (uint64_t (*)(uint64_t))sub_1BC03619C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE238);
  }
  return result;
}

uint64_t sub_1BC03EC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC03619C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  v6 = v0 + v4 + *(int *)(v2 + 32);
  v7 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v2 + 36);
  v9 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_1BC03ECC8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1BC03619C(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  result = sub_1BC0375E0(v2 + ((v6 + 24) & ~v6), *a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC03ED20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC03619C(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 24) & ~v3;

  v5 = v0 + v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  v6 = v0 + v4 + *(int *)(v2 + 32);
  v7 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v5 + *(int *)(v2 + 36);
  v9 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_1BC03EDF0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1BC03619C(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1BC036DE0(a1, *(void **)(v2 + 16), v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_1BC03EE54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A750)
  {
    sub_1BC008BC4();
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69A998, (uint64_t (*)(uint64_t))sub_1BC008BC4, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A750);
  }
}

void sub_1BC03EEE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A6D8)
  {
    sub_1BC036180(255);
    sub_1BC03EE54();
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    sub_1BBFDA9C0(&qword_1ED69A748, (uint64_t (*)(uint64_t))sub_1BC03EE54, MEMORY[0x1E0C95950]);
    v0 = sub_1BC089E68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A6D8);
  }
}

uint64_t sub_1BC03EFB0()
{
  return swift_deallocObject();
}

BOOL sub_1BC03EFC0(_QWORD **a1)
{
  uint64_t v1;

  return sub_1BC02C174(*a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_1E749F168);
}

uint64_t sub_1BC03EFF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC03F018@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC03F024(a1, sub_1BC02AF4C, a2);
}

uint64_t sub_1BC03F024@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  result = a2(*a1, v3[2], v3[3], v3[4]);
  *a3 = result;
  return result;
}

void sub_1BC03F058()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A0C0)
  {
    sub_1BC036180(255);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A0C0);
  }
}

void sub_1BC03F0D0(uint64_t a1)
{
  sub_1BC03F0F4(a1, &qword_1ED69A850, &qword_1ED69A960, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (void (*)(void))sub_1BC03F1BC);
}

void sub_1BC03F0F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC036180(255);
    sub_1BC00B7A0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BBFDA9C0(&qword_1ED69A980, (uint64_t (*)(uint64_t))sub_1BC036180, MEMORY[0x1E0C95D90]);
    a5();
    v9 = sub_1BC089EEC();
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC03F1BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A958;
  if (!qword_1ED69A958)
  {
    sub_1BC00B7A0(255, &qword_1ED69A960, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A958);
  }
  return result;
}

uint64_t sub_1BC03F21C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC03F240@<X0>(uint64_t (**a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC02F758(a1, *(_QWORD *)(v2 + 16), *(uint64_t (***)(void))(v2 + 24));
  *a2 = result;
  return result;
}

void sub_1BC03F268(uint64_t a1)
{
  sub_1BC03F0F4(a1, &qword_1ED69A840, &qword_1ED69A940, (uint64_t (*)(uint64_t))sub_1BC03EA04, (void (*)(void))sub_1BC03F28C);
}

unint64_t sub_1BC03F28C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A938;
  if (!qword_1ED69A938)
  {
    sub_1BC00B7A0(255, &qword_1ED69A940, (uint64_t (*)(uint64_t))sub_1BC03EA04, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A938);
  }
  return result;
}

void sub_1BC03F2EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D590)
  {
    sub_1BC0362D8(255, &qword_1ED69D638, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03F364();
    v0 = sub_1BC089E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D590);
  }
}

unint64_t sub_1BC03F364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69D630;
  if (!qword_1ED69D630)
  {
    sub_1BC0362D8(255, &qword_1ED69D638, (uint64_t (*)(uint64_t))sub_1BBFDB2E4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69D630);
  }
  return result;
}

void sub_1BC03F3C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5E0)
  {
    sub_1BC03F2EC();
    sub_1BC03EA04(255);
    sub_1BBFDA9C0(&qword_1ED69D588, (uint64_t (*)(uint64_t))sub_1BC03F2EC, MEMORY[0x1E0C957C0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5E0);
  }
}

uint64_t sub_1BC03F458()
{
  return sub_1BBFDA9C0(&qword_1ED69D5D8, (uint64_t (*)(uint64_t))sub_1BC03F3C4, MEMORY[0x1E0C95950]);
}

uint64_t sub_1BC03F474()
{
  return objectdestroy_53Tm((uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(_QWORD))sub_1BBFDB248);
}

uint64_t objectdestroy_53Tm(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)a1(0);
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = v2 + ((v5 + 16) & ~v5);
  swift_release();
  v7 = v6 + *(int *)(a2(0) + 36);
  v8 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 + v4[7]);
  v9 = v6 + v4[8];
  v10 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v6 + v4[9];
  v12 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_1BC03F594(uint64_t a1, uint64_t a2)
{
  return sub_1BC00D664(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03E9BC);
}

uint64_t sub_1BC03F5A0(uint64_t a1)
{
  return sub_1BC03F5B4(a1, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t))sub_1BC0315E8);
}

uint64_t sub_1BC03F5B4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

unint64_t sub_1BC03F610()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A888;
  if (!qword_1ED69A888)
  {
    sub_1BC03CB2C(255, &qword_1ED69A890, (uint64_t (*)(uint64_t))sub_1BC03F3C4, sub_1BC03F458, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A888);
  }
  return result;
}

uint64_t sub_1BC03F678@<X0>(uint64_t (**a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC031738(a1);
  *a2 = result;
  return result;
}

void sub_1BC03F6A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5A0)
  {
    sub_1BC0362D8(255, &qword_1ED69D678, (uint64_t (*)(uint64_t))sub_1BBFDB354, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC03E590();
    v0 = sub_1BC089E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5A0);
  }
}

void sub_1BC03F718()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69D5F8)
  {
    sub_1BC03F6A0();
    sub_1BC03619C(255);
    sub_1BBFDA9C0(&qword_1ED69D598, (uint64_t (*)(uint64_t))sub_1BC03F6A0, MEMORY[0x1E0C957C0]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69D5F8);
  }
}

uint64_t sub_1BC03F7AC()
{
  return sub_1BBFDA9C0(&qword_1ED69CDF0, (uint64_t (*)(uint64_t))sub_1BC03F718, MEMORY[0x1E0C95950]);
}

void sub_1BC03F7C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B138)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8B0, (uint64_t (*)(uint64_t))sub_1BC03F718, sub_1BC03F7AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    sub_1BC03F848();
    v0 = sub_1BC089E44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B138);
  }
}

unint64_t sub_1BC03F848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A8A8;
  if (!qword_1ED69A8A8)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8B0, (uint64_t (*)(uint64_t))sub_1BC03F718, sub_1BC03F7AC, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95BB8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95BC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A8A8);
  }
  return result;
}

uint64_t sub_1BC03F8B0()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC03EA04(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = v0 + ((v3 + 16) & ~v3);
  swift_release();
  sub_1BBFDB2E4(0);
  v6 = v4 + *(int *)(v5 + 44);
  v7 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + v2[7]);
  v8 = v4 + v2[8];
  v9 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v4 + v2[9];
  v11 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject();
}

uint64_t sub_1BC03F9B4(uint64_t a1, uint64_t a2)
{
  return sub_1BC00D664(a1, a2, (uint64_t (*)(_QWORD))sub_1BC03EA04);
}

uint64_t sub_1BC03F9C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC03F9D4(a1, (uint64_t (*)(_QWORD))sub_1BC03EA04, (uint64_t (*)(_QWORD))sub_1BC03619C, a2);
}

uint64_t sub_1BC03F9D4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return sub_1BC03C170(a1, v4 + ((v9 + 16) & ~v9), a2, a3, a4);
}

uint64_t sub_1BC03FA40(uint64_t a1)
{
  return sub_1BC03D3D0(a1, (uint64_t (*)(_QWORD))sub_1BC03EA04, sub_1BC03350C);
}

uint64_t sub_1BC03FA58()
{
  return sub_1BC03D448((uint64_t (*)(_QWORD))sub_1BC03EA04, sub_1BC03399C);
}

uint64_t sub_1BC03FA70(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03EA04, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03A704);
}

uint64_t objectdestroy_78Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC03FAB4(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D1F8, (uint64_t (*)(uint64_t))sub_1BC03EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t objectdestroy_189Tm()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC03EA04(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  v5 = v0 + v4;
  swift_release();
  sub_1BBFDB2E4(0);
  v7 = v0 + v4 + *(int *)(v6 + 44);
  v8 = sub_1BC08952C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v4 + v2[7]);
  v9 = v0 + v4 + v2[8];
  v10 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v5 + v2[9];
  v12 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_1BC03FBE0(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03EA04, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03A720);
}

uint64_t sub_1BC03FBF4()
{
  return objectdestroy_87Tm((uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(_QWORD))sub_1BBFDB248);
}

uint64_t sub_1BC03FC08(uint64_t a1)
{
  return sub_1BC03D3D0(a1, (uint64_t (*)(_QWORD))sub_1BC03E9BC, sub_1BC033634);
}

uint64_t sub_1BC03FC1C()
{
  return objectdestroy_87Tm((uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(_QWORD))sub_1BBFDB248);
}

uint64_t sub_1BC03FC30()
{
  return sub_1BC03D448((uint64_t (*)(_QWORD))sub_1BC03E9BC, sub_1BC033AC4);
}

uint64_t sub_1BC03FC44()
{
  return objectdestroy_97Tm((uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(_QWORD))sub_1BBFDB248);
}

uint64_t sub_1BC03FC58(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03A73C);
}

void sub_1BC03FC6C(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D218, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC03FC88()
{
  return objectdestroy_97Tm((uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(_QWORD))sub_1BBFDB248);
}

uint64_t sub_1BC03FC9C(uint64_t a1)
{
  return sub_1BC03D348(a1, (uint64_t (*)(_QWORD))sub_1BC03E9BC, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1BC03A8A4);
}

void sub_1BC03FCB0(uint64_t a1)
{
  sub_1BC03FCD4(a1, &qword_1ED69B430, &qword_1ED69A960, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (void (*)(void))sub_1BC03F1BC);
}

void sub_1BC03FCD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC00B7A0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC00B470();
    a5();
    sub_1BBFDA9C0(&qword_1ED69B408, (uint64_t (*)(uint64_t))sub_1BC00B470, MEMORY[0x1E0C95B78]);
    v7 = sub_1BC089EEC();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC03FD90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC02C9DC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC03FDC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC02D46C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BC03FDCC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_1BC03FDFC(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D6A8, (uint64_t (*)(uint64_t))sub_1BC03E9BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC03FE18()
{
  return sub_1BBFDA9C0(&qword_1ED69D6B0, (uint64_t (*)(uint64_t))sub_1BC03FDFC, MEMORY[0x1E0DEAF38]);
}

unint64_t sub_1BC03FE34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A8C8;
  if (!qword_1ED69A8C8)
  {
    sub_1BC03CB2C(255, &qword_1ED69A8D0, (uint64_t (*)(uint64_t))sub_1BC03FDFC, sub_1BC03FE18, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95C00]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95C10], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A8C8);
  }
  return result;
}

void sub_1BC03FE9C(uint64_t a1)
{
  sub_1BC03D80C(a1, &qword_1ED69CE40, sub_1BC03E9BC);
}

void sub_1BC03FEB0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69D6F8)
  {
    sub_1BC089064();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC03E9BC(255);
    sub_1BBFDA9C0(&qword_1ED69DAB8, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC08AAC8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69D6F8);
  }
}

uint64_t sub_1BC03FF44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC02F314(*a1, a1[1], *(_QWORD *)(v2 + 16), (uint64_t)sub_1BC03A594, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1BC0393FC, a2);
}

void sub_1BC03FF74(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69CE28, (uint64_t (*)(uint64_t))sub_1BC03E9A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC03FF90(uint64_t a1, uint64_t a2)
{
  return sub_1BC03FFAC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _BYTE *))sub_1BC02DB90);
}

uint64_t sub_1BC03FFAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _BYTE *))
{
  _QWORD *v3;
  _BYTE v5[8];

  return a3(a1, v3[2], v3[3], v3[4], v5);
}

uint64_t objectdestroy_114Tm()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_118Tm()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC040074(uint64_t a1)
{
  return sub_1BC040090(a1, (uint64_t)&unk_1E74A1E68, (uint64_t)sub_1BC009638, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id))sub_1BC03DB38);
}

uint64_t sub_1BC040090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, id))
{
  uint64_t v4;

  return sub_1BC032AD0(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), (_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(void **)(v4 + 88), a2, a3, a4);
}

uint64_t objectdestroy_132Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

id sub_1BC040238()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupConfigurationLoader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroupConfigurationLoader()
{
  return objc_opt_self();
}

uint64_t sub_1BC040288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  sub_1BC040BB4(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(uint64_t))(v1 + 80);
  swift_retain();
  v9 = v8(a1);
  swift_release();
  v17[0] = v9;
  sub_1BC040C70(0, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  sub_1BC040D10(&qword_1ED69B260, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  v10 = sub_1BC08A0D8();
  swift_release();
  v17[0] = v10;
  v11 = (void (*)(uint64_t))MEMORY[0x1E0D2DEF8];
  sub_1BC040C70(0, &qword_1ED69D668, &qword_1ED69CDF8, MEMORY[0x1E0D2DEF8]);
  v13 = v12;
  v14 = sub_1BC040D10(&qword_1ED69D660, &qword_1ED69D668, &qword_1ED69CDF8, v11);
  sub_1BC08A0A8();
  swift_release();
  v17[0] = v13;
  v17[1] = v14;
  swift_getOpaqueTypeConformance2();
  v15 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1BC04043C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(char *);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BC040BB4(0);
  v4 = v3;
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC089A54();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
    swift_bridgeObjectRetain();
  sub_1BC089A30();
  v11 = *(uint64_t (**)(char *))(v1 + 80);
  swift_retain();
  v12 = v11(v10);
  swift_release();
  v22 = v12;
  sub_1BC040C70(0, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  sub_1BC040D10(&qword_1ED69B260, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  v13 = sub_1BC08A0D8();
  swift_release();
  v22 = v13;
  v14 = (void (*)(uint64_t))MEMORY[0x1E0D2DEF8];
  sub_1BC040C70(0, &qword_1ED69D668, &qword_1ED69CDF8, MEMORY[0x1E0D2DEF8]);
  v16 = v15;
  v17 = sub_1BC040D10(&qword_1ED69D660, &qword_1ED69D668, &qword_1ED69CDF8, v14);
  sub_1BC08A0A8();
  swift_release();
  v22 = v16;
  v23 = v17;
  swift_getOpaqueTypeConformance2();
  v18 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

uint64_t sub_1BC040670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(char *);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BC040BB4(0);
  v4 = v3;
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC089A54();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  if (sub_1BC08A8A0())
LABEL_3:
    swift_bridgeObjectRetain();
LABEL_5:
  sub_1BC089A30();
  v11 = *(uint64_t (**)(char *))(v1 + 80);
  swift_retain();
  v12 = v11(v10);
  swift_release();
  v22 = v12;
  sub_1BC040C70(0, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  sub_1BC040D10(&qword_1ED69B260, &qword_1ED69B268, &qword_1ED69D6B8, (void (*)(uint64_t))sub_1BC040CD4);
  v13 = sub_1BC08A0D8();
  swift_release();
  v22 = v13;
  v14 = (void (*)(uint64_t))MEMORY[0x1E0D2DEF8];
  sub_1BC040C70(0, &qword_1ED69D668, &qword_1ED69CDF8, MEMORY[0x1E0D2DEF8]);
  v16 = v15;
  v17 = sub_1BC040D10(&qword_1ED69D660, &qword_1ED69D668, &qword_1ED69CDF8, v14);
  sub_1BC08A0A8();
  swift_release();
  v22 = v16;
  v23 = v17;
  swift_getOpaqueTypeConformance2();
  v18 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

uint64_t sub_1BC0408C0()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthStoreSharableModelContext()
{
  return objc_opt_self();
}

void *sub_1BC04092C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1BC040954(uint64_t a1)
{
  return sub_1BC040288(a1);
}

uint64_t sub_1BC040974(uint64_t a1)
{
  return sub_1BC04043C(a1);
}

uint64_t sub_1BC040994(uint64_t a1)
{
  return sub_1BC040670(a1);
}

uint64_t sub_1BC0409B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_1BC040AF8(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 96);
  swift_retain();
  v9 = v8(a1);
  swift_release();
  v16[0] = v9;
  v10 = (void (*)(uint64_t))MEMORY[0x1E0D2E350];
  sub_1BC040C70(0, &qword_1ED69D678, &qword_1ED69D690, (void (*)(uint64_t))MEMORY[0x1E0D2E350]);
  v12 = v11;
  v13 = sub_1BC040D10((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, &qword_1ED69D690, v10);
  sub_1BC08A0B4();
  swift_release();
  v16[0] = v12;
  v16[1] = v13;
  swift_getOpaqueTypeConformance2();
  v14 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

void sub_1BC040AF8(uint64_t a1)
{
  void (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_1ED69ADA8)
  {
    v2 = (void (*)(uint64_t))MEMORY[0x1E0D2E350];
    sub_1BC040C70(255, &qword_1ED69D678, &qword_1ED69D690, (void (*)(uint64_t))MEMORY[0x1E0D2E350]);
    v6[0] = v3;
    v6[1] = sub_1BC040D10((unint64_t *)&qword_1ED69D670, &qword_1ED69D678, &qword_1ED69D690, v2);
    v4 = MEMORY[0x1BCCE9B38](a1, v6, MEMORY[0x1E0D2E848], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED69ADA8);
  }
}

void sub_1BC040BB4(uint64_t a1)
{
  void (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_1ED69AD90)
  {
    v2 = (void (*)(uint64_t))MEMORY[0x1E0D2DEF8];
    sub_1BC040C70(255, &qword_1ED69D668, &qword_1ED69CDF8, MEMORY[0x1E0D2DEF8]);
    v6[0] = v3;
    v6[1] = sub_1BC040D10(&qword_1ED69D660, &qword_1ED69D668, &qword_1ED69CDF8, v2);
    v4 = MEMORY[0x1BCCE9B38](a1, v6, MEMORY[0x1E0D2E830], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED69AD90);
  }
}

void sub_1BC040C70(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC017794(255, a3, a4);
    v5 = sub_1BC089FB8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC040CD4()
{
  unint64_t result;

  result = qword_1ED69D6C0;
  if (!qword_1ED69D6C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69D6C0);
  }
  return result;
}

uint64_t sub_1BC040D10(unint64_t *a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC040C70(255, a2, a3, a4);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t static AppSessionAnalyticsManager.eventName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1BC040D6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BBFE1C58(a1, (uint64_t)v5);
  v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1BBFE95C8(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC040DD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1BBFE1C58(v1 + 16, a1);
}

uint64_t sub_1BC040E18(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1BBFE95C8(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC040E70())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AppSessionAnalyticsManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AppSessionAnalyticsManager.init()();
  return v0;
}

id AppSessionAnalyticsManager.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  unsigned __int8 v7;

  v1 = v0;
  if (qword_1ED69D1D8 != -1)
    swift_once();
  v2 = qword_1ED69C108;
  *(_QWORD *)(v1 + 40) = type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
  *(_QWORD *)(v1 + 48) = &protocol witness table for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider;
  *(_QWORD *)(v1 + 16) = v2;
  sub_1BC08925C();
  swift_allocObject();
  swift_retain();
  v3 = sub_1BC089250();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 72) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v1 + 80) = HKImproveHealthAndActivityAnalyticsAllowed();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_isDiagnosticSubmissionAllowed);

    *(_BYTE *)(v1 + 81) = v7;
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BC040FDC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  ValueMetadata *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  ValueMetadata *v54;
  id v55;
  id v56;
  ValueMetadata *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  ValueMetadata *v77;
  void *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  id v82;
  id v83;
  ValueMetadata *v84;
  id v85;
  id v86;
  ValueMetadata *v87;
  id v88;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  char *v99;
  NSObject *v100;
  _QWORD *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  ValueMetadata *v108;
  id v109;
  id v110;
  ValueMetadata *v111;
  id v112;
  void *v113;
  uint64_t v114;
  id v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  __int128 v121;
  id v122;
  ValueMetadata *v123;
  unint64_t v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  char v137;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BC089DE4();
  v6 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v2 + 80) == 1)
  {
    v105 = v4;
    v114 = v7;
    v115 = (id)v6;
    v10 = v2[7];
    sub_1BC089238();
    sub_1BC0430F4(a1, (uint64_t)&v129);
    v11 = v130;
    v12 = v131;
    v13 = v132;
    v14 = v133;
    v15 = v134;
    v17 = v135;
    v16 = v136;
    if ((v137 & 1) != 0)
    {
      sub_1BC045DCC(v129, v130, v131, v132, v133, v134, v135, v136, 1);
    }
    else
    {
      v101 = v2;
      v104 = v10;
      v18 = v9;
      v19 = v129;
      sub_1BC089DCC();
      v20 = v14;
      v111 = v17;
      v112 = v16;
      v116 = v19;
      v21 = v19;
      v22 = v18;
      v117 = v17;
      v23 = v21;
      v24 = v11;
      v120 = v11;
      v25 = v24;
      v26 = v12;
      v102 = v12;
      v27 = v26;
      v28 = v13;
      v113 = v16;
      v29 = v13;
      v30 = v28;
      v119 = v20;
      v31 = v20;
      v118 = v15;
      v32 = v15;
      v108 = v111;
      v107 = v112;
      v33 = v23;
      v106 = v25;
      v112 = v27;
      v111 = (ValueMetadata *)v30;
      v110 = v31;
      v109 = v32;
      v99 = v22;
      v34 = sub_1BC089DD8();
      v35 = sub_1BC08A678();
      v36 = v35;
      v100 = v34;
      v37 = os_log_type_enabled(v34, v35);
      v103 = v29;
      if (v37)
      {
        v38 = swift_slowAlloc();
        v98 = v33;
        v39 = v38;
        v97 = swift_slowAlloc();
        v128 = v97;
        *(_DWORD *)v39 = 136446466;
        HIDWORD(v96) = v36;
        *(_QWORD *)&v121 = v105;
        swift_getMetatypeMetadata();
        v40 = v106;
        v41 = sub_1BC08A3E4();
        *(_QWORD *)&v121 = sub_1BBFDE0F8(v41, v42, &v128);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        v105 = v39 + 14;
        v43 = v116;
        *(_QWORD *)&v121 = v116;
        *((_QWORD *)&v121 + 1) = v40;
        v44 = v112;
        v45 = v111;
        v122 = v112;
        v123 = v111;
        v46 = v110;
        v47 = v109;
        v124 = (unint64_t)v110;
        v125 = v109;
        v48 = v29;
        v49 = v117;
        v50 = v107;
        v126 = v117;
        v127 = v107;
        v51 = v98;
        v52 = v40;
        v53 = v44;
        v54 = v45;
        v55 = v46;
        v56 = v47;
        v57 = v108;
        v58 = v50;
        v59 = sub_1BC08A3E4();
        *(_QWORD *)&v121 = sub_1BBFDE0F8(v59, v60, &v128);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        v61 = v120;
        v62 = v102;
        v63 = v119;
        v64 = v118;
        v65 = v113;
        sub_1BC045DCC(v43, v120, v102, v48, v119, v118, v49, v113, 0);
        sub_1BC045DCC(v43, v61, v62, v48, v63, v64, v49, v65, 0);
        v66 = v100;
        _os_log_impl(&dword_1BBFD7000, v100, BYTE4(v96), "[%{public}s]: Updating current event with: %s", (uint8_t *)v39, 0x16u);
        v67 = v97;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v67, -1, -1);
        v68 = v39;
        v33 = v98;
        MEMORY[0x1BCCE9C40](v68, -1, -1);

      }
      else
      {
        v69 = v116;
        v70 = v120;
        v62 = v102;
        v71 = v29;
        v72 = v119;
        v73 = v29;
        v74 = v118;
        v75 = v117;
        v76 = v113;
        sub_1BC045DCC(v116, v120, v102, v71, v119, v118, v117, v113, 0);
        sub_1BC045DCC(v69, v70, v62, v73, v72, v74, v75, v76, 0);

      }
      (*(void (**)(char *, id))(v114 + 8))(v99, v115);
      v77 = v108;
      v78 = v107;
      v79 = v101;
      v80 = v101 + 8;
      swift_beginAccess();
      v81 = (_QWORD *)v79[8];
      v82 = v33;
      v115 = v106;
      v83 = v112;
      v84 = v111;
      v85 = v110;
      v86 = v109;
      v87 = v77;
      v88 = v78;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79[8] = v81;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v81 = sub_1BBFDDAE0(0, v81[2] + 1, 1, v81);
        *v80 = v81;
      }
      v91 = v81[2];
      v90 = v81[3];
      if (v91 >= v90 >> 1)
      {
        v81 = sub_1BBFDDAE0((_QWORD *)(v90 > 1), v91 + 1, 1, v81);
        *v80 = v81;
      }
      v123 = &type metadata for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics;
      v124 = sub_1BC046940();
      v92 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v121 = v92;
      v93 = v116;
      v94 = v115;
      v92[2] = v116;
      v92[3] = v94;
      v92[4] = v83;
      v92[5] = v84;
      v92[6] = v85;
      v92[7] = v86;
      v95 = v117;
      v92[8] = v117;
      v92[9] = v88;
      v81[2] = v91 + 1;
      sub_1BBFE95C8(&v121, (uint64_t)&v81[5 * v91 + 4]);
      swift_endAccess();
      sub_1BC045DCC(v93, v120, v62, v103, v119, v118, v95, v113, 0);
      sub_1BC089244();
    }
  }
}

void sub_1BC041714()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  ValueMetadata *v32;
  unint64_t v33;
  uint64_t v34[3];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + 80) == 1)
  {
    v7 = v0[7];
    sub_1BC089238();
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, objc_msgSend((id)objc_opt_self(), sel_hasPairedWatch));
    sub_1BC089DCC();
    v9 = v8;
    v10 = sub_1BC089DD8();
    v11 = sub_1BC08A678();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = swift_slowAlloc();
      v30 = v7;
      v14 = v13;
      v29 = swift_slowAlloc();
      v34[0] = v29;
      *(_DWORD *)v14 = 136446466;
      *(_QWORD *)&v31 = v2;
      swift_getMetatypeMetadata();
      v28 = v12;
      v15 = sub_1BC08A3E4();
      *(_QWORD *)&v31 = sub_1BBFDE0F8(v15, v16, v34);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      *(_QWORD *)&v31 = v9;
      v17 = v9;
      v18 = sub_1BC08A3E4();
      *(_QWORD *)&v31 = sub_1BBFDE0F8(v18, v19, v34);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v10, (os_log_type_t)v28, "[%{public}s]: Updating current event with: %s", (uint8_t *)v14, 0x16u);
      v20 = v29;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v20, -1, -1);
      MEMORY[0x1BCCE9C40](v14, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v21 = v1 + 8;
    swift_beginAccess();
    v22 = (_QWORD *)v1[8];
    v23 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[8] = (uint64_t)v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_1BBFDDAE0(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v26 = v22[2];
    v25 = v22[3];
    if (v26 >= v25 >> 1)
    {
      v22 = sub_1BBFDDAE0((_QWORD *)(v25 > 1), v26 + 1, 1, v22);
      *v21 = v22;
    }
    v32 = &type metadata for AppSessionAnalyticsEvent.DemographicAnalytics;
    v33 = sub_1BC0469E0();
    *(_QWORD *)&v31 = v23;
    v22[2] = v26 + 1;
    sub_1BBFE95C8(&v31, (uint64_t)&v22[5 * v26 + 4]);
    swift_endAccess();
    sub_1BC089244();

  }
}

void sub_1BC041A5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33[3];

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0[7];
  sub_1BC089238();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, HKImproveHealthAndActivityAnalyticsAllowed());
  sub_1BC089DCC();
  v9 = v8;
  v10 = sub_1BC089DD8();
  v11 = sub_1BC08A678();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v29 = v7;
    v13 = v12;
    v14 = swift_slowAlloc();
    v33[0] = v14;
    *(_DWORD *)v13 = 136446466;
    v28 = v3;
    *(_QWORD *)&v30 = v2;
    swift_getMetatypeMetadata();
    v27 = v4;
    v15 = sub_1BC08A3E4();
    *(_QWORD *)&v30 = sub_1BBFDE0F8(v15, v16, v33);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)&v30 = v9;
    v17 = v9;
    v18 = sub_1BC08A3E4();
    *(_QWORD *)&v30 = sub_1BBFDE0F8(v18, v19, v33);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v10, v11, "[%{public}s]: Updating current event with: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v14, -1, -1);
    MEMORY[0x1BCCE9C40](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v20 = v1 + 8;
  swift_beginAccess();
  v21 = (_QWORD *)v1[8];
  v22 = v9;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v1[8] = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1BBFDDAE0(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v25 = v21[2];
  v24 = v21[3];
  if (v25 >= v24 >> 1)
  {
    v21 = sub_1BBFDDAE0((_QWORD *)(v24 > 1), v25 + 1, 1, v21);
    *v20 = v21;
  }
  v31 = &type metadata for AppSessionAnalyticsEvent.ImproveHealthAnalytics;
  v32 = sub_1BC046A24();
  *(_QWORD *)&v30 = v22;
  v21[2] = v25 + 1;
  sub_1BBFE95C8(&v30, (uint64_t)&v21[5 * v25 + 4]);
  swift_endAccess();
  sub_1BC089244();

}

uint64_t sub_1BC041D90(uint64_t a1, uint64_t (**a2)(_QWORD, _QWORD), uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)(_QWORD, _QWORD);
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (**v62)(_QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v5 = v4;
  v74 = a3;
  v75 = a4;
  v62 = a2;
  v73 = *v5;
  sub_1BC046A68();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC046BD8();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  MEMORY[0x1E0C80A78](v12);
  v67 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC046D5C(0);
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  MEMORY[0x1E0C80A78](v14);
  v68 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC08A6F0();
  v65 = *(_QWORD *)(v16 - 8);
  v66 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC046D78();
  v20 = v19;
  v63 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC046F3C(0);
  v24 = v23;
  v64 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC046AE0();
  v28 = MEMORY[0x1E0C80A78](v27);
  if (*((_BYTE *)v5 + 80) != 1)
    return v74(v28);
  v58 = v28;
  v31 = v62;
  v55 = a1;
  v62 = v30;
  v57 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = SummaryTabFeedPopulationManager.collectHighlightsInteractionAnalytics(in:)(v31);
  v76 = v54;
  sub_1BC047EF0(0, &qword_1ED69C850, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78]);
  v60 = v8;
  v61 = v9;
  sub_1BC046E44(0, &qword_1ED69C898);
  v59 = v5;
  sub_1BC046E9C();
  v56 = v11;
  sub_1BC046EFC(&qword_1ED69C890, &qword_1ED69C898);
  sub_1BC08A1BC();
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69BB70);
  sub_1BBFDA9C0(&qword_1ED69C7C8, (uint64_t (*)(uint64_t))sub_1BC046D78, MEMORY[0x1E0C959F8]);
  sub_1BC08A1A4();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v20);
  v32 = MEMORY[0x1E0C95950];
  sub_1BBFDA9C0(&qword_1ED69C7A8, (uint64_t (*)(uint64_t))sub_1BC046F3C, MEMORY[0x1E0C95950]);
  v33 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v26, v24);
  swift_release();
  v76 = v33;
  sub_1BC08A6E4();
  v34 = *(id *)(v55 + 104);
  v35 = sub_1BC0464A4((uint64_t)v18, (uint64_t)v34);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v18, v66);
  v77 = v35;
  v36 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78];
  sub_1BC047EF0(0, &qword_1ED69C860, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78]);
  sub_1BC046E44(0, &qword_1ED69C8A8);
  v37 = MEMORY[0x1E0C95D90];
  sub_1BC046D10(&qword_1ED69C858, &qword_1ED69C860, v36, MEMORY[0x1E0C95D90]);
  sub_1BC046EFC(&qword_1ED69C8A0, &qword_1ED69C8A8);
  v38 = v67;
  sub_1BC08A1BC();
  sub_1BBFDA9C0(&qword_1ED69C7D8, (uint64_t (*)(uint64_t))sub_1BC046BD8, MEMORY[0x1E0C959F8]);
  v39 = v68;
  v40 = v70;
  sub_1BC08A1A4();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v40);
  sub_1BBFDA9C0(&qword_1ED69C7B8, (uint64_t (*)(uint64_t))sub_1BC046D5C, v32);
  v41 = v72;
  v42 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v41);
  swift_release();
  v77 = v42;
  sub_1BC046B64();
  sub_1BBFDA9C0(&qword_1ED69C838, (uint64_t (*)(uint64_t))sub_1BC046B64, v37);
  v43 = v57;
  sub_1BC089ED4();
  sub_1BBFDA9C0(&qword_1ED69C7F8, (uint64_t (*)(uint64_t))sub_1BC046AE0, MEMORY[0x1E0C95A60]);
  v44 = v56;
  v45 = v58;
  sub_1BC08A144();
  v46 = swift_allocObject();
  v47 = v75;
  *(_QWORD *)(v46 + 16) = v74;
  *(_QWORD *)(v46 + 24) = v47;
  v48 = swift_allocObject();
  swift_weakInit();
  v49 = swift_allocObject();
  v50 = v73;
  *(_QWORD *)(v49 + 16) = v48;
  *(_QWORD *)(v49 + 24) = v50;
  sub_1BBFDA9C0(&qword_1EF3EE240, (uint64_t (*)(uint64_t))sub_1BC046A68, MEMORY[0x1E0D2A5C0]);
  swift_retain();
  v51 = v60;
  sub_1BC08A1B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v51);
  sub_1BC089238();
  swift_beginAccess();
  sub_1BC089FC4();
  swift_endAccess();
  sub_1BC089244();
  swift_release();
  return ((uint64_t (**)(char *, uint64_t))v62)[1](v43, v45);
}

uint64_t sub_1BC0424AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36[3];
  _BYTE v37[24];
  uint64_t v38;
  uint64_t v39;

  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  sub_1BBFE1C58(a1, (uint64_t)v37);
  v9 = sub_1BC089DD8();
  v10 = sub_1BC08A678();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v34 = a1;
    v12 = v11;
    v13 = swift_slowAlloc();
    v36[0] = v13;
    *(_DWORD *)v12 = 136446466;
    v35[0] = a3;
    swift_getMetatypeMetadata();
    v14 = sub_1BC08A3E4();
    v35[0] = sub_1BBFDE0F8(v14, v15, v36);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1BBFE1C58((uint64_t)v37, (uint64_t)v35);
    sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69BB70);
    v16 = sub_1BC08A3E4();
    v35[0] = sub_1BBFDE0F8(v16, v17, v36);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    _os_log_impl(&dword_1BBFD7000, v9, v10, "[%{public}s]: Updating current event with: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v13, -1, -1);
    v18 = v12;
    a1 = v34;
    MEMORY[0x1BCCE9C40](v18, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1BC089238();
    swift_release();
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v20 = Strong;
    sub_1BBFE1C58(a1, (uint64_t)v37);
    v21 = (_QWORD *)(v20 + 64);
    swift_beginAccess();
    v22 = *(_QWORD **)(v20 + 64);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v20 + 64) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_1BBFDDAE0(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
      *v21 = sub_1BBFDDAE0((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v26 = v38;
    v27 = v39;
    v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    MEMORY[0x1E0C80A78](v28);
    v30 = (char *)&v33 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    sub_1BC046FF8(v25, (uint64_t)v30, (uint64_t *)(v20 + 64), v26, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1BC089244();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC04289C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC089238();
  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC0446C4(v0);
  swift_bridgeObjectRelease();
  sub_1BC089244();
  return v1;
}

uint64_t sub_1BC042914(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  LODWORD(v2) = a1;
  v3 = *(_QWORD *)v1;
  v4 = sub_1BC089DE4();
  v36 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)(v1 + 56);
  sub_1BC089238();
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BC0446C4(v11);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v1 + 81) == 1)
  {
    v35 = v4;
    sub_1BC089DCC();
    swift_bridgeObjectRetain_n();
    v13 = sub_1BC089DD8();
    v14 = sub_1BC08A678();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v37 = v32;
      *(_DWORD *)v15 = 136446722;
      v38 = v3;
      swift_getMetatypeMetadata();
      v34 = v10;
      v16 = sub_1BC08A3E4();
      v33 = v2;
      v38 = sub_1BBFDE0F8(v16, v17, &v37);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2050;
      v18 = *(_QWORD *)(v12 + 16);
      swift_bridgeObjectRelease();
      v38 = v18;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2080;
      sub_1BBFDF744(0, &qword_1ED69DD30);
      swift_bridgeObjectRetain();
      v2 = sub_1BC08A30C();
      v20 = v19;
      swift_bridgeObjectRelease();
      v21 = v2;
      LOBYTE(v2) = v33;
      v38 = sub_1BBFDE0F8(v21, v20, &v37);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v13, v14, "[%{public}s]: Submitting analytics dictionary with %{public}ld keys: %s", (uint8_t *)v15, 0x20u);
      v22 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v22, -1, -1);
      MEMORY[0x1BCCE9C40](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v35);
    v29 = (void *)sub_1BC08A3B4();
    sub_1BBFDF744(0, &qword_1ED69DD30);
    v30 = (void *)sub_1BC08A2F4();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    if ((v2 & 1) == 0)
      return sub_1BC089244();
LABEL_11:
    sub_1BC042E48();
    return sub_1BC089244();
  }
  swift_bridgeObjectRelease();
  sub_1BC089DCC();
  v23 = sub_1BC089DD8();
  v24 = sub_1BC08A678();
  if (os_log_type_enabled(v23, v24))
  {
    v34 = v10;
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v37 = v26;
    v35 = v4;
    *(_DWORD *)v25 = 136446210;
    v38 = v3;
    swift_getMetatypeMetadata();
    v27 = sub_1BC08A3E4();
    v38 = sub_1BBFDE0F8(v27, v28, &v37);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v23, v24, "[%{public}s]: D&U disabled, not submitting analytics", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v26, -1, -1);
    MEMORY[0x1BCCE9C40](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
  }
  if ((v2 & 1) != 0)
    goto LABEL_11;
  return sub_1BC089244();
}

uint64_t sub_1BC042E08()
{
  sub_1BC089238();
  sub_1BC042E48();
  return sub_1BC089244();
}

uint64_t sub_1BC042E48()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24[3];
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  v10 = sub_1BC089DD8();
  v11 = sub_1BC08A678();
  if (os_log_type_enabled(v10, v11))
  {
    v22 = v6;
    v12 = swift_slowAlloc();
    v23 = v5;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v24[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v25 = v2;
    swift_getMetatypeMetadata();
    v15 = sub_1BC08A3E4();
    v25 = sub_1BBFDE0F8(v15, v16, v24);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v10, v11, "[%{public}s]: Resetting analytics event", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v14, -1, -1);
    v17 = v13;
    v5 = v23;
    MEMORY[0x1BCCE9C40](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  v1[8] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v18 = sub_1BC089028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
  swift_beginAccess();
  v19 = v1[5];
  v20 = v1[6];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v1 + 2), v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v5, v19, v20);
  swift_endAccess();
  swift_beginAccess();
  v1[9] = MEMORY[0x1E0DEE9E8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC0430F4@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t result;
  id v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t *v54;
  uint64_t aBlock[6];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BC089DE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v11 = sub_1BC089DD8();
  v12 = sub_1BC08A678();
  if (os_log_type_enabled(v11, v12))
  {
    v52 = (void *)v7;
    v13 = swift_slowAlloc();
    v51 = v8;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v53 = a1;
    v16 = v15;
    v54 = v3;
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136446210;
    *(_QWORD *)&v56 = v6;
    swift_getMetatypeMetadata();
    v17 = sub_1BC08A3E4();
    *(_QWORD *)&v56 = sub_1BBFDE0F8(v17, v18, aBlock);
    v3 = v54;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v11, v12, "[%{public}s]: Collecting highlights feed presentation analytics", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v16;
    a1 = v53;
    MEMORY[0x1BCCE9C40](v19, -1, -1);
    MEMORY[0x1BCCE9C40](v14, -1, -1);

    (*(void (**)(char *, void *))(v51 + 8))(v10, v52);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v60 = 2;
  v58 = 0u;
  v59 = 0u;
  v56 = 0u;
  v57 = 0u;
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = 2;
  *(_QWORD *)(v20 + 24) = a1;
  *(_QWORD *)(v20 + 32) = v3;
  *(_QWORD *)(v20 + 40) = &v60;
  *(_QWORD *)(v20 + 48) = &v56;
  *(_QWORD *)(v20 + 56) = v6;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1BC047220;
  *(_QWORD *)(v21 + 24) = v20;
  aBlock[4] = (uint64_t)sub_1BC047244;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC00FE14;
  aBlock[3] = (uint64_t)&block_descriptor_6;
  v22 = _Block_copy(aBlock);
  v23 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_performBlockAndWait_, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v25 = (id)v60;
    if (v60 != 2)
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 0;
      v33 = (id)*((_QWORD *)&v56 + 1);
      v34 = (void *)v56;
      v35 = (void *)*((_QWORD *)&v57 + 1);
      v36 = (void *)v57;
      v54 = (uint64_t *)*((_QWORD *)&v58 + 1);
      v37 = (void *)v58;
      v38 = v60;
      v40 = (void *)*((_QWORD *)&v59 + 1);
      v39 = (void *)v59;
LABEL_9:
      *(_QWORD *)a2 = v38;
      *(_QWORD *)(a2 + 8) = v26;
      *(_QWORD *)(a2 + 16) = v27;
      *(_QWORD *)(a2 + 24) = v28;
      *(_QWORD *)(a2 + 32) = v29;
      *(_QWORD *)(a2 + 40) = v30;
      *(_QWORD *)(a2 + 48) = v31;
      *(_QWORD *)(a2 + 56) = v32;
      *(_BYTE *)(a2 + 64) = v25 != (id)2;
      sub_1BC04724C(v25);
      sub_1BC04726C(v34, v33, v36, v35, v37, v54, v39, v40);
      sub_1BC0472E0((id)v60);
      return swift_release();
    }
    v53 = (id)*((_QWORD *)&v56 + 1);
    if (*((_QWORD *)&v56 + 1))
    {
      v41 = (void *)*((_QWORD *)&v59 + 1);
      v52 = (void *)*((_QWORD *)&v59 + 1);
      v39 = (void *)v59;
      v42 = (void *)*((_QWORD *)&v58 + 1);
      v37 = (void *)v58;
      v35 = (void *)*((_QWORD *)&v57 + 1);
      v36 = (void *)v57;
      v34 = (void *)v56;
      v43 = (id)v59;
      v44 = v41;
      v45 = v34;
      v33 = v53;
      v46 = v53;
      v47 = v36;
      v48 = v35;
      v49 = v37;
      v50 = v42;
      v38 = (uint64_t)v34;
      v26 = v33;
      v27 = v36;
      v28 = v35;
      v29 = v37;
      v54 = (uint64_t *)v42;
      v30 = v42;
      v40 = v52;
      v31 = v39;
      v32 = v52;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC0434EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char v50;
  uint64_t v51;
  __int128 v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  char v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  void (*v96)(uint32_t **, _QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  unint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  _QWORD v125[2];
  int v126;
  int v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint32_t *v136;
  id v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  char *v150;
  uint32_t *v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unsigned __int8 v158;
  uint64_t v159;
  unint64_t v160;

  v125[1] = a6;
  v130 = a5;
  v147 = a3;
  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v150 = (char *)v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0474DC(0);
  MEMORY[0x1E0C80A78](v11);
  v146 = (char *)v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0474F8(0);
  MEMORY[0x1E0C80A78](v13);
  v145 = (char *)v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC047514(0);
  MEMORY[0x1E0C80A78](v15);
  v144 = (char *)v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC047530(0);
  MEMORY[0x1E0C80A78](v17);
  v143 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1BC089028();
  v148 = *(_QWORD **)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v131 = (char *)v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v129 = (char *)v125 - v26;
  MEMORY[0x1E0C80A78](v25);
  v142 = (char *)v125 - v27;
  v141 = sub_1BC0890AC();
  v139 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v135 = (char *)v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1BC088EE4();
  v138 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v134 = (char *)v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089AFC();
  v30 = objc_msgSend((id)objc_opt_self(), sel_primaryProfile);
  v31 = (void *)sub_1BC089AF0();

  v137 = v31;
  v32 = sub_1BC089898();
  v149 = v8;
  if (!v32)
  {
    v128 = 0;
    v127 = 1;
    v126 = 1;
    v136 = (uint32_t *)MEMORY[0x1E0DEE9D8];
    goto LABEL_5;
  }
  v33 = (void *)v32;
  if ((Feed.isTooOldForDisplay.getter() & 1) != 0)
  {

    v128 = 0;
    v136 = (uint32_t *)MEMORY[0x1E0DEE9D8];
    v127 = 1;
    v126 = 1;
LABEL_5:
    v34 = v148;
    goto LABEL_18;
  }
  v132 = v9;
  v133 = a4;
  v35 = sub_1BC089A6C();
  if (v35 >> 62)
    v36 = sub_1BC08AA80();
  else
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  v125[0] = a2;
  if (v36)
  {
    v151 = (uint32_t *)MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    if (v36 < 0)
    {
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      return;
    }
    v37 = 0;
    do
    {
      if ((v35 & 0xC000000000000001) != 0)
        v38 = (id)MEMORY[0x1BCCE934C](v37, v35);
      else
        v38 = *(id *)(v35 + 8 * v37 + 32);
      v39 = v38;
      ++v37;
      type metadata accessor for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.ShownFeedItem(0);
      swift_allocObject();
      AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.ShownFeedItem.init(feedItem:)(v39);
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
    }
    while (v36 != v37);
    v136 = v151;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v136 = (uint32_t *)MEMORY[0x1E0DEE9D8];
  }
  v40 = v135;
  sub_1BC089094();
  sub_1BBFDB42C(0, &qword_1ED69D740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v41 = sub_1BC0890A0();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1BC08B950;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v42 + 104))(v44 + v43, *MEMORY[0x1E0CB1178], v41);
  sub_1BC0479EC(v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v45 = objc_msgSend(v33, sel_dateUpdated);
  v46 = v142;
  sub_1BC089010();

  v47 = v129;
  sub_1BC08901C();
  v48 = v134;
  sub_1BC08907C();
  swift_bridgeObjectRelease();
  v34 = v148;
  v49 = (void (*)(char *, uint64_t))v148[1];
  v49(v47, v22);
  v49(v46, v22);
  (*(void (**)(char *, unint64_t))(v139 + 8))(v40, v141);
  v128 = sub_1BC088ECC();
  LOBYTE(v49) = v50;

  v127 = v49 & 1;
  (*(void (**)(char *, uint64_t))(v138 + 8))(v48, v140);
  v126 = 0;
  a4 = v133;
  v9 = v132;
LABEL_18:
  v51 = v147 + 16;
  swift_beginAccess();
  sub_1BBFE1C58(v51, (uint64_t)&v151);
  v52 = v153;
  __swift_project_boxed_opaque_existential_1(&v151, v153);
  (*(void (**)(_QWORD, _QWORD))(*((_QWORD *)&v52 + 1) + 8))(v52, *((_QWORD *)&v52 + 1));
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v34[6])(v21, 1, v22) == 1)
  {
    sub_1BBFE1BD4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BBFDA7CC);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v151);
    v135 = 0;
    LODWORD(v129) = 1;
  }
  else
  {
    v53 = (void (*)(char *, char *, uint64_t))v34[4];
    v132 = v9;
    v133 = a4;
    v54 = v131;
    v53(v131, v21, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v151);
    v55 = v135;
    sub_1BC089094();
    sub_1BBFDB42C(0, &qword_1ED69D740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v56 = sub_1BC0890A0();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1BC08B950;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v57 + 104))(v59 + v58, *MEMORY[0x1E0CB1178], v56);
    sub_1BC0479EC(v59);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v60 = v142;
    sub_1BC08901C();
    v61 = v134;
    sub_1BC08907C();
    swift_bridgeObjectRelease();
    v62 = (void (*)(char *, uint64_t))v34[1];
    v62(v60, v22);
    (*(void (**)(char *, unint64_t))(v139 + 8))(v55, v141);
    v135 = (char *)sub_1BC088ECC();
    LODWORD(v129) = v63 & 1;
    (*(void (**)(char *, uint64_t))(v138 + 8))(v61, v140);
    v62(v54, v22);
  }
  sub_1BC089C4C();
  v64 = MEMORY[0x1BCCE8578]();
  if (qword_1ED69A1F0 != -1)
    goto LABEL_66;
  while (1)
  {
    v65 = _s14HealthPlatform8FeedItemC0aB4CoreE020predicateForEligibleC5Items3for14sourceProfilesSo11NSPredicateCAA0C0C4KindO_SayAA13SourceProfileOGtFZ_0(2, qword_1ED69A1E0);
    objc_msgSend((id)v64, sel_setPredicate_, v65);

    v66 = sub_1BC08A78C();
    v142 = (char *)v66;
    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      v66 = (unint64_t)v142;
      v67 = sub_1BC08AA80();
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v67)
      break;
    v160 = MEMORY[0x1E0DEE9D8];
    sub_1BC08A9CC();
    if (v67 < 0)
    {
      __break(1u);
      goto LABEL_70;
    }
    v141 = v66 & 0xC000000000000001;
    v138 = v66 + 32;
    v140 = v64;
    v64 = 0;
    v139 = v67;
    while (v64 != v67)
    {
      v147 = v64;
      if (v141)
        v69 = (_QWORD *)MEMORY[0x1BCCE934C](v64, v66);
      else
        v69 = *(id *)(v138 + 8 * v64);
      v70 = v69;
      type metadata accessor for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.GeneratedFeedItem(0);
      v71 = swift_allocObject();
      v148 = v70;
      v149 = v71;
      v72 = sub_1BC089BC8();
      v64 = v72;
      v73 = v72 & 0xC000000000000001;
      if ((v72 & 0xC000000000000001) != 0)
        v74 = sub_1BC08A8A0();
      else
        v74 = *(_QWORD *)(v72 + 16);
      v75 = MEMORY[0x1E0DEE9D8];
      if (v74)
      {
        v159 = MEMORY[0x1E0DEE9D8];
        sub_1BBFE4654(0, v74 & ~(v74 >> 63), 0);
        if (v73)
        {
          v76 = sub_1BC08A858();
          v78 = 1;
        }
        else
        {
          v76 = sub_1BC08082C(v64);
          v78 = v80 & 1;
        }
        v156 = v76;
        v157 = v77;
        v158 = v78;
        if (v74 < 0)
          goto LABEL_65;
        v81 = v64 & 0xFFFFFFFFFFFFFF8;
        if (v64 < 0)
          v81 = v64;
        v150 = (char *)v81;
        do
        {
          while (1)
          {
            v88 = v156;
            v87 = v157;
            v89 = v158;
            sub_1BC0805C8(v156, v157, v158, v64);
            v91 = v90;
            v92 = objc_msgSend(v90, sel_code);

            v93 = v159;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BBFE4654(0, *(_QWORD *)(v93 + 16) + 1, 1);
              v93 = v159;
            }
            v95 = *(_QWORD *)(v93 + 16);
            v94 = *(_QWORD *)(v93 + 24);
            if (v95 >= v94 >> 1)
            {
              sub_1BBFE4654(v94 > 1, v95 + 1, 1);
              v93 = v159;
            }
            *(_QWORD *)(v93 + 16) = v95 + 1;
            *(_QWORD *)(v93 + 8 * v95 + 32) = v92;
            if (v73)
              break;
            v82 = sub_1BBFE76F8(v88, v87, v89, v64);
            v84 = v83;
            v86 = v85;
            sub_1BBFE9178(v88, v87, v89);
            v156 = v82;
            v157 = v84;
            v158 = v86 & 1;
            if (!--v74)
              goto LABEL_55;
          }
          if ((v89 & 1) == 0)
            goto LABEL_71;
          if (sub_1BC08A870())
            swift_isUniquelyReferenced_nonNull_native();
          sub_1BBFEC168();
          v96 = (void (*)(uint32_t **, _QWORD))sub_1BC08A570();
          sub_1BC08A8E8();
          v96(&v151, 0);
          --v74;
        }
        while (v74);
LABEL_55:
        sub_1BBFE9178(v156, v157, v158);
        swift_bridgeObjectRelease();
        v79 = v159;
      }
      else
      {
        swift_bridgeObjectRelease();
        v79 = v75;
      }
      *(_QWORD *)(v149 + 16) = v79;
      v97 = sub_1BC089A0C();
      v98 = (uint64_t)v144;
      sub_1BC089B8C();
      v99 = *(_QWORD *)(v97 - 8);
      v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v98, 1, v97);
      v101 = (uint64_t)v146;
      v102 = (uint64_t)v145;
      v103 = (uint64_t)v143;
      v104 = (void *)v140;
      v105 = v147;
      if (v100 == 1)
      {
        sub_1BBFE1BD4(v98, (uint64_t (*)(_QWORD))sub_1BC047514);
        v106 = sub_1BC089880();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v103, 1, 1, v106);
      }
      else
      {
        sub_1BC089A00();
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v97);
        v107 = sub_1BC089880();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v103, 0, 1, v107);
      }
      sub_1BC00D664(v103, v149+ OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent35HighlightsFeedPresentationAnalytics17GeneratedFeedItem_dataVisualizationKind, (uint64_t (*)(_QWORD))sub_1BC047530);
      v108 = sub_1BC089754();
      v109 = v148;
      sub_1BC089B8C();
      v110 = *(_QWORD *)(v108 - 8);
      v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v101, 1, v108);
      v67 = v139;
      if (v111 == 1)
      {

        sub_1BBFE1BD4(v101, (uint64_t (*)(_QWORD))sub_1BC0474DC);
        v68 = sub_1BC0895D4();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v102, 1, 1, v68);
      }
      else
      {
        sub_1BC089748();

        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v101, v108);
        v112 = sub_1BC0895D4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v102, 0, 1, v112);
      }
      v66 = (unint64_t)v142;
      v64 = v105 + 1;
      sub_1BC00D664(v102, v149+ OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent35HighlightsFeedPresentationAnalytics17GeneratedFeedItem_timeScope, (uint64_t (*)(_QWORD))sub_1BC0474F8);
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      if (v64 == v67)
      {
        v113 = v160;
        swift_bridgeObjectRelease();

        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once();
  }
  swift_bridgeObjectRelease();

  v113 = MEMORY[0x1E0DEE9D8];
LABEL_63:
  AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.init(ageOfFeed:feedItemsGeneratedTypes:feedItemsShownTypes:feedType:minutesElapsed:spinnerDisplayed:)(v127, v113, v136, (char)v129, v126, &v151);

  v114 = v154;
  v115 = v155;
  v116 = v130;
  v117 = *(void **)v130;
  v118 = *(void **)(v130 + 8);
  v119 = *(void **)(v130 + 16);
  v120 = *(void **)(v130 + 24);
  v121 = *(void **)(v130 + 32);
  v122 = *(void **)(v130 + 40);
  v123 = *(void **)(v130 + 48);
  v124 = *(void **)(v130 + 56);
  *(_QWORD *)v130 = v151;
  *(_OWORD *)(v116 + 8) = v152;
  *(_OWORD *)(v116 + 24) = v153;
  *(_OWORD *)(v116 + 40) = v114;
  *(_QWORD *)(v116 + 56) = v115;
  sub_1BC04726C(v117, v118, v119, v120, v121, v122, v123, v124);
}

uint64_t sub_1BC0446C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t DynamicType;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v82[2];
  uint64_t v83;
  os_log_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v3 = *v1;
  v4 = sub_1BC089DE4();
  v5 = *(void (**)(char *, uint64_t))(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v88 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v82 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v82 - v11;
  sub_1BC089DCC();
  swift_bridgeObjectRetain_n();
  v13 = sub_1BC089DD8();
  LODWORD(v86) = sub_1BC08A678();
  v14 = os_log_type_enabled(v13, (os_log_type_t)v86);
  v15 = MEMORY[0x1E0DEE9D8];
  v87 = v3;
  v89 = (uint64_t)v10;
  v90 = v4;
  if (v14)
  {
    v84 = v13;
    v85 = v5;
    v16 = v3;
    v17 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    v96 = v83;
    *(_DWORD *)v17 = 136446466;
    v92 = v16;
    swift_getMetatypeMetadata();
    v18 = sub_1BC08A3E4();
    v92 = sub_1BBFDE0F8(v18, v19, &v96);
    v82[1] = &v93;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    v20 = *(_QWORD *)(a1 + 16);
    v21 = MEMORY[0x1E0DEE9D8];
    if (v20)
    {
      v91 = MEMORY[0x1E0DEE9D8];
      sub_1BBFE4638(0, v20, 0);
      v22 = a1 + 32;
      v21 = v91;
      do
      {
        sub_1BBFE1C58(v22, (uint64_t)&v92);
        __swift_project_boxed_opaque_existential_1(&v92, v94);
        DynamicType = swift_getDynamicType();
        v24 = v95;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BBFE4638(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v91;
        }
        v26 = *(_QWORD *)(v21 + 16);
        v25 = *(_QWORD *)(v21 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1BBFE4638(v25 > 1, v26 + 1, 1);
          v21 = v91;
        }
        *(_QWORD *)(v21 + 16) = v26 + 1;
        v27 = v21 + 16 * v26;
        *(_QWORD *)(v27 + 32) = DynamicType;
        *(_QWORD *)(v27 + 40) = v24;
        v22 += 40;
        --v20;
      }
      while (v20);
      v4 = v90;
    }
    v29 = sub_1BBFE6270();
    v30 = MEMORY[0x1BCCE8EA8](v21, v29);
    v32 = v31;
    swift_bridgeObjectRelease();
    v92 = sub_1BBFDE0F8(v30, v32, &v96);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v33 = v84;
    _os_log_impl(&dword_1BBFD7000, v84, (os_log_type_t)v86, "[%{public}s]: Creating submission dictionary from objects: %{public}s", (uint8_t *)v17, 0x16u);
    v34 = v83;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v34, -1, -1);
    MEMORY[0x1BCCE9C40](v17, -1, -1);

    v28 = (void (*)(char *, uint64_t))*((_QWORD *)v85 + 1);
    v28(v12, v4);
    v3 = v87;
    v15 = MEMORY[0x1E0DEE9D8];
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v28 = (void (*)(char *, uint64_t))*((_QWORD *)v5 + 1);
    v28(v12, v4);
  }
  v96 = v15;
  v35 = *(_QWORD *)(a1 + 16);
  if (v35)
  {
    v36 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BBFE1C58(v36, (uint64_t)&v92);
      __swift_project_boxed_opaque_existential_1(&v92, v94);
      v37 = (_QWORD *)sub_1BC089D00();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v92);
      sub_1BC0199EC(v37);
      v36 += 40;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    v15 = v96;
  }
  v38 = *(_QWORD *)(v15 + 16);
  v39 = MEMORY[0x1E0DEE9D8];
  v86 = v15;
  if (v38)
  {
    v92 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE449C(0, v38, 0);
    v39 = v92;
    v40 = (uint64_t *)(v15 + 40);
    do
    {
      v42 = *(v40 - 1);
      v41 = *v40;
      v92 = v39;
      v44 = *(_QWORD *)(v39 + 16);
      v43 = *(_QWORD *)(v39 + 24);
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_1BBFE449C(v43 > 1, v44 + 1, 1);
        v39 = v92;
      }
      v40 += 3;
      *(_QWORD *)(v39 + 16) = v44 + 1;
      v45 = v39 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v42;
      *(_QWORD *)(v45 + 40) = v41;
      --v38;
    }
    while (v38);
  }
  v46 = sub_1BC044FF8(v39);
  v47 = v89;
  sub_1BC089DCC();
  swift_bridgeObjectRetain();
  v48 = sub_1BC089DD8();
  v49 = sub_1BC08A678();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v96 = v51;
    *(_DWORD *)v50 = 136446466;
    v92 = v3;
    swift_getMetatypeMetadata();
    v52 = sub_1BC08A3E4();
    v85 = v28;
    v92 = sub_1BBFDE0F8(v52, v53, &v96);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2082;
    v54 = swift_bridgeObjectRetain();
    v55 = MEMORY[0x1BCCE8EA8](v54, MEMORY[0x1E0DEA968]);
    v57 = v56;
    swift_bridgeObjectRelease();
    v58 = v55;
    v28 = v85;
    v92 = sub_1BBFDE0F8(v58, v57, &v96);
    v3 = v87;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v48, v49, "[%{public}s]: %{public}s are ready for submission", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v51, -1, -1);
    MEMORY[0x1BCCE9C40](v50, -1, -1);

    v59 = v89;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v59 = v47;
  }
  v60 = v90;
  v28((char *)v59, v90);
  v61 = v88;
  v62 = v86;
  if (v46[2])
  {
    sub_1BC089DCC();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v63 = sub_1BC089DD8();
    v64 = sub_1BC08A66C();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v89 = swift_slowAlloc();
      v96 = v89;
      *(_DWORD *)v65 = 136446722;
      v92 = v3;
      swift_getMetatypeMetadata();
      v66 = sub_1BC08A3E4();
      v92 = sub_1BBFDE0F8(v66, v67, &v96);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2082;
      v68 = swift_bridgeObjectRetain();
      v69 = MEMORY[0x1BCCE8EA8](v68, MEMORY[0x1E0DEA968]);
      v85 = v28;
      v71 = v70;
      swift_bridgeObjectRelease();
      v92 = sub_1BBFDE0F8(v69, v71, &v96);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 22) = 2080;
      sub_1BBFDF4CC();
      v73 = v72;
      v74 = swift_bridgeObjectRetain();
      v75 = MEMORY[0x1BCCE8EA8](v74, v73);
      v77 = v76;
      swift_bridgeObjectRelease();
      v92 = sub_1BBFDE0F8(v75, v77, &v96);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v63, v64, "[%{public}s]: Found duplicate keys: %{public}s. Objects: %s", (uint8_t *)v65, 0x20u);
      v78 = v89;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v78, -1, -1);
      MEMORY[0x1BCCE9C40](v65, -1, -1);

      v85(v88, v90);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v28(v61, v60);
    }
  }
  v79 = sub_1BC04CDD8(v62);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v79 + 16))
  {
    sub_1BC047C6C();
    v80 = sub_1BC08AABC();
  }
  else
  {
    v80 = MEMORY[0x1E0DEE9E0];
  }
  v92 = v80;
  swift_bridgeObjectRetain();
  sub_1BC0476A8(v79, 1, (uint64_t)&v92, (uint64_t)v46, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v92;
}

_QWORD *sub_1BC044FF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = MEMORY[0x1E0DEE9E8];
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_30;
  }
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v22 = v1;
  do
  {
    v5 = (uint64_t *)(v2 + 16 * v3);
    v7 = *v5;
    v6 = v5[1];
    v8 = v24;
    if (!*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
      sub_1BBFF2FE4(&v23, v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    sub_1BC08ABF4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC08A408();
    v9 = sub_1BC08AC18();
    v10 = -1 << *(_BYTE *)(v8 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v12 = *(_QWORD *)(v8 + 48);
    v13 = (_QWORD *)(v12 + 16 * v11);
    v14 = *v13 == v7 && v13[1] == v6;
    if (!v14 && (sub_1BC08AB94() & 1) == 0)
    {
      v18 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v18;
        if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          break;
        v19 = (_QWORD *)(v12 + 16 * v11);
        v20 = *v19 == v7 && v19[1] == v6;
        if (v20 || (sub_1BC08AB94() & 1) != 0)
          goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      v1 = v22;
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BBFDD3F8(0, v4[2] + 1, 1, v4);
    v16 = v4[2];
    v15 = v4[3];
    if (v16 >= v15 >> 1)
      v4 = sub_1BBFDD3F8((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
    v4[2] = v16 + 1;
    v17 = &v4[2 * v16];
    v17[4] = v7;
    v17[5] = v6;
    swift_bridgeObjectRelease();
    v1 = v22;
LABEL_5:
    ++v3;
  }
  while (v3 != v1);
  swift_bridgeObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1BC045264@<X0>(void **a1@<X0>, void **a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v9 = sub_1BC089DE4();
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *a2;
  sub_1BC089DCC();
  v14 = v12;
  v15 = v13;
  swift_bridgeObjectRetain_n();
  v16 = v14;
  v17 = v15;
  v18 = sub_1BC089DD8();
  v19 = sub_1BC08A66C();
  v49 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v47 = a4;
    v21 = v20;
    v45 = swift_slowAlloc();
    v52 = v45;
    *(_DWORD *)v21 = 136446978;
    v50 = v17;
    v53 = a3;
    swift_getMetatypeMetadata();
    v22 = sub_1BC08A3E4();
    v46 = v9;
    v53 = sub_1BBFDE0F8(v22, v23, &v52);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v24 = v16;
    v25 = objc_msgSend(v24, sel_description);
    v26 = sub_1BC08A3C0();
    v48 = v4;
    v27 = v26;
    v44 = v18;
    v29 = v28;

    v53 = sub_1BBFDE0F8(v27, v29, &v52);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v30 = v50;
    v31 = objc_msgSend(v30, sel_description);
    v32 = sub_1BC08A3C0();
    v34 = v33;

    v53 = sub_1BBFDE0F8(v32, v34, &v52);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    v35 = swift_bridgeObjectRetain();
    v36 = MEMORY[0x1BCCE8EA8](v35, MEMORY[0x1E0DEA968]);
    v38 = v37;
    swift_bridgeObjectRelease();
    v53 = sub_1BBFDE0F8(v36, v38, &v52);
    v17 = v50;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v39 = v44;
    _os_log_impl(&dword_1BBFD7000, v44, (os_log_type_t)v49, "[%{public}s]: duplicate objects in submission dictionary: %{public}s and %{public}s. Duplicate keys: %{public}s", (uint8_t *)v21, 0x2Au);
    v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v40, -1, -1);
    v41 = v21;
    a4 = v47;
    MEMORY[0x1BCCE9C40](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v46);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
  }
  *a4 = v17;
  return v17;
}

uint64_t AppSessionAnalyticsManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppSessionAnalyticsManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC045680(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  v7 = *a1
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1BC0892EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BC04575C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BBFDA7CC();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1BC00D168(a1, (uint64_t)&v9 - v6);
  sub_1BC00D168((uint64_t)v7, (uint64_t)v5);
  swift_beginAccess();
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC0892F8();
  swift_endAccess();
  return sub_1BBFE1BD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BBFDA7CC);
}

uint64_t sub_1BC045864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - v4;
  v6 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC0892EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC045938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC00D168(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC0892F8();
  swift_endAccess();
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BBFDA7CC);
}

uint64_t (*sub_1BC045A08(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[7] = sub_1BC0892E0();
  return sub_1BC045A94;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_allocObject();
  sub_1BBFDF744(0, &qword_1ED69DB90);
  sub_1BC08A69C();
  v4 = sub_1BC089028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  sub_1BC089304();
  return v3;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDF744(0, &qword_1ED69DB90);
  sub_1BC08A69C();
  v4 = sub_1BC089028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1BC089304();
  return v0;
}

uint64_t sub_1BC045C88()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
  v3 = swift_allocObject();
  sub_1BBFDF744(0, &qword_1ED69DB90);
  sub_1BC08A69C();
  v4 = sub_1BC089028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  result = sub_1BC089304();
  qword_1ED69C108 = v3;
  return result;
}

uint64_t type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider()
{
  uint64_t result;

  result = qword_1ED69C110;
  if (!qword_1ED69C110)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC045DCC(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, char a9)
{
  if ((a9 & 1) != 0)
  {
    sub_1BC045E5C(a1);
  }
  else
  {

  }
}

void sub_1BC045E5C(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t static AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.shared.getter()
{
  if (qword_1ED69D1D8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC045F70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - v4;
  v6 = *v0
     + OBJC_IVAR____TtCC18HealthPlatformCore26AppSessionAnalyticsManager49DefaultsPredictiveGenerationAnalyticsDateProvider__dateLastPredictiveGenerationRanForAnalytics;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC0892EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC046048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BBFDA7CC();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC00D168(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC0892F8();
  swift_endAccess();
  return sub_1BBFE1BD4(a1, (uint64_t (*)(_QWORD))sub_1BBFDA7CC);
}

uint64_t (*sub_1BC04611C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BBFDB42C(0, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[7] = sub_1BC0892E0();
  return sub_1BC045A94;
}

void sub_1BC0461AC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  swift_endAccess();
  free(v1);
}

uint64_t sub_1BC0461E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  sub_1BC04725C(a1);
  sub_1BC04725C(a1);
  v12 = sub_1BC089DD8();
  v13 = sub_1BC08A660();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v26 = v9;
    v15 = v14;
    v24 = swift_slowAlloc();
    v29 = v24;
    *(_DWORD *)v15 = 136446722;
    v27 = a4;
    v28 = type metadata accessor for AppSessionAnalyticsManager();
    sub_1BC047D68();
    v25 = v8;
    v16 = sub_1BC08A3E4();
    v28 = sub_1BBFDE0F8(v16, v17, &v29);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    v28 = a2;
    a3(0);
    v18 = sub_1BC08A3E4();
    v28 = sub_1BBFDE0F8(v18, v19, &v29);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v28 = (uint64_t)a1;
    sub_1BC04725C(a1);
    v20 = sub_1BC08A3E4();
    v28 = sub_1BBFDE0F8(v20, v21, &v29);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    sub_1BC045E5C(a1);
    sub_1BC045E5C(a1);
    _os_log_impl(&dword_1BBFD7000, v12, v13, "[%{public}s]: Error returned when gathering analytics of kind %{public}s: %s", (uint8_t *)v15, 0x20u);
    v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v22, -1, -1);
    MEMORY[0x1BCCE9C40](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
  else
  {
    sub_1BC045E5C(a1);
    sub_1BC045E5C(a1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return sub_1BC08A06C();
}

uint64_t sub_1BC0464A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, ValueMetadata *, unint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v3 = v2;
  sub_1BC047DD4(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC047DF0();
  v38 = v9;
  v36 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC047F54();
  v39 = v11;
  v37 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v35 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC089DE4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[1] = a2;
  sub_1BC089DCC();
  v17 = sub_1BC089DD8();
  v18 = sub_1BC08A678();
  if (os_log_type_enabled(v17, v18))
  {
    v33[0] = v13;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v33[2] = v3;
    v21 = v20;
    v41[0] = v20;
    v33[1] = a1;
    *(_DWORD *)v19 = 136446210;
    v22 = sub_1BC038750();
    v40 = sub_1BBFDE0F8(v22, v23, v41);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v17, v18, "[%{public}s]: Collecting RelevanceEngine metrics", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v21, -1, -1);
    MEMORY[0x1BCCE9C40](v19, -1, -1);

    (*(void (**)(char *, _QWORD))(v14 + 8))(v16, v33[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  swift_allocObject();
  swift_weakInit();
  v24 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C960D8];
  sub_1BC047EF0(0, &qword_1ED69C8C8, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v41[0] = sub_1BC08A090();
  v25 = sub_1BC08A6D8();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v8, 1, 1, v25);
  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  sub_1BC046D10(&qword_1ED69C8C0, &qword_1ED69C8C8, v24, MEMORY[0x1E0C96108]);
  sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v27 = v34;
  sub_1BC08A204();
  sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC047DD4);
  swift_release();
  v26(v8, 1, 1, v25);
  sub_1BBFDA9C0(&qword_1ED69A920, (uint64_t (*)(uint64_t))sub_1BC047DF0, MEMORY[0x1E0C95CB8]);
  v28 = v35;
  v29 = v38;
  sub_1BC08A210();
  sub_1BBFE1BD4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC047DD4);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  sub_1BBFDA9C0(&qword_1ED69A868, (uint64_t (*)(uint64_t))sub_1BC047F54, MEMORY[0x1E0C95B90]);
  v30 = v39;
  v31 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v30);
  return v31;
}

unint64_t sub_1BC046940()
{
  unint64_t result;

  result = qword_1ED69C0E8;
  if (!qword_1ED69C0E8)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics, &type metadata for AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics);
    atomic_store(result, (unint64_t *)&qword_1ED69C0E8);
  }
  return result;
}

uint64_t sub_1BC046984()
{
  id *v0;

  return swift_deallocObject();
}

unint64_t sub_1BC0469E0()
{
  unint64_t result;

  result = qword_1ED69BE00;
  if (!qword_1ED69BE00)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.DemographicAnalytics, &type metadata for AppSessionAnalyticsEvent.DemographicAnalytics);
    atomic_store(result, (unint64_t *)&qword_1ED69BE00);
  }
  return result;
}

unint64_t sub_1BC046A24()
{
  unint64_t result;

  result = qword_1ED69A130[0];
  if (!qword_1ED69A130[0])
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.ImproveHealthAnalytics, &type metadata for AppSessionAnalyticsEvent.ImproveHealthAnalytics);
    atomic_store(result, qword_1ED69A130);
  }
  return result;
}

void sub_1BC046A68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A700)
  {
    sub_1BC046AE0();
    sub_1BBFDA9C0(&qword_1ED69C7F8, (uint64_t (*)(uint64_t))sub_1BC046AE0, MEMORY[0x1E0C95A60]);
    v0 = sub_1BC089E80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A700);
  }
}

void sub_1BC046AE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C800)
  {
    sub_1BC046B64();
    sub_1BBFDA9C0(&qword_1ED69C838, (uint64_t (*)(uint64_t))sub_1BC046B64, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC089EC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C800);
  }
}

void sub_1BC046B64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C840)
  {
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69BB70);
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C840);
  }
}

void sub_1BC046BD8()
{
  uint64_t (*v0)(uint64_t, uint64_t, ValueMetadata *, unint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69C7E0)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78];
    sub_1BC047EF0(255, &qword_1ED69C860, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78]);
    sub_1BC046E44(255, &qword_1ED69C8A8);
    sub_1BC046D10(&qword_1ED69C858, &qword_1ED69C860, v0, MEMORY[0x1E0C95D90]);
    sub_1BC046EFC(&qword_1ED69C8A0, &qword_1ED69C8A8);
    v1 = sub_1BC089EB0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69C7E0);
  }
}

unint64_t sub_1BC046CCC()
{
  unint64_t result;

  result = qword_1ED69C100;
  if (!qword_1ED69C100)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.Failure, &type metadata for AppSessionAnalyticsEvent.Failure);
    atomic_store(result, (unint64_t *)&qword_1ED69C100);
  }
  return result;
}

uint64_t sub_1BC046D10(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC047EF0(255, a2, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC046D5C(uint64_t a1)
{
  sub_1BC046F58(a1, &qword_1ED69C7C0, (uint64_t (*)(uint64_t))sub_1BC046BD8, &qword_1ED69C7D8);
}

void sub_1BC046D78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C7D0)
  {
    sub_1BC047EF0(255, &qword_1ED69C850, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78]);
    sub_1BC046E44(255, &qword_1ED69C898);
    sub_1BC046E9C();
    sub_1BC046EFC(&qword_1ED69C890, &qword_1ED69C898);
    v0 = sub_1BC089EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C7D0);
  }
}

void sub_1BC046E44(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC08A078();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BC046E9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69C848;
  if (!qword_1ED69C848)
  {
    sub_1BC047EF0(255, &qword_1ED69C850, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69C848);
  }
  return result;
}

uint64_t sub_1BC046EFC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1BC046E44(255, a2);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C960D0], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC046F3C(uint64_t a1)
{
  sub_1BC046F58(a1, &qword_1ED69C7B0, (uint64_t (*)(uint64_t))sub_1BC046D78, &qword_1ED69C7C8);
}

void sub_1BC046F58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BBFDC1EC(255, (unint64_t *)&qword_1ED69BB70);
    sub_1BBFDA9C0(a4, a3, MEMORY[0x1E0C959F8]);
    v7 = sub_1BC089EA4();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC046FF8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BBFE95C8(&v12, v10 + 40 * a1 + 32);
}

id sub_1BC047070@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v13;

  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v13 = *(id *)(a1 + 24);
  v6 = *(void **)(a1 + 32);
  a2[3] = &type metadata for AppSessionAnalyticsEvent.ModelAnalytics;
  a2[4] = sub_1BC047CE0();
  v7 = (_QWORD *)swift_allocObject();
  *a2 = v7;
  v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v13;
  v7[6] = v6;
  v8 = v6;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  return v13;
}

uint64_t sub_1BC047104@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC0461E8(*a1, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (void (*)(_QWORD))sub_1BC047D9C, a2);
}

id sub_1BC04712C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v6;

  v3 = *(void **)a1;
  v6 = *(id *)(a1 + 8);
  a2[3] = &type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics;
  a2[4] = sub_1BC04805C();
  *a2 = v3;
  a2[1] = v6;
  v4 = v3;
  return v6;
}

uint64_t sub_1BC04717C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC0461E8(*a1, (uint64_t)&type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, (void (*)(_QWORD))sub_1BC0480A0, a2);
}

uint64_t sub_1BC0471A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0471C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC0471EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC0424AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC0471F4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC047220()
{
  uint64_t v0;

  sub_1BC0434EC(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BC047234()
{
  return swift_deallocObject();
}

uint64_t sub_1BC047244()
{
  uint64_t v0;

  return sub_1BC00FDF4(*(uint64_t (**)(void))(v0 + 16));
}

id sub_1BC04724C(id result)
{
  if (result != (id)2)
    return sub_1BC04725C(result);
  return result;
}

id sub_1BC04725C(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1BC04726C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {

  }
}

void sub_1BC0472E0(id a1)
{
  if (a1 != (id)2)
    sub_1BC045E5C(a1);
}

uint64_t sub_1BC0472F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1BBFE1C58(v3, a2);
}

uint64_t type metadata accessor for AppSessionAnalyticsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppSessionAnalyticsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.predictiveGenerationDateProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithHighlightsFeedPresentationAnalytics(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithDemographicAnalytics()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithImproveHealthActivityAnalytics()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.updateCurrentEventWithEndOfSessionAnalytics(from:in:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.getCurrentSubmissionDictionary()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.submitCurrentEvent(resetAfterSubmitted:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.resetCurrentEvent()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.collectHighlightsFeedPresentationAnalytics(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BC047418()
{
  return type metadata accessor for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider();
}

void sub_1BC047420()
{
  unint64_t v0;

  sub_1BBFDB42C(319, &qword_1ED69AC40, (uint64_t (*)(uint64_t))sub_1BBFDA7CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.dateLastPredictiveGenerationRanForAnalytics.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AppSessionAnalyticsManager.DefaultsPredictiveGenerationAnalyticsDateProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1BC0474DC(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69BB08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DF68], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC0474F8(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69BAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DB50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC047514(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69BB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC047530(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC04754C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BBFFDA44(0, &qword_1ED69AB68, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, &qword_1ED69B320, (uint64_t)&unk_1BC08B770);
    v3 = sub_1BC08A93C();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      sub_1BC08ABF4();
      sub_1BC08AC00();
      result = sub_1BC08AC18();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1BC0476A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  void **i;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  id v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v33;
  _QWORD v35[2];
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v33 = v5;
  for (i = (void **)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v15 = (uint64_t)*(i - 1);
    v16 = *i;
    v37 = (uint64_t)*(i - 2);
    v14 = v37;
    v38 = v15;
    v39 = v16;
    v17 = *(_QWORD **)a3;
    swift_bridgeObjectRetain();
    v18 = v16;
    v20 = sub_1BC0258D8(v14, v15);
    v21 = v17[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
      sub_1BC08ABB8();
      __break(1u);
      goto LABEL_24;
    }
    v24 = v19;
    if (v17[3] < v23)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v19 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_1BC07D124();
      if ((v24 & 1) != 0)
        goto LABEL_13;
    }
LABEL_3:
    v9 = *(_QWORD **)a3;
    *(_QWORD *)(*(_QWORD *)a3 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    v10 = (uint64_t *)(v9[6] + 16 * v20);
    *v10 = v14;
    v10[1] = v15;
    *(_QWORD *)(v9[7] + 8 * v20) = v18;
    v11 = v9[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_22;
    v9[2] = v13;
LABEL_5:
    a2 = 1;
    if (!--v6)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1BC07C674(v23, a2 & 1);
  v25 = sub_1BC0258D8(v14, v15);
  if ((v24 & 1) != (v26 & 1))
    goto LABEL_23;
  v20 = v25;
  if ((v24 & 1) == 0)
    goto LABEL_3;
LABEL_13:
  v27 = *(_QWORD **)a3;
  v36 = *(id *)(*(_QWORD *)(*(_QWORD *)a3 + 56) + 8 * v20);
  v28 = v36;
  sub_1BC045264(&v36, &v39, a5, v35);
  if (!v33)
  {
    v33 = 0;
    swift_bridgeObjectRelease();

    v29 = v27[7];
    v30 = v35[0];

    *(_QWORD *)(v29 + 8 * v20) = v30;
    goto LABEL_5;
  }

  v36 = v33;
  v31 = v33;
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC08A420();
  sub_1BC08AA20();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08AA74();
  __break(1u);
}

uint64_t sub_1BC0479EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1BC0890A0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BBFFDA44(0, &qword_1ED69D738, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1ED69D730, MEMORY[0x1E0CB11D0]);
    v9 = sub_1BC08A93C();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1BBFDA9C0(&qword_1ED69D730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1BC08A360();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1BBFDA9C0(&qword_1ED69B498, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1BC08A3A8();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

void sub_1BC047C6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C9C8)
  {
    sub_1BBFDF744(255, &qword_1ED69DD30);
    v0 = sub_1BC08AAC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C9C8);
  }
}

unint64_t sub_1BC047CE0()
{
  unint64_t result;

  result = qword_1ED69C0F8;
  if (!qword_1ED69C0F8)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.ModelAnalytics, &type metadata for AppSessionAnalyticsEvent.ModelAnalytics);
    atomic_store(result, (unint64_t *)&qword_1ED69C0F8);
  }
  return result;
}

uint64_t sub_1BC047D24()
{
  id *v0;

  return swift_deallocObject();
}

unint64_t sub_1BC047D68()
{
  unint64_t result;

  result = qword_1ED69A060;
  if (!qword_1ED69A060)
  {
    type metadata accessor for AppSessionAnalyticsManager();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69A060);
  }
  return result;
}

unint64_t sub_1BC047D9C()
{
  unint64_t result;

  result = qword_1ED69A078;
  if (!qword_1ED69A078)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69A078);
  }
  return result;
}

void sub_1BC047DD4(uint64_t a1)
{
  sub_1BBFDB42C(a1, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC047DF0()
{
  uint64_t (*v0)(uint64_t, uint64_t, ValueMetadata *, unint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69A0A8)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C960D8];
    sub_1BC047EF0(255, &qword_1ED69C8C8, (uint64_t)&type metadata for AppSessionAnalyticsEvent.ModelAnalytics, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0C960D8]);
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
    sub_1BC046D10(&qword_1ED69C8C0, &qword_1ED69C8C8, v0, MEMORY[0x1E0C96108]);
    sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v1 = sub_1BC089F64();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69A0A8);
  }
}

void sub_1BC047EF0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC046CCC();
    v9 = a4(a1, a3, &type metadata for AppSessionAnalyticsEvent.Failure, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC047F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A870)
  {
    sub_1BC047DF0();
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
    sub_1BBFDA9C0(&qword_1ED69A920, (uint64_t (*)(uint64_t))sub_1BC047DF0, MEMORY[0x1E0C95CB8]);
    sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC089EF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A870);
  }
}

uint64_t sub_1BC048030()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC048054(uint64_t (*a1)(_OWORD *), uint64_t a2)
{
  return sub_1BC05EE74(a1, a2);
}

unint64_t sub_1BC04805C()
{
  unint64_t result;

  result = qword_1ED69BF00;
  if (!qword_1ED69BF00)
  {
    result = MEMORY[0x1BCCE9B68](&protocol conformance descriptor for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics, &type metadata for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics);
    atomic_store(result, (unint64_t *)&qword_1ED69BF00);
  }
  return result;
}

unint64_t sub_1BC0480A0()
{
  unint64_t result;

  result = qword_1EF3EE248;
  if (!qword_1EF3EE248)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3EE248);
  }
  return result;
}

uint64_t sub_1BC0480DC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CommitRedirectingFeedItemContext()
{
  return objc_opt_self();
}

uint64_t sub_1BC048128(uint64_t a1, uint64_t a2)
{
  return sub_1BC048438(a1, a2, MEMORY[0x1E0D2D930]);
}

uint64_t sub_1BC048134()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC08946C() & 1;
}

uint64_t sub_1BC04817C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC08949C();
}

uint64_t sub_1BC0481C8()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC089490();
}

uint64_t sub_1BC04820C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC089478();
}

uint64_t sub_1BC048258(uint64_t a1, uint64_t a2)
{
  return sub_1BC048438(a1, a2, MEMORY[0x1E0D2D968]);
}

uint64_t sub_1BC048264(uint64_t a1, uint64_t a2)
{
  return sub_1BC048438(a1, a2, MEMORY[0x1E0D2D950]);
}

uint64_t sub_1BC048270()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC0894A8();
}

uint64_t sub_1BC0482BC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  a2[3] = &type metadata for DispatchQueueGeneratorScheduler;
  a2[4] = sub_1BC01344C();
  v6 = (_QWORD *)swift_allocObject();
  *a2 = v6;
  v6[5] = type metadata accessor for CommitRedirectingFeedItemContext();
  v6[6] = a1;
  v6[2] = v5;
  return swift_retain();
}

uint64_t sub_1BC048328()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 56))();
}

uint64_t sub_1BC048354()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC089454();
}

uint64_t sub_1BC0483C8()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1BC089484();
}

uint64_t sub_1BC04842C(uint64_t a1, uint64_t a2)
{
  return sub_1BC048438(a1, a2, MEMORY[0x1E0D2D960]);
}

uint64_t sub_1BC048438(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v3 + 16), v5);
  return a3(v5, v6);
}

uint64_t sub_1BC048480()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void *static AllDataSummarySection.Identifier.defaultAllDataSummarySections.getter()
{
  return &unk_1E749F3B0;
}

void *static AllDataSummarySection.Identifier.categoryAllDataSummarySections.getter()
{
  return &unk_1E749F3D8;
}

void sub_1BC0484BC()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  sub_1BC08A3C0();
  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    sub_1BC049A78(0);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    qword_1ED69BB80 = v3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static BundleFeedItemPluginBundleProvider.sharedInstance.getter()
{
  if (qword_1ED69CA50 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static BundleFeedItemPluginBundleProvider.sharedInstance.setter(uint64_t a1)
{
  if (qword_1ED69CA50 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED69BB80 = a1;
  return swift_release();
}

uint64_t (*static BundleFeedItemPluginBundleProvider.sharedInstance.modify())()
{
  if (qword_1ED69CA50 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BundleFeedItemPluginBundleProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BundleFeedItemPluginBundleProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BC0486C4()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 40);
  if (result == (id)1)
  {
    swift_beginAccess();
    result = objc_msgSend(*(id *)(v0 + 16), sel_principalClass);
    if (result)
      result = (id)swift_getObjCClassMetadata();
    *(_QWORD *)(v0 + 40) = result;
  }
  return result;
}

uint64_t sub_1BC048718(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

_QWORD *(*sub_1BC048720(id *a1))(_QWORD *result)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC0486C4();
  return sub_1BC048754;
}

_QWORD *sub_1BC048754(_QWORD *result)
{
  *(_QWORD *)(result[1] + 40) = *result;
  return result;
}

uint64_t sub_1BC048760(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[6];
  uint64_t v40;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v36 - v10;
  v12 = sub_1BC0486C4();
  if (v12)
  {
    v13 = (uint64_t)v12;
    v14 = swift_conformsToProtocol2();
    if (v14)
      v15 = v14;
    else
      v15 = 0;
    if (!v14)
      v13 = 0;
    if (v13)
    {
      sub_1BBFE1C58(a1, (uint64_t)&v38);
      v39[3] = v13;
      v39[4] = v15;
      __swift_allocate_boxed_opaque_existential_0(v39);
      sub_1BC089A24();
      sub_1BC049758();
      sub_1BC0497AC();
      if (swift_dynamicCast())
        return v38;
      sub_1BC089D90();
      v33 = sub_1BC089DD8();
      v34 = sub_1BC08A660();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_1BBFD7000, v33, v34, "Principal class is not operation-backed", v35, 2u);
        MEMORY[0x1BCCE9C40](v35, -1, -1);
      }

      v31 = *(void (**)(char *, uint64_t))(v6 + 8);
      v32 = v11;
      goto LABEL_16;
    }
  }
  sub_1BC089D90();
  swift_retain_n();
  v17 = sub_1BC089DD8();
  v18 = sub_1BC08A660();
  if (!os_log_type_enabled(v17, v18))
  {

    swift_release_n();
    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32 = v9;
LABEL_16:
    v31(v32, v5);
    return 0;
  }
  v19 = swift_slowAlloc();
  v36 = swift_slowAlloc();
  v40 = v36;
  *(_DWORD *)v19 = 136446978;
  v37 = v5;
  v39[0] = v4;
  swift_getMetatypeMetadata();
  v20 = sub_1BC08A3E4();
  v39[0] = sub_1BBFDE0F8(v20, v21, &v40);
  sub_1BC08A7EC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 12) = 2082;
  swift_beginAccess();
  v22 = v2[3];
  v23 = v2[4];
  swift_bridgeObjectRetain();
  v38 = sub_1BBFDE0F8(v22, v23, &v40);
  sub_1BC08A7EC();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 22) = 2082;
  v38 = v2[5];
  sub_1BC049704();
  v24 = sub_1BC08A3E4();
  v38 = sub_1BBFDE0F8(v24, v25, &v40);
  sub_1BC08A7EC();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 32) = 2082;
  swift_beginAccess();
  v26 = objc_msgSend((id)v2[2], sel_bundlePath);
  v27 = sub_1BC08A3C0();
  v29 = v28;

  v39[5] = sub_1BBFDE0F8(v27, v29, &v40);
  sub_1BC08A7EC();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BBFD7000, v17, v18, "[%{public}s]: Bundle %{public}s principal class %{public}s does not conform to FeedItemGenerator protocol. Location: %{public}s", (uint8_t *)v19, 0x2Au);
  v30 = v36;
  swift_arrayDestroy();
  MEMORY[0x1BCCE9C40](v30, -1, -1);
  MEMORY[0x1BCCE9C40](v19, -1, -1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v37);
  return 0;
}

double sub_1BC048BB8@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE v53[12];
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v53[-v10];
  v12 = sub_1BC0486C4();
  if (v12)
  {
    v13 = v12;
    if (swift_conformsToProtocol2())
      v14 = v13;
    else
      v14 = 0;
    if (v14)
    {
      v15 = type metadata accessor for GenerationOperationToPluginDelegateAdaptor();
      v16 = swift_allocObject();
      v59[3] = type metadata accessor for BundleFeedItemGenerationPluginInfo();
      v59[4] = sub_1BC0498A8(&qword_1ED69C490, v17, (uint64_t (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo, (uint64_t)&protocol conformance descriptor for BundleFeedItemGenerationPluginInfo);
      v59[0] = v2;
      sub_1BBFE1C58((uint64_t)v59, v16 + 16);
      sub_1BBFDF744(0, &qword_1ED69DBA0);
      v61 = 0;
      v62 = 0xE000000000000000;
      swift_retain_n();
      sub_1BC08A954();
      swift_beginAccess();
      v19 = v2[3];
      v18 = v2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v58[0] = v19;
      v58[1] = v18;
      sub_1BC08A420();
      *(_QWORD *)(v16 + 56) = sub_1BC08A6A8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
      swift_release();
      *(_QWORD *)(a1 + 24) = v15;
      *(_QWORD *)(a1 + 32) = sub_1BC0498A8(&qword_1ED69C6D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for GenerationOperationToPluginDelegateAdaptor, (uint64_t)&unk_1BC08CE0C);
      *(_QWORD *)a1 = v16;
      return result;
    }
    v33 = swift_conformsToProtocol2();
    if (v33)
      v34 = v33;
    else
      v34 = 0;
    if (!v33)
      v13 = 0;
    if (v13)
    {
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v34;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
      sub_1BC08913C();
      return result;
    }
    sub_1BC089D90();
    swift_retain_n();
    v37 = sub_1BC089DD8();
    v38 = sub_1BC08A660();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v54 = v39;
      v41 = v40;
      v55 = swift_slowAlloc();
      v58[0] = v55;
      *(_DWORD *)v41 = 136446978;
      v59[0] = v4;
      swift_getMetatypeMetadata();
      v57 = v5;
      v42 = sub_1BC08A3E4();
      v59[0] = sub_1BBFDE0F8(v42, v43, v58);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      swift_beginAccess();
      v56 = v6;
      v45 = v2[3];
      v44 = v2[4];
      swift_bridgeObjectRetain();
      v61 = sub_1BBFDE0F8(v45, v44, v58);
      sub_1BC08A7EC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2082;
      v61 = v2[5];
      sub_1BC049704();
      v46 = sub_1BC08A3E4();
      v61 = sub_1BBFDE0F8(v46, v47, v58);
      sub_1BC08A7EC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 32) = 2082;
      swift_beginAccess();
      v48 = objc_msgSend((id)v2[2], sel_bundlePath);
      v49 = sub_1BC08A3C0();
      v51 = v50;

      v60 = sub_1BBFDE0F8(v49, v51, v58);
      sub_1BC08A7EC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v37, (os_log_type_t)v54, "[%{public}s]: Bundle %{public}s principal class %{public}s does not conform to FeedItemGenerator or HealthPluginDelegate protocol. Location: %{public}s", (uint8_t *)v41, 0x2Au);
      v52 = v55;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v52, -1, -1);
      MEMORY[0x1BCCE9C40](v41, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v11, v57);
      goto LABEL_21;
    }

    swift_release_n();
    v35 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v36 = v11;
LABEL_20:
    v35(v36, v5);
    goto LABEL_21;
  }
  sub_1BC089D90();
  swift_retain_n();
  v21 = sub_1BC089DD8();
  v22 = sub_1BC08A660();
  if (!os_log_type_enabled(v21, v22))
  {

    swift_release_n();
    v35 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v36 = v9;
    goto LABEL_20;
  }
  v23 = swift_slowAlloc();
  v55 = swift_slowAlloc();
  v58[0] = v55;
  *(_DWORD *)v23 = 136446722;
  v59[0] = v4;
  swift_getMetatypeMetadata();
  v57 = v5;
  v24 = sub_1BC08A3E4();
  v59[0] = sub_1BBFDE0F8(v24, v25, v58);
  sub_1BC08A7EC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 12) = 2082;
  swift_beginAccess();
  v56 = v6;
  v27 = v2[3];
  v26 = v2[4];
  swift_bridgeObjectRetain();
  v61 = sub_1BBFDE0F8(v27, v26, v58);
  sub_1BC08A7EC();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v23 + 22) = 2082;
  swift_beginAccess();
  v28 = objc_msgSend((id)v2[2], sel_bundlePath);
  v29 = sub_1BC08A3C0();
  v31 = v30;

  v60 = sub_1BBFDE0F8(v29, v31, v58);
  sub_1BC08A7EC();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BBFD7000, v21, v22, "[%{public}s]: Bundle %{public}s doesn't have a principal class. Location: %{public}s", (uint8_t *)v23, 0x20u);
  v32 = v55;
  swift_arrayDestroy();
  MEMORY[0x1BCCE9C40](v32, -1, -1);
  MEMORY[0x1BCCE9C40](v23, -1, -1);

  (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v9, v57);
LABEL_21:
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t BundleFeedItemGenerationPluginInfo.__allocating_init(bundle:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BundleFeedItemGenerationPluginInfo.init(bundle:)(a1);
  return v2;
}

uint64_t BundleFeedItemGenerationPluginInfo.init(bundle:)(void *a1)
{
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;

  v1[5] = 1;
  v1[2] = a1;
  v2 = a1;
  v3 = objc_msgSend(v2, sel_bundleIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC08A3C0();
    v7 = v6;

    v1[3] = v5;
    v1[4] = v7;
    return (uint64_t)v1;
  }
  else
  {
    sub_1BC08A954();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v2, sel_description);
    sub_1BC08A3C0();

    sub_1BC08A420();
    swift_bridgeObjectRelease();
    sub_1BC08A420();
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

uint64_t BundleFeedItemGenerationPluginInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BundleFeedItemGenerationPluginInfo.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1BC0494CC()
{
  return sub_1BC0486C4();
}

uint64_t sub_1BC0494EC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = result;
  return result;
}

_QWORD *(*sub_1BC0494F8(id *a1))(_QWORD *result)
{
  id *v1;

  a1[1] = *v1;
  *a1 = sub_1BC0486C4();
  return sub_1BC049AEC;
}

uint64_t sub_1BC049530(uint64_t a1)
{
  return sub_1BC048760(a1);
}

double sub_1BC049550@<D0>(uint64_t a1@<X8>)
{
  return sub_1BC048BB8(a1);
}

uint64_t sub_1BC049570@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for BundleFeedItemGenerationPluginInfo();
  v4 = swift_allocObject();
  result = BundleFeedItemGenerationPluginInfo.init(bundle:)(a1);
  *a2 = v4;
  return result;
}

uint64_t BundleFeedItemGenerationPluginInfo.description.getter()
{
  sub_1BC08A954();
  sub_1BC08A420();
  sub_1BC049838();
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  sub_1BC08AA20();
  sub_1BC08A420();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  return 0;
}

uint64_t sub_1BC0496E4()
{
  return BundleFeedItemGenerationPluginInfo.description.getter();
}

void sub_1BC049704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B3A8)
  {
    sub_1BBFE6454();
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B3A8);
  }
}

unint64_t sub_1BC049758()
{
  unint64_t result;

  result = qword_1ED69CE70;
  if (!qword_1ED69CE70)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69CE70);
  }
  return result;
}

unint64_t sub_1BC0497AC()
{
  unint64_t result;

  result = qword_1ED69CE68;
  if (!qword_1ED69CE68)
  {
    sub_1BBFDF744(255, &qword_1ED69C910);
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69CE68);
  }
  return result;
}

uint64_t type metadata accessor for BundleFeedItemGenerationPluginInfo()
{
  return objc_opt_self();
}

unint64_t sub_1BC049838()
{
  unint64_t result;

  result = qword_1ED69C498;
  if (!qword_1ED69C498)
  {
    type metadata accessor for BundleFeedItemGenerationPluginInfo();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69C498);
  }
  return result;
}

uint64_t sub_1BC04986C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BC0498A8(&qword_1ED69D768, a2, (uint64_t (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo, (uint64_t)&protocol conformance descriptor for BundleFeedItemGenerationPluginInfo);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC0498A8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BC0498E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_1BC049930@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1BC04997C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC0486C4();
  *a1 = result;
  return result;
}

_QWORD *sub_1BC0499A4(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *result;
  return result;
}

uint64_t type metadata accessor for BundleFeedItemPluginBundleProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for BundleFeedItemPluginBundleProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for BundleFeedItemGenerationPluginInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.bundleIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.principalClass.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.makeFeedItemGenerator(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.makeHealthPluginDelegate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of BundleFeedItemGenerationPluginInfo.__allocating_init(bundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

void sub_1BC049A78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED69BDF0)
  {
    v2 = type metadata accessor for BundleFeedItemGenerationPluginInfo();
    v4 = sub_1BC0498A8(&qword_1ED69D768, v3, (uint64_t (*)(uint64_t))type metadata accessor for BundleFeedItemGenerationPluginInfo, (uint64_t)&protocol conformance descriptor for BundleFeedItemGenerationPluginInfo);
    v6 = type metadata accessor for PluginBundleProvider(a1, v2, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED69BDF0);
  }
}

void sub_1BC049AF4()
{
  void *v0;
  id v1;

  sub_1BC089694();
  sub_1BC08973C();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0500 = (uint64_t)v1;
}

id sub_1BC049B70()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_frequencyTransformWithCount_minimumValidCount_, 1000, 100);
  qword_1ED6A0518 = (uint64_t)result;
  return result;
}

id sub_1BC049BB0()
{
  void *v0;
  id result;

  if (qword_1ED69AC58 != -1)
    swift_once();
  v0 = (void *)qword_1ED6A0500;
  if (qword_1ED69AC70 != -1)
    swift_once();
  result = objc_msgSend(v0, sel_featureByUsingTransformer_, qword_1ED6A0518);
  qword_1ED6A0510 = (uint64_t)result;
  return result;
}

void sub_1BC049C48()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD v6[6];

  if (qword_1ED69AC68 != -1)
    swift_once();
  v0 = (void *)qword_1ED6A0510;
  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_1BC08A3B4();
  v6[4] = sub_1BC049D74;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC049E0C;
  v6[3] = &block_descriptor_7;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v1, sel_customTransformerWithName_outputType_block_, v2, 2, v3);
  _Block_release(v3);

  v5 = objc_msgSend(v0, sel_featureByUsingTransformer_, v4);
  qword_1ED6A0508 = (uint64_t)v5;
}

id sub_1BC049D74(void *a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;

  if (objc_msgSend(a1, sel_int64Value))
  {
    v2 = (void *)objc_opt_self();
LABEL_5:
    v5 = 0.0;
    return objc_msgSend(v2, sel_featureValueWithDouble_, v5);
  }
  objc_msgSend(a1, sel_doubleValue);
  v4 = v3;
  v2 = (void *)objc_opt_self();
  if (v4 >= 0.05)
    goto LABEL_5;
  v5 = 1.0;
  return objc_msgSend(v2, sel_featureValueWithDouble_, v5);
}

id sub_1BC049E0C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

void sub_1BC049E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = sub_1BC089694();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D9C();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v9 = sub_1BC089DD8();
  v10 = sub_1BC08A678();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v23 = v5;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v22 = v6;
    v14 = v13;
    v27 = v13;
    v24 = v1;
    v25 = v0;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_1BC089688();
    v26 = sub_1BBFDE0F8(v15, v16, &v27);
    v17 = v24;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
    _os_log_impl(&dword_1BBFD7000, v9, v10, "Incrementing novelty count for %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v14, -1, -1);
    MEMORY[0x1BCCE9C40](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (qword_1ED69AC70 != -1)
    swift_once();
  v18 = (void *)qword_1ED6A0518;
  sub_1BC089730();
  v19 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v19);

  objc_msgSend(v18, sel_increaseCountForFeatureValue_, v20);
}

void SearchSection.localizedHeaderTitle(for:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC04A144(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1ED69B770 != -1)
      swift_once();
  }
  else if (qword_1ED69B770 != -1)
  {
    swift_once();
  }
  return sub_1BC088EF0();
}

uint64_t HKHealthStore.makePreferredTransactionPublisher()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BC04AA20();
  v1 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  v22 = v1;
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC0890AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - v9;
  v11 = sub_1BC08A630();
  v20 = v11;
  sub_1BC089094();
  v23 = v11;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BC04BAA0(0, &qword_1ED69A9C0, &qword_1ED69AA78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0093BC(0, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC04BB28(&qword_1ED69A9B8, &qword_1ED69A9C0, &qword_1ED69AA78, v14);
  sub_1BC08A1A4();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A778, (uint64_t (*)(uint64_t))sub_1BC04AA20, MEMORY[0x1E0C95950]);
  v15 = v21;
  v16 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_release();
  v23 = v16;
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC04BAA0(0, &qword_1ED69A9D0, &qword_1ED69AA98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC04BB28(&qword_1ED69A9C8, &qword_1ED69A9D0, &qword_1ED69AA98, v17);
  v18 = sub_1BC08A180();
  swift_release();
  return v18;
}

void sub_1BC04AA20()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69A780)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BC04BAA0(255, &qword_1ED69A9C0, &qword_1ED69AA78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC0093BC(255, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC04BB28(&qword_1ED69A9B8, &qword_1ED69A9C0, &qword_1ED69AA78, v0);
    v1 = sub_1BC089EA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69A780);
  }
}

uint64_t HKHealthStore.makeSharedSummariesFromLatestTransactionPublisher(sharedTransactionPublisher:pluginName:identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a2;
  v28 = a4;
  v26 = a3;
  sub_1BC00A264();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC04BCE8(0, (unint64_t *)&qword_1ED69B1A0, v10, sub_1BC04BC38, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95B68]);
  v12 = v11;
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - v13;
  if (a1)
    v15 = a1;
  else
    v15 = HKHealthStore.makeLatestTransactionPublisher()();
  v29 = v15;
  v33 = v15;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC04BAA0(0, &qword_1ED69A9D0, &qword_1ED69AA98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC04BB28(&qword_1ED69A9C8, &qword_1ED69A9D0, &qword_1ED69AA98, v16);
  swift_retain();
  sub_1BC08A1C8();
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = (_QWORD *)swift_allocObject();
  v20 = v26;
  v19 = v27;
  v18[2] = v17;
  v18[3] = v19;
  v21 = v28;
  v18[4] = v20;
  v18[5] = v21;
  v18[6] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC089FAC();
  sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v22 = MEMORY[0x1E0C95D78];
  sub_1BC04BB68(0, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC04BC38();
  sub_1BC04BBF8(&qword_1ED69D680, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x1E0C95D90]);
  v23 = v32;
  sub_1BC08A1F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v23);
  sub_1BC04BC80();
  v24 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
  return v24;
}

uint64_t HKHealthStore.makeSharedSummariesStreamPublisher(sharedTransactionPublisher:pluginName:identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BC009270();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v29 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC04BCE8(0, (unint64_t *)&qword_1ED69A6E8, v12, sub_1BC04BDB4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95860]);
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v28 - v15;
  v28[0] = a1;
  if (a1)
    v17 = a1;
  else
    v17 = HKHealthStore.makePreferredTransactionPublisher()();
  v28[1] = v17;
  v34 = v17;
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v18;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC04BAA0(0, &qword_1ED69A9D0, &qword_1ED69AA98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC04BB68(0, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC04BB28(&qword_1ED69A9C8, &qword_1ED69A9D0, &qword_1ED69AA98, v20);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v29;
  sub_1BC08A1A4();
  swift_release();
  v22 = sub_1BC04BDB4();
  v23 = sub_1BC04BBF8(&qword_1ED69D680, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78], MEMORY[0x1E0C95D90]);
  v24 = v33;
  MEMORY[0x1BCCE8B48](v33, v22, v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v24);
  sub_1BC04BDF4();
  v25 = v30;
  v26 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v25);
  return v26;
}

uint64_t sub_1BC04B068(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char *v27;
  char *v28;
  _QWORD v30[3];
  char *v31;
  char *v32;
  uint64_t v33;

  v31 = a5;
  v30[1] = a3;
  v30[2] = a4;
  v30[0] = a2;
  sub_1BC04C00C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC04BB68(0, &qword_1ED69AAD0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v30 - v14;
  v16 = sub_1BC089DE4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v20 = a1;
    v33 = sub_1BC08A624();
    v21 = MEMORY[0x1E0C95D78];
    sub_1BC04BB68(0, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC04BBF8(&qword_1ED69D680, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v21, MEMORY[0x1E0C95D90]);
    sub_1BC04C080();
    v22 = sub_1BC08A0E4();
    swift_release();
    v33 = v22;
    v23 = sub_1BC08A180();
    swift_release();

  }
  else
  {
    v31 = v10;
    v32 = v15;
    sub_1BC089DC0();
    v24 = sub_1BC089DD8();
    v25 = sub_1BC08A678();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BBFD7000, v24, v25, "[Transaction] Transaction does not exist. Returning 0 summaries", v26, 2u);
      MEMORY[0x1BCCE9C40](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v27 = v31;
    sub_1BC08A060();
    sub_1BBFE24A4();
    v28 = v32;
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
    sub_1BC04BBF8(&qword_1ED69AAC8, &qword_1ED69AAD0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v23 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
  }
  return v23;
}

uint64_t HKHealthStore.makeLatestTransactionPublisher()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1BC04BE5C();
  v1 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  v29 = v1;
  MEMORY[0x1E0C80A78](v0);
  v26 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC0890AC();
  v3 = *(_QWORD *)(v24 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  sub_1BC04BF10();
  v25 = v9;
  v27 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1BC08A630();
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BC04BAA0(0, &qword_1ED69A9C0, &qword_1ED69AA78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC04BB28(&qword_1ED69A9B8, &qword_1ED69A9C0, &qword_1ED69AA78, v12);
  sub_1BC08A1C8();
  swift_release();
  sub_1BC089094();
  v13 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v24);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, v6, v13);
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0093BC(0, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BBFDA9C0(&qword_1ED69A7D8, (uint64_t (*)(uint64_t))sub_1BC04BF10, MEMORY[0x1E0C95A38]);
  v17 = v25;
  v18 = v26;
  sub_1BC08A1A4();
  swift_release();
  sub_1BBFDA9C0(&qword_1ED69A798, (uint64_t (*)(uint64_t))sub_1BC04BE5C, MEMORY[0x1E0C95950]);
  v19 = v28;
  v20 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v13);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v17);
  v30 = v20;
  sub_1BC04BAA0(0, &qword_1ED69A9D0, &qword_1ED69AA98, v16);
  sub_1BC04BB28(&qword_1ED69A9C8, &qword_1ED69A9D0, &qword_1ED69AA98, v16);
  v21 = sub_1BC08A180();
  swift_release();
  return v21;
}

uint64_t Publisher<>.filterAndSelectPreferredTransaction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];

  v15[2] = a3;
  v15[1] = a2;
  v4 = sub_1BC0890AC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1BC0093BC(255, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = sub_1BC089EA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1BC08A1A4();
  swift_release();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95950], v7);
  v13 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

void sub_1BC04B834(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;

  v26 = a5;
  v27 = a6;
  v28 = a7;
  sub_1BC04C00C();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC04BB68(0, &qword_1ED69AAD0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v25 - v19;
  v21 = *a1;
  swift_beginAccess();
  v22 = MEMORY[0x1BCCE9CC4](a2 + 16);
  if (v22)
  {
    v23 = (void *)v22;
    v24 = sub_1BC04B068(v21, a3, a4, v26, v27);

  }
  else
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BC0093BC(0, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC08A060();
    sub_1BBFE24A4();
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1BC04BBF8(&qword_1ED69AAC8, &qword_1ED69AAD0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v24 = sub_1BC08A180();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  *v28 = v24;
}

uint64_t sub_1BC04BA18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BC0093BC(0, &qword_1ED69AA78, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC04C0E8();
  result = sub_1BC08A444();
  *a1 = result;
  return result;
}

void sub_1BC04BAA0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0093BC(255, a3, &qword_1ED69D6D8, 0x1E0CB6B70, a4);
    sub_1BBFE24A4();
    v5 = sub_1BC089FB8();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC04BB28(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC04BAA0(255, a2, a3, a4);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC04BB68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC0093BC(255, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v7 = v6;
    v8 = sub_1BBFE24A4();
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC04BBF8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC04BB68(255, a2, a3);
    result = MEMORY[0x1BCCE9B68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC04BC38()
{
  return sub_1BBFDA9C0(&qword_1ED69B170, (uint64_t (*)(uint64_t))sub_1BC00A264, MEMORY[0x1E0C95A38]);
}

uint64_t sub_1BC04BC54()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

unint64_t sub_1BC04BC80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B198;
  if (!qword_1ED69B198)
  {
    sub_1BC04BCE8(255, (unint64_t *)&qword_1ED69B1A0, (uint64_t (*)(uint64_t))sub_1BC00A264, sub_1BC04BC38, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95B68]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B198);
  }
  return result;
}

void sub_1BC04BCE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, _QWORD *))
{
  uint64_t (*v10)(void);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  if (!*a2)
  {
    v10 = MEMORY[0x1E0C95D78];
    sub_1BC04BB68(255, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v14[0] = v11;
    v14[1] = a3(255);
    v14[2] = sub_1BC04BBF8(&qword_1ED69D680, (unint64_t *)&qword_1ED69D688, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v10, MEMORY[0x1E0C95D90]);
    v14[3] = a4();
    v12 = a5(a1, v14);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t sub_1BC04BDB4()
{
  return sub_1BBFDA9C0(&qword_1ED69A788, (uint64_t (*)(uint64_t))sub_1BC009270, MEMORY[0x1E0C95950]);
}

void sub_1BC04BDD4(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1BC04B834(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(char **)(v2 + 48), a2);
}

unint64_t sub_1BC04BDF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A6E0;
  if (!qword_1ED69A6E0)
  {
    sub_1BC04BCE8(255, (unint64_t *)&qword_1ED69A6E8, (uint64_t (*)(uint64_t))sub_1BC009270, sub_1BC04BDB4, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0C95860]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95870], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A6E0);
  }
  return result;
}

void sub_1BC04BE5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A7A0)
  {
    sub_1BC04BF10();
    sub_1BC0093BC(255, &qword_1ED69AA98, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BBFDA9C0(&qword_1ED69A7D8, (uint64_t (*)(uint64_t))sub_1BC04BF10, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A7A0);
  }
}

void sub_1BC04BF10()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED69A7E0)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BC04BAA0(255, &qword_1ED69A9C0, &qword_1ED69AA78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC04BB28(&qword_1ED69A9B8, &qword_1ED69A9C0, &qword_1ED69AA78, v0);
    v1 = sub_1BC089EBC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED69A7E0);
  }
}

uint64_t sub_1BC04BFC0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BC0890AC();
  return sub_1BC04BA18(a1);
}

void sub_1BC04C00C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AA28)
  {
    sub_1BC0093BC(255, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC08A054();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AA28);
  }
}

unint64_t sub_1BC04C080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AA70;
  if (!qword_1ED69AA70)
  {
    sub_1BC0093BC(255, &qword_1ED69D6B8, (unint64_t *)&qword_1ED69D6C0, 0x1E0CB6B58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF58], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AA70);
  }
  return result;
}

unint64_t sub_1BC04C0E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AB38;
  if (!qword_1ED69AB38)
  {
    sub_1BC0093BC(255, &qword_1ED69AA78, &qword_1ED69D6D8, 0x1E0CB6B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AB38);
  }
  return result;
}

uint64_t Feed.Kind.earliestDisplayDateUpdated.getter@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  LODWORD(v33) = a1;
  v2 = sub_1BC089028();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69DAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v28 - v7;
  sub_1BBFDB42C(0, &qword_1ED69DAC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v5);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  sub_1BBFDA924(0, &qword_1ED69BA08, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0D2D650]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = sub_1BC088EE4();
  v29 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC0890AC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_DWORD)v33 != 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v34, 1, 1, v2);
  v33 = v3;
  v28 = v2;
  sub_1BC089094();
  if (qword_1ED69B888 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED69BA28);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v23, v12);
  sub_1BC0892EC();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v25 = v33;
  if (__OFSUB__(0, v35))
  {
    __break(1u);
  }
  else
  {
    sub_1BC089094();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
    v26 = sub_1BC0890D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v31, 1, 1, v26);
    sub_1BC088ED8();
    v27 = v32;
    sub_1BC08901C();
    sub_1BC089088();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  return result;
}

uint64_t Feed.isTooOldForDisplay.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 v11;
  id v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - v2;
  v4 = sub_1BC089028();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - v9;
  v11 = sub_1BC089ACC();
  Feed.Kind.earliestDisplayDateUpdated.getter(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BBFEF208((uint64_t)v3, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v12 = objc_msgSend(v0, sel_dateUpdated);
    sub_1BC089010();

    LOBYTE(v12) = sub_1BC088FF8();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
    if ((v12 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1BC04C6A8(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE449C(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1BBFDF6C4(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE449C(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BBFE449C(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t Feed.findSection(for:)()
{
  if (((1 << sub_1BC089ACC()) & 0x17) != 0)
    return sub_1BC05249C();
  sub_1BC089ACC();
  return sub_1BC053F6C();
}

uint64_t sub_1BC04C838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC08A8A0();
    if ((v2 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_9:
    if (v4 > *(_QWORD *)(v2 + 16) >> 3)
      return sub_1BBFF4AE4(a1, v2);
    goto LABEL_11;
  }
  v4 = *(_QWORD *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0)
    goto LABEL_9;
LABEL_3:
  if (v2 < 0)
    v5 = v2;
  else
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v4 > sub_1BC08A8A0() / 8)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC08A8A0();
    v7 = sub_1BBFF4410(v5, v6);
    swift_bridgeObjectRelease();
    v2 = v7;
    return sub_1BBFF4AE4(a1, v2);
  }
LABEL_11:
  sub_1BBFF411C(a1);
  return v2;
}

uint64_t sub_1BC04C92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BC08ABF4();
    sub_1BC08A408();
    v6 = sub_1BC08AC18();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BC08AB94() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BC08AB94() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1BC04CA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1BC08ABF4();
  sub_1BC08AC00();
  v4 = sub_1BC08AC18();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1BC04CB50(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_1BC08A8D0();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_1BC08A7B0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_1BBFDF744(0, &qword_1ED69DBB0);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_1BC08A7BC();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_1BC08A7BC();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_1BC04CCAC(uint64_t a1)
{
  return sub_1BC04CCC0(a1, sub_1BC08082C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1BC0805D4);
}

uint64_t sub_1BC04CCC0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;

  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = sub_1BC08A858();
    v8 = v7;
    v9 = sub_1BC08A8DC();
    v11 = MEMORY[0x1BCCE9250](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_3:
      sub_1BBFE9178(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    v12 = a3(v6, v8, v5 != 0, a1);
    sub_1BBFE9178(v6, v8, v5 != 0);
    return v12;
  }
  result = a2(a1);
  if ((v15 & 1) == 0)
  {
    v8 = v14;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v14)
    {
      v6 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC04CDD8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE461C(0, v1, 0);
    sub_1BBFDF4CC();
    sub_1BBFE62FC();
    v4 = (void **)(a1 + 48);
    do
    {
      v5 = *v4;
      swift_bridgeObjectRetain_n();
      v6 = v5;
      swift_dynamicCast();

      swift_bridgeObjectRelease();
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE461C(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v2 = v13;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BBFE461C(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 24 * v8;
      *(_QWORD *)(v9 + 32) = v11;
      *(_OWORD *)(v9 + 40) = v12;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC04CF40(unint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1BBFE4670(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1BCCE934C](i, a1);
        a2(0);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BBFE4670(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1BBFE4670(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_1BC00BE28(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      a2(0);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BBFE4670(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1BBFE4670(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_1BC00BE28(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC04D174(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE46B8(0, v1, 0);
    v4 = a1 + 32;
    sub_1BC01E284();
    sub_1BBFE6454();
    do
    {
      swift_dynamicCast();
      v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE46B8(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BBFE46B8(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      *(_QWORD *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC04D290(unsigned int a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  _BOOL4 v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  char *v119;
  char *v120;
  BOOL v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  NSObject *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void *v137;
  id v138;
  _QWORD *v139;
  id v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  id v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  id v155;
  id v156;
  uint32_t *p_align;
  uint64_t i;
  id v159;
  void *v160;
  char *v161;
  id v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  id v171;
  id v172;
  uint64_t v173;
  char *v174;
  __int128 v175;
  char *v176;
  unsigned int v177;
  uint64_t v178;
  char **v179;
  os_log_t v180;
  int v181;
  uint64_t v182;
  char *v183;
  __int128 v184;
  char *v185;
  char *v186;
  id v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  char *v191;
  unint64_t v192;
  char *v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202[2];

  v5 = v4;
  v194 = a4;
  v199 = a3;
  v177 = a1;
  v7 = sub_1BC089DE4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v174 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v176 = (char *)&v173 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v186 = (char *)&v173 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v183 = (char *)&v173 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v185 = (char *)&v173 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v193 = (char *)&v173 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v198 = (char *)&v173 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v173 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (uint64_t)&v173 - v26;
  sub_1BC089D9C();
  swift_bridgeObjectRetain_n();
  v28 = sub_1BC089DD8();
  LOBYTE(v29) = sub_1BC08A678();
  v30 = os_log_type_enabled((os_log_t)v28, (os_log_type_t)v29);
  v195 = v7;
  v197 = v5;
  v192 = (unint64_t)a2 >> 62;
  if (!v30)
  {

    swift_bridgeObjectRelease_n();
    v196 = *(_QWORD *)(v8 + 8);
    ((void (*)(uint64_t, uint64_t))v196)(v27, v7);
    goto LABEL_6;
  }
  v196 = v8;
  v191 = v25;
  v31 = swift_slowAlloc();
  v25 = (char *)swift_slowAlloc();
  v202[0] = (uint64_t)v25;
  *(_DWORD *)v31 = 136315650;
  v32 = sub_1BC08AC9C();
  v200 = sub_1BBFDE0F8(v32, v33, v202);
  sub_1BC08A7EC();
  swift_bridgeObjectRelease();
  *(_WORD *)(v31 + 12) = 2050;
  if ((unint64_t)a2 >> 62)
    goto LABEL_121;
  v34 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v200 = v34;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2082;
    v35 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v200 = sub_1BBFDE0F8(v35, v36, v202);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, (os_log_t)v28, (os_log_type_t)v29, "[%s]: %{public}ld REElements retrieved from RelevanceEngine for feed %{public}s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v25, -1, -1);
    MEMORY[0x1BCCE9C40](v31, -1, -1);

    v7 = v195;
    v196 = *(_QWORD *)(v196 + 8);
    ((void (*)(uint64_t, uint64_t))v196)(v27, v195);
    v5 = v197;
    v25 = v191;
LABEL_6:
    v37 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v38 = (void *)sub_1BC08A3B4();
    v39 = objc_msgSend(v37, sel_arrayForKey_, v38);

    v40 = (void *)v199;
    if (v39
      && (v41 = sub_1BC08A4C8(), v39, v42 = (_QWORD *)sub_1BC04C6A8(v41), swift_bridgeObjectRelease(), v42))
    {
      sub_1BC089D9C();
      swift_bridgeObjectRetain_n();
      v43 = sub_1BC089DD8();
      v44 = sub_1BC08A678();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v202[0] = v46;
        *(_DWORD *)v45 = 136315394;
        v47 = v25;
        v48 = sub_1BC08AC9C();
        v200 = sub_1BBFDE0F8(v48, v49, v202);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2082;
        v25 = (char *)(v45 + 14);
        v50 = swift_bridgeObjectRetain();
        v51 = MEMORY[0x1BCCE8EA8](v50, MEMORY[0x1E0DEA968]);
        v52 = v42;
        v54 = v53;
        swift_bridgeObjectRelease();
        v55 = v51;
        v5 = v197;
        v200 = sub_1BBFDE0F8(v55, v54, v202);
        v7 = v195;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease_n();
        v42 = v52;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v43, v44, "[%s]: Relevance Override Default detected, ignoring RelevanceEngine and proceeding with %{public}s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        v56 = v46;
        v40 = (void *)v199;
        MEMORY[0x1BCCE9C40](v56, -1, -1);
        MEMORY[0x1BCCE9C40](v45, -1, -1);

        v57 = v47;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v57 = v25;
      }
      ((void (*)(char *, uint64_t))v196)(v57, v7);
      LODWORD(v191) = 1;
    }
    else
    {
      if (v192)
      {
        swift_bridgeObjectRetain();
        v58 = sub_1BC08AA80();
        swift_bridgeObjectRelease();
      }
      else
      {
        v58 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v58)
      {
        v202[0] = MEMORY[0x1E0DEE9D8];
        result = sub_1BBFE449C(0, v58 & ~(v58 >> 63), 0);
        if (v58 < 0)
        {
          __break(1u);
          return result;
        }
        v60 = 0;
        v42 = (_QWORD *)v202[0];
        do
        {
          if ((a2 & 0xC000000000000001) != 0)
            v61 = (id)MEMORY[0x1BCCE934C](v60, a2);
          else
            v61 = *(id *)(a2 + 8 * v60 + 32);
          v62 = v61;
          v63 = objc_msgSend(v61, sel_identifier, v173);
          v25 = (char *)sub_1BC08A3C0();
          v65 = v64;

          v202[0] = (uint64_t)v42;
          v67 = v42[2];
          v66 = v42[3];
          v68 = (uint64_t)v42;
          if (v67 >= v66 >> 1)
          {
            sub_1BBFE449C(v66 > 1, v67 + 1, 1);
            v68 = v202[0];
          }
          ++v60;
          *(_QWORD *)(v68 + 16) = v67 + 1;
          v69 = v68 + 16 * v67;
          *(_QWORD *)(v69 + 32) = v25;
          *(_QWORD *)(v69 + 40) = v65;
          v5 = v197;
          v42 = (_QWORD *)v68;
        }
        while (v58 != v60);
        LODWORD(v191) = 0;
        v40 = (void *)v199;
      }
      else
      {
        LODWORD(v191) = 0;
      }
    }
    v70 = objc_msgSend(v194, sel_profileIdentifier, v173);
    v71 = v177;
    v187 = static FeedPopulationManaging.fetchAndValidateFeedToPopulate(kind:managedObjectContext:associatedProfileIdentifier:)(v177, v40, v70, v5);

    v72 = (unint64_t)v198;
    if (qword_1ED69A1F0 != -1)
      goto LABEL_100;
LABEL_26:
    v73 = NSManagedObjectContext.getEligibleFeedItems(for:sourceProfiles:)(v71, qword_1ED69A1E0);
    sub_1BC089D9C();
    swift_bridgeObjectRetain_n();
    v74 = v72;
    v75 = sub_1BC089DD8();
    v76 = sub_1BC08A678();
    v77 = os_log_type_enabled(v75, v76);
    v29 = (unint64_t)v73 >> 62;
    v192 = (unint64_t)v73 >> 62;
    if (v77)
    {
      v78 = swift_slowAlloc();
      v199 = swift_slowAlloc();
      v202[0] = v199;
      *(_DWORD *)v78 = 136315650;
      v79 = sub_1BC08AC9C();
      v200 = sub_1BBFDE0F8(v79, v80, v202);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2082;
      v81 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v200 = sub_1BBFDE0F8(v81, v82, v202);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 22) = 2050;
      if (v29)
      {
        swift_bridgeObjectRetain();
        v25 = (char *)sub_1BC08AA80();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = *(char **)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v7 = v195;
      v71 = (uint64_t)v193;
      swift_bridgeObjectRelease();
      v200 = (uint64_t)v25;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v75, v76, "[%s]: Picking elements for a new %{public}s feed from %{public}ld Core Data elements", (uint8_t *)v78, 0x20u);
      v83 = v199;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v83, -1, -1);
      MEMORY[0x1BCCE9C40](v78, -1, -1);

      ((void (*)(char *, uint64_t))v196)(v198, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      ((void (*)(unint64_t, uint64_t))v196)(v74, v7);
      v71 = (uint64_t)v193;
    }
    sub_1BC089D9C();
    swift_bridgeObjectRetain_n();
    v84 = sub_1BC089DD8();
    v85 = sub_1BC08A678();
    v86 = os_log_type_enabled(v84, v85);
    v193 = (char *)v42;
    if (v86)
    {
      v87 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v202[0] = v29;
      *(_DWORD *)v87 = 136315650;
      v88 = sub_1BC08AC9C();
      v200 = sub_1BBFDE0F8(v88, v89, v202);
      v25 = (char *)&v201;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 12) = 2082;
      v90 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v200 = sub_1BBFDE0F8(v90, v91, v202);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 22) = 2080;
      v92 = swift_bridgeObjectRetain();
      v7 = MEMORY[0x1BCCE8EA8](v92, MEMORY[0x1E0DEA968]);
      v94 = v93;
      swift_bridgeObjectRelease();
      v200 = sub_1BBFDE0F8(v7, v94, v202);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      v42 = v193;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v84, v85, "[%s]: Picking feed of kind %{public}s from these ranked identifiers (the rest were dropped): %s", (uint8_t *)v87, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v29, -1, -1);
      MEMORY[0x1BCCE9C40](v87, -1, -1);

      v95 = v71;
      v96 = v195;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v95 = v71;
      v96 = v7;
    }
    ((void (*)(uint64_t, uint64_t))v196)(v95, v96);
    v190 = v42[2];
    if (v190)
    {
      v72 = 0;
      v98 = v73 & 0xFFFFFFFFFFFFFF8;
      v188 = v73 & 0xFFFFFFFFFFFFFF8;
      v189 = v42 + 4;
      if (v73 < 0)
        v98 = v73;
      v173 = v98;
      v199 = v73 & 0xC000000000000001;
      v179 = &v201;
      *(_QWORD *)&v97 = 136315394;
      v184 = v97;
      v178 = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v97 = 136315650;
      v175 = v97;
      v99 = v73;
      do
      {
        if (v72 >= v42[2])
        {
LABEL_99:
          __break(1u);
LABEL_100:
          swift_once();
          goto LABEL_26;
        }
        v101 = &v189[2 * v72];
        v102 = *v101;
        v25 = (char *)v101[1];
        v198 = (char *)v72;
        if ((_DWORD)v191)
        {
          if (v192)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v72 = sub_1BC08AA80();
            if (v72)
            {
LABEL_45:
              v7 = 4;
              while (1)
              {
                v103 = v199 ? (_QWORD *)MEMORY[0x1BCCE934C](v7 - 4, v73) : *(id *)(v73 + 8 * v7);
                v42 = v103;
                v104 = v7 - 3;
                if (__OFADD__(v7 - 4, 1))
                  break;
                v105 = objc_msgSend(v103, sel_uniqueIdentifier);
                v106 = sub_1BC08A3C0();
                v71 = v107;

                v202[0] = v106;
                v202[1] = v71;
                v200 = v102;
                v201 = v25;
                sub_1BC00C0A0();
                sub_1BC00C0E4();
                LOBYTE(v105) = sub_1BC08A378();
                swift_bridgeObjectRelease();
                if ((v105 & 1) != 0)
                  goto LABEL_72;

                ++v7;
                v121 = v104 == v72;
                v73 = v99;
                if (v121)
                  goto LABEL_53;
              }
              __break(1u);
LABEL_98:
              __break(1u);
              goto LABEL_99;
            }
          }
          else
          {
            v72 = *(_QWORD *)(v188 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v72)
              goto LABEL_45;
          }
LABEL_53:
          swift_bridgeObjectRelease();
          v108 = v185;
          sub_1BC089D9C();
          swift_bridgeObjectRetain();
          v109 = sub_1BC089DD8();
          LOBYTE(v29) = sub_1BC08A660();
          if (!os_log_type_enabled(v109, (os_log_type_t)v29))
          {
LABEL_38:

            swift_bridgeObjectRelease_n();
            goto LABEL_39;
          }
          v110 = swift_slowAlloc();
          v71 = swift_slowAlloc();
          v202[0] = v71;
          *(_DWORD *)v110 = v184;
          v111 = sub_1BC08AC9C();
          *(_QWORD *)(v110 + 4) = sub_1BBFDE0F8(v111, v112, v202);
          swift_bridgeObjectRelease();
          *(_WORD *)(v110 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v110 + 14) = sub_1BBFDE0F8(v102, (unint64_t)v25, v202);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BBFD7000, v109, (os_log_type_t)v29, "[%s]: Relevance Override Default set, but no feedItem found for %{public}s", (uint8_t *)v110, 0x16u);
          swift_arrayDestroy();
          v113 = v71;
        }
        else
        {
          if (v192)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v114 = sub_1BC08AA80();
            if (v114)
            {
LABEL_57:
              v7 = 4;
              while (1)
              {
                v72 = v7 - 4;
                if (v199)
                  v115 = (_QWORD *)MEMORY[0x1BCCE934C](v7 - 4, v73);
                else
                  v115 = *(id *)(v73 + 8 * v7);
                v42 = v115;
                v116 = v7 - 3;
                if (__OFADD__(v72, 1))
                  goto LABEL_98;
                v117 = objc_msgSend(v115, sel_uniqueIdentifier, v173);
                v118 = sub_1BC08A3C0();
                v120 = v119;

                v121 = v118 == v102 && v120 == v25;
                if (v121)
                  break;
                v71 = sub_1BC08AB94();
                swift_bridgeObjectRelease();
                if ((v71 & 1) != 0)
                {
LABEL_72:
                  v73 = v99;
LABEL_74:
                  v71 = (uint64_t)v186;
                  v100 = v198;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v42, sel_setSortOrder_, v100);
                  if (((1 << sub_1BC089ACC()) & 0x17) != 0)
                  {
                    v125 = sub_1BC05249C();
                    if (!v125)
                    {
                      v126 = v176;
                      sub_1BC089D9C();
                      v127 = v42;
                      v128 = sub_1BC089DD8();
                      LOBYTE(v29) = sub_1BC08A678();
                      if (os_log_type_enabled(v128, (os_log_type_t)v29))
                      {
                        v129 = swift_slowAlloc();
                        v182 = swift_slowAlloc();
                        v202[0] = v182;
                        *(_DWORD *)v129 = v184;
                        v130 = sub_1BC08AC9C();
                        v200 = sub_1BBFDE0F8(v130, v131, v202);
                        sub_1BC08A7EC();
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v129 + 12) = 2080;
                        v71 = v129 + 14;
                        v7 = (uint64_t)objc_msgSend(v127, sel_uniqueIdentifier);
                        v132 = sub_1BC08A3C0();
                        v25 = v133;

                        v200 = sub_1BBFDE0F8(v132, (unint64_t)v25, v202);
                        sub_1BC08A7EC();

                        swift_bridgeObjectRelease();
                        _os_log_impl(&dword_1BBFD7000, v128, (os_log_type_t)v29, "[%s]: Section not found for feedItem %s", (uint8_t *)v129, 0x16u);
                        v134 = v182;
                        swift_arrayDestroy();
                        MEMORY[0x1BCCE9C40](v134, -1, -1);
                        v135 = v129;
                        v100 = v198;
                        MEMORY[0x1BCCE9C40](v135, -1, -1);

                        v136 = v176;
                      }
                      else
                      {

                        v136 = v126;
                      }
                      ((void (*)(char *, uint64_t))v196)(v136, v195);
                      v42 = v193;
                      objc_msgSend(v127, sel_setFeedSection_, 0);
                      sub_1BC089C4C();
                      objc_msgSend(v127, sel_setSectionSortOrder_, sub_1BC089BBC());

                      v73 = v99;
                      goto LABEL_40;
                    }
                  }
                  else
                  {
                    sub_1BC089ACC();
                    v125 = sub_1BC053F6C();
                  }
                  v137 = (void *)v125;
                  sub_1BC089D9C();
                  v138 = v137;
                  v139 = v42;
                  v140 = v138;
                  v25 = v139;
                  v141 = sub_1BC089DD8();
                  v142 = sub_1BC08A678();
                  LODWORD(v29) = v142;
                  if (os_log_type_enabled(v141, v142))
                  {
                    v143 = swift_slowAlloc();
                    v182 = swift_slowAlloc();
                    v202[0] = v182;
                    *(_DWORD *)v143 = v175;
                    v144 = sub_1BC08AC9C();
                    v181 = v29;
                    v200 = sub_1BBFDE0F8(v144, v145, v202);
                    v180 = v141;
                    sub_1BC08A7EC();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v143 + 12) = 2080;
                    v146 = objc_msgSend(v140, sel_identifier);
                    v147 = sub_1BC08A3C0();
                    v149 = v148;

                    v200 = sub_1BBFDE0F8(v147, v149, v202);
                    sub_1BC08A7EC();

                    swift_bridgeObjectRelease();
                    *(_WORD *)(v143 + 22) = 2080;
                    v150 = objc_msgSend(v25, sel_uniqueIdentifier);
                    v29 = sub_1BC08A3C0();
                    v7 = v151;

                    v100 = v198;
                    v200 = sub_1BBFDE0F8(v29, v7, v202);
                    sub_1BC08A7EC();

                    swift_bridgeObjectRelease();
                    v71 = (uint64_t)v180;
                    _os_log_impl(&dword_1BBFD7000, v180, (os_log_type_t)v181, "[%s]: Section %s found for feedItem %s", (uint8_t *)v143, 0x20u);
                    v152 = v182;
                    swift_arrayDestroy();
                    MEMORY[0x1BCCE9C40](v152, -1, -1);
                    MEMORY[0x1BCCE9C40](v143, -1, -1);

                    v153 = v186;
                  }
                  else
                  {

                    v153 = (char *)v71;
                  }
                  ((void (*)(char *, uint64_t))v196)(v153, v195);
                  v42 = v193;
                  objc_msgSend(v140, sel_addFeedItemsObject_, v25);

                  goto LABEL_40;
                }

                ++v7;
                v121 = v116 == v114;
                v73 = v99;
                if (v121)
                  goto LABEL_69;
              }
              v73 = v99;
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
          }
          else
          {
            v114 = *(_QWORD *)(v188 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v114)
              goto LABEL_57;
          }
LABEL_69:
          swift_bridgeObjectRelease();
          v108 = v183;
          sub_1BC089D9C();
          swift_bridgeObjectRetain();
          v109 = sub_1BC089DD8();
          LOBYTE(v29) = sub_1BC08A678();
          if (!os_log_type_enabled(v109, (os_log_type_t)v29))
            goto LABEL_38;
          v110 = swift_slowAlloc();
          v122 = swift_slowAlloc();
          v202[0] = v122;
          *(_DWORD *)v110 = v184;
          v123 = sub_1BC08AC9C();
          v71 = v124;
          *(_QWORD *)(v110 + 4) = sub_1BBFDE0F8(v123, v124, v202);
          swift_bridgeObjectRelease();
          *(_WORD *)(v110 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v110 + 14) = sub_1BBFDE0F8(v102, (unint64_t)v25, v202);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BBFD7000, v109, (os_log_type_t)v29, "[%s]: Item %s was returned by the RelevanceEngine but is now deleted", (uint8_t *)v110, 0x16u);
          swift_arrayDestroy();
          v113 = v122;
        }
        MEMORY[0x1BCCE9C40](v113, -1, -1);
        MEMORY[0x1BCCE9C40](v110, -1, -1);

LABEL_39:
        ((void (*)(char *, uint64_t))v196)(v108, v195);
        v42 = v193;
        v73 = v99;
        v100 = v198;
LABEL_40:
        v72 = (unint64_t)(v100 + 1);
      }
      while (v72 != v190);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = (uint64_t)objc_msgSend(v187, sel_sections, v173);
    v28 = sub_1BC0892BC();
    v31 = sub_1BC08A60C();

    if (!((unint64_t)v31 >> 62))
      break;
    if (v31 < 0)
      v27 = v31;
    else
      v27 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    a2 = sub_1BC08AA80();
    if (!a2)
      goto LABEL_105;
LABEL_91:
    if (a2 >= 1)
    {
      v29 = 0;
      do
      {
        if ((v31 & 0xC000000000000001) != 0)
          v154 = (char *)MEMORY[0x1BCCE934C](v29, v31);
        else
          v154 = (char *)*(id *)(v31 + 8 * v29 + 32);
        v25 = v154;
        ++v29;
        sub_1BC04EC20(v154, (uint64_t)v194);

      }
      while (a2 != v29);
      goto LABEL_105;
    }
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    swift_bridgeObjectRetain();
    v34 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  a2 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (a2)
    goto LABEL_91;
LABEL_105:
  swift_bridgeObjectRelease_n();
  v155 = v187;
  sub_1BC04F5EC();
  v156 = objc_msgSend(v155, sel_sections);
  v28 = sub_1BC08A60C();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    p_align = (_DWORD *)(&stru_1E74A5FE8 + 24);
    if (!v27)
      goto LABEL_114;
LABEL_107:
    if (v27 >= 1)
    {
      for (i = 0; i != v27; ++i)
      {
        if ((v28 & 0xC000000000000001) != 0)
          v159 = (id)MEMORY[0x1BCCE934C](i, v28);
        else
          v159 = *(id *)(v28 + 8 * i + 32);
        v160 = v159;
        objc_msgSend(v159, *((SEL *)p_align + 359), i);

      }
      goto LABEL_114;
    }
    goto LABEL_120;
  }
  v27 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  p_align = &stru_1E74A5FE8.align;
  if (v27)
    goto LABEL_107;
LABEL_114:
  swift_bridgeObjectRelease();
  v161 = v174;
  sub_1BC089D9C();
  v162 = v187;
  v163 = sub_1BC089DD8();
  v164 = sub_1BC08A678();
  if (os_log_type_enabled(v163, v164))
  {
    v165 = swift_slowAlloc();
    v166 = swift_slowAlloc();
    v202[0] = v166;
    *(_DWORD *)v165 = 136315650;
    v167 = sub_1BC08AC9C();
    v200 = sub_1BBFDE0F8(v167, v168, v202);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v165 + 12) = 2082;
    v169 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v200 = sub_1BBFDE0F8(v169, v170, v202);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v165 + 22) = 2050;
    v171 = objc_msgSend(v162, sel_sections);
    v172 = objc_msgSend(v171, sel_count);

    v200 = (uint64_t)v172;
    sub_1BC08A7EC();

    _os_log_impl(&dword_1BBFD7000, v163, v164, "[%s]: Picked feed of kind %{public}s with %{public}ld sections", (uint8_t *)v165, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v166, -1, -1);
    MEMORY[0x1BCCE9C40](v165, -1, -1);

  }
  else
  {

  }
  return ((uint64_t (*)(char *, uint64_t))v196)(v161, v195);
}

void sub_1BC04EC20(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint32_t *p_align;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  v6 = sub_1BC089DE4();
  v38 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - v9;
  v11 = objc_msgSend(a1, sel_managedObjectContext);

  if (v11)
  {
    sub_1BC089D9C();
    v12 = a1;
    v13 = sub_1BC089DD8();
    v14 = sub_1BC08A678();
    v15 = os_log_type_enabled(v13, v14);
    p_align = &stru_1E74A5FE8.align;
    v36 = v3;
    v37 = v6;
    v35 = a2;
    if (v15)
    {
      v17 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v41 = v34;
      *(_DWORD *)v17 = 136315650;
      v18 = sub_1BC08AC9C();
      v40 = sub_1BBFDE0F8(v18, v19, &v41);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      v20 = objc_msgSend(v12, sel_identifier);
      v21 = sub_1BC08A3C0();
      v23 = v22;

      v40 = sub_1BBFDE0F8(v21, v23, &v41);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2050;
      v24 = objc_msgSend(v12, sel_feedItems);
      v25 = objc_msgSend(v24, sel_count);

      v40 = (uint64_t)v25;
      p_align = (_DWORD *)(&stru_1E74A5FE8 + 24);
      sub_1BC08A7EC();

      _os_log_impl(&dword_1BBFD7000, v13, v14, "[%s]: Before curation, section %{public}s has %{public}ld feedItems", (uint8_t *)v17, 0x20u);
      v26 = v34;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v26, -1, -1);
      v27 = v17;
      v6 = v37;
      MEMORY[0x1BCCE9C40](v27, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v6);
    v28 = objc_msgSend(v12, *((SEL *)p_align + 323));
    v29 = sub_1BC08A3C0();
    v31 = v30;

    v32 = (char *)&loc_1BC04EF30 + *((int *)qword_1BC04F5D8 + MEMORY[0x1BCCE7FC0](v29, v31));
    __asm { BR              X10 }
  }
  sub_1BC08AA74();
  __break(1u);
  JUMPOUT(0x1BC04F5CCLL);
}

void sub_1BC04F5EC()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_sections);
  sub_1BC0892BC();
  v3 = (void *)sub_1BC08A600();
  v5 = v4;
  v7 = v6;

  v8 = v3;
  swift_retain();
  sub_1BC053AB0(v8, v5, v7);
  v10 = v9;
  swift_release();

  v14 = v10;
  sub_1BC055B88((uint64_t *)&v14, (uint64_t)&unk_1E749F400);
  swift_release();

  sub_1BC04CF40(v14, (void (*)(_QWORD))MEMORY[0x1E0D2D5F0]);
  swift_release();
  v11 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v12 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithArray_, v12);

  objc_msgSend(v1, sel_setSections_, v13);
}

uint64_t sub_1BC04F748(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (**v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(_QWORD, _QWORD);
  __int128 v34;
  void (**v35)(char *, uint64_t);
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t result;
  _QWORD v78[2];
  __int128 v79;
  uint64_t v80;
  void (**v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95[3];
  uint64_t v96;
  uint64_t v97[3];
  uint64_t v98;
  unint64_t v99;

  v4 = sub_1BC089694();
  v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69BB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v90 = (char *)v78 - v9;
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))v7);
  MEMORY[0x1E0C80A78](v10);
  v82 = (char *)v78 - v11;
  v92 = sub_1BC089DE4();
  v12 = *(_QWORD *)(v92 - 8);
  v13 = MEMORY[0x1E0C80A78](v92);
  v94 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v78[0] = (char *)v78 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v78 - v17;
  v19 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_100:
    swift_bridgeObjectRetain();
    v74 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v74)
    {
      v75 = swift_bridgeObjectRetain();
      v20 = (uint64_t)sub_1BBFF28CC(v75);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else
  {
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain();
LABEL_4:
      v97[0] = v20;
      v21 = 0;
      sub_1BC052BB8(v97);
      v99 = v97[0];
      v98 = MEMORY[0x1E0DEE9D8];
      v22 = swift_allocObject();
      v83 = v22;
      *(_QWORD *)(v22 + 16) = MEMORY[0x1E0DEE9E8];
      v87 = v22 + 16;
      v81 = v5;
      if ((a2 & 1) != 0)
      {
        if (v19)
        {
          swift_bridgeObjectRetain();
          v5 = (void (**)(char *, uint64_t))sub_1BC08AA80();
          swift_bridgeObjectRelease();
        }
        else
        {
          v5 = *(void (***)(char *, uint64_t))((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v24 = (double)(uint64_t)v5 * 0.4;
        if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
          goto LABEL_110;
        if (v24 <= -9.22337204e18)
          goto LABEL_111;
        if (v24 >= 9.22337204e18)
          goto LABEL_112;
        v23 = (uint64_t)v24;
        if ((uint64_t)v24 >= 8)
          v23 = 8;
        if (v23 <= 3)
          v23 = 3;
      }
      else
      {
        v23 = 8;
      }
      v89 = v23;
      sub_1BC089D9C();
      swift_bridgeObjectRetain_n();
      v25 = sub_1BC089DD8();
      v26 = sub_1BC08A678();
      v27 = os_log_type_enabled(v25, v26);
      v5 = (void (**)(char *, uint64_t))&loc_1BC08B000;
      v28 = MEMORY[0x1E0DEE9B8];
      v80 = v4;
      if (v27)
      {
        v88 = (void (*)(_QWORD, _QWORD))v18;
        v18 = (char *)swift_slowAlloc();
        v86 = (uint64_t *)swift_slowAlloc();
        v97[0] = (uint64_t)v86;
        *(_DWORD *)v18 = 136315650;
        v29 = sub_1BC08AC9C();
        v95[0] = sub_1BBFDE0F8(v29, v30, v97);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        *((_WORD *)v18 + 6) = 2050;
        v95[0] = v89;
        sub_1BC08A7EC();
        *((_WORD *)v18 + 11) = 2050;
        if (v19)
        {
          swift_bridgeObjectRetain();
          v31 = sub_1BC08AA80();
          swift_bridgeObjectRelease();
        }
        else
        {
          v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v19 = (uint64_t)v82;
        swift_bridgeObjectRelease();
        v95[0] = v31;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BBFD7000, v25, v26, "[%s]: Will curate %{public}ld highlights from %{public}ld ranked highlights", (uint8_t *)v18, 0x20u);
        v28 = MEMORY[0x1E0DEE9B8];
        v32 = v86;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v32, -1, -1);
        MEMORY[0x1BCCE9C40](v18, -1, -1);

        v33 = v88;
        v88 = *(void (**)(_QWORD, _QWORD))(v12 + 8);
        v88(v33, v92);
        v4 = v80;
        v5 = (void (**)(char *, uint64_t))&loc_1BC08B000;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v88 = *(void (**)(_QWORD, _QWORD))(v12 + 8);
        v88(v18, v92);
        v19 = (uint64_t)v82;
      }
      swift_beginAccess();
      v86 = v97;
      *(_QWORD *)&v34 = 136315650;
      v79 = v34;
      v78[1] = v28 + 8;
      v35 = v81;
      a2 = (uint64_t)v90;
      while (1)
      {
        if ((unint64_t)v98 >> 62)
        {
          swift_bridgeObjectRetain();
          v7 = sub_1BC08AA80();
          swift_bridgeObjectRelease();
        }
        else
        {
          v7 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v7 >= v89)
        {
          swift_bridgeObjectRelease();
          goto LABEL_82;
        }
        a1 = v98;
        if ((unint64_t)v98 >> 62)
        {
          swift_bridgeObjectRetain();
          v7 = sub_1BC08AA80();
          if (!v7)
          {
LABEL_40:
            swift_bridgeObjectRelease();
            v7 = v99;
            v12 = v99 >> 62;
            if (v99 >> 62)
            {
              swift_bridgeObjectRetain();
              v5 = (void (**)(char *, uint64_t))sub_1BC08AA80();
              swift_bridgeObjectRelease();
              if (!v5)
              {
                __break(1u);
                result = swift_release();
                __break(1u);
                return result;
              }
              swift_bridgeObjectRetain();
              a1 = sub_1BC08AA80();
              swift_bridgeObjectRelease();
              if (!a1)
                goto LABEL_94;
            }
            else if (!*(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_93;
            }
            if ((v7 & 0xC000000000000001) != 0)
            {
              a1 = MEMORY[0x1BCCE934C](0, v7);
              if (!v12)
                goto LABEL_45;
            }
            else
            {
              if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_95;
              a1 = (unint64_t)*(id *)(v7 + 32);
              if (!v12)
              {
LABEL_45:
                v5 = *(void (***)(char *, uint64_t))((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_52:
                if (!v5)
                  goto LABEL_99;
                sub_1BC055D9C(0, 1);
                goto LABEL_54;
              }
            }
            swift_bridgeObjectRetain();
            v5 = (void (**)(char *, uint64_t))sub_1BC08AA80();
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
        }
        else
        {
          v7 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v7)
            goto LABEL_40;
        }
        v36 = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
        if ((a1 & 0xC000000000000001) != 0)
        {
          v37 = (char *)MEMORY[0x1BCCE934C](v36, a1);
        }
        else
        {
          if ((v36 & 0x8000000000000000) != 0)
            goto LABEL_91;
          if (v36 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_92;
          v37 = (char *)*(id *)(a1 + 8 * v36 + 32);
        }
        v18 = v37;
        swift_bridgeObjectRelease();
        v38 = sub_1BC089A0C();
        sub_1BC089B8C();
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(a2, 1, v38) == 1)
        {
          sub_1BBFEF208(a2, &qword_1ED69BB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E4B8]);
          v40 = sub_1BC089880();
          v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v19, 1, 1, v40);
        }
        else
        {
          sub_1BC089A00();
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(a2, v38);
          v42 = sub_1BC089880();
          v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v19, 0, 1, v42);
        }
        MEMORY[0x1E0C80A78](v41);
        v43 = v83;
        v78[-4] = v19;
        v78[-3] = v43;
        v44 = v93;
        v78[-2] = v18;
        v78[-1] = v44;
        v45 = swift_bridgeObjectRetain();
        v46 = sub_1BC053E60(v45, sub_1BC056838);
        a1 = v47;
        swift_bridgeObjectRelease();
        if (!a1)
        {
          swift_bridgeObjectRelease();
          v12 = v78[0];
          sub_1BC089D9C();
          v65 = v98;
          swift_bridgeObjectRetain_n();
          v7 = v12;
          a1 = sub_1BC089DD8();
          LOBYTE(v5) = sub_1BC08A678();
          if (!os_log_type_enabled((os_log_t)a1, (os_log_type_t)v5))
          {

            swift_bridgeObjectRelease_n();
            v88(v12, v92);
            goto LABEL_81;
          }
          v7 = swift_slowAlloc();
          a2 = swift_slowAlloc();
          v95[0] = a2;
          *(_DWORD *)v7 = 136315394;
          v66 = sub_1BC08AC9C();
          v96 = sub_1BBFDE0F8(v66, v67, v95);
          sub_1BC08A7EC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v7 + 12) = 2050;
          if (v65 >> 62)
            goto LABEL_113;
          v68 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
          while (1)
          {
            v35 = v81;
            swift_bridgeObjectRelease();
            v96 = v68;
            sub_1BC08A7EC();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BBFD7000, (os_log_t)a1, (os_log_type_t)v5, "[%s]: No more eligible highlights; curation is complete at %{public}ld elements",
              (uint8_t *)v7,
              0x16u);
            swift_arrayDestroy();
            MEMORY[0x1BCCE9C40](a2, -1, -1);
            MEMORY[0x1BCCE9C40](v7, -1, -1);

            v88(v12, v92);
            v19 = (uint64_t)v82;
LABEL_81:
            sub_1BBFEF208(v19, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
LABEL_82:
            a1 = v98;
            if ((unint64_t)v98 >> 62)
            {
              if (v98 < 0)
                v7 = v98;
              else
                v7 = v98 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain();
              v69 = sub_1BC08AA80();
              if (!v69)
                goto LABEL_107;
            }
            else
            {
              v69 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v69)
                goto LABEL_107;
            }
            if (v69 >= 1)
              break;
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            swift_bridgeObjectRetain();
            v68 = sub_1BC08AA80();
            swift_bridgeObjectRelease();
          }
          v70 = 0;
          v71 = v91;
          do
          {
            if ((a1 & 0xC000000000000001) != 0)
              v72 = (id)MEMORY[0x1BCCE934C](v70, a1);
            else
              v72 = *(id *)(a1 + 8 * v70 + 32);
            ++v70;
            v73 = v72;
            sub_1BC08967C();
            sub_1BC049E5C();

            v35[1](v71, v4);
          }
          while (v69 != v70);
LABEL_107:
          swift_bridgeObjectRelease();
          v76 = v98;
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRelease();
          return v76;
        }

        sub_1BBFEF208(v19, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
LABEL_54:
        v48 = v94;
        sub_1BC089D9C();
        v18 = (char *)(id)a1;
        v7 = sub_1BC089DD8();
        a2 = sub_1BC08A678();
        if (os_log_type_enabled((os_log_t)v7, (os_log_type_t)a2))
        {
          v85 = v21;
          v49 = swift_slowAlloc();
          v84 = swift_slowAlloc();
          v95[0] = v84;
          *(_DWORD *)v49 = v79;
          v50 = sub_1BC08AC9C();
          v96 = sub_1BBFDE0F8(v50, v51, v95);
          a1 = (unint64_t)v86;
          sub_1BC08A7EC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 12) = 2080;
          v52 = objc_msgSend(v18, sel_uniqueIdentifier);
          v12 = sub_1BC08A3C0();
          v54 = v53;

          v96 = sub_1BBFDE0F8(v12, v54, v95);
          sub_1BC08A7EC();

          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 22) = 2080;
          v4 = v98;
          if ((unint64_t)v98 >> 62)
          {
            if (v98 < 0)
              v12 = v98;
            else
              v12 = v98 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v5 = (void (**)(char *, uint64_t))sub_1BC08AA80();
          }
          else
          {
            v5 = *(void (***)(char *, uint64_t))((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          v19 = (uint64_t)v82;
          if (v5)
          {
            v55 = (char *)v5 - 1;
            if (__OFSUB__(v5, 1))
              goto LABEL_96;
            if ((v4 & 0xC000000000000001) != 0)
            {
              v56 = (id)MEMORY[0x1BCCE934C](v55, v4);
            }
            else
            {
              if (((unint64_t)v55 & 0x8000000000000000) != 0)
                goto LABEL_97;
              if ((unint64_t)v55 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_98;
              v56 = *(id *)(v4 + 8 * (_QWORD)v55 + 32);
            }
            v57 = v56;
            swift_bridgeObjectRelease();
            v58 = objc_msgSend(v57, sel_uniqueIdentifier);

            v59 = sub_1BC08A3C0();
            v61 = v60;

          }
          else
          {
            swift_bridgeObjectRelease();
            v61 = 0xE300000000000000;
            v59 = 7104878;
          }
          v96 = sub_1BBFDE0F8(v59, v61, v95);
          sub_1BC08A7EC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BBFD7000, (os_log_t)v7, (os_log_type_t)a2, "[%s]: Adding highlight %s to curated list after %s", (uint8_t *)v49, 0x20u);
          v62 = v84;
          swift_arrayDestroy();
          MEMORY[0x1BCCE9C40](v62, -1, -1);
          MEMORY[0x1BCCE9C40](v49, -1, -1);

          v88(v94, v92);
          v4 = v80;
          v35 = v81;
          v21 = v85;
        }
        else
        {

          v88(v48, v92);
        }
        swift_beginAccess();
        v63 = v18;
        MEMORY[0x1BCCE8E84]();
        v5 = *(void (***)(char *, uint64_t))((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
        a2 = (uint64_t)v90;
        if ((unint64_t)v5 >= *(_QWORD *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();
        swift_endAccess();
        v64 = sub_1BC089BC8();
        v12 = v87;
        swift_beginAccess();
        sub_1BC05186C(v64);
        swift_endAccess();

      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC050670(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  void (**v72)(char *, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  unint64_t v82;
  char *v83;
  os_log_t v84;
  uint64_t v85;
  os_log_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  int v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  id v102;
  NSObject *v103;
  os_log_type_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  os_log_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  id v123;
  id v124;
  id v125;
  id v126;
  NSObject *v127;
  os_log_type_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  id v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char *v146;
  uint64_t v147;
  os_log_t v148;
  void (*v149)(char *, uint64_t);
  int v150;
  void (*v151)(char *, uint64_t);
  id v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  os_log_t v160;
  uint64_t v161;
  id v162;
  void (**v163)(char *, uint64_t);
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;

  v169 = a4;
  v170 = a6;
  v162 = a5;
  v168 = a3;
  sub_1BC056844();
  v159 = v7;
  MEMORY[0x1E0C80A78](v7);
  v161 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v155 = (uint64_t)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v160 = (os_log_t)((char *)&v146 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v154 = (uint64_t)&v146 - v16;
  MEMORY[0x1E0C80A78](v15);
  v158 = (uint64_t)&v146 - v17;
  v18 = sub_1BC089DE4();
  v171 = *(_QWORD *)(v18 - 8);
  v172 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v166 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v164 = (char *)&v146 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v146 - v24;
  MEMORY[0x1E0C80A78](v23);
  v163 = (void (**)(char *, uint64_t))((char *)&v146 - v26);
  sub_1BBFDB42C(0, &qword_1ED69BB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E4B8], v9);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v146 - v28;
  v30 = sub_1BC089880();
  v31 = *(void (***)(char *, uint64_t))(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30);
  v153 = (char *)&v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v167 = (char *)&v146 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v146 - v37;
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v146 - v39;
  v41 = sub_1BC089A0C();
  v42 = a2;
  sub_1BC089B8C();
  v43 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v29, 1, v41) == 1)
  {
    sub_1BBFEF208((uint64_t)v29, &qword_1ED69BB58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E4B8]);
    v44 = (char *)v163;
    sub_1BC089D9C();
    v45 = v42;
    v46 = sub_1BC089DD8();
    v47 = sub_1BC08A660();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v169 = swift_slowAlloc();
      v176 = v169;
      *(_DWORD *)v48 = 136315394;
      v49 = sub_1BC08AC9C();
      v173 = sub_1BBFDE0F8(v49, v50, &v176);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      v51 = objc_msgSend(v45, sel_uniqueIdentifier);
      v52 = sub_1BC08A3C0();
      v54 = v53;

      v173 = sub_1BBFDE0F8(v52, v54, &v176);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v46, v47, "[%s]: Highlight %s has no data visualization kind; leaving it alone",
        (uint8_t *)v48,
        0x16u);
      v55 = v169;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v55, -1, -1);
      MEMORY[0x1BCCE9C40](v48, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v171 + 8))(v44, v172);
    return 1;
  }
  v156 = v169 + 16;
  sub_1BC089A00();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v41);
  v149 = v31[4];
  ((void (*)(char *, char *, uint64_t))v149)(v40, v38, v30);
  v56 = v25;
  sub_1BC089D9C();
  v151 = v31[2];
  ((void (*)(char *, char *, uint64_t))v151)(v167, v40, v30);
  v57 = v158;
  sub_1BC0568BC(v168, v158);
  v58 = v42;
  v59 = sub_1BC089DD8();
  v150 = sub_1BC08A654();
  v60 = os_log_type_enabled(v59, (os_log_type_t)v150);
  v165 = v30;
  v163 = v31;
  v157 = v40;
  v152 = v58;
  if (v60)
  {
    v148 = v59;
    v146 = v56;
    v61 = swift_slowAlloc();
    v147 = swift_slowAlloc();
    v176 = v147;
    *(_DWORD *)v61 = 136315906;
    v62 = sub_1BC08AC9C();
    v173 = sub_1BBFDE0F8(v62, v63, &v176);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2080;
    v64 = objc_msgSend(v58, sel_uniqueIdentifier);
    v65 = v57;
    v66 = sub_1BC08A3C0();
    v68 = v67;

    v173 = sub_1BBFDE0F8(v66, v68, &v176);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 22) = 2080;
    v69 = v167;
    v70 = sub_1BC089874();
    v173 = sub_1BBFDE0F8(v70, v71, &v176);
    v72 = v163;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    v73 = v72[1];
    v74 = v165;
    v73(v69, v165);
    *(_WORD *)(v61 + 32) = 2080;
    v75 = v154;
    sub_1BC0568BC(v65, v154);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v72[6])(v75, 1, v74) == 1)
    {
      v76 = v165;
      sub_1BBFEF208(v75, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
      v77 = 0xE300000000000000;
      v78 = 7104878;
    }
    else
    {
      v78 = sub_1BC089874();
      v77 = v82;
      v76 = v165;
      ((void (*)(uint64_t))v73)(v75);
    }
    v83 = v146;
    v173 = sub_1BBFDE0F8(v78, v77, &v176);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    sub_1BBFEF208(v65, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
    v84 = v148;
    _os_log_impl(&dword_1BBFD7000, v148, (os_log_type_t)v150, "[%s]: Comparing highlight %s DVK %s to previous of kind %s", (uint8_t *)v61, 0x2Au);
    v85 = v147;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v85, -1, -1);
    MEMORY[0x1BCCE9C40](v61, -1, -1);

    v81 = *(void (**)(char *, uint64_t))(v171 + 8);
    v81(v83, v172);
    v31 = v163;
    v40 = v157;
    v80 = v76;
  }
  else
  {

    v73 = v31[1];
    v80 = v165;
    v73(v167, v165);
    sub_1BBFEF208(v57, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);

    v81 = *(void (**)(char *, uint64_t))(v171 + 8);
    v81(v56, v172);
  }
  v86 = v160;
  ((void (*)(os_log_t, char *, uint64_t))v151)(v160, v40, v80);
  ((void (*)(os_log_t, _QWORD, uint64_t, uint64_t))v31[7])(v86, 0, 1, v80);
  v87 = v161;
  v88 = v161 + *(int *)(v159 + 48);
  sub_1BC0568BC((uint64_t)v86, v161);
  sub_1BC0568BC(v168, v88);
  v89 = v31[6];
  v90 = v80;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v89)(v87, 1, v80) != 1)
  {
    v92 = v155;
    sub_1BC0568BC(v87, v155);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v89)(v88, 1, v80) != 1)
    {
      v91 = (unint64_t)v153;
      ((void (*)(char *, uint64_t, uint64_t))v149)(v153, v88, v90);
      v93 = v92;
      v94 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180];
      sub_1BBFDA9C0(&qword_1ED69BB20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], MEMORY[0x1E0D2E190]);
      v95 = sub_1BC08A3A8();
      v73((char *)v91, v90);
      sub_1BBFEF208((uint64_t)v86, &qword_1ED69BB38, v94);
      v73((char *)v93, v90);
      sub_1BBFEF208(v87, &qword_1ED69BB38, v94);
      LODWORD(v91) = v95 ^ 1;
      goto LABEL_19;
    }
    sub_1BBFEF208((uint64_t)v86, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
    v73((char *)v92, v80);
    goto LABEL_17;
  }
  sub_1BBFEF208((uint64_t)v86, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v89)(v88, 1, v80) != 1)
  {
LABEL_17:
    sub_1BBFE1BD4(v87, (uint64_t (*)(_QWORD))sub_1BC056844);
    LODWORD(v91) = 1;
    goto LABEL_19;
  }
  sub_1BBFEF208(v87, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180]);
  LODWORD(v91) = 0;
LABEL_19:
  v96 = v152;
  v97 = sub_1BC089BC8();
  swift_beginAccess();
  v98 = swift_bridgeObjectRetain();
  v99 = sub_1BC04C838(v98, v97);
  swift_bridgeObjectRelease();
  v100 = v164;
  sub_1BC089D9C();
  v101 = v96;
  swift_retain_n();
  v102 = v101;
  v103 = sub_1BC089DD8();
  v104 = sub_1BC08A654();
  v105 = v104;
  if (os_log_type_enabled(v103, v104))
  {
    v106 = swift_slowAlloc();
    v161 = swift_slowAlloc();
    v175 = v161;
    *(_DWORD *)v106 = 136315906;
    v160 = v103;
    v107 = sub_1BC08AC9C();
    v173 = sub_1BBFDE0F8(v107, v108, &v175);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 12) = 2080;
    v109 = objc_msgSend(v102, sel_uniqueIdentifier);
    v110 = sub_1BC08A3C0();
    LODWORD(v159) = v105;
    v111 = v110;
    v167 = (char *)v99;
    v113 = v112;

    v173 = sub_1BBFDE0F8(v111, v113, &v175);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 22) = 2080;
    sub_1BC089BC8();
    LODWORD(v168) = v91;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
    sub_1BC008B60(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    v114 = sub_1BC08A558();
    v116 = v115;
    v99 = (uint64_t)v167;
    swift_bridgeObjectRelease();
    v173 = sub_1BBFDE0F8(v114, v116, &v175);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 32) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v117 = sub_1BC08A558();
    v91 = v118;
    swift_bridgeObjectRelease();
    v174 = sub_1BBFDE0F8(v117, v91, &v175);
    sub_1BC08A7EC();
    swift_release_n();
    LOBYTE(v91) = v168;
    swift_bridgeObjectRelease();
    v119 = v160;
    _os_log_impl(&dword_1BBFD7000, v160, (os_log_type_t)v159, "[%s]: Highlight %s has HKTypes %s compared to existing pool of %s", (uint8_t *)v106, 0x2Au);
    v120 = v161;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v120, -1, -1);
    MEMORY[0x1BCCE9C40](v106, -1, -1);

    v81 = *(void (**)(char *, uint64_t))(v171 + 8);
    v81(v164, v172);
  }
  else
  {

    swift_release_n();
    v81(v100, v172);
  }
  v121 = v166;
  if ((v99 & 0xC000000000000001) != 0)
    v122 = sub_1BC08A8A0();
  else
    v122 = *(_QWORD *)(v99 + 16);
  swift_bridgeObjectRelease();
  v79 = v91 & (v122 != 0);
  sub_1BC089D9C();
  v123 = v102;
  v124 = v162;
  v125 = v123;
  v126 = v124;
  v127 = sub_1BC089DD8();
  v128 = sub_1BC08A678();
  v129 = v128;
  if (os_log_type_enabled(v127, v128))
  {
    v130 = swift_slowAlloc();
    LODWORD(v169) = v129;
    v131 = v130;
    v168 = swift_slowAlloc();
    v175 = v168;
    *(_DWORD *)v131 = 136315906;
    v132 = sub_1BC08AC9C();
    v174 = sub_1BBFDE0F8(v132, v133, &v175);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v131 + 12) = 2080;
    v134 = objc_msgSend(v125, sel_uniqueIdentifier);
    v135 = sub_1BC08A3C0();
    v137 = v136;

    v174 = sub_1BBFDE0F8(v135, v137, &v175);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v131 + 22) = 2080;
    v138 = objc_msgSend(v126, sel_uniqueIdentifier);
    v139 = sub_1BC08A3C0();
    v141 = v140;

    v174 = sub_1BBFDE0F8(v139, v141, &v175);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v131 + 32) = 2080;
    if ((_DWORD)v79)
      v142 = 5457241;
    else
      v142 = 20302;
    if ((_DWORD)v79)
      v143 = 0xE300000000000000;
    else
      v143 = 0xE200000000000000;
    v174 = sub_1BBFDE0F8(v142, v143, &v175);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v127, (os_log_type_t)v169, "[%s]: Highlight %s eligibility for placement after %s: %s", (uint8_t *)v131, 0x2Au);
    v144 = v168;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v144, -1, -1);
    MEMORY[0x1BCCE9C40](v131, -1, -1);

    (*(void (**)(char *, uint64_t))(v171 + 8))(v166, v172);
  }
  else
  {

    v81(v121, v172);
  }
  v163[1](v157, v165);
  return v79;
}

uint64_t sub_1BC05178C(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1BC053A0C(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_1BC08A4E0();
      return v10;
    }
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BC05186C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1BC08A864();
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
    sub_1BC008B60(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    sub_1BC08A588();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BBFE2D28();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_1BBFF3190(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC08A8C4())
      {
        sub_1BBFDF744(0, (unint64_t *)&qword_1ED69D890);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1BC051B28(void **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  os_log_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  uint64_t v92;
  os_log_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100;
  uint64_t v101[3];

  v6 = sub_1BC089DE4();
  v98 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v92 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v92 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v92 - v16;
  v18 = *a1;
  v19 = sub_1BC089BC8();
  v20 = (void *)sub_1BC04CCC0(v19, sub_1BC08082C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1BC0805C8);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    sub_1BC089D9C();
    v43 = v18;
    v44 = sub_1BC089DD8();
    v45 = sub_1BC08A660();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v101[0] = v47;
      v97 = v6;
      *(_DWORD *)v46 = 136446210;
      v96 = (uint64_t)(v46 + 4);
      v48 = objc_msgSend(v43, sel_uniqueIdentifier);
      v49 = sub_1BC08A3C0();
      v51 = v50;

      v99[0] = sub_1BBFDE0F8(v49, v51, v101);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v44, v45, "Ignoring ranked app that has no object type %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v47, -1, -1);
      MEMORY[0x1BCCE9C40](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v17, v97);
      return 0;
    }

    v89 = *(void (**)(char *, uint64_t))(v98 + 8);
    v90 = v17;
LABEL_15:
    v89(v90, v6);
    return 0;
  }
  v21 = objc_msgSend(v20, sel_hk_metadataValueDisplayTypeInStore_, a2);
  if (!v21)
  {
    sub_1BC089D9C();
    v52 = v18;
    v53 = v20;
    v54 = v52;
    v55 = v53;
    v56 = sub_1BC089DD8();
    v57 = sub_1BC08A660();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v101[0] = v96;
      *(_DWORD *)v58 = 136446466;
      v97 = v6;
      v59 = objc_msgSend(v54, sel_uniqueIdentifier);
      v60 = sub_1BC08A3C0();
      v62 = v61;

      v99[0] = sub_1BBFDE0F8(v60, v62, v101);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      v63 = objc_msgSend(v55, sel_identifier);
      v64 = sub_1BC08A3C0();
      v66 = v65;

      v99[0] = sub_1BBFDE0F8(v64, v66, v101);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v56, v57, "Ignoring ranked app %{public}s that has an object type %{public}s with no display type", (uint8_t *)v58, 0x16u);
      v67 = v96;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v67, -1, -1);
      MEMORY[0x1BCCE9C40](v58, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v15, v97);
      return 0;
    }

    v89 = *(void (**)(char *, uint64_t))(v98 + 8);
    v90 = v15;
    goto LABEL_15;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_categoryIdentifier);
  swift_beginAccess();
  if (sub_1BC04CA64((uint64_t)v23, *a3))
  {
    sub_1BC089D9C();
    v24 = v18;
    v25 = v22;
    v26 = v24;
    v27 = v25;
    v28 = sub_1BC089DD8();
    v29 = sub_1BC08A678();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      LODWORD(v95) = v30;
      v32 = v31;
      v96 = swift_slowAlloc();
      v99[0] = v96;
      *(_DWORD *)v32 = 136315394;
      v97 = v6;
      v33 = objc_msgSend(v26, sel_uniqueIdentifier);
      v34 = sub_1BC08A3C0();
      v36 = v35;

      v100 = sub_1BBFDE0F8(v34, v36, v99);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      v37 = objc_msgSend(v27, sel_displayCategory);
      v38 = objc_msgSend(v37, sel_categoryName);

      v39 = sub_1BC08A3C0();
      v41 = v40;

      v100 = sub_1BBFDE0F8(v39, v41, v99);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v28, (os_log_type_t)v95, "Ignoring ranked app that has already been picked %s with category %{public}s", (uint8_t *)v32, 0x16u);
      v42 = v96;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v42, -1, -1);
      MEMORY[0x1BCCE9C40](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v9, v97);
      return 0;
    }

    v89 = *(void (**)(char *, uint64_t))(v98 + 8);
    v90 = v9;
    goto LABEL_15;
  }
  sub_1BC089D9C();
  v68 = v18;
  v69 = v22;
  v70 = v68;
  v71 = v69;
  v72 = sub_1BC089DD8();
  v73 = sub_1BC08A678();
  v74 = v73;
  if (os_log_type_enabled(v72, v73))
  {
    v75 = swift_slowAlloc();
    v94 = v74;
    v76 = v75;
    v95 = swift_slowAlloc();
    v99[0] = v95;
    *(_DWORD *)v76 = 136446466;
    v97 = v6;
    v77 = objc_msgSend(v70, sel_uniqueIdentifier);
    v78 = sub_1BC08A3C0();
    v93 = v72;
    v79 = v78;
    v96 = (uint64_t)v23;
    v81 = v80;

    v100 = sub_1BBFDE0F8(v79, v81, v99);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2082;
    v82 = objc_msgSend(v71, sel_displayCategory);
    v83 = objc_msgSend(v82, sel_categoryName);

    v84 = sub_1BC08A3C0();
    v86 = v85;

    v23 = (id)v96;
    v100 = sub_1BBFDE0F8(v84, v86, v99);
    sub_1BC08A7EC();

    swift_bridgeObjectRelease();
    v87 = v93;
    _os_log_impl(&dword_1BBFD7000, v93, (os_log_type_t)v94, "Adding app %{public}s with category %{public}s to curated list", (uint8_t *)v76, 0x16u);
    v88 = v95;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v88, -1, -1);
    MEMORY[0x1BCCE9C40](v76, -1, -1);

    (*(void (**)(char *, uint64_t))(v98 + 8))(v12, v97);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v98 + 8))(v12, v6);
  }
  swift_beginAccess();
  sub_1BBFF3E6C(&v100, (uint64_t)v23);
  swift_endAccess();

  return 1;
}

uint64_t sub_1BC05249C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t result;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BC0892A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_managedObjectContext);
  if (v6)
  {
    v7 = v6;
    sub_1BC089B98();
    v8 = sub_1BC0895E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v8 == 4)
    {

      return 0;
    }
    else
    {
      sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
      sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BC08B960;
      v11 = sub_1BC089AFC();
      v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E5A8];
      *(_QWORD *)(v10 + 56) = v11;
      *(_QWORD *)(v10 + 64) = sub_1BBFDA9C0(&qword_1ED69AC88, v12, MEMORY[0x1E0DEFD08]);
      *(_QWORD *)(v10 + 32) = v1;
      v13 = v1;
      v14 = sub_1BC0895F8();
      v16 = v15;
      *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 104) = sub_1BBFDF700();
      *(_QWORD *)(v10 + 72) = v14;
      *(_QWORD *)(v10 + 80) = v16;
      v17 = (void *)sub_1BC08A5E8();
      sub_1BC0892BC();
      v9 = (void *)sub_1BC08988C();
      sub_1BC0895F8();
      v18 = (void *)sub_1BC08A3B4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setIdentifier_, v18);

      objc_msgSend(v9, sel_setFeed_, v13);
    }
    return (uint64_t)v9;
  }
  else
  {
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC05271C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_1BC0895F8();
  v5 = v4;
  if (v3 == sub_1BC0895F8() && v5 == v6)
  {
    v9 = 0;
LABEL_17:
    swift_bridgeObjectRelease_n();
    return v9;
  }
  v8 = sub_1BC08AB94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = 0;
  if ((v8 & 1) == 0)
  {
    v10 = v2 - 1;
    while (1)
    {
      if (v10 == v9)
        return 0;
      v11 = sub_1BC0895F8();
      v13 = v12;
      if (v11 == sub_1BC0895F8() && v13 == v14)
        break;
      v16 = sub_1BC08AB94();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v9;
      if ((v16 & 1) != 0)
        return v9;
    }
    ++v9;
    goto LABEL_17;
  }
  return v9;
}

uint64_t static SummaryTabFeedPopulationManager.highlightsFeedStalenessTimeout.getter()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BBFDB42C(0, &qword_1ED69DAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v16 - v2;
  sub_1BBFDB42C(0, &qword_1ED69DAC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - v5;
  sub_1BBFDA924(0, &qword_1ED69BA08, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0D2D650]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v16 - v10;
  if (qword_1ED69B888 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED69BA28);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_1BC0892EC();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (__OFSUB__(0, v16[1]))
  {
    __break(1u);
  }
  else
  {
    sub_1BC089094();
    v14 = sub_1BC0890AC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
    v15 = sub_1BC0890D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
    return sub_1BC088ED8();
  }
  return result;
}

uint64_t static SummaryTabFeedPopulationManager.getMoreFromHealthMaximumItemsCount.getter()
{
  return 4;
}

uint64_t static SummaryTabFeedPopulationManager.articlesMaximumItemsCount.getter()
{
  return 4;
}

uint64_t sub_1BC052AD8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BBFDA924(0, &qword_1ED69BA08, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0D2D650]);
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1ED69BA28);
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED69BA28);
  sub_1BC08A3C0();
  sub_1BBFDF744(0, &qword_1ED69DB90);
  sub_1BC08A69C();
  return sub_1BC089304();
}

double static SummaryTabFeedPopulationManager.highlightsSectionTimeout.getter()
{
  return 10.0;
}

uint64_t sub_1BC052BB8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC053A9C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BC052C30(v6);
  return sub_1BC08A9B4();
}

void sub_1BC052C30(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void **v110;
  uint64_t v111;

  v3 = a1[1];
  v4 = sub_1BC08AB58();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_1BC053390(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v104 = v4;
  v99 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v111 = MEMORY[0x1E0DEE9D8];
    v110 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        v93 = *v99;
        do
        {
          v94 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v93)
            goto LABEL_139;
          v95 = *(_QWORD *)&v8[16 * v94 + 32];
          v96 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1BC053480((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), v93 + 8 * v96, v110);
          if (v1)
            break;
          if (v96 < v95)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1BC0539F8((uint64_t)v8);
          if (v94 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v97 = &v8[16 * v94 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v8 + 2);
          if (v11 > v98)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((_QWORD *)v8 + 2) = v98 - 1;
          v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC08A4E0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_1BC089C4C();
    v7 = sub_1BC08A51C();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v110 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v111 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v100 = *a1 - 8;
  v101 = *a1 + 16;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v107 = v3;
  while (1)
  {
    v12 = v9++;
    v108 = v12;
    if (v9 < v3)
    {
      v13 = *(void **)(v10 + 8 * v12);
      v14 = *(id *)(v10 + 8 * v9);
      v15 = v13;
      v105 = objc_msgSend(v14, sel_sortOrder);
      v16 = objc_msgSend(v15, sel_sortOrder);

      v3 = v107;
      v9 = v12 + 2;
      if (v12 + 2 < v107)
      {
        v102 = v8;
        v17 = (id *)(v101 + 8 * v12);
        while (1)
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v20 = v18;
          v21 = objc_msgSend(v19, sel_sortOrder);
          v22 = objc_msgSend(v20, sel_sortOrder);

          if ((uint64_t)v105 < (uint64_t)v16 == (uint64_t)v21 >= (uint64_t)v22)
            break;
          ++v9;
          ++v17;
          v3 = v107;
          if (v107 == v9)
          {
            v9 = v107;
            v8 = v102;
            goto LABEL_22;
          }
        }
        v8 = v102;
        v3 = v107;
LABEL_22:
        v12 = v108;
      }
      if ((uint64_t)v105 < (uint64_t)v16)
      {
        if (v9 < v12)
          goto LABEL_133;
        if (v12 < v9)
        {
          v23 = (uint64_t *)(v100 + 8 * v9);
          v24 = v9;
          v25 = v12;
          v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10)
                goto LABEL_138;
              v27 = *v26;
              *v26 = *v23;
              *v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v104)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_1BC05379C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v40 = *((_QWORD *)v8 + 2);
    v39 = *((_QWORD *)v8 + 3);
    v11 = v40 + 1;
    if (v40 >= v39 >> 1)
      v8 = sub_1BC05379C((char *)(v39 > 1), v40 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v41 = v8 + 32;
    v42 = &v8[16 * v40 + 32];
    *(_QWORD *)v42 = v12;
    *((_QWORD *)v42 + 1) = v9;
    if (v40)
    {
      v109 = v9;
      while (1)
      {
        v43 = v11 - 1;
        if (v11 >= 4)
        {
          v48 = &v41[16 * v11];
          v49 = *((_QWORD *)v48 - 8);
          v50 = *((_QWORD *)v48 - 7);
          v54 = __OFSUB__(v50, v49);
          v51 = v50 - v49;
          if (v54)
            goto LABEL_115;
          v53 = *((_QWORD *)v48 - 6);
          v52 = *((_QWORD *)v48 - 5);
          v54 = __OFSUB__(v52, v53);
          v46 = v52 - v53;
          v47 = v54;
          if (v54)
            goto LABEL_116;
          v55 = v11 - 2;
          v56 = &v41[16 * v11 - 32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v54 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v54)
            goto LABEL_118;
          v54 = __OFADD__(v46, v59);
          v60 = v46 + v59;
          if (v54)
            goto LABEL_121;
          if (v60 >= v51)
          {
            v78 = &v41[16 * v43];
            v80 = *(_QWORD *)v78;
            v79 = *((_QWORD *)v78 + 1);
            v54 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            if (v54)
              goto LABEL_125;
            v71 = v46 < v81;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v72 = *((_QWORD *)v8 + 4);
            v73 = *((_QWORD *)v8 + 5);
            v54 = __OFSUB__(v73, v72);
            v65 = v73 - v72;
            v66 = v54;
            goto LABEL_80;
          }
          v45 = *((_QWORD *)v8 + 4);
          v44 = *((_QWORD *)v8 + 5);
          v54 = __OFSUB__(v44, v45);
          v46 = v44 - v45;
          v47 = v54;
        }
        if ((v47 & 1) != 0)
          goto LABEL_117;
        v55 = v11 - 2;
        v61 = &v41[16 * v11 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_120;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_123;
        if (__OFADD__(v65, v70))
          goto LABEL_124;
        if (v65 + v70 >= v46)
        {
          v71 = v46 < v70;
LABEL_86:
          if (v71)
            v43 = v55;
          goto LABEL_88;
        }
LABEL_80:
        if ((v66 & 1) != 0)
          goto LABEL_119;
        v74 = &v41[16 * v43];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v54 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v54)
          goto LABEL_122;
        if (v77 < v65)
          goto LABEL_14;
LABEL_88:
        v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v83 = v10;
        if (!v10)
          goto LABEL_137;
        v84 = v8;
        v85 = &v41[16 * v82];
        v86 = *(_QWORD *)v85;
        v87 = v41;
        v88 = v43;
        v89 = &v41[16 * v43];
        v90 = *((_QWORD *)v89 + 1);
        v91 = v83;
        sub_1BC053480((id *)(v83 + 8 * *(_QWORD *)v85), (id *)(v83 + 8 * *(_QWORD *)v89), v83 + 8 * v90, v110);
        if (v1)
          goto LABEL_109;
        if (v90 < v86)
          goto LABEL_112;
        if (v88 > *((_QWORD *)v84 + 2))
          goto LABEL_113;
        *(_QWORD *)v85 = v86;
        *(_QWORD *)&v87[16 * v82 + 8] = v90;
        v92 = *((_QWORD *)v84 + 2);
        if (v88 >= v92)
          goto LABEL_114;
        v8 = v84;
        v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        v41 = v87;
        *((_QWORD *)v84 + 2) = v92 - 1;
        v10 = v91;
        v9 = v109;
        if (v92 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v107;
    if (v9 >= v107)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v104))
    goto LABEL_134;
  if (v12 + v104 >= v3)
    v28 = v3;
  else
    v28 = v12 + v104;
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      v103 = v8;
      v29 = v100 + 8 * v9;
      v106 = v28;
      do
      {
        v30 = *(void **)(v10 + 8 * v9);
        v31 = v12;
        v32 = v29;
        do
        {
          v33 = *(void **)v32;
          v34 = v30;
          v35 = v33;
          v36 = objc_msgSend(v34, sel_sortOrder);
          v37 = objc_msgSend(v35, sel_sortOrder);

          if ((uint64_t)v36 >= (uint64_t)v37)
            break;
          if (!v10)
            goto LABEL_136;
          v38 = *(void **)v32;
          v30 = *(void **)(v32 + 8);
          *(_QWORD *)v32 = v30;
          *(_QWORD *)(v32 + 8) = v38;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        v12 = v108;
      }
      while (v9 != v106);
      v9 = v106;
      v8 = v103;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_1BC08AA68();
  __break(1u);
}

void sub_1BC053390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v17 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, sel_sortOrder);
      v13 = objc_msgSend(v11, sel_sortOrder);

      if ((uint64_t)v12 >= (uint64_t)v13)
      {
LABEL_4:
        ++v4;
        v6 = v17 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v14 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BC053480(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v4;
  id *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id *v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t result;
  id *v32;
  id *v35;
  char *v36;
  void **v37;
  id *v38;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v38 = __src;
  v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v22 = &a4[v11];
      v36 = (char *)v22;
      v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v23 = (id *)(a3 - 8);
        v24 = v4;
        v32 = v5;
        do
        {
          v35 = v4;
          v25 = v23 + 1;
          v26 = *--v24;
          v27 = *(v22 - 1);
          v28 = v26;
          v29 = objc_msgSend(v27, sel_sortOrder);
          v30 = objc_msgSend(v28, sel_sortOrder);

          if ((uint64_t)v29 >= (uint64_t)v30)
          {
            v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22)
              *v23 = *(v22 - 1);
            v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35)
              *v23 = *v24;
            v38 = v24;
          }
          if (v24 <= v32)
            break;
          --v23;
          v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v12 = &a4[v8];
    v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v13 = a4;
      do
      {
        v14 = v5;
        v15 = *v13;
        v16 = *v4;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_sortOrder);
        v19 = objc_msgSend(v17, sel_sortOrder);

        if ((uint64_t)v18 >= (uint64_t)v19)
        {
          v21 = v14;
          if (v14 != v13)
            *v14 = *v13;
          v37 = ++v13;
          v20 = v4;
        }
        else
        {
          v20 = v4 + 1;
          v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4)
            *v14 = *v4;
        }
        v5 = v21 + 1;
        if (v13 >= v12)
          break;
        v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      v38 = v5;
    }
LABEL_43:
    sub_1BC0538A8((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

char *sub_1BC05379C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BBFDB42C(0, &qword_1ED69CA28, (uint64_t (*)(uint64_t))sub_1BC055C30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BC0538A8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BC08AAD4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1BC053950(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BC08AAD4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BC0539F8(uint64_t a1)
{
  return sub_1BC05379C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1BC053A0C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC08AA80();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCE9358);
}

uint64_t sub_1BC053A74(uint64_t a1)
{
  return sub_1BBFE4908(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC053A88(uint64_t a1)
{
  return sub_1BBFE478C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1BC053A9C()
{
  JUMPOUT(0x1BCCE9520);
}

void sub_1BC053AB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char *v16;
  unint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  const void *v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _OWORD v45[2];
  __int128 v46;
  uint64_t v47;
  _BYTE v48[32];

  sub_1BC055C8C();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v10 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
  }
  else
  {
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = (_QWORD *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v14 = (2 * (v13 >> 3)) | 1;
    v11[2] = v10;
    v11[3] = v14;
  }
  v15 = a1;
  swift_retain();
  sub_1BC08A5F4();

  v16 = &v9[*(int *)(v7 + 44)];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  if (v10 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v17 = v14 >> 1;
  v18 = v11 + 4;
  if (v10)
  {
    v17 -= v10;
    sub_1BC088F14();
    sub_1BBFDA9C0(&qword_1ED69BA78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      sub_1BC08A7E0();
      v19 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
      sub_1BC055D3C((uint64_t)v48, (uint64_t)&v46);
      if (!v47)
        goto LABEL_36;
      sub_1BC00BE28(&v46, v45);
      v19(&v44, v45);
      v20 = v44;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      *v18++ = v20;
    }
    while (--v10);
  }
  v21 = sub_1BC088F14();
  v22 = sub_1BBFDA9C0(&qword_1ED69BA78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1BC08A7E0();
  v23 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
  sub_1BC055D3C((uint64_t)v48, (uint64_t)&v46);
  if (v47)
  {
    v42 = MEMORY[0x1E0DEE9B0] + 8;
    v43 = v9;
    while (1)
    {
      sub_1BC00BE28(&v46, v45);
      v23(&v44, v45);
      v24 = v44;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      if (!v17)
      {
        v25 = v11[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_33;
        v26 = v22;
        v27 = v21;
        v28 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v28 <= 1)
          v29 = 1;
        else
          v29 = v28;
        sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, v42, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v30 = (_QWORD *)swift_allocObject();
        v31 = _swift_stdlib_malloc_size(v30);
        v32 = v31 - 32;
        if (v31 < 32)
          v32 = v31 - 25;
        v33 = v32 >> 3;
        v30[2] = v29;
        v30[3] = (2 * (v32 >> 3)) | 1;
        v34 = (unint64_t)(v30 + 4);
        v35 = v11[3] >> 1;
        if (v11[2])
        {
          v36 = v11 + 4;
          if (v30 != v11 || v34 >= (unint64_t)v36 + 8 * v35)
            memmove(v30 + 4, v36, 8 * v35);
          v11[2] = 0;
        }
        v18 = (_QWORD *)(v34 + 8 * v35);
        v17 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        swift_release();
        v11 = v30;
        v21 = v27;
        v22 = v26;
        v9 = v43;
      }
      v37 = __OFSUB__(v17--, 1);
      if (v37)
        break;
      *v18++ = v24;
      sub_1BC08A7E0();
      v23 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v16;
      sub_1BC055D3C((uint64_t)v48, (uint64_t)&v46);
      if (!v47)
        goto LABEL_28;
    }
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_28:
  sub_1BBFE1BD4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC055C8C);
  v38 = v11[3];
  if (v38 >= 2)
  {
    v39 = v38 >> 1;
    v37 = __OFSUB__(v39, v17);
    v40 = v39 - v17;
    if (v37)
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
    v11[2] = v40;
  }
}

uint64_t sub_1BC053E60(unint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC08AA80())
  {
    v5 = 0;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE934C](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      if ((a2(v5, v6) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC053F6C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_managedObjectContext);
  if (v1)
  {
    v2 = v1;
    v3 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
    v5 = v4;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBD8, (uint64_t (*)(uint64_t))sub_1BBFE8B08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BC08B960;
    v7 = sub_1BC089AFC();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E5A8];
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 64) = sub_1BBFDA9C0(&qword_1ED69AC88, v8, MEMORY[0x1E0DEFD08]);
    *(_QWORD *)(v6 + 32) = v0;
    *(_QWORD *)(v6 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 104) = sub_1BBFDF700();
    *(_QWORD *)(v6 + 72) = v3;
    *(_QWORD *)(v6 + 80) = v5;
    v9 = v0;
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC08A5E8();
    sub_1BC0892BC();
    v11 = (void *)sub_1BC08988C();
    v12 = (void *)sub_1BC08A3B4();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setIdentifier_, v12);

    objc_msgSend(v11, sel_setFeed_, v9);
    return (uint64_t)v11;
  }
  else
  {
    result = sub_1BC08AA74();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC054178(void **__src, id *a2, id *a3, void **__dst, uint64_t a5)
{
  void **v5;
  id *v6;
  id *v7;
  id *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  id *v36;
  id *v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  void **v49;
  id *v50;
  void **v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void **v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v81;
  uint64_t result;
  uint64_t v83;
  id v85;
  void **v86;
  void **v87;
  id *v88;
  id *v89;
  void **v90;
  void **v91;
  id *v92;
  id *v93;
  void **v94;
  void **v95;
  id *v96;

  v5 = __dst;
  v6 = a3;
  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = (char *)a3 - (char *)a2;
  v13 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v13 = (char *)a3 - (char *)a2;
  v14 = v13 >> 3;
  v96 = __src;
  v95 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7)
      goto LABEL_90;
    if (__dst != a2 || &a2[v14] <= __dst)
      memmove(__dst, a2, 8 * v14);
    v49 = &v5[v14];
    v94 = v49;
    v96 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_89:
      sub_1BC0538A8((void **)&v96, (const void **)&v95, &v94);
      return 1;
    }
    v50 = v7;
    v89 = v8;
    v91 = v5;
    while (1)
    {
      v93 = v6;
      v87 = v49;
      v51 = v49 - 1;
      v52 = *--v50;
      v85 = *(v49 - 1);
      v53 = v52;
      v54 = objc_msgSend(v53, sel_identifier);
      v55 = sub_1BC08A3C0();
      v57 = v56;

      if (MEMORY[0x1BCCE7FC0](v55, v57) == 4)
        goto LABEL_83;
      v58 = *(_QWORD *)(a5 + 16);
      if (!v58)
        goto LABEL_83;
      v59 = sub_1BC0895F8();
      v61 = v60;
      if (v59 == sub_1BC0895F8() && v61 == v62)
      {
        v65 = 0;
LABEL_63:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v64 = sub_1BC08AB94();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          v75 = 0;
          v83 = v58 - 1;
          while (v83 != v75)
          {
            v65 = v75 + 1;
            v76 = sub_1BC0895F8();
            v78 = v77;
            if (v76 == sub_1BC0895F8() && v78 == v79)
              goto LABEL_63;
            v81 = sub_1BC08AB94();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v75 = v65;
            if ((v81 & 1) != 0)
              goto LABEL_64;
          }
LABEL_83:

          --v6;
          v49 = v87;
          if (v93 != v7)
            goto LABEL_85;
          goto LABEL_84;
        }
        v65 = 0;
      }
LABEL_64:
      v66 = objc_msgSend(v85, sel_identifier);
      v67 = sub_1BC08A3C0();
      v69 = v68;

      v70 = MEMORY[0x1BCCE7FC0](v67, v69);
      if (v70 == 4)
      {

        v71 = v6--;
        v49 = v87;
LABEL_66:
        v94 = v51;
        if (v71 < v49 || v6 >= v49 || v71 != v49)
          *v6 = *v51;
        v50 = v7;
        v49 = v51;
        goto LABEL_87;
      }
      v72 = sub_1BC05271C(v70, a5);
      v74 = v73;

      v71 = v6--;
      v49 = v87;
      if ((v74 & 1) != 0 || v72 >= v65)
        goto LABEL_66;
      if (v93 != v7)
      {
LABEL_85:
        *v6 = *v50;
        goto LABEL_86;
      }
LABEL_84:
      if (v6 >= v7)
        goto LABEL_85;
LABEL_86:
      v96 = v50;
LABEL_87:
      if (v50 > v89)
      {
        v7 = v50;
        if (v49 > v91)
          continue;
      }
      goto LABEL_89;
    }
  }
  if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
      memmove(__dst, __src, 8 * v11);
    v86 = &v5[v11];
    v94 = v86;
    if (v7 < v6 && v9 >= 8)
    {
      v92 = v6;
      while (1)
      {
        v88 = v8;
        v90 = v5;
        v15 = *v5;
        v16 = *v7;
        v17 = v15;
        v18 = objc_msgSend(v17, sel_identifier);
        v19 = sub_1BC08A3C0();
        v21 = v20;

        if (MEMORY[0x1BCCE7FC0](v19, v21) == 4)
          goto LABEL_39;
        v22 = *(_QWORD *)(a5 + 16);
        if (!v22)
          goto LABEL_39;
        v23 = sub_1BC0895F8();
        v25 = v24;
        if (v23 == sub_1BC0895F8() && v25 == v26)
        {
          v29 = 0;
LABEL_22:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v28 = sub_1BC08AB94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0)
          {
            v41 = 0;
            v42 = v22 - 1;
            while (v42 != v41)
            {
              v29 = v41 + 1;
              v43 = sub_1BC0895F8();
              v45 = v44;
              if (v43 == sub_1BC0895F8() && v45 == v46)
                goto LABEL_22;
              v48 = sub_1BC08AB94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v41 = v29;
              if ((v48 & 1) != 0)
                goto LABEL_23;
            }
LABEL_39:

            v35 = v92;
LABEL_40:
            v37 = v7 + 1;
            v36 = v88;
            v5 = v90;
            if (v88 < v7 || v88 >= v37 || v88 != v7)
              *v88 = *v7;
            goto LABEL_44;
          }
          v29 = 0;
        }
LABEL_23:
        v30 = objc_msgSend(v16, sel_identifier);
        v31 = sub_1BC08A3C0();
        v33 = v32;

        v34 = MEMORY[0x1BCCE7FC0](v31, v33);
        if (v34 == 4)
        {

          v35 = v92;
        }
        else
        {
          v38 = sub_1BC05271C(v34, a5);
          v40 = v39;

          v35 = v92;
          if ((v40 & 1) == 0 && v38 < v29)
            goto LABEL_40;
        }
        v36 = v88;
        if (v88 != v90)
          *v88 = *v90;
        v5 = v90 + 1;
        v95 = v90 + 1;
        v37 = v7;
LABEL_44:
        v8 = v36 + 1;
        if (v5 < v86)
        {
          v7 = v37;
          if (v37 < v35)
            continue;
        }
        v96 = v8;
        goto LABEL_89;
      }
    }
    goto LABEL_89;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

void sub_1BC0547E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v52;
  id v53;
  id v54;

  if (a3 != a2)
  {
    v5 = a3;
    v6 = *a4;
LABEL_6:
    v7 = *(void **)(v6 + 8 * v5);
    v46 = v5;
    while (1)
    {
      v52 = v5 - 1;
      v8 = *(void **)(v6 + 8 * (v5 - 1));
      v54 = v7;
      v53 = v8;
      v9 = objc_msgSend(v53, sel_identifier);
      v10 = sub_1BC08A3C0();
      v12 = v11;

      if (MEMORY[0x1BCCE7FC0](v10, v12) == 4)
        goto LABEL_33;
      v47 = *(_QWORD *)(a5 + 16);
      if (!v47)
        goto LABEL_33;
      v13 = sub_1BC0895F8();
      v15 = v14;
      if (v13 == sub_1BC0895F8() && v15 == v16)
      {
        v19 = 0;
LABEL_16:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v18 = sub_1BC08AB94();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          v29 = 0;
          while (v47 - 1 != v29)
          {
            v19 = v29 + 1;
            v30 = sub_1BC0895F8();
            v32 = v31;
            if (v30 == sub_1BC0895F8() && v32 == v33)
              goto LABEL_16;
            v35 = sub_1BC08AB94();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v29 = v19;
            if ((v35 & 1) != 0)
              goto LABEL_17;
          }
LABEL_33:

          goto LABEL_34;
        }
        v19 = 0;
      }
LABEL_17:
      v20 = objc_msgSend(v54, sel_identifier);
      v21 = sub_1BC08A3C0();
      v23 = v22;

      if (MEMORY[0x1BCCE7FC0](v21, v23) == 4)
      {
LABEL_4:

LABEL_5:
        v5 = v46 + 1;
        if (v46 + 1 == a2)
          return;
        goto LABEL_6;
      }
      v24 = sub_1BC0895F8();
      v26 = v25;
      if (v24 == sub_1BC0895F8() && v26 == v27)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v28 = sub_1BC08AB94();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          v36 = 0;
          v37 = v47;
          v50 = v47 - 1;
          if (v47 <= 1)
            v37 = 1;
          v48 = v37 - 1;
          while (1)
          {
            v38 = v36;
            if (v50 == v36)
              goto LABEL_4;
            if (v48 == v36)
            {
              __break(1u);
              goto LABEL_52;
            }
            v39 = sub_1BC0895F8();
            v41 = v40;
            if (v39 == sub_1BC0895F8() && v41 == v42)
              break;
            v44 = sub_1BC08AB94();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v36 = v38 + 1;
            if ((v44 & 1) != 0)
            {

              goto LABEL_49;
            }
          }

          swift_bridgeObjectRelease_n();
LABEL_49:
          if (v38 + 1 < v19)
            goto LABEL_34;
          goto LABEL_5;
        }

      }
      if (v19 <= 0)
        goto LABEL_5;
LABEL_34:
      if (!v6)
      {
LABEL_52:
        __break(1u);
        return;
      }
      v7 = *(void **)(v6 + 8 * v5);
      *(_QWORD *)(v6 + 8 * v5) = *(_QWORD *)(v6 + 8 * v52);
      *(_QWORD *)(v6 + 8 * v52) = v7;
      --v5;
      if (v52 == a1)
        goto LABEL_5;
    }
  }
}

uint64_t sub_1BC054BE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  char v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  char v63;
  uint64_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  char *v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  BOOL v149;
  uint64_t v150;
  char v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  uint64_t v173;
  void **v174;
  id *v175;
  id *v176;
  unint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id *v182;
  char *v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void **__dst;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  void *v206;
  id v207;
  _BOOL4 v208;
  id v209;
  char *v210;
  uint64_t v211;

  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v6 = sub_1BC08AB58();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_235;
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_1BC0547E8(0, v5, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  v187 = v6;
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_243;
  v199 = a2;
  v188 = v5;
  v196 = v2;
  v186 = a1;
  if (v5 < 2)
  {
    v211 = MEMORY[0x1E0DEE9D8];
    __dst = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v125 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v13 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_198:
      v195 = v13;
      if (v125 >= 2)
      {
        v178 = *v186;
        do
        {
          v179 = v125 - 2;
          if (v125 < 2)
            goto LABEL_229;
          if (!v178)
            goto LABEL_242;
          v180 = *(_QWORD *)&v195[16 * v179 + 32];
          v181 = *(_QWORD *)&v195[16 * v125 + 24];
          v182 = (id *)(v178 + 8 * *(_QWORD *)&v195[16 * v125 + 16]);
          swift_bridgeObjectRetain();
          sub_1BC054178((void **)(v178 + 8 * v180), v182, (id *)(v178 + 8 * v181), __dst, v199);
          if (v196)
            goto LABEL_210;
          swift_bridgeObjectRelease();
          if (v181 < v180)
            goto LABEL_231;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v195 = sub_1BC0539F8((uint64_t)v195);
          if (v179 >= *((_QWORD *)v195 + 2))
            goto LABEL_232;
          v196 = 0;
          v183 = &v195[16 * v179 + 32];
          *(_QWORD *)v183 = v180;
          *((_QWORD *)v183 + 1) = v181;
          v184 = *((_QWORD *)v195 + 2);
          if (v125 > v184)
            goto LABEL_233;
          memmove(&v195[16 * v125 + 16], &v195[16 * v125 + 32], 16 * (v184 - v125));
          *((_QWORD *)v195 + 2) = v184 - 1;
          v125 = v184 - 1;
        }
        while (v184 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v211 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BC08A4E0();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v7 >> 1;
    sub_1BC0892BC();
    v9 = sub_1BC08A51C();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v211 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v185 = *a1 - 8;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = v5;
  v198 = v12;
  while (1)
  {
    v193 = v13;
    v15 = v11 + 1;
    v197 = v11;
    if (v11 + 1 >= v14)
      goto LABEL_84;
    v16 = *(void **)(v12 + 8 * v11);
    v17 = *(id *)(v12 + 8 * v15);
    v18 = v16;
    v19 = objc_msgSend(v18, sel_identifier);
    v20 = sub_1BC08A3C0();
    v22 = v21;

    v23 = MEMORY[0x1BCCE7FC0](v20, v22);
    if (v23 == 4 || (v24 = sub_1BC05271C(v23, v199), (v25 & 1) != 0))
    {

      v11 = v197;
      v32 = v197 + 2;
      if (v197 + 2 < v14)
      {
        v208 = 1;
LABEL_21:
        v33 = v32;
        while (1)
        {
          v32 = v33;
          v35 = *(void **)(v198 + 8 * v15);
          v34 = *(id *)(v198 + 8 * v33);
          v36 = v35;
          v37 = objc_msgSend(v36, sel_identifier);
          v38 = sub_1BC08A3C0();
          v40 = v39;

          if (MEMORY[0x1BCCE7FC0](v38, v40) == 4 || !*(_QWORD *)(v199 + 16))
            goto LABEL_23;
          v200 = *(_QWORD *)(v199 + 16);
          v41 = sub_1BC0895F8();
          v43 = v42;
          v45 = v41 == sub_1BC0895F8() && v43 == v44;
          v206 = v34;
          if (v45)
          {
            v47 = 0;
LABEL_34:
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v46 = sub_1BC08AB94();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) == 0)
            {
              v56 = 0;
              v11 = v197;
              while (v200 - 1 != v56)
              {
                v47 = v56 + 1;
                v57 = sub_1BC0895F8();
                v59 = v58;
                if (v57 == sub_1BC0895F8() && v59 == v60)
                  goto LABEL_34;
                v62 = sub_1BC08AB94();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v56 = v47;
                v11 = v197;
                if ((v62 & 1) != 0)
                  goto LABEL_36;
              }
              v14 = v188;
              v34 = v206;
LABEL_23:

              if (!v208)
                goto LABEL_83;
              goto LABEL_24;
            }
            v47 = 0;
          }
          v11 = v197;
LABEL_36:
          v48 = objc_msgSend(v206, sel_identifier);
          v49 = sub_1BC08A3C0();
          v51 = v50;

          if (MEMORY[0x1BCCE7FC0](v49, v51) != 4)
          {
            v52 = sub_1BC0895F8();
            v54 = v53;
            if (v52 == sub_1BC0895F8() && v54 == v55)
            {

              swift_bridgeObjectRelease_n();
LABEL_52:
              v64 = 0;
LABEL_53:
              v11 = v197;
LABEL_54:
              v65 = v64 >= v47;
              v14 = v188;
              if (((v208 ^ v65) & 1) == 0)
                goto LABEL_70;
              goto LABEL_24;
            }
            v63 = sub_1BC08AB94();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v63 & 1) != 0)
            {

              goto LABEL_52;
            }
            v64 = 0;
            v66 = v200;
            v204 = v200 - 1;
            if (v200 <= 1)
              v66 = 1;
            v201 = v66 - 1;
            v11 = v197;
            while (v204 != v64)
            {
              if (v201 == v64)
                goto LABEL_228;
              v67 = sub_1BC0895F8();
              v69 = v68;
              if (v67 == sub_1BC0895F8() && v69 == v70)
              {

                swift_bridgeObjectRelease_n();
                ++v64;
                goto LABEL_53;
              }
              v72 = sub_1BC08AB94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              ++v64;
              v11 = v197;
              if ((v72 & 1) != 0)
              {

                goto LABEL_54;
              }
            }
          }

          v14 = v188;
          if (v208)
            goto LABEL_71;
LABEL_24:
          v33 = v32 + 1;
          v15 = v32;
          if (v32 + 1 >= v14)
          {
            ++v32;
            goto LABEL_70;
          }
        }
      }
LABEL_72:
      if (v11 < v32)
      {
        v73 = (uint64_t *)(v185 + 8 * v32);
        v74 = v32;
        v75 = v11;
        v76 = (uint64_t *)(v198 + 8 * v11);
        do
        {
          if (v75 != --v74)
          {
            if (!v198)
              goto LABEL_241;
            v77 = *v76;
            *v76 = *v73;
            *v73 = v77;
          }
          ++v75;
          --v73;
          ++v76;
        }
        while (v75 < v74);
      }
LABEL_83:
      v15 = v32;
      goto LABEL_84;
    }
    v26 = v24;
    v27 = objc_msgSend(v17, sel_identifier);
    v28 = sub_1BC08A3C0();
    v30 = v29;

    v31 = MEMORY[0x1BCCE7FC0](v28, v30);
    if (v31 == 4)
    {

LABEL_81:
      v11 = v197;
      v32 = v197 + 2;
      if (v197 + 2 < v14)
      {
        v208 = 0;
        goto LABEL_21;
      }
      goto LABEL_83;
    }
    v78 = sub_1BC05271C(v31, v199);
    v80 = v79;

    if ((v80 & 1) != 0)
      goto LABEL_81;
    v208 = v78 < v26;
    v11 = v197;
    v32 = v197 + 2;
    if (v197 + 2 < v14)
      goto LABEL_21;
LABEL_70:
    v15 = v32;
    if (v208)
    {
LABEL_71:
      if (v32 < v11)
        goto LABEL_236;
      goto LABEL_72;
    }
LABEL_84:
    if (v15 >= v14)
    {
      v12 = v198;
LABEL_143:
      if (v15 < v11)
        goto LABEL_230;
      goto LABEL_144;
    }
    if (__OFSUB__(v15, v11))
      goto LABEL_234;
    v12 = v198;
    v81 = v199;
    if (v15 - v11 >= v187)
      goto LABEL_143;
    v82 = v11 + v187;
    if (__OFADD__(v11, v187))
      goto LABEL_237;
    if (v82 >= v14)
      v82 = v14;
    if (v82 < v11)
      break;
    v189 = v82;
    if (v15 == v82)
      goto LABEL_143;
    while (2)
    {
      v83 = *(void **)(v12 + 8 * v15);
      v191 = v15;
      v84 = v15;
      do
      {
        v85 = v84 - 1;
        v86 = *(void **)(v12 + 8 * (v84 - 1));
        v209 = v83;
        v207 = v86;
        v87 = objc_msgSend(v207, sel_identifier);
        v88 = sub_1BC08A3C0();
        v90 = v89;

        if (MEMORY[0x1BCCE7FC0](v88, v90) == 4 || !*(_QWORD *)(v81 + 16))
          goto LABEL_135;
        v202 = *(_QWORD *)(v81 + 16);
        v91 = sub_1BC0895F8();
        v93 = v92;
        if (v91 == sub_1BC0895F8() && v93 == v94)
        {
          v97 = 0;
LABEL_105:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v96 = sub_1BC08AB94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v96 & 1) == 0)
          {
            v107 = 0;
            while (v202 - 1 != v107)
            {
              v97 = v107 + 1;
              v108 = sub_1BC0895F8();
              v110 = v109;
              if (v108 == sub_1BC0895F8() && v110 == v111)
                goto LABEL_105;
              v113 = sub_1BC08AB94();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v107 = v97;
              if ((v113 & 1) != 0)
                goto LABEL_106;
            }
            v12 = v198;
            v81 = v199;
            v11 = v197;
LABEL_135:

            goto LABEL_136;
          }
          v97 = 0;
        }
LABEL_106:
        v98 = objc_msgSend(v209, sel_identifier);
        v99 = sub_1BC08A3C0();
        v101 = v100;

        if (MEMORY[0x1BCCE7FC0](v99, v101) == 4)
        {
LABEL_93:
          v81 = v199;

          v11 = v197;
          v12 = v198;
          break;
        }
        v102 = sub_1BC0895F8();
        v104 = v103;
        v81 = v199;
        if (v102 == sub_1BC0895F8() && v104 == v105)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_112;
        }
        v106 = sub_1BC08AB94();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v106 & 1) != 0)
        {

LABEL_112:
          v156 = v97 <= 0;
          v11 = v197;
          v12 = v198;
          if (v156)
            break;
          goto LABEL_136;
        }
        v114 = 0;
        v115 = v202;
        v205 = v202 - 1;
        if (v202 <= 1)
          v115 = 1;
        v203 = v115 - 1;
        while (1)
        {
          v116 = v114;
          if (v205 == v114)
            goto LABEL_93;
          if (v203 == v114)
          {
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
LABEL_223:
            __break(1u);
LABEL_224:
            __break(1u);
LABEL_225:
            __break(1u);
LABEL_226:
            __break(1u);
LABEL_227:
            __break(1u);
LABEL_228:
            __break(1u);
LABEL_229:
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
            goto LABEL_238;
          }
          v117 = sub_1BC0895F8();
          v119 = v118;
          if (v117 == sub_1BC0895F8() && v119 == v120)
            break;
          v122 = sub_1BC08AB94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v114 = v116 + 1;
          if ((v122 & 1) != 0)
          {

            goto LABEL_140;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_140:
        v156 = v116 + 1 < v97;
        v12 = v198;
        v81 = v199;
        v11 = v197;
        if (!v156)
          break;
LABEL_136:
        if (!v12)
          goto LABEL_239;
        v83 = *(void **)(v12 + 8 * v84);
        *(_QWORD *)(v12 + 8 * v84) = *(_QWORD *)(v12 + 8 * v85);
        *(_QWORD *)(v12 + 8 * v85) = v83;
        --v84;
      }
      while (v85 != v11);
      v15 = v191 + 1;
      if (v191 + 1 != v189)
        continue;
      break;
    }
    v15 = v189;
    if (v189 < v11)
      goto LABEL_230;
LABEL_144:
    v192 = v15;
    v13 = v193;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BC05379C(0, *((_QWORD *)v193 + 2) + 1, 1, v193);
    v124 = *((_QWORD *)v13 + 2);
    v123 = *((_QWORD *)v13 + 3);
    v125 = v124 + 1;
    if (v124 >= v123 >> 1)
      v13 = sub_1BC05379C((char *)(v123 > 1), v124 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v125;
    v126 = v13 + 32;
    v127 = &v13[16 * v124 + 32];
    *(_QWORD *)v127 = v11;
    *((_QWORD *)v127 + 1) = v192;
    if (v124)
    {
      v194 = v13;
      v210 = v13 + 32;
      while (1)
      {
        v128 = v125 - 1;
        if (v125 >= 4)
        {
          v133 = &v126[16 * v125];
          v134 = *((_QWORD *)v133 - 8);
          v135 = *((_QWORD *)v133 - 7);
          v139 = __OFSUB__(v135, v134);
          v136 = v135 - v134;
          if (v139)
            goto LABEL_217;
          v138 = *((_QWORD *)v133 - 6);
          v137 = *((_QWORD *)v133 - 5);
          v139 = __OFSUB__(v137, v138);
          v131 = v137 - v138;
          v132 = v139;
          if (v139)
            goto LABEL_218;
          v140 = v125 - 2;
          v141 = &v126[16 * v125 - 32];
          v143 = *(_QWORD *)v141;
          v142 = *((_QWORD *)v141 + 1);
          v139 = __OFSUB__(v142, v143);
          v144 = v142 - v143;
          if (v139)
            goto LABEL_220;
          v139 = __OFADD__(v131, v144);
          v145 = v131 + v144;
          if (v139)
            goto LABEL_223;
          if (v145 >= v136)
          {
            v163 = &v126[16 * v128];
            v165 = *(_QWORD *)v163;
            v164 = *((_QWORD *)v163 + 1);
            v139 = __OFSUB__(v164, v165);
            v166 = v164 - v165;
            if (v139)
              goto LABEL_227;
            v156 = v131 < v166;
            goto LABEL_181;
          }
        }
        else
        {
          if (v125 != 3)
          {
            v157 = *((_QWORD *)v13 + 4);
            v158 = *((_QWORD *)v13 + 5);
            v139 = __OFSUB__(v158, v157);
            v150 = v158 - v157;
            v151 = v139;
            goto LABEL_175;
          }
          v130 = *((_QWORD *)v13 + 4);
          v129 = *((_QWORD *)v13 + 5);
          v139 = __OFSUB__(v129, v130);
          v131 = v129 - v130;
          v132 = v139;
        }
        if ((v132 & 1) != 0)
          goto LABEL_219;
        v140 = v125 - 2;
        v146 = &v126[16 * v125 - 32];
        v148 = *(_QWORD *)v146;
        v147 = *((_QWORD *)v146 + 1);
        v149 = __OFSUB__(v147, v148);
        v150 = v147 - v148;
        v151 = v149;
        if (v149)
          goto LABEL_222;
        v152 = &v126[16 * v128];
        v154 = *(_QWORD *)v152;
        v153 = *((_QWORD *)v152 + 1);
        v139 = __OFSUB__(v153, v154);
        v155 = v153 - v154;
        if (v139)
          goto LABEL_225;
        if (__OFADD__(v150, v155))
          goto LABEL_226;
        if (v150 + v155 >= v131)
        {
          v156 = v131 < v155;
LABEL_181:
          if (v156)
            v128 = v140;
          goto LABEL_183;
        }
LABEL_175:
        if ((v151 & 1) != 0)
          goto LABEL_221;
        v159 = &v126[16 * v128];
        v161 = *(_QWORD *)v159;
        v160 = *((_QWORD *)v159 + 1);
        v139 = __OFSUB__(v160, v161);
        v162 = v160 - v161;
        if (v139)
          goto LABEL_224;
        if (v162 < v150)
          goto LABEL_192;
LABEL_183:
        v167 = v128 - 1;
        if (v128 - 1 >= v125)
          goto LABEL_213;
        if (!v12)
          goto LABEL_240;
        v168 = v12;
        v169 = &v126[16 * v167];
        v170 = *(_QWORD *)v169;
        v171 = v128;
        v172 = &v126[16 * v128];
        v173 = *((_QWORD *)v172 + 1);
        v174 = (void **)(v168 + 8 * *(_QWORD *)v169);
        v175 = (id *)(v168 + 8 * *(_QWORD *)v172);
        v176 = (id *)(v168 + 8 * v173);
        swift_bridgeObjectRetain();
        sub_1BC054178(v174, v175, v176, __dst, v199);
        if (v196)
        {
LABEL_210:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)((v211 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_1BC08A4E0();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (v173 < v170)
          goto LABEL_214;
        v13 = v194;
        if (v171 > *((_QWORD *)v194 + 2))
          goto LABEL_215;
        v196 = 0;
        *(_QWORD *)v169 = v170;
        v126 = v210;
        *(_QWORD *)&v210[16 * v167 + 8] = v173;
        v177 = *((_QWORD *)v194 + 2);
        if (v171 >= v177)
          goto LABEL_216;
        v125 = v177 - 1;
        memmove(v172, v172 + 16, 16 * (v177 - 1 - v171));
        *((_QWORD *)v194 + 2) = v177 - 1;
        v12 = v198;
        if (v177 <= 2)
          goto LABEL_192;
      }
    }
    v125 = 1;
LABEL_192:
    v14 = v188;
    v11 = v192;
    if (v192 >= v188)
      goto LABEL_198;
  }
LABEL_238:
  __break(1u);
LABEL_239:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_240:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_241:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_242:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_243:
  swift_bridgeObjectRelease_n();
  result = sub_1BC08AA68();
  __break(1u);
  return result;
}

uint64_t sub_1BC055B88(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BC053A9C();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_1BC054BE8(v8, a2);
  swift_bridgeObjectRelease();
  sub_1BC08A9B4();
  return swift_bridgeObjectRelease_n();
}

void sub_1BC055C30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BA70)
  {
    v0 = sub_1BC08A5DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BA70);
  }
}

void sub_1BC055C8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AE00)
  {
    sub_1BBFDF744(255, &qword_1ED69C930);
    sub_1BC0892BC();
    sub_1BC008B60(&qword_1ED69C928, &qword_1ED69C930, 0x1E0C99E40, MEMORY[0x1E0CB1D30]);
    v0 = sub_1BC08AA14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AE00);
  }
}

uint64_t sub_1BC055D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DD10, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC055D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1BC08AA80();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1BCCE9358](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1BC089C4C();
  swift_arrayDestroy();
  if (!v6)
    return sub_1BC08A4E0();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BC08AA80();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1BC08A4E0();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1BC08AAD4();
  __break(1u);
  return result;
}

uint64_t sub_1BC056068(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1;
  v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (!v4)
      return MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v14 = sub_1BC08AA80();
    swift_bridgeObjectRelease();
    if (v14 >= 5)
      goto LABEL_4;
LABEL_34:
    swift_bridgeObjectRetain();
    return v2;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  if (v4 < 5)
    goto LABEL_34;
LABEL_4:
  if (v4 < 0)
  {
    v5 = 4;
    if (!v3)
    {
LABEL_9:
      v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
  }
  else
  {
    if (v4 >= 4)
      v5 = 4;
    else
      v5 = v4;
    if (!v3)
      goto LABEL_9;
  }
  if (v2 < 0)
    v6 = v2;
  else
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (sub_1BC08AA80() < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BC08AA80();
  swift_bridgeObjectRelease();
LABEL_16:
  if (v6 < (uint64_t)v5)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    sub_1BC089C4C();
    v7 = 0;
    do
    {
      v8 = v7 + 1;
      sub_1BC08A96C();
      v7 = v8;
    }
    while (v5 != v8);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC08AA8C();
    v1 = v9;
    v3 = v10;
    v5 = v11;
    swift_bridgeObjectRelease_n();
    if ((v5 & 1) != 0)
      goto LABEL_25;
LABEL_24:
    v2 = sub_1BBFF2734(v6, v1, v3, v5);
    swift_unknownObjectRelease();
    return v2;
  }
  v6 = v2 & 0xFFFFFFFFFFFFFF8;
  v1 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v5 = (2 * v5) | 1;
  if ((v5 & 1) == 0)
    goto LABEL_24;
LABEL_25:
  sub_1BC08ABA0();
  swift_unknownObjectRetain_n();
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v13 = *(_QWORD *)(v12 + 16);
  swift_release();
  if (__OFSUB__(v5 >> 1, v3))
    goto LABEL_38;
  if (v13 != (v5 >> 1) - v3)
  {
LABEL_39:
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  v2 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1BC0562D0(uint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  const void *v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x1E0DEE9E8];
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v40 = swift_bridgeObjectRetain();
    v8 = (uint64_t)sub_1BBFF28CC(v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v50 = v8;
  sub_1BC052BB8(&v50);
  v9 = v50;
  v47 = v6;
  sub_1BC0569F0(0, &qword_1ED69ADF8, &qword_1ED69ADC8, MEMORY[0x1E0DEAF38], MEMORY[0x1E0DEC418]);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  sub_1BC056970();
  v11 = swift_initStackObject();
  v11[2].isa = (Class)v9;
  v11[3].isa = 0;
  v12 = ((unint64_t)v9 >> 62) & 1;
  if (v9 < 0)
    LODWORD(v12) = 1;
  v43 = v12;
  if ((_DWORD)v12 == 1)
  {
LABEL_54:
    swift_retain_n();
    v39 = a2;
    v13 = sub_1BC08AA80();
    swift_retain();
    swift_release();
  }
  else
  {
    v13 = *(_QWORD *)(v9 + 16);
    swift_retain_n();
    v14 = a2;
    swift_retain();
  }
  v48 = inited;
  v45 = v5;
  v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v13)
  {
    v15 = 0;
LABEL_38:
    swift_release();
    v32 = (unint64_t)v49;
    v33 = v49[3];
    if (v33 >= 2)
    {
      v34 = v33 >> 1;
      v30 = __OFSUB__(v34, v15);
      v35 = v34 - (_QWORD)v15;
      if (v30)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      v49[2] = v35;
    }
    swift_release();
    v15 = v46;
    sub_1BC089D9C();
    swift_retain_n();
    swift_retain();
    v11 = sub_1BC089DD8();
    LOBYTE(v13) = sub_1BC08A678();
    if (!os_log_type_enabled(v11, (os_log_type_t)v13))
    {

      swift_release();
      swift_release_n();
      swift_release_n();
      v5 = v45;
LABEL_50:
      (*(void (**)(char *, unint64_t))(v47 + 8))(v15, v5);
      swift_bridgeObjectRelease();
      return v32;
    }
    v2 = swift_slowAlloc();
    *(_DWORD *)v2 = 134218240;
    v5 = v45;
    if ((v32 & 0x8000000000000000) == 0 && (v32 & 0x4000000000000000) == 0)
    {
      v36 = *(_QWORD *)(v32 + 16);
LABEL_45:
      swift_release();
      v50 = v36;
      sub_1BC08A7EC();
      swift_release();
      *(_WORD *)(v2 + 12) = 2048;
      if (v43)
      {
        swift_bridgeObjectRetain();
        v37 = sub_1BC08AA80();
        swift_release();
      }
      else
      {
        v37 = *(_QWORD *)(v9 + 16);
      }
      swift_release();
      v50 = v37;
      sub_1BC08A7EC();
      swift_release();
      _os_log_impl(&dword_1BBFD7000, v11, (os_log_type_t)v13, "Picked ranked apps with count %ld from ranked apps count %ld", (uint8_t *)v2, 0x16u);
      MEMORY[0x1BCCE9C40](v2, -1, -1);

      swift_release();
      v32 = (unint64_t)v49;
      goto LABEL_50;
    }
LABEL_58:
    swift_bridgeObjectRetain();
    v36 = sub_1BC08AA80();
    swift_release();
    goto LABEL_45;
  }
  inited = 0;
  v15 = 0;
  v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
  v5 = v9 & 0xC000000000000001;
  v17 = 5;
  v42 = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    v44 = v17;
    v2 = inited;
    while (1)
    {
      if (v5)
      {
        v18 = (id)MEMORY[0x1BCCE934C](v2, v9);
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v2 >= *(_QWORD *)(v9 + 16))
          goto LABEL_53;
        v18 = *(id *)(v9 + 8 * v2 + 32);
      }
      v19 = v18;
      inited = v2 + 1;
      if (__OFADD__(v2, 1))
        goto LABEL_52;
      v11[3].isa = (Class)inited;
      v50 = (uint64_t)v18;
      if ((sub_1BC051B28((void **)&v50, (uint64_t)a2, &v51) & 1) != 0)
        break;

      ++v2;
      if (inited == v13)
        goto LABEL_38;
    }
    if (!v15)
      break;
LABEL_33:
    v30 = __OFSUB__(v15--, 1);
    v31 = v44;
    if (v30)
    {
      __break(1u);
      goto LABEL_57;
    }
    *v16 = v19;
    v17 = v31 - 1;
    if (v17)
    {
      ++v16;
      if (inited != v13)
        continue;
    }
    goto LABEL_38;
  }
  v2 = (unint64_t)v49;
  v20 = v49[3];
  if ((uint64_t)((v20 >> 1) + 0x4000000000000000) >= 0)
  {
    v21 = v20 & 0xFFFFFFFFFFFFFFFELL;
    if (v21 <= 1)
      v22 = 1;
    else
      v22 = v21;
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, v42, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v23 = (_QWORD *)swift_allocObject();
    v24 = _swift_stdlib_malloc_size(v23);
    v25 = v24 - 32;
    if (v24 < 32)
      v25 = v24 - 25;
    v26 = v25 >> 3;
    v23[2] = v22;
    v23[3] = (2 * (v25 >> 3)) | 1;
    v27 = (unint64_t)(v23 + 4);
    v28 = *(_QWORD *)(v2 + 24) >> 1;
    if (*(_QWORD *)(v2 + 16))
    {
      v29 = (const void *)(v2 + 32);
      if (v23 != (_QWORD *)v2 || v27 >= (unint64_t)v29 + 8 * v28)
      {
        v41 = v25 >> 3;
        memmove(v23 + 4, v29, 8 * v28);
        v27 = (unint64_t)(v23 + 4);
        v26 = v41;
      }
      v2 = (unint64_t)v49;
      v49[2] = 0;
    }
    v49 = v23;
    v16 = (_QWORD *)(v27 + 8 * v28);
    v15 = (char *)((v26 & 0x7FFFFFFFFFFFFFFFLL) - v28);
    swift_release();
    goto LABEL_33;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC056814()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC056838(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC050670(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1BC056844()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69BB40)
  {
    sub_1BBFDB42C(255, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69BB40);
  }
}

uint64_t sub_1BC0568BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, &qword_1ED69BB38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E180], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC056918(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BBFDB42C(255, &qword_1ED69ADC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC056970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69ADF0)
  {
    sub_1BC0569F0(255, &qword_1ED69AE10, &qword_1ED69ADD0, MEMORY[0x1E0DEAF50], MEMORY[0x1E0DEC8F8]);
    sub_1BC056A84();
    v0 = sub_1BC08A990();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69ADF0);
  }
}

void sub_1BC0569F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    sub_1BBFDB42C(255, &qword_1ED69ADC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = sub_1BC056918(a3, a4);
    v13 = a5(a1, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

unint64_t sub_1BC056A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AE08;
  if (!qword_1ED69AE08)
  {
    sub_1BC0569F0(255, &qword_1ED69AE10, &qword_1ED69ADD0, MEMORY[0x1E0DEAF50], MEMORY[0x1E0DEC8F8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEC908], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AE08);
  }
  return result;
}

uint64_t GeneratorPipelineManagerWrapper.init(wrapped:pluginInfo:context:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = type metadata accessor for GeneratorPipelineManagerWrapper(0, a4, a3, a4);
  sub_1BC089058();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  sub_1BBFE95C8(a2, a5 + *(int *)(v10 + 28));
  v11 = a5 + *(int *)(v10 + 32);
  v12 = sub_1BC089574();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
}

uint64_t type metadata accessor for GeneratorPipelineManagerWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeneratorPipelineManagerWrapper);
}

uint64_t GeneratorPipelineManagerWrapper.subscript.getter()
{
  return swift_getAtKeyPath();
}

uint64_t GeneratorPipelineManagerWrapper.wrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t GeneratorPipelineManagerWrapper.pluginInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BBFE1C58(v2 + *(int *)(a1 + 28), a2);
}

uint64_t GeneratorPipelineManagerWrapper.context.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1BC089574();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t GeneratorPipelineManagerWrapper.uuid.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1BC089064();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t GeneratorPipelineProviderWrapper.init(wrapped:pluginInfo:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for GeneratorPipelineProviderWrapper(0, a3, v7, v8) + 28);
  return sub_1BBFE95C8(a2, v9);
}

uint64_t type metadata accessor for GeneratorPipelineProviderWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GeneratorPipelineProviderWrapper);
}

uint64_t sub_1BC056CB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BC089574();
    if (v2 <= 0x3F)
    {
      result = sub_1BC089064();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1BC056D60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v29 = sub_1BC089574();
  v7 = *(_QWORD *)(v29 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_1BC089064();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v10 + v13;
  v15 = v13 | v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (((v14 + ((v9 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v9)) & ~v13) + *(_QWORD *)(v12 + 64) > 0x18
    || ((*(_DWORD *)(v12 + 80) | v8 | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || v15 > 7)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    v28 = ~v13;
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v20 = v11;
    v19(a1, a2, v4);
    v21 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v21 + 24) = v23;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    (**(void (***)(unint64_t, unint64_t))(v23 - 8))(v21, v22);
    v24 = v22 + v9;
    v25 = (v21 + v9 + 40) & ~v9;
    v26 = (v24 + 40) & ~v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v25, v26, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))((v25 + v14) & v28, (v26 + v14) & v28, v20);
  }
  return a1;
}

uint64_t sub_1BC056F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = sub_1BC089574();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_1BC089064();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))((v7 + v8 + *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80), v9);
}

uint64_t sub_1BC056FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(unint64_t, unint64_t))(v9 - 8))(v7, v8);
  v10 = sub_1BC089574();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 40 + v7) & ~v12;
  v14 = (v12 + 40 + v8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = sub_1BC089064();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))((v15 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (v15 + *(unsigned __int8 *)(v17 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), v16);
  return a1;
}

uint64_t sub_1BC05708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  __swift_assign_boxed_opaque_existential_1(v7, v8);
  v9 = sub_1BC089574();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 40) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 40) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = sub_1BC089064();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 24))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

uint64_t sub_1BC057158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  v11 = sub_1BC089574();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 40 + v7) & ~v13;
  v15 = (v13 + 40 + v8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = sub_1BC089064();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 32))((v16 + *(unsigned __int8 *)(v18 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (v16 + *(unsigned __int8 *)(v18 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v17);
  return a1;
}

uint64_t sub_1BC057230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  v11 = sub_1BC089574();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 40 + v7) & ~v13;
  v15 = (v13 + 40 + v8) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = sub_1BC089064();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 40))((v16 + *(unsigned __int8 *)(v18 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (v16 + *(unsigned __int8 *)(v18 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), v17);
  return a1;
}

uint64_t sub_1BC057310(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1BC089574();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = v7;
  v12 = sub_1BC089064();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v11 <= v14)
    v15 = *(_DWORD *)(v13 + 84);
  else
    v15 = v11;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if (!a2)
    return 0;
  v17 = v12;
  v18 = *(_QWORD *)(v6 + 64);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(unsigned __int8 *)(v13 + 80);
  if (a2 <= v16)
    goto LABEL_30;
  v22 = ((v20 + v21 + ((v19 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & ~v19)) & ~v21) + *(_QWORD *)(v13 + 64);
  v23 = 8 * v22;
  if (v22 > 3)
    goto LABEL_13;
  v26 = ((a2 - v16 + ~(-1 << v23)) >> v23) + 1;
  if (HIWORD(v26))
  {
    v24 = *(_DWORD *)(a1 + v22);
    if (v24)
      goto LABEL_21;
  }
  else
  {
    if (v26 <= 0xFF)
    {
      if (v26 < 2)
        goto LABEL_30;
LABEL_13:
      v24 = *(unsigned __int8 *)(a1 + v22);
      if (!*(_BYTE *)(a1 + v22))
        goto LABEL_30;
LABEL_21:
      v27 = (v24 - 1) << v23;
      if (v22 > 3)
        v27 = 0;
      if ((_DWORD)v22)
      {
        if (v22 <= 3)
          v28 = v22;
        else
          v28 = 4;
        __asm { BR              X12 }
      }
      return v16 + v27 + 1;
    }
    v24 = *(unsigned __int16 *)(a1 + v22);
    if (*(_WORD *)(a1 + v22))
      goto LABEL_21;
  }
LABEL_30:
  if ((_DWORD)v7 == v16)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v30 = a1;
    v14 = v7;
    v17 = v5;
    return v29(v30, v14, v17);
  }
  v31 = (a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v15 & 0x80000000) != 0)
  {
    v30 = (v31 + v19 + 40) & ~v19;
    if ((_DWORD)v10 == v16)
    {
      v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      v14 = v10;
      v17 = v8;
    }
    else
    {
      v30 = (v30 + v20 + v21) & ~v21;
      v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    }
    return v29(v30, v14, v17);
  }
  v32 = *(_QWORD *)(v31 + 24);
  if (v32 >= 0xFFFFFFFF)
    LODWORD(v32) = -1;
  return (v32 + 1);
}

void sub_1BC057558(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1BC089574() - 8);
  if (v8 <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = v8;
  v11 = *(_QWORD *)(sub_1BC089064() - 8);
  if (v10 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v10;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(unsigned __int8 *)(v9 + 80) + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 <= v13)
  {
    v15 = 0u;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v13 < a2)
  {
    v16 = ~v13 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

uint64_t sub_1BC057830()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC057838()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC0578AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1BC057970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return __swift_destroy_boxed_opaque_existential_1((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1BC0579AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1BC057A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1BC057A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1BC057AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1BC057B44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC057BC0 + 4 * byte_1BC08D45E[v10]))();
  }
}

void sub_1BC057C44(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC057D38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC057DBCLL);
}

void sub_1BC057D40(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC057D48);
  JUMPOUT(0x1BC057DBCLL);
}

void sub_1BC057D8C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC057DBCLL);
}

void sub_1BC057D94()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC057DBCLL);
}

uint64_t sub_1BC057D9C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1BC057DA8);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1BC057DBCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

id sub_1BC057DDC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  objc_class *v13;
  char *v14;
  id result;
  id v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  sub_1BC0589C4();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC089838();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  sub_1BC0896DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BBFE1BD4((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BC0589C4);
    return (id)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC08B600;
  v12 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v12(v7, v9, v3);
  v13 = (objc_class *)type metadata accessor for DateRangeRelevanceProvider();
  v14 = (char *)objc_allocWithZone(v13);
  v12(&v14[OBJC_IVAR____TtC18HealthPlatformCore26DateRangeRelevanceProvider_relevantDateInterval], v7, v3);
  v20.receiver = v14;
  v20.super_class = v13;
  result = objc_msgSendSuper2(&v20, sel_init);
  if (result)
  {
    v16 = result;
    v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v7, v3);
    *(_QWORD *)(v11 + 32) = v16;
    v19 = v11;
    sub_1BC08A4E0();
    v10 = v19;
    v17(v9, v3);
    return (id)v10;
  }
  __break(1u);
  return result;
}

id sub_1BC058110(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  objc_class *v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  objc_super v43;
  _QWORD v44[3];
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;

  v2 = v1;
  v4 = sub_1BC089838();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC058964();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0589C4();
  v12 = MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - v17;
  v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v19((char *)&v39 - v17, &v2[OBJC_IVAR____TtC18HealthPlatformCore26DateRangeRelevanceProvider_relevantDateInterval], v4);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v20(v18, 0, 1, v4);
  v42 = a1;
  sub_1BC058A18(a1, (uint64_t)v46);
  if (v47)
  {
    type metadata accessor for DateRangeRelevanceProvider();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v21 = v2;
      v22 = (void *)v44[0];
      v19(v16, (char *)(v44[0] + OBJC_IVAR____TtC18HealthPlatformCore26DateRangeRelevanceProvider_relevantDateInterval), v4);

      v2 = v21;
      v23 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BC02593C((uint64_t)v46);
  }
  v23 = 1;
LABEL_6:
  v24 = (uint64_t)v41;
  v20(v16, v23, 1, v4);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BC058A78((uint64_t)v18, (uint64_t)v10);
  sub_1BC058A78((uint64_t)v16, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v10, 1, v4) != 1)
  {
    sub_1BC058A78((uint64_t)v10, v24);
    if (v26(v25, 1, v4) != 1)
    {
      v27 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v25, v4);
      sub_1BC058ABC();
      v28 = sub_1BC08A3A8();
      v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29(v27, v4);
      sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC0589C4);
      sub_1BBFE1BD4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC0589C4);
      v29((char *)v24, v4);
      sub_1BBFE1BD4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC0589C4);
      sub_1BC058A18(v42, (uint64_t)v46);
      if ((v28 & 1) != 0)
        goto LABEL_13;
LABEL_15:
      v36 = 0;
      goto LABEL_18;
    }
    sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC0589C4);
    sub_1BBFE1BD4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC0589C4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
LABEL_11:
    sub_1BBFE1BD4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC058964);
    sub_1BC058A18(v42, (uint64_t)v46);
    goto LABEL_15;
  }
  sub_1BBFE1BD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC0589C4);
  sub_1BBFE1BD4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC0589C4);
  if (v26(v25, 1, v4) != 1)
    goto LABEL_11;
  sub_1BBFE1BD4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC0589C4);
  sub_1BC058A18(v42, (uint64_t)v46);
LABEL_13:
  sub_1BC058A18((uint64_t)v46, (uint64_t)v44);
  v30 = v45;
  if (v45)
  {
    v31 = __swift_project_boxed_opaque_existential_1(v44, v45);
    v32 = *(_QWORD *)(v30 - 8);
    MEMORY[0x1E0C80A78](v31);
    v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v34);
    v35 = sub_1BC08AB88();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    v35 = 0;
  }
  v37 = (objc_class *)type metadata accessor for DateRangeRelevanceProvider();
  v43.receiver = v2;
  v43.super_class = v37;
  v36 = objc_msgSendSuper2(&v43, sel_isEqual_, v35);
  swift_unknownObjectRelease();
LABEL_18:
  sub_1BC02593C((uint64_t)v46);
  return v36;
}

uint64_t sub_1BC0586B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;

  v1 = sub_1BC089838();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC08A420();
  ObjectType = swift_getObjectType();
  sub_1BC05892C();
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  ObjectType = v0;
  sub_1BC08AA20();
  sub_1BC08A420();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC18HealthPlatformCore26DateRangeRelevanceProvider_relevantDateInterval, v1);
  sub_1BC08A3E4();
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();
  return v8;
}

id sub_1BC05880C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DateRangeRelevanceProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC05887C()
{
  return type metadata accessor for DateRangeRelevanceProvider();
}

uint64_t type metadata accessor for DateRangeRelevanceProvider()
{
  uint64_t result;

  result = qword_1ED69D758;
  if (!qword_1ED69D758)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC0588C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC089838();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1BC05892C()
{
  unint64_t result;

  result = qword_1ED69C370;
  if (!qword_1ED69C370)
  {
    type metadata accessor for DateRangeRelevanceProvider();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69C370);
  }
  return result;
}

void sub_1BC058964()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED69B748)
  {
    sub_1BC0589C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED69B748);
  }
}

void sub_1BC0589C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69BB18)
  {
    sub_1BC089838();
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69BB18);
  }
}

uint64_t sub_1BC058A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DD10, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC058A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0589C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC058ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B740;
  if (!qword_1ED69B740)
  {
    v1 = sub_1BC089838();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0D2E080], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B740);
  }
  return result;
}

void sub_1BC058B04()
{
  void *v0;
  id v1;

  sub_1BC0896E8();
  sub_1BC08973C();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 2);

  qword_1ED6A0630 = (uint64_t)v1;
}

uint64_t sub_1BC058B80()
{
  uint64_t result;

  if (qword_1ED69DA20 != -1)
    swift_once();
  result = sub_1BC05E28C(5);
  qword_1ED6A0628 = result;
  return result;
}

uint64_t DispatchQueueOrchestrationScheduler.__allocating_init(environment:)(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1 & 1;
  v2 = sub_1BC089FAC();
  type metadata accessor for DispatchQueueOrchestrationScheduler();
  v3 = swift_allocObject();
  DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v1, v2, 3);
  return v3;
}

uint64_t DispatchQueueGeneratorScheduler.init(context:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BBFE95C8(a1, a2);
}

uint64_t DispatchQueueOrchestrationScheduler.environment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DispatchQueueOrchestrationScheduler.maxConcurrentPipelines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t DispatchQueueOrchestrationScheduler.maxConcurrentGenerators.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DispatchQueueOrchestrationScheduler.__allocating_init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(char a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;

  v5 = a1 & 1;
  v6 = swift_allocObject();
  DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v5, a2, a3);
  return v6;
}

uint64_t type metadata accessor for DispatchQueueOrchestrationScheduler()
{
  return objc_opt_self();
}

uint64_t *DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v6 = *v3;
  v7 = a1 & 1;
  v56 = (_QWORD *)sub_1BC08A27C();
  v51 = *(v56 - 1);
  MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1BC08A6FC();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC08A6CC();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1BC08A2B8();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_BYTE *)v3 + 16) = v7;
  v3[3] = a2;
  v3[4] = a3;
  v14 = v3;
  v54 = v3;
  v62 = v6;
  v67 = sub_1BC08AC9C();
  v68 = v15;
  sub_1BC08A420();
  v16 = sub_1BC08A3FC();
  swift_bridgeObjectRelease();
  v17 = (void *)MEMORY[0x1BCCE976C](v16 + 32);
  swift_release();
  v14[5] = (uint64_t)v17;
  v64 = sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
  v67 = 0;
  v68 = 0xE000000000000000;
  v65 = v17;
  sub_1BC08A954();
  v18 = sub_1BC08AC9C();
  v20 = v19;
  swift_bridgeObjectRelease();
  v67 = v18;
  v68 = v20;
  sub_1BC08A420();
  sub_1BC08A294();
  v67 = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  v66 = sub_1BBFDA9C0(&qword_1ED69DCD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BBFDB42C(0, &qword_1ED69DCB8, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = v22;
  v59 = sub_1BBFEF1A8();
  v50 = v65;
  v53 = v23;
  v57 = v10;
  sub_1BC08A834();
  v58 = *MEMORY[0x1E0DEF8D0];
  v60 = *(_QWORD *)(v60 + 104);
  v24 = v63;
  ((void (*)(char *))v60)(v61);
  v25 = sub_1BC08A714();
  v26 = v54;
  v54[9] = v25;
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1BC08A954();
  v27 = sub_1BC08AC9C();
  v29 = v28;
  swift_bridgeObjectRelease();
  v67 = v27;
  v68 = v29;
  sub_1BC08A420();
  v30 = *MEMORY[0x1E0DEF530];
  v51 = *(_QWORD *)(v51 + 104);
  ((void (*)(char *, uint64_t, _QWORD *))v51)(v55, v30, v56);
  v52 = v13;
  sub_1BC08A2AC();
  v67 = MEMORY[0x1E0DEE9D8];
  v50 = v50;
  sub_1BC08A834();
  v31 = v58;
  ((void (*)(char *, _QWORD, uint64_t))v60)(v61, v58, v24);
  v26[8] = sub_1BC08A714();
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1BC08A954();
  v32 = sub_1BC08AC9C();
  v34 = v33;
  swift_bridgeObjectRelease();
  v67 = v32;
  v68 = v34;
  sub_1BC08A420();
  sub_1BC08A2A0();
  v67 = MEMORY[0x1E0DEE9D8];
  v50 = v50;
  sub_1BC08A834();
  v35 = v61;
  v36 = v31;
  v37 = (void (*)(char *, _QWORD, uint64_t))v60;
  ((void (*)(char *, uint64_t, uint64_t))v60)(v61, v36, v63);
  v38 = sub_1BC08A714();
  v39 = v54;
  v54[7] = v38;
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1BC08A954();
  v40 = sub_1BC08AC9C();
  v42 = v41;
  swift_bridgeObjectRelease();
  v67 = v40;
  v68 = v42;
  sub_1BC08A420();
  ((void (*)(char *, _QWORD, _QWORD *))v51)(v55, *MEMORY[0x1E0DEF548], v56);
  sub_1BC08A2AC();
  v67 = MEMORY[0x1E0DEE9D8];
  v56 = v50;
  sub_1BC08A834();
  v43 = v63;
  v37(v35, v58, v63);
  v39[6] = sub_1BC08A714();
  v67 = 0;
  v68 = 0xE000000000000000;
  sub_1BC08A954();
  v44 = sub_1BC08AC9C();
  v46 = v45;
  swift_bridgeObjectRelease();
  v67 = v44;
  v68 = v46;
  sub_1BC08A420();
  sub_1BC08A2A0();
  v67 = MEMORY[0x1E0DEE9D8];
  v47 = v56;
  sub_1BC08A834();
  ((void (*)(char *, _QWORD, uint64_t))v60)(v35, v58, v43);
  v48 = sub_1BC08A714();

  v39[10] = v48;
  return v39;
}

uint64_t sub_1BC0593D8(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDB42C(0, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC05942C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v20[4];

  sub_1BBFDB42C(0, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = (void *)sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
  v10 = (void *)sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v20[0] = a2;
  v20[1] = v9;
  v20[2] = a3;
  v20[3] = v10;
  v11 = sub_1BC089F64();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v20 - v13;
  v15 = *(void **)(v3 + 64);
  v20[0] = v15;
  v16 = sub_1BC08A6D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  v17 = v15;
  sub_1BC08A204();
  sub_1BC0593D8((uint64_t)v8);

  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95CB8], v11);
  v18 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v18;
}

uint64_t sub_1BC0595E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21[1] = a1;
  sub_1BBFDB42C(0, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - v8;
  v10 = sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
  v11 = sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v22 = a3;
  v23 = v10;
  v24 = a4;
  v25 = v11;
  v12 = sub_1BC089E14();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - v14;
  sub_1BC0597A8(a2);
  v17 = v16;
  v22 = v16;
  v18 = sub_1BC08A6D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  sub_1BC08A234();
  sub_1BC0593D8((uint64_t)v9);
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C957A0], v12);
  v19 = sub_1BC08A180();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19;
}

void sub_1BC0597A0(uint64_t a1)
{
  sub_1BC0597A8(a1);
}

void sub_1BC0597A8(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  unsigned int v27;
  char *v28;
  id v29;
  void *v30;
  unsigned int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  id v46;
  int v47;
  id v48;
  void *v49;
  char v50;
  id v51;
  void *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  void *v55;
  char v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a1;
  sub_1BC05A1EC();
  v3 = v2;
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1BC0894CC();
  v63 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC0892A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v57 - v14;
  if ((sub_1BC089970() & 1) == 0)
  {
    v46 = *(id *)(v1 + 80);
    return;
  }
  v60 = v6;
  v61 = v13;
  v59 = (_QWORD *)v1;
  sub_1BBFDB42C(0, &qword_1ED69DBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = *(_QWORD *)(v10 + 72);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC08B960;
  v19 = v18 + v17;
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v20((char *)v19, *MEMORY[0x1E0D2D510], v9);
  v21 = *MEMORY[0x1E0D2D550];
  v58 = v20;
  v20((char *)(v19 + v16), v21, v9);
  v22 = sub_1BBFFD410(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v64 = v22;
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_sharedBehavior);
  if (!v24)
  {
    __break(1u);
    goto LABEL_25;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_features);

  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v27 = objc_msgSend(v26, sel_stanley);

  v28 = v61;
  if (!v27)
    goto LABEL_8;
  v29 = objc_msgSend(v23, sel_sharedBehavior);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, sel_isiPad);

    if (v31)
    {
      v58(v28, *MEMORY[0x1E0D2D578], v9);
      sub_1BBFF348C((uint64_t)v15, v28);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
LABEL_8:
    v32 = (void *)sub_1BC089514();
    sub_1BC0894D8();
    v33 = sub_1BC0894F0();
    v34 = sub_1BC089520();
    v35 = (char *)v5 + v3[12];
    v36 = v3[16];
    v37 = v3[20];
    *v5 = v32;
    v38 = v63;
    v39 = v60;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v35, v8, v60);
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v5 + v36) = v33;
    *(_QWORD *)((char *)v5 + v37) = v34;
    v40 = v32;
    v41 = (void *)sub_1BC0893C4();
    LOBYTE(v36) = sub_1BC0893AC();

    if ((v36 & 1) != 0)
    {
      v42 = sub_1BC0772F0(v64, v33);
      swift_bridgeObjectRelease();
      v43 = *(_QWORD *)(v42 + 16);
      swift_release();
      v44 = v59;
      if (v43)
      {

        v45 = (void *)v44[9];
LABEL_19:
        v54 = *(void (**)(char *, uint64_t))(v38 + 8);
LABEL_23:
        v45;
        v54(v35, v39);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = v59;
    }
    v47 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v35, v39);
    if (v47 == *MEMORY[0x1E0D2D9E8])
    {
      v48 = v40;
      v49 = (void *)sub_1BC0893C4();
      v50 = sub_1BC0893AC();

      if ((v50 & 1) != 0)
      {

        v45 = (void *)v44[7];
        goto LABEL_19;
      }
    }
    else if (v47 == *MEMORY[0x1E0D2D9E0])
    {
      v51 = v40;
      v52 = (void *)sub_1BC0893C4();
      v53 = sub_1BC0893AC();

      if ((v53 & 1) != 0)
      {

        v45 = (void *)v44[6];
        goto LABEL_19;
      }
    }
    v55 = (void *)sub_1BC0893C4();
    v56 = sub_1BC0893AC();

    v54 = *(void (**)(char *, uint64_t))(v38 + 8);
    if ((v56 & 1) != 0)
      v45 = (void *)v44[8];
    else
      v45 = (void *)v44[6];
    goto LABEL_23;
  }
LABEL_26:
  __break(1u);
}

id *DispatchQueueOrchestrationScheduler.deinit()
{
  id *v0;

  return v0;
}

uint64_t DispatchQueueOrchestrationScheduler.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BC059CF8()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_1BC059D04()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 32);
}

uint64_t sub_1BC059D10()
{
  return sub_1BC0593D4();
}

uint64_t sub_1BC059D30()
{
  return sub_1BC0595E0();
}

uint64_t *sub_1BC059D50@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *result;

  v3 = a1 & 1;
  v4 = sub_1BC089FAC();
  type metadata accessor for DispatchQueueOrchestrationScheduler();
  v5 = swift_allocObject();
  result = DispatchQueueOrchestrationScheduler.init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(v3, v4, 3);
  *a2 = v5;
  return result;
}

void sub_1BC059DAC(uint64_t a1)
{
  sub_1BC0597A8(a1);
}

uint64_t DispatchQueueGeneratorScheduler.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BBFE1C58(v1, a1);
}

uint64_t DispatchQueueGeneratorScheduler.receiveOn<A>(for:domain:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_1BC059E14(a1, a2, a3, a4, (uint64_t (*)(_QWORD, id *))MEMORY[0x1E0C95CA8], (void (*)(id *, char *, void *, void *, void *, void *))MEMORY[0x1E0C96378], MEMORY[0x1E0C95CB8]);
}

uint64_t DispatchQueueGeneratorScheduler.subscribeOn<A>(for:domain:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_1BC059E14(a1, a2, a3, a4, (uint64_t (*)(_QWORD, id *))MEMORY[0x1E0C95790], (void (*)(id *, char *, void *, void *, void *, void *))MEMORY[0x1E0C963C8], MEMORY[0x1E0C957A0]);
}

uint64_t sub_1BC059E14(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(_QWORD, id *), void (*a6)(id *, char *, void *, void *, void *, void *), uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void (*v27)(id *, char *, void *, void *, void *, void *);
  uint64_t v28;
  id v29[4];

  v27 = a6;
  v28 = a7;
  v24 = a3;
  v25 = a4;
  v26 = a1;
  sub_1BBFDB42C(0, &qword_1ED69D8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  v14 = (void *)sub_1BBFDF744(255, (unint64_t *)&qword_1ED69DCD8);
  v15 = (void *)sub_1BC008B60((unint64_t *)&qword_1ED69D8A8, (unint64_t *)&qword_1ED69DCD8, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v29[0] = a3;
  v29[1] = v14;
  v29[2] = a4;
  v29[3] = v15;
  v16 = a5(0, v29);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v23 - v18;
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v29[0] = (id)sub_1BC0894A8();
  v20 = sub_1BC08A6D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  v27(v29, v13, v24, v14, v25, v15);
  sub_1BC0593D8((uint64_t)v13);

  MEMORY[0x1BCCE9B68](v28, v16);
  v21 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v21;
}

uint64_t dispatch thunk of GenerationQueueProviding.queue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OrchestrationScheduler.maxConcurrentPipelines.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OrchestrationScheduler.maxConcurrentGenerators.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of OrchestrationScheduler.receiveOnForHealthPluginDelegateStream<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of OrchestrationScheduler.receiveOnForGeneratorPipelineManagerStream<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of OrchestrationScheduler.subscribeOnForGeneratorPipelineStream<A>(_:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of OrchestrationScheduler.subscribeOnForGeneratorStream<A>(_:domain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of OrchestrationScheduler.init(environment:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 56))(a1 & 1);
}

uint64_t method lookup function for DispatchQueueOrchestrationScheduler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.__allocating_init(environment:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 152))(a1 & 1);
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.__allocating_init(environment:maxConcurrentPipelines:maxConcurrentGenerators:)(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 160))(a1 & 1);
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.receiveOnForHealthPluginDelegateStream<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.receiveOnForGeneratorPipelineManagerStream<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.subscribeOnForGeneratorPipelineStream<A>(_:domain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.subscribeOnForGeneratorStream<A>(_:domain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DispatchQueueOrchestrationScheduler.queue(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t initializeWithCopy for DispatchQueueGeneratorScheduler(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for DispatchQueueGeneratorScheduler(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DispatchQueueGeneratorScheduler(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DispatchQueueGeneratorScheduler(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DispatchQueueGeneratorScheduler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DispatchQueueGeneratorScheduler()
{
  return &type metadata for DispatchQueueGeneratorScheduler;
}

void sub_1BC05A1EC()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED69A118)
  {
    sub_1BC0894CC();
    sub_1BC05A27C();
    sub_1BC05A2F4();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED69A118);
  }
}

void sub_1BC05A27C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69C908)
  {
    sub_1BC0892A4();
    sub_1BBFDA9C0(&qword_1ED69BAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D5B0], MEMORY[0x1E0D2D5C0]);
    v0 = sub_1BC08A594();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69C908);
  }
}

void sub_1BC05A2F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A050)
  {
    sub_1BBFDF744(255, (unint64_t *)&qword_1ED69D890);
    sub_1BC008B60(&qword_1ED69D898, (unint64_t *)&qword_1ED69D890, 0x1E0CB6978, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC08A594();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A050);
  }
}

uint64_t sub_1BC05A394(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unsigned __int8 *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v15;
  _QWORD v16[4];
  unsigned __int8 v17;
  uint64_t v18;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v8 = (unsigned __int8 *)(a3 + 64);
    do
    {
      v9 = *((_QWORD *)v8 - 4);
      v10 = (void *)*((_QWORD *)v8 - 3);
      v11 = (void *)*((_QWORD *)v8 - 2);
      v12 = (void *)*((_QWORD *)v8 - 1);
      v13 = *v8;
      v16[0] = v9;
      v16[1] = v10;
      v16[2] = v11;
      v16[3] = v12;
      v17 = v13;
      sub_1BC013D00(v9, v10, v11, v12, v13);
      a1(&v15, v16);
      sub_1BC013DD4(v9, v10, v11, v12, v13);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v15)
      {
        MEMORY[0x1BCCE8E84]();
        if (*(_QWORD *)(v18 + 16) >= *(_QWORD *)(v18 + 24) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();
      }
      v8 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1BC05A4E4(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC08AA80())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE934C](i - 4, a3) : *(id *)(a3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x1BCCE8E84]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BC05A67C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1BBFDB42C(0, &qword_1ED69C990, (uint64_t (*)(uint64_t))sub_1BBFDF44C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - v7;
  sub_1BBFDF44C();
  v27 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v26 = (uint64_t)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v24 = (uint64_t)v22 - v13;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(type metadata accessor for ModelTrainingEvent() - 8);
  v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v25 = *(_QWORD *)(v15 + 72);
  v22[1] = a3;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v23 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v27) == 1)
    {
      sub_1BC05B370((uint64_t)v8);
    }
    else
    {
      v18 = v24;
      sub_1BC00D664((uint64_t)v8, v24, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      sub_1BC00D664(v18, v26, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BBFDDD60(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_1BBFDDD60(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_1BC00D664(v26, v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      a1 = v23;
    }
    v16 += v25;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BC05A8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v5[4];

  if (!*(_QWORD *)(*(_QWORD *)a1 + 16))
    return sub_1BC05B1D4(a1, a2);
  sub_1BC03BEE0(0);
  sub_1BC089538();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1BC0894B4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return sub_1BC05B1D4(a1, a2);
}

uint64_t sub_1BC05AA1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  char v46[16];
  uint64_t *v47;
  uint64_t v48;

  v45 = a2;
  sub_1BBFDB42C(0, &qword_1ED69AA10, (uint64_t (*)(uint64_t))sub_1BC03BEE0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v35 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - v4;
  sub_1BC05AE3C();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC03BEE0(0);
  v43 = v8;
  v40 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1BC05AEA8(0);
  v11 = v10;
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00BE50(0, &qword_1ED69A800, v14, sub_1BC05AF50, MEMORY[0x1E0C95B50]);
  v16 = v15;
  v39 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v32 - v17;
  sub_1BC05AF6C();
  v41 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v44 = a1;
  v47 = a1;
  swift_bridgeObjectRetain();
  v23 = sub_1BC05A394((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BC05B1BC, (uint64_t)v46, v22);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v23 + 16))
  {
    v48 = v23;
    sub_1BC05AECC();
    sub_1BBFDB42C(0, &qword_1ED69AA50, (uint64_t (*)(uint64_t))sub_1BC05AECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC05AF34();
    sub_1BC05B218();
    sub_1BC089F4C();
    sub_1BC05AF50();
    sub_1BC08A1E0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
    sub_1BC05B1D4((uint64_t)v44, (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    v24 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v25 = swift_allocObject();
    sub_1BC00D664((uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (uint64_t (*)(_QWORD))sub_1BC03BEE0);
    sub_1BC05B004();
    sub_1BC08A1A4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v16);
    sub_1BBFDA9C0(&qword_1ED69A7B8, (uint64_t (*)(uint64_t))sub_1BC05AF6C, MEMORY[0x1E0C95950]);
    v26 = v42;
    v27 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v21, v26);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BC05B1D4((uint64_t)v44, (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_1BC08A060();
    sub_1BBFE24A4();
    v30 = v34;
    v29 = v35;
    sub_1BC08A03C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v29);
    sub_1BBFDA9C0(&qword_1ED69AAB0, (uint64_t (*)(uint64_t))sub_1BC05AE3C, MEMORY[0x1E0C964C8]);
    v31 = v37;
    v27 = sub_1BC08A180();
    result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v30, v31);
  }
  *v45 = v27;
  return result;
}

void sub_1BC05AE3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69AAB8)
  {
    sub_1BC03BEE0(255);
    sub_1BBFE24A4();
    v0 = sub_1BC08AC54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69AAB8);
  }
}

void sub_1BC05AEA8(uint64_t a1)
{
  sub_1BC00BE50(a1, (unint64_t *)&unk_1ED69A8F0, (uint64_t (*)(uint64_t))sub_1BC05AECC, sub_1BC05AF34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95C60]);
}

void sub_1BC05AECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A9E0)
  {
    sub_1BBFE24A4();
    v0 = sub_1BC089FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A9E0);
  }
}

uint64_t sub_1BC05AF34()
{
  return sub_1BBFDA9C0(&qword_1ED69A9D8, (uint64_t (*)(uint64_t))sub_1BC05AECC, MEMORY[0x1E0C95D90]);
}

uint64_t sub_1BC05AF50()
{
  return sub_1BBFDA9C0(&qword_1ED69A8E8, (uint64_t (*)(uint64_t))sub_1BC05AEA8, MEMORY[0x1E0C95C80]);
}

void sub_1BC05AF6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A7C0)
  {
    sub_1BC00BE50(255, &qword_1ED69A800, (uint64_t (*)(uint64_t))sub_1BC05AEA8, sub_1BC05AF50, MEMORY[0x1E0C95B50]);
    sub_1BC03BEE0(255);
    sub_1BC05B004();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A7C0);
  }
}

unint64_t sub_1BC05B004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A7F8;
  if (!qword_1ED69A7F8)
  {
    sub_1BC00BE50(255, &qword_1ED69A800, (uint64_t (*)(uint64_t))sub_1BC05AEA8, sub_1BC05AF50, MEMORY[0x1E0C95B50]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A7F8);
  }
  return result;
}

uint64_t sub_1BC05B06C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;

  v3 = *(unsigned __int8 *)(result + 32);
  if (v3 >> 5 == 1)
  {
    sub_1BC03BEE0(0);
    sub_1BC089538();
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_1BC089490();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    swift_getObjectType();
    v6 = sub_1BC089910();
LABEL_10:
    v5 = v6;
    result = swift_unknownObjectRelease();
    goto LABEL_11;
  }
  if (v3 >> 5 == 5
    && v3 == 160
    && (*(_QWORD *)(result + 24) | *(_QWORD *)(result + 16) | *(_QWORD *)(result + 8) | *(_QWORD *)result) == 0)
  {
    sub_1BC03BEE0(0);
    sub_1BC089538();
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_1BC089490();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    swift_getObjectType();
    v6 = sub_1BC08991C();
    goto LABEL_10;
  }
  v5 = 0;
LABEL_11:
  *a2 = v5;
  return result;
}

uint64_t sub_1BC05B1BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC05B06C(a1, a2);
}

uint64_t sub_1BC05B1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC03BEE0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC05B218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69AA58;
  if (!qword_1ED69AA58)
  {
    sub_1BBFDB42C(255, &qword_1ED69AA50, (uint64_t (*)(uint64_t))sub_1BC05AECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69AA58);
  }
  return result;
}

uint64_t sub_1BC05B278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BC03BEE0(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = v0 + ((v3 + 16) & ~v3);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4 + 8);
  v5 = v4 + *(int *)(v2 + 32);
  v6 = sub_1BC089574();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + *(int *)(v2 + 36);
  v8 = sub_1BC089064();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_1BC05B334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BC03BEE0(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BC05B1D4(v1 + ((v4 + 16) & ~v4), a1);
}

uint64_t sub_1BC05B370(uint64_t a1)
{
  uint64_t v2;

  sub_1BBFDB42C(0, &qword_1ED69C990, (uint64_t (*)(uint64_t))sub_1BBFDF44C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id static SharableModelReference.predicateFor(sourceProfile:)(void *a1)
{
  uint64_t v2;
  id v3;
  id result;
  id v5;
  uint64_t v6;

  if (!a1)
    return objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 0);
  sub_1BC00A718();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC08B960;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BBFDF700();
  *(_QWORD *)(v2 + 32) = 0xD000000000000011;
  *(_QWORD *)(v2 + 40) = 0x80000001BC091590;
  v3 = a1;
  result = objc_msgSend(v3, sel_identifier);
  if (result)
  {
    v5 = result;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
    *(_QWORD *)(v2 + 96) = sub_1BBFDF744(0, &qword_1ED69DBB8);
    *(_QWORD *)(v2 + 104) = sub_1BC05B514();
    *(_QWORD *)(v2 + 72) = v5;
    v6 = sub_1BC08A5E8();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BC05B514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DBC0;
  if (!qword_1ED69DBC0)
  {
    v1 = sub_1BBFDF744(255, &qword_1ED69DBB8);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DBC0);
  }
  return result;
}

void sub_1BC05B56C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC05B5A8()
{
  sub_1BC08A408();
  return swift_bridgeObjectRelease();
}

void sub_1BC05B680(uint64_t a1, char a2)
{
  sub_1BC08ABF4();
  __asm { BR              X10 }
}

uint64_t sub_1BC05B6C8()
{
  sub_1BC08A408();
  swift_bridgeObjectRelease();
  return sub_1BC08AC18();
}

uint64_t AllDataSummarySection.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC089028();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AllDataSummarySection.identifier.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AllDataSummarySection(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AllDataSummarySection(uint64_t a1)
{
  return sub_1BBFEF770(a1, qword_1ED69B5A0);
}

uint64_t AllDataSummarySection.init(date:identifier:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for AllDataSummarySection(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

void AllDataSummarySection.title.getter()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AllDataSummarySection(0) + 20)) <= 6u)
    sub_1BC05B8DC();
}

void sub_1BC05B8DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC05B904()
{
  if (qword_1ED69B770 != -1)
    swift_once();
  return sub_1BC088EF0();
}

HealthPlatformCore::AllDataSummarySection::Identifier_optional __swiftcall AllDataSummarySection.Identifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthPlatformCore::AllDataSummarySection::Identifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC08AAE0();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AllDataSummarySection.Identifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC05BDD0 + 4 * byte_1BC08D6C8[*v0]))(0x7961646F54, 0xE500000000000000);
}

uint64_t sub_1BC05BDD0()
{
  return 0x4420372074736150;
}

uint64_t sub_1BC05BDF0()
{
  return 0x2030332074736150;
}

uint64_t sub_1BC05BE10()
{
  return 0x2032312074736150;
}

uint64_t sub_1BC05BE34()
{
  return 0x5920352074736150;
}

uint64_t sub_1BC05BE54()
{
  return 0x7265646C4FLL;
}

uint64_t sub_1BC05BE64()
{
  return 0x65746144206F4ELL;
}

uint64_t sub_1BC05BE7C()
{
  return 0x61746144206F4ELL;
}

void sub_1BC05BE94(char *a1)
{
  sub_1BC00C424(*a1);
}

void sub_1BC05BEA0()
{
  char *v0;

  sub_1BC05B680(0, *v0);
}

void sub_1BC05BEAC(uint64_t a1)
{
  char *v1;

  sub_1BC05B56C(a1, *v1);
}

void sub_1BC05BEB4(uint64_t a1)
{
  char *v1;

  sub_1BC05B680(a1, *v1);
}

HealthPlatformCore::AllDataSummarySection::Identifier_optional sub_1BC05BEBC(Swift::String *a1)
{
  return AllDataSummarySection.Identifier.init(rawValue:)(*a1);
}

uint64_t sub_1BC05BEC8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC05BEF4 + 4 * byte_1BC08D6D0[*v0]))();
}

void sub_1BC05BEF4(_QWORD *a1@<X8>)
{
  *a1 = 0x4420372074736150;
  a1[1] = 0xEB00000000737961;
}

void sub_1BC05BF18(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Past 30 Days");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BC05BF3C(char *a1@<X8>)
{
  strcpy(a1, "Past 12 Months");
  a1[15] = -18;
}

void sub_1BC05BF64(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "Past 5 Years");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BC05BF88(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x7265646C4FLL;
  a1[1] = v1;
}

void sub_1BC05BF9C(_QWORD *a1@<X8>)
{
  *a1 = 0x65746144206F4ELL;
  a1[1] = 0xE700000000000000;
}

void sub_1BC05BFB8(_QWORD *a1@<X8>)
{
  *a1 = 0x61746144206F4ELL;
  a1[1] = 0xE700000000000000;
}

uint64_t AllDataSummarySection.DateRange.identifier.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AllDataSummarySection.DateRange(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AllDataSummarySection.DateRange(uint64_t a1)
{
  return sub_1BBFEF770(a1, qword_1EF3EE2C8);
}

uint64_t static AllDataSummarySection.DateRange.makeDefaultSections(dateRange:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;

  v0 = sub_1BC089028();
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  v1 = MEMORY[0x1E0C80A78](v0);
  v45 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v44 = (char *)&v37 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v37 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v37 - v10;
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - v13;
  sub_1BBFDB42C(0, &qword_1EF3EE250, type metadata accessor for AllDataSummarySection.DateRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = type metadata accessor for AllDataSummarySection.DateRange(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  v41 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1BC08D820;
  v20 = v19 + v18;
  v50 = 0;
  static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(&v50, (uint64_t)v14);
  sub_1BC05C908((uint64_t)v14, v20);
  *(_BYTE *)(v20 + *(int *)(v15 + 20)) = 0;
  v49 = 1;
  static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(&v49, (uint64_t)v14);
  sub_1BC05C908((uint64_t)v14, v20 + v17);
  *(_BYTE *)(v20 + v17 + *(int *)(v15 + 20)) = 1;
  v48 = 2;
  static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(&v48, (uint64_t)v14);
  sub_1BC05C908((uint64_t)v14, v20 + 2 * v17);
  *(_BYTE *)(v20 + 2 * v17 + *(int *)(v15 + 20)) = 2;
  v47 = 3;
  static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(&v47, (uint64_t)v14);
  sub_1BC05C908((uint64_t)v14, v20 + 3 * v17);
  v21 = *(int *)(v15 + 20);
  v42 = v15;
  *(_BYTE *)(v20 + 3 * v17 + v21) = 3;
  v46 = 5;
  static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(&v46, (uint64_t)v14);
  sub_1BC05C908((uint64_t)v14, v20 + 4 * v17);
  *(_BYTE *)(v20 + 4 * v17 + *(int *)(v15 + 20)) = 5;
  v38 = v20 + 5 * v17;
  static AllDataSummarySection.DateRange.allDataSummaryDate(from:)((uint64_t)v11);
  v22 = v9;
  sub_1BC088FE0();
  v23 = v43;
  sub_1BC088FE0();
  v24 = v44;
  sub_1BC088FE0();
  v25 = v45;
  sub_1BC088FE0();
  v26 = v40;
  v27 = *(void (**)(char *, uint64_t))(v39 + 8);
  v27(v25, v40);
  v27(v24, v26);
  v27(v23, v26);
  v28 = v22;
  v27(v22, v26);
  v27(v11, v26);
  v29 = sub_1BC088E84();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = v38;
  v30(v38, 1, 1, v29);
  *(_BYTE *)(v31 + *(int *)(v42 + 20)) = 6;
  v32 = v20 + 6 * v17;
  static AllDataSummarySection.DateRange.allDataSummaryDate(from:)((uint64_t)v11);
  sub_1BC088FE0();
  v33 = v43;
  sub_1BC088FE0();
  v34 = v44;
  sub_1BC088FE0();
  v35 = v45;
  sub_1BC088FE0();
  v27(v35, v26);
  v27(v34, v26);
  v27(v33, v26);
  v27(v28, v26);
  v27(v11, v26);
  v30(v32, 1, 1, v29);
  result = v41;
  *(_BYTE *)(v32 + *(int *)(v42 + 20)) = 7;
  return result;
}

void static AllDataSummarySection.DateRange.getInterval(for:sectionIdentifier:)(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  v14[3] = a2;
  v3 = sub_1BC089028();
  v14[1] = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = *a1;
  static AllDataSummarySection.DateRange.allDataSummaryDate(from:)((uint64_t)v14 - v13);
  v14[2] = v11;
  sub_1BC088FE0();
  sub_1BC088FE0();
  sub_1BC088FE0();
  sub_1BC088FE0();
  __asm { BR              X9 }
}

uint64_t sub_1BC05C6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8);
  v6(v3, v1);
  v6(v2, v1);
  v6(v4, v1);
  v6(*(_QWORD *)(v5 - 96), v1);
  v6(v0, v1);
  v7 = sub_1BC088E84();
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(*(_QWORD *)(v5 - 88), 1, 1, v7);
}

uint64_t sub_1BC05C908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static AllDataSummarySection.DateRange.allDataSummaryDate(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  _QWORD v14[2];

  v14[1] = a1;
  v14[0] = sub_1BC089028();
  v1 = *(_QWORD *)(v14[0] - 8);
  MEMORY[0x1E0C80A78](v14[0]);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC0890AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC088E84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC088E30();
  v12 = sub_1BC088E3C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BC089094();
  if ((v12 & 1) != 0)
    sub_1BC08901C();
  else
    sub_1BC088E6C();
  sub_1BC089070();
  (*(void (**)(char *, _QWORD))(v1 + 8))(v3, v14[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AllDataSummarySection.DateRange.isDateInSection(_:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v55 = a1;
  sub_1BC05CF8C();
  v54 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v48 - v5;
  v7 = sub_1BC089028();
  v53 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v48 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v48 - v14;
  sub_1BC05CFF0();
  v56 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v58 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v48 - v20;
  MEMORY[0x1E0C80A78](v19);
  v57 = (uint64_t)&v48 - v21;
  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v48 - v23;
  v25 = sub_1BC088E84();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFE9184(v59, (uint64_t)v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_1BBFE8B5C((uint64_t)v24);
    v29 = 0;
    return v29 & 1;
  }
  v59 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
  sub_1BC088E6C();
  sub_1BC088E48();
  v51 = sub_1BC05D050();
  result = sub_1BC08A39C();
  if ((result & 1) != 0)
  {
    v48 = v28;
    v49 = v25;
    v32 = v53;
    v31 = v54;
    v33 = &v6[*(int *)(v54 + 48)];
    v50 = v10;
    v34 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v34(v6, v15, v7);
    v34(v33, v13, v7);
    v35 = &v4[*(int *)(v31 + 48)];
    v36 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    v36(v4, v6, v7);
    v36(v35, v33, v7);
    v37 = (uint64_t)v52;
    v34(v52, v4, v7);
    v38 = *(void (**)(char *, uint64_t))(v32 + 8);
    v38(v35, v7);
    v39 = &v4[*(int *)(v31 + 48)];
    v34(v4, v6, v7);
    v34(v39, v33, v7);
    v34((char *)(v37 + *(int *)(v56 + 36)), v39, v7);
    v40 = v38;
    v41 = v50;
    v38(v4, v7);
    v42 = v57;
    sub_1BC05D098(v37, v57);
    v43 = v55;
    LOBYTE(v33) = sub_1BC08A39C();
    v36(v41, v43, v7);
    v44 = v58;
    sub_1BC05D0DC(v42, v58);
    if ((v33 & 1) != 0)
      v29 = sub_1BC08A390();
    else
      v29 = 0;
    v46 = v48;
    v45 = v49;
    v47 = v59;
    sub_1BC05D120(v44);
    v40(v41, v7);
    sub_1BC05D120(v42);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v45);
    return v29 & 1;
  }
  __break(1u);
  return result;
}

uint64_t static AllDataSummarySection.DateRange.dateIntervalCorrespondsToTodaySection(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1BC088E84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC088E30();
  v4 = sub_1BC088E3C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

void sub_1BC05CF8C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF3EE258)
  {
    sub_1BC089028();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF3EE258);
  }
}

void sub_1BC05CFF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3EE260)
  {
    sub_1BC089028();
    sub_1BC05D050();
    v0 = sub_1BC08A5DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3EE260);
  }
}

unint64_t sub_1BC05D050()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3EE268;
  if (!qword_1EF3EE268)
  {
    v1 = sub_1BC089028();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3EE268);
  }
  return result;
}

uint64_t sub_1BC05D098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC05CFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC05D0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC05CFF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC05D120(uint64_t a1)
{
  uint64_t v2;

  sub_1BC05CFF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC05D160()
{
  unint64_t result;

  result = qword_1ED69BDF8;
  if (!qword_1ED69BDF8)
  {
    result = MEMORY[0x1BCCE9B68]("eOA+Hb", &type metadata for AllDataSummarySection.Identifier);
    atomic_store(result, (unint64_t *)&qword_1ED69BDF8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AllDataSummarySection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC089028();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for AllDataSummarySection(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC089028();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for AllDataSummarySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for AllDataSummarySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for AllDataSummarySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AllDataSummarySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC089028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AllDataSummarySection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC05D3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1BC089028();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 8)
    return v9 - 7;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AllDataSummarySection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC05D460(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC089028();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  return result;
}

uint64_t sub_1BC05D4D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC089028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AllDataSummarySection.Identifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AllDataSummarySection.Identifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BC05D624 + 4 * byte_1BC08D6E5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BC05D658 + 4 * byte_1BC08D6E0[v4]))();
}

uint64_t sub_1BC05D658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC05D660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC05D668);
  return result;
}

uint64_t sub_1BC05D674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC05D67CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BC05D680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC05D688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AllDataSummarySection.Identifier()
{
  return &type metadata for AllDataSummarySection.Identifier;
}

uint64_t *initializeBufferWithCopyOfBuffer for AllDataSummarySection.DateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC088E84();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for AllDataSummarySection.DateRange(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BC088E84();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AllDataSummarySection.DateRange(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC088E84();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for AllDataSummarySection.DateRange(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1BC088E84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for AllDataSummarySection.DateRange(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BC088E84();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for AllDataSummarySection.DateRange(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1BC088E84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AllDataSummarySection.DateRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC05DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 8)
    return v9 - 7;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AllDataSummarySection.DateRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC05DC88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BBFDB42C(0, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
}

void sub_1BC05DD18()
{
  unint64_t v0;

  sub_1BBFDB42C(319, &qword_1ED69DAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t Array<A>.makeGeneratorPipelineProviderWrappers()()
{
  uint64_t v0;

  v0 = sub_1BC08A534();
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEAF38], v0);
  return sub_1BC08A45C();
}

double sub_1BC05DE14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  void (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  __int128 v16;
  double result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v19, a2, a3);
  if (*((_QWORD *)&v20 + 1))
  {
    sub_1BBFE95C8(&v19, (uint64_t)v23);
    v8 = v24;
    v9 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    sub_1BC067430(v8, v9, (uint64_t (**)())&v18);
    v10 = *(_QWORD *)(a3 + 8);
    *((_QWORD *)&v21 + 1) = a2;
    v22 = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
    v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16);
    v12(boxed_opaque_existential_0, a1, a2);
    v19 = v18;
    v13 = v24;
    v14 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    sub_1BC03542C(v13, v14, (uint64_t (**)())&v18);
    *(_QWORD *)(a4 + 96) = a2;
    *(_QWORD *)(a4 + 104) = v10;
    v15 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a4 + 72));
    v12(v15, a1, a2);
    *(_OWORD *)(a4 + 56) = v18;
    v16 = v20;
    *(_OWORD *)a4 = v19;
    *(_OWORD *)(a4 + 16) = v16;
    *(_OWORD *)(a4 + 32) = v21;
    *(_QWORD *)(a4 + 48) = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    sub_1BC05DFB0((uint64_t)&v19);
    result = 0.0;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

double sub_1BC05DF70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC05DE14(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t dispatch thunk of FeedItemGenerationPluginInfo.principalClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedItemGenerationPluginInfo.principalClass.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeedItemGenerationPluginInfo.principalClass.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedItemGenerationPluginInfo.makeFeedItemGenerator(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedItemGenerationPluginInfo.makeHealthPluginDelegate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1BC05DFB0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC05DFEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC05DFEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B3A0)
  {
    sub_1BC05E040();
    v0 = sub_1BC08A7D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B3A0);
  }
}

unint64_t sub_1BC05E040()
{
  unint64_t result;

  result = qword_1ED69BAA8;
  if (!qword_1ED69BAA8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED69BAA8);
  }
  return result;
}

uint64_t sub_1BC05E094(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t result;

  v3 = (void *)objc_opt_self();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_hashTransform);
  sub_1BC00DA34();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v6 + 32) = v1;
  sub_1BC08A4E0();
  sub_1BBFDA8B0();
  v7 = v1;
  v8 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v3, sel_transformedFeatureWithTransformer_features_, v5, v8);

  if (a1 < 0)
  {
    result = sub_1BC08AA68();
    __break(1u);
  }
  else
  {
    v10 = objc_msgSend(v4, sel_maskTransformWithWidth_, 10);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC08B600;
    *(_QWORD *)(v11 + 32) = v9;
    sub_1BC08A4E0();
    v12 = v9;
    v13 = (void *)sub_1BC08A4BC();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v3, sel_transformedFeatureWithTransformer_features_, v10, v13);

    return (uint64_t)v14;
  }
  return result;
}

uint64_t sub_1BC05E28C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t result;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;

  v2 = v1;
  v4 = (void *)objc_opt_self();
  result = objc_opt_self();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = (void *)result;
    v7 = (void *)objc_opt_self();
    v8 = objc_msgSend(v7, sel_featureValueWithDouble_, 0.0);
    v9 = objc_msgSend(v7, sel_featureValueWithDouble_, 1.0);
    v10 = objc_msgSend(v6, sel_bucketTransformerWithCount_minValue_maxValue_, a1, v8, v9);

    sub_1BC00DA34();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC08B600;
    *(_QWORD *)(v11 + 32) = v2;
    sub_1BC08A4E0();
    sub_1BBFDA8B0();
    v12 = v2;
    v13 = (void *)sub_1BC08A4BC();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v4, sel_transformedFeatureWithTransformer_features_, v10, v13);

    return (uint64_t)v14;
  }
  return result;
}

uint64_t MutualExclusionGroupFeatureTag.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

HealthPlatformCore::MutualExclusionGroupFeatureTag __swiftcall MutualExclusionGroupFeatureTag.init(_:)(HealthPlatformCore::MutualExclusionGroupFeatureTag result)
{
  HealthPlatformCore::MutualExclusionGroupFeatureTag *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1BC05E42C()
{
  return sub_1BC089988();
}

uint64_t sub_1BC05E450()
{
  return sub_1BC089994();
}

uint64_t sub_1BC05E474()
{
  return sub_1BC0899A0();
}

uint64_t sub_1BC05E48C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1BC05E498@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t MutualExclusionGroupFeatureTag.init(dataVisualizationKind:dataType:excludeWithSameCategory:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v12 = sub_1BC089874();
  v13 = v8;
  if ((a3 & 1) != 0)
  {
    _s14HealthPlatform7KeywordC0aB4CoreE11identifiers3forSaySSGSo12HKObjectTypeC_tFZ_0();
    sub_1BBFEC21C();
    sub_1BBFE6088();
    sub_1BC08A384();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = objc_msgSend(a2, sel_identifier);
    sub_1BC08A3C0();

  }
  sub_1BC08A420();
  swift_bridgeObjectRelease();
  sub_1BC08A420();

  swift_bridgeObjectRelease();
  v10 = sub_1BC089880();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  *a4 = v12;
  a4[1] = v13;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MutualExclusionGroupFeatureTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MutualExclusionGroupFeatureTag()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for MutualExclusionGroupFeatureTag(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MutualExclusionGroupFeatureTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MutualExclusionGroupFeatureTag(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MutualExclusionGroupFeatureTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MutualExclusionGroupFeatureTag()
{
  return &type metadata for MutualExclusionGroupFeatureTag;
}

void sub_1BC05E738()
{
  void *v0;
  id v1;

  sub_1BC089A0C();
  sub_1BC089724();
  v0 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_featureWithName_featureType_, v0, 1);

  qword_1ED6A0688 = (uint64_t)v1;
}

uint64_t sub_1BC05E7B4()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1ED69DA90 != -1)
    swift_once();
  v0 = *(_QWORD *)(sub_1BC089868() + 16);
  swift_bridgeObjectRelease();
  result = sub_1BC05E094(v0);
  qword_1ED6A0680 = result;
  return result;
}

uint64_t SummaryTabFeedPopulationManager.collectHighlightsInteractionAnalytics(in:)(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;

  v3 = *v1;
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = v3;
  sub_1BC05F75C(0, &qword_1ED69C8B8);
  swift_allocObject();
  v6 = a1;
  sub_1BC08A090();
  sub_1BC05F7BC(&qword_1ED69C8B0, &qword_1ED69C8B8);
  v7 = sub_1BC08A180();
  swift_release();
  return v7;
}

uint64_t sub_1BC05E91C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t SummaryTabFeedPopulationManager.collectModelAnalytics()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_1BC08A6F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC08A6E4();
  v5 = *(id *)(v0 + 104);
  v6 = sub_1BC0464A4((uint64_t)v4, (uint64_t)v5);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t SummaryTabFeedPopulationManager.collectModelAnalytics<A>(timeout:timeoutScheduler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v56 = a1;
  v44 = *v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1BC08A7D4();
  v55 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v39 - v10;
  sub_1BC05F75C(255, &qword_1ED69C8C8);
  v13 = v12;
  v14 = sub_1BC05F7BC(&qword_1ED69C8C0, &qword_1ED69C8C8);
  v58 = v13;
  v59 = a3;
  v48 = v14;
  v60 = v14;
  v61 = a4;
  v15 = sub_1BC089F64();
  v53 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)v39 - v16;
  v17 = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95CB8], v15);
  v54 = v15;
  v58 = v15;
  v59 = a3;
  v47 = v17;
  v60 = v17;
  v61 = a4;
  v18 = sub_1BC089EF8();
  v50 = *(_QWORD *)(v18 - 8);
  v51 = v18;
  MEMORY[0x1E0C80A78](v18);
  v49 = (char *)v39 - v19;
  v20 = sub_1BC089DE4();
  v45 = *(_QWORD *)(v20 - 8);
  v46 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  v23 = sub_1BC089DD8();
  v24 = sub_1BC08A678();
  if (os_log_type_enabled(v23, v24))
  {
    v41 = v9;
    v25 = swift_slowAlloc();
    v42 = a2;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v43 = a3;
    v28 = v27;
    v57 = v27;
    v40 = AssociatedTypeWitness;
    *(_DWORD *)v26 = 136446210;
    v39[1] = v26 + 4;
    v58 = v44;
    swift_getMetatypeMetadata();
    v29 = sub_1BC08A3E4();
    v58 = sub_1BBFDE0F8(v29, v30, &v57);
    AssociatedTypeWitness = v40;
    sub_1BC08A7EC();
    v9 = v41;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v23, v24, "[%{public}s]: Collecting RelevanceEngine metrics", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v28, -1, -1);
    MEMORY[0x1BCCE9C40](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v46);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  v58 = sub_1BC08A090();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v31(v11, 1, 1, AssociatedTypeWitness);
  v32 = v52;
  sub_1BC08A204();
  v33 = *(void (**)(char *, uint64_t))(v55 + 8);
  v33(v11, v9);
  swift_release();
  v31(v11, 1, 1, AssociatedTypeWitness);
  v34 = v49;
  v35 = v54;
  sub_1BC08A210();
  v33(v11, v9);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v35);
  v36 = v51;
  MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95B90], v51);
  v37 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v36);
  return v37;
}

uint64_t sub_1BC05EE74(uint64_t (*a1)(_OWORD *), uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  _OWORD v8[2];
  uint64_t v9;
  char v10;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = (_QWORD *)sub_1BC07299C();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = *(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4)
                                                                                        + 0x140);
    swift_retain();
    v6(sub_1BC060738, v5);
    swift_release();

    return swift_release();
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    v10 = 1;
    return a1(v8);
  }
}

void sub_1BC05EF64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36[5];
  char v37;

  v7 = sub_1BC089DE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  swift_bridgeObjectRetain_n();
  v11 = sub_1BC089DD8();
  v12 = sub_1BC08A678();
  if (os_log_type_enabled(v11, v12))
  {
    v32 = v7;
    v13 = swift_slowAlloc();
    v34 = a4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v33 = a5;
    v16 = v15;
    v36[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v31[1] = v14 + 4;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCE0);
    swift_bridgeObjectRetain();
    v17 = sub_1BC08A30C();
    v19 = v18;
    swift_bridgeObjectRelease();
    v35 = sub_1BBFDE0F8(v17, v19, v36);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v11, v12, "RelevanceEngine analytics collected: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v16, -1, -1);
    v20 = v14;
    a4 = v34;
    MEMORY[0x1BCCE9C40](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v21 = swift_bridgeObjectRetain();
  AppSessionAnalyticsEvent.ModelAnalytics.init(relevanceEngineMetrics:)(v21, v36);
  v22 = (void *)v36[0];
  v23 = (void *)v36[1];
  v24 = (void *)v36[2];
  v25 = (void *)v36[3];
  v37 = 0;
  v26 = (id)v36[4];
  v27 = v22;
  v28 = v23;
  v29 = v24;
  v30 = v25;
  a4(v36);

}

uint64_t sub_1BC05F214@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_1BC089DE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DCC();
  v6 = sub_1BC089DD8();
  v7 = sub_1BC08A660();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BBFD7000, v6, v7, "RelevanceEngine analytics never returned; moving on", v8, 2u);
    MEMORY[0x1BCCE9C40](v8, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = 1;
  return result;
}

uint64_t sub_1BC05F310(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  uint64_t (*v53)();
  _QWORD *v54;

  v44 = a5;
  v45 = a4;
  v7 = sub_1BC08A270();
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC08A2B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v46 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC089DE4();
  v43 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = Strong;
    v39 = a2;
    v40 = v11;
    v41 = v10;
    v42 = v9;
    sub_1BC089DCC();
    v18 = sub_1BC089DD8();
    v19 = sub_1BC08A678();
    if (os_log_type_enabled(v18, v19))
    {
      v38 = v7;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v37 = v13;
      v22 = v21;
      *(_DWORD *)v20 = 136446210;
      v36[1] = v20 + 4;
      v23 = v44;
      v48 = v21;
      aBlock = v44;
      swift_getMetatypeMetadata();
      v24 = sub_1BC08A3E4();
      aBlock = sub_1BBFDE0F8(v24, v25, &v48);
      sub_1BC08A7EC();
      v7 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v18, v19, "[%{public}s]: enqueuing collect highlights interaction analytics", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v22, -1, -1);
      MEMORY[0x1BCCE9C40](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v37);
      v26 = v39;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
      v26 = v39;
      v23 = v44;
    }
    v28 = *(void **)(v17 + 104);
    v29 = (_QWORD *)swift_allocObject();
    v30 = v45;
    v29[2] = v45;
    v29[3] = v17;
    v29[4] = a1;
    v29[5] = v26;
    v29[6] = v23;
    v53 = sub_1BC060774;
    v54 = v29;
    aBlock = MEMORY[0x1E0C809B0];
    v50 = 1107296256;
    v51 = sub_1BBFE410C;
    v52 = &block_descriptor_8;
    v31 = _Block_copy(&aBlock);
    v32 = v28;
    v33 = v30;
    swift_retain();
    swift_retain();
    v34 = v46;
    sub_1BC08A288();
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC01DED0(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD28, (uint64_t (*)(uint64_t))sub_1BC01DED0, MEMORY[0x1E0DEAF38]);
    v35 = v42;
    sub_1BC08A834();
    MEMORY[0x1BCCE90DC](0, v34, v35, v31);
    _Block_release(v31);
    swift_release();

    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v7);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v41);
    return swift_release();
  }
  else
  {
    aBlock = 0;
    v50 = 0;
    LOBYTE(v51) = 1;
    return a1(&aBlock);
  }
}

uint64_t sub_1BC05F724()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC05F750(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_1BC05F310(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1BC05F75C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_1BC046CCC();
    v3 = sub_1BC08A084();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BC05F7BC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1BC05F75C(255, a2);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C96108], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC05F7FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t result;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;

  v31 = a3;
  v32 = a4;
  v8 = sub_1BC08A270();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC08A2B8();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x1E0C80A78](v10);
  v33 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC08A27C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_BYTE *)(v16 + 32) = -1;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = v16 + 16;
  v17[5] = a5;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1BC060810;
  *(_QWORD *)(v18 + 24) = v17;
  v44 = sub_1BC047244;
  v45 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v41 = 1107296256;
  v42 = sub_1BC00FE14;
  v43 = &block_descriptor_22_0;
  v19 = _Block_copy(&aBlock);
  v20 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_performBlockAndWait_, v19);
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_1BC089B20();
    swift_release();
    v22 = (_QWORD *)swift_allocObject();
    v23 = v32;
    v22[2] = v31;
    v22[3] = v23;
    v22[4] = v16;
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF528], v12);
    swift_retain();
    swift_retain();
    swift_retain();
    v24 = (void *)sub_1BC08A720();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = sub_1BC060858;
    *(_QWORD *)(v25 + 24) = v22;
    v44 = sub_1BC047244;
    v45 = v25;
    aBlock = MEMORY[0x1E0C809B0];
    v41 = 1107296256;
    v42 = sub_1BBFE410C;
    v43 = &block_descriptor_31;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    v27 = v33;
    sub_1BC08A288();
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC01DED0(0);
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69DD28, (uint64_t (*)(uint64_t))sub_1BC01DED0, MEMORY[0x1E0DEAF38]);
    v28 = v36;
    v29 = v38;
    sub_1BC08A834();
    MEMORY[0x1BCCE90DC](0, v27, v28, v26);
    _Block_release(v26);
    swift_release();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v29);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BC05FC4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  unsigned __int8 v39;
  void *v40;
  void *v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;

  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089AFC();
  v12 = objc_msgSend(*(id *)(a2 + 56), sel_profileIdentifier);
  v13 = (void *)sub_1BC089AF0();

  v14 = (void *)sub_1BC089898();
  if (v14)
  {
    v48 = v9;
    swift_retain();
    sub_1BC089B14();
    swift_release();
    v15 = (uint64_t)v50;
    swift_retain();
    v16 = a1;
    v17 = sub_1BC060990(v15, a2, (uint64_t)v16, a4);
    swift_bridgeObjectRelease();

    swift_release();
    v18 = v14;
    sub_1BC0603A4(v14);
    v47 = v18;

    AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics.init(averageProbabilityOfPositiveInteractionForThisSession:interactedFeedItems:)(v17, (uint64_t *)&v50);
    v20 = v50;
    v19 = v51;
    sub_1BC089DCC();
    v21 = v20;
    v22 = v19;
    v23 = v21;
    v24 = v22;
    v25 = sub_1BC089DD8();
    v26 = sub_1BC08A678();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v46 = (uint64_t)v20;
      v28 = v27;
      v44 = swift_slowAlloc();
      v49 = v44;
      v50 = (void *)a4;
      *(_DWORD *)v28 = 136446466;
      swift_getMetatypeMetadata();
      v45 = v8;
      v29 = sub_1BC08A3E4();
      v50 = (void *)sub_1BBFDE0F8(v29, v30, &v49);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v50 = (void *)v46;
      v51 = v24;
      v31 = v23;
      v32 = v24;
      v33 = sub_1BC08A3E4();
      v50 = (void *)sub_1BBFDE0F8(v33, v34, &v49);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v25, v26, "[%{public}s]: highlights interaction analytics collected: %s", (uint8_t *)v28, 0x16u);
      v35 = v44;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v35, -1, -1);
      v36 = v28;
      v20 = (void *)v46;
      MEMORY[0x1BCCE9C40](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v8);
    }
    v40 = *(void **)a3;
    v41 = *(void **)(a3 + 8);
    *(_QWORD *)a3 = v20;
    *(_QWORD *)(a3 + 8) = v24;
    v42 = *(_BYTE *)(a3 + 16);
    *(_BYTE *)(a3 + 16) = 0;
    sub_1BC0608B4(v40, v41, v42);
  }
  else
  {
    v37 = *(void **)a3;
    v38 = *(void **)(a3 + 8);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v39 = *(_BYTE *)(a3 + 16);
    *(_BYTE *)(a3 + 16) = 1;
    sub_1BC0608B4(v37, v38, v39);
  }
}

uint64_t sub_1BC060024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t result;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a3;
  v37 = a4;
  v34 = type metadata accessor for ModelTrainingEvent();
  v7 = MEMORY[0x1E0C80A78](v34);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_1BC089DE4();
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  sub_1BBFDF744(0, &qword_1ED69DB98);
  v15 = sub_1BC0891CC();
  if (v15)
  {
    v16 = (void *)v15;
    sub_1BC089C4C();
    v17 = swift_dynamicCastClass();
    if (v17)
    {
      v18 = (void *)v17;
      sub_1BC0608CC(a1, (uint64_t)v9);
      type metadata accessor for AppSessionAnalyticsEvent.HighlightsFeedInteractionAnalytics.InteractedFeedItem(0);
      v19 = swift_allocObject();
      sub_1BC0608CC((uint64_t)v9, v19+ OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent34HighlightsFeedInteractionAnalytics18InteractedFeedItem_modelTrainingEvent);
      swift_retain();
      v20 = objc_msgSend(v18, sel_sectionSortOrder);
      *(_QWORD *)(v19
                + OBJC_IVAR____TtCVV18HealthPlatformCore24AppSessionAnalyticsEvent34HighlightsFeedInteractionAnalytics18InteractedFeedItem_rank) = v20;
      swift_release();
      v21 = AppSessionAnalyticsEvent.HighlightsFeedPresentationAnalytics.GeneratedFeedItem.init(feedItem:)(v18);
      result = sub_1BC060910((uint64_t)v9);
      goto LABEL_9;
    }

  }
  sub_1BC089DCC();
  sub_1BC0608CC(a1, (uint64_t)v11);
  v23 = sub_1BC089DD8();
  v24 = sub_1BC08A660();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v38 = v32;
    *(_DWORD *)v25 = 136446466;
    v39 = v33;
    swift_getMetatypeMetadata();
    v33 = v4;
    v26 = sub_1BC08A3E4();
    v39 = sub_1BBFDE0F8(v26, v27, &v38);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    sub_1BC0608CC((uint64_t)v11, (uint64_t)v9);
    v28 = sub_1BC08A3E4();
    v39 = sub_1BBFDE0F8(v28, v29, &v38);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    sub_1BC060910((uint64_t)v11);
    _os_log_impl(&dword_1BBFD7000, v23, v24, "[%{public}s]: unable to find feedItem for interaction: %s", (uint8_t *)v25, 0x16u);
    v30 = v32;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v30, -1, -1);
    MEMORY[0x1BCCE9C40](v25, -1, -1);
  }
  else
  {
    sub_1BC060910((uint64_t)v11);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v36);
  v21 = 0;
LABEL_9:
  *v37 = v21;
  return result;
}

uint64_t sub_1BC0603A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t result;
  _QWORD v28[3];
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v5 = type metadata accessor for ModelTrainingEvent();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v28 - v10;
  if (!a1)
    goto LABEL_18;
  v30 = v1;
  v28[2] = OBJC_IVAR____TtC18HealthPlatformCore31SummaryTabFeedPopulationManager_trainingAnalyticsCache;
  v29 = a1;
  swift_retain();
  sub_1BC089B14();
  swift_release();
  v12 = v34;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v34 + 16);
  if (v14)
  {
    v28[1] = a1;
    v15 = 0;
    v31 = v14;
    v32 = v6;
    while (v15 < *(_QWORD *)(v12 + 16))
    {
      v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v17 = *(_QWORD *)(v6 + 72);
      sub_1BC0608CC(v12 + v16 + v17 * v15, (uint64_t)v11);
      if (v11[*(int *)(v5 + 24)] == 1)
      {
        v18 = v5;
        sub_1BC06094C((uint64_t)v11, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BBFE468C(0, v13[2] + 1, 1);
        v13 = v33;
        v20 = v33[2];
        v19 = v33[3];
        if (v20 >= v19 >> 1)
        {
          sub_1BBFE468C(v19 > 1, v20 + 1, 1);
          v13 = v33;
        }
        v13[2] = v20 + 1;
        sub_1BC06094C((uint64_t)v9, (uint64_t)v13 + v16 + v20 * v17);
        v5 = v18;
        v14 = v31;
        v6 = v32;
      }
      else
      {
        sub_1BC060910((uint64_t)v11);
      }
      if (v14 == ++v15)
      {
        v13 = v33;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v2 = v13[2];
    swift_release();
    v21 = v30;
    swift_retain();
    sub_1BC089B14();
    swift_release();
    v22 = *(_QWORD *)(v34 + 16);
    swift_bridgeObjectRelease();
    v3 = (double)v22;
    v13 = v29;
    v23 = sub_1BC089A6C();
    swift_retain();
    v24 = sub_1BC060AD4(v23, v21);
    swift_bridgeObjectRelease();
    swift_release();
    if (!(v24 >> 62))
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_16;
    }
  }
  v25 = sub_1BC08AA80();
LABEL_16:
  swift_bridgeObjectRelease();

  v26 = v3 + (double)v25;
  if (v26 > 0.0)
  {
    *(double *)&result = (double)v2 / v26;
    return result;
  }
LABEL_18:
  *(double *)&result = 0.0;
  return result;
}

uint64_t sub_1BC060674(_QWORD *a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1BC0606A4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[2];
  char v10;

  swift_beginAccess();
  v5 = *(unsigned __int8 *)(a3 + 32);
  if (v5 == 255)
  {
    __break(1u);
  }
  else
  {
    v8 = a3 + 16;
    v6 = *(void **)(a3 + 16);
    v7 = *(void **)(v8 + 8);
    v9[0] = v6;
    v9[1] = v7;
    v10 = v5 & 1;
    sub_1BC060888(v6, v7, v5 & 1);
    a1(v9);
    sub_1BC0608B4(v6, v7, v5);
  }
}

void sub_1BC060738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1BC05EF64(a1, a2, a3, *(void (**)(_QWORD))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1BC060740()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC060774()
{
  uint64_t v0;

  return sub_1BC05F7FC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1BC060784()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_1BC0607B8(*(void **)(v0 + 16), *(void **)(v0 + 24), v1 & 1);
  return swift_deallocObject();
}

void sub_1BC0607B8(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    sub_1BC045E5C(a1);
  }
  else
  {

  }
}

uint64_t sub_1BC0607E4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC060810()
{
  uint64_t v0;

  sub_1BC05FC4C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC06081C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC06082C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC060858()
{
  uint64_t v0;

  sub_1BC0606A4(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC060864()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1BC060888(void *a1, void *a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
    return sub_1BC04725C(a1);
  v4 = a1;
  return a2;
}

void sub_1BC0608B4(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_1BC0607B8(a1, a2, a3 & 1);
}

uint64_t sub_1BC0608CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModelTrainingEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC060910(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModelTrainingEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC06094C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModelTrainingEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC060990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  v15 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v9 = *(_QWORD *)(type metadata accessor for ModelTrainingEvent() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v12 = sub_1BC060024(v10, a2, a4, &v14);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v14)
      {
        MEMORY[0x1BCCE8E84](v12);
        if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1BC060AD4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v27 = a2;
  v29 = sub_1BC088F98();
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v21 = v3;
      v9 = 0;
      v25 = a1 & 0xFFFFFFFFFFFFFF8;
      v26 = a1 & 0xC000000000000001;
      v20 = a1;
      v23 = (_QWORD *)(a1 + 32);
      v24 = OBJC_IVAR____TtC18HealthPlatformCore31SummaryTabFeedPopulationManager_trainingAnalyticsCache;
      v22 = v8;
      while (v26)
      {
        v10 = (id)MEMORY[0x1BCCE934C](v9, v20);
LABEL_9:
        v11 = v10;
        if (__OFADD__(v9++, 1))
          goto LABEL_20;
        swift_retain();
        sub_1BC089B14();
        swift_release();
        v13 = v30;
        a1 = *(_QWORD *)(v30 + 16);
        if (a1)
        {
          v14 = *(_QWORD *)(type metadata accessor for ModelTrainingEvent() - 8);
          v3 = v13 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
          v15 = *(_QWORD *)(v14 + 72);
          v28 = v13;
          swift_bridgeObjectRetain();
          do
          {
            v16 = objc_msgSend(v11, sel_objectID);
            v17 = objc_msgSend(v16, sel_URIRepresentation);

            sub_1BC088F8C();
            LOBYTE(v17) = MEMORY[0x1BCCE7954](v3, v7);
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
            if ((v17 & 1) != 0)
            {

              swift_bridgeObjectRelease_n();
              v8 = v22;
              goto LABEL_5;
            }
            v3 += v15;
            --a1;
          }
          while (a1);
          swift_bridgeObjectRelease_n();
          v8 = v22;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        a1 = (unint64_t)&v31;
        sub_1BC08A9A8();
        v3 = *(_QWORD *)(v31 + 16);
        sub_1BC08A9D8();
        sub_1BC08A9E4();
        sub_1BC08A9B4();
LABEL_5:
        if (v9 == v8)
          return v31;
      }
      if (v9 < *(_QWORD *)(v25 + 16))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v8 = sub_1BC08AA80();
      if (!v8)
        return MEMORY[0x1E0DEE9D8];
    }
    v10 = (id)v23[v9];
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC060D74(void *a1, void *a2, void *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  unint64_t v27;
  unint64_t v28;
  id *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t result;
  _BYTE v34[4];
  int v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v35 = a4;
  v7 = sub_1BC089448();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v34[-v12];
  v36 = (id)sub_1BC089C4C();
  v14 = (void *)MEMORY[0x1BCCE8578]();
  v15 = sub_1BC061410(a1, a2, a3, v35);
  objc_msgSend(v14, sel_setPredicate_, v15);

  v16 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v17 = (void *)sub_1BC08A3B4();
  v18 = objc_msgSend(v16, sel_initWithKey_ascending_, v17, 0);

  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v19 + 32) = v18;
  v38 = v19;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69DBA8);
  v20 = v18;
  v21 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSortDescriptors_, v21);

  v22 = v14;
  v23 = sub_1BC08A78C();
  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();

    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v24 = sub_1BC08AA80();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_16;
LABEL_3:
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1BBFE4548(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    v36 = v20;
    v25 = v38;
    if ((v23 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v24; ++i)
      {
        MEMORY[0x1BCCE934C](i, v23);
        sub_1BC089400();
        v38 = v25;
        v28 = *(_QWORD *)(v25 + 16);
        v27 = *(_QWORD *)(v25 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1BBFE4548(v27 > 1, v28 + 1, 1);
          v25 = v38;
        }
        *(_QWORD *)(v25 + 16) = v28 + 1;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v25+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, v13, v7);
      }
    }
    else
    {
      v29 = (id *)(v23 + 32);
      do
      {
        v30 = *v29;
        sub_1BC089400();
        v38 = v25;
        v32 = *(_QWORD *)(v25 + 16);
        v31 = *(_QWORD *)(v25 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1BBFE4548(v31 > 1, v32 + 1, 1);
          v25 = v38;
        }
        *(_QWORD *)(v25 + 16) = v32 + 1;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v25+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v32, v11, v7);
        ++v29;
        --v24;
      }
      while (v24);
    }

    swift_bridgeObjectRelease();
    return v25;
  }
  __break(1u);
  v38 = 0;
  v39 = 0xE000000000000000;
  sub_1BC08A954();
  sub_1BC08A420();
  v37 = v24;
  sub_1BBFDC1EC(0, (unint64_t *)&qword_1ED69DAA0);
  sub_1BC08AA20();
  result = sub_1BC08AA74();
  __break(1u);
  return result;
}

uint64_t HealthExperienceStoreFeedItemContext.previousFeedItems(predicate:)(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  uint64_t v15;
  _QWORD aBlock[6];
  uint64_t v17;

  v5 = v4;
  v17 = MEMORY[0x1E0DEE9D8];
  v10 = *(void **)(v4 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_storageContext);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = &v17;
  *(_QWORD *)(v11 + 24) = v5;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v11 + 48) = a3;
  *(_BYTE *)(v11 + 56) = a4;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC0613C4;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1BC047244;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC00FE14;
  aBlock[3] = &block_descriptor_9;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC013D70(a1, a2, a3, a4);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_performBlockAndWait_, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = v17;
    swift_release();
    return v15;
  }
  return result;
}

uint64_t sub_1BC061390()
{
  uint64_t v0;

  swift_release();
  sub_1BC013E44(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1BC0613C4()
{
  uint64_t v0;
  uint64_t *v1;

  v1 = *(uint64_t **)(v0 + 16);
  *v1 = sub_1BC060D74(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC061400()
{
  return swift_deallocObject();
}

id sub_1BC061410(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v42;

  sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DB88);
  sub_1BC00A718();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC08B960;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1BBFDF700();
  *(_QWORD *)(v7 + 64) = v9;
  strcpy((char *)(v7 + 32), "pluginPackage");
  *(_WORD *)(v7 + 46) = -4864;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo), *(_QWORD *)(v4 + OBJC_IVAR____TtC18HealthPlatformCore36HealthExperienceStoreFeedItemContext_pluginInfo + 24));
  v10 = sub_1BC089220();
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  v12 = (void *)sub_1BC08A5E8();
  sub_1BBFDA924(0, (unint64_t *)&qword_1ED69BA48, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC08B600;
  *(_QWORD *)(v13 + 32) = v12;
  v42 = v13;
  sub_1BC08A4E0();
  if (a4)
  {
    if (a4 == 1)
    {
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1BC08B960;
      sub_1BC089C4C();
      v15 = v12;
      v16 = v12;
      swift_bridgeObjectRetain();
      sub_1BC013DC4(a3);
      v17 = sub_1BC089C1C();
      *(_QWORD *)(v14 + 56) = v8;
      *(_QWORD *)(v14 + 64) = v9;
      *(_QWORD *)(v14 + 32) = v17;
      *(_QWORD *)(v14 + 40) = v18;
      *(_QWORD *)(v14 + 96) = v8;
      *(_QWORD *)(v14 + 104) = v9;
      *(_QWORD *)(v14 + 72) = a1;
      *(_QWORD *)(v14 + 80) = a2;
      v19 = (id)sub_1BC08A5E8();
      MEMORY[0x1BCCE8E84]();
      if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();
      if (a3 == (void *)1)
      {

        v12 = v15;
      }
      else
      {
        sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1BC08B950;
        *(_QWORD *)(v28 + 32) = a3;
        v29 = a3;
        MEMORY[0x1BCCE8614](v28);
        v30 = swift_bridgeObjectRelease();
        MEMORY[0x1BCCE8E84](v30);
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();

        sub_1BC013E98(a3);
        sub_1BC013E98(a3);
        v12 = v15;
      }
    }
    else if (a1 == (void *)1)
    {
      v27 = v12;
    }
    else
    {
      sub_1BC089C4C();
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1BC08B950;
      *(_QWORD *)(v34 + 32) = a1;
      v35 = v12;
      sub_1BC013D70(a1, a2, a3, 2);
      MEMORY[0x1BCCE8614](v34);
      v36 = swift_bridgeObjectRelease();
      MEMORY[0x1BCCE8E84](v36);
      if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();
    }
  }
  else
  {
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BC08B960;
    sub_1BC089C4C();
    v21 = v12;
    swift_bridgeObjectRetain();
    sub_1BC013DC4(a2);
    v22 = sub_1BC089C1C();
    *(_QWORD *)(v20 + 56) = v8;
    *(_QWORD *)(v20 + 64) = v9;
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v23;
    v24 = sub_1BBFF2544((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DCA8, v8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v20 + 96) = v25;
    *(_QWORD *)(v20 + 104) = sub_1BBFE90D8();
    *(_QWORD *)(v20 + 72) = v24;
    v26 = (id)sub_1BC08A5E8();
    MEMORY[0x1BCCE8E84]();
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC08A504();
    sub_1BC08A528();
    sub_1BC08A4E0();
    if (a2 == (void *)1)
    {

    }
    else
    {
      sub_1BBFDA924(0, (unint64_t *)&qword_1ED69DBD0, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BC08B950;
      *(_QWORD *)(v31 + 32) = a2;
      v32 = a2;
      MEMORY[0x1BCCE8614](v31);
      v33 = swift_bridgeObjectRelease();
      MEMORY[0x1BCCE8E84](v33);
      if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC08A504();
      sub_1BC08A528();
      sub_1BC08A4E0();

      sub_1BC013E98(a2);
      sub_1BC013E98(a2);
    }
  }
  v37 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v37);

  return v38;
}

id FeedItem.associatedDisplayCategory.getter()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, sel_categoryIdentifier);
  if (v1)
  {
    sub_1BC08A3C0();

    v2 = (void *)sub_1BC08A3B4();
    swift_bridgeObjectRelease();
    v1 = objc_msgSend((id)objc_opt_self(), sel_categoryWithName_, v2);

  }
  return v1;
}

uint64_t RelevanceEngineCoordinator.sortedElements(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
  v7 = sub_1BC0641AC(v5, v6, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t RelevanceEngineCoordinator.saveModelToDisk(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t result;
  void (*v50)(unint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[7];

  v56 = a1;
  v57 = a2;
  v7 = sub_1BC08A270();
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC08A2B8();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v53 = v12;
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v50 - v15;
  v17 = sub_1BC088F98();
  v65 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v19;
  MEMORY[0x1E0C80A78](v18);
  v64 = (char *)&v50 - v21;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v54 = a3;
  v23 = a4;
  v24 = (void *)v22(a3, a4);
  v25 = objc_msgSend(v24, sel_configuration);

  v26 = objc_msgSend(v25, sel_modelFileURL);
  if (v26)
  {
    v63 = v7;
    sub_1BC088F8C();

    v27 = v65;
    v28 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v28(v16, v20, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v17) != 1)
    {
      v29 = v64;
      v30 = v16;
      v31 = v17;
      v28(v64, v30, v17);
      v32 = v54;
      v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v54, v23);
      v33 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v13, v4, v32);
      v34 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
      v35 = v65;
      v50 = (void (*)(unint64_t, char *, uint64_t))v28;
      v36 = v31;
      v34(v20, v29, v31);
      v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v38 = (v53 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      v39 = (*(unsigned __int8 *)(v35 + 80) + v38 + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v32;
      *(_QWORD *)(v40 + 24) = v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v40 + v37, v13, v32);
      v41 = (_QWORD *)(v40 + v38);
      v42 = v57;
      *v41 = v56;
      v41[1] = v42;
      v43 = v36;
      v50(v40 + v39, v20, v36);
      aBlock[4] = sub_1BC06612C;
      aBlock[5] = v40;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BBFE410C;
      aBlock[3] = &block_descriptor_10;
      v44 = _Block_copy(aBlock);
      swift_retain();
      v45 = v58;
      sub_1BC08A288();
      v66 = MEMORY[0x1E0DEE9D8];
      sub_1BC0661D8();
      sub_1BBFDB42C(0, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC009128();
      v46 = v61;
      v47 = v63;
      sub_1BC08A834();
      v48 = (void *)v51;
      MEMORY[0x1BCCE90DC](0, v45, v46, v44);
      _Block_release(v44);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v47);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v60);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v43);
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v16, 1, 1, v17);
  }
  sub_1BBFEF208((uint64_t)v16, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  result = sub_1BC08AA74();
  __break(1u);
  return result;
}

uint64_t sub_1BC062064(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  void *v14;
  uint64_t v15;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - v6;
  v8 = sub_1BC089028();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFFA6F0(a1, (uint64_t)v7, (unint64_t *)&qword_1ED69DBF8, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BBFEF208((uint64_t)v7, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    objc_msgSend(v2, sel_setAttribute_forKey_, 0, *MEMORY[0x1E0D84410]);
    return sub_1BBFEF208(a1, (unint64_t *)&qword_1ED69DBF8, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v14 = (void *)sub_1BC088FEC();
    objc_msgSend(v2, sel_setAttribute_forKey_, v14, *MEMORY[0x1E0D84410]);

    sub_1BBFEF208(a1, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t RelevanceEngineCoordinator.train(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  void *v68;
  _QWORD *v69;

  v55 = a5;
  v58 = a2;
  v59 = a3;
  v7 = sub_1BC08A27C();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC089DE4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC08A270();
  v60 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC08A2B8();
  v16 = MEMORY[0x1E0C80A78](v15);
  v17 = *(_QWORD *)(a4 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = *(_QWORD *)(a1 + 16);
  v61 = v22;
  v62 = v19;
  if (v21)
  {
    v23 = a1;
    v24 = v54;
    v25 = v55;
    v26 = v20;
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(a4, v55);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v24, a4);
    v28 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = a4;
    *((_QWORD *)v29 + 3) = v25;
    *((_QWORD *)v29 + 4) = v23;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v29[v28], (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
    v30 = (uint64_t *)&v29[(v18 + v28 + 7) & 0xFFFFFFFFFFFFFFF8];
    v32 = v58;
    v31 = v59;
    *v30 = v58;
    v30[1] = v31;
    v68 = sub_1BC0662A4;
    v69 = v29;
    aBlock = MEMORY[0x1E0C809B0];
    v65 = 1107296256;
    v66 = sub_1BBFE410C;
    v67 = &block_descriptor_6_0;
    v33 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    sub_1BBFE6078(v32);
    sub_1BC08A288();
    v63 = MEMORY[0x1E0DEE9D8];
    sub_1BC0661D8();
    sub_1BBFDB42C(0, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC009128();
    v35 = v56;
    v34 = v57;
    sub_1BC08A834();
    MEMORY[0x1BCCE90DC](0, v26, v35, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v34);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v26, v62);
  }
  else
  {
    v36 = v10;
    v37 = v9;
    v38 = v52;
    v39 = v53;
    v40 = v58;
    v55 = v20;
    sub_1BC089D9C();
    v41 = sub_1BC089DD8();
    v42 = sub_1BC08A678();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1BBFD7000, v41, v42, "RelevanceEngineCoordinator: No training events resolved, completing without any training", v43, 2u);
      MEMORY[0x1BCCE9C40](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v36);
    sub_1BBFDF744(0, (unint64_t *)&qword_1ED69DCD8);
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v37, *MEMORY[0x1E0DEF540], v39);
    v44 = (void *)sub_1BC08A720();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    v45 = swift_allocObject();
    v46 = v59;
    *(_QWORD *)(v45 + 16) = v40;
    *(_QWORD *)(v45 + 24) = v46;
    v68 = sub_1BC01EC98;
    v69 = (_QWORD *)v45;
    aBlock = MEMORY[0x1E0C809B0];
    v65 = 1107296256;
    v66 = sub_1BBFE410C;
    v67 = &block_descriptor_12;
    v47 = _Block_copy(&aBlock);
    sub_1BBFE6078(v40);
    v48 = v55;
    sub_1BC08A288();
    v63 = MEMORY[0x1E0DEE9D8];
    sub_1BC0661D8();
    sub_1BBFDB42C(0, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC009128();
    v50 = v56;
    v49 = v57;
    sub_1BC08A834();
    MEMORY[0x1BCCE90DC](0, v48, v50, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v49);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v48, v62);
  }
  return swift_release();
}

uint64_t static RelevanceEngineCoordinator.makeStandardFeatureTagFeatures()()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  if (qword_1ED69DA88 != -1)
    swift_once();
  v0 = (id)qword_1ED6A0680;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA18 != -1)
    swift_once();
  v1 = (id)qword_1ED6A0628;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA70 != -1)
    swift_once();
  v2 = (id)qword_1ED6A0670;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA50 != -1)
    swift_once();
  v3 = (id)qword_1ED6A0658;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA58 != -1)
    swift_once();
  v4 = (id)qword_1ED6A0660;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA10 != -1)
    swift_once();
  v5 = (id)qword_1ED6A0620;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA38 != -1)
    swift_once();
  v6 = (id)qword_1ED6A0648;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69DA28 != -1)
    swift_once();
  v7 = (id)qword_1ED6A0638;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  if (qword_1ED69D9F8 != -1)
    swift_once();
  v8 = (id)qword_1ED6A0608;
  MEMORY[0x1BCCE8E84]();
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC08A504();
  sub_1BC08A528();
  sub_1BC08A4E0();

  return v10;
}

uint64_t static RelevanceEngineCoordinator.instantiateEngine(engineName:modelVersion:pretrainedModelURL:modelURL:primaryFeatures:feedSections:dataSources:relevanceProviderManagerClasses:metricsRecorder:interactionDescriptors:observerQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t i;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t j;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  _QWORD v57[2];
  uint64_t aBlock;
  uint64_t v59;
  id (*v60)(uint64_t);
  void *v61;
  uint64_t (*v62)();
  uint64_t v63;

  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v57 - v19;
  sub_1BBFDF744(0, &qword_1ED69D8D0);
  v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultConfiguration);
  objc_msgSend(v21, sel_removeAllSections);
  objc_msgSend(v21, sel_removeAllInteractions);
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v57[1] = a2;
  objc_msgSend(v21, sel_setModelVersion_, a3);
  sub_1BBFFA6F0(a4, (uint64_t)v20, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v22 = sub_1BC088F98();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) != 1)
  {
    v24 = (void *)sub_1BC088F50();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
  }
  objc_msgSend(v21, sel_setBaseModelFileURL_, v24);

  objc_msgSend(v21, sel_setWantsImmutableContent_, 1);
  v25 = (void *)sub_1BC088F50();
  objc_msgSend(v21, sel_setModelFileURL_, v25);

  objc_msgSend(v21, sel_setPrimaryFeatures_, a6);
  v57[0] = a1;
  if (a7 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    result = sub_1BC08AA80();
    v26 = result;
    if (!result)
      goto LABEL_14;
    goto LABEL_6;
  }
  v26 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v26)
    goto LABEL_14;
LABEL_6:
  if (v26 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  for (i = 0; i != v26; ++i)
  {
    if ((a7 & 0xC000000000000001) != 0)
      v29 = (id)MEMORY[0x1BCCE934C](i, a7);
    else
      v29 = *(id *)(a7 + 8 * i + 32);
    v30 = v29;
    objc_msgSend(v21, sel_addSectionWithDescriptor_, v29, v57[0]);

  }
LABEL_14:
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setObserverQueue_, a12);
  v62 = sub_1BC0640F0;
  v63 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v59 = 1107296256;
  v60 = sub_1BC064154;
  v61 = &block_descriptor_15;
  v31 = _Block_copy(&aBlock);
  v32 = (void *)objc_opt_self();
  v33 = objc_msgSend(v32, sel_dataSourceLoaderWithBlock_, v31);
  _Block_release(v31);
  swift_release();
  sub_1BBFDF744(0, &qword_1ED69D8B8);
  swift_bridgeObjectRetain();
  v34 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v32, sel_dataSourceLoaderWithDataSources_, v34);

  sub_1BC022C54(0, &qword_1ED69DD08);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC08B960;
  v37 = sub_1BBFDF744(0, &qword_1ED69D8B0);
  *(_QWORD *)(v36 + 32) = v35;
  *(_QWORD *)(v36 + 88) = v37;
  *(_QWORD *)(v36 + 56) = v37;
  *(_QWORD *)(v36 + 64) = v33;
  v38 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v39 = v35;
  v40 = v33;
  v41 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v42 = objc_msgSend(v38, sel_initWithArray_, v41);

  v43 = objc_msgSend(v32, sel_aggregateDataSourceLoaderWithDataSourceLoaders_, v42);
  objc_msgSend(v21, sel_setDataSourceLoader_, v43);

  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = a9;
  v62 = sub_1BC066598;
  v63 = v44;
  aBlock = MEMORY[0x1E0C809B0];
  v59 = 1107296256;
  v60 = sub_1BC064154;
  v61 = &block_descriptor_21;
  v45 = _Block_copy(&aBlock);
  v46 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v47 = objc_msgSend(v46, sel_relevanceProviderManagerLoaderWithBlock_, v45);
  _Block_release(v45);
  swift_release();
  objc_msgSend(v21, sel_setRelevanceProviderManagerLoader_, v47);

  if (!(a11 >> 62))
  {
    v48 = *(_QWORD *)((a11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v48)
      goto LABEL_16;
LABEL_23:
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setTrainingBehavior_, 0);
    v52 = (void *)MEMORY[0x1BCCE96F4](objc_msgSend(v21, sel_setMetricsRecorder_, a10));
    v53 = objc_allocWithZone(MEMORY[0x1E0D84350]);
    swift_bridgeObjectRetain();
    v54 = v21;
    v55 = (void *)sub_1BC08A3B4();
    swift_bridgeObjectRelease();
    v56 = objc_msgSend(v53, sel_initWithName_configuration_, v55, v54);

    objc_autoreleasePoolPop(v52);
    return (uint64_t)v56;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC08AA80();
  v48 = result;
  if (!result)
    goto LABEL_23;
LABEL_16:
  if (v48 >= 1)
  {
    for (j = 0; j != v48; ++j)
    {
      if ((a11 & 0xC000000000000001) != 0)
        v50 = (id)MEMORY[0x1BCCE934C](j, a11);
      else
        v50 = *(id *)(a11 + 8 * j + 32);
      v51 = v50;
      objc_msgSend(v21, sel_addInteractionWithDescriptor_, v50, v57[0]);

    }
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t RelevanceEngineCoordinator.resumeEngineIfNeeded(feedKinds:completion:)(uint64_t a1, void (*a2)(uint64_t), void (*a3)(uint64_t), uint64_t a4, char *a5)
{
  int64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v18 = a4;
    v19 = a5;
    sub_1BBFE449C(0, v7, 0);
    v8 = v20;
    v10 = a1 + 32;
    do
    {
      ++v10;
      v11 = _s14HealthPlatform4FeedC4KindO0aB4CoreE13reSectionNameSSvg_0();
      v13 = v12;
      v15 = *(_QWORD *)(v20 + 16);
      v14 = *(_QWORD *)(v20 + 24);
      if (v15 >= v14 >> 1)
        sub_1BBFE449C(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v20 + 16) = v15 + 1;
      v16 = v20 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
      --v7;
    }
    while (v7);
    a5 = v19;
    a4 = v18;
  }
  RelevanceEngineCoordinator.resumeEngineIfNeeded(sectionIdentifiers:completion:)(v8, a2, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

id static RERule.makeSortByValueOfFeatureRule(feature:order:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v4 = objc_msgSend((id)objc_opt_self(), sel_conditionHasValueForFeature_, a1);
  v5 = objc_msgSend((id)objc_opt_self(), sel_conditionForLeftFeature_relation_rightFeature_, a1, 2, a1);
  v6 = objc_allocWithZone(MEMORY[0x1E0D84348]);
  v7 = v4;
  v8 = objc_msgSend(v6, sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v7, v7, v5, a2);

  return v8;
}

id static RERule.makeRankByPreferringValueForFeatureRule(feature:value:)(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = a1;
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_conditionForFeature_hasValue_, v1, v2);

  v5 = objc_msgSend(v3, sel_notCondition_, v4);
  v6 = objc_msgSend((id)objc_opt_self(), sel_trueCondition);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84348]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v4, v5, v6, 1);

  return v7;
}

void RelevanceEngineCoordinator.resumeEngineIfNeeded(sectionIdentifiers:completion:)(uint64_t a1, void (*a2)(uint64_t), void (*a3)(uint64_t), uint64_t a4, char *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(uint64_t, char *);
  void *v29;
  unsigned int v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t (**v41)(uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  void (*v72)(uint64_t);
  void *v73;
  uint64_t v74;
  os_log_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t (*v78)(uint64_t, char *);
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t (**v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t);
  void (*v87)(uint64_t);
  uint64_t v88;
  uint64_t aBlock[7];

  v6 = v5;
  v86 = a2;
  v87 = a3;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v82 = (uint64_t (**)(uint64_t))((char *)&v74 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v81 = (char *)&v74 - v17;
  MEMORY[0x1E0C80A78](v16);
  v80 = (char *)&v74 - v18;
  v19 = sub_1BC089DE4();
  v84 = *(_QWORD *)(v19 - 8);
  v85 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v74 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v74 - v26;
  if (!*(_QWORD *)(a1 + 16))
  {
    v82 = (uint64_t (**)(uint64_t))a5;
    sub_1BC089D9C();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v6, a4);
    v42 = sub_1BC089DD8();
    v43 = sub_1BC08A678();
    v44 = v10;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v88 = a4;
      aBlock[0] = v46;
      *(_DWORD *)v45 = 136315394;
      swift_getMetatypeMetadata();
      v47 = sub_1BC08A3E4();
      v83 = v44;
      v88 = sub_1BBFDE0F8(v47, v48, aBlock);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      v49 = v82[6](a4);
      v88 = sub_1BBFDE0F8(v49, v50, aBlock);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v13, a4);
      _os_log_impl(&dword_1BBFD7000, v42, v43, "[%s]%s: Attempting to resume engine without any section identifiers; aborting",
        (uint8_t *)v45,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v46, -1, -1);
      MEMORY[0x1BCCE9C40](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    }

    v65 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v22, v85);
    goto LABEL_13;
  }
  v79 = a1;
  v83 = v10;
  v28 = (uint64_t (*)(uint64_t, char *))*((_QWORD *)a5 + 2);
  v29 = (void *)v28(a4, a5);
  v30 = objc_msgSend(v29, sel_isRunning);

  if (v30)
  {
    sub_1BC089D9C();
    v31 = v83;
    v32 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v80, v6, a4);
    v33 = sub_1BC089DD8();
    v34 = sub_1BC08A660();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v82 = (uint64_t (**)(uint64_t))swift_slowAlloc();
      aBlock[0] = (uint64_t)v82;
      *(_DWORD *)v36 = 136315394;
      LODWORD(v81) = v35;
      v37 = sub_1BC08AC9C();
      v88 = sub_1BBFDE0F8(v37, v38, aBlock);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      v39 = (*((uint64_t (**)(uint64_t, char *))a5 + 6))(a4, a5);
      v88 = sub_1BBFDE0F8(v39, v40, aBlock);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, a4);
      _os_log_impl(&dword_1BBFD7000, v33, (os_log_type_t)v81, "[%s%s]: resume() called, but engine already running!", (uint8_t *)v36, 0x16u);
      v41 = v82;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v41, -1, -1);
      MEMORY[0x1BCCE9C40](v36, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, a4);
    }

    v65 = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v27, v85);
LABEL_13:
    v86(v65);
    return;
  }
  sub_1BC089D9C();
  v51 = v83;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v53 = v81;
  v52(v81, v6, a4);
  v54 = sub_1BC089DD8();
  v55 = sub_1BC08A678();
  LODWORD(v80) = v55;
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v77 = v52;
    v57 = v56;
    v76 = swift_slowAlloc();
    aBlock[0] = v76;
    *(_DWORD *)v57 = 136315650;
    v75 = v54;
    v58 = sub_1BC08AC9C();
    v88 = sub_1BBFDE0F8(v58, v59, aBlock);
    v78 = v28;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2080;
    v60 = (*((uint64_t (**)(uint64_t, char *))a5 + 6))(a4, a5);
    v88 = sub_1BBFDE0F8(v60, v61, aBlock);
    v51 = v83;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, a4);
    *(_WORD *)(v57 + 22) = 2050;
    v88 = 0x4024000000000000;
    v28 = v78;
    sub_1BC08A7EC();
    v62 = v75;
    _os_log_impl(&dword_1BBFD7000, v75, (os_log_type_t)v80, "[%s]%s: Resuming engine with timeout %{public}f!", (uint8_t *)v57, 0x20u);
    v63 = v76;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v63, -1, -1);
    v64 = v57;
    v52 = v77;
    MEMORY[0x1BCCE9C40](v64, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, a4);

  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v25, v85);
  v66 = (void *)v28(a4, a5);
  v67 = (char *)v82;
  v52((char *)v82, v6, a4);
  v68 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v69 = (v11 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = a4;
  *(_QWORD *)(v70 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v70 + v68, v67, a4);
  *(_QWORD *)(v70 + v69) = v79;
  v71 = (void (**)(uint64_t))(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8));
  v72 = v87;
  *v71 = v86;
  v71[1] = v72;
  aBlock[4] = (uint64_t)sub_1BC066BEC;
  aBlock[5] = v70;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BBFE410C;
  aBlock[3] = (uint64_t)&block_descriptor_27;
  v73 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v66, sel_resumeWithTimeout_completion_, v73, 10.0);
  _Block_release(v73);

}

uint64_t sub_1BC063DC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1BC089DE4();
  v40 = *(_QWORD *)(v14 - 8);
  v41 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC089D9C();
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v42 = a1;
  v17(v13, a1, a5);
  swift_bridgeObjectRetain_n();
  v18 = sub_1BC089DD8();
  v19 = sub_1BC08A678();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc();
    v43 = a6;
    v22 = v21;
    v37 = swift_slowAlloc();
    v45 = v37;
    *(_DWORD *)v22 = 136315650;
    v36 = v20;
    v23 = sub_1BC08AC9C();
    v39 = a3;
    v44 = sub_1BBFDE0F8(v23, v24, &v45);
    v38 = a4;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 48))(a5, v43);
    v44 = sub_1BBFDE0F8(v25, v26, &v45);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, a5);
    *(_WORD *)(v22 + 22) = 2082;
    v27 = swift_bridgeObjectRetain();
    v28 = MEMORY[0x1BCCE8EA8](v27, MEMORY[0x1E0DEA968]);
    v30 = v29;
    swift_bridgeObjectRelease();
    v44 = sub_1BBFDE0F8(v28, v30, &v45);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    a3 = v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v18, (os_log_type_t)v36, "[%s]%s: Engine has completed calculations for sections %{public}s!", (uint8_t *)v22, 0x20u);
    v31 = v37;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v31, -1, -1);
    v32 = v22;
    a6 = v43;
    MEMORY[0x1BCCE9C40](v32, -1, -1);

  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, a5);

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v16, v41);
  v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  objc_msgSend(v33, sel_pause);

  return a3();
}

uint64_t sub_1BC0640F0()
{
  uint64_t v0;

  sub_1BBFDB42C(0, &qword_1ED69D910, (uint64_t (*)(uint64_t))sub_1BBFE6454, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v0 + 32) = type metadata accessor for GroupConfigurationLoader();
  return v0;
}

id sub_1BC064154(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_1BBFE6454();
  v3 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC0641AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];
  uint64_t v24;

  v22 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0DEE9D8];
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = (v9 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v14, v10, a3);
  v17 = (_QWORD *)(v16 + v15);
  *v17 = v22;
  v17[1] = a2;
  *(_QWORD *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v24;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1BC066EB0;
  *(_QWORD *)(v18 + 24) = v16;
  aBlock[4] = sub_1BC047244;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC00FE14;
  aBlock[3] = &block_descriptor_60;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v13, v19);

  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v24;
    swift_release();
    return v21;
  }
  return result;
}

void sub_1BC0643A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD v20[7];
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;

  v7 = a5;
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 16);
  v23 = a1;
  v10 = (void *)v9(a5, a6);
  v11 = (void *)sub_1BC08A3B4();
  v12 = (unint64_t)objc_msgSend(v10, sel_numberOfElementsInSection_, v11);

  if ((v12 & 0x8000000000000000) == 0)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    if (!v12)
    {
LABEL_8:
      MEMORY[0x1E0C80A78](v13);
      v20[2] = v7;
      v20[3] = a6;
      v20[4] = v23;
      v19 = sub_1BC05A4E4((void (*)(uint64_t *__return_ptr, id *))sub_1BC066F00, (uint64_t)v20, v14);
      swift_bridgeObjectRelease();
      *a4 = v19;
      swift_bridgeObjectRelease();
      return;
    }
    v21 = v7;
    v22 = a4;
    v24 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC08A9CC();
    v15 = 0;
    while ((char *)v12 != v15)
    {
      v16 = objc_allocWithZone(MEMORY[0x1E0D84388]);
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BC08A3B4();
      swift_bridgeObjectRelease();
      v18 = objc_msgSend(v16, sel_initWithSectionName_element_, v17, v15);

      if (!v18)
        goto LABEL_11;
      ++v15;
      sub_1BC08A9A8();
      sub_1BC08A9D8();
      sub_1BC08A9E4();
      sub_1BC08A9B4();
      if ((char *)v12 == v15)
      {
        v14 = v24;
        v13 = swift_bridgeObjectRelease();
        v7 = v21;
        a4 = v22;
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

void *RelevanceEngineCoordinator.element(for:in:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  id v6;
  void *v7;

  v5 = RelevanceEngineCoordinator.sortedElements(for:)(a2, a3, a4);
  v6 = a1;
  v7 = sub_1BC0665A0(v5, v6);
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t RelevanceEngineCoordinator.collectDiagnosticLogs(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v24 = a1;
  v25 = a2;
  v7 = sub_1BC08A270();
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC08A2B8();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v11);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a3);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  v18 = (_QWORD *)(v17 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  v19 = v25;
  *v18 = v24;
  v18[1] = v19;
  aBlock[4] = sub_1BC066C9C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BBFE410C;
  aBlock[3] = &block_descriptor_33;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC08A288();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BC0661D8();
  sub_1BBFDB42C(0, &qword_1ED69DD20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC009128();
  sub_1BC08A834();
  v21 = (void *)v26;
  MEMORY[0x1BCCE90DC](0, v13, v9, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
  return swift_release();
}

void sub_1BC06484C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[4] = sub_1BC066E30;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC0649C8;
  v10[3] = &block_descriptor_48;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_storeDiagnosticLogsToFile_, v9);
  _Block_release(v9);

}

uint64_t sub_1BC064924(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_1BC088F98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC088F38();
  a3(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BC0649C8(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = sub_1BC08A3C0();
  v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

void RelevanceEngineCoordinator.submitTraining(trainingEvents:store:completion:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  unsigned __int8 v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];
  __int128 v40[2];

  v35 = a6;
  v36 = a1;
  v37 = a3;
  v38 = a4;
  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a5;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v17 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_BOOLForKey_, v17);

  if ((v18 & 1) != 0)
  {
    sub_1BC089D9C();
    v19 = sub_1BC089DD8();
    v20 = sub_1BC08A678();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1BBFD7000, v19, v20, "disablePersonalizedModelTraining default detected; training will be ignored",
        v21,
        2u);
      MEMORY[0x1BCCE9C40](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v22 = (void *)sub_1BC0891C0();
    sub_1BBFE1C58((uint64_t)a2, (uint64_t)v40);
    v23 = v34;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))((char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v33[1], v34);
    v24 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v25 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = (char *)swift_allocObject();
    v27 = v35;
    v28 = v36;
    *((_QWORD *)v26 + 2) = v23;
    *((_QWORD *)v26 + 3) = v27;
    *((_QWORD *)v26 + 4) = v28;
    sub_1BBFE95C8(v40, (uint64_t)(v26 + 40));
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v26[v24], v15, v23);
    v29 = (uint64_t *)&v26[v25];
    v31 = v37;
    v30 = v38;
    *v29 = v37;
    v29[1] = v30;
    aBlock[4] = sub_1BC066D5C;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BBFE410C;
    aBlock[3] = &block_descriptor_39;
    v32 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    sub_1BBFE6078(v31);
    swift_release();
    objc_msgSend(v22, sel_performBlock_, v32);
    _Block_release(v32);

  }
}

unint64_t static RelevanceEngineCoordinator.disableModelTrainingKey.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1BC064D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v11;
  _QWORD v13[4];

  v13[2] = a2;
  v11 = sub_1BC05A67C((void (*)(_QWORD))sub_1BC066DF4, (uint64_t)v13, a1);
  RelevanceEngineCoordinator.train(with:completion:)(v11, a4, a5, a6, a7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC064DA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a1;
  v32 = a3;
  v4 = type metadata accessor for ModelTrainingEvent();
  MEMORY[0x1E0C80A78](v4);
  v29 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v9 = v31;
  v10 = (void *)sub_1BC0891C0();
  sub_1BC089C4C();
  v11 = (void *)sub_1BC0891CC();

  if (v11)
  {
    sub_1BBFDF44C();
    v13 = v12;
    v14 = v32;
    v15 = (uint64_t)v32 + *(int *)(v12 + 48);
    v16 = sub_1BBFE2500();

    *v14 = v16;
    sub_1BBFDB550(v9, v15, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v14, 0, 1, v13);
  }
  else
  {
    v27 = v7;
    v28 = v6;
    sub_1BC089D9C();
    sub_1BBFDB550(v9, v29, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
    v18 = sub_1BC089DD8();
    v19 = sub_1BC08A660();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v34 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = v29;
      v23 = sub_1BC088F2C();
      v33 = sub_1BBFDE0F8(v23, v24, &v34);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      sub_1BBFE1BD4(v22, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      _os_log_impl(&dword_1BBFD7000, v18, v19, "Training event received for feedItem no longer present in the database: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v21, -1, -1);
      MEMORY[0x1BCCE9C40](v20, -1, -1);
    }
    else
    {
      sub_1BBFE1BD4(v29, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v28);
    v25 = v32;
    sub_1BBFDF44C();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
}

void sub_1BC0650B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  id v59;
  void **v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  unint64_t v107;
  os_log_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  void *v124;
  id v125;
  void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  os_log_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  void **v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  _QWORD *v160;
  char *v161;
  _QWORD *v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t aBlock[6];

  v158 = a6;
  v156 = a5;
  v157 = a2;
  v136 = sub_1BC089028();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1BC089DE4();
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v11 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BBFDF44C();
  v13 = v12;
  v14 = MEMORY[0x1E0C80A78](v12);
  v151 = (uint64_t *)((char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x1E0C80A78](v14);
  v133 = (uint64_t *)((char *)&v128 - v17);
  v18 = MEMORY[0x1E0C80A78](v16);
  v19 = MEMORY[0x1E0C80A78](v18);
  v172 = (uint64_t)&v128 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v128 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v150 = (uint64_t *)((char *)&v128 - v25);
  v26 = MEMORY[0x1E0C80A78](v24);
  v171 = (uint64_t)&v128 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v170 = (uint64_t *)((char *)&v128 - v29);
  v30 = MEMORY[0x1E0C80A78](v28);
  v149 = (uint64_t *)((char *)&v128 - v31);
  v32 = MEMORY[0x1E0C80A78](v30);
  v169 = (uint64_t)&v128 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v155 = (char *)&v128 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v148 = (uint64_t *)((char *)&v128 - v37);
  v38 = MEMORY[0x1E0C80A78](v36);
  v39 = MEMORY[0x1E0C80A78](v38);
  v41 = (uint64_t *)((char *)&v128 - v40);
  v42 = MEMORY[0x1E0C80A78](v39);
  v147 = (uint64_t *)((char *)&v128 - v43);
  v44 = MEMORY[0x1E0C80A78](v42);
  v154 = (uint64_t *)((char *)&v128 - v45);
  MEMORY[0x1E0C80A78](v44);
  v50 = *(_QWORD *)(a1 + 16);
  if (v50)
  {
    v168 = v49;
    v160 = v48;
    v129 = a3;
    v130 = a4;
    v51 = *(int *)(v13 + 48);
    v146 = (void **)((char *)&v128 - v47);
    v145 = (uint64_t)&v128 + v51 - v47;
    v52 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v158 + 40);
    v144 = *(uint64_t (**)(uint64_t, uint64_t))(v158 + 32);
    v143 = v52;
    v53 = a1 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
    v142 = *(_QWORD *)(v46 + 72);
    v141 = aBlock;
    v128 = a1;
    swift_bridgeObjectRetain();
    v54 = v53;
    *(_QWORD *)&v55 = 136315906;
    v132 = v55;
    v131 = MEMORY[0x1E0DEE9B8] + 8;
    v161 = v11;
    v56 = v13;
    v173 = v13;
    v159 = v23;
    v57 = v155;
    v167 = v41;
    v58 = v154;
    do
    {
      v165 = v54;
      v166 = v50;
      v60 = v146;
      sub_1BBFDB550(v54, (uint64_t)v146, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v61 = (uint64_t)v58 + *(int *)(v56 + 48);
      v62 = *v60;
      *v58 = v62;
      sub_1BC00D664(v145, v61, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      v63 = v62;
      sub_1BC089D9C();
      v64 = (uint64_t)v147;
      v65 = (uint64_t)v147 + *(int *)(v56 + 48);
      *v147 = v63;
      sub_1BBFDB550(v61, v65, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      sub_1BBFDB550(v64, (uint64_t)v41, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      sub_1BC00D664(v64, v168, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v66 = (uint64_t)v148;
      v67 = (uint64_t)v148 + *(int *)(v56 + 48);
      *v148 = v63;
      sub_1BBFDB550(v61, v67, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      sub_1BBFDB550(v66, (uint64_t)v57, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      sub_1BC00D664(v66, v169, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v68 = (uint64_t)v149;
      v69 = (uint64_t)v149 + *(int *)(v56 + 48);
      *v149 = v63;
      sub_1BBFDB550(v61, v69, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      sub_1BBFDB550(v68, (uint64_t)v170, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      sub_1BC00D664(v68, v171, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v70 = (uint64_t)v150;
      v71 = (uint64_t)v150 + *(int *)(v56 + 48);
      *v150 = v63;
      v164 = v61;
      sub_1BBFDB550(v61, v71, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      sub_1BBFDB550(v70, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      sub_1BC00D664(v70, v172, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v163 = v63;
      v72 = sub_1BC089DD8();
      v73 = sub_1BC08A678();
      v74 = v73;
      if (os_log_type_enabled(v72, v73))
      {
        v75 = swift_slowAlloc();
        v162 = (_QWORD *)swift_slowAlloc();
        v140 = swift_slowAlloc();
        aBlock[0] = v140;
        *(_DWORD *)v75 = v132;
        v139 = v72;
        v137 = v75 + 4;
        v76 = *(int *)(v56 + 48);
        v138 = v74;
        v77 = v160;
        v78 = (uint64_t)v160 + v76;
        v79 = v167;
        v80 = (uint64_t)v167 + v76;
        v81 = (void *)*v167;
        *v160 = *v167;
        sub_1BBFDB550(v80, (uint64_t)v77 + v76, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v82 = objc_msgSend(v81, sel_identifier);
        v83 = sub_1BC08A3C0();
        v85 = v84;

        sub_1BBFE1BD4(v78, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v174 = sub_1BBFDE0F8(v83, v85, aBlock);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        sub_1BBFE1BD4(v168, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v79, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        *(_WORD *)(v75 + 12) = 2114;
        v137 = v75 + 14;
        v86 = *(int *)(v173 + 48);
        v87 = (uint64_t)v77 + v86;
        *v77 = *v57;
        sub_1BBFDB550((uint64_t)v57 + v86, (uint64_t)v77 + v86, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v88 = (int *)type metadata accessor for ModelTrainingEvent();
        v89 = v135;
        v90 = v134;
        v91 = (uint64_t)v57;
        v92 = v136;
        (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v134, v87 + v88[7], v136);
        sub_1BBFE1BD4(v87, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v93 = sub_1BC088FEC();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v92);
        v174 = v93;
        sub_1BC08A7EC();
        *v162 = v93;
        sub_1BBFE1BD4(v169, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4(v91, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        *(_WORD *)(v75 + 22) = 2082;
        v94 = *(int *)(v173 + 48);
        v95 = (uint64_t)v77 + v94;
        v96 = v170;
        v97 = (uint64_t)v170 + v94;
        *v77 = *v170;
        sub_1BBFDB550(v97, (uint64_t)v77 + v94, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v98 = *(unsigned __int8 *)(v95 + v88[6]);
        sub_1BBFE1BD4(v95, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        if (v98)
          v99 = 1702195828;
        else
          v99 = 0x65736C6166;
        if (v98)
          v100 = 0xE400000000000000;
        else
          v100 = 0xE500000000000000;
        v174 = sub_1BBFDE0F8(v99, v100, aBlock);
        v56 = v173;
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        sub_1BBFE1BD4(v171, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v96, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        *(_WORD *)(v75 + 32) = 2082;
        v101 = *(int *)(v56 + 48);
        v102 = (uint64_t)v133 + v101;
        v103 = (uint64_t)v159;
        v104 = (uint64_t)&v159[v101];
        *v133 = *(_QWORD *)v159;
        sub_1BBFDB550(v104, v102, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        v105 = *(unsigned __int8 *)(v102 + v88[5]);
        sub_1BBFE1BD4(v102, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
        if (v105)
          v106 = 0x6C6C657764;
        else
          v106 = 7364980;
        if (v105)
          v107 = 0xE500000000000000;
        else
          v107 = 0xE300000000000000;
        v174 = sub_1BBFDE0F8(v106, v107, aBlock);
        sub_1BC08A7EC();
        swift_bridgeObjectRelease();
        sub_1BBFE1BD4(v172, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4(v103, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        v108 = v139;
        _os_log_impl(&dword_1BBFD7000, v139, (os_log_type_t)v138, "RelevanceEngineCoordinator: submitting training for feedItem %s at time %{public}@, positive: %{public}s, feedbackKind: %{public}s", (uint8_t *)v75, 0x2Au);
        sub_1BBFDECF0();
        v109 = v162;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v109, -1, -1);
        v110 = v140;
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v110, -1, -1);
        MEMORY[0x1BCCE9C40](v75, -1, -1);

        (*(void (**)(char *, uint64_t))(v152 + 8))(v161, v153);
      }
      else
      {
        sub_1BBFE1BD4(v168, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v167, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4(v169, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v57, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4(v171, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v170, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4(v172, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
        sub_1BBFE1BD4((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BBFDF44C);

        (*(void (**)(char *, uint64_t))(v152 + 8))(v11, v153);
      }
      v111 = v156;
      v112 = v158;
      v162 = (_QWORD *)v144(v156, v158);
      v113 = *(int *)(v56 + 48);
      v114 = v151;
      v115 = (uint64_t)v151 + v113;
      v117 = v163;
      v116 = v164;
      *v151 = v163;
      sub_1BBFDB550(v116, (uint64_t)v114 + v113, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      v118 = v56;
      v119 = type metadata accessor for ModelTrainingEvent();
      v120 = *(unsigned __int8 *)(v115 + *(int *)(v119 + 24));
      sub_1BBFE1BD4(v115, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      v121 = *(int *)(v118 + 48);
      v122 = v160;
      v123 = (uint64_t)v160 + v121;
      *v160 = v117;
      sub_1BBFDB550(v116, (uint64_t)v122 + v121, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      LOBYTE(v119) = *(_BYTE *)(v123 + *(int *)(v119 + 20));
      sub_1BBFE1BD4(v123, (uint64_t (*)(_QWORD))type metadata accessor for ModelTrainingEvent);
      LOBYTE(aBlock[0]) = v119;
      v124 = (void *)v143(aBlock, v111, v112);
      v125 = objc_msgSend(v124, sel_name);

      if (!v125)
      {
        sub_1BC08A3C0();
        v125 = (id)sub_1BC08A3B4();
        swift_bridgeObjectRelease();
      }
      v59 = v162;
      objc_msgSend(v162, sel_trainWithUnmanagedElement_isPositiveEvent_interaction_, v117, v120, v125);

      v58 = v154;
      sub_1BBFE1BD4((uint64_t)v154, (uint64_t (*)(_QWORD))sub_1BBFDF44C);
      v54 = v165 + v142;
      v50 = v166 - 1;
      v11 = v161;
      v56 = v173;
      v23 = v159;
      v57 = v155;
      v41 = v167;
    }
    while (v166 != 1);
    swift_bridgeObjectRelease();
    a4 = v130;
    a3 = v129;
  }
  v126 = (void *)(*(uint64_t (**)(uint64_t))(v158 + 16))(v156);
  if (a3)
  {
    aBlock[4] = a3;
    aBlock[5] = a4;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BBFE410C;
    aBlock[3] = (uint64_t)&block_descriptor_51;
    v127 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    v127 = 0;
  }
  objc_msgSend(v126, sel_trainPendingEventsWithCompletion_, v127);
  _Block_release(v127);

}

id RelevanceEngineCoordinator.computeAdHocRelevancePrediction(for:referenceDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v26;

  v5 = v4;
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  sub_1BBFFA6F0(a2, (uint64_t)v12, (unint64_t *)&qword_1ED69DBF8, v9);
  sub_1BC062064((uint64_t)v12);

  v14 = sub_1BBFE2500();
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v16 = (void *)v15(a3, a4);
  objc_msgSend(v16, sel_addElement_section_, v14, *MEMORY[0x1E0D843D8]);

  v17 = dispatch_group_create();
  dispatch_group_enter(v17);
  sub_1BC022C54(0, &qword_1ED69DCF8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC08B950;
  *(_QWORD *)(v18 + 32) = sub_1BC08A3C0();
  *(_QWORD *)(v18 + 40) = v19;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  v21 = v17;
  RelevanceEngineCoordinator.resumeEngineIfNeeded(sectionIdentifiers:completion:)(v18, (void (*)(uint64_t))sub_1BC066DBC, (void (*)(uint64_t))v20, a3, (char *)a4);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC08A6C0();
  v22 = (void *)v15(a3, a4);
  v23 = objc_msgSend(v22, sel_predictionForElement_, v14);

  v24 = (void *)v15(a3, a4);
  objc_msgSend(v24, sel_removeElement_, v14);

  sub_1BC065FAC(v5, a3, a4);
  return v23;
}

void sub_1BC065FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69DBF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  v9 = sub_1BC089028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_1BC062064((uint64_t)v7);

}

uint64_t sub_1BC066068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1BC088F98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1BC06612C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC088F98() - 8) + 80);
  v5 = *(uint64_t (**)(uint64_t))(v0 + v3);
  v6 = v0 + ((v3 + v4 + 16) & ~v4);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  objc_msgSend(v7, sel_saveModelFile);

  return v5(v6);
}

unint64_t sub_1BC0661D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69DD18;
  if (!qword_1ED69DD18)
  {
    v1 = sub_1BC08A270();
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69DD18);
  }
  return result;
}

uint64_t sub_1BC066220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC0662A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1BC0650B0(v0[4], (uint64_t)v0 + v3, *v4, v4[1], v1, v0[3]);
}

uint64_t sub_1BC0662DC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

id static RERule.makeRankByPreferringPresenceOfFeatureRule(feature:)(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_conditionHasValueForFeature_, a1);
  v4 = objc_msgSend(v2, sel_notCondition_, v3);
  v5 = objc_msgSend((id)objc_opt_self(), sel_trueCondition);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84348]), sel_initWithLeftCondition_rightCondition_comparisonCondition_order_, v3, v4, v5, 1);

  return v6;
}

id static RERule.makeExcludeIfValueIsEqualForFeature<A>(feature:value:)(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v13;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_conditionHasValueForFeature_, a1);
  v4 = a1;
  sub_1BC08A48C();
  v5 = objc_msgSend(v2, sel_conditionForFeature_relation_integerValue_, v4, 0, v13);

  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v5;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69D888);
  v7 = v3;
  v8 = v5;
  v9 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v2, sel_andConditions_, v9);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84320]), sel_initWithCondition_type_, v10, 0);
  return v11;
}

uint64_t sub_1BC066574()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC066598()
{
  uint64_t v0;

  return sub_1BC04D174(*(_QWORD *)(v0 + 16));
}

void *sub_1BC0665A0(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  if (a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1BC08AA80())
  {
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCE934C](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_identifier);
      sub_1BC08A3C0();

      v9 = objc_msgSend(a2, sel_uniqueIdentifier);
      sub_1BC08A3C0();

      sub_1BC00BC4C();
      LOBYTE(v9) = sub_1BC08A81C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

id _sSo6RERuleC18HealthPlatformCoreE38makeExcludeIfValueIsZeroForFeatureRule7featureABSo9REFeatureC_tFZ_0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_conditionHasValueForFeature_, a1);
  v4 = objc_msgSend(v2, sel_conditionForFeature_relation_floatValue_, a1, -1, 3.18618444e-58);
  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC08B940;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v4;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69D888);
  v6 = v3;
  v7 = v4;
  v8 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v2, sel_andConditions_, v8);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84320]), sel_initWithCondition_type_, v9, 0);
  return v10;
}

id _sSo6RERuleC18HealthPlatformCoreE47makeExcludeTwoBarComparisonWithLowMagnitudeRuleAByFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v21[2];

  v0 = sub_1BC089880();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED69DA60 != -1)
    swift_once();
  v4 = qword_1ED6A0668;
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_conditionHasValueForFeature_, v4);
  LODWORD(v7) = 1036160860;
  v8 = objc_msgSend(v5, sel_conditionForFeature_relation_floatValue_, v4, -1, v7);
  if (qword_1ED69DA90 != -1)
    swift_once();
  v9 = (void *)qword_1ED6A0688;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D2E168], v0);
  v10 = v9;
  sub_1BC089874();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = (void *)sub_1BC08A3B4();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v5, sel_conditionForFeature_hasValue_, v10, v11);

  sub_1BC022C54(0, (unint64_t *)&qword_1ED69BA48);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC08CCE0;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v8;
  *(_QWORD *)(v13 + 48) = v12;
  v21[1] = v13;
  sub_1BC08A4E0();
  sub_1BBFDF744(0, &qword_1ED69D888);
  v14 = v6;
  v15 = v8;
  v16 = v12;
  v17 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v5, sel_andConditions_, v17);

  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84320]), sel_initWithCondition_type_, v18, 0);
  return v19;
}

uint64_t sub_1BC066B64()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC066BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC063DC0(v0 + v3, *(_QWORD *)(v0 + v4), *(uint64_t (**)(void))(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC066C2C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

void sub_1BC066C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (uint64_t *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1BC06484C(v0 + v3, *v4, v4[1], v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC066CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC066D5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BC064D20(v0[4], (uint64_t)(v0 + 5), (uint64_t)v0 + v3, *v4, v4[1], v1, v0[3]);
}

uint64_t sub_1BC066D98()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC066DBC()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.dispatchQueue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.relevanceEngine.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.resumeEngineIfNeeded(feedKinds:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.trainingContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.interactionDescriptor(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RelevanceEngineCoordinator.logPrefix.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1BC066DF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC064DA4(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_1BC066E0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC066E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC064924(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_1BC066E38()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC066EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC0643A0(v0 + v3, *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(uint64_t **)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFF8)), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC066EF0()
{
  return swift_deallocObject();
}

void sub_1BC066F00(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;

  v4 = *a1;
  v5 = (void *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 24) + 16))(*(_QWORD *)(v2 + 16));
  v6 = objc_msgSend(v5, sel_elementAtPath_, v4);

  *a2 = v6;
}

HealthPlatformCore::LocalizedTitleFeatureTag __swiftcall LocalizedTitleFeatureTag.init(_:)(HealthPlatformCore::LocalizedTitleFeatureTag result)
{
  HealthPlatformCore::LocalizedTitleFeatureTag *v1;

  *v1 = result;
  return result;
}

uint64_t LocalizedTitleFeatureTag.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalizedTitleFeatureTag.value.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LocalizedTitleFeatureTag.value.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for LocalizedTitleFeatureTag()
{
  return &type metadata for LocalizedTitleFeatureTag;
}

void sub_1BC067038(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  void *v27;
  unint64_t v28;
  char v29;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  void *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC08A864();
    sub_1BBFDF744(0, &qword_1ED69DBB0);
    sub_1BC06F398();
    sub_1BC08A588();
    v3 = v35;
    v4 = v36;
    v5 = v37;
    v6 = v38;
    v7 = v39;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v34 = (unint64_t)(v5 + 64) >> 6;
  while (1)
  {
    if (v3 < 0)
    {
      if (!sub_1BC08A8C4())
        goto LABEL_46;
      sub_1BBFDF744(0, &qword_1ED69DBB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v40;
      swift_unknownObjectRelease();
      v13 = v6;
      v11 = v7;
      if (!v40)
        goto LABEL_46;
    }
    else
    {
      if (v7)
      {
        v11 = (v7 - 1) & v7;
        v12 = __clz(__rbit64(v7)) | (v6 << 6);
        v13 = v6;
      }
      else
      {
        v15 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_48;
        if (v15 >= v34)
          goto LABEL_46;
        v16 = *(_QWORD *)(v4 + 8 * v15);
        v13 = v6 + 1;
        if (!v16)
        {
          v13 = v6 + 2;
          if (v6 + 2 >= v34)
            goto LABEL_46;
          v16 = *(_QWORD *)(v4 + 8 * v13);
          if (!v16)
          {
            v13 = v6 + 3;
            if (v6 + 3 >= v34)
              goto LABEL_46;
            v16 = *(_QWORD *)(v4 + 8 * v13);
            if (!v16)
            {
              v13 = v6 + 4;
              if (v6 + 4 >= v34)
                goto LABEL_46;
              v16 = *(_QWORD *)(v4 + 8 * v13);
              if (!v16)
              {
                v13 = v6 + 5;
                if (v6 + 5 >= v34)
                  goto LABEL_46;
                v16 = *(_QWORD *)(v4 + 8 * v13);
                if (!v16)
                {
                  v17 = v6 + 6;
                  while (v34 != v17)
                  {
                    v16 = *(_QWORD *)(v4 + 8 * v17++);
                    if (v16)
                    {
                      v13 = v17 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_46:
                  sub_1BBFE2D28();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v11 = (v16 - 1) & v16;
        v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
      if (!v14)
        goto LABEL_46;
    }
    v18 = *a2;
    if ((*a2 & 0xC000000000000001) != 0)
      break;
    swift_bridgeObjectRetain();
    v28 = sub_1BC025AAC((uint64_t)v14);
    v30 = v29;
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = *a2;
      v40 = (void *)*a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BC07CC90();
        v32 = (uint64_t)v40;
      }

      v33 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * v28);
      sub_1BC06DA40(v28, v32);
      *a2 = v32;

      goto LABEL_9;
    }

LABEL_10:
    v6 = v13;
    v7 = v11;
  }
  if (v18 < 0)
    v19 = *a2;
  else
    v19 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = v14;
  v21 = sub_1BC08AA44();

  if (!v21)
  {

LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_unknownObjectRelease();
  v22 = sub_1BC08A8A0();
  v23 = sub_1BC06D7F4(v19, v22);
  swift_retain();
  v24 = sub_1BC025AAC((uint64_t)v20);
  v26 = v25;
  swift_release();
  if ((v26 & 1) != 0)
  {

    v27 = *(void **)(*(_QWORD *)(v23 + 56) + 8 * v24);
    sub_1BC06DA40(v24, v23);
    *a2 = v23;

    goto LABEL_9;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t sub_1BC067430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *a3 = sub_1BC070B30;
  a3[1] = (uint64_t (*)())v10;
  return result;
}

uint64_t sub_1BC0674F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (**v3)();
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1BBFDAEA0(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t (**)())((char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1BC089118();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BBFE46D4(0, v5, 0);
    v6 = v4 + 32;
    v7 = v16;
    do
    {
      sub_1BBFE1C58(v6, (uint64_t)v13);
      v8 = v14;
      v9 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      GeneratorPipeline.eraseToAnyPipeline()(v8, v9, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BBFE46D4(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v16;
      }
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BBFE46D4(v10 > 1, v11 + 1, 1);
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1BC070B4C((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v11);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

id sub_1BC0676A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 256);
  if (v1)
  {
    v2 = *(id *)(v0 + 256);
  }
  else
  {
    swift_beginAccess();
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6C98]), sel_initWithHealthStore_, *(_QWORD *)(v0 + 48));
    v4 = *(void **)(v0 + 256);
    *(_QWORD *)(v0 + 256) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BC067734(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(uint64_t, char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;

  v67 = *v1;
  sub_1BC067D30();
  v4 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  v74 = v4;
  MEMORY[0x1E0C80A78](v3);
  v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC067DF8();
  v68 = v6;
  v70 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC00BE50(0, &qword_1ED69B108, v8, sub_1BC067F18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2E7D8]);
  v69 = v9;
  v72 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v52 - v10;
  v60 = sub_1BC089D6C();
  v78 = *(_QWORD *)(v60 - 8);
  v11 = *(_QWORD *)(v78 + 64);
  v12 = MEMORY[0x1E0C80A78](v60);
  v65 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v52 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v52 - v15;
  v75 = sub_1BC089064();
  v79 = *(_QWORD *)(v75 - 8);
  v17 = *(_QWORD *)(v79 + 64);
  v18 = MEMORY[0x1E0C80A78](v75);
  v63 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v76 = (char *)&v52 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v52 - v21;
  v81 = (char *)&v52 - v21;
  sub_1BC089058();
  v23 = (id)_HKLogPersistedSignposts();
  _HKLogSignpostIDGenerate();

  v77 = v16;
  sub_1BC089D78();
  v59 = *((unsigned __int8 *)v1 + 40);
  v82 = sub_1BC02A9E8(a1);
  sub_1BC06F500(0, &qword_1ED69A970, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  v62 = v24;
  sub_1BBFDB42C(0, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
  v61 = v25;
  v64 = sub_1BC067EB0();
  sub_1BC08A1A4();
  swift_release();
  v57 = v1[19];
  v26 = v79;
  v56 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v27 = v75;
  v56(v76, v22, v75);
  v28 = v78;
  v55 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v29 = v58;
  v30 = v60;
  v55(v58, v16, v60);
  v31 = *(unsigned __int8 *)(v26 + 80);
  v32 = (v31 + 16) & ~v31;
  v33 = *(unsigned __int8 *)(v28 + 80);
  v34 = (v17 + v33 + v32) & ~v33;
  v54 = v34 + v11;
  v52 = v31 | v33 | 7;
  v35 = swift_allocObject();
  v53 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 32);
  v53(v35 + v32, v76, v27);
  v76 = *(char **)(v28 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v76)(v35 + v34, v29, v30);
  v36 = v67;
  *(_QWORD *)(v35 + ((v34 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v67;
  v37 = v63;
  v56(v63, v81, v27);
  v38 = v65;
  v55(v65, v77, v30);
  v39 = v54;
  v40 = swift_allocObject();
  v41 = v37;
  v42 = v75;
  v53(v40 + v32, v41, v75);
  ((void (*)(uint64_t, char *, uint64_t))v76)(v40 + v34, v38, v30);
  *(_BYTE *)(v40 + v39) = v59;
  *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFFF8) + v40 + 8) = v36;
  sub_1BC067F18();
  v43 = v66;
  v44 = v68;
  v45 = v80;
  sub_1BC08A09C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v44);
  sub_1BC089FAC();
  sub_1BC067F34();
  v46 = v71;
  v47 = v69;
  sub_1BC08A1F8();
  sub_1BBFDA9C0((unint64_t *)&unk_1ED69B180, (uint64_t (*)(uint64_t))sub_1BC067D30, MEMORY[0x1E0C95B78]);
  v48 = v73;
  v49 = sub_1BC08A180();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v47);
  v82 = v49;
  v50 = sub_1BC08A180();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v30);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v42);
  return v50;
}

void sub_1BC067D30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69B190)
  {
    sub_1BC06F500(255, &qword_1ED69A970, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1BC00BE50(255, &qword_1ED69B108, (uint64_t (*)(uint64_t))sub_1BC067DF8, sub_1BC067F18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2E7D8]);
    sub_1BC067EB0();
    sub_1BC067F34();
    v0 = sub_1BC089EEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69B190);
  }
}

void sub_1BC067DF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED69A720)
  {
    sub_1BC06F500(255, &qword_1ED69A970, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1BBFDB42C(255, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    sub_1BC067EB0();
    v0 = sub_1BC089EA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED69A720);
  }
}

unint64_t sub_1BC067EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69A968;
  if (!qword_1ED69A968)
  {
    sub_1BC06F500(255, &qword_1ED69A970, (unint64_t *)&qword_1ED69D220, (uint64_t (*)(uint64_t))sub_1BBFDAED0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for GeneratorPipelineManagerWrapper);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69A968);
  }
  return result;
}

uint64_t sub_1BC067F18()
{
  return sub_1BBFDA9C0((unint64_t *)&unk_1ED69A710, (uint64_t (*)(uint64_t))sub_1BC067DF8, MEMORY[0x1E0C95950]);
}

unint64_t sub_1BC067F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED69B0F8;
  if (!qword_1ED69B0F8)
  {
    sub_1BC00BE50(255, &qword_1ED69B108, (uint64_t (*)(uint64_t))sub_1BC067DF8, sub_1BC067F18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D2E7D8]);
    result = MEMORY[0x1BCCE9B68](MEMORY[0x1E0D2E7E0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED69B0F8);
  }
  return result;
}

void sub_1BC067F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1BC089064();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC089DE4();
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = sub_1BC089DD8();
  v12 = sub_1BC08A678();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22 = v8;
    v14 = v13;
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v14 = 136446466;
    v15 = sub_1BC08AC9C();
    v25 = sub_1BBFDE0F8(v15, v16, &v26);
    v23 = a2;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1BC08AB64();
    v25 = sub_1BBFDE0F8(v17, v18, &v26);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1BBFD7000, v11, v12, "[%{public}s] Feed item generation STARTED: %{public}s", (uint8_t *)v14, 0x16u);
    v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v19, -1, -1);
    MEMORY[0x1BCCE9C40](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  }
  sub_1BC08A738();
  v20 = (id)_HKLogPersistedSignposts();
  sub_1BC089D48();

}

uint64_t sub_1BC068274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1BC089064();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BC089D6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1BC068334()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_1BC089064() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC089D6C() - 8) + 80);
  sub_1BC067F9C(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1BC0683A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a4;
  v34 = a2;
  v35 = a3 & 1;
  v5 = sub_1BC089D30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC089064();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC089DE4();
  v32 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089DA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v16 = sub_1BC089DD8();
  v17 = sub_1BC08A678();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v30 = v6;
    v19 = v18;
    v28 = swift_slowAlloc();
    v37 = v28;
    *(_DWORD *)v19 = 136446466;
    v20 = sub_1BC08AC9C();
    v31 = v5;
    v36 = sub_1BBFDE0F8(v20, v21, &v37);
    v29 = v8;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    sub_1BBFDA9C0((unint64_t *)&qword_1ED69BAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v22 = sub_1BC08AB64();
    v36 = sub_1BBFDE0F8(v22, v23, &v37);
    v8 = v29;
    v5 = v31;
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_1BBFD7000, v16, v17, "[%{public}s] Feed item generation IDLE for 6 seconds: %{public}s", (uint8_t *)v19, 0x16u);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v24, -1, -1);
    v25 = v19;
    v6 = v30;
    MEMORY[0x1BCCE9C40](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
  sub_1BC08A72C();
  v26 = (id)_HKLogPersistedSignposts();
  sub_1BC089D48();

  result = sub_1BC089970();
  if ((result & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D2BE38], v5);
    sub_1BC089D24();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1BC0686F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1BC089064();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1BC089D6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1BC0687B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_1BC089064() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_1BC089D6C() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_1BC0683A8(v0 + v2, v0 + v5, *(_BYTE *)(v0 + v5 + *(_QWORD *)(v4 + 64)), *(_QWORD *)(((v5 + *(_QWORD *)(v4 + 64)) & 0xFFFFFFFFFFFFF8) + v0 + 8));
}

uint64_t sub_1BC068828(uint64_t a1, unint64_t a2)
{
  _QWORD *v4;

  sub_1BC068884(a1);
  v4 = sub_1BC068D64(a1);
  sub_1BC06C614(a2);
  sub_1BC06EAD4((uint64_t)v4);
  swift_bridgeObjectRelease();
  sub_1BC06BBD0();
  return sub_1BC06C448(a1);
}

uint64_t sub_1BC068884(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v3 = *v1;
  __swift_project_boxed_opaque_existential_1(v1 + 8, v1[11]);
  v4 = sub_1BC0891C0();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = a1;
  v5[4] = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BC070ABC;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_1BC047244;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BC00FE14;
  v9[3] = &block_descriptor_56;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend((id)v4, sel_performBlockAndWait_, v7);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1BC0689F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[3];
  id v27;
  uint64_t v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 88));
  v9 = (void *)sub_1BC0891C0();
  sub_1BC08A780();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 88));
  v10 = (void *)sub_1BC0891C0();
  sub_1BC08A768();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 88));
  v11 = (void *)sub_1BC0891C0();
  v27 = 0;
  LODWORD(a1) = objc_msgSend(v11, sel_save_, &v27);

  if ((_DWORD)a1)
    return v27;
  v26[1] = v27;
  v13 = v27;
  v14 = (void *)sub_1BC088F08();

  swift_willThrow();
  sub_1BC089D90();
  v15 = v14;
  v16 = v14;
  v17 = sub_1BC089DD8();
  v18 = sub_1BC08A660();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v27 = a3;
    v28[0] = v20;
    *(_DWORD *)v19 = 136446466;
    swift_getMetatypeMetadata();
    v21 = sub_1BC08A3E4();
    v27 = (id)sub_1BBFDE0F8(v21, v22, v28);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v27 = v14;
    v23 = v14;
    sub_1BBFE24A4();
    v24 = sub_1BC08A3E4();
    v27 = (id)sub_1BBFDE0F8(v24, v25, v28);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v17, v18, "[%{public}s]: Unable to update stored profiles: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v20, -1, -1);
    MEMORY[0x1BCCE9C40](v19, -1, -1);

  }
  else
  {

  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *sub_1BC068D64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(_QWORD);
  void *v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  void (*v39)(char *, char *, uint64_t);
  id v40;
  void *v41;
  unsigned int v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  char *v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint8_t *v54;
  void *v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t i;
  id v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  void *v77;
  uint64_t (*v78)(void);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  dispatch_group_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  void *v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  char *v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v108;
  dispatch_group_t v109;
  void (*v110)(char *, uint64_t);
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int v127;
  void (*v128)(char *, _QWORD, uint64_t);
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  id v137[4];

  v117 = a1;
  v137[3] = *(id *)MEMORY[0x1E0C80C00];
  v119 = *v1;
  v2 = sub_1BC08A2D0();
  v125 = *(_QWORD *)(v2 - 8);
  v126 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v123 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v124 = (char *)&v108 - v5;
  sub_1BC06F858();
  v122 = v6;
  v121 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v120 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1BC089DE4();
  v133 = *(_QWORD *)(v135 - 8);
  v8 = MEMORY[0x1E0C80A78](v135);
  v113 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v116 = (char *)&v108 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v115 = (char *)&v108 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v114 = (char *)&v108 - v15;
  MEMORY[0x1E0C80A78](v14);
  v118 = (char *)&v108 - v16;
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v108 - v18;
  v20 = sub_1BC088F98();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v134 = (char *)&v108 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC089D6C();
  v132 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BC0892D4();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC08A738();
  v30 = *(void (**)(_QWORD))(v27 + 104);
  v127 = *MEMORY[0x1E0D2D5F8];
  v128 = (void (*)(char *, _QWORD, uint64_t))v30;
  v30(v29);
  v31 = (void *)sub_1BC0892C8();
  v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v129 = v29;
  v130 = v26;
  v32(v29, v26);
  sub_1BC089D60();
  sub_1BC089D48();

  v33 = *(void (**)(char *, uint64_t))(v132 + 8);
  v131 = v25;
  v132 = v23;
  v33(v25, v23);
  sub_1BC0895A4();
  sub_1BC08958C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BC01A8C0((uint64_t)v19);
    v34 = v116;
    sub_1BC089DC0();
    v35 = sub_1BC089DD8();
    v36 = sub_1BC08A66C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1BBFD7000, v35, v36, "[Contact Photo] Could not access Health app group container directory", v37, 2u);
      MEMORY[0x1BCCE9C40](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v133 + 8))(v34, v135);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v110 = v33;
    v112 = v21;
    v39 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v116 = (char *)v20;
    v39(v134, v19, v20);
    v40 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v41 = (void *)sub_1BC088F50();
    v137[0] = 0;
    v42 = objc_msgSend(v40, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v41, 1, 0, v137);

    v111 = v32;
    if (v42)
    {
      v43 = v137[0];
      v44 = v133;
      v45 = v135;
    }
    else
    {
      v46 = v137[0];
      v47 = (void *)sub_1BC088F08();

      swift_willThrow();
      v48 = v113;
      sub_1BC089D90();
      v49 = v47;
      v50 = v47;
      v51 = sub_1BC089DD8();
      v52 = sub_1BC08A660();
      v53 = os_log_type_enabled(v51, v52);
      v45 = v135;
      if (v53)
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = (void *)swift_slowAlloc();
        v137[0] = v55;
        *(_DWORD *)v54 = 136315138;
        v136 = (uint64_t)v47;
        v56 = v47;
        sub_1BBFE24A4();
        v57 = sub_1BC08A3F0();
        v136 = sub_1BBFDE0F8(v57, v58, (uint64_t *)v137);
        sub_1BC08A7EC();
        v45 = v135;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BBFD7000, v51, v52, "[Contact Photo] Could not create notificationProfileImageDirectory: %s", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v55, -1, -1);
        MEMORY[0x1BCCE9C40](v54, -1, -1);

      }
      else
      {

      }
      v44 = v133;
      (*(void (**)(char *, uint64_t))(v133 + 8))(v48, v45);
    }
    v59 = v117;
    v60 = (id)MEMORY[0x1E0DEE9D8];
    v137[0] = (id)MEMORY[0x1E0DEE9D8];
    v61 = *(_QWORD *)(v117 + 16);
    if (v61)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v61; ++i)
      {
        v63 = *(id *)(v59 + 8 * i + 32);
        v64 = (void *)sub_1BC089370();
        if (v64)
        {
          v65 = v64;
          v66 = objc_msgSend(v64, sel_type);

          if (v66 == (id)2)
          {
            MEMORY[0x1BCCE8E84]();
            if (*(_QWORD *)(((unint64_t)v137[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v137[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BC08A504();
            sub_1BC08A528();
            sub_1BC08A4E0();
          }
          else
          {

          }
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v60 = v137[0];
    }
    v67 = sub_1BBFFD538((unint64_t)v60);
    swift_bridgeObjectRelease();
    v68 = sub_1BC0676A8();
    *(_QWORD *)(swift_allocObject() + 16) = v67;
    v69 = (char *)sub_1BC08A798();

    swift_release();
    v70 = swift_allocObject();
    v71 = swift_bridgeObjectRetain();
    v72 = sub_1BBFFD55C(v71);
    swift_bridgeObjectRelease();
    v133 = v70;
    *(_QWORD *)(v70 + 16) = v72;
    v117 = v70 + 16;
    v109 = dispatch_group_create();
    dispatch_group_enter(v109);
    v73 = v118;
    sub_1BC089D90();
    v74 = sub_1BC089DD8();
    v75 = sub_1BC08A678();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = (void *)swift_slowAlloc();
      v137[0] = v77;
      *(_DWORD *)v76 = 136315138;
      v136 = sub_1BBFDE0F8(0xD000000000000020, 0x80000001BC091B70, (uint64_t *)v137);
      sub_1BC08A7EC();
      _os_log_impl(&dword_1BBFD7000, v74, v75, "[Contact Photo] Setting up %s", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v77, -1, -1);
      MEMORY[0x1BCCE9C40](v76, -1, -1);
    }

    v113 = *(char **)(v44 + 8);
    ((void (*)(char *, uint64_t))v113)(v73, v45);
    v118 = v69;
    v137[0] = v69;
    *(_QWORD *)(swift_allocObject() + 16) = v119;
    sub_1BC089FAC();
    sub_1BC06FA58();
    sub_1BC06F9AC();
    v78 = MEMORY[0x1E0C95D78];
    sub_1BC06F93C(0, &qword_1ED69B298, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v79 = MEMORY[0x1E0C95D90];
    sub_1BBFDA9C0(&qword_1ED69B270, (uint64_t (*)(uint64_t))sub_1BC06FA58, MEMORY[0x1E0C95D90]);
    sub_1BC0708CC((unint64_t *)&unk_1ED69B288, &qword_1ED69B298, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v78, v79);
    v80 = v120;
    sub_1BC08A1F8();
    swift_release();
    v81 = swift_allocObject();
    v82 = v109;
    *(_QWORD *)(v81 + 16) = v109;
    v83 = swift_allocObject();
    v84 = v133;
    *(_QWORD *)(v83 + 16) = sub_1BC06FB54;
    *(_QWORD *)(v83 + 24) = v84;
    sub_1BBFDA9C0(&qword_1ED69B1C8, (uint64_t (*)(uint64_t))sub_1BC06F858, MEMORY[0x1E0C95B78]);
    v85 = v82;
    swift_retain();
    v86 = v122;
    sub_1BC08A1B0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v80, v86);
    swift_retain();
    sub_1BC089C64();
    v87 = v123;
    sub_1BC08A2C4();
    v88 = v124;
    MEMORY[0x1BCCE8CB0](v87, 10.0);
    v89 = v126;
    v90 = *(void (**)(char *, uint64_t))(v125 + 8);
    v90(v87, v126);
    LOBYTE(v87) = sub_1BC08A6B4();
    v90(v88, v89);
    if ((v87 & 1) != 0)
    {
      v98 = v114;
      sub_1BC089D90();
      swift_retain();
      v99 = sub_1BC089DD8();
      v100 = sub_1BC08A660();
      if (os_log_type_enabled(v99, v100))
      {
        v101 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v101 = 134283521;
        v137[0] = (id)10;
        sub_1BC08A7EC();
        swift_release();
        _os_log_impl(&dword_1BBFD7000, v99, v100, "[Contact Photo] Operation timed out after %{private}ld seconds", v101, 0xCu);
        MEMORY[0x1BCCE9C40](v101, -1, -1);

      }
      else
      {

        swift_release();
      }
      v96 = v134;
      v97 = v111;
      ((void (*)(char *, uint64_t))v113)(v98, v135);
    }
    else
    {
      v91 = v115;
      sub_1BC089D90();
      v92 = sub_1BC089DD8();
      v93 = sub_1BC08A678();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc();
        v95 = (void *)swift_slowAlloc();
        v137[0] = v95;
        *(_DWORD *)v94 = 136315138;
        v136 = sub_1BBFDE0F8(0xD000000000000020, 0x80000001BC091B70, (uint64_t *)v137);
        sub_1BC08A7EC();
        _os_log_impl(&dword_1BBFD7000, v92, v93, "[Contact Photo] Finished %s", v94, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE9C40](v95, -1, -1);
        MEMORY[0x1BCCE9C40](v94, -1, -1);
      }

      ((void (*)(char *, uint64_t))v113)(v91, v135);
      v96 = v134;
      v97 = v111;
    }
    sub_1BC089C70();
    swift_release();
    swift_release();
    sub_1BC08A72C();
    v103 = v129;
    v102 = v130;
    v128(v129, v127, v130);
    v104 = (void *)sub_1BC0892C8();
    v97(v103, v102);
    v105 = v131;
    sub_1BC089D60();
    sub_1BC089D48();

    v110(v105, v132);
    swift_beginAccess();
    v106 = swift_bridgeObjectRetain();
    v38 = sub_1BBFF263C(v106);
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v112 + 8))(v96, v116);
    swift_release();
  }
  return v38;
}

uint64_t sub_1BC069C24(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  uint64_t result;
  id v8;

  v4 = objc_msgSend(a1, sel_profileIdentifier);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1BC04CB50(v4, a2);

    return v6 & 1;
  }
  if (objc_msgSend(a1, sel_direction) == (id)1)
  {
    v8 = objc_msgSend(a1, sel_status);
    if (!objc_msgSend(a1, sel_direction))
    {
      result = objc_msgSend(a1, sel_status) == (id)1;
      if (v8)
        return result;
      return 1;
    }
    return !v8;
  }
  if (objc_msgSend(a1, sel_direction))
    return 0;
  return objc_msgSend(a1, sel_status) == (id)1;
}

void sub_1BC069D14(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_1BC089DE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_1BC089D90();
  v9 = sub_1BC089DD8();
  v10 = sub_1BC08A678();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v18 = a2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v20 = v13;
    *(_DWORD *)v12 = 136315138;
    v19 = sub_1BBFDE0F8(0xD000000000000020, 0x80000001BC091B70, &v20);
    sub_1BC08A7EC();
    _os_log_impl(&dword_1BBFD7000, v9, v10, "[Contact Photo] Running %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v13, -1, -1);
    v14 = v12;
    a2 = v18;
    MEMORY[0x1BCCE9C40](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BBFDF744(0, (unint64_t *)&unk_1ED69B340);
  v15 = (void *)sub_1BC08A690();
  v16 = sub_1BC06FBA0(v8, (uint64_t)v15);

  *a2 = v16;
}

void sub_1BC069EEC(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_1BC089DE4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  v7 = sub_1BC089DD8();
  v8 = sub_1BC08A678();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_1BBFDE0F8(0xD000000000000020, 0x80000001BC091B70, &v12);
    sub_1BC08A7EC();
    _os_log_impl(&dword_1BBFD7000, v7, v8, "[Contact Photo] Finished %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v10, -1, -1);
    MEMORY[0x1BCCE9C40](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  dispatch_group_leave(a2);
}

uint64_t sub_1BC06A080(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  void (**v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v41;
  char *v42;
  char *v43;
  NSObject *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  _QWORD v52[2];
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63[3];
  id v64;

  v60 = a2;
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v52 - v4;
  v6 = sub_1BC088F98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v58 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)v52 - v10;
  v11 = sub_1BC089DE4();
  v12 = *(void (***)(char *, uint64_t))(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)v52 - v15;
  v16 = sub_1BC089064();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v57 = v7;
    v20 = (void *)objc_opt_self();
    v56 = a1;
    v21 = objc_msgSend(v56, sel_UUID);
    sub_1BC08904C();

    v22 = (void *)sub_1BC089040();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v23 = objc_msgSend(v20, sel__profileWithUUID_type_, v22, 2);

    swift_beginAccess();
    v24 = v23;
    sub_1BBFF36E8(&v64, v23);
    swift_endAccess();

    sub_1BC089D90();
    v25 = v24;
    v26 = sub_1BC089DD8();
    v27 = sub_1BC08A678();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v55 = v11;
      v29 = (uint8_t *)v28;
      v54 = swift_slowAlloc();
      v63[0] = v54;
      *(_DWORD *)v29 = 136380675;
      v52[1] = v29 + 4;
      v53 = v29;
      v30 = v25;
      v31 = v12;
      v32 = v5;
      v33 = v6;
      v34 = objc_msgSend(v30, sel_description);
      v35 = sub_1BC08A3C0();
      v37 = v36;

      v6 = v33;
      v5 = v32;
      v12 = v31;
      v64 = (id)sub_1BBFDE0F8(v35, v37, v63);
      sub_1BC08A7EC();

      swift_bridgeObjectRelease();
      v38 = v53;
      _os_log_impl(&dword_1BBFD7000, v26, v27, "[Contact Photo] Added invitation profile to allowlist. Profile: %{private}s", v53, 0xCu);
      v39 = v54;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v39, -1, -1);
      v11 = v55;
      MEMORY[0x1BCCE9C40](v38, -1, -1);

    }
    else
    {

    }
    v12[1](v62, v11);
    v7 = v57;
  }
  sub_1BC01A864(v60, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_1BC01A8C0((uint64_t)v5);
  v62 = (char *)v12;
  v41 = v61;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v5, v6);
  v42 = v59;
  sub_1BC089D90();
  v43 = v58;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v58, v41, v6);
  v44 = sub_1BC089DD8();
  v45 = v7;
  v46 = sub_1BC08A678();
  if (os_log_type_enabled(v44, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v63[0] = v48;
    *(_DWORD *)v47 = 136380675;
    v55 = v11;
    sub_1BBFDA9C0(&qword_1ED69B480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v49 = sub_1BC08AB64();
    v64 = (id)sub_1BBFDE0F8(v49, v50, v63);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    v51 = *(void (**)(char *, uint64_t))(v45 + 8);
    v51(v43, v6);
    _os_log_impl(&dword_1BBFD7000, v44, v46, "[Contact Photo] Successfully created and saved contact photo at %{private}s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v48, -1, -1);
    MEMORY[0x1BCCE9C40](v47, -1, -1);

    (*((void (**)(char *, uint64_t))v62 + 1))(v59, v55);
  }
  else
  {

    v51 = *(void (**)(char *, uint64_t))(v45 + 8);
    v51(v43, v6);
    (*((void (**)(char *, uint64_t))v62 + 1))(v42, v11);
  }
  return ((uint64_t (*)(char *, uint64_t))v51)(v61, v6);
}

id sub_1BC06A668@<X0>(id *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  id v47;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  id v55[2];

  v55[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC089DE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v49 - v11;
  v53 = *a1;
  v13 = sub_1BC08A75C();
  if (!v14)
  {
    sub_1BC089D90();
    v21 = v53;
    v22 = sub_1BC089DD8();
    v23 = sub_1BC08A660();
    if (os_log_type_enabled(v22, v23))
    {
      v52 = a3;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (void *)swift_slowAlloc();
      v55[0] = v25;
      *(_DWORD *)v24 = 136380675;
      v49[1] = v24 + 4;
      v26 = v21;
      v27 = objc_msgSend(v26, sel_description);
      v50 = v6;
      v28 = v27;
      v29 = sub_1BC08A3C0();
      v51 = v7;
      v30 = v29;
      v32 = v31;

      v54 = sub_1BBFDE0F8(v30, v32, (uint64_t *)v55);
      sub_1BC08A7EC();

      a3 = v52;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v22, v23, "[Contact Photo] Could not find contact identifier for %{private}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v25, -1, -1);
      MEMORY[0x1BCCE9C40](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v50);
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }

    v45 = *(void (**)(char *, uint64_t))(v7 + 8);
    v46 = v12;
LABEL_10:
    v45(v46, v6);
    goto LABEL_11;
  }
  v15 = v13;
  v16 = v14;
  sub_1BBFDF744(0, (unint64_t *)&unk_1ED69B340);
  sub_1BC08A684();
  v17 = (void *)sub_1BC08A3B4();
  sub_1BC070A24();
  v18 = (void *)sub_1BC08A4BC();
  swift_bridgeObjectRelease();
  v55[0] = 0;
  v19 = objc_msgSend(a2, sel_unifiedContactWithIdentifier_keysToFetch_error_, v17, v18, v55);

  v20 = v55[0];
  if (!v19)
  {
    v33 = v20;
    v34 = (void *)sub_1BC088F08();

    swift_willThrow();
    sub_1BC089D90();
    v35 = v34;
    swift_bridgeObjectRetain();
    v36 = v34;
    v37 = sub_1BC089DD8();
    v38 = sub_1BC08A660();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = (void *)swift_slowAlloc();
      v51 = v7;
      v41 = v40;
      v55[0] = v40;
      *(_DWORD *)v39 = 136380931;
      v52 = a3;
      swift_bridgeObjectRetain();
      v54 = sub_1BBFDE0F8(v15, v16, (uint64_t *)v55);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2082;
      v54 = (uint64_t)v34;
      v42 = v34;
      sub_1BBFE24A4();
      v43 = sub_1BC08A3F0();
      v54 = sub_1BBFDE0F8(v43, v44, (uint64_t *)v55);
      a3 = v52;
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BBFD7000, v37, v38, "[Contact Photo] Could not find contact with identifier %{private}s: %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v41, -1, -1);
      MEMORY[0x1BCCE9C40](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v6);
      goto LABEL_11;
    }

    swift_bridgeObjectRelease_n();
    v45 = *(void (**)(char *, uint64_t))(v7 + 8);
    v46 = v10;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  v47 = v53;
  *a3 = v53;
  a3[1] = v19;
  return v47;
}

uint64_t sub_1BC06AB80(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v40 = a2;
  sub_1BBFDB42C(0, &qword_1EF3EE340, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A158], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - v4;
  sub_1BC06F93C(0, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v46 = v6;
  v44 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v38 - v7;
  sub_1BC07090C();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC089CF4();
  v49 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v16 = sub_1BC089064();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a1, sel_profileIdentifier);
  if (!v20)
  {
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(a1, sel_UUID);
    sub_1BC08904C();

    v23 = sub_1BC089040();
    v39 = v10;
    v24 = (void *)v23;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v20 = objc_msgSend(v21, sel__profileWithUUID_type_, v24, 2);

    v10 = v39;
  }
  v25 = v20;
  v26 = v15;
  sub_1BC089CDC();
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v13, v15, v10);
  v27 = sub_1BC08A060();
  MEMORY[0x1E0C80A78](v27);
  *(&v38 - 2) = v40;
  *(&v38 - 1) = (uint64_t)a1;
  sub_1BC06F9AC();
  v28 = v42;
  v29 = v43;
  sub_1BC08A048();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v28);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v30 = v10;
  v31 = MEMORY[0x1E0C95D78];
  sub_1BC06F93C(0, &qword_1ED69B298, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC0708CC(&qword_1EF3EE338, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
  sub_1BC0708CC((unint64_t *)&unk_1ED69B288, &qword_1ED69B298, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v31, MEMORY[0x1E0C95D90]);
  v32 = a1;
  v34 = v45;
  v33 = v46;
  sub_1BC08A1BC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v33);
  sub_1BBFDA9C0(&qword_1EF3EE350, (uint64_t (*)(uint64_t))sub_1BC07090C, MEMORY[0x1E0C959F8]);
  v35 = v48;
  v36 = sub_1BC08A180();

  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v30);
  return v36;
}

void sub_1BC06AFC0(void *a1@<X1>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  if (a1)
  {
    v10 = a1;
    sub_1BC089CE8();

    if (v3)
      return;
    sub_1BC06F9AC();
    v12 = (uint64_t)a3 + *(int *)(v11 + 48);
    *a3 = a2;
    sub_1BC070870((uint64_t)v9, v12);
  }
  else
  {
    sub_1BC06F9AC();
    v14 = (char *)a3 + *(int *)(v13 + 48);
    *a3 = a2;
    v15 = sub_1BC088F98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  }
  v16 = a2;
}

uint64_t sub_1BC06B0D8@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t result;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a3;
  sub_1BC06F9AC();
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint8_t **)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v43 - v10;
  sub_1BBFDB42C(0, &qword_1EF3EE328, (uint64_t (*)(uint64_t))sub_1BC06F9AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v12 = v11;
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v51 = (char *)&v43 - v13;
  sub_1BC06F93C(0, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v52 = (char *)&v43 - v17;
  v18 = sub_1BC089DE4();
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  sub_1BC089D90();
  v22 = v21;
  v23 = v21;
  v24 = sub_1BC089DD8();
  v25 = sub_1BC08A660();
  if (os_log_type_enabled(v24, v25))
  {
    v46 = v15;
    v26 = swift_slowAlloc();
    v45 = v12;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc();
    v44 = v16;
    v29 = v28;
    v55 = (uint64_t)v21;
    v56 = v28;
    v47 = a2;
    *(_DWORD *)v27 = 136315138;
    v43 = v27 + 4;
    v30 = v21;
    sub_1BBFE24A4();
    v31 = sub_1BC08A3F0();
    v55 = sub_1BBFDE0F8(v31, v32, &v56);
    a2 = v47;
    sub_1BC08A7EC();
    v15 = v46;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v24, v25, "[Contact Photo] Could not save image: %s", v27, 0xCu);
    swift_arrayDestroy();
    v33 = v29;
    v16 = v44;
    MEMORY[0x1BCCE9C40](v33, -1, -1);
    v34 = v27;
    v12 = v45;
    MEMORY[0x1BCCE9C40](v34, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v49);
  v35 = sub_1BC088F98();
  v36 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v50, 1, 1, v35);
  v37 = (uint64_t)v8 + *(int *)(v6 + 48);
  *v8 = a2;
  sub_1BC070870(v36, v37);
  v38 = a2;
  v39 = v51;
  sub_1BC08A060();
  sub_1BBFE24A4();
  v40 = v52;
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v12);
  sub_1BC0708CC(&qword_1EF3EE338, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
  v41 = sub_1BC08A180();
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v40, v15);
  *v54 = v41;
  return result;
}

uint64_t sub_1BC06B4E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC06AB80(*(void **)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1BC06B514@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  _QWORD v40[2];
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_1BC06F9AC();
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BBFDB42C(0, (unint64_t *)&unk_1ED69DBE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v40 - v9;
  sub_1BBFDB42C(0, &qword_1EF3EE328, (uint64_t (*)(uint64_t))sub_1BC06F9AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v50 = v10;
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v40 - v11;
  sub_1BC06F93C(0, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v14 = v13;
  v49 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v40 - v15;
  v17 = sub_1BC089DE4();
  v45 = *(_QWORD *)(v17 - 8);
  v46 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  sub_1BC089D90();
  v21 = v20;
  v22 = v20;
  v23 = sub_1BC089DD8();
  v24 = sub_1BC08A660();
  if (os_log_type_enabled(v23, v24))
  {
    v44 = a2;
    v25 = swift_slowAlloc();
    v41 = v14;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v42 = v7;
    v28 = v27;
    v51 = (uint64_t)v20;
    v52 = v27;
    v43 = v5;
    *(_DWORD *)v26 = 136315138;
    v40[1] = v26 + 4;
    v29 = v20;
    sub_1BBFE24A4();
    v30 = sub_1BC08A3F0();
    v51 = sub_1BBFDE0F8(v30, v31, &v52);
    v5 = v43;
    sub_1BC08A7EC();
    a2 = v44;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BBFD7000, v23, v24, "[Contact Photo] Could not process contact photo: %s", v26, 0xCu);
    swift_arrayDestroy();
    v32 = v28;
    v7 = v42;
    MEMORY[0x1BCCE9C40](v32, -1, -1);
    v33 = v26;
    v14 = v41;
    MEMORY[0x1BCCE9C40](v33, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v46);
  v34 = sub_1BC088F98();
  v35 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v47, 1, 1, v34);
  v36 = (uint64_t)v7 + *(int *)(v5 + 48);
  *v7 = 0;
  sub_1BC070870(v35, v36);
  sub_1BC08A060();
  sub_1BBFE24A4();
  v37 = v50;
  sub_1BC08A03C();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v37);
  sub_1BC0708CC(&qword_1EF3EE338, &qword_1EF3EE330, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
  v38 = sub_1BC08A180();
  result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v16, v14);
  *a2 = v38;
  return result;
}

uint64_t sub_1BC06B908(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint8_t *v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1BC088F98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BC089DE4();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_1BC088F50();
  v28[0] = 0;
  v12 = objc_msgSend(a2, sel_removeItemAtURL_error_, v11, v28);

  if (v12)
  {
    v13 = v28[0];
    sub_1BC089DC0();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v14 = sub_1BC089DD8();
    v15 = sub_1BC08A678();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v25 = (void *)swift_slowAlloc();
      v28[0] = v25;
      v24 = v16;
      *(_DWORD *)v16 = 136380675;
      v23 = v16 + 4;
      sub_1BBFDA9C0(&qword_1ED69B480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v17 = sub_1BC08AB64();
      v27 = sub_1BBFDE0F8(v17, v18, (uint64_t *)v28);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v19 = v24;
      _os_log_impl(&dword_1BBFD7000, v14, v15, "[Contact Photo] Successfully deleted profile image %{private}s", v24, 0xCu);
      v20 = v25;
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v20, -1, -1);
      MEMORY[0x1BCCE9C40](v19, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  }
  else
  {
    v21 = v28[0];
    sub_1BC088F08();

    return swift_willThrow();
  }
}

uint64_t sub_1BC06BBD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  swift_beginAccess();
  swift_retain();
  sub_1BC0891D8();
  swift_release();
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_1BC06F500(0, &qword_1ED69AD60, &qword_1ED69ADB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D848], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC06F578();
  swift_retain();
  v5 = sub_1BC08A1B0();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v5;
  swift_release();
  swift_retain();
  sub_1BC089C64();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC06BD94(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v5 = sub_1BC089DE4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v36 - v10;
  v12 = *a1;
  if (v12)
  {
    v13 = v12;
    sub_1BC089D90();
    v14 = v12;
    v15 = v12;
    v16 = sub_1BC089DD8();
    v17 = sub_1BC08A660();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v37 = v5;
      v20 = v19;
      v40[0] = v19;
      *(_DWORD *)v18 = 136315394;
      v38 = a3;
      v21 = sub_1BC08AC9C();
      v39 = sub_1BBFDE0F8(v21, v22, v40);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v39 = (uint64_t)v12;
      v23 = v12;
      sub_1BBFE24A4();
      v24 = sub_1BC08A3E4();
      v39 = sub_1BBFDE0F8(v24, v25, v40);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BBFD7000, v16, v17, "[%s] Error removing feed item notifications for removed profiles. %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v20, -1, -1);
      MEMORY[0x1BCCE9C40](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v37);
      goto LABEL_9;
    }

    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33 = v11;
  }
  else
  {
    sub_1BC089D90();
    v26 = sub_1BC089DD8();
    v27 = sub_1BC08A678();
    if (os_log_type_enabled(v26, v27))
    {
      v37 = v5;
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v40[0] = v29;
      v38 = a3;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_1BC08AC9C();
      v39 = sub_1BBFDE0F8(v30, v31, v40);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v26, v27, "[%s] Successfully removed feed item notifications for removed profiles", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v29, -1, -1);
      MEMORY[0x1BCCE9C40](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v37);
      goto LABEL_9;
    }

    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33 = v9;
  }
  v32(v33, v5);
LABEL_9:
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1BC089C70();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v35 = *(void (**)(uint64_t))(result + 272);
    sub_1BBFE6078((uint64_t)v35);
    result = swift_release();
    if (v35)
    {
      v35(result);
      return sub_1BBFE60FC((uint64_t)v35);
    }
  }
  return result;
}

uint64_t sub_1BC06C210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_1BC089DE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC089D90();
  swift_bridgeObjectRetain_n();
  v4 = sub_1BC089DD8();
  v5 = sub_1BC08A678();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v18 = v1;
    v7 = v6;
    v8 = swift_slowAlloc();
    v20 = v8;
    *(_DWORD *)v7 = 136315395;
    v9 = sub_1BC08AC9C();
    v19 = sub_1BBFDE0F8(v9, v10, &v20);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2081;
    v11 = sub_1BC08943C();
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x1BCCE8EA8](v12, v11);
    v17 = v0;
    v15 = v14;
    swift_bridgeObjectRelease();
    v19 = sub_1BBFDE0F8(v13, v15, &v20);
    sub_1BC08A7EC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BBFD7000, v4, v5, "[%s] Removed %{private}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCE9C40](v8, -1, -1);
    MEMORY[0x1BCCE9C40](v7, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v3, v17);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1BC06C448(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  id v4;
  uint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    swift_bridgeObjectRetain();
    for (i = 0; i != v1; ++i)
    {
      v4 = *(id *)(v2 + 8 * i + 32);
      v5 = sub_1BC089370();

      if (v5)
      {
        MEMORY[0x1BCCE8E84]();
        if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC08A504();
        sub_1BC08A528();
        sub_1BC08A4E0();
      }
    }
    a1 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1E0C80A78](a1);
  swift_retain();
  sub_1BC089B20();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BC06C574(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_bridgeObjectRetain();
  sub_1BBFEF7E8(v4);
  v6 = v5;
  if ((v5 & 0xC000000000000001) != 0)
  {
    if (v5 < 0)
      v7 = v5;
    else
      v7 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = sub_1BC08A8A0();
    v9 = sub_1BBFF4434(v7, v8);
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  v10 = sub_1BC06DF10(a2, v6);
  sub_1BC067038(v10, a1);
  return swift_release();
}

uint64_t sub_1BC06C614(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *v1;
  sub_1BC06F5E0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BC089970();
  if ((result & 1) != 0)
  {
    sub_1BC06E448(a1, sub_1BC06F6B8);
    v11 = v10;
    v12 = swift_allocObject();
    v18 = v3;
    v19 = v11;
    *(_QWORD *)(v12 + 16) = 0;
    v13 = MEMORY[0x1E0C95D78];
    sub_1BC06F768(0, &qword_1ED69A9F0, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC06F6C0();
    sub_1BC06F678(&qword_1ED69A9E8, &qword_1ED69A9F0, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v13, MEMORY[0x1E0C95D90]);
    sub_1BBFDA9C0(&qword_1ED69AA68, (uint64_t (*)(uint64_t))sub_1BC06F6C0, MEMORY[0x1E0DEAF38]);
    sub_1BC089F4C();
    v14 = swift_allocObject();
    swift_weakInit();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v14;
    v15[3] = v12;
    v15[4] = v18;
    sub_1BBFDA9C0(&qword_1ED69A900, (uint64_t (*)(uint64_t))sub_1BC06F5E0, MEMORY[0x1E0C95C80]);
    swift_retain();
    v16 = sub_1BC08A1B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v16;
    swift_release();
    swift_retain();
    sub_1BC089C64();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC06C864(void *a1, void *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  id v7;
  uint64_t v8;

  v4 = *a3;
  if (objc_msgSend(a1, sel_type) != (id)2)
    return 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = MEMORY[0x1E0C960D8];
  sub_1BC06F768(0, &qword_1EF3EE308, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v7 = a2;
  sub_1BC08A090();
  sub_1BC06F678(&qword_1EF3EE310, &qword_1EF3EE308, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v6, MEMORY[0x1E0C96108]);
  v8 = sub_1BC08A180();
  swift_release();
  return v8;
}

uint64_t sub_1BC06C964(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38;

  v8 = sub_1BC089DE4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v35 - v13;
  v15 = a2 + 16;
  if ((*a1 & 1) != 0)
  {
    sub_1BC089D90();
    v16 = sub_1BC089DD8();
    v17 = sub_1BC08A678();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v36 = v8;
      v37[0] = v19;
      v20 = v19;
      v35 = v15;
      *(_DWORD *)v18 = 136446210;
      v38 = a4;
      swift_getMetatypeMetadata();
      v21 = sub_1BC08A3E4();
      v38 = sub_1BBFDE0F8(v21, v22, v37);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v16, v17, "[%{public}s]: Pull all shared summaries successfully.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v20, -1, -1);
      MEMORY[0x1BCCE9C40](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v36);
      goto LABEL_9;
    }

    v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v33 = v12;
  }
  else
  {
    sub_1BC089D90();
    v23 = sub_1BC089DD8();
    v24 = sub_1BC08A660();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v36 = v8;
      v37[0] = v26;
      v27 = v26;
      *(_DWORD *)v25 = 136446466;
      v38 = a4;
      swift_getMetatypeMetadata();
      v35 = a3;
      v28 = sub_1BC08A3E4();
      v38 = sub_1BBFDE0F8(v28, v29, v37);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v30 = sub_1BC08A3E4();
      v38 = sub_1BBFDE0F8(v30, v31, v37);
      sub_1BC08A7EC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BBFD7000, v23, v24, "[%{public}s]: Pull Shared Summaries Error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCE9C40](v27, -1, -1);
      MEMORY[0x1BCCE9C40](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v36);
      goto LABEL_9;
    }

    v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v33 = v14;
  }
  v32(v33, v8);
LABEL_9:
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1BC089C70();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

