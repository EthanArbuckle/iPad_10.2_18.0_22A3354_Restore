@implementation HAFacialMetricsExporter

- (HAFacialMetricsExporter)initWithBinarySampleRepresentation:(id)a3 metadata:(id)a4 timestamp:(double)a5
{
  id v7;
  HAFacialMetricsExporter *v8;
  HAFacialMetricsExporter *v9;
  NSObject *v10;
  unsigned int v11;
  uint64_t v12;
  HAFacialMetricsExporter *v13;
  NSObject *v14;
  objc_super v16;
  uint8_t buf[24];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v7 = a3;
  v16.receiver = self;
  v16.super_class = (Class)HAFacialMetricsExporter;
  v8 = -[HAFacialMetricsExporter init](&v16, sel_init);
  v9 = v8;
  if (!v8)
    goto LABEL_15;
  objc_storeStrong((id *)&v8->_packet, a3);
  if ((unint64_t)objc_msgSend(v7, "length") <= 3)
  {
    ha_get_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
      -[HAFacialMetricsExporter initWithBinarySampleRepresentation:metadata:timestamp:].cold.1(v10);
LABEL_5:

LABEL_15:
    v13 = 0;
    goto LABEL_16;
  }
  objc_msgSend(v7, "getBytes:length:", &v9->_packetType, 4);
  v11 = -[HAFacialMetricsExporter packetType](v9, "packetType");
  if (v11 >= 6)
  {
    ha_get_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
      -[HAFacialMetricsExporter initWithBinarySampleRepresentation:metadata:timestamp:].cold.3(buf, -[HAFacialMetricsExporter packetType](v9, "packetType"), v10);
    goto LABEL_5;
  }
  v12 = qword_216CD0658[v11];
  if (objc_msgSend(v7, "length") != v12)
  {
    ha_get_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
      -[HAFacialMetricsExporter initWithBinarySampleRepresentation:metadata:timestamp:].cold.2(buf, v12, objc_msgSend(v7, "length"), v14);

    goto LABEL_15;
  }
  v13 = v9;
LABEL_16:

  return v13;
}

- (id)sr_dictionaryRepresentation
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  void *v79;
  double v80;
  void *v81;
  double v82;
  void *v83;
  double v84;
  void *v85;
  double v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  void *v96;
  double v97;
  void *v98;
  void *v99;
  double v100;
  void *v101;
  double v102;
  void *v103;
  double v104;
  void *v105;
  double v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  id v208;
  _QWORD v209[3];
  _QWORD v210[3];
  _QWORD v211[8];
  _QWORD v212[8];
  _QWORD v213[8];
  _QWORD v214[8];
  _QWORD v215[7];
  _QWORD v216[7];
  _QWORD v217[2];
  _QWORD v218[2];
  _QWORD v219[51];
  _QWORD v220[51];
  _QWORD v221[3];
  _QWORD v222[3];
  _QWORD v223[3];
  _QWORD v224[3];
  _QWORD v225[3];
  _QWORD v226[3];
  _QWORD v227[2];
  _QWORD v228[2];
  _QWORD v229[8];
  _QWORD v230[10];

  v230[8] = *MEMORY[0x24BDAC8D0];
  v208 = (id)objc_opt_new();
  v229[0] = CFSTR("lock_session_id");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 40));
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  v230[0] = v206;
  v229[1] = CFSTR("lock_session_relative_timestamp");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *(double *)(a1 + 48));
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  v230[1] = v204;
  v229[2] = CFSTR("messages_session_id");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 56));
  v202 = (void *)objc_claimAutoreleasedReturnValue();
  v230[2] = v202;
  v229[3] = CFSTR("message_session_relative_timestamp");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *(double *)(a1 + 64));
  v200 = (void *)objc_claimAutoreleasedReturnValue();
  v230[3] = v200;
  v229[4] = CFSTR("pose");
  v227[0] = CFSTR("rotation");
  LODWORD(v2) = *(_DWORD *)(a1 + 72);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v2);
  v198 = (void *)objc_claimAutoreleasedReturnValue();
  v225[0] = v198;
  LODWORD(v3) = *(_DWORD *)(a1 + 76);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v3);
  v196 = (void *)objc_claimAutoreleasedReturnValue();
  v225[1] = v196;
  LODWORD(v4) = *(_DWORD *)(a1 + 80);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v4);
  v194 = (void *)objc_claimAutoreleasedReturnValue();
  v225[2] = v194;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v225, 3);
  v193 = (void *)objc_claimAutoreleasedReturnValue();
  v226[0] = v193;
  LODWORD(v5) = *(_DWORD *)(a1 + 84);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v5);
  v192 = (void *)objc_claimAutoreleasedReturnValue();
  v224[0] = v192;
  LODWORD(v6) = *(_DWORD *)(a1 + 88);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v6);
  v191 = (void *)objc_claimAutoreleasedReturnValue();
  v224[1] = v191;
  LODWORD(v7) = *(_DWORD *)(a1 + 92);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v7);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  v224[2] = v190;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v224, 3);
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  v226[1] = v189;
  LODWORD(v8) = *(_DWORD *)(a1 + 96);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v8);
  v188 = (void *)objc_claimAutoreleasedReturnValue();
  v223[0] = v188;
  LODWORD(v9) = *(_DWORD *)(a1 + 100);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v9);
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  v223[1] = v187;
  LODWORD(v10) = *(_DWORD *)(a1 + 104);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v10);
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  v223[2] = v186;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v223, 3);
  v185 = (void *)objc_claimAutoreleasedReturnValue();
  v226[2] = v185;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v226, 3);
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  v227[1] = CFSTR("translation");
  v228[0] = v184;
  LODWORD(v11) = *(_DWORD *)(a1 + 108);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v11);
  v183 = (void *)objc_claimAutoreleasedReturnValue();
  v222[0] = v183;
  LODWORD(v12) = *(_DWORD *)(a1 + 112);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v12);
  v182 = (void *)objc_claimAutoreleasedReturnValue();
  v222[1] = v182;
  LODWORD(v13) = *(_DWORD *)(a1 + 116);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v13);
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  v222[2] = v181;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v222, 3);
  v180 = (void *)objc_claimAutoreleasedReturnValue();
  v228[1] = v180;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v228, v227, 2);
  v179 = (void *)objc_claimAutoreleasedReturnValue();
  v230[4] = v179;
  v229[5] = CFSTR("gaze");
  LODWORD(v14) = *(_DWORD *)(a1 + 160);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v14);
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  v221[0] = v178;
  LODWORD(v15) = *(_DWORD *)(a1 + 164);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v15);
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  v221[1] = v177;
  LODWORD(v16) = *(_DWORD *)(a1 + 168);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v16);
  v176 = (void *)objc_claimAutoreleasedReturnValue();
  v221[2] = v176;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v221, 3);
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  v230[5] = v175;
  v229[6] = CFSTR("blendshapes");
  v219[0] = CFSTR("eye_blink_left");
  LODWORD(v17) = *(_DWORD *)(a1 + 172);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v17);
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  v220[0] = v174;
  v219[1] = CFSTR("eye_blink_right");
  LODWORD(v18) = *(_DWORD *)(a1 + 176);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v18);
  v173 = (void *)objc_claimAutoreleasedReturnValue();
  v220[1] = v173;
  v219[2] = CFSTR("eye_squint_left");
  LODWORD(v19) = *(_DWORD *)(a1 + 180);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v19);
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  v220[2] = v172;
  v219[3] = CFSTR("eye_squint_right");
  LODWORD(v20) = *(_DWORD *)(a1 + 184);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v20);
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  v220[3] = v171;
  v219[4] = CFSTR("eye_look_down_left");
  LODWORD(v21) = *(_DWORD *)(a1 + 188);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v21);
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  v220[4] = v170;
  v219[5] = CFSTR("eye_look_down_right");
  LODWORD(v22) = *(_DWORD *)(a1 + 192);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v22);
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  v220[5] = v169;
  v219[6] = CFSTR("eye_look_in_left");
  LODWORD(v23) = *(_DWORD *)(a1 + 196);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v23);
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  v220[6] = v168;
  v219[7] = CFSTR("eye_look_in_right");
  LODWORD(v24) = *(_DWORD *)(a1 + 200);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v24);
  v167 = (void *)objc_claimAutoreleasedReturnValue();
  v220[7] = v167;
  v219[8] = CFSTR("eye_wide_left");
  LODWORD(v25) = *(_DWORD *)(a1 + 204);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v25);
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  v220[8] = v166;
  v219[9] = CFSTR("eye_wide_right");
  LODWORD(v26) = *(_DWORD *)(a1 + 208);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v26);
  v165 = (void *)objc_claimAutoreleasedReturnValue();
  v220[9] = v165;
  v219[10] = CFSTR("eye_look_out_left");
  LODWORD(v27) = *(_DWORD *)(a1 + 212);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v27);
  v164 = (void *)objc_claimAutoreleasedReturnValue();
  v220[10] = v164;
  v219[11] = CFSTR("eye_look_out_right");
  LODWORD(v28) = *(_DWORD *)(a1 + 216);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v28);
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  v220[11] = v163;
  v219[12] = CFSTR("eye_look_up_left");
  LODWORD(v29) = *(_DWORD *)(a1 + 220);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v29);
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  v220[12] = v162;
  v219[13] = CFSTR("eye_look_up_right");
  LODWORD(v30) = *(_DWORD *)(a1 + 224);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v30);
  v161 = (void *)objc_claimAutoreleasedReturnValue();
  v220[13] = v161;
  v219[14] = CFSTR("brow_down_left");
  LODWORD(v31) = *(_DWORD *)(a1 + 228);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v31);
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  v220[14] = v160;
  v219[15] = CFSTR("brow_down_right");
  LODWORD(v32) = *(_DWORD *)(a1 + 232);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v32);
  v159 = (void *)objc_claimAutoreleasedReturnValue();
  v220[15] = v159;
  v219[16] = CFSTR("brow_inner_up");
  LODWORD(v33) = *(_DWORD *)(a1 + 236);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v33);
  v158 = (void *)objc_claimAutoreleasedReturnValue();
  v220[16] = v158;
  v219[17] = CFSTR("brow_outer_up_left");
  LODWORD(v34) = *(_DWORD *)(a1 + 240);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v34);
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  v220[17] = v157;
  v219[18] = CFSTR("brow_outer_up_right");
  LODWORD(v35) = *(_DWORD *)(a1 + 244);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v35);
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  v220[18] = v156;
  v219[19] = CFSTR("jaw_open");
  LODWORD(v36) = *(_DWORD *)(a1 + 248);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v36);
  v155 = (void *)objc_claimAutoreleasedReturnValue();
  v220[19] = v155;
  v219[20] = CFSTR("mouth_close");
  LODWORD(v37) = *(_DWORD *)(a1 + 252);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v37);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  v220[20] = v154;
  v219[21] = CFSTR("jaw_left");
  LODWORD(v38) = *(_DWORD *)(a1 + 256);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v38);
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  v220[21] = v153;
  v219[22] = CFSTR("jaw_right");
  LODWORD(v39) = *(_DWORD *)(a1 + 260);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v39);
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  v220[22] = v152;
  v219[23] = CFSTR("jaw_forward");
  LODWORD(v40) = *(_DWORD *)(a1 + 264);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v40);
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  v220[23] = v151;
  v219[24] = CFSTR("mouth_upper_up_left");
  LODWORD(v41) = *(_DWORD *)(a1 + 268);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v41);
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  v220[24] = v150;
  v219[25] = CFSTR("mouth_upper_up_right");
  LODWORD(v42) = *(_DWORD *)(a1 + 272);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v42);
  v149 = (void *)objc_claimAutoreleasedReturnValue();
  v220[25] = v149;
  v219[26] = CFSTR("mouth_lower_down_left");
  LODWORD(v43) = *(_DWORD *)(a1 + 276);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v43);
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  v220[26] = v148;
  v219[27] = CFSTR("mouth_lower_down_right");
  LODWORD(v44) = *(_DWORD *)(a1 + 280);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v44);
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  v220[27] = v147;
  v219[28] = CFSTR("mouth_roll_upper");
  LODWORD(v45) = *(_DWORD *)(a1 + 284);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v45);
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  v220[28] = v146;
  v219[29] = CFSTR("mouth_roll_lower");
  LODWORD(v46) = *(_DWORD *)(a1 + 288);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v46);
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  v220[29] = v145;
  v219[30] = CFSTR("mouth_smile_left");
  LODWORD(v47) = *(_DWORD *)(a1 + 292);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v47);
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  v220[30] = v144;
  v219[31] = CFSTR("mouth_smile_right");
  LODWORD(v48) = *(_DWORD *)(a1 + 296);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v48);
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  v220[31] = v143;
  v219[32] = CFSTR("mouth_dimple_left");
  LODWORD(v49) = *(_DWORD *)(a1 + 300);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v49);
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  v220[32] = v142;
  v219[33] = CFSTR("mouth_dimple_right");
  LODWORD(v50) = *(_DWORD *)(a1 + 304);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v50);
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  v220[33] = v141;
  v219[34] = CFSTR("mouth_stretch_left");
  LODWORD(v51) = *(_DWORD *)(a1 + 308);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v51);
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  v220[34] = v140;
  v219[35] = CFSTR("mouth_stretch_right");
  LODWORD(v52) = *(_DWORD *)(a1 + 312);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v52);
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  v220[35] = v139;
  v219[36] = CFSTR("mouth_frown_left");
  LODWORD(v53) = *(_DWORD *)(a1 + 316);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v53);
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  v220[36] = v138;
  v219[37] = CFSTR("mouth_frown_right");
  LODWORD(v54) = *(_DWORD *)(a1 + 320);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v54);
  v137 = (void *)objc_claimAutoreleasedReturnValue();
  v220[37] = v137;
  v219[38] = CFSTR("mouth_press_left");
  LODWORD(v55) = *(_DWORD *)(a1 + 324);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v55);
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  v220[38] = v136;
  v219[39] = CFSTR("mouth_press_right");
  LODWORD(v56) = *(_DWORD *)(a1 + 328);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v56);
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  v220[39] = v135;
  v219[40] = CFSTR("mouth_pucker");
  LODWORD(v57) = *(_DWORD *)(a1 + 332);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v57);
  v134 = (void *)objc_claimAutoreleasedReturnValue();
  v220[40] = v134;
  v219[41] = CFSTR("mouth_funnel");
  LODWORD(v58) = *(_DWORD *)(a1 + 336);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v58);
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  v220[41] = v133;
  v219[42] = CFSTR("mouth_left");
  LODWORD(v59) = *(_DWORD *)(a1 + 340);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v59);
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  v220[42] = v132;
  v219[43] = CFSTR("mouth_right");
  LODWORD(v60) = *(_DWORD *)(a1 + 344);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v60);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  v220[43] = v131;
  v219[44] = CFSTR("mouth_shrug_lower");
  LODWORD(v61) = *(_DWORD *)(a1 + 348);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v61);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v220[44] = v130;
  v219[45] = CFSTR("mouth_shrug_upper");
  LODWORD(v62) = *(_DWORD *)(a1 + 352);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v62);
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  v220[45] = v129;
  v219[46] = CFSTR("nose_sneer_left");
  LODWORD(v63) = *(_DWORD *)(a1 + 356);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v63);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v220[46] = v128;
  v219[47] = CFSTR("nose_sneer_right");
  LODWORD(v64) = *(_DWORD *)(a1 + 360);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v64);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  v220[47] = v127;
  v219[48] = CFSTR("cheek_puff");
  LODWORD(v65) = *(_DWORD *)(a1 + 364);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v65);
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  v220[48] = v126;
  v219[49] = CFSTR("cheek_squint_left");
  LODWORD(v66) = *(_DWORD *)(a1 + 368);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v66);
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  v220[49] = v125;
  v219[50] = CFSTR("cheek_squint_right");
  LODWORD(v67) = *(_DWORD *)(a1 + 372);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v67);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v220[50] = v124;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v220, v219, 51);
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  v230[6] = v123;
  v229[7] = CFSTR("face_positions");
  v217[0] = CFSTR("expressions");
  v215[0] = CFSTR("brow_furrow_and_eyes_wide_and_mouth_pressed_tight");
  LODWORD(v68) = *(_DWORD *)(a1 + 376);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v68);
  v122 = (void *)objc_claimAutoreleasedReturnValue();
  v216[0] = v122;
  v215[1] = CFSTR("baseline");
  LODWORD(v69) = *(_DWORD *)(a1 + 380);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v69);
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v216[1] = v121;
  v215[2] = CFSTR("nose_wrinkle_or_upper_lip_raise");
  LODWORD(v70) = *(_DWORD *)(a1 + 384);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v70);
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  v216[2] = v120;
  v215[3] = CFSTR("brow_raise_with_furrow_and_eye_widen_and_mouth_stretch");
  LODWORD(v71) = *(_DWORD *)(a1 + 388);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v71);
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  v216[3] = v119;
  v215[4] = CFSTR("lip_raise_and_cheek_raise");
  LODWORD(v72) = *(_DWORD *)(a1 + 392);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v72);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v216[4] = v118;
  v215[5] = CFSTR("inner_brow_raise_and_mouth_corner_depress");
  LODWORD(v73) = *(_DWORD *)(a1 + 396);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v73);
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  v216[5] = v117;
  v215[6] = CFSTR("brow_raise_without_furrow_and_eye_widen_and_jaw_drop");
  LODWORD(v74) = *(_DWORD *)(a1 + 400);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v74);
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v216[6] = v116;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v216, v215, 7);
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  v218[0] = v115;
  v217[1] = CFSTR("key_actions");
  v213[0] = CFSTR("inner_brow_raise");
  LODWORD(v75) = *(_DWORD *)(a1 + 404);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v75);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  v214[0] = v114;
  v213[1] = CFSTR("brow_raise_with_furrow");
  LODWORD(v76) = *(_DWORD *)(a1 + 408);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v76);
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  v214[1] = v113;
  v213[2] = CFSTR("brow_raise_without_furrow");
  LODWORD(v77) = *(_DWORD *)(a1 + 412);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v77);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v214[2] = v112;
  v213[3] = CFSTR("brow_furrow");
  LODWORD(v78) = *(_DWORD *)(a1 + 416);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v78);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v214[3] = v79;
  v213[4] = CFSTR("mouth_corner_depress");
  LODWORD(v80) = *(_DWORD *)(a1 + 420);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v80);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  v214[4] = v81;
  v213[5] = CFSTR("mouth_stretch");
  LODWORD(v82) = *(_DWORD *)(a1 + 424);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v82);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  v214[5] = v83;
  v213[6] = CFSTR("mouth_pressed_or_tight");
  LODWORD(v84) = *(_DWORD *)(a1 + 428);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v84);
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v214[6] = v85;
  v213[7] = CFSTR("nose_wrinkle");
  LODWORD(v86) = *(_DWORD *)(a1 + 432);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v86);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  v214[7] = v87;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v214, v213, 8);
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v218[1] = v88;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v218, v217, 2);
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  v230[7] = v89;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v230, v229, 8);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v208, "addEntriesFromDictionary:", v90);

  v211[0] = CFSTR("session_id");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 24));
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  v212[0] = v207;
  v211[1] = CFSTR("session_flags_enum");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 32));
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  v212[1] = v205;
  v211[2] = CFSTR("geometry_left_eye");
  LODWORD(v91) = *(_DWORD *)(a1 + 120);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v91);
  v203 = (void *)objc_claimAutoreleasedReturnValue();
  v210[0] = v203;
  LODWORD(v92) = *(_DWORD *)(a1 + 124);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v92);
  v201 = (void *)objc_claimAutoreleasedReturnValue();
  v210[1] = v201;
  LODWORD(v93) = *(_DWORD *)(a1 + 128);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v93);
  v199 = (void *)objc_claimAutoreleasedReturnValue();
  v210[2] = v199;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v210, 3);
  v197 = (void *)objc_claimAutoreleasedReturnValue();
  v212[2] = v197;
  v211[3] = CFSTR("geometry_right_eye");
  LODWORD(v94) = *(_DWORD *)(a1 + 132);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v94);
  v195 = (void *)objc_claimAutoreleasedReturnValue();
  v209[0] = v195;
  LODWORD(v95) = *(_DWORD *)(a1 + 136);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v95);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  v209[1] = v96;
  LODWORD(v97) = *(_DWORD *)(a1 + 140);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v97);
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v209[2] = v98;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v209, 3);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  v212[3] = v99;
  v211[4] = CFSTR("left_eye_pitch");
  LODWORD(v100) = *(_DWORD *)(a1 + 144);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v100);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v212[4] = v101;
  v211[5] = CFSTR("left_eye_yaw");
  LODWORD(v102) = *(_DWORD *)(a1 + 148);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v102);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v212[5] = v103;
  v211[6] = CFSTR("right_eye_pitch");
  LODWORD(v104) = *(_DWORD *)(a1 + 152);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v104);
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  v212[6] = v105;
  v211[7] = CFSTR("right_eye_yaw");
  LODWORD(v106) = *(_DWORD *)(a1 + 156);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v106);
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  v212[7] = v107;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v212, v211, 8);
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v208, "addEntriesFromDictionary:", v108);

  v109 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDBytes:", a1 + 4);
  objc_msgSend(v109, "UUIDString");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v208, "setObject:forKeyedSubscript:", v110, CFSTR("track_index"));

  return v208;
}

- (NSData)packet
{
  return self->_packet;
}

- (unsigned)packetType
{
  return self->_packetType;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_packet, 0);
}

- (void)initWithBinarySampleRepresentation:(os_log_t)log metadata:timestamp:.cold.1(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl(&dword_216C97000, log, OS_LOG_TYPE_FAULT, "facial metrics packet is too small", v1, 2u);
}

- (void)initWithBinarySampleRepresentation:(uint64_t)a3 metadata:(os_log_t)log timestamp:.cold.2(uint8_t *buf, uint64_t a2, uint64_t a3, os_log_t log)
{
  *(_DWORD *)buf = 134218240;
  *(_QWORD *)(buf + 4) = a2;
  *((_WORD *)buf + 6) = 2048;
  *(_QWORD *)(buf + 14) = a3;
  _os_log_fault_impl(&dword_216C97000, log, OS_LOG_TYPE_FAULT, "invalid packet length: expected %zu, got %zu", buf, 0x16u);
}

- (void)initWithBinarySampleRepresentation:(uint8_t *)buf metadata:(int)a2 timestamp:(os_log_t)log .cold.3(uint8_t *buf, int a2, os_log_t log)
{
  *(_DWORD *)buf = 67109120;
  *((_DWORD *)buf + 1) = a2;
  _os_log_fault_impl(&dword_216C97000, log, OS_LOG_TYPE_FAULT, "unrecognized facial metrics packet type (%u)", buf, 8u);
}

@end
